* EvoSuite 1.0.2
* Going to generate test cases for class: org.apache.commons.lang.text.StrBuilder
* Starting client
* Connecting to master process on port 12016
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/Lang_59_tbar/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.lang.text.StrBuilder
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 648
  - Branch 517
  - Exception 0
  - MutationFactory 584
  - Output 1029
  - Method 107
  - MethodNoException 107
  - CBranchFitnessFactory 517
* Using seed 1585042497815
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%][Progress:====>                         15%] [Cov:>                                  0%][Progress:====>                         15%] [Cov:====>                              13%][Progress:====>                         16%] [Cov:>                                  0%][Progress:====>                         16%] [Cov:====>                              12%][Progress:=====>                        18%] [Cov:>                                  1%][Progress:=====>                        18%] [Cov:>                                  2%][Progress:=====>                        18%] [Cov:=====>                             15%][Progress:======>                       20%] [Cov:>                                  0%][Progress:======>                       20%] [Cov:====>                              12%][Progress:======>                       20%] [Cov:====>                              13%][Progress:======>                       20%] [Cov:====>                              14%][Progress:======>                       21%] [Cov:>                                  0%][Progress:======>                       21%] [Cov:====>                              12%][Progress:======>                       21%] [Cov:====>                              13%][Progress:======>                       21%] [Cov:====>                              14%][Progress:======>                       23%] [Cov:====>                              12%][Progress:======>                       23%] [Cov:====>                              14%][Progress:=======>                      25%] [Cov:>                                  0%][Progress:=======>                      25%] [Cov:>                                  1%][Progress:=======>                      25%] [Cov:====>                              13%][Progress:=======>                      26%] [Cov:>                                  0%][Progress:=======>                      26%] [Cov:====>                              12%][Progress:========>                     28%] [Cov:>                                  0%][Progress:========>                     28%] [Cov:====>                              12%][Progress:========>                     28%] [Cov:====>                              13%][Progress:=========>                    30%] [Cov:>                                  1%][Progress:=========>                    30%] [Cov:=>                                 3%][Progress:=========>                    30%] [Cov:=====>                             15%][Progress:=========>                    30%] [Cov:=====>                             16%][Progress:=========>                    30%] [Cov:=====>                             17%][Progress:=========>                    30%] [Cov:======>                            18%][Progress:=========>                    31%] [Cov:>                                  0%][Progress:=========>                    31%] [Cov:====>                              12%][Progress:=========>                    31%] [Cov:====>                              13%][Progress:=========>                    31%] [Cov:====>                              14%][Progress:=========>                    33%] [Cov:>                                  0%][Progress:=========>                    33%] [Cov:>                                  1%][Progress:=========>                    33%] [Cov:====>                              14%][Progress:=========>                    33%] [Cov:======>                            18%][Progress:==========>                   35%] [Cov:===>                               11%][Progress:==========>                   35%] [Cov:====>                              12%][Progress:==========>                   35%] [Cov:====>                              13%][Progress:==========>                   35%] [Cov:====>                              14%][Progress:==========>                   35%] [Cov:=====>                             15%][Progress:==========>                   35%] [Cov:=====>                             16%][Progress:==========>                   36%] [Cov:===========>                       34%][Progress:==========>                   36%] [Cov:============>                      35%][Progress:===========>                  38%] [Cov:===========>                       33%][Progress:===========>                  38%] [Cov:===========>                       34%][Progress:===========>                  38%] [Cov:============>                      35%][Progress:===========>                  38%] [Cov:============>                      36%][Progress:============>                 40%] [Cov:============>                      36%][Progress:============>                 41%] [Cov:===========>                       34%][Progress:============>                 41%] [Cov:============>                      35%][Progress:============>                 41%] [Cov:============>                      35%][Progress:============>                 41%] [Cov:============>                      36%][Progress:============>                 43%] [Cov:============>                      35%][Progress:============>                 43%] [Cov:============>                      36%][Progress:=============>                45%] [Cov:============>                      35%][Progress:=============>                45%] [Cov:============>                      36%][Progress:=============>                45%] [Cov:=============>                     38%][Progress:=============>                46%] [Cov:=============>                     38%][Progress:==============>               48%] [Cov:=============>                     38%][Progress:==============>               48%] [Cov:=============>                     39%][Progress:===============>              50%] [Cov:==============>                    40%][Progress:===============>              50%] [Cov:==============>                    41%][Progress:===============>              51%] [Cov:==============>                    40%][Progress:===============>              51%] [Cov:==============>                    41%][Progress:===============>              51%] [Cov:==============>                    42%][Progress:===============>              53%] [Cov:==============>                    41%][Progress:===============>              53%] [Cov:==============>                    42%][Progress:===============>              53%] [Cov:===============>                   43%][Progress:================>             55%] [Cov:==============>                    42%][Progress:================>             55%] [Cov:================>                  48%][Progress:================>             56%] [Cov:================>                  47%][Progress:================>             56%] [Cov:================>                  48%][Progress:================>             56%] [Cov:=================>                 49%][Progress:=================>            58%] [Cov:================>                  48%][Progress:=================>            58%] [Cov:=================>                 49%][Progress:==================>           60%] [Cov:================>                  48%][Progress:==================>           60%] [Cov:=================>                 49%][Progress:==================>           61%] [Cov:=================>                 50%][Progress:==================>           63%] [Cov:=================>                 50%][Progress:===================>          65%] [Cov:=================>                 50%][Progress:===================>          65%] [Cov:=================>                 51%][Progress:===================>          66%] [Cov:=================>                 50%][Progress:===================>          66%] [Cov:=================>                 51%][Progress:===================>          66%] [Cov:==================>                52%][Progress:====================>         68%] [Cov:==================>                52%][Progress:=====================>        70%] [Cov:=================>                 51%][Progress:=====================>        70%] [Cov:==================>                52%][Progress:=====================>        71%] [Cov:==================>                52%][Progress:=====================>        71%] [Cov:==================>                53%][Progress:=====================>        73%] [Cov:==================>                53%][Progress:=====================>        73%] [Cov:==================>                54%][Progress:======================>       75%] [Cov:==================>                53%][Progress:======================>       75%] [Cov:==================>                54%][Progress:======================>       76%] [Cov:==================>                54%][Progress:=======================>      78%] [Cov:==================>                54%][Progress:========================>     80%] [Cov:==================>                53%][Progress:========================>     80%] [Cov:==================>                54%][Progress:========================>     80%] [Cov:===================>               56%][Progress:========================>     81%] [Cov:===================>               55%][Progress:========================>     81%] [Cov:===================>               56%][Progress:========================>     83%] [Cov:===================>               56%][Progress:========================>     83%] [Cov:===================>               57%][Progress:========================>     83%] [Cov:===================>               57%][Progress:=========================>    85%] [Cov:===================>               57%][Progress:=========================>    86%] [Cov:===================>               57%][Progress:==========================>   88%] [Cov:===================>               57%][Progress:==========================>   88%] [Cov:====================>              58%][Progress:===========================>  90%] [Cov:===================>               57%][Progress:===========================>  90%] [Cov:====================>              58%][Progress:===========================>  91%] [Cov:===================>               57%][Progress:===========================>  91%] [Cov:====================>              58%][Progress:===========================>  91%] [Cov:====================>              59%][Progress:===========================>  93%] [Cov:====================>              58%][Progress:===========================>  93%] [Cov:====================>              59%][Progress:===========================>  93%] [Cov:====================>              59%][Progress:============================> 95%] [Cov:====================>              58%][Progress:============================> 95%] [Cov:====================>              59%][Progress:============================> 95%] [Cov:====================>              59%][Progress:============================> 96%] [Cov:====================>              59%][Progress:============================> 96%] [Cov:====================>              59%][Progress:============================> 96%] [Cov:=====================>             60%][Progress:=============================>98%] [Cov:====================>              59%][Progress:=============================>98%] [Cov:=====================>             60%][Progress:==============================100%] [Cov:=====================>             60%][Progress:==============================100%] [Cov:=====================>             60%][Progress:==============================100%] [Cov:=====================>             61%][Progress:==============================100%] [Cov:=====================>             60%][Progress:==============================100%] [Cov:=====================>             61%][Progress:==============================100%] [Cov:=======================>           66%]
* Search finished after 65s and 23 generations, 15057 statements, best individual has fitness: 2851.470886704402
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 74%
* Total number of goals: 648
* Number of covered goals: 478
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 67%
* Total number of goals: 517
* Number of covered goals: 346
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 27
* Number of covered goals: 27
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 56%
* Total number of goals: 584
* Number of covered goals: 325
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 4%
* Total number of goals: 1029
* Number of covered goals: 45
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 95%
* Total number of goals: 107
* Number of covered goals: 102
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 89%
* Total number of goals: 107
* Number of covered goals: 95
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 63%
* Total number of goals: 517
* Number of covered goals: 328
* Generated 192 tests with total length 497
* Resulting test suite's coverage: 66% (average coverage for all fitness functions)
* Compiling and checking tests
[MASTER] 17:37:45.806 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Exception was not thrown in org.apache.commons.lang.text.StrBuilder
[MASTER] 17:37:45.806 [logback-1] WARN  JUnitAnalyzer - Failing test: StrBuilder strBuilder0 = new StrBuilder(0);
strBuilder0.size = 39;
StrBuilder strBuilder1 = strBuilder0.insert(0, 'W');

[MASTER] 17:37:50.099 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test163 -> class java.lang.AssertionError: Exception was not thrown in org.apache.commons.lang.text.StrBuilder
[MASTER] 17:37:50.099 [logback-1] WARN  JUnitAnalyzer - Failing test: StrBuilder strBuilder0 = new StrBuilder(0);
strBuilder0.size = 39;
StrBuilder strBuilder1 = strBuilder0.insert(0, 'W');

[MASTER] 17:37:53.324 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test028 -> class java.lang.AssertionError: Exception was not thrown in org.apache.commons.lang.text.StrBuilder
[MASTER] 17:37:53.324 [logback-1] WARN  JUnitAnalyzer - Failing test: StrBuilder strBuilder0 = new StrBuilder(0);
strBuilder0.size = 39;
StrBuilder strBuilder1 = strBuilder0.insert(0, 'W');

* Writing JUnit test case 'StrBuilder_ESTest' to evosuite-tests
* Done!

* Computation finished
