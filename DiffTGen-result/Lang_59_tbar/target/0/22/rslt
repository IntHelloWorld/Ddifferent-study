* EvoSuite 1.0.2
* Going to generate test cases for class: org.apache.commons.lang.text.StrBuilder
* Starting client
* Connecting to master process on port 20740
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/Lang_59_tbar/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.lang.text.StrBuilder
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 648
  - Branch 517
  - Exception 0
  - MutationFactory 584
  - Output 1029
  - Method 107
  - MethodNoException 107
  - CBranchFitnessFactory 517
* Using seed 1585042897253
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%][Progress:===>                          10%] [Cov:>                                  0%][Progress:===>                          10%] [Cov:====>                              12%][Progress:====>                         15%] [Cov:>                                  1%][Progress:====>                         15%] [Cov:>                                  2%][Progress:====>                         16%] [Cov:=====>                             15%][Progress:=====>                        18%] [Cov:====>                              13%][Progress:======>                       20%] [Cov:====>                              13%][Progress:======>                       21%] [Cov:====>                              14%][Progress:=======>                      25%] [Cov:>                                  0%][Progress:=======>                      25%] [Cov:====>                              13%][Progress:=======>                      26%] [Cov:>                                  1%][Progress:=======>                      26%] [Cov:====>                              14%][Progress:=========>                    31%] [Cov:>                                  1%][Progress:=========>                    31%] [Cov:>                                  2%][Progress:=========>                    31%] [Cov:====>                              14%][Progress:=========>                    33%] [Cov:>                                  0%][Progress:=========>                    33%] [Cov:====>                              12%][Progress:=========>                    33%] [Cov:====>                              13%][Progress:=========>                    33%] [Cov:====>                              14%][Progress:==========>                   35%] [Cov:>                                  1%][Progress:==========>                   35%] [Cov:>                                  2%][Progress:==========>                   35%] [Cov:=====>                             15%][Progress:==========>                   35%] [Cov:=====>                             16%][Progress:==========>                   35%] [Cov:=====>                             17%][Progress:==========>                   35%] [Cov:====>                              14%][Progress:==========>                   35%] [Cov:=====>                             15%][Progress:==========>                   36%] [Cov:===>                               11%][Progress:==========>                   36%] [Cov:====>                              12%][Progress:==========>                   36%] [Cov:=====>                             15%][Progress:==========>                   36%] [Cov:=====>                             16%][Progress:==========>                   36%] [Cov:=====>                             17%][Progress:==========>                   36%] [Cov:==========>                        30%][Progress:==========>                   36%] [Cov:==========>                        31%][Progress:===========>                  38%] [Cov:==========>                        30%][Progress:===========>                  38%] [Cov:==========>                        31%][Progress:===========>                  38%] [Cov:==========>                        30%][Progress:===========>                  38%] [Cov:==========>                        31%][Progress:============>                 40%] [Cov:==========>                        30%][Progress:============>                 40%] [Cov:==========>                        31%][Progress:============>                 41%] [Cov:==========>                        31%][Progress:============>                 41%] [Cov:==========>                        31%][Progress:============>                 41%] [Cov:===========>                       32%][Progress:=============>                46%] [Cov:===========>                       32%][Progress:=============>                46%] [Cov:===========>                       32%][Progress:==============>               48%] [Cov:==========>                        31%][Progress:==============>               48%] [Cov:===========>                       32%][Progress:==============>               48%] [Cov:===========>                       33%][Progress:===============>              50%] [Cov:===========>                       32%][Progress:===============>              50%] [Cov:============>                      35%][Progress:===============>              50%] [Cov:============>                      36%][Progress:===============>              51%] [Cov:============>                      36%][Progress:===============>              51%] [Cov:============>                      37%][Progress:===============>              51%] [Cov:=============>                     39%][Progress:===============>              53%] [Cov:=============>                     39%][Progress:================>             55%] [Cov:==============>                    41%][Progress:================>             56%] [Cov:==============>                    42%][Progress:================>             56%] [Cov:===============>                   43%][Progress:=================>            58%] [Cov:===============>                   43%][Progress:==================>           60%] [Cov:==============>                    42%][Progress:==================>           60%] [Cov:===============>                   43%][Progress:==================>           60%] [Cov:===============>                   43%][Progress:==================>           61%] [Cov:===============>                   43%][Progress:==================>           61%] [Cov:===============>                   44%][Progress:==================>           61%] [Cov:===============>                   44%][Progress:==================>           63%] [Cov:===============>                   44%][Progress:==================>           63%] [Cov:===============>                   44%][Progress:====================>         68%] [Cov:===============>                   44%][Progress:====================>         68%] [Cov:===============>                   45%][Progress:=====================>        70%] [Cov:===============>                   44%][Progress:=====================>        70%] [Cov:===============>                   45%][Progress:=====================>        70%] [Cov:================>                  46%][Progress:=====================>        71%] [Cov:===============>                   45%][Progress:=====================>        71%] [Cov:================>                  46%][Progress:=====================>        71%] [Cov:================>                  46%][Progress:=====================>        71%] [Cov:================>                  47%][Progress:=====================>        73%] [Cov:================>                  46%][Progress:=====================>        73%] [Cov:================>                  48%][Progress:======================>       75%] [Cov:================>                  47%][Progress:======================>       75%] [Cov:================>                  48%][Progress:======================>       75%] [Cov:================>                  48%][Progress:======================>       76%] [Cov:================>                  48%][Progress:======================>       76%] [Cov:=================>                 49%][Progress:=======================>      78%] [Cov:================>                  48%][Progress:=======================>      78%] [Cov:=================>                 49%][Progress:=======================>      78%] [Cov:=================>                 50%][Progress:========================>     80%] [Cov:=================>                 49%][Progress:========================>     80%] [Cov:=================>                 50%][Progress:========================>     81%] [Cov:=================>                 49%][Progress:========================>     81%] [Cov:=================>                 50%][Progress:========================>     81%] [Cov:=================>                 51%][Progress:========================>     81%] [Cov:==================>                52%][Progress:========================>     83%] [Cov:=================>                 51%][Progress:========================>     83%] [Cov:==================>                52%][Progress:========================>     83%] [Cov:==================>                53%][Progress:=========================>    85%] [Cov:==================>                52%][Progress:=========================>    85%] [Cov:==================>                53%][Progress:=========================>    86%] [Cov:==================>                52%][Progress:=========================>    86%] [Cov:==================>                53%][Progress:=========================>    86%] [Cov:==================>                53%][Progress:==========================>   88%] [Cov:==================>                53%][Progress:==========================>   88%] [Cov:===================>               55%][Progress:===========================>  90%] [Cov:===================>               55%][Progress:===========================>  90%] [Cov:===================>               56%][Progress:===========================>  91%] [Cov:===================>               55%][Progress:===========================>  93%] [Cov:===================>               55%][Progress:===========================>  93%] [Cov:===================>               56%][Progress:===========================>  93%] [Cov:===================>               56%][Progress:============================> 95%] [Cov:===================>               56%][Progress:============================> 95%] [Cov:===================>               57%][Progress:============================> 96%] [Cov:===================>               56%][Progress:============================> 96%] [Cov:===================>               57%][Progress:=============================>98%] [Cov:===================>               56%][Progress:=============================>98%] [Cov:===================>               57%][Progress:=============================>98%] [Cov:===================>               57%][Progress:==============================100%] [Cov:===================>               56%][Progress:==============================100%] [Cov:===================>               57%][Progress:==============================100%] [Cov:===================>               57%][Progress:==============================100%] [Cov:===================>               57%][Progress:==============================100%] [Cov:===================>               57%][Progress:==============================100%] [Cov:=====================>             61%]
* Search finished after 65s and 29 generations, 15128 statements, best individual has fitness: 2976.880815802556
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 74%
* Total number of goals: 648
* Number of covered goals: 480
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 66%
* Total number of goals: 517
* Number of covered goals: 341
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 32
* Number of covered goals: 32
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 54%
* Total number of goals: 584
* Number of covered goals: 318
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 3%
* Total number of goals: 1029
* Number of covered goals: 33
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 88%
* Total number of goals: 107
* Number of covered goals: 94
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 77%
* Total number of goals: 107
* Number of covered goals: 82
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 61%
* Total number of goals: 517
* Number of covered goals: 313
* Generated 168 tests with total length 448
* Resulting test suite's coverage: 62% (average coverage for all fitness functions)
* Compiling and checking tests
[MASTER] 17:44:25.063 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Exception was not thrown in org.apache.commons.lang.text.StrBuilder
[MASTER] 17:44:25.063 [logback-1] WARN  JUnitAnalyzer - Failing test: StrBuilder strBuilder0 = new StrBuilder("ar-rHn7F!");
char[] charArray0 = new char[2];
strBuilder0.buffer = charArray0;
StrBuilder strBuilder1 = strBuilder0.append(2);

[MASTER] 17:44:25.106 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Exception was not thrown in org.apache.commons.lang.text.StrBuilder
[MASTER] 17:44:25.107 [logback-1] WARN  JUnitAnalyzer - Failing test: StrBuilder strBuilder0 = new StrBuilder();
strBuilder0.size = 2736;
char[] charArray0 = new char[3];
StrBuilder strBuilder1 = strBuilder0.append(charArray0);

[MASTER] 17:44:29.609 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test140 -> class java.lang.AssertionError: Exception was not thrown in org.apache.commons.lang.text.StrBuilder
[MASTER] 17:44:29.610 [logback-1] WARN  JUnitAnalyzer - Failing test: StrBuilder strBuilder0 = new StrBuilder("ar-rHn7F!");
char[] charArray0 = new char[2];
strBuilder0.buffer = charArray0;
StrBuilder strBuilder1 = strBuilder0.append(2);

[MASTER] 17:44:29.610 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test141 -> class java.lang.AssertionError: Exception was not thrown in org.apache.commons.lang.text.StrBuilder
[MASTER] 17:44:29.613 [logback-1] WARN  JUnitAnalyzer - Failing test: StrBuilder strBuilder0 = new StrBuilder();
strBuilder0.size = 2736;
char[] charArray0 = new char[3];
StrBuilder strBuilder1 = strBuilder0.append(charArray0);

[MASTER] 17:44:31.725 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test026 -> class java.lang.AssertionError: Exception was not thrown in org.apache.commons.lang.text.StrBuilder
[MASTER] 17:44:31.725 [logback-1] WARN  JUnitAnalyzer - Failing test: StrBuilder strBuilder0 = new StrBuilder();
strBuilder0.size = 2736;
char[] charArray0 = new char[3];
StrBuilder strBuilder1 = strBuilder0.append(charArray0);

[MASTER] 17:44:31.726 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test027 -> class java.lang.AssertionError: Exception was not thrown in org.apache.commons.lang.text.StrBuilder
[MASTER] 17:44:31.726 [logback-1] WARN  JUnitAnalyzer - Failing test: StrBuilder strBuilder0 = new StrBuilder("ar-rHn7F!");
char[] charArray0 = new char[2];
strBuilder0.buffer = charArray0;
StrBuilder strBuilder1 = strBuilder0.append(2);

* Writing JUnit test case 'StrBuilder_ESTest' to evosuite-tests
* Done!

* Computation finished
