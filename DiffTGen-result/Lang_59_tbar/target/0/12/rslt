* EvoSuite 1.0.2
* Going to generate test cases for class: org.apache.commons.lang.text.StrBuilder
* Starting client
* Connecting to master process on port 14643
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/Lang_59_tbar/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.lang.text.StrBuilder
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 648
  - Branch 517
  - Exception 0
  - MutationFactory 584
  - Output 1029
  - Method 107
  - MethodNoException 107
  - CBranchFitnessFactory 517
* Using seed 1585042718839
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%][Progress:===>                          13%] [Cov:>                                  0%][Progress:===>                          13%] [Cov:====>                              13%][Progress:====>                         16%] [Cov:>                                  1%][Progress:====>                         16%] [Cov:====>                              14%][Progress:=====>                        18%] [Cov:====>                              14%][Progress:======>                       20%] [Cov:====>                              13%][Progress:======>                       20%] [Cov:====>                              14%][Progress:======>                       20%] [Cov:=====>                             15%][Progress:======>                       21%] [Cov:>                                  0%][Progress:======>                       21%] [Cov:====>                              13%][Progress:======>                       23%] [Cov:>                                  0%][Progress:======>                       23%] [Cov:====>                              12%][Progress:=======>                      25%] [Cov:>                                  0%][Progress:=======>                      25%] [Cov:====>                              12%][Progress:=======>                      25%] [Cov:====>                              13%][Progress:=======>                      26%] [Cov:>                                  0%][Progress:=======>                      26%] [Cov:====>                              12%][Progress:=======>                      26%] [Cov:====>                              14%][Progress:========>                     28%] [Cov:>                                  0%][Progress:========>                     28%] [Cov:====>                              12%][Progress:========>                     28%] [Cov:====>                              13%][Progress:========>                     28%] [Cov:====>                              14%][Progress:=========>                    30%] [Cov:====>                              13%][Progress:=========>                    30%] [Cov:====>                              13%][Progress:=========>                    31%] [Cov:===>                               11%][Progress:=========>                    31%] [Cov:====>                              12%][Progress:=========>                    31%] [Cov:====>                              13%][Progress:=========>                    31%] [Cov:====>                              14%][Progress:=========>                    31%] [Cov:=====>                             15%][Progress:=========>                    33%] [Cov:====>                              12%][Progress:=========>                    33%] [Cov:====>                              13%][Progress:=========>                    33%] [Cov:=========>                         27%][Progress:=========>                    33%] [Cov:=========>                         28%][Progress:==========>                   35%] [Cov:=========>                         27%][Progress:==========>                   35%] [Cov:=========>                         28%][Progress:==========>                   36%] [Cov:=========>                         27%][Progress:==========>                   36%] [Cov:=========>                         28%][Progress:==========>                   36%] [Cov:==========>                        29%][Progress:===========>                  38%] [Cov:==========>                        29%][Progress:===========>                  38%] [Cov:==========>                        29%][Progress:===========>                  38%] [Cov:==========>                        30%][Progress:============>                 40%] [Cov:==========>                        29%][Progress:============>                 40%] [Cov:==========>                        30%][Progress:============>                 41%] [Cov:==========>                        29%][Progress:============>                 43%] [Cov:==========>                        29%][Progress:============>                 43%] [Cov:==========>                        30%][Progress:============>                 43%] [Cov:==========>                        31%][Progress:============>                 43%] [Cov:===========>                       32%][Progress:============>                 43%] [Cov:===========>                       33%][Progress:=============>                45%] [Cov:===========>                       33%][Progress:==============>               48%] [Cov:===========>                       33%][Progress:==============>               48%] [Cov:===========>                       34%][Progress:===============>              50%] [Cov:===========>                       32%][Progress:===============>              50%] [Cov:===========>                       33%][Progress:===============>              50%] [Cov:===========>                       34%][Progress:===============>              50%] [Cov:============>                      37%][Progress:===============>              51%] [Cov:============>                      37%][Progress:===============>              53%] [Cov:============>                      36%][Progress:===============>              53%] [Cov:============>                      37%][Progress:================>             55%] [Cov:============>                      36%][Progress:================>             55%] [Cov:============>                      37%][Progress:================>             55%] [Cov:==============>                    41%][Progress:================>             56%] [Cov:==============>                    40%][Progress:================>             56%] [Cov:==============>                    41%][Progress:=================>            58%] [Cov:==============>                    41%][Progress:==================>           60%] [Cov:==============>                    40%][Progress:==================>           60%] [Cov:==============>                    41%][Progress:==================>           60%] [Cov:===============>                   45%][Progress:==================>           61%] [Cov:===============>                   44%][Progress:==================>           61%] [Cov:===============>                   45%][Progress:==================>           61%] [Cov:================>                  46%][Progress:==================>           63%] [Cov:===============>                   45%][Progress:==================>           63%] [Cov:================>                  46%][Progress:===================>          65%] [Cov:================>                  46%][Progress:===================>          65%] [Cov:================>                  47%][Progress:====================>         68%] [Cov:================>                  46%][Progress:====================>         68%] [Cov:================>                  47%][Progress:=====================>        71%] [Cov:================>                  46%][Progress:=====================>        71%] [Cov:================>                  47%][Progress:======================>       75%] [Cov:================>                  46%][Progress:======================>       75%] [Cov:================>                  47%][Progress:======================>       76%] [Cov:================>                  46%][Progress:======================>       76%] [Cov:================>                  47%][Progress:======================>       76%] [Cov:================>                  48%][Progress:=======================>      78%] [Cov:================>                  48%][Progress:========================>     80%] [Cov:================>                  48%][Progress:========================>     81%] [Cov:================>                  48%][Progress:========================>     83%] [Cov:================>                  48%][Progress:=========================>    85%] [Cov:================>                  48%][Progress:=========================>    86%] [Cov:================>                  48%][Progress:==========================>   88%] [Cov:================>                  48%][Progress:==========================>   88%] [Cov:=================>                 49%][Progress:===========================>  90%] [Cov:=================>                 49%][Progress:===========================>  91%] [Cov:=================>                 49%][Progress:===========================>  93%] [Cov:=================>                 49%][Progress:============================> 95%] [Cov:=================>                 49%][Progress:============================> 96%] [Cov:=================>                 49%][Progress:=============================>98%] [Cov:=================>                 49%][Progress:==============================100%] [Cov:=================>                 49%][Progress:==============================100%] [Cov:=================>                 49%][Progress:==============================100%] [Cov:=================>                 50%][Progress:==============================100%] [Cov:===================>               55%]
* Search finished after 65s and 11 generations, 8556 statements, best individual has fitness: 5177.6623385235025
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 63%
* Total number of goals: 648
* Number of covered goals: 406
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 57%
* Total number of goals: 517
* Number of covered goals: 297
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 27
* Number of covered goals: 27
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 45%
* Total number of goals: 584
* Number of covered goals: 264
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 3%
* Total number of goals: 1029
* Number of covered goals: 35
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 87%
* Total number of goals: 107
* Number of covered goals: 93
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 69%
* Total number of goals: 107
* Number of covered goals: 74
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 51%
* Total number of goals: 517
* Number of covered goals: 263
* Generated 148 tests with total length 445
* Resulting test suite's coverage: 55% (average coverage for all fitness functions)
* Compiling and checking tests
[MASTER] 17:40:58.682 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Requested array size exceeds VM limit
[MASTER] 17:40:58.682 [logback-1] WARN  JUnitAnalyzer - Failing test: int int0 = Integer.MAX_VALUE;
StrBuilder strBuilder0 = new StrBuilder(int0);
String string0 = "D";
StrBuilder strBuilder1 = strBuilder0.replace(int0, int0, string0);

* Writing JUnit test case 'StrBuilder_ESTest' to evosuite-tests
* Done!

* Computation finished
