* EvoSuite 1.0.2
* Going to generate test cases for class: org.apache.commons.lang.text.StrBuilder
* Starting client
* Connecting to master process on port 10263
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/Lang_59_tbar/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.lang.text.StrBuilder
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 648
  - Branch 517
  - Exception 0
  - MutationFactory 584
  - Output 1029
  - Method 107
  - MethodNoException 107
  - CBranchFitnessFactory 517
* Using seed 1585043084101
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%][Progress:==>                           8%] [Cov:>                                  1%][Progress:==>                           8%] [Cov:>                                  2%][Progress:==>                           8%] [Cov:====>                              14%][Progress:===>                          10%] [Cov:>                                  0%][Progress:===>                          10%] [Cov:====>                              13%][Progress:===>                          11%] [Cov:====>                              12%][Progress:===>                          13%] [Cov:====>                              12%][Progress:===>                          13%] [Cov:====>                              13%][Progress:====>                         15%] [Cov:>                                  0%][Progress:====>                         15%] [Cov:====>                              12%][Progress:====>                         15%] [Cov:====>                              13%][Progress:====>                         15%] [Cov:====>                              14%][Progress:====>                         16%] [Cov:>                                  0%][Progress:====>                         16%] [Cov:====>                              12%][Progress:====>                         16%] [Cov:====>                              13%][Progress:======>                       23%] [Cov:>                                  0%][Progress:=======>                      26%] [Cov:>                                  0%][Progress:=======>                      26%] [Cov:====>                              13%][Progress:========>                     28%] [Cov:>                                  1%][Progress:========>                     28%] [Cov:=>                                 3%][Progress:========>                     28%] [Cov:=====>                             15%][Progress:========>                     28%] [Cov:=====>                             16%][Progress:=========>                    30%] [Cov:>                                  1%][Progress:=========>                    30%] [Cov:====>                              14%][Progress:=========>                    31%] [Cov:>                                  0%][Progress:=========>                    31%] [Cov:====>                              12%][Progress:=========>                    31%] [Cov:====>                              14%][Progress:==========>                   36%] [Cov:>                                  1%][Progress:==========>                   36%] [Cov:====>                              13%][Progress:===========>                  38%] [Cov:>                                  0%][Progress:===========>                  38%] [Cov:>                                  1%][Progress:===========>                  38%] [Cov:====>                              13%][Progress:===========>                  38%] [Cov:====>                              14%][Progress:===========>                  38%] [Cov:=====>                             15%][Progress:===========>                  38%] [Cov:=====>                             16%][Progress:============>                 40%] [Cov:====>                              12%][Progress:============>                 41%] [Cov:====>                              14%][Progress:============>                 41%] [Cov:=====>                             15%][Progress:============>                 41%] [Cov:=====>                             16%][Progress:============>                 41%] [Cov:=====>                             17%][Progress:============>                 41%] [Cov:======>                            18%][Progress:============>                 41%] [Cov:===========>                       34%][Progress:============>                 43%] [Cov:===========>                       33%][Progress:=============>                45%] [Cov:===========>                       34%][Progress:=============>                45%] [Cov:============>                      35%][Progress:=============>                45%] [Cov:============>                      36%][Progress:===============>              50%] [Cov:===========>                       34%][Progress:===============>              50%] [Cov:============>                      35%][Progress:===============>              50%] [Cov:============>                      36%][Progress:===============>              50%] [Cov:=============>                     38%][Progress:===============>              51%] [Cov:=============>                     38%][Progress:===============>              51%] [Cov:=============>                     39%][Progress:===============>              53%] [Cov:=============>                     38%][Progress:===============>              53%] [Cov:=============>                     39%][Progress:===============>              53%] [Cov:==============>                    40%][Progress:================>             55%] [Cov:=============>                     38%][Progress:================>             55%] [Cov:=============>                     39%][Progress:================>             55%] [Cov:==============>                    40%][Progress:================>             56%] [Cov:=============>                     39%][Progress:================>             56%] [Cov:==============>                    40%][Progress:================>             56%] [Cov:==============>                    41%][Progress:=================>            58%] [Cov:=============>                     39%][Progress:=================>            58%] [Cov:==============>                    41%][Progress:==================>           60%] [Cov:===============>                   44%][Progress:==================>           61%] [Cov:===============>                   44%][Progress:==================>           61%] [Cov:===============>                   44%][Progress:==================>           63%] [Cov:===============>                   44%][Progress:==================>           63%] [Cov:===============>                   45%][Progress:===================>          65%] [Cov:===============>                   44%][Progress:===================>          66%] [Cov:===============>                   44%][Progress:===================>          66%] [Cov:===============>                   45%][Progress:===================>          66%] [Cov:================>                  47%][Progress:====================>         68%] [Cov:================>                  46%][Progress:====================>         68%] [Cov:================>                  47%][Progress:=====================>        70%] [Cov:================>                  46%][Progress:=====================>        70%] [Cov:================>                  47%][Progress:=====================>        71%] [Cov:================>                  46%][Progress:=====================>        71%] [Cov:================>                  47%][Progress:=====================>        73%] [Cov:================>                  46%][Progress:=====================>        73%] [Cov:================>                  47%][Progress:======================>       75%] [Cov:================>                  46%][Progress:======================>       75%] [Cov:================>                  47%][Progress:======================>       76%] [Cov:================>                  47%][Progress:======================>       76%] [Cov:================>                  48%][Progress:=======================>      78%] [Cov:================>                  48%][Progress:=======================>      78%] [Cov:=================>                 49%][Progress:========================>     80%] [Cov:================>                  48%][Progress:========================>     81%] [Cov:================>                  48%][Progress:========================>     83%] [Cov:================>                  48%][Progress:=========================>    85%] [Cov:================>                  48%][Progress:=========================>    85%] [Cov:=================>                 50%][Progress:=========================>    86%] [Cov:=================>                 49%][Progress:=========================>    86%] [Cov:=================>                 50%][Progress:==========================>   88%] [Cov:=================>                 49%][Progress:==========================>   88%] [Cov:=================>                 50%][Progress:===========================>  90%] [Cov:=================>                 49%][Progress:===========================>  90%] [Cov:=================>                 50%][Progress:===========================>  91%] [Cov:=================>                 49%][Progress:===========================>  91%] [Cov:=================>                 50%][Progress:===========================>  93%] [Cov:=================>                 49%][Progress:===========================>  93%] [Cov:=================>                 50%][Progress:============================> 95%] [Cov:=================>                 49%][Progress:============================> 95%] [Cov:=================>                 50%][Progress:============================> 95%] [Cov:=================>                 51%][Progress:============================> 96%] [Cov:=================>                 51%][Progress:=============================>98%] [Cov:=================>                 51%][Progress:==============================100%] [Cov:=================>                 51%][Progress:==============================100%] [Cov:=================>                 51%][Progress:==============================100%] [Cov:==================>                52%][MASTER] 17:46:07.120 [logback-1] WARN  TimeController - Operation 'update from archive' took too long: 9989ms
[Progress:==============================100%] [Cov:===================>               55%]
* Search finished after 72s and 11 generations, 6529 statements, best individual has fitness: 3357.889797377084
[MASTER] 17:46:07.457 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 11 seconds more than allowed.
* Minimizing test suite
[MASTER] 17:47:18.364 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 66%
* Total number of goals: 648
* Number of covered goals: 425
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 57%
* Total number of goals: 517
* Number of covered goals: 294
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 24
* Number of covered goals: 24
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 46%
* Total number of goals: 584
* Number of covered goals: 267
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 3%
* Total number of goals: 1029
* Number of covered goals: 34
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 88%
* Total number of goals: 107
* Number of covered goals: 94
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 77%
* Total number of goals: 107
* Number of covered goals: 82
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 50%
* Total number of goals: 517
* Number of covered goals: 260
* Generated 73 tests with total length 862
* Resulting test suite's coverage: 56% (average coverage for all fitness functions)
* Compiling and checking tests
* Writing JUnit test case 'StrBuilder_ESTest' to evosuite-tests
* Done!

* Computation finished
