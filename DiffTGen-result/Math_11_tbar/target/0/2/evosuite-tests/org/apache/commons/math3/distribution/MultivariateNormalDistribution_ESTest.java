/*
 * This file was automatically generated by EvoSuite
 * Mon Mar 23 06:55:44 GMT 2020
 */

package org.apache.commons.math3.distribution;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.distribution.MultivariateNormalDistribution;
import org.apache.commons.math3.exception.MathUnsupportedOperationException;
import org.apache.commons.math3.linear.Array2DRowRealMatrix;
import org.apache.commons.math3.random.JDKRandomGenerator;
import org.apache.commons.math3.random.RandomGenerator;
import org.apache.commons.math3.random.Well19937a;
import org.apache.commons.math3.random.Well19937c;
import org.apache.commons.math3.random.Well512a;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class MultivariateNormalDistribution_ESTest extends MultivariateNormalDistribution_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 14 covered goals:
   * Goal 1. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>([D[[D)V: root-Branch
   * Goal 2. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I17 Branch 1 IF_ICMPEQ L107 - false
   * Goal 3. <init>([D[[D)V_org.apache.commons.math3.exception.MathIllegalNumberException_DECLARED
   * Goal 4. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 105
   * Goal 5. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 107
   * Goal 6. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 108
   * Goal 7. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>([D[[D)V
   * Goal 8. Weak Mutation 0: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - InsertUnaryOp Negation
   * Goal 9. Weak Mutation 1: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - InsertUnaryOp IINC 1
   * Goal 10. Weak Mutation 2: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - InsertUnaryOp IINC -1
   * Goal 11. Weak Mutation 5: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - ReplaceComparisonOperator == -> <=
   * Goal 12. Weak Mutation 6: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:108 - InsertUnaryOp Negation
   * Goal 13. Weak Mutation 7: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:108 - InsertUnaryOp IINC 1
   * Goal 14. Weak Mutation 8: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:108 - InsertUnaryOp IINC -1
   */

  @Test
  public void test00()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      double[][] doubleArray1 = new double[4][5];
      MultivariateNormalDistribution multivariateNormalDistribution0 = null;
      try {
        multivariateNormalDistribution0 = new MultivariateNormalDistribution(doubleArray0, doubleArray1);
      } catch(IllegalArgumentException e) {
         //
         // 4 != 8
         //
         assertThrownBy("org.apache.commons.math3.distribution.MultivariateNormalDistribution", e);
      }
  }

  //Test case number: 1
  /*
   * 87 covered goals:
   * Goal 1. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I17 Branch 1 IF_ICMPEQ L107 - true
   * Goal 2. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I34 Branch 2 IF_ICMPGE L111 - true
   * Goal 3. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I34 Branch 2 IF_ICMPGE L111 - false
   * Goal 4. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I42 Branch 3 IF_ICMPEQ L112 - true
   * Goal 5. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I106 Branch 4 IF_ICMPGE L132 - true
   * Goal 6. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I106 Branch 4 IF_ICMPGE L132 - false
   * Goal 7. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I114 Branch 5 IFGE L133 - true
   * Goal 8. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I145 Branch 6 IF_ICMPGE L140 - true
   * Goal 9. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I145 Branch 6 IF_ICMPGE L140 - false
   * Goal 10. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I175 Branch 7 IF_ICMPGE L148 - true
   * Goal 11. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I175 Branch 7 IF_ICMPGE L148 - false
   * Goal 12. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I190 Branch 8 IF_ICMPGE L150 - true
   * Goal 13. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I190 Branch 8 IF_ICMPGE L150 - false
   * Goal 14. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I17 Branch 1 IF_ICMPEQ L107 - true in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 15. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I34 Branch 2 IF_ICMPGE L111 - false in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 16. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I34 Branch 2 IF_ICMPGE L111 - true in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 17. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I42 Branch 3 IF_ICMPEQ L112 - true in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 18. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I106 Branch 4 IF_ICMPGE L132 - true in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 19. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I106 Branch 4 IF_ICMPGE L132 - false in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 20. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I114 Branch 5 IFGE L133 - true in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 21. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I145 Branch 6 IF_ICMPGE L140 - false in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 22. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I145 Branch 6 IF_ICMPGE L140 - true in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 23. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I175 Branch 7 IF_ICMPGE L148 - false in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 24. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I175 Branch 7 IF_ICMPGE L148 - true in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 25. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I190 Branch 8 IF_ICMPGE L150 - true in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 26. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I190 Branch 8 IF_ICMPGE L150 - false in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 27. density([D)D_java.lang.NullPointerException_IMPLICIT
   * Goal 28. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 105
   * Goal 29. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 107
   * Goal 30. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 111
   * Goal 31. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 112
   * Goal 32. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 117
   * Goal 33. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 119
   * Goal 34. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 122
   * Goal 35. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 125
   * Goal 36. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 127
   * Goal 37. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 130
   * Goal 38. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 132
   * Goal 39. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 133
   * Goal 40. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 139
   * Goal 41. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 140
   * Goal 42. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 141
   * Goal 43. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 142
   * Goal 44. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 145
   * Goal 45. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 148
   * Goal 46. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 149
   * Goal 47. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 150
   * Goal 48. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 151
   * Goal 49. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 155
   * Goal 50. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 156
   * Goal 51. org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D: Line 178
   * Goal 52. org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D: Line 179
   * Goal 53. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 54. org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D
   * Goal 55. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 56. Weak Mutation 0: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - InsertUnaryOp Negation
   * Goal 57. Weak Mutation 1: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - InsertUnaryOp IINC 1
   * Goal 58. Weak Mutation 2: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - InsertUnaryOp IINC -1
   * Goal 59. Weak Mutation 3: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - ReplaceComparisonOperator == -> -2
   * Goal 60. Weak Mutation 9: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - ReplaceConstant - 0 -> 1
   * Goal 61. Weak Mutation 10: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp Negation
   * Goal 62. Weak Mutation 11: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp IINC 1
   * Goal 63. Weak Mutation 12: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp IINC -1
   * Goal 64. Weak Mutation 13: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp Negation
   * Goal 65. Weak Mutation 14: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp IINC 1
   * Goal 66. Weak Mutation 15: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp IINC -1
   * Goal 67. Weak Mutation 16: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - ReplaceComparisonOperator >= -> -1
   * Goal 68. Weak Mutation 17: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - ReplaceComparisonOperator >= -> >
   * Goal 69. Weak Mutation 19: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp Negation
   * Goal 70. Weak Mutation 20: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp IINC 1
   * Goal 71. Weak Mutation 21: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp IINC -1
   * Goal 72. Weak Mutation 22: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp Negation
   * Goal 73. Weak Mutation 23: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp IINC 1
   * Goal 74. Weak Mutation 24: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp IINC -1
   * Goal 75. Weak Mutation 25: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - ReplaceComparisonOperator == -> -2
   * Goal 76. Weak Mutation 34: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:132 - ReplaceConstant - 0 -> 1
   * Goal 77. Weak Mutation 35: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:132 - InsertUnaryOp Negation
   * Goal 78. Weak Mutation 36: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:132 - InsertUnaryOp IINC 1
   * Goal 79. Weak Mutation 37: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:132 - InsertUnaryOp IINC -1
   * Goal 80. Weak Mutation 38: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:132 - ReplaceComparisonOperator >= -> -1
   * Goal 81. Weak Mutation 39: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:132 - ReplaceComparisonOperator >= -> >
   * Goal 82. Weak Mutation 41: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:133 - InsertUnaryOp Negation
   * Goal 83. Weak Mutation 42: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:133 - InsertUnaryOp IINC 1
   * Goal 84. Weak Mutation 43: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:133 - InsertUnaryOp IINC -1
   * Goal 85. Weak Mutation 44: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:133 - ReplaceConstant - 0.0 -> 1.0
   * Goal 86. Weak Mutation 45: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:133 - ReplaceConstant - 0.0 -> -1.0
   * Goal 87. Weak Mutation 47: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:133 - ReplaceComparisonOperator >= -> ==
   */

  @Test
  public void test01()  throws Throwable  {
      Well19937a well19937a0 = new Well19937a(162);
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) 162;
      double[][] doubleArray1 = new double[1][6];
      doubleArray1[0] = doubleArray0;
      MultivariateNormalDistribution multivariateNormalDistribution0 = new MultivariateNormalDistribution((RandomGenerator) well19937a0, doubleArray0, doubleArray1);
      // Undeclared exception!
      try { 
        multivariateNormalDistribution0.density((double[]) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.apache.commons.math3.distribution.MultivariateNormalDistribution", e);
      }
  }

  //Test case number: 2
  /*
   * 58 covered goals:
   * Goal 1. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>([D[[D)V: root-Branch
   * Goal 2. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I17 Branch 1 IF_ICMPEQ L107 - true
   * Goal 3. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I34 Branch 2 IF_ICMPGE L111 - true
   * Goal 4. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I34 Branch 2 IF_ICMPGE L111 - false
   * Goal 5. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I42 Branch 3 IF_ICMPEQ L112 - true
   * Goal 6. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I106 Branch 4 IF_ICMPGE L132 - false
   * Goal 7. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I114 Branch 5 IFGE L133 - true
   * Goal 8. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I114 Branch 5 IFGE L133 - false
   * Goal 9. <init>([D[[D)V_org.apache.commons.math3.exception.NumberIsTooSmallException_DECLARED
   * Goal 10. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 105
   * Goal 11. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 107
   * Goal 12. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 111
   * Goal 13. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 112
   * Goal 14. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 117
   * Goal 15. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 119
   * Goal 16. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 122
   * Goal 17. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 125
   * Goal 18. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 127
   * Goal 19. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 130
   * Goal 20. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 132
   * Goal 21. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 133
   * Goal 22. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 134
   * Goal 23. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>([D[[D)V
   * Goal 24. Weak Mutation 0: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - InsertUnaryOp Negation
   * Goal 25. Weak Mutation 1: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - InsertUnaryOp IINC 1
   * Goal 26. Weak Mutation 2: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - InsertUnaryOp IINC -1
   * Goal 27. Weak Mutation 3: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - ReplaceComparisonOperator == -> -2
   * Goal 28. Weak Mutation 9: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - ReplaceConstant - 0 -> 1
   * Goal 29. Weak Mutation 10: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp Negation
   * Goal 30. Weak Mutation 11: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp IINC 1
   * Goal 31. Weak Mutation 12: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp IINC -1
   * Goal 32. Weak Mutation 13: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp Negation
   * Goal 33. Weak Mutation 14: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp IINC 1
   * Goal 34. Weak Mutation 15: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp IINC -1
   * Goal 35. Weak Mutation 16: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - ReplaceComparisonOperator >= -> -1
   * Goal 36. Weak Mutation 17: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - ReplaceComparisonOperator >= -> >
   * Goal 37. Weak Mutation 19: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp Negation
   * Goal 38. Weak Mutation 20: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp IINC 1
   * Goal 39. Weak Mutation 21: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp IINC -1
   * Goal 40. Weak Mutation 22: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp Negation
   * Goal 41. Weak Mutation 23: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp IINC 1
   * Goal 42. Weak Mutation 24: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp IINC -1
   * Goal 43. Weak Mutation 25: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - ReplaceComparisonOperator == -> -2
   * Goal 44. Weak Mutation 34: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:132 - ReplaceConstant - 0 -> 1
   * Goal 45. Weak Mutation 35: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:132 - InsertUnaryOp Negation
   * Goal 46. Weak Mutation 36: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:132 - InsertUnaryOp IINC 1
   * Goal 47. Weak Mutation 37: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:132 - InsertUnaryOp IINC -1
   * Goal 48. Weak Mutation 38: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:132 - ReplaceComparisonOperator >= -> -1
   * Goal 49. Weak Mutation 41: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:133 - InsertUnaryOp Negation
   * Goal 50. Weak Mutation 42: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:133 - InsertUnaryOp IINC 1
   * Goal 51. Weak Mutation 43: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:133 - InsertUnaryOp IINC -1
   * Goal 52. Weak Mutation 44: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:133 - ReplaceConstant - 0.0 -> 1.0
   * Goal 53. Weak Mutation 45: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:133 - ReplaceConstant - 0.0 -> -1.0
   * Goal 54. Weak Mutation 46: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:133 - ReplaceComparisonOperator >= -> -1
   * Goal 55. Weak Mutation 47: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:133 - ReplaceComparisonOperator >= -> ==
   * Goal 56. Weak Mutation 49: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:134 - InsertUnaryOp Negation
   * Goal 57. Weak Mutation 50: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:134 - InsertUnaryOp IINC 1
   * Goal 58. Weak Mutation 51: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:134 - InsertUnaryOp IINC -1
   */

  @Test
  public void test02()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 517.74406063478;
      doubleArray0[1] = (-467.098623744536);
      double[][] doubleArray1 = new double[3][0];
      doubleArray1[0] = doubleArray0;
      doubleArray1[1] = doubleArray0;
      doubleArray1[2] = doubleArray0;
      MultivariateNormalDistribution multivariateNormalDistribution0 = null;
      try {
        multivariateNormalDistribution0 = new MultivariateNormalDistribution(doubleArray0, doubleArray1);
      } catch(IllegalArgumentException e) {
         //
         // -0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value -0 at index 1
         //
         assertThrownBy("org.apache.commons.math3.distribution.MultivariateNormalDistribution", e);
      }
  }

  //Test case number: 3
  /*
   * 35 covered goals:
   * Goal 1. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>([D[[D)V: root-Branch
   * Goal 2. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I17 Branch 1 IF_ICMPEQ L107 - true
   * Goal 3. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I34 Branch 2 IF_ICMPGE L111 - true
   * Goal 4. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I34 Branch 2 IF_ICMPGE L111 - false
   * Goal 5. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I42 Branch 3 IF_ICMPEQ L112 - true
   * Goal 6. <init>([D[[D)V_org.apache.commons.math3.exception.MathUnsupportedOperationException_EXPLICIT
   * Goal 7. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 105
   * Goal 8. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 107
   * Goal 9. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 111
   * Goal 10. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 112
   * Goal 11. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 117
   * Goal 12. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 119
   * Goal 13. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 122
   * Goal 14. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 125
   * Goal 15. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>([D[[D)V
   * Goal 16. Weak Mutation 0: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - InsertUnaryOp Negation
   * Goal 17. Weak Mutation 1: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - InsertUnaryOp IINC 1
   * Goal 18. Weak Mutation 2: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - InsertUnaryOp IINC -1
   * Goal 19. Weak Mutation 3: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - ReplaceComparisonOperator == -> -2
   * Goal 20. Weak Mutation 9: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - ReplaceConstant - 0 -> 1
   * Goal 21. Weak Mutation 10: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp Negation
   * Goal 22. Weak Mutation 11: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp IINC 1
   * Goal 23. Weak Mutation 12: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp IINC -1
   * Goal 24. Weak Mutation 13: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp Negation
   * Goal 25. Weak Mutation 14: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp IINC 1
   * Goal 26. Weak Mutation 15: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp IINC -1
   * Goal 27. Weak Mutation 16: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - ReplaceComparisonOperator >= -> -1
   * Goal 28. Weak Mutation 17: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - ReplaceComparisonOperator >= -> >
   * Goal 29. Weak Mutation 19: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp Negation
   * Goal 30. Weak Mutation 20: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp IINC 1
   * Goal 31. Weak Mutation 21: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp IINC -1
   * Goal 32. Weak Mutation 22: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp Negation
   * Goal 33. Weak Mutation 23: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp IINC 1
   * Goal 34. Weak Mutation 24: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp IINC -1
   * Goal 35. Weak Mutation 25: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - ReplaceComparisonOperator == -> -2
   */

  @Test
  public void test03()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[6] = 8.849812639395597E201;
      double[][] doubleArray1 = new double[9][2];
      doubleArray1[0] = doubleArray0;
      doubleArray1[1] = doubleArray0;
      doubleArray1[2] = doubleArray0;
      doubleArray1[3] = doubleArray0;
      doubleArray1[4] = doubleArray0;
      doubleArray1[5] = doubleArray0;
      doubleArray1[6] = doubleArray0;
      doubleArray1[7] = doubleArray0;
      doubleArray1[8] = doubleArray0;
      MultivariateNormalDistribution multivariateNormalDistribution0 = null;
      try {
        multivariateNormalDistribution0 = new MultivariateNormalDistribution(doubleArray0, doubleArray1);
      } catch(MathUnsupportedOperationException e) {
         //
         // unsupported operation
         //
         assertThrownBy("org.apache.commons.math3.linear.EigenDecomposition", e);
      }
  }

  //Test case number: 4
  /*
   * 35 covered goals:
   * Goal 1. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>([D[[D)V: root-Branch
   * Goal 2. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I17 Branch 1 IF_ICMPEQ L107 - true
   * Goal 3. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I34 Branch 2 IF_ICMPGE L111 - true
   * Goal 4. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I34 Branch 2 IF_ICMPGE L111 - false
   * Goal 5. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I42 Branch 3 IF_ICMPEQ L112 - true
   * Goal 6. <init>([D[[D)V_org.apache.commons.math3.exception.MathIllegalArgumentException_DECLARED
   * Goal 7. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 105
   * Goal 8. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 107
   * Goal 9. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 111
   * Goal 10. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 112
   * Goal 11. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 117
   * Goal 12. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 119
   * Goal 13. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 122
   * Goal 14. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 125
   * Goal 15. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>([D[[D)V
   * Goal 16. Weak Mutation 0: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - InsertUnaryOp Negation
   * Goal 17. Weak Mutation 1: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - InsertUnaryOp IINC 1
   * Goal 18. Weak Mutation 2: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - InsertUnaryOp IINC -1
   * Goal 19. Weak Mutation 3: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - ReplaceComparisonOperator == -> -2
   * Goal 20. Weak Mutation 9: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - ReplaceConstant - 0 -> 1
   * Goal 21. Weak Mutation 10: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp Negation
   * Goal 22. Weak Mutation 11: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp IINC 1
   * Goal 23. Weak Mutation 12: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp IINC -1
   * Goal 24. Weak Mutation 13: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp Negation
   * Goal 25. Weak Mutation 14: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp IINC 1
   * Goal 26. Weak Mutation 15: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp IINC -1
   * Goal 27. Weak Mutation 16: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - ReplaceComparisonOperator >= -> -1
   * Goal 28. Weak Mutation 17: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - ReplaceComparisonOperator >= -> >
   * Goal 29. Weak Mutation 19: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp Negation
   * Goal 30. Weak Mutation 20: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp IINC 1
   * Goal 31. Weak Mutation 21: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp IINC -1
   * Goal 32. Weak Mutation 22: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp Negation
   * Goal 33. Weak Mutation 23: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp IINC 1
   * Goal 34. Weak Mutation 24: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp IINC -1
   * Goal 35. Weak Mutation 25: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - ReplaceComparisonOperator == -> -2
   */

  @Test
  public void test04()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      double[][] doubleArray1 = new double[2][7];
      doubleArray1[0] = doubleArray0;
      doubleArray1[1] = doubleArray0;
      MultivariateNormalDistribution multivariateNormalDistribution0 = null;
      try {
        multivariateNormalDistribution0 = new MultivariateNormalDistribution(doubleArray0, doubleArray1);
      } catch(IllegalArgumentException e) {
         //
         // matrix is singular
         //
         assertThrownBy("org.apache.commons.math3.linear.EigenDecomposition$Solver", e);
      }
  }

  //Test case number: 5
  /*
   * 5 covered goals:
   * Goal 1. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>([D[[D)V: root-Branch
   * Goal 2. <init>([D[[D)V_java.lang.NullPointerException_IMPLICIT
   * Goal 3. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 105
   * Goal 4. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 107
   * Goal 5. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>([D[[D)V
   */

  @Test
  public void test05()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      MultivariateNormalDistribution multivariateNormalDistribution0 = null;
      try {
        multivariateNormalDistribution0 = new MultivariateNormalDistribution(doubleArray0, (double[][]) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.apache.commons.math3.distribution.MultivariateNormalDistribution", e);
      }
  }

  //Test case number: 6
  /*
   * 38 covered goals:
   * Goal 1. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I17 Branch 1 IF_ICMPEQ L107 - true
   * Goal 2. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I34 Branch 2 IF_ICMPGE L111 - true
   * Goal 3. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I34 Branch 2 IF_ICMPGE L111 - false
   * Goal 4. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I42 Branch 3 IF_ICMPEQ L112 - true
   * Goal 5. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I17 Branch 1 IF_ICMPEQ L107 - true in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 6. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I34 Branch 2 IF_ICMPGE L111 - false in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 7. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I34 Branch 2 IF_ICMPGE L111 - true in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 8. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I42 Branch 3 IF_ICMPEQ L112 - true in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 9. <init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V_org.apache.commons.math3.exception.MathUnsupportedOperationException_EXPLICIT
   * Goal 10. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 105
   * Goal 11. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 107
   * Goal 12. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 111
   * Goal 13. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 112
   * Goal 14. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 117
   * Goal 15. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 119
   * Goal 16. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 122
   * Goal 17. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 125
   * Goal 18. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 19. Weak Mutation 0: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - InsertUnaryOp Negation
   * Goal 20. Weak Mutation 1: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - InsertUnaryOp IINC 1
   * Goal 21. Weak Mutation 2: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - InsertUnaryOp IINC -1
   * Goal 22. Weak Mutation 3: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - ReplaceComparisonOperator == -> -2
   * Goal 23. Weak Mutation 9: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - ReplaceConstant - 0 -> 1
   * Goal 24. Weak Mutation 10: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp Negation
   * Goal 25. Weak Mutation 11: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp IINC 1
   * Goal 26. Weak Mutation 12: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp IINC -1
   * Goal 27. Weak Mutation 13: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp Negation
   * Goal 28. Weak Mutation 14: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp IINC 1
   * Goal 29. Weak Mutation 15: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp IINC -1
   * Goal 30. Weak Mutation 16: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - ReplaceComparisonOperator >= -> -1
   * Goal 31. Weak Mutation 17: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - ReplaceComparisonOperator >= -> >
   * Goal 32. Weak Mutation 19: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp Negation
   * Goal 33. Weak Mutation 20: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp IINC 1
   * Goal 34. Weak Mutation 21: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp IINC -1
   * Goal 35. Weak Mutation 22: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp Negation
   * Goal 36. Weak Mutation 23: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp IINC 1
   * Goal 37. Weak Mutation 24: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp IINC -1
   * Goal 38. Weak Mutation 25: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - ReplaceComparisonOperator == -> -2
   */

  @Test
  public void test06()  throws Throwable  {
      Well512a well512a0 = new Well512a((-2574));
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (double) (-2574);
      doubleArray0[2] = (double) (-2574);
      doubleArray0[3] = (double) (-2574);
      doubleArray0[4] = (double) (-2574);
      double[][] doubleArray1 = new double[5][9];
      doubleArray1[0] = doubleArray0;
      doubleArray1[1] = doubleArray0;
      doubleArray1[2] = doubleArray0;
      doubleArray1[3] = doubleArray0;
      doubleArray1[4] = doubleArray0;
      MultivariateNormalDistribution multivariateNormalDistribution0 = null;
      try {
        multivariateNormalDistribution0 = new MultivariateNormalDistribution((RandomGenerator) well512a0, doubleArray0, doubleArray1);
      } catch(MathUnsupportedOperationException e) {
         //
         // unsupported operation
         //
         assertThrownBy("org.apache.commons.math3.linear.EigenDecomposition", e);
      }
  }

  //Test case number: 7
  /*
   * 38 covered goals:
   * Goal 1. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I17 Branch 1 IF_ICMPEQ L107 - true
   * Goal 2. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I34 Branch 2 IF_ICMPGE L111 - true
   * Goal 3. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I34 Branch 2 IF_ICMPGE L111 - false
   * Goal 4. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I42 Branch 3 IF_ICMPEQ L112 - true
   * Goal 5. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I17 Branch 1 IF_ICMPEQ L107 - true in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 6. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I34 Branch 2 IF_ICMPGE L111 - false in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 7. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I34 Branch 2 IF_ICMPGE L111 - true in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 8. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I42 Branch 3 IF_ICMPEQ L112 - true in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 9. <init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V_org.apache.commons.math3.exception.MathIllegalArgumentException_DECLARED
   * Goal 10. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 105
   * Goal 11. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 107
   * Goal 12. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 111
   * Goal 13. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 112
   * Goal 14. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 117
   * Goal 15. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 119
   * Goal 16. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 122
   * Goal 17. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 125
   * Goal 18. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 19. Weak Mutation 0: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - InsertUnaryOp Negation
   * Goal 20. Weak Mutation 1: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - InsertUnaryOp IINC 1
   * Goal 21. Weak Mutation 2: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - InsertUnaryOp IINC -1
   * Goal 22. Weak Mutation 3: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - ReplaceComparisonOperator == -> -2
   * Goal 23. Weak Mutation 9: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - ReplaceConstant - 0 -> 1
   * Goal 24. Weak Mutation 10: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp Negation
   * Goal 25. Weak Mutation 11: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp IINC 1
   * Goal 26. Weak Mutation 12: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp IINC -1
   * Goal 27. Weak Mutation 13: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp Negation
   * Goal 28. Weak Mutation 14: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp IINC 1
   * Goal 29. Weak Mutation 15: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp IINC -1
   * Goal 30. Weak Mutation 16: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - ReplaceComparisonOperator >= -> -1
   * Goal 31. Weak Mutation 17: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - ReplaceComparisonOperator >= -> >
   * Goal 32. Weak Mutation 19: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp Negation
   * Goal 33. Weak Mutation 20: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp IINC 1
   * Goal 34. Weak Mutation 21: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp IINC -1
   * Goal 35. Weak Mutation 22: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp Negation
   * Goal 36. Weak Mutation 23: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp IINC 1
   * Goal 37. Weak Mutation 24: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp IINC -1
   * Goal 38. Weak Mutation 25: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - ReplaceComparisonOperator == -> -2
   */

  @Test
  public void test07()  throws Throwable  {
      Well19937c well19937c0 = new Well19937c();
      double[] doubleArray0 = new double[3];
      double[][] doubleArray1 = new double[3][4];
      doubleArray1[0] = doubleArray0;
      doubleArray1[1] = doubleArray0;
      doubleArray1[2] = doubleArray0;
      MultivariateNormalDistribution multivariateNormalDistribution0 = null;
      try {
        multivariateNormalDistribution0 = new MultivariateNormalDistribution((RandomGenerator) well19937c0, doubleArray0, doubleArray1);
      } catch(IllegalArgumentException e) {
         //
         // matrix is singular
         //
         assertThrownBy("org.apache.commons.math3.linear.EigenDecomposition$Solver", e);
      }
  }

  //Test case number: 8
  /*
   * 136 covered goals:
   * Goal 1. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I17 Branch 1 IF_ICMPEQ L107 - true
   * Goal 2. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I34 Branch 2 IF_ICMPGE L111 - true
   * Goal 3. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I34 Branch 2 IF_ICMPGE L111 - false
   * Goal 4. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I42 Branch 3 IF_ICMPEQ L112 - true
   * Goal 5. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I106 Branch 4 IF_ICMPGE L132 - true
   * Goal 6. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I106 Branch 4 IF_ICMPGE L132 - false
   * Goal 7. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I114 Branch 5 IFGE L133 - true
   * Goal 8. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I145 Branch 6 IF_ICMPGE L140 - true
   * Goal 9. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I145 Branch 6 IF_ICMPGE L140 - false
   * Goal 10. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I175 Branch 7 IF_ICMPGE L148 - true
   * Goal 11. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I175 Branch 7 IF_ICMPGE L148 - false
   * Goal 12. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I190 Branch 8 IF_ICMPGE L150 - true
   * Goal 13. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I190 Branch 8 IF_ICMPGE L150 - false
   * Goal 14. org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D: I17 Branch 11 IF_ICMPGE L212 - true
   * Goal 15. org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D: I17 Branch 11 IF_ICMPGE L212 - false
   * Goal 16. org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D: I44 Branch 12 IF_ICMPGE L218 - true
   * Goal 17. org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D: I44 Branch 12 IF_ICMPGE L218 - false
   * Goal 18. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I17 Branch 1 IF_ICMPEQ L107 - true in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 19. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I34 Branch 2 IF_ICMPGE L111 - false in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 20. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I34 Branch 2 IF_ICMPGE L111 - true in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 21. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I42 Branch 3 IF_ICMPEQ L112 - true in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 22. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I106 Branch 4 IF_ICMPGE L132 - true in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 23. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I106 Branch 4 IF_ICMPGE L132 - false in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 24. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I114 Branch 5 IFGE L133 - true in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 25. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I145 Branch 6 IF_ICMPGE L140 - false in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 26. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I145 Branch 6 IF_ICMPGE L140 - true in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 27. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I175 Branch 7 IF_ICMPGE L148 - false in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 28. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I175 Branch 7 IF_ICMPGE L148 - true in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 29. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I190 Branch 8 IF_ICMPGE L150 - true in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 30. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I190 Branch 8 IF_ICMPGE L150 - false in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 31. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D: I17 Branch 11 IF_ICMPGE L212 - true in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:sample()[D
   * Goal 32. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D: I17 Branch 11 IF_ICMPGE L212 - false in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:sample()[D
   * Goal 33. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D: I44 Branch 12 IF_ICMPGE L218 - false in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:sample()[D
   * Goal 34. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D: I44 Branch 12 IF_ICMPGE L218 - true in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:sample()[D
   * Goal 35. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 105
   * Goal 36. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 107
   * Goal 37. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 111
   * Goal 38. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 112
   * Goal 39. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 117
   * Goal 40. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 119
   * Goal 41. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 122
   * Goal 42. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 125
   * Goal 43. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 127
   * Goal 44. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 130
   * Goal 45. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 132
   * Goal 46. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 133
   * Goal 47. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 139
   * Goal 48. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 140
   * Goal 49. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 141
   * Goal 50. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 142
   * Goal 51. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 145
   * Goal 52. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 148
   * Goal 53. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 149
   * Goal 54. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 150
   * Goal 55. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 151
   * Goal 56. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 155
   * Goal 57. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 156
   * Goal 58. org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D: Line 209
   * Goal 59. org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D: Line 210
   * Goal 60. org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D: Line 212
   * Goal 61. org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D: Line 213
   * Goal 62. org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D: Line 216
   * Goal 63. org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D: Line 218
   * Goal 64. org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D: Line 219
   * Goal 65. org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D: Line 222
   * Goal 66. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 67. org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D
   * Goal 68. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 69. org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D
   * Goal 70. Weak Mutation 0: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - InsertUnaryOp Negation
   * Goal 71. Weak Mutation 1: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - InsertUnaryOp IINC 1
   * Goal 72. Weak Mutation 2: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - InsertUnaryOp IINC -1
   * Goal 73. Weak Mutation 3: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - ReplaceComparisonOperator == -> -2
   * Goal 74. Weak Mutation 9: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - ReplaceConstant - 0 -> 1
   * Goal 75. Weak Mutation 10: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp Negation
   * Goal 76. Weak Mutation 11: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp IINC 1
   * Goal 77. Weak Mutation 12: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp IINC -1
   * Goal 78. Weak Mutation 13: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp Negation
   * Goal 79. Weak Mutation 14: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp IINC 1
   * Goal 80. Weak Mutation 15: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp IINC -1
   * Goal 81. Weak Mutation 16: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - ReplaceComparisonOperator >= -> -1
   * Goal 82. Weak Mutation 17: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - ReplaceComparisonOperator >= -> >
   * Goal 83. Weak Mutation 19: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp Negation
   * Goal 84. Weak Mutation 20: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp IINC 1
   * Goal 85. Weak Mutation 21: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp IINC -1
   * Goal 86. Weak Mutation 22: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp Negation
   * Goal 87. Weak Mutation 23: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp IINC 1
   * Goal 88. Weak Mutation 24: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp IINC -1
   * Goal 89. Weak Mutation 25: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - ReplaceComparisonOperator == -> -2
   * Goal 90. Weak Mutation 34: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:132 - ReplaceConstant - 0 -> 1
   * Goal 91. Weak Mutation 35: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:132 - InsertUnaryOp Negation
   * Goal 92. Weak Mutation 36: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:132 - InsertUnaryOp IINC 1
   * Goal 93. Weak Mutation 37: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:132 - InsertUnaryOp IINC -1
   * Goal 94. Weak Mutation 38: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:132 - ReplaceComparisonOperator >= -> -1
   * Goal 95. Weak Mutation 39: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:132 - ReplaceComparisonOperator >= -> >
   * Goal 96. Weak Mutation 41: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:133 - InsertUnaryOp Negation
   * Goal 97. Weak Mutation 42: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:133 - InsertUnaryOp IINC 1
   * Goal 98. Weak Mutation 43: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:133 - InsertUnaryOp IINC -1
   * Goal 99. Weak Mutation 44: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:133 - ReplaceConstant - 0.0 -> 1.0
   * Goal 100. Weak Mutation 45: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:133 - ReplaceConstant - 0.0 -> -1.0
   * Goal 101. Weak Mutation 47: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:133 - ReplaceComparisonOperator >= -> ==
   * Goal 102. Weak Mutation 116: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:210 - InsertUnaryOp Negation
   * Goal 103. Weak Mutation 117: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:210 - InsertUnaryOp IINC 1
   * Goal 104. Weak Mutation 118: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:210 - InsertUnaryOp IINC -1
   * Goal 105. Weak Mutation 119: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:212 - ReplaceConstant - 0 -> 1
   * Goal 106. Weak Mutation 120: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:212 - InsertUnaryOp Negation
   * Goal 107. Weak Mutation 121: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:212 - InsertUnaryOp IINC 1
   * Goal 108. Weak Mutation 122: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:212 - InsertUnaryOp IINC -1
   * Goal 109. Weak Mutation 123: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:212 - InsertUnaryOp Negation
   * Goal 110. Weak Mutation 124: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:212 - InsertUnaryOp IINC 1
   * Goal 111. Weak Mutation 125: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:212 - InsertUnaryOp IINC -1
   * Goal 112. Weak Mutation 126: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:212 - ReplaceComparisonOperator >= -> -1
   * Goal 113. Weak Mutation 127: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:212 - ReplaceComparisonOperator >= -> >
   * Goal 114. Weak Mutation 129: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:213 - InsertUnaryOp Negation
   * Goal 115. Weak Mutation 130: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:213 - InsertUnaryOp IINC 1
   * Goal 116. Weak Mutation 131: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:213 - InsertUnaryOp IINC -1
   * Goal 117. Weak Mutation 132: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:218 - ReplaceConstant - 0 -> 1
   * Goal 118. Weak Mutation 133: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:218 - InsertUnaryOp Negation
   * Goal 119. Weak Mutation 134: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:218 - InsertUnaryOp IINC 1
   * Goal 120. Weak Mutation 135: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:218 - InsertUnaryOp IINC -1
   * Goal 121. Weak Mutation 136: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:218 - InsertUnaryOp Negation
   * Goal 122. Weak Mutation 137: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:218 - InsertUnaryOp IINC 1
   * Goal 123. Weak Mutation 138: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:218 - InsertUnaryOp IINC -1
   * Goal 124. Weak Mutation 139: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:218 - ReplaceComparisonOperator >= -> -1
   * Goal 125. Weak Mutation 140: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:218 - ReplaceComparisonOperator >= -> >
   * Goal 126. Weak Mutation 142: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:219 - InsertUnaryOp Negation
   * Goal 127. Weak Mutation 143: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:219 - InsertUnaryOp IINC 1
   * Goal 128. Weak Mutation 144: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:219 - InsertUnaryOp IINC -1
   * Goal 129. Weak Mutation 145: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:219 - InsertUnaryOp Negation
   * Goal 130. Weak Mutation 146: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:219 - InsertUnaryOp IINC 1
   * Goal 131. Weak Mutation 147: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:219 - InsertUnaryOp IINC -1
   * Goal 132. Weak Mutation 148: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:219 - ReplaceArithmeticOperator + -> %
   * Goal 133. Weak Mutation 149: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:219 - ReplaceArithmeticOperator + -> -
   * Goal 134. Weak Mutation 150: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:219 - ReplaceArithmeticOperator + -> *
   * Goal 135. Weak Mutation 151: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:219 - ReplaceArithmeticOperator + -> /
   * Goal 136. org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:nonempty
   */

  @Test
  public void test08()  throws Throwable  {
      Well19937a well19937a0 = new Well19937a(162);
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) 162;
      double[][] doubleArray1 = new double[1][6];
      doubleArray1[0] = doubleArray0;
      MultivariateNormalDistribution multivariateNormalDistribution0 = new MultivariateNormalDistribution((RandomGenerator) well19937a0, doubleArray0, doubleArray1);
      double[] doubleArray2 = multivariateNormalDistribution0.sample();
  }

  //Test case number: 9
  /*
   * 38 covered goals:
   * Goal 1. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I17 Branch 1 IF_ICMPEQ L107 - true
   * Goal 2. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I34 Branch 2 IF_ICMPGE L111 - false
   * Goal 3. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I42 Branch 3 IF_ICMPEQ L112 - false
   * Goal 4. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I17 Branch 1 IF_ICMPEQ L107 - true in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 5. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I34 Branch 2 IF_ICMPGE L111 - false in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 6. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I42 Branch 3 IF_ICMPEQ L112 - false in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 7. <init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V_org.apache.commons.math3.exception.MathIllegalNumberException_DECLARED
   * Goal 8. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 105
   * Goal 9. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 107
   * Goal 10. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 111
   * Goal 11. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 112
   * Goal 12. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 113
   * Goal 13. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 14. Weak Mutation 0: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - InsertUnaryOp Negation
   * Goal 15. Weak Mutation 1: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - InsertUnaryOp IINC 1
   * Goal 16. Weak Mutation 2: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - InsertUnaryOp IINC -1
   * Goal 17. Weak Mutation 3: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - ReplaceComparisonOperator == -> -2
   * Goal 18. Weak Mutation 9: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - ReplaceConstant - 0 -> 1
   * Goal 19. Weak Mutation 10: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp Negation
   * Goal 20. Weak Mutation 11: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp IINC 1
   * Goal 21. Weak Mutation 12: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp IINC -1
   * Goal 22. Weak Mutation 13: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp Negation
   * Goal 23. Weak Mutation 14: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp IINC 1
   * Goal 24. Weak Mutation 15: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp IINC -1
   * Goal 25. Weak Mutation 16: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - ReplaceComparisonOperator >= -> -1
   * Goal 26. Weak Mutation 19: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp Negation
   * Goal 27. Weak Mutation 20: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp IINC 1
   * Goal 28. Weak Mutation 21: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp IINC -1
   * Goal 29. Weak Mutation 22: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp Negation
   * Goal 30. Weak Mutation 23: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp IINC 1
   * Goal 31. Weak Mutation 24: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp IINC -1
   * Goal 32. Weak Mutation 27: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - ReplaceComparisonOperator == -> <=
   * Goal 33. Weak Mutation 28: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:113 - InsertUnaryOp Negation
   * Goal 34. Weak Mutation 29: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:113 - InsertUnaryOp IINC 1
   * Goal 35. Weak Mutation 30: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:113 - InsertUnaryOp IINC -1
   * Goal 36. Weak Mutation 31: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:113 - InsertUnaryOp Negation
   * Goal 37. Weak Mutation 32: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:113 - InsertUnaryOp IINC 1
   * Goal 38. Weak Mutation 33: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:113 - InsertUnaryOp IINC -1
   */

  @Test
  public void test09()  throws Throwable  {
      JDKRandomGenerator jDKRandomGenerator0 = new JDKRandomGenerator();
      double[] doubleArray0 = new double[2];
      double[][] doubleArray1 = new double[2][7];
      MultivariateNormalDistribution multivariateNormalDistribution0 = null;
      try {
        multivariateNormalDistribution0 = new MultivariateNormalDistribution((RandomGenerator) jDKRandomGenerator0, doubleArray0, doubleArray1);
      } catch(IllegalArgumentException e) {
         //
         // 7 != 2
         //
         assertThrownBy("org.apache.commons.math3.distribution.MultivariateNormalDistribution", e);
      }
  }

  //Test case number: 10
  /*
   * 79 covered goals:
   * Goal 1. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>([D[[D)V: root-Branch
   * Goal 2. org.apache.commons.math3.distribution.MultivariateNormalDistribution.getMeans()[D: root-Branch
   * Goal 3. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I17 Branch 1 IF_ICMPEQ L107 - true
   * Goal 4. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I34 Branch 2 IF_ICMPGE L111 - true
   * Goal 5. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I34 Branch 2 IF_ICMPGE L111 - false
   * Goal 6. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I42 Branch 3 IF_ICMPEQ L112 - true
   * Goal 7. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I106 Branch 4 IF_ICMPGE L132 - true
   * Goal 8. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I106 Branch 4 IF_ICMPGE L132 - false
   * Goal 9. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I114 Branch 5 IFGE L133 - true
   * Goal 10. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I145 Branch 6 IF_ICMPGE L140 - true
   * Goal 11. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I145 Branch 6 IF_ICMPGE L140 - false
   * Goal 12. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I175 Branch 7 IF_ICMPGE L148 - true
   * Goal 13. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I175 Branch 7 IF_ICMPGE L148 - false
   * Goal 14. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I190 Branch 8 IF_ICMPGE L150 - true
   * Goal 15. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I190 Branch 8 IF_ICMPGE L150 - false
   * Goal 16. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>([D[[D)V: root-Branch in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>([D[[D)V
   * Goal 17. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.getMeans()[D: root-Branch in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:getMeans()[D
   * Goal 18. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 105
   * Goal 19. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 107
   * Goal 20. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 111
   * Goal 21. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 112
   * Goal 22. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 117
   * Goal 23. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 119
   * Goal 24. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 122
   * Goal 25. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 125
   * Goal 26. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 127
   * Goal 27. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 130
   * Goal 28. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 132
   * Goal 29. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 133
   * Goal 30. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 139
   * Goal 31. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 140
   * Goal 32. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 141
   * Goal 33. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 142
   * Goal 34. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 145
   * Goal 35. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 148
   * Goal 36. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 149
   * Goal 37. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 150
   * Goal 38. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 151
   * Goal 39. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 155
   * Goal 40. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 156
   * Goal 41. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>([D[[D)V: Line 77
   * Goal 42. org.apache.commons.math3.distribution.MultivariateNormalDistribution.getMeans()[D: Line 164
   * Goal 43. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>([D[[D)V
   * Goal 44. org.apache.commons.math3.distribution.MultivariateNormalDistribution.getMeans()[D
   * Goal 45. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>([D[[D)V
   * Goal 46. org.apache.commons.math3.distribution.MultivariateNormalDistribution.getMeans()[D
   * Goal 47. Weak Mutation 0: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - InsertUnaryOp Negation
   * Goal 48. Weak Mutation 1: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - InsertUnaryOp IINC 1
   * Goal 49. Weak Mutation 2: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - InsertUnaryOp IINC -1
   * Goal 50. Weak Mutation 3: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - ReplaceComparisonOperator == -> -2
   * Goal 51. Weak Mutation 9: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - ReplaceConstant - 0 -> 1
   * Goal 52. Weak Mutation 10: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp Negation
   * Goal 53. Weak Mutation 11: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp IINC 1
   * Goal 54. Weak Mutation 12: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp IINC -1
   * Goal 55. Weak Mutation 13: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp Negation
   * Goal 56. Weak Mutation 14: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp IINC 1
   * Goal 57. Weak Mutation 15: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp IINC -1
   * Goal 58. Weak Mutation 16: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - ReplaceComparisonOperator >= -> -1
   * Goal 59. Weak Mutation 17: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - ReplaceComparisonOperator >= -> >
   * Goal 60. Weak Mutation 19: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp Negation
   * Goal 61. Weak Mutation 20: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp IINC 1
   * Goal 62. Weak Mutation 21: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp IINC -1
   * Goal 63. Weak Mutation 22: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp Negation
   * Goal 64. Weak Mutation 23: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp IINC 1
   * Goal 65. Weak Mutation 24: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp IINC -1
   * Goal 66. Weak Mutation 25: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - ReplaceComparisonOperator == -> -2
   * Goal 67. Weak Mutation 34: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:132 - ReplaceConstant - 0 -> 1
   * Goal 68. Weak Mutation 35: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:132 - InsertUnaryOp Negation
   * Goal 69. Weak Mutation 36: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:132 - InsertUnaryOp IINC 1
   * Goal 70. Weak Mutation 37: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:132 - InsertUnaryOp IINC -1
   * Goal 71. Weak Mutation 38: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:132 - ReplaceComparisonOperator >= -> -1
   * Goal 72. Weak Mutation 39: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:132 - ReplaceComparisonOperator >= -> >
   * Goal 73. Weak Mutation 41: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:133 - InsertUnaryOp Negation
   * Goal 74. Weak Mutation 42: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:133 - InsertUnaryOp IINC 1
   * Goal 75. Weak Mutation 43: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:133 - InsertUnaryOp IINC -1
   * Goal 76. Weak Mutation 44: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:133 - ReplaceConstant - 0.0 -> 1.0
   * Goal 77. Weak Mutation 45: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:133 - ReplaceConstant - 0.0 -> -1.0
   * Goal 78. Weak Mutation 47: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:133 - ReplaceComparisonOperator >= -> ==
   * Goal 79. org.apache.commons.math3.distribution.MultivariateNormalDistribution.getMeans()[D:nonempty
   */

  @Test
  public void test10()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 517.74406063478;
      doubleArray0[1] = 517.74406063478;
      doubleArray0[2] = 1.4592602252960205;
      double[][] doubleArray1 = new double[3][0];
      doubleArray1[0] = doubleArray0;
      doubleArray1[1] = doubleArray0;
      doubleArray1[2] = doubleArray0;
      MultivariateNormalDistribution multivariateNormalDistribution0 = new MultivariateNormalDistribution(doubleArray0, doubleArray1);
      double[] doubleArray2 = multivariateNormalDistribution0.getMeans();
  }

  //Test case number: 11
  /*
   * 235 covered goals:
   * Goal 1. org.apache.commons.math3.distribution.MultivariateNormalDistribution.getMeans()[D: root-Branch
   * Goal 2. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I17 Branch 1 IF_ICMPEQ L107 - true
   * Goal 3. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I34 Branch 2 IF_ICMPGE L111 - true
   * Goal 4. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I34 Branch 2 IF_ICMPGE L111 - false
   * Goal 5. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I42 Branch 3 IF_ICMPEQ L112 - true
   * Goal 6. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I106 Branch 4 IF_ICMPGE L132 - true
   * Goal 7. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I106 Branch 4 IF_ICMPGE L132 - false
   * Goal 8. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I114 Branch 5 IFGE L133 - true
   * Goal 9. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I145 Branch 6 IF_ICMPGE L140 - true
   * Goal 10. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I145 Branch 6 IF_ICMPGE L140 - false
   * Goal 11. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I175 Branch 7 IF_ICMPGE L148 - true
   * Goal 12. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I175 Branch 7 IF_ICMPGE L148 - false
   * Goal 13. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I190 Branch 8 IF_ICMPGE L150 - true
   * Goal 14. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I190 Branch 8 IF_ICMPGE L150 - false
   * Goal 15. org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D: I10 Branch 9 IF_ICMPEQ L179 - true
   * Goal 16. org.apache.commons.math3.distribution.MultivariateNormalDistribution.getStandardDeviations()[D: I23 Branch 10 IF_ICMPGE L201 - true
   * Goal 17. org.apache.commons.math3.distribution.MultivariateNormalDistribution.getStandardDeviations()[D: I23 Branch 10 IF_ICMPGE L201 - false
   * Goal 18. org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D: I14 Branch 13 IF_ICMPGE L233 - true
   * Goal 19. org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D: I14 Branch 13 IF_ICMPGE L233 - false
   * Goal 20. org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D: I51 Branch 14 IF_ICMPGE L238 - true
   * Goal 21. org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D: I51 Branch 14 IF_ICMPGE L238 - false
   * Goal 22. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I17 Branch 1 IF_ICMPEQ L107 - true in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 23. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I34 Branch 2 IF_ICMPGE L111 - false in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 24. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I34 Branch 2 IF_ICMPGE L111 - true in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 25. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I42 Branch 3 IF_ICMPEQ L112 - true in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 26. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I106 Branch 4 IF_ICMPGE L132 - true in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 27. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I106 Branch 4 IF_ICMPGE L132 - false in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 28. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I114 Branch 5 IFGE L133 - true in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 29. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I145 Branch 6 IF_ICMPGE L140 - false in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 30. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I145 Branch 6 IF_ICMPGE L140 - true in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 31. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I175 Branch 7 IF_ICMPGE L148 - false in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 32. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I175 Branch 7 IF_ICMPGE L148 - true in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 33. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I190 Branch 8 IF_ICMPGE L150 - true in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 34. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I190 Branch 8 IF_ICMPGE L150 - false in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 35. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D: I10 Branch 9 IF_ICMPEQ L179 - true in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:density([D)D
   * Goal 36. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.getStandardDeviations()[D: I23 Branch 10 IF_ICMPGE L201 - true in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:getStandardDeviations()[D
   * Goal 37. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.getStandardDeviations()[D: I23 Branch 10 IF_ICMPGE L201 - false in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:getStandardDeviations()[D
   * Goal 38. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D: I14 Branch 13 IF_ICMPGE L233 - true in context: 
   * Goal 39. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D: I14 Branch 13 IF_ICMPGE L233 - false in context: 
   * Goal 40. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D: I51 Branch 14 IF_ICMPGE L238 - true in context: 
   * Goal 41. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D: I51 Branch 14 IF_ICMPGE L238 - false in context: 
   * Goal 42. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 105
   * Goal 43. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 107
   * Goal 44. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 111
   * Goal 45. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 112
   * Goal 46. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 117
   * Goal 47. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 119
   * Goal 48. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 122
   * Goal 49. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 125
   * Goal 50. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 127
   * Goal 51. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 130
   * Goal 52. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 132
   * Goal 53. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 133
   * Goal 54. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 139
   * Goal 55. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 140
   * Goal 56. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 141
   * Goal 57. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 142
   * Goal 58. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 145
   * Goal 59. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 148
   * Goal 60. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 149
   * Goal 61. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 150
   * Goal 62. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 151
   * Goal 63. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 155
   * Goal 64. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 156
   * Goal 65. org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D: Line 178
   * Goal 66. org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D: Line 179
   * Goal 67. org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D: Line 184
   * Goal 68. org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D: Line 186
   * Goal 69. org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D: Line 187
   * Goal 70. org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D: Line 188
   * Goal 71. org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D: Line 232
   * Goal 72. org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D: Line 233
   * Goal 73. org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D: Line 234
   * Goal 74. org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D: Line 236
   * Goal 75. org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D: Line 237
   * Goal 76. org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D: Line 238
   * Goal 77. org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D: Line 239
   * Goal 78. org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D: Line 241
   * Goal 79. org.apache.commons.math3.distribution.MultivariateNormalDistribution.getMeans()[D: Line 164
   * Goal 80. org.apache.commons.math3.distribution.MultivariateNormalDistribution.getStandardDeviations()[D: Line 198
   * Goal 81. org.apache.commons.math3.distribution.MultivariateNormalDistribution.getStandardDeviations()[D: Line 199
   * Goal 82. org.apache.commons.math3.distribution.MultivariateNormalDistribution.getStandardDeviations()[D: Line 200
   * Goal 83. org.apache.commons.math3.distribution.MultivariateNormalDistribution.getStandardDeviations()[D: Line 201
   * Goal 84. org.apache.commons.math3.distribution.MultivariateNormalDistribution.getStandardDeviations()[D: Line 202
   * Goal 85. org.apache.commons.math3.distribution.MultivariateNormalDistribution.getStandardDeviations()[D: Line 204
   * Goal 86. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 87. org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D
   * Goal 88. org.apache.commons.math3.distribution.MultivariateNormalDistribution.getStandardDeviations()[D
   * Goal 89. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 90. org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D
   * Goal 91. org.apache.commons.math3.distribution.MultivariateNormalDistribution.getStandardDeviations()[D
   * Goal 92. Weak Mutation 0: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - InsertUnaryOp Negation
   * Goal 93. Weak Mutation 1: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - InsertUnaryOp IINC 1
   * Goal 94. Weak Mutation 2: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - InsertUnaryOp IINC -1
   * Goal 95. Weak Mutation 3: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - ReplaceComparisonOperator == -> -2
   * Goal 96. Weak Mutation 9: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - ReplaceConstant - 0 -> 1
   * Goal 97. Weak Mutation 10: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp Negation
   * Goal 98. Weak Mutation 11: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp IINC 1
   * Goal 99. Weak Mutation 12: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp IINC -1
   * Goal 100. Weak Mutation 13: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp Negation
   * Goal 101. Weak Mutation 14: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp IINC 1
   * Goal 102. Weak Mutation 15: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp IINC -1
   * Goal 103. Weak Mutation 16: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - ReplaceComparisonOperator >= -> -1
   * Goal 104. Weak Mutation 17: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - ReplaceComparisonOperator >= -> >
   * Goal 105. Weak Mutation 19: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp Negation
   * Goal 106. Weak Mutation 20: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp IINC 1
   * Goal 107. Weak Mutation 21: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp IINC -1
   * Goal 108. Weak Mutation 22: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp Negation
   * Goal 109. Weak Mutation 23: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp IINC 1
   * Goal 110. Weak Mutation 24: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp IINC -1
   * Goal 111. Weak Mutation 25: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - ReplaceComparisonOperator == -> -2
   * Goal 112. Weak Mutation 34: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:132 - ReplaceConstant - 0 -> 1
   * Goal 113. Weak Mutation 35: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:132 - InsertUnaryOp Negation
   * Goal 114. Weak Mutation 36: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:132 - InsertUnaryOp IINC 1
   * Goal 115. Weak Mutation 37: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:132 - InsertUnaryOp IINC -1
   * Goal 116. Weak Mutation 38: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:132 - ReplaceComparisonOperator >= -> -1
   * Goal 117. Weak Mutation 39: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:132 - ReplaceComparisonOperator >= -> >
   * Goal 118. Weak Mutation 41: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:133 - InsertUnaryOp Negation
   * Goal 119. Weak Mutation 42: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:133 - InsertUnaryOp IINC 1
   * Goal 120. Weak Mutation 43: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:133 - InsertUnaryOp IINC -1
   * Goal 121. Weak Mutation 44: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:133 - ReplaceConstant - 0.0 -> 1.0
   * Goal 122. Weak Mutation 45: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:133 - ReplaceConstant - 0.0 -> -1.0
   * Goal 123. Weak Mutation 47: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:133 - ReplaceComparisonOperator >= -> ==
   * Goal 124. Weak Mutation 52: org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D:179 - InsertUnaryOp Negation
   * Goal 125. Weak Mutation 53: org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D:179 - InsertUnaryOp IINC 1
   * Goal 126. Weak Mutation 54: org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D:179 - InsertUnaryOp IINC -1
   * Goal 127. Weak Mutation 55: org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D:179 - ReplaceComparisonOperator == -> -2
   * Goal 128. Weak Mutation 61: org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D:184 - ReplaceConstant - -1 -> 0
   * Goal 129. Weak Mutation 62: org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D:184 - ReplaceConstant - -1 -> 1
   * Goal 130. Weak Mutation 63: org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D:184 - ReplaceConstant - -1 -> -2
   * Goal 131. Weak Mutation 64: org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D:186 - ReplaceConstant - 6.283185307179586 -> 0.0
   * Goal 132. Weak Mutation 65: org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D:186 - ReplaceConstant - 6.283185307179586 -> 1.0
   * Goal 133. Weak Mutation 66: org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D:186 - ReplaceConstant - 6.283185307179586 -> -1.0
   * Goal 134. Weak Mutation 67: org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D:186 - ReplaceConstant - 6.283185307179586 -> 5.283185307179586
   * Goal 135. Weak Mutation 68: org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D:186 - ReplaceConstant - 6.283185307179586 -> 7.283185307179586
   * Goal 136. Weak Mutation 69: org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D:186 - InsertUnaryOp Negation
   * Goal 137. Weak Mutation 70: org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D:186 - InsertUnaryOp IINC 1
   * Goal 138. Weak Mutation 71: org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D:186 - InsertUnaryOp IINC -1
   * Goal 139. Weak Mutation 72: org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D:186 - ReplaceConstant - 2.0 -> 0.0
   * Goal 140. Weak Mutation 73: org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D:186 - ReplaceConstant - 2.0 -> 1.0
   * Goal 141. Weak Mutation 74: org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D:186 - ReplaceConstant - 2.0 -> -1.0
   * Goal 142. Weak Mutation 75: org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D:186 - ReplaceConstant - 2.0 -> 3.0
   * Goal 143. Weak Mutation 76: org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D:186 - ReplaceArithmeticOperator / -> +
   * Goal 144. Weak Mutation 77: org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D:186 - ReplaceArithmeticOperator / -> %
   * Goal 145. Weak Mutation 78: org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D:186 - ReplaceArithmeticOperator / -> -
   * Goal 146. Weak Mutation 79: org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D:186 - ReplaceArithmeticOperator / -> *
   * Goal 147. Weak Mutation 80: org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D:186 - InsertUnaryOp Negation
   * Goal 148. Weak Mutation 81: org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D:186 - ReplaceConstant - -0.5 -> 0.0
   * Goal 149. Weak Mutation 82: org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D:186 - ReplaceConstant - -0.5 -> 1.0
   * Goal 150. Weak Mutation 83: org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D:186 - ReplaceConstant - -0.5 -> -1.0
   * Goal 151. Weak Mutation 84: org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D:186 - ReplaceConstant - -0.5 -> -1.5
   * Goal 152. Weak Mutation 85: org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D:186 - ReplaceConstant - -0.5 -> 0.5
   * Goal 153. Weak Mutation 86: org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D:187 - ReplaceArithmeticOperator * -> +
   * Goal 154. Weak Mutation 87: org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D:187 - ReplaceArithmeticOperator * -> %
   * Goal 155. Weak Mutation 88: org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D:187 - ReplaceArithmeticOperator * -> -
   * Goal 156. Weak Mutation 89: org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D:187 - ReplaceArithmeticOperator * -> /
   * Goal 157. Weak Mutation 90: org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D:188 - ReplaceArithmeticOperator * -> +
   * Goal 158. Weak Mutation 91: org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D:188 - ReplaceArithmeticOperator * -> %
   * Goal 159. Weak Mutation 92: org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D:188 - ReplaceArithmeticOperator * -> -
   * Goal 160. Weak Mutation 93: org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D:188 - ReplaceArithmeticOperator * -> /
   * Goal 161. Weak Mutation 94: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getStandardDeviations()[D:199 - InsertUnaryOp Negation
   * Goal 162. Weak Mutation 95: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getStandardDeviations()[D:199 - InsertUnaryOp IINC 1
   * Goal 163. Weak Mutation 96: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getStandardDeviations()[D:199 - InsertUnaryOp IINC -1
   * Goal 164. Weak Mutation 97: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getStandardDeviations()[D:201 - ReplaceConstant - 0 -> 1
   * Goal 165. Weak Mutation 98: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getStandardDeviations()[D:201 - InsertUnaryOp Negation
   * Goal 166. Weak Mutation 99: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getStandardDeviations()[D:201 - InsertUnaryOp IINC 1
   * Goal 167. Weak Mutation 100: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getStandardDeviations()[D:201 - InsertUnaryOp IINC -1
   * Goal 168. Weak Mutation 101: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getStandardDeviations()[D:201 - InsertUnaryOp Negation
   * Goal 169. Weak Mutation 102: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getStandardDeviations()[D:201 - InsertUnaryOp IINC 1
   * Goal 170. Weak Mutation 103: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getStandardDeviations()[D:201 - InsertUnaryOp IINC -1
   * Goal 171. Weak Mutation 104: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getStandardDeviations()[D:201 - ReplaceComparisonOperator >= -> -1
   * Goal 172. Weak Mutation 105: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getStandardDeviations()[D:201 - ReplaceComparisonOperator >= -> >
   * Goal 173. Weak Mutation 107: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getStandardDeviations()[D:202 - InsertUnaryOp Negation
   * Goal 174. Weak Mutation 108: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getStandardDeviations()[D:202 - InsertUnaryOp IINC 1
   * Goal 175. Weak Mutation 109: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getStandardDeviations()[D:202 - InsertUnaryOp IINC -1
   * Goal 176. Weak Mutation 110: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getStandardDeviations()[D:202 - InsertUnaryOp Negation
   * Goal 177. Weak Mutation 111: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getStandardDeviations()[D:202 - InsertUnaryOp IINC 1
   * Goal 178. Weak Mutation 112: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getStandardDeviations()[D:202 - InsertUnaryOp IINC -1
   * Goal 179. Weak Mutation 113: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getStandardDeviations()[D:202 - InsertUnaryOp Negation
   * Goal 180. Weak Mutation 114: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getStandardDeviations()[D:202 - InsertUnaryOp IINC 1
   * Goal 181. Weak Mutation 115: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getStandardDeviations()[D:202 - InsertUnaryOp IINC -1
   * Goal 182. Weak Mutation 152: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D:233 - ReplaceConstant - 0 -> 1
   * Goal 183. Weak Mutation 153: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D:233 - InsertUnaryOp Negation
   * Goal 184. Weak Mutation 154: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D:233 - InsertUnaryOp IINC 1
   * Goal 185. Weak Mutation 155: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D:233 - InsertUnaryOp IINC -1
   * Goal 186. Weak Mutation 156: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D:233 - ReplaceComparisonOperator >= -> -1
   * Goal 187. Weak Mutation 157: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D:233 - ReplaceComparisonOperator >= -> >
   * Goal 188. Weak Mutation 159: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D:234 - InsertUnaryOp Negation
   * Goal 189. Weak Mutation 160: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D:234 - InsertUnaryOp IINC 1
   * Goal 190. Weak Mutation 161: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D:234 - InsertUnaryOp IINC -1
   * Goal 191. Weak Mutation 162: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D:234 - InsertUnaryOp Negation
   * Goal 192. Weak Mutation 163: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D:234 - InsertUnaryOp IINC 1
   * Goal 193. Weak Mutation 164: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D:234 - InsertUnaryOp IINC -1
   * Goal 194. Weak Mutation 165: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D:234 - InsertUnaryOp Negation
   * Goal 195. Weak Mutation 166: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D:234 - InsertUnaryOp IINC 1
   * Goal 196. Weak Mutation 167: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D:234 - InsertUnaryOp IINC -1
   * Goal 197. Weak Mutation 168: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D:234 - ReplaceArithmeticOperator - -> +
   * Goal 198. Weak Mutation 169: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D:234 - ReplaceArithmeticOperator - -> %
   * Goal 199. Weak Mutation 170: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D:234 - ReplaceArithmeticOperator - -> *
   * Goal 200. Weak Mutation 171: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D:234 - ReplaceArithmeticOperator - -> /
   * Goal 201. Weak Mutation 172: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D:237 - ReplaceConstant - 0.0 -> 1.0
   * Goal 202. Weak Mutation 173: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D:237 - ReplaceConstant - 0.0 -> -1.0
   * Goal 203. Weak Mutation 174: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D:238 - ReplaceConstant - 0 -> 1
   * Goal 204. Weak Mutation 175: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D:238 - InsertUnaryOp Negation
   * Goal 205. Weak Mutation 176: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D:238 - InsertUnaryOp IINC 1
   * Goal 206. Weak Mutation 177: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D:238 - InsertUnaryOp IINC -1
   * Goal 207. Weak Mutation 178: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D:238 - ReplaceComparisonOperator >= -> -1
   * Goal 208. Weak Mutation 179: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D:238 - ReplaceComparisonOperator >= -> >
   * Goal 209. Weak Mutation 181: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D:239 - InsertUnaryOp Negation
   * Goal 210. Weak Mutation 182: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D:239 - InsertUnaryOp Negation
   * Goal 211. Weak Mutation 183: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D:239 - InsertUnaryOp IINC 1
   * Goal 212. Weak Mutation 184: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D:239 - InsertUnaryOp IINC -1
   * Goal 213. Weak Mutation 185: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D:239 - InsertUnaryOp Negation
   * Goal 214. Weak Mutation 186: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D:239 - InsertUnaryOp IINC 1
   * Goal 215. Weak Mutation 187: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D:239 - InsertUnaryOp IINC -1
   * Goal 216. Weak Mutation 188: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D:239 - ReplaceArithmeticOperator * -> +
   * Goal 217. Weak Mutation 189: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D:239 - ReplaceArithmeticOperator * -> %
   * Goal 218. Weak Mutation 190: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D:239 - ReplaceArithmeticOperator * -> -
   * Goal 219. Weak Mutation 191: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D:239 - ReplaceArithmeticOperator * -> /
   * Goal 220. Weak Mutation 192: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D:239 - ReplaceArithmeticOperator + -> %
   * Goal 221. Weak Mutation 193: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D:239 - ReplaceArithmeticOperator + -> -
   * Goal 222. Weak Mutation 194: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D:239 - ReplaceArithmeticOperator + -> *
   * Goal 223. Weak Mutation 195: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D:239 - ReplaceArithmeticOperator + -> /
   * Goal 224. Weak Mutation 196: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D:241 - ReplaceConstant - -0.5 -> 0.0
   * Goal 225. Weak Mutation 197: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D:241 - ReplaceConstant - -0.5 -> 1.0
   * Goal 226. Weak Mutation 198: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D:241 - ReplaceConstant - -0.5 -> -1.0
   * Goal 227. Weak Mutation 199: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D:241 - ReplaceConstant - -0.5 -> -1.5
   * Goal 228. Weak Mutation 200: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D:241 - ReplaceConstant - -0.5 -> 0.5
   * Goal 229. Weak Mutation 201: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D:241 - InsertUnaryOp Negation
   * Goal 230. Weak Mutation 202: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D:241 - ReplaceArithmeticOperator * -> +
   * Goal 231. Weak Mutation 203: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D:241 - ReplaceArithmeticOperator * -> %
   * Goal 232. Weak Mutation 204: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D:241 - ReplaceArithmeticOperator * -> -
   * Goal 233. Weak Mutation 205: org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D:241 - ReplaceArithmeticOperator * -> /
   * Goal 234. org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D:positive
   * Goal 235. org.apache.commons.math3.distribution.MultivariateNormalDistribution.getStandardDeviations()[D:nonempty
   */

  @Test
  public void test11()  throws Throwable  {
      Well19937a well19937a0 = new Well19937a(162);
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) 162;
      double[][] doubleArray1 = new double[1][6];
      doubleArray1[0] = doubleArray0;
      MultivariateNormalDistribution multivariateNormalDistribution0 = new MultivariateNormalDistribution((RandomGenerator) well19937a0, doubleArray0, doubleArray1);
      double[] doubleArray2 = multivariateNormalDistribution0.getStandardDeviations();
      double double0 = multivariateNormalDistribution0.density(doubleArray2);
  }

  //Test case number: 12
  /*
   * 97 covered goals:
   * Goal 1. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I17 Branch 1 IF_ICMPEQ L107 - true
   * Goal 2. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I34 Branch 2 IF_ICMPGE L111 - true
   * Goal 3. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I34 Branch 2 IF_ICMPGE L111 - false
   * Goal 4. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I42 Branch 3 IF_ICMPEQ L112 - true
   * Goal 5. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I106 Branch 4 IF_ICMPGE L132 - true
   * Goal 6. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I106 Branch 4 IF_ICMPGE L132 - false
   * Goal 7. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I114 Branch 5 IFGE L133 - true
   * Goal 8. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I145 Branch 6 IF_ICMPGE L140 - true
   * Goal 9. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I145 Branch 6 IF_ICMPGE L140 - false
   * Goal 10. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I175 Branch 7 IF_ICMPGE L148 - true
   * Goal 11. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I175 Branch 7 IF_ICMPGE L148 - false
   * Goal 12. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I190 Branch 8 IF_ICMPGE L150 - true
   * Goal 13. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I190 Branch 8 IF_ICMPGE L150 - false
   * Goal 14. org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D: I10 Branch 9 IF_ICMPEQ L179 - false
   * Goal 15. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I17 Branch 1 IF_ICMPEQ L107 - true in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 16. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I34 Branch 2 IF_ICMPGE L111 - false in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 17. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I34 Branch 2 IF_ICMPGE L111 - true in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 18. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I42 Branch 3 IF_ICMPEQ L112 - true in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 19. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I106 Branch 4 IF_ICMPGE L132 - true in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 20. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I106 Branch 4 IF_ICMPGE L132 - false in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 21. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I114 Branch 5 IFGE L133 - true in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 22. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I145 Branch 6 IF_ICMPGE L140 - false in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 23. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I145 Branch 6 IF_ICMPGE L140 - true in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 24. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I175 Branch 7 IF_ICMPGE L148 - false in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 25. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I175 Branch 7 IF_ICMPGE L148 - true in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 26. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I190 Branch 8 IF_ICMPGE L150 - true in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 27. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I190 Branch 8 IF_ICMPGE L150 - false in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 28. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D: I10 Branch 9 IF_ICMPEQ L179 - false in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:density([D)D
   * Goal 29. density([D)D_org.apache.commons.math3.exception.MathIllegalNumberException_DECLARED
   * Goal 30. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 105
   * Goal 31. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 107
   * Goal 32. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 111
   * Goal 33. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 112
   * Goal 34. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 117
   * Goal 35. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 119
   * Goal 36. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 122
   * Goal 37. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 125
   * Goal 38. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 127
   * Goal 39. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 130
   * Goal 40. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 132
   * Goal 41. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 133
   * Goal 42. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 139
   * Goal 43. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 140
   * Goal 44. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 141
   * Goal 45. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 142
   * Goal 46. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 145
   * Goal 47. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 148
   * Goal 48. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 149
   * Goal 49. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 150
   * Goal 50. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 151
   * Goal 51. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 155
   * Goal 52. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 156
   * Goal 53. org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D: Line 178
   * Goal 54. org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D: Line 179
   * Goal 55. org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D: Line 180
   * Goal 56. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 57. org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D
   * Goal 58. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 59. Weak Mutation 0: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - InsertUnaryOp Negation
   * Goal 60. Weak Mutation 1: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - InsertUnaryOp IINC 1
   * Goal 61. Weak Mutation 2: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - InsertUnaryOp IINC -1
   * Goal 62. Weak Mutation 3: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - ReplaceComparisonOperator == -> -2
   * Goal 63. Weak Mutation 9: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - ReplaceConstant - 0 -> 1
   * Goal 64. Weak Mutation 10: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp Negation
   * Goal 65. Weak Mutation 11: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp IINC 1
   * Goal 66. Weak Mutation 12: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp IINC -1
   * Goal 67. Weak Mutation 13: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp Negation
   * Goal 68. Weak Mutation 14: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp IINC 1
   * Goal 69. Weak Mutation 15: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp IINC -1
   * Goal 70. Weak Mutation 16: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - ReplaceComparisonOperator >= -> -1
   * Goal 71. Weak Mutation 17: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - ReplaceComparisonOperator >= -> >
   * Goal 72. Weak Mutation 19: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp Negation
   * Goal 73. Weak Mutation 20: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp IINC 1
   * Goal 74. Weak Mutation 21: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp IINC -1
   * Goal 75. Weak Mutation 22: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp Negation
   * Goal 76. Weak Mutation 23: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp IINC 1
   * Goal 77. Weak Mutation 24: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp IINC -1
   * Goal 78. Weak Mutation 25: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - ReplaceComparisonOperator == -> -2
   * Goal 79. Weak Mutation 34: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:132 - ReplaceConstant - 0 -> 1
   * Goal 80. Weak Mutation 35: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:132 - InsertUnaryOp Negation
   * Goal 81. Weak Mutation 36: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:132 - InsertUnaryOp IINC 1
   * Goal 82. Weak Mutation 37: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:132 - InsertUnaryOp IINC -1
   * Goal 83. Weak Mutation 38: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:132 - ReplaceComparisonOperator >= -> -1
   * Goal 84. Weak Mutation 39: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:132 - ReplaceComparisonOperator >= -> >
   * Goal 85. Weak Mutation 41: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:133 - InsertUnaryOp Negation
   * Goal 86. Weak Mutation 42: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:133 - InsertUnaryOp IINC 1
   * Goal 87. Weak Mutation 43: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:133 - InsertUnaryOp IINC -1
   * Goal 88. Weak Mutation 44: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:133 - ReplaceConstant - 0.0 -> 1.0
   * Goal 89. Weak Mutation 45: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:133 - ReplaceConstant - 0.0 -> -1.0
   * Goal 90. Weak Mutation 47: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:133 - ReplaceComparisonOperator >= -> ==
   * Goal 91. Weak Mutation 52: org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D:179 - InsertUnaryOp Negation
   * Goal 92. Weak Mutation 53: org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D:179 - InsertUnaryOp IINC 1
   * Goal 93. Weak Mutation 54: org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D:179 - InsertUnaryOp IINC -1
   * Goal 94. Weak Mutation 57: org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D:179 - ReplaceComparisonOperator == -> <=
   * Goal 95. Weak Mutation 58: org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D:180 - InsertUnaryOp Negation
   * Goal 96. Weak Mutation 59: org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D:180 - InsertUnaryOp IINC 1
   * Goal 97. Weak Mutation 60: org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D:180 - InsertUnaryOp IINC -1
   */

  @Test
  public void test12()  throws Throwable  {
      Well19937a well19937a0 = new Well19937a(162);
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) 162;
      double[][] doubleArray1 = new double[1][6];
      doubleArray1[0] = doubleArray0;
      MultivariateNormalDistribution multivariateNormalDistribution0 = new MultivariateNormalDistribution((RandomGenerator) well19937a0, doubleArray0, doubleArray1);
      double[] doubleArray2 = new double[0];
      try { 
        multivariateNormalDistribution0.density(doubleArray2);
      } catch(IllegalArgumentException e) {
         //
         // 0 != 1
         //
         assertThrownBy("org.apache.commons.math3.distribution.MultivariateNormalDistribution", e);
      }
  }

  //Test case number: 13
  /*
   * 61 covered goals:
   * Goal 1. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I17 Branch 1 IF_ICMPEQ L107 - true
   * Goal 2. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I34 Branch 2 IF_ICMPGE L111 - true
   * Goal 3. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I34 Branch 2 IF_ICMPGE L111 - false
   * Goal 4. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I42 Branch 3 IF_ICMPEQ L112 - true
   * Goal 5. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I106 Branch 4 IF_ICMPGE L132 - false
   * Goal 6. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I114 Branch 5 IFGE L133 - false
   * Goal 7. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I17 Branch 1 IF_ICMPEQ L107 - true in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 8. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I34 Branch 2 IF_ICMPGE L111 - false in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 9. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I34 Branch 2 IF_ICMPGE L111 - true in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 10. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I42 Branch 3 IF_ICMPEQ L112 - true in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 11. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I106 Branch 4 IF_ICMPGE L132 - false in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 12. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I114 Branch 5 IFGE L133 - false in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 13. <init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V_org.apache.commons.math3.exception.NumberIsTooSmallException_DECLARED
   * Goal 14. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 105
   * Goal 15. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 107
   * Goal 16. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 111
   * Goal 17. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 112
   * Goal 18. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 117
   * Goal 19. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 119
   * Goal 20. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 122
   * Goal 21. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 125
   * Goal 22. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 127
   * Goal 23. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 130
   * Goal 24. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 132
   * Goal 25. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 133
   * Goal 26. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 134
   * Goal 27. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 28. Weak Mutation 0: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - InsertUnaryOp Negation
   * Goal 29. Weak Mutation 1: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - InsertUnaryOp IINC 1
   * Goal 30. Weak Mutation 2: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - InsertUnaryOp IINC -1
   * Goal 31. Weak Mutation 3: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - ReplaceComparisonOperator == -> -2
   * Goal 32. Weak Mutation 9: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - ReplaceConstant - 0 -> 1
   * Goal 33. Weak Mutation 10: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp Negation
   * Goal 34. Weak Mutation 11: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp IINC 1
   * Goal 35. Weak Mutation 12: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp IINC -1
   * Goal 36. Weak Mutation 13: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp Negation
   * Goal 37. Weak Mutation 14: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp IINC 1
   * Goal 38. Weak Mutation 15: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp IINC -1
   * Goal 39. Weak Mutation 16: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - ReplaceComparisonOperator >= -> -1
   * Goal 40. Weak Mutation 17: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - ReplaceComparisonOperator >= -> >
   * Goal 41. Weak Mutation 19: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp Negation
   * Goal 42. Weak Mutation 20: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp IINC 1
   * Goal 43. Weak Mutation 21: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp IINC -1
   * Goal 44. Weak Mutation 22: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp Negation
   * Goal 45. Weak Mutation 23: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp IINC 1
   * Goal 46. Weak Mutation 24: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp IINC -1
   * Goal 47. Weak Mutation 25: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - ReplaceComparisonOperator == -> -2
   * Goal 48. Weak Mutation 34: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:132 - ReplaceConstant - 0 -> 1
   * Goal 49. Weak Mutation 35: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:132 - InsertUnaryOp Negation
   * Goal 50. Weak Mutation 36: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:132 - InsertUnaryOp IINC 1
   * Goal 51. Weak Mutation 37: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:132 - InsertUnaryOp IINC -1
   * Goal 52. Weak Mutation 38: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:132 - ReplaceComparisonOperator >= -> -1
   * Goal 53. Weak Mutation 41: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:133 - InsertUnaryOp Negation
   * Goal 54. Weak Mutation 42: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:133 - InsertUnaryOp IINC 1
   * Goal 55. Weak Mutation 43: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:133 - InsertUnaryOp IINC -1
   * Goal 56. Weak Mutation 44: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:133 - ReplaceConstant - 0.0 -> 1.0
   * Goal 57. Weak Mutation 45: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:133 - ReplaceConstant - 0.0 -> -1.0
   * Goal 58. Weak Mutation 46: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:133 - ReplaceComparisonOperator >= -> -1
   * Goal 59. Weak Mutation 49: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:134 - InsertUnaryOp Negation
   * Goal 60. Weak Mutation 50: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:134 - InsertUnaryOp IINC 1
   * Goal 61. Weak Mutation 51: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:134 - InsertUnaryOp IINC -1
   */

  @Test
  public void test13()  throws Throwable  {
      Well512a well512a0 = new Well512a(14L);
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (-1877.0);
      double[][] doubleArray1 = new double[1][5];
      doubleArray1[0] = doubleArray0;
      MultivariateNormalDistribution multivariateNormalDistribution0 = null;
      try {
        multivariateNormalDistribution0 = new MultivariateNormalDistribution((RandomGenerator) well512a0, doubleArray0, doubleArray1);
      } catch(IllegalArgumentException e) {
         //
         // -1,877 is smaller than, or equal to, the minimum (0): not positive definite matrix: value -1,877 at index 0
         //
         assertThrownBy("org.apache.commons.math3.distribution.MultivariateNormalDistribution", e);
      }
  }

  //Test case number: 14
  /*
   * 137 covered goals:
   * Goal 1. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I17 Branch 1 IF_ICMPEQ L107 - true
   * Goal 2. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I17 Branch 1 IF_ICMPEQ L107 - false
   * Goal 3. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I34 Branch 2 IF_ICMPGE L111 - true
   * Goal 4. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I34 Branch 2 IF_ICMPGE L111 - false
   * Goal 5. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I42 Branch 3 IF_ICMPEQ L112 - true
   * Goal 6. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I106 Branch 4 IF_ICMPGE L132 - true
   * Goal 7. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I106 Branch 4 IF_ICMPGE L132 - false
   * Goal 8. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I114 Branch 5 IFGE L133 - true
   * Goal 9. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I145 Branch 6 IF_ICMPGE L140 - true
   * Goal 10. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I145 Branch 6 IF_ICMPGE L140 - false
   * Goal 11. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I175 Branch 7 IF_ICMPGE L148 - true
   * Goal 12. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I175 Branch 7 IF_ICMPGE L148 - false
   * Goal 13. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I190 Branch 8 IF_ICMPGE L150 - true
   * Goal 14. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I190 Branch 8 IF_ICMPGE L150 - false
   * Goal 15. org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D: I17 Branch 11 IF_ICMPGE L212 - true
   * Goal 16. org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D: I17 Branch 11 IF_ICMPGE L212 - false
   * Goal 17. org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D: I44 Branch 12 IF_ICMPGE L218 - true
   * Goal 18. org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D: I44 Branch 12 IF_ICMPGE L218 - false
   * Goal 19. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I17 Branch 1 IF_ICMPEQ L107 - false in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 20. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I17 Branch 1 IF_ICMPEQ L107 - true in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 21. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I34 Branch 2 IF_ICMPGE L111 - false in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 22. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I34 Branch 2 IF_ICMPGE L111 - true in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 23. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I42 Branch 3 IF_ICMPEQ L112 - true in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 24. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I106 Branch 4 IF_ICMPGE L132 - true in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 25. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I106 Branch 4 IF_ICMPGE L132 - false in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 26. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I114 Branch 5 IFGE L133 - true in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 27. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I145 Branch 6 IF_ICMPGE L140 - false in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 28. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I145 Branch 6 IF_ICMPGE L140 - true in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 29. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I175 Branch 7 IF_ICMPGE L148 - false in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 30. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I175 Branch 7 IF_ICMPGE L148 - true in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 31. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I190 Branch 8 IF_ICMPGE L150 - true in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 32. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I190 Branch 8 IF_ICMPGE L150 - false in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 33. <init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V_org.apache.commons.math3.exception.MathIllegalNumberException_DECLARED
   * Goal 34. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 105
   * Goal 35. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 107
   * Goal 36. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 108
   * Goal 37. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 111
   * Goal 38. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 112
   * Goal 39. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 117
   * Goal 40. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 119
   * Goal 41. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 122
   * Goal 42. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 125
   * Goal 43. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 127
   * Goal 44. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 130
   * Goal 45. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 132
   * Goal 46. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 133
   * Goal 47. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 139
   * Goal 48. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 140
   * Goal 49. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 141
   * Goal 50. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 142
   * Goal 51. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 145
   * Goal 52. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 148
   * Goal 53. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 149
   * Goal 54. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 150
   * Goal 55. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 151
   * Goal 56. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 155
   * Goal 57. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 156
   * Goal 58. org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D: Line 209
   * Goal 59. org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D: Line 210
   * Goal 60. org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D: Line 212
   * Goal 61. org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D: Line 213
   * Goal 62. org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D: Line 216
   * Goal 63. org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D: Line 218
   * Goal 64. org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D: Line 219
   * Goal 65. org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D: Line 222
   * Goal 66. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 67. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 68. Weak Mutation 0: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - InsertUnaryOp Negation
   * Goal 69. Weak Mutation 1: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - InsertUnaryOp IINC 1
   * Goal 70. Weak Mutation 2: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - InsertUnaryOp IINC -1
   * Goal 71. Weak Mutation 3: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - ReplaceComparisonOperator == -> -2
   * Goal 72. Weak Mutation 4: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - ReplaceComparisonOperator == -> >=
   * Goal 73. Weak Mutation 6: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:108 - InsertUnaryOp Negation
   * Goal 74. Weak Mutation 7: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:108 - InsertUnaryOp IINC 1
   * Goal 75. Weak Mutation 8: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:108 - InsertUnaryOp IINC -1
   * Goal 76. Weak Mutation 9: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - ReplaceConstant - 0 -> 1
   * Goal 77. Weak Mutation 10: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp Negation
   * Goal 78. Weak Mutation 11: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp IINC 1
   * Goal 79. Weak Mutation 12: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp IINC -1
   * Goal 80. Weak Mutation 13: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp Negation
   * Goal 81. Weak Mutation 14: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp IINC 1
   * Goal 82. Weak Mutation 15: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp IINC -1
   * Goal 83. Weak Mutation 16: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - ReplaceComparisonOperator >= -> -1
   * Goal 84. Weak Mutation 17: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - ReplaceComparisonOperator >= -> >
   * Goal 85. Weak Mutation 19: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp Negation
   * Goal 86. Weak Mutation 20: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp IINC 1
   * Goal 87. Weak Mutation 21: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp IINC -1
   * Goal 88. Weak Mutation 22: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp Negation
   * Goal 89. Weak Mutation 23: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp IINC 1
   * Goal 90. Weak Mutation 24: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp IINC -1
   * Goal 91. Weak Mutation 25: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - ReplaceComparisonOperator == -> -2
   * Goal 92. Weak Mutation 34: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:132 - ReplaceConstant - 0 -> 1
   * Goal 93. Weak Mutation 35: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:132 - InsertUnaryOp Negation
   * Goal 94. Weak Mutation 36: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:132 - InsertUnaryOp IINC 1
   * Goal 95. Weak Mutation 37: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:132 - InsertUnaryOp IINC -1
   * Goal 96. Weak Mutation 38: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:132 - ReplaceComparisonOperator >= -> -1
   * Goal 97. Weak Mutation 39: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:132 - ReplaceComparisonOperator >= -> >
   * Goal 98. Weak Mutation 41: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:133 - InsertUnaryOp Negation
   * Goal 99. Weak Mutation 42: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:133 - InsertUnaryOp IINC 1
   * Goal 100. Weak Mutation 43: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:133 - InsertUnaryOp IINC -1
   * Goal 101. Weak Mutation 44: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:133 - ReplaceConstant - 0.0 -> 1.0
   * Goal 102. Weak Mutation 45: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:133 - ReplaceConstant - 0.0 -> -1.0
   * Goal 103. Weak Mutation 47: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:133 - ReplaceComparisonOperator >= -> ==
   * Goal 104. Weak Mutation 116: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:210 - InsertUnaryOp Negation
   * Goal 105. Weak Mutation 117: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:210 - InsertUnaryOp IINC 1
   * Goal 106. Weak Mutation 118: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:210 - InsertUnaryOp IINC -1
   * Goal 107. Weak Mutation 119: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:212 - ReplaceConstant - 0 -> 1
   * Goal 108. Weak Mutation 120: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:212 - InsertUnaryOp Negation
   * Goal 109. Weak Mutation 121: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:212 - InsertUnaryOp IINC 1
   * Goal 110. Weak Mutation 122: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:212 - InsertUnaryOp IINC -1
   * Goal 111. Weak Mutation 123: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:212 - InsertUnaryOp Negation
   * Goal 112. Weak Mutation 124: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:212 - InsertUnaryOp IINC 1
   * Goal 113. Weak Mutation 125: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:212 - InsertUnaryOp IINC -1
   * Goal 114. Weak Mutation 126: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:212 - ReplaceComparisonOperator >= -> -1
   * Goal 115. Weak Mutation 127: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:212 - ReplaceComparisonOperator >= -> >
   * Goal 116. Weak Mutation 129: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:213 - InsertUnaryOp Negation
   * Goal 117. Weak Mutation 130: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:213 - InsertUnaryOp IINC 1
   * Goal 118. Weak Mutation 131: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:213 - InsertUnaryOp IINC -1
   * Goal 119. Weak Mutation 132: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:218 - ReplaceConstant - 0 -> 1
   * Goal 120. Weak Mutation 133: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:218 - InsertUnaryOp Negation
   * Goal 121. Weak Mutation 134: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:218 - InsertUnaryOp IINC 1
   * Goal 122. Weak Mutation 135: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:218 - InsertUnaryOp IINC -1
   * Goal 123. Weak Mutation 136: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:218 - InsertUnaryOp Negation
   * Goal 124. Weak Mutation 137: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:218 - InsertUnaryOp IINC 1
   * Goal 125. Weak Mutation 138: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:218 - InsertUnaryOp IINC -1
   * Goal 126. Weak Mutation 139: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:218 - ReplaceComparisonOperator >= -> -1
   * Goal 127. Weak Mutation 140: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:218 - ReplaceComparisonOperator >= -> >
   * Goal 128. Weak Mutation 142: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:219 - InsertUnaryOp Negation
   * Goal 129. Weak Mutation 143: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:219 - InsertUnaryOp IINC 1
   * Goal 130. Weak Mutation 144: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:219 - InsertUnaryOp IINC -1
   * Goal 131. Weak Mutation 145: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:219 - InsertUnaryOp Negation
   * Goal 132. Weak Mutation 146: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:219 - InsertUnaryOp IINC 1
   * Goal 133. Weak Mutation 147: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:219 - InsertUnaryOp IINC -1
   * Goal 134. Weak Mutation 148: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:219 - ReplaceArithmeticOperator + -> %
   * Goal 135. Weak Mutation 149: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:219 - ReplaceArithmeticOperator + -> -
   * Goal 136. Weak Mutation 150: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:219 - ReplaceArithmeticOperator + -> *
   * Goal 137. Weak Mutation 151: org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D:219 - ReplaceArithmeticOperator + -> /
   */

  @Test
  public void test14()  throws Throwable  {
      Well19937a well19937a0 = new Well19937a(162);
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) 162;
      double[][] doubleArray1 = new double[1][6];
      doubleArray1[0] = doubleArray0;
      MultivariateNormalDistribution multivariateNormalDistribution0 = new MultivariateNormalDistribution((RandomGenerator) well19937a0, doubleArray0, doubleArray1);
      double[][] doubleArray2 = multivariateNormalDistribution0.sample(162);
      MultivariateNormalDistribution multivariateNormalDistribution1 = null;
      try {
        multivariateNormalDistribution1 = new MultivariateNormalDistribution((RandomGenerator) well19937a0, doubleArray0, doubleArray2);
      } catch(IllegalArgumentException e) {
         //
         // 162 != 1
         //
         assertThrownBy("org.apache.commons.math3.distribution.MultivariateNormalDistribution", e);
      }
  }

  //Test case number: 15
  /*
   * 89 covered goals:
   * Goal 1. org.apache.commons.math3.distribution.MultivariateNormalDistribution.getCovariances()Lorg/apache/commons/math3/linear/RealMatrix;: root-Branch
   * Goal 2. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I17 Branch 1 IF_ICMPEQ L107 - true
   * Goal 3. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I34 Branch 2 IF_ICMPGE L111 - true
   * Goal 4. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I34 Branch 2 IF_ICMPGE L111 - false
   * Goal 5. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I42 Branch 3 IF_ICMPEQ L112 - true
   * Goal 6. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I106 Branch 4 IF_ICMPGE L132 - true
   * Goal 7. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I106 Branch 4 IF_ICMPGE L132 - false
   * Goal 8. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I114 Branch 5 IFGE L133 - true
   * Goal 9. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I145 Branch 6 IF_ICMPGE L140 - true
   * Goal 10. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I145 Branch 6 IF_ICMPGE L140 - false
   * Goal 11. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I175 Branch 7 IF_ICMPGE L148 - true
   * Goal 12. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I175 Branch 7 IF_ICMPGE L148 - false
   * Goal 13. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I190 Branch 8 IF_ICMPGE L150 - true
   * Goal 14. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I190 Branch 8 IF_ICMPGE L150 - false
   * Goal 15. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.getCovariances()Lorg/apache/commons/math3/linear/RealMatrix;: root-Branch in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:getCovariances()Lorg/apache/commons/math3/linear/RealMatrix;
   * Goal 16. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I17 Branch 1 IF_ICMPEQ L107 - true in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 17. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I34 Branch 2 IF_ICMPGE L111 - false in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 18. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I34 Branch 2 IF_ICMPGE L111 - true in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 19. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I42 Branch 3 IF_ICMPEQ L112 - true in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 20. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I106 Branch 4 IF_ICMPGE L132 - true in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 21. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I106 Branch 4 IF_ICMPGE L132 - false in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 22. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I114 Branch 5 IFGE L133 - true in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 23. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I145 Branch 6 IF_ICMPGE L140 - false in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 24. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I145 Branch 6 IF_ICMPGE L140 - true in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 25. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I175 Branch 7 IF_ICMPGE L148 - false in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 26. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I175 Branch 7 IF_ICMPGE L148 - true in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 27. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I190 Branch 8 IF_ICMPGE L150 - true in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 28. Branch org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I190 Branch 8 IF_ICMPGE L150 - false in context: org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 29. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 105
   * Goal 30. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 107
   * Goal 31. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 111
   * Goal 32. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 112
   * Goal 33. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 117
   * Goal 34. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 119
   * Goal 35. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 122
   * Goal 36. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 125
   * Goal 37. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 127
   * Goal 38. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 130
   * Goal 39. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 132
   * Goal 40. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 133
   * Goal 41. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 139
   * Goal 42. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 140
   * Goal 43. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 141
   * Goal 44. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 142
   * Goal 45. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 145
   * Goal 46. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 148
   * Goal 47. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 149
   * Goal 48. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 150
   * Goal 49. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 151
   * Goal 50. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 155
   * Goal 51. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 156
   * Goal 52. org.apache.commons.math3.distribution.MultivariateNormalDistribution.getCovariances()Lorg/apache/commons/math3/linear/RealMatrix;: Line 173
   * Goal 53. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 54. org.apache.commons.math3.distribution.MultivariateNormalDistribution.getCovariances()Lorg/apache/commons/math3/linear/RealMatrix;
   * Goal 55. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
   * Goal 56. org.apache.commons.math3.distribution.MultivariateNormalDistribution.getCovariances()Lorg/apache/commons/math3/linear/RealMatrix;
   * Goal 57. Weak Mutation 0: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - InsertUnaryOp Negation
   * Goal 58. Weak Mutation 1: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - InsertUnaryOp IINC 1
   * Goal 59. Weak Mutation 2: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - InsertUnaryOp IINC -1
   * Goal 60. Weak Mutation 3: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - ReplaceComparisonOperator == -> -2
   * Goal 61. Weak Mutation 9: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - ReplaceConstant - 0 -> 1
   * Goal 62. Weak Mutation 10: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp Negation
   * Goal 63. Weak Mutation 11: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp IINC 1
   * Goal 64. Weak Mutation 12: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp IINC -1
   * Goal 65. Weak Mutation 13: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp Negation
   * Goal 66. Weak Mutation 14: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp IINC 1
   * Goal 67. Weak Mutation 15: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp IINC -1
   * Goal 68. Weak Mutation 16: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - ReplaceComparisonOperator >= -> -1
   * Goal 69. Weak Mutation 17: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - ReplaceComparisonOperator >= -> >
   * Goal 70. Weak Mutation 19: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp Negation
   * Goal 71. Weak Mutation 20: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp IINC 1
   * Goal 72. Weak Mutation 21: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp IINC -1
   * Goal 73. Weak Mutation 22: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp Negation
   * Goal 74. Weak Mutation 23: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp IINC 1
   * Goal 75. Weak Mutation 24: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp IINC -1
   * Goal 76. Weak Mutation 25: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - ReplaceComparisonOperator == -> -2
   * Goal 77. Weak Mutation 34: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:132 - ReplaceConstant - 0 -> 1
   * Goal 78. Weak Mutation 35: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:132 - InsertUnaryOp Negation
   * Goal 79. Weak Mutation 36: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:132 - InsertUnaryOp IINC 1
   * Goal 80. Weak Mutation 37: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:132 - InsertUnaryOp IINC -1
   * Goal 81. Weak Mutation 38: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:132 - ReplaceComparisonOperator >= -> -1
   * Goal 82. Weak Mutation 39: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:132 - ReplaceComparisonOperator >= -> >
   * Goal 83. Weak Mutation 41: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:133 - InsertUnaryOp Negation
   * Goal 84. Weak Mutation 42: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:133 - InsertUnaryOp IINC 1
   * Goal 85. Weak Mutation 43: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:133 - InsertUnaryOp IINC -1
   * Goal 86. Weak Mutation 44: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:133 - ReplaceConstant - 0.0 -> 1.0
   * Goal 87. Weak Mutation 45: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:133 - ReplaceConstant - 0.0 -> -1.0
   * Goal 88. Weak Mutation 47: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:133 - ReplaceComparisonOperator >= -> ==
   * Goal 89. org.apache.commons.math3.distribution.MultivariateNormalDistribution.getCovariances()Lorg/apache/commons/math3/linear/RealMatrix;:nonnull
   */

  @Test
  public void test15()  throws Throwable  {
      Well19937a well19937a0 = new Well19937a(162);
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) 162;
      double[][] doubleArray1 = new double[1][6];
      doubleArray1[0] = doubleArray0;
      MultivariateNormalDistribution multivariateNormalDistribution0 = new MultivariateNormalDistribution((RandomGenerator) well19937a0, doubleArray0, doubleArray1);
      Array2DRowRealMatrix array2DRowRealMatrix0 = (Array2DRowRealMatrix)multivariateNormalDistribution0.getCovariances();
  }

  //Test case number: 16
  /*
   * 36 covered goals:
   * Goal 1. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>([D[[D)V: root-Branch
   * Goal 2. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I17 Branch 1 IF_ICMPEQ L107 - true
   * Goal 3. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I34 Branch 2 IF_ICMPGE L111 - false
   * Goal 4. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: I42 Branch 3 IF_ICMPEQ L112 - false
   * Goal 5. <init>([D[[D)V_org.apache.commons.math3.exception.MathIllegalNumberException_DECLARED
   * Goal 6. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 105
   * Goal 7. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 107
   * Goal 8. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 111
   * Goal 9. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 112
   * Goal 10. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V: Line 113
   * Goal 11. org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>([D[[D)V
   * Goal 12. Weak Mutation 0: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - InsertUnaryOp Negation
   * Goal 13. Weak Mutation 1: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - InsertUnaryOp IINC 1
   * Goal 14. Weak Mutation 2: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - InsertUnaryOp IINC -1
   * Goal 15. Weak Mutation 3: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:107 - ReplaceComparisonOperator == -> -2
   * Goal 16. Weak Mutation 9: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - ReplaceConstant - 0 -> 1
   * Goal 17. Weak Mutation 10: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp Negation
   * Goal 18. Weak Mutation 11: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp IINC 1
   * Goal 19. Weak Mutation 12: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp IINC -1
   * Goal 20. Weak Mutation 13: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp Negation
   * Goal 21. Weak Mutation 14: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp IINC 1
   * Goal 22. Weak Mutation 15: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - InsertUnaryOp IINC -1
   * Goal 23. Weak Mutation 16: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:111 - ReplaceComparisonOperator >= -> -1
   * Goal 24. Weak Mutation 19: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp Negation
   * Goal 25. Weak Mutation 20: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp IINC 1
   * Goal 26. Weak Mutation 21: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp IINC -1
   * Goal 27. Weak Mutation 22: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp Negation
   * Goal 28. Weak Mutation 23: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp IINC 1
   * Goal 29. Weak Mutation 24: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - InsertUnaryOp IINC -1
   * Goal 30. Weak Mutation 26: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:112 - ReplaceComparisonOperator == -> >=
   * Goal 31. Weak Mutation 28: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:113 - InsertUnaryOp Negation
   * Goal 32. Weak Mutation 29: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:113 - InsertUnaryOp IINC 1
   * Goal 33. Weak Mutation 30: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:113 - InsertUnaryOp IINC -1
   * Goal 34. Weak Mutation 31: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:113 - InsertUnaryOp Negation
   * Goal 35. Weak Mutation 32: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:113 - InsertUnaryOp IINC 1
   * Goal 36. Weak Mutation 33: org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V:113 - InsertUnaryOp IINC -1
   */

  @Test
  public void test16()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      double[][] doubleArray1 = new double[3][0];
      MultivariateNormalDistribution multivariateNormalDistribution0 = null;
      try {
        multivariateNormalDistribution0 = new MultivariateNormalDistribution(doubleArray0, doubleArray1);
      } catch(IllegalArgumentException e) {
         //
         // 0 != 3
         //
         assertThrownBy("org.apache.commons.math3.distribution.MultivariateNormalDistribution", e);
      }
  }
}
