/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 29 01:48:55 GMT 2020
 */

package org.apache.commons.lang.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.Writer;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.function.UnaryOperator;
import org.apache.commons.lang.text.StrBuilder;
import org.apache.commons.lang.text.StrMatcher;
import org.apache.commons.lang.text.StrTokenizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StrBuilder_ESTest extends StrBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid startIndex: ");
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "Invalid startIndex: ");
      char[] charArray0 = new char[6];
      charArray0[0] = '}';
      charArray0[1] = 'e';
      charArray0[2] = ')';
      charArray0[3] = '(';
      StrBuilder strBuilder2 = strBuilder0.replace(5, 964, "Invalid startIndex: ");
      charArray0[4] = 'z';
      charArray0[5] = 'K';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder3 = strBuilder0.appendWithSeparators((Collection) linkedList0, "Invalid startIndex: ");
      String string0 = strBuilder3.rightString(97);
      StrBuilder strBuilder4 = new StrBuilder();
      StrBuilder strBuilder5 = strBuilder1.appendFixedWidthPadRight((Object) strBuilder4, 611, 'A');
      boolean boolean0 = strBuilder0.contains(',');
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(9);
      StrBuilder strBuilder1 = strBuilder0.deleteAll('K');
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) strBuilder1;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      objectArray0[1] = object0;
      objectArray0[2] = (Object) strBuilder1;
      objectArray0[3] = (Object) strBuilder1;
      objectArray0[4] = (Object) strBuilder1;
      objectArray0[5] = (Object) strBuilder0;
      objectArray0[6] = (Object) strBuilder0;
      char[] charArray0 = new char[4];
      charArray0[0] = 'K';
      charArray0[1] = '*';
      charArray0[2] = 'K';
      charArray0[3] = 'K';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoredMatcher(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators(objectArray0, "org.apache.commons.lang.text.StrMatcher$StringMatcher");
      int int0 = strBuilder0.lastIndexOf("");
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators(objectArray0, "org.apache.commons.lang.text.StrMatcher$StringMatcher");
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2364);
      StrBuilder strBuilder1 = strBuilder0.insert(0, (-2021L));
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("Invalid offset: ");
      StrBuilder strBuilder2 = strBuilder0.setNullText("Invalid offset: ");
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_StringMatcher0);
      StrBuilder strBuilder3 = new StrBuilder("Invalid offset: ");
      StrBuilder strBuilder4 = strBuilder0.replaceAll(')', ')');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder4.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      char[] charArray0 = new char[2];
      charArray0[0] = ')';
      charArray0[1] = ')';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 2364, 3120);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(4867);
      boolean boolean0 = strBuilder0.contains('f');
      StrBuilder strBuilder1 = strBuilder0.replaceAll("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter", "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[9];
      charArray0[0] = 'f';
      charArray0[1] = 'r';
      charArray0[2] = 'f';
      charArray0[3] = 'f';
      charArray0[4] = '/';
      charArray0[5] = 'f';
      charArray0[6] = 'f';
      charArray0[7] = 'f';
      charArray0[8] = 'f';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 173, 5092);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendPadding(5, 'k');
      char[] charArray0 = new char[1];
      charArray0[0] = 'k';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setQuoteMatcher(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Iterator) strBuilder_StrBuilderTokenizer0, (String) null);
      int int1 = strBuilder2.indexOf(';');
      int int2 = strBuilder2.indexOf('f');
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) 'k';
      objectArray0[1] = (Object) strMatcher0;
      objectArray0[2] = (Object) strBuilder_StrBuilderTokenizer0;
      objectArray0[3] = (Object) 'k';
      objectArray0[4] = (Object) strBuilder1;
      objectArray0[5] = (Object) strMatcher0;
      objectArray0[6] = (Object) strMatcher0;
      Object object0 = new Object();
      objectArray0[7] = object0;
      objectArray0[8] = (Object) strTokenizer0;
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators(objectArray0, (String) null);
      StrBuilder strBuilder4 = strBuilder1.append(0);
      boolean boolean0 = strBuilder2.equals(strBuilder1);
      int int3 = strBuilder1.hashCode();
      String string0 = strBuilder1.substring(32, 57);
      StrBuilder strBuilder5 = strBuilder4.appendWithSeparators((Iterator) strTokenizer0, (String) null);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      String string0 = null;
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      strBuilder0.size = (-3824);
      int int0 = strBuilder0.lastIndexOf('t');
      int int1 = 3898;
      // Undeclared exception!
      try { 
        strBuilder0.append((float) 3898);
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-3298);
      strBuilder0.size = (-3298);
      int int1 = 13;
      // Undeclared exception!
      try { 
        strBuilder0.append(0.0);
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoreEmptyTokens(true);
      char[] charArray0 = new char[5];
      charArray0[0] = '~';
      charArray0[1] = 'm';
      charArray0[2] = '>';
      charArray0[3] = 'A';
      charArray0[4] = ' ';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "px0}DI:QASE");
      StrMatcher strMatcher2 = StrMatcher.stringMatcher((String) null);
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.trim();
      StrBuilder strBuilder3 = strBuilder0.append((-2630));
      String string0 = strBuilder3.rightString(0);
      int int0 = strBuilder0.lastIndexOf("px0}DI:QASE", (-1));
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendPadding(5, 'k');
      char[] charArray0 = new char[1];
      charArray0[0] = 'k';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setQuoteMatcher(strMatcher0);
      String string0 = null;
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Iterator) strBuilder_StrBuilderTokenizer0, (String) null);
      StrBuilder strBuilder3 = strBuilder1.replaceAll((String) null, (String) null);
      int int1 = strBuilder2.indexOf(';');
      int int2 = strBuilder2.indexOf('f');
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) 'k';
      objectArray0[1] = (Object) strMatcher0;
      objectArray0[2] = (Object) strBuilder_StrBuilderTokenizer0;
      objectArray0[3] = (Object) 'k';
      objectArray0[4] = (Object) strBuilder1;
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher((String) null);
      objectArray0[5] = (Object) strMatcher0;
      objectArray0[6] = (Object) strMatcher0;
      Object object0 = new Object();
      objectArray0[8] = (Object) strTokenizer0;
      StrBuilder strBuilder4 = strBuilder2.appendWithSeparators(objectArray0, (String) null);
      StrBuilder strBuilder5 = strBuilder1.append(0);
      StrBuilder strBuilder6 = strBuilder2.clear();
      boolean boolean0 = strBuilder2.equals(strBuilder1);
      int int3 = strBuilder1.hashCode();
      // Undeclared exception!
      try { 
        strBuilder1.substring(32, 57);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("bX< Eb");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("1EHvw");
      StrBuilder strBuilder2 = new StrBuilder("1EHvw");
      StrBuilder strBuilder3 = strBuilder0.replaceAll(';', ';');
      StrBuilder strBuilder4 = strBuilder3.delete(0, ';');
      String string0 = strBuilder3.toString();
      String string1 = strBuilder0.leftString(0);
      StrBuilder strBuilder5 = new StrBuilder(3266);
      strBuilder5.size = 3266;
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder5.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((char[]) null);
      strBuilder_StrBuilderWriter0.write((String) null);
      String string2 = strBuilder5.getNewLineText();
      strBuilder_StrBuilderWriter0.write((char[]) null, 3266, 3266);
      StrBuilder strBuilder6 = strBuilder5.setLength(0);
      StrBuilder strBuilder7 = strBuilder5.deleteAll("1:%Lc;\"d");
      StrBuilder strBuilder8 = strBuilder3.append(strBuilder4);
      String string3 = strBuilder5.midString(0, 3);
      StrBuilder strBuilder9 = strBuilder5.appendFixedWidthPadRight(0, 3266, ';');
      strBuilder_StrBuilderWriter0.write((char[]) null);
      strBuilder_StrBuilderWriter0.write((char[]) null);
      StrBuilder strBuilder10 = strBuilder3.deleteAll(';');
      int int0 = 0;
      // Undeclared exception!
      try { 
        strBuilder4.toCharArray((-1335), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1335
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid startIndex: ");
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "Invalid startIndex: ");
      char[] charArray0 = new char[6];
      charArray0[0] = '}';
      charArray0[1] = 'e';
      charArray0[2] = ')';
      charArray0[3] = '(';
      charArray0[4] = 'z';
      charArray0[5] = 'K';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder2 = new StrBuilder();
      StrBuilder strBuilder3 = strBuilder1.appendFixedWidthPadRight((Object) strBuilder2, 611, 'A');
      boolean boolean0 = strBuilder0.contains(',');
      StrBuilder strBuilder4 = strBuilder1.deleteFirst("Invalid startIndex: ");
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.midString(44, (-2338));
      char[] charArray0 = new char[7];
      charArray0[0] = '$';
      charArray0[1] = 'F';
      charArray0[2] = 'g';
      charArray0[3] = '-';
      charArray0[4] = '?';
      charArray0[5] = 'B';
      charArray0[6] = '4';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(28, 28, charArray0, 28);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 28
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.setNewLineText(";i}<O>Y?k MGog +>");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(";i}<O>Y?k MGog +>");
      boolean boolean0 = strBuilder1.contains(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight(1083, 1444, 'n');
      int int0 = strBuilder0.indexOf('n');
      int int1 = strBuilder0.capacity();
      boolean boolean1 = strBuilder0.equals((Object) null);
      StrBuilder strBuilder3 = strBuilder0.insert(1, 0);
      char char0 = strBuilder0.charAt(44);
      int int2 = strBuilder3.lastIndexOf('n');
      StrBuilder strBuilder4 = strBuilder0.append('a');
      int int3 = strBuilder3.lastIndexOf(strMatcher1, 102);
      StrBuilder strBuilder5 = strBuilder4.append(106);
      StrBuilder strBuilder6 = strBuilder1.setLength(1444);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(".5xA");
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrBuilder strBuilder1 = strBuilder0.append(124.0F);
      char[] charArray0 = new char[1];
      charArray0[0] = 'h';
      int int0 = strMatcher0.isMatch(charArray0, 0, 0, (-570));
      int int1 = strMatcher0.isMatch(charArray0, 0, 0, 0);
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      boolean boolean1 = strBuilder0.endsWith(".5xA");
      StrBuilder strBuilder2 = strBuilder0.trim();
      StrBuilder strBuilder3 = strBuilder1.replaceAll(".5xA", "");
      StrBuilder strBuilder4 = new StrBuilder(0);
      StrBuilder strBuilder5 = strBuilder4.deleteFirst('h');
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher(".5xA");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder5.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      StrBuilder strBuilder6 = strBuilder3.append((-1L));
      StrBuilder strBuilder7 = strBuilder4.append("5=Y");
      StrBuilder strBuilder8 = strBuilder1.append((StrBuilder) null);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrMatcher strMatcher0 = StrMatcher.charMatcher('*');
      int int0 = StrBuilder.CAPACITY;
      char[] charArray0 = new char[8];
      charArray0[0] = '*';
      charArray0[1] = ',';
      charArray0[2] = '*';
      charArray0[3] = '*';
      charArray0[4] = '*';
      charArray0[5] = '*';
      charArray0[6] = ',';
      charArray0[7] = '*';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder2 = new StrBuilder('*');
      StrBuilder strBuilder3 = strBuilder0.trim();
      char[] charArray1 = strBuilder0.toCharArray();
      int int1 = strBuilder0.indexOf(strMatcher0);
      boolean boolean0 = strBuilder2.equals(strBuilder1);
      StrBuilder strBuilder4 = strBuilder1.append(charArray1, 0, 0);
      int int2 = strBuilder1.indexOf(strMatcher0, (-2320));
      StrBuilder strBuilder5 = new StrBuilder("]v[{w5luqX");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder5.new StrBuilderReader();
      int int3 = strBuilder_StrBuilderReader0.read();
      strBuilder_StrBuilderReader0.reset();
      StrBuilder strBuilder6 = strBuilder2.append(charArray1);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("CnBL;M:jyV:8y");
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrBuilder strBuilder1 = strBuilder0.append(124.0F);
      char[] charArray0 = new char[1];
      charArray0[0] = 'h';
      int int0 = strMatcher_NoMatcher0.isMatch(charArray0, 0, 0, (-570));
      int int1 = strMatcher_NoMatcher0.isMatch(charArray0, 0, 0, 0);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("");
      boolean boolean0 = strBuilder0.contains((StrMatcher) strMatcher_NoMatcher0);
      int int2 = strBuilder0.lastIndexOf("CnBL;M:jyV:8y", 3705);
      boolean boolean1 = strBuilder0.endsWith("CnBL;M:jyV:8y");
      StrBuilder strBuilder2 = strBuilder0.trim();
      StrBuilder strBuilder3 = strBuilder1.replaceAll("CnBL;M:jyV:8y", "Xu8e@'TExq10 ");
      StrBuilder strBuilder4 = new StrBuilder(0);
      StrBuilder strBuilder5 = strBuilder4.deleteFirst('h');
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("Xu8e@'TExq10 ");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder5.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      StrBuilder strBuilder6 = strBuilder3.append((-1L));
      StrBuilder strBuilder7 = strBuilder4.append("5=Y");
      StrBuilder strBuilder8 = strBuilder1.append((StrBuilder) null);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(481);
      StrBuilder strBuilder1 = strBuilder0.append((float) 481);
      StrMatcher strMatcher0 = StrMatcher.charMatcher('\\');
      char[] charArray0 = new char[7];
      charArray0[0] = '\\';
      charArray0[1] = '\\';
      charArray0[2] = '\\';
      charArray0[3] = '\\';
      charArray0[4] = '\\';
      charArray0[5] = '\\';
      charArray0[6] = '\\';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      boolean boolean0 = strBuilder1.contains(strMatcher0);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      Writer writer0 = strBuilder1.asWriter();
      // Undeclared exception!
      try { 
        strBuilder1.getChars(481, 524, charArray0, (-3355));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 524
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      String string0 = "X'6;Ur1av(2El";
      StrBuilder strBuilder0 = new StrBuilder("X'6;Ur1av(2El");
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrBuilder strBuilder2 = strBuilder1.deleteAll("X'6;Ur1av(2El");
      int int0 = 1958;
      int int1 = (-870);
      StringBuffer stringBuffer0 = new StringBuffer("X'6;Ur1av(2El");
      int int2 = (-1820);
      // Undeclared exception!
      try { 
        stringBuffer0.setLength((-1820));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1820
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid startIndex: ");
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "Invalid startIndex: ");
      char[] charArray0 = new char[6];
      charArray0[0] = '}';
      charArray0[1] = '}';
      charArray0[2] = ')';
      StrBuilder strBuilder2 = strBuilder1.append((Object) null);
      charArray0[3] = '(';
      charArray0[4] = '6';
      charArray0[5] = 'K';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder3 = new StrBuilder();
      StrBuilder strBuilder4 = strBuilder1.appendFixedWidthPadRight((Object) strBuilder3, 611, 'A');
      boolean boolean0 = strBuilder0.contains('6');
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.setNewLineText(";i}<O>Y?k MGog +>");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(";i}<O>Y?k MGog +>");
      boolean boolean0 = strBuilder1.contains(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight(1083, 1444, 'g');
      int int0 = strBuilder0.indexOf('g');
      int int1 = strBuilder0.capacity();
      boolean boolean1 = strBuilder0.equals((Object) null);
      StrBuilder strBuilder3 = strBuilder0.insert(1, 32);
      StrBuilder strBuilder4 = strBuilder3.appendFixedWidthPadRight((Object) "", 39, 'g');
      char char0 = strBuilder0.charAt(44);
      int int2 = strBuilder1.size();
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      String string0 = ".5xA";
      StrBuilder strBuilder0 = new StrBuilder(".5xA");
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrBuilder strBuilder1 = strBuilder0.append(124.0F);
      char[] charArray0 = new char[1];
      char char0 = 'h';
      charArray0[0] = 'h';
      int int0 = strMatcher0.isMatch(charArray0, 0, 0, (-570));
      int int1 = strMatcher0.isMatch(charArray0, 0, 0, 0);
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      int int2 = 3705;
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 0, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(".5xA");
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      char[] charArray0 = new char[1];
      char char0 = 'h';
      charArray0[0] = 'h';
      int int0 = strMatcher0.isMatch(charArray0, 0, 0, (-570));
      int int1 = strMatcher0.isMatch(charArray0, 0, 0, 0);
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      int int2 = strBuilder0.lastIndexOf(".5xA", 3705);
      boolean boolean1 = strBuilder0.endsWith(".5xA");
      StrBuilder strBuilder1 = strBuilder0.trim();
      Reader reader0 = strBuilder1.asReader();
      String string0 = "Xu8e@'TExq10 ";
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 3705, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      linkedList0.replaceAll(unaryOperator0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "java.runtime.name");
      int int0 = 408;
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight((Object) unaryOperator0, 408, '8');
      StrBuilder strBuilder3 = strBuilder2.append((Object) linkedList0);
      StrBuilder strBuilder4 = strBuilder0.setNullText("s=GZ Ed");
      char[] charArray0 = new char[9];
      charArray0[0] = '8';
      charArray0[1] = 'y';
      charArray0[2] = '8';
      charArray0[3] = '8';
      charArray0[4] = '8';
      charArray0[5] = '8';
      charArray0[6] = '8';
      charArray0[7] = 'r';
      charArray0[8] = '8';
      strBuilder3.buffer = charArray0;
      // Undeclared exception!
      try { 
        strBuilder1.toString();
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendPadding(5, 'k');
      char[] charArray0 = new char[1];
      charArray0[0] = 'k';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setQuoteMatcher(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Iterator) strBuilder_StrBuilderTokenizer0, (String) null);
      int int1 = strBuilder2.indexOf(';');
      int int2 = new Integer('k');
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) 'k';
      objectArray0[1] = (Object) strMatcher0;
      objectArray0[2] = (Object) strBuilder_StrBuilderTokenizer0;
      objectArray0[3] = (Object) 'k';
      objectArray0[4] = (Object) strBuilder1;
      objectArray0[5] = (Object) strMatcher0;
      objectArray0[6] = (Object) strMatcher0;
      Object object0 = new Object();
      objectArray0[7] = object0;
      objectArray0[8] = (Object) strTokenizer0;
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators(objectArray0, (String) null);
      Writer writer0 = strBuilder3.asWriter();
      StrBuilder strBuilder4 = strBuilder1.append(0);
      StrBuilder strBuilder5 = strBuilder2.clear();
      boolean boolean0 = strBuilder2.equals(strBuilder1);
      int int3 = new Integer('k');
      StrBuilder strBuilder6 = strBuilder4.setLength(2195);
      String string0 = strBuilder1.substring(32, 57);
      StrBuilder strBuilder7 = strBuilder4.appendWithSeparators((Iterator) strTokenizer0, (String) null);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(".5xA");
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrBuilder strBuilder1 = strBuilder0.append(124.0F);
      char[] charArray0 = new char[1];
      char char0 = 'h';
      charArray0[0] = 'h';
      int int0 = strMatcher0.isMatch(charArray0, 0, 0, (-570));
      int int1 = strMatcher0.isMatch(charArray0, 0, 0, 0);
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      char char1 = strBuilder0.charAt(0);
      int int2 = strBuilder0.lastIndexOf(".5xA", 3705);
      boolean boolean1 = strBuilder0.endsWith(".5xA");
      StrBuilder strBuilder2 = strBuilder0.trim();
      Reader reader0 = strBuilder2.asReader();
      String string0 = "Xu8e@'TExq10 ";
      StrBuilder strBuilder3 = strBuilder1.replaceAll(".5xA", "Xu8e@'TExq10 ");
      // Undeclared exception!
      try { 
        strBuilder1.append(charArray0, 3705, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      String string0 = "startIndex must be valid";
      StrBuilder strBuilder0 = new StrBuilder("startIndex must be valid");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      char[] charArray0 = new char[1];
      charArray0[0] = '';
      StrBuilder strBuilder1 = strBuilder0.insert(0, charArray0, 0, 0);
      StrBuilder strBuilder2 = strBuilder1.deleteFirst('');
      StrBuilder strBuilder3 = strBuilder1.append(2520.64886);
      StrBuilder strBuilder4 = strBuilder1.replaceFirst('', '8');
      StrBuilder strBuilder5 = strBuilder4.append('m');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = strBuilder_StrBuilderReader0.read(charBuffer0);
      strBuilder_StrBuilderReader0.mark(0);
      StrBuilder strBuilder6 = strBuilder5.reverse();
      // Undeclared exception!
      try { 
        strBuilder1.insert(48, charArray0, 48, 32);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 48
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 611);
      StrBuilder strBuilder1 = strBuilder0.setLength(117);
      boolean boolean0 = strBuilder1.startsWith("AV~R*h~sZD");
      StrBuilder strBuilder2 = strBuilder1.append((String) null, 611, (-1));
      StrBuilder strBuilder3 = strBuilder2.insert(117, (Object) null);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder4 = strBuilder3.appendWithSeparators((Collection) linkedList0, "~=BD(A;W*B+jN`37");
      int int1 = strBuilder2.indexOf(strMatcher0, (-1));
      char[] charArray0 = new char[4];
      charArray0[0] = 'e';
      charArray0[1] = 'y';
      charArray0[2] = '$';
      charArray0[3] = '-';
      // Undeclared exception!
      try { 
        strBuilder3.insert((-1), charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2224));
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      int int0 = strBuilder0.indexOf('1');
      int int1 = strBuilder0.lastIndexOf('3');
      boolean boolean0 = strBuilder0.startsWith("5.0");
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2364);
      StrBuilder strBuilder1 = strBuilder0.insert(0, (-2021L));
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("Invalid offset: ");
      StrBuilder strBuilder2 = strBuilder0.setNullText("Invalid offset: ");
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_StringMatcher0);
      StrBuilder strBuilder3 = strBuilder0.deleteCharAt(0);
      StrBuilder strBuilder4 = strBuilder0.replaceAll(')', ')');
      char[] charArray0 = new char[2];
      charArray0[0] = ')';
      charArray0[1] = ')';
      StringBuffer stringBuffer0 = new StringBuffer(116);
      StringBuffer stringBuffer1 = stringBuffer0.append((Object) strBuilder0);
      StrBuilder strBuilder5 = strBuilder3.append(stringBuffer0);
      StrBuilder strBuilder6 = strBuilder4.insert(0, charArray0);
      // Undeclared exception!
      try { 
        strBuilder0.insert(32, 0.0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Bs1cBA)Nr8>");
      StrBuilder strBuilder1 = strBuilder0.reverse();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "");
      LinkedList<StrBuilder> linkedList0 = new LinkedList<StrBuilder>();
      StrBuilder strBuilder3 = strBuilder1.appendWithSeparators((Collection) linkedList0, "pBi");
      StrBuilder strBuilder4 = strBuilder1.minimizeCapacity();
      char[] charArray0 = new char[9];
      StrBuilder strBuilder5 = strBuilder0.replaceAll(',', '6');
      // Undeclared exception!
      try { 
        strBuilder3.insert(34, charArray0, Integer.MAX_VALUE, 34);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: 2147483647
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrBuilder strBuilder1 = strBuilder0.append(124.0F);
      char[] charArray0 = new char[1];
      char char0 = 'h';
      charArray0[0] = 'h';
      int int0 = strMatcher_NoMatcher0.isMatch(charArray0, 0, 0, (-570));
      int int1 = strMatcher_NoMatcher0.isMatch(charArray0, 0, 0, 0);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("");
      boolean boolean0 = strBuilder0.contains((StrMatcher) strMatcher_NoMatcher0);
      int int2 = strBuilder0.lastIndexOf(".5xA", 3705);
      boolean boolean1 = strBuilder0.endsWith(".5xA");
      StrBuilder strBuilder2 = strBuilder0.trim();
      Reader reader0 = strBuilder2.asReader();
      String string0 = "Xu8e@'TExq10 ";
      StrBuilder strBuilder3 = strBuilder1.replaceAll(".5xA", "Xu8e@'TExq10 ");
      // Undeclared exception!
      try { 
        strBuilder1.append(charArray0, 3705, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) null, 0, '>');
      StrBuilder strBuilder2 = strBuilder1.append(strBuilder0);
      StrBuilder strBuilder3 = strBuilder1.replaceAll("vo]x_%_(j", (String) null);
      StrBuilder strBuilder4 = strBuilder1.appendPadding(1444, '>');
      String string0 = strBuilder4.substring(0, 0);
      StrBuilder strBuilder5 = strBuilder1.append("*");
      Writer writer0 = strBuilder5.asWriter();
      StrTokenizer strTokenizer0 = strBuilder3.asTokenizer();
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1320), (String) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1320
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      String string0 = "startIndex must be valid";
      StrBuilder strBuilder0 = new StrBuilder("startIndex must be valid");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      char[] charArray0 = new char[1];
      StrBuilder strBuilder1 = strBuilder0.insert(0, charArray0, 0, 0);
      StrBuilder strBuilder2 = strBuilder1.append(2520.64886);
      Object[] objectArray0 = new Object[8];
      objectArray0[1] = (Object) strBuilder_StrBuilderWriter0;
      objectArray0[2] = (Object) strBuilder0;
      objectArray0[4] = (Object) strBuilder2;
      objectArray0[6] = (Object) strBuilder_StrBuilderWriter0;
      objectArray0[7] = (Object) strBuilder0;
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators(objectArray0, "startIndex must be valid");
      StrBuilder strBuilder4 = strBuilder1.replaceFirst('\u0000', '8');
      StrBuilder strBuilder5 = strBuilder4.append('\u0000');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(0);
      StrBuilder strBuilder6 = strBuilder5.reverse();
      // Undeclared exception!
      try { 
        strBuilder1.insert(84, charArray0, 84, 32);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: 84
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("t");
      int int0 = strBuilder0.length();
      int int1 = strBuilder0.lastIndexOf('#', (-1448));
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(44);
      int int0 = strBuilder0.lastIndexOf("+Y}[Qalv>");
      char[] charArray0 = strBuilder0.getChars((char[]) null);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.insert(0, (char[]) null);
      // Undeclared exception!
      try { 
        strBuilder1.insert(1336, 1.5);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1336
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      String string0 = null;
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      char[] charArray0 = new char[6];
      charArray0[0] = 'W';
      charArray0[1] = '|';
      int int0 = (-2332);
      StrBuilder strBuilder1 = strBuilder0.appendPadding((-2332), '|');
      StrMatcher strMatcher0 = null;
      int int1 = (-1575);
      int int2 = strBuilder0.lastIndexOf((StrMatcher) null, (-1575));
      charArray0[2] = '-';
      charArray0[3] = 'r';
      charArray0[4] = 'W';
      charArray0[5] = '`';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, (-1), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      int int0 = 2016;
      StrBuilder strBuilder0 = new StrBuilder(2016);
      int int1 = strBuilder0.length();
      char char0 = '`';
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('`');
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(3722);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3722
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      int int0 = strBuilder0.lastIndexOf((StrMatcher) null);
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrBuilder strBuilder1 = strBuilder0.replace((StrMatcher) strMatcher_NoMatcher0, "ft)M>+L%m<wQx}vq)s", 0, 0, 0);
      StrBuilder strBuilder2 = strBuilder1.append("ft)M>+L%m<wQx}vq)s");
      StrBuilder strBuilder3 = strBuilder0.replaceFirst((String) null, "64[%'W2");
      String string0 = strBuilder3.leftString((-1608));
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4.9");
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("Hb!Zm");
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      char[] charArray0 = new char[5];
      charArray0[0] = '~';
      charArray0[1] = 'N';
      charArray0[2] = '(';
      charArray0[3] = 'S';
      charArray0[4] = 'R';
      // Undeclared exception!
      try { 
        strBuilder0.getChars((-815), 251, charArray0, (-815));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -815
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      StrBuilder strBuilder2 = strBuilder1.clear();
      StrBuilder strBuilder3 = strBuilder0.append(false);
      char[] charArray0 = new char[2];
      char char0 = ')';
      charArray0[0] = ')';
      StrBuilder strBuilder4 = strBuilder1.appendWithSeparators((Object[]) null, ";_db");
      charArray0[1] = 'V';
      StrBuilder strBuilder5 = strBuilder3.append('V');
      strBuilder3.buffer = charArray0;
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      StrBuilder strBuilder6 = strBuilder0.appendNull();
      // Undeclared exception!
      try { 
        strBuilder3.lastIndexOf((StrMatcher) strMatcher_CharSetMatcher0, 49);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.apache.commons.lang.text.StrMatcher$CharSetMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      int int0 = (-21);
      StrBuilder strBuilder0 = new StrBuilder((-21));
      char[] charArray0 = new char[0];
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrMatcher strMatcher1 = StrMatcher.charMatcher('W');
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher("");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "");
      StrBuilder strBuilder2 = strBuilder0.setNewLineText("");
      char char0 = '(';
      StrBuilder strBuilder3 = strBuilder2.append('(');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder3.new StrBuilderTokenizer();
      StrMatcher strMatcher3 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrBuilder strBuilder4 = strBuilder3.deleteFirst(strMatcher3);
      StrBuilder strBuilder5 = strBuilder2.append("");
      // Undeclared exception!
      try { 
        strBuilder5.insert((-21), "yHLVBK:6@_X/.Z}Wgh>");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -21
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.setLength(0);
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      char[] charArray0 = new char[6];
      charArray0[0] = '.';
      charArray0[1] = '@';
      charArray0[2] = 'r';
      List list0 = strBuilder_StrBuilderTokenizer0.getTokenList();
      charArray0[3] = 'L';
      charArray0[4] = '0';
      charArray0[5] = '\'';
      StrBuilder strBuilder2 = strBuilder0.insert(0, charArray0);
      int int0 = strBuilder0.indexOf(strMatcher0, Integer.MAX_VALUE);
      // Undeclared exception!
      try { 
        strBuilder1.deleteCharAt(Integer.MAX_VALUE);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2147483647
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = new StringBuffer(108);
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      StrBuilder strBuilder2 = strBuilder1.append(stringBuffer0);
      strBuilder_StrBuilderWriter0.write("4.1");
      char char0 = 'P';
      StrBuilder strBuilder3 = strBuilder1.deleteFirst('P');
      StrBuilder strBuilder4 = strBuilder1.append(stringBuffer0);
      String string0 = strBuilder1.midString(39, 0);
      // Undeclared exception!
      try { 
        strBuilder3.insert(108, "x)7?gX9KM<");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 108
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder1 = strBuilder0.insert(0, (-2146.5923F));
      StrBuilder strBuilder2 = strBuilder0.deleteFirst('V');
      StrBuilder strBuilder3 = strBuilder2.delete(5, 5);
      char[] charArray0 = new char[2];
      charArray0[0] = 'V';
      charArray0[1] = 'V';
      // Undeclared exception!
      try { 
        strBuilder3.getChars((-5676), 2372, charArray0, 2372);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -5676
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("FTm2(ZKR,<]2?)e");
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrBuilder strBuilder2 = strBuilder0.replaceAll("Invalid startIndex: ", "");
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      boolean boolean0 = strBuilder0.contains((StrMatcher) strMatcher_TrimMatcher0);
      StrBuilder strBuilder3 = strBuilder0.replaceFirst((StrMatcher) strMatcher_TrimMatcher0, "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadLeft((Object) "=Fp$X", 0, ')');
      String string0 = strBuilder0.leftString(0);
      StrBuilder strBuilder5 = strBuilder1.append("+<Ix}%pbQOIc(,0VnU", 0, 0);
      StrBuilder strBuilder6 = strBuilder0.append(strBuilder5);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder6.new StrBuilderReader();
      char[] charArray0 = new char[8];
      charArray0[0] = ')';
      charArray0[1] = ')';
      charArray0[2] = ')';
      charArray0[3] = ')';
      charArray0[4] = ')';
      charArray0[5] = ')';
      StrBuilder strBuilder7 = strBuilder5.minimizeCapacity();
      charArray0[6] = ')';
      charArray0[7] = ')';
      int int0 = (-1662);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 0, (-1662));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendPadding(0, 'H');
      StrBuilder strBuilder2 = new StrBuilder(701);
      StrBuilder strBuilder3 = strBuilder1.appendFixedWidthPadRight((Object) strBuilder2, 701, ']');
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(5);
      StrBuilder strBuilder1 = strBuilder0.append((-1258.6F));
      char[] charArray0 = new char[1];
      String string0 = strBuilder0.leftString(5);
      // Undeclared exception!
      try { 
        strBuilder1.substring((-1785), (-459));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1785
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("b?}Rce5l*@gDl-");
      int int0 = strBuilder0.indexOf((StrMatcher) null, 234);
      // Undeclared exception!
      try { 
        strBuilder0.insert(234, true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 234
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("{G@p|*w*S51T7nS0G");
      char[] charArray0 = new char[6];
      charArray0[0] = '#';
      charArray0[1] = '2';
      charArray0[2] = 'i';
      charArray0[3] = 'k';
      charArray0[4] = '&';
      charArray0[5] = '%';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.deleteAll((StrMatcher) strMatcher_CharSetMatcher0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = strBuilder0.toCharArray(0, 0);
      StrBuilder strBuilder1 = strBuilder0.clear();
      boolean boolean0 = strBuilder1.equalsIgnoreCase(strBuilder0);
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) strMatcher0;
      objectArray0[1] = (Object) strMatcher0;
      objectArray0[2] = (Object) strBuilder1;
      objectArray0[3] = (Object) strBuilder0;
      objectArray0[4] = (Object) strMatcher0;
      objectArray0[5] = (Object) strBuilder0;
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators(objectArray0, "");
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      int int1 = strBuilder_StrBuilderReader0.read();
      StrBuilder strBuilder3 = strBuilder1.minimizeCapacity();
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("[hvP7C|NTy");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[8];
      charArray0[0] = 'M';
      charArray0[1] = '~';
      charArray0[2] = ':';
      charArray0[3] = '7';
      charArray0[4] = '3';
      charArray0[5] = '~';
      charArray0[6] = '}';
      charArray0[7] = 'i';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 5, 5);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((-1));
      strBuilder_StrBuilderWriter0.write((String) null);
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StringBuffer stringBuffer0 = new StringBuffer();
      StringBuffer stringBuffer1 = stringBuffer0.insert(0, (String) null);
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, (-154), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("SunOS");
      char char0 = 'l';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((-224), 2, 'l');
      String string0 = strBuilder0.rightString((-224));
      int int0 = (-1);
      char char1 = 'L';
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight((-1), 5, 'L');
      StrBuilder strBuilder3 = strBuilder0.deleteFirst("");
      StrBuilder strBuilder4 = strBuilder3.setLength(5);
      int int1 = 62;
      // Undeclared exception!
      try { 
        strBuilder2.delete(62, (-778));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      char char0 = '[';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(0, 0, '[');
      StrBuilder strBuilder2 = strBuilder1.append(0);
      StrBuilder strBuilder3 = strBuilder1.setNullText("");
      char[] charArray0 = new char[0];
      strBuilder3.buffer = charArray0;
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('[');
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher((String) null);
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("5.1");
      // Undeclared exception!
      try { 
        strBuilder0.replaceFirst((StrMatcher) strMatcher_CharMatcher0, "/");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.validateIndex(0);
      StrBuilder strBuilder1 = new StrBuilder(0);
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1, 0, 0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterMatcher(strMatcher0);
      StrBuilder strBuilder3 = strBuilder1.appendWithSeparators((Iterator) strTokenizer0, "");
      StrBuilder strBuilder4 = strBuilder2.append(187.9F);
      StrBuilder strBuilder5 = strBuilder0.append(1.0F);
      StrBuilder strBuilder6 = strBuilder0.appendFixedWidthPadRight(0, 0, 'J');
      StrBuilder strBuilder7 = strBuilder4.append(strBuilder6);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      char[] charArray0 = new char[3];
      charArray0[0] = 'J';
      charArray0[1] = 'J';
      charArray0[2] = '+';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0, 0, 0);
      String string0 = strBuilder7.rightString(0);
      // Undeclared exception!
      try { 
        strBuilder6.toCharArray((-410), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -410
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("a{D^01LZM'$=o=&");
      char[] charArray0 = new char[9];
      StrBuilder strBuilder1 = strBuilder0.deleteAll("HBS 9pkL[_e-8{h");
      charArray0[0] = '\'';
      charArray0[1] = '_';
      charArray0[2] = '/';
      charArray0[3] = 'a';
      charArray0[4] = 'p';
      charArray0[5] = 'A';
      charArray0[6] = 'Q';
      charArray0[7] = 'y';
      charArray0[8] = '/';
      char[] charArray1 = strBuilder0.getChars(charArray0);
      // Undeclared exception!
      try { 
        strBuilder0.insert(578, (float) 578);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 578
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.insert(0, false);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      String string0 = "g/`[y>]SmLc|n";
      StrBuilder strBuilder0 = new StrBuilder("g/`[y>]SmLc|n");
      char[] charArray0 = new char[9];
      charArray0[0] = 'Y';
      charArray0[1] = '7';
      charArray0[2] = 'C';
      charArray0[3] = 'o';
      charArray0[4] = '3';
      charArray0[5] = '\"';
      charArray0[6] = '?';
      int int0 = 116;
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(116);
      StrBuilder strBuilder2 = strBuilder1.append(true);
      StrBuilder strBuilder3 = strBuilder2.append(1758L);
      charArray0[7] = 'E';
      charArray0[8] = '*';
      StrBuilder strBuilder4 = strBuilder0.append(charArray0);
      StrBuilder strBuilder5 = strBuilder4.append((double) 116);
      // Undeclared exception!
      try { 
        strBuilder1.setLength((-492));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -492
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter", "qY,A*6/F1$]P");
      // Undeclared exception!
      try { 
        strBuilder1.appendFixedWidthPadRight((Object) null, 1045, '@');
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      int int0 = (-570);
      StrBuilder strBuilder0 = new StrBuilder((-570));
      String string0 = "(lNpmZ";
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("(lNpmZ", "(lNpmZ");
      String string1 = "";
      // Undeclared exception!
      try { 
        strBuilder0.append("", (-570), 452);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2058);
      StrBuilder strBuilder1 = new StrBuilder(0);
      StrBuilder strBuilder2 = strBuilder0.append((Object) strBuilder1);
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadLeft((Object) strBuilder1, (-1604), 'f');
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray(2058, 2058);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      String string0 = "W!";
      StrBuilder strBuilder0 = new StrBuilder("W!");
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("W!");
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      char[] charArray0 = new char[9];
      char char0 = '5';
      charArray0[0] = '5';
      char char1 = ']';
      charArray0[1] = ']';
      char char2 = '5';
      charArray0[2] = '5';
      char char3 = '\'';
      charArray0[3] = '\'';
      charArray0[4] = 'h';
      charArray0[5] = '/';
      charArray0[6] = 'm';
      StrBuilder strBuilder1 = strBuilder0.append(true);
      charArray0[7] = 'n';
      char char4 = '5';
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Collection) linkedList0, "W!");
      int int1 = 34;
      StrBuilder strBuilder3 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder1.appendFixedWidthPadRight((Object) strBuilder3, 44, '5');
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3160);
      StrBuilder strBuilder1 = strBuilder0.append("OS/2", 2, 2);
      StrBuilder strBuilder2 = strBuilder0.append((-1474.9343F));
      char[] charArray0 = new char[5];
      charArray0[0] = '5';
      charArray0[1] = ')';
      charArray0[2] = 'c';
      charArray0[3] = '$';
      charArray0[4] = '7';
      // Undeclared exception!
      try { 
        strBuilder2.getChars(3160, 2, charArray0, 2);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.insert(0, true);
      char[] charArray0 = new char[6];
      charArray0[0] = '}';
      charArray0[1] = 'W';
      charArray0[2] = 'e';
      charArray0[3] = 'Q';
      charArray0[4] = '2';
      charArray0[5] = '?';
      strBuilder1.buffer = charArray0;
      String string0 = strBuilder0.substring(0);
      StrBuilder strBuilder2 = strBuilder0.deleteAll("tL/62#&9JLa");
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) 'e';
      objectArray0[1] = (Object) "tL/62#&9JLa";
      objectArray0[2] = (Object) 'e';
      objectArray0[3] = (Object) 'e';
      objectArray0[4] = (Object) strBuilder2;
      objectArray0[5] = (Object) "}WeQ";
      objectArray0[6] = (Object) strBuilder1;
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators(objectArray0, "}WeQ");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      // Undeclared exception!
      try { 
        strBuilder0.getChars(4, 1, strBuilder1.buffer, 4);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      String string0 = "QQZ;4\\Q";
      StrBuilder strBuilder0 = new StrBuilder("QQZ;4Q");
      char char0 = 'Z';
      StrBuilder strBuilder1 = strBuilder0.deleteAll('Z');
      int int0 = 48;
      // Undeclared exception!
      try { 
        strBuilder0.substring(97, 48);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append("\"hua)+YaXB");
      char[] charArray0 = new char[5];
      charArray0[0] = 'k';
      charArray0[1] = '8';
      charArray0[2] = 'h';
      charArray0[3] = '[';
      charArray0[4] = ' ';
      StrBuilder strBuilder2 = strBuilder1.insert(0, charArray0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray1 = new char[6];
      charArray1[0] = '[';
      charArray1[1] = 'k';
      charArray1[2] = '[';
      charArray1[3] = ' ';
      charArray1[4] = ' ';
      charArray1[5] = 'h';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray1, (-875), (-740));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("`mW\"_`jF[");
      StrBuilder strBuilder1 = strBuilder0.deleteAll("org.apache.commons.lang.text.StrBuilder");
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight((Object) strBuilder0, (-4141), 'o');
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      int int0 = strBuilder1.lastIndexOf(strMatcher0);
      StrBuilder strBuilder3 = strBuilder0.replaceFirst("C", "WHfAiR");
      int int1 = strBuilder3.indexOf(strMatcher0, 2936);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      int int0 = 1202;
      StrBuilder strBuilder0 = new StrBuilder(1202);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StringBuffer stringBuffer0 = new StringBuffer("Invalid offset: ");
      StringBuffer stringBuffer1 = new StringBuffer(stringBuffer0);
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer1, 1202, 1202);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.appendPadding(32, 'h');
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight(0, 32, '');
      StrBuilder strBuilder3 = strBuilder0.replace(0, 0, (String) null);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(32);
      long long0 = strBuilder_StrBuilderReader0.skip(0L);
      StrBuilder strBuilder4 = strBuilder3.append(strBuilder0, 0, 0);
      String string0 = "Invalid length: ";
      // Undeclared exception!
      try { 
        strBuilder4.replace(339, 2, "Invalid length: ");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      char char0 = 'V';
      StrBuilder strBuilder1 = strBuilder0.insert(0, 'V');
      StrBuilder strBuilder2 = strBuilder1.deleteFirst((String) null);
      StrBuilder strBuilder3 = strBuilder1.replaceFirst((StrMatcher) null, "=G");
      StrBuilder strBuilder4 = strBuilder3.minimizeCapacity();
      StringBuffer stringBuffer0 = new StringBuffer();
      int int1 = (-2858);
      // Undeclared exception!
      try { 
        stringBuffer0.insert((-2858), (Object) ")Ox^` Bb]pF>6=5");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2858
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      String string0 = null;
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 1813;
      StrBuilder strBuilder1 = new StrBuilder();
      boolean boolean0 = strBuilder1.startsWith("");
      int int1 = (-1725);
      StrBuilder strBuilder2 = strBuilder0.appendNull();
      StrBuilder strBuilder3 = strBuilder1.trim();
      StrBuilder strBuilder4 = strBuilder0.deleteFirst((String) null);
      // Undeclared exception!
      try { 
        strBuilder1.insert((-1725), (String) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1725
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 117;
      String string0 = "";
      StringBuffer stringBuffer0 = new StringBuffer("");
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      // Undeclared exception!
      try { 
        strBuilder0.substring(117, 575);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrBuilder strBuilder2 = strBuilder1.minimizeCapacity();
      char char0 = ',';
      StrBuilder strBuilder3 = strBuilder0.deleteFirst(',');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StringBuffer stringBuffer0 = new StringBuffer(116);
      char[] charArray0 = new char[7];
      charArray0[0] = ',';
      charArray0[1] = ':';
      charArray0[2] = ',';
      charArray0[3] = ',';
      charArray0[4] = ',';
      charArray0[5] = ',';
      charArray0[6] = ',';
      // Undeclared exception!
      try { 
        stringBuffer0.append(charArray0, 116, 116);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      int int0 = 97;
      StrBuilder strBuilder0 = new StrBuilder(97);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(97, 97, '>');
      StrBuilder strBuilder2 = strBuilder0.insert(97, (Object) null);
      StrBuilder strBuilder3 = strBuilder2.deleteCharAt(39);
      StrBuilder strBuilder4 = strBuilder3.append('&');
      char[] charArray0 = strBuilder0.toCharArray();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      String string0 = "x6N";
      strBuilder1.validateIndex(97);
      int int1 = (-1008);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("x6N", (-1008), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteAll((StrMatcher) null);
      int int0 = 39;
      // Undeclared exception!
      try { 
        strBuilder1.insert(39, (Object) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 39
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      String string0 = strBuilder0.midString(0, 0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[5];
      charArray0[0] = 'N';
      charArray0[1] = 'M';
      charArray0[2] = 'h';
      charArray0[3] = 'X';
      charArray0[4] = '&';
      StrBuilder strBuilder3 = strBuilder0.append(charArray0);
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "");
      strBuilder_StrBuilderReader0.mark(0);
      int int0 = strBuilder_StrBuilderReader0.read(charBuffer0);
      strBuilder_StrBuilderReader0.close();
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      int int1 = strBuilder3.indexOf(strMatcher0);
      char char0 = strBuilder0.charAt(0);
      boolean boolean0 = strBuilder3.endsWith("Ye@m7|{*8R&%bY9");
      // Undeclared exception!
      try { 
        strBuilder0.delete((-1), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(5);
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      String string0 = "Windows";
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("Windows");
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.append((long) 5);
      StrBuilder strBuilder3 = strBuilder1.deleteAll('G');
      StrBuilder strBuilder4 = strBuilder0.clear();
      // Undeclared exception!
      try { 
        strBuilder4.charAt(5);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 5
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      int int0 = 32;
      StrBuilder strBuilder0 = new StrBuilder(32);
      StrBuilder strBuilder1 = new StrBuilder(32);
      // Undeclared exception!
      try { 
        strBuilder0.insert(32, (Object) strBuilder1);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      String string0 = "startIndex must be valid";
      StrBuilder strBuilder0 = new StrBuilder("startIndex must be valid");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      char[] charArray0 = new char[1];
      charArray0[0] = '';
      StrBuilder strBuilder1 = strBuilder0.insert(0, charArray0, 0, 0);
      StrBuilder strBuilder2 = strBuilder1.deleteFirst('');
      StrBuilder strBuilder3 = strBuilder1.append(2520.64886);
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) strBuilder2;
      objectArray0[1] = (Object) strBuilder_StrBuilderWriter0;
      objectArray0[2] = (Object) strBuilder0;
      objectArray0[3] = (Object) strBuilder1;
      objectArray0[4] = (Object) strBuilder3;
      objectArray0[5] = (Object) strBuilder2;
      objectArray0[6] = (Object) strBuilder_StrBuilderWriter0;
      objectArray0[7] = (Object) strBuilder0;
      StrBuilder strBuilder4 = strBuilder3.appendWithSeparators(objectArray0, "startIndex must be valid");
      StrBuilder strBuilder5 = strBuilder1.replaceFirst('', '8');
      StrBuilder strBuilder6 = strBuilder5.append('m');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(0);
      StrBuilder strBuilder7 = strBuilder6.reverse();
      // Undeclared exception!
      try { 
        strBuilder1.insert(48, charArray0, 48, 32);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: 48
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2);
      int int0 = 1271;
      StrBuilder strBuilder1 = strBuilder0.append(2);
      char char0 = ' ';
      StrBuilder strBuilder2 = strBuilder1.deleteFirst(' ');
      char[] charArray0 = new char[0];
      strBuilder0.buffer = charArray0;
      String string0 = "Invalid length: ";
      // Undeclared exception!
      try { 
        strBuilder0.replace(2, 1271, "Invalid length: ");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2207);
      StrBuilder strBuilder1 = strBuilder0.append('I');
      char[] charArray0 = new char[7];
      charArray0[0] = 'I';
      charArray0[1] = 'I';
      charArray0[2] = 'I';
      charArray0[3] = 'I';
      charArray0[4] = 'I';
      charArray0[5] = 'I';
      charArray0[6] = 'A';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      int int0 = strBuilder1.indexOf((StrMatcher) strMatcher_CharSetMatcher0);
      StrBuilder strBuilder2 = strBuilder0.append("");
      boolean boolean0 = strBuilder0.contains('r');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.next();
      StrBuilder strBuilder3 = strBuilder1.append((Object) "I");
      StrBuilder strBuilder4 = strBuilder2.append(3044.29);
      StrBuilder strBuilder5 = strBuilder0.append(strBuilder1, 5, 5);
      StrBuilder strBuilder6 = strBuilder3.append('I');
      StrBuilder strBuilder7 = strBuilder4.append(strBuilder6);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('J');
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher((String) null);
      char[] charArray0 = new char[8];
      charArray0[0] = 'J';
      String string0 = strBuilder0.toString();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      charArray0[1] = 'J';
      charArray0[2] = 'J';
      charArray0[3] = 'J';
      charArray0[4] = 'J';
      charArray0[5] = 'J';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      charArray0[6] = 'J';
      StrMatcher strMatcher2 = StrMatcher.stringMatcher(")M@1@(]<:;EzTEFd+");
      charArray0[7] = 'u';
      StrMatcher strMatcher3 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst((StrMatcher) strMatcher_CharMatcher0);
      int int0 = strBuilder1.lastIndexOf('J', 2888);
      int int1 = strBuilder0.indexOf('U');
      StrBuilder strBuilder2 = strBuilder1.appendPadding((-1695), 'I');
      // Undeclared exception!
      try { 
        strBuilder1.deleteCharAt((-679));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -679
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      char char0 = ';';
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(0, ';');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((StrBuilder) null);
      StrBuilder strBuilder2 = new StrBuilder(114);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      char[] charArray0 = new char[7];
      StrBuilder strBuilder3 = strBuilder1.minimizeCapacity();
      charArray0[0] = 'i';
      strBuilder_StrBuilderWriter0.write(114);
      charArray0[1] = 'K';
      charArray0[2] = '\\';
      charArray0[3] = 'e';
      charArray0[4] = '7';
      charArray0[5] = 'I';
      charArray0[6] = 'w';
      strBuilder_StrBuilderWriter0.write(charArray0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset("<,QHw(D<Ud~");
      StrBuilder strBuilder4 = strBuilder1.appendWithSeparators((Iterator) strTokenizer0, "<,QHw(D<Ud~");
      String string0 = strBuilder0.toString();
      StrBuilder strBuilder5 = strBuilder4.trim();
      int int0 = strBuilder0.lastIndexOf(';');
      strBuilder_StrBuilderWriter0.write((-1));
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = "Invalid offset: ";
      strBuilder0.size = 0;
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 0);
      StrBuilder strBuilder1 = strBuilder0.trim();
      int int1 = (-2077);
      // Undeclared exception!
      try { 
        strBuilder0.append("Invalid offset: ", 0, (-2077));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("org.apache.commons.lang.text.StrBuilder", 0, 0);
      char[] charArray0 = new char[5];
      charArray0[0] = '.';
      charArray0[1] = '$';
      charArray0[2] = 'V';
      charArray0[3] = 'K';
      charArray0[4] = '1';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      StrBuilder strBuilder2 = strBuilder0.replaceAll((StrMatcher) strMatcher_CharSetMatcher0, "org.apache.commons.lang.text.StrBuilder");
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteAll('(');
      StrBuilder strBuilder2 = strBuilder1.append((String) null, (-1562), (-1562));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[3];
      charArray0[0] = 'B';
      charArray0[1] = 't';
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance();
      StrTokenizer strTokenizer1 = StrTokenizer.getCSVInstance();
      charArray0[2] = '0';
      int int0 = 1262;
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 1262, 1262);
      String string0 = "";
      // Undeclared exception!
      try { 
        strBuilder0.replace(1262, 1262, "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.size();
      int int1 = 32;
      // Undeclared exception!
      try { 
        strBuilder0.insert(32, (-1133.0000113118372));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.replace(931, (-1486), "org.apache.commons.lang.text.StrBuilder");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("");
      StrMatcher strMatcher1 = StrMatcher.charMatcher('@');
      StrMatcher strMatcher2 = StrMatcher.stringMatcher("");
      StrMatcher strMatcher3 = StrMatcher.charMatcher('I');
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.clear();
      int int0 = strBuilder2.indexOf(strMatcher0);
      StrBuilder strBuilder3 = strBuilder1.append((-656L));
      StrBuilder strBuilder4 = strBuilder0.setNewLineText("");
      StrMatcher strMatcher4 = StrMatcher.stringMatcher("rTb;J!J`+x.\\g-7Yhs");
      int int1 = strBuilder4.lastIndexOf(strMatcher0, 1905);
      int int2 = strBuilder4.indexOf(strMatcher0);
      String string0 = strBuilder1.leftString(1905);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder4.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Object[] objectArray0 = new Object[0];
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "java.specification.vendor");
      StrBuilder strBuilder2 = strBuilder1.append(0.0F);
      // Undeclared exception!
      try { 
        strBuilder1.substring(1653);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      char[] charArray0 = new char[6];
      charArray0[0] = '#';
      charArray0[1] = '=';
      charArray0[2] = '=';
      charArray0[3] = ' ';
      charArray0[4] = '~';
      charArray0[5] = 'Z';
      StrBuilder strBuilder1 = strBuilder0.insert(0, charArray0);
      // Undeclared exception!
      try { 
        strBuilder0.append("", 32, 32);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      String string0 = strBuilder0.rightString(0);
      StrBuilder strBuilder1 = strBuilder0.insert(0, 3201.0F);
      StrBuilder strBuilder2 = new StrBuilder(0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(0);
      String string1 = strBuilder2.substring(0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("", 0, (-851));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteAll('h');
      boolean boolean0 = strBuilder0.contains('j');
      StrBuilder strBuilder2 = strBuilder0.appendNewLine();
      StrBuilder strBuilder3 = strBuilder0.append((String) null, 2296, 0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("zNTq");
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("zNTq");
      // Undeclared exception!
      try { 
        strBuilder0.equals((StrBuilder) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-1731);
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity((-1731));
      // Undeclared exception!
      try { 
        strBuilder1.setCharAt((-1731), '6');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1731
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("r`2B9yQ1Y*m/(grF/N");
      int int0 = strBuilder0.indexOf('Y');
      StrBuilder strBuilder1 = strBuilder0.insert(0, (-1L));
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) null, " Y[_D");
      // Undeclared exception!
      try { 
        strBuilder0.insert(34, (float) 34);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 34
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4H$`L]v#-+a2-6>sFvU");
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("file.separator");
      // Undeclared exception!
      try { 
        strBuilder0.getChars((-5324), (-2237), (char[]) null, (-5324));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -5324
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("sT('1\"E");
      boolean boolean0 = strBuilder0.endsWith("sT('1\"E");
      StrBuilder strBuilder1 = new StrBuilder(2);
      boolean boolean1 = strBuilder0.equals(strBuilder1);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      int int0 = (-805);
      StrBuilder strBuilder0 = new StrBuilder((-805));
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt((-805));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -805
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.insert(0, '(');
      strBuilder0.validateIndex(0);
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrBuilder strBuilder2 = strBuilder0.replaceFirst(strMatcher0, "");
      StrBuilder strBuilder3 = strBuilder2.insert(0, "");
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadLeft(0, 0, '=');
      char[] charArray0 = new char[0];
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder5 = strBuilder4.append('\\');
      String string0 = strBuilder4.leftString(0);
      StrBuilder strBuilder6 = strBuilder0.appendFixedWidthPadLeft(0, 0, '=');
      // Undeclared exception!
      try { 
        strBuilder3.validateRange((-1037), (-1037));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1037
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1478));
      StrBuilder strBuilder1 = strBuilder0.setNullText((String) null);
      StrBuilder strBuilder2 = strBuilder1.append("Y");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("4zXv%(|*&A.UpW");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      StrBuilder strBuilder3 = strBuilder1.appendFixedWidthPadLeft((-2348), (-1478), 'R');
      StrBuilder strBuilder4 = strBuilder1.replaceAll("T+m-9SGpe49)oI", "T+m-9SGpe49)oI");
      StrBuilder strBuilder5 = strBuilder4.setLength(2858);
      // Undeclared exception!
      try { 
        strBuilder4.deleteCharAt((-2348));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2348
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.append((-1004));
      StrBuilder strBuilder2 = strBuilder1.deleteCharAt(0);
      StrBuilder strBuilder3 = strBuilder0.insert(0, (char[]) null);
      StrBuilder strBuilder4 = strBuilder2.append(82.2977);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder1.replaceAll("r/a<Y", "r/a<Y");
      int int0 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      char[] charArray0 = new char[1];
      charArray0[0] = 'z';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StrBuilder strBuilder2 = strBuilder1.minimizeCapacity();
      boolean boolean0 = strBuilder1.contains('z');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(234L);
      strBuilder_StrBuilderReader0.close();
      boolean boolean1 = strBuilder1.equalsIgnoreCase(strBuilder2);
      boolean boolean2 = strBuilder0.isEmpty();
      int int0 = strBuilder1.lastIndexOf('z', 0);
      int int1 = 1326;
      char char0 = 'Y';
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadLeft(0, 1326, 'Y');
      StrBuilder strBuilder4 = strBuilder3.appendFixedWidthPadRight((Object) strBuilder2, 0, 'z');
      char[] charArray1 = new char[1];
      charArray1[0] = 'z';
      // Undeclared exception!
      try { 
        strBuilder4.insert(1274, charArray1, (-2814), 1274);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: -2814
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 1;
      char char0 = 'A';
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(1, 'A');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(5, 'B');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 5
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      char char0 = '&';
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("");
      // Undeclared exception!
      try { 
        strBuilder0.insert(97, '&');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 97
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.setNullText("");
      StrBuilder strBuilder2 = strBuilder0.deleteAll((String) null);
      StrBuilder strBuilder3 = strBuilder0.trim();
      int int0 = strBuilder0.indexOf('4');
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      String string0 = strBuilder0.leftString(0);
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('@');
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("(BY@Vm{*v4GHs +7");
      StrMatcher strMatcher1 = StrMatcher.stringMatcher((String) null);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst((StrMatcher) strMatcher_CharMatcher0);
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) strBuilder1;
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) strMatcher1;
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators(objectArray0, "");
      StrBuilder strBuilder3 = strBuilder1.append(strBuilder0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(185);
      String string0 = null;
      StrBuilder strBuilder1 = new StrBuilder((String) null);
      char[] charArray0 = new char[7];
      charArray0[1] = 'C';
      charArray0[2] = '~';
      charArray0[3] = 'g';
      charArray0[4] = 'n';
      StrBuilder strBuilder2 = strBuilder1.deleteAll((String) null);
      charArray0[5] = '0';
      charArray0[6] = 'W';
      strBuilder1.buffer = charArray0;
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadRight((Object) strBuilder1, 2291, 'C');
      int int0 = (-1875);
      // Undeclared exception!
      try { 
        strBuilder0.charAt((-1875));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1875
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[7];
      charArray0[0] = '';
      charArray0[1] = '.';
      charArray0[2] = 'L';
      charArray0[3] = ';';
      charArray0[4] = 'U';
      charArray0[5] = '\'';
      charArray0[6] = '{';
      StrBuilder strBuilder1 = strBuilder0.insert(0, charArray0, 0, 0);
      strBuilder_StrBuilderWriter0.write("4]9$CC:.");
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight((Object) "4]9$CC:.", 0, 'h');
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip((-79L));
      char[] charArray0 = null;
      int int0 = (-2513);
      // Undeclared exception!
      try { 
        strBuilder0.insert(1084, (char[]) null, 904, 2419);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1084
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2);
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder strBuilder2 = new StrBuilder("|\"u");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterMatcher(strMatcher0);
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators((Iterator) strTokenizer0, "SunOS");
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadLeft((Object) strBuilder2, 0, 'x');
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(249);
      StrMatcher strMatcher0 = StrMatcher.charMatcher('h');
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      String string0 = strBuilder0.toString();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('h', 'Z');
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('i', 'i');
      Writer writer0 = strBuilder1.asWriter();
      StrMatcher strMatcher0 = StrMatcher.charMatcher('E');
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.lastIndexOf("f.P] ", 250);
      StrBuilder strBuilder1 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("kTB<@(36");
      StrBuilder strBuilder2 = strBuilder0.replaceAll(strMatcher0, "kTB<@(36");
      StrBuilder strBuilder3 = strBuilder1.setLength(478);
      StrBuilder strBuilder4 = strBuilder3.trim();
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      char[] charArray0 = new char[9];
      charArray0[0] = '~';
      charArray0[1] = '[';
      charArray0[2] = '9';
      charArray0[3] = 'g';
      charArray0[4] = 'w';
      charArray0[5] = 'X';
      charArray0[6] = 'm';
      charArray0[7] = 'M';
      charArray0[8] = ']';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(1708, 117, charArray0, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 117
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.delete(0, 0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrBuilder strBuilder2 = strBuilder1.replaceAll(strMatcher0, "D+tFB1pH|");
      StrBuilder strBuilder3 = strBuilder0.insert(0, (long) 0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder3.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(0);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[4];
      charArray0[0] = 'S';
      charArray0[1] = '~';
      charArray0[2] = 'g';
      charArray0[3] = '[';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      int int0 = 5234;
      StrBuilder strBuilder0 = new StrBuilder(5234);
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      // Undeclared exception!
      try { 
        strBuilder1.insert(5234, 1518L);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 5234
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterString("C,H&^)Ug&uiQe88')");
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "FJ9bPI$Zi&%2F,YPy");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip((-360L));
      int int0 = strBuilder_StrBuilderReader0.read();
      int int1 = strBuilder1.lastIndexOf('1');
      StrBuilder strBuilder2 = strBuilder1.deleteFirst('1');
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      int int2 = strBuilder1.size();
      char[] charArray0 = new char[9];
      charArray0[0] = '1';
      charArray0[1] = '&';
      charArray0[2] = '1';
      charArray0[3] = '1';
      charArray0[4] = '1';
      charArray0[5] = '1';
      charArray0[6] = '1';
      charArray0[7] = '1';
      charArray0[8] = '1';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(0, (-1), charArray0, (-3030));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      // Undeclared exception!
      try { 
        strBuilder0.getChars(332, (-56), (char[]) null, (-56));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -56
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      int int0 = (-3372);
      StrBuilder strBuilder0 = new StrBuilder((-3372));
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('1');
      StrBuilder strBuilder2 = strBuilder1.minimizeCapacity();
      // Undeclared exception!
      try { 
        strBuilder2.validateRange(115, 115);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrMatcher strMatcher0 = StrMatcher.charMatcher('*');
      int int0 = strBuilder0.indexOf(strMatcher0);
      char[] charArray0 = new char[8];
      charArray0[0] = '*';
      charArray0[1] = ',';
      charArray0[2] = '*';
      charArray0[3] = '*';
      charArray0[4] = '*';
      charArray0[5] = '*';
      charArray0[6] = '*';
      charArray0[7] = '*';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder2 = strBuilder0.append((Object) strBuilder1);
      StrBuilder strBuilder3 = strBuilder0.trim();
      char[] charArray1 = strBuilder0.toCharArray();
      StrBuilder strBuilder4 = strBuilder3.appendFixedWidthPadRight((Object) strBuilder0, (-1), '+');
      int int1 = strBuilder4.indexOf(strMatcher0);
      boolean boolean0 = strBuilder2.equals(strBuilder1);
      StrBuilder strBuilder5 = strBuilder1.append(charArray1, 0, 0);
      int int2 = strBuilder4.indexOf(strMatcher0, (-2320));
      StrBuilder strBuilder6 = new StrBuilder("]v[{w5luqX");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder6.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("e)a1aT");
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      char[] charArray0 = new char[4];
      charArray0[0] = '\'';
      charArray0[1] = 'I';
      charArray0[2] = '*';
      charArray0[3] = 'z';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder0.indexOf(strMatcher0, (-3537));
      char[] charArray1 = new char[3];
      charArray1[0] = '|';
      StrBuilder strBuilder1 = strBuilder0.append((long) (-1));
      String string0 = strBuilder0.leftString((-1));
      charArray1[1] = '+';
      charArray1[2] = 'b';
      // Undeclared exception!
      try { 
        strBuilder0.insert((-3537), charArray1);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3537
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0, (-425));
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[7];
      charArray0[0] = '-';
      charArray0[1] = 'u';
      charArray0[2] = 'd';
      charArray0[3] = 'X';
      charArray0[4] = 'G';
      charArray0[5] = 'w';
      charArray0[6] = '!';
      StrBuilder strBuilder1 = strBuilder0.insert(0, charArray0);
      char[] charArray1 = strBuilder0.toCharArray();
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((Object) "`}qOpHhn", (-3797), 'E');
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      StrBuilder strBuilder3 = strBuilder2.replaceFirst(strMatcher0, "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      int int0 = 25;
      StrBuilder strBuilder0 = new StrBuilder(25);
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      int int1 = strBuilder0.lastIndexOf(strMatcher0, (-356));
      char[] charArray0 = strBuilder0.toCharArray();
      char char0 = 'D';
      int int2 = strBuilder0.indexOf('D', 25);
      // Undeclared exception!
      try { 
        strBuilder0.replace(strMatcher0, "", 25, (-1), 102);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      boolean boolean0 = strBuilder0.endsWith("");
      int int0 = strBuilder0.hashCode();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[3];
      charArray0[0] = 'A';
      charArray0[1] = 'F';
      charArray0[2] = 'a';
      int int1 = strBuilder_StrBuilderReader0.read(charArray0);
      strBuilder_StrBuilderReader0.close();
      // Undeclared exception!
      try { 
        strBuilder0.insert(961, ']');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 961
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.insert(0, 1.0);
      StrBuilder strBuilder2 = strBuilder0.trim();
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      String string0 = strBuilder1.toString();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      StrBuilder strBuilder3 = strBuilder0.append((Object) strBuilder1);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(44);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "aG+O, }|!YkE4f1o");
      StrBuilder strBuilder2 = strBuilder0.replaceFirst("startIndex must be valid", "java.lang.Object");
      StrBuilder strBuilder3 = strBuilder0.replaceFirst(strMatcher0, "");
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.ext.dirs");
      // Undeclared exception!
      try { 
        strBuilder0.insert(39, false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 39
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = 0;
      LinkedList<String> linkedList0 = new LinkedList<String>();
      boolean boolean0 = linkedList0.add("");
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
      int int1 = (-2008);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-2008), "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2008
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("&K(xTk=DFx1", "HQZa_?<v++,P.~7 TY");
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("ZX:a^|");
      StrBuilder strBuilder1 = strBuilder0.append(1075L);
      StrBuilder strBuilder2 = strBuilder0.appendPadding(2, '}');
      StrBuilder strBuilder3 = new StrBuilder(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder3.new StrBuilderTokenizer();
      char[] charArray0 = new char[8];
      charArray0[0] = '}';
      charArray0[1] = '}';
      charArray0[2] = '}';
      charArray0[3] = '}';
      charArray0[4] = 's';
      charArray0[5] = '}';
      charArray0[6] = '}';
      charArray0[7] = '}';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 0, 4);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(5);
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1, 0, 0);
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder1);
      StrBuilder strBuilder4 = strBuilder0.append((long) 5);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.replaceAll("", "");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrBuilder strBuilder2 = strBuilder1.replaceFirst(strMatcher0, "Invalid offset: ");
      // Undeclared exception!
      try { 
        strBuilder0.charAt(1854);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1854
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrBuilder strBuilder1 = strBuilder0.replace((StrMatcher) strMatcher_NoMatcher0, "ft)M>+L%m<wQx}vq)s", 0, 0, 0);
      StrBuilder strBuilder2 = strBuilder1.append("ft)M>+L%m<wQx}vq)s");
      StrBuilder strBuilder3 = strBuilder0.replaceFirst((String) null, "64[%'W2");
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      String string0 = "java.vendor";
      StrBuilder strBuilder0 = new StrBuilder("java.vendor");
      int int0 = 0;
      strBuilder0.validateIndex(0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[4];
      charArray0[0] = 'V';
      charArray0[1] = '?';
      charArray0[2] = ' ';
      Writer writer0 = strBuilder_StrBuilderWriter0.append(' ');
      Writer writer1 = strBuilder_StrBuilderWriter0.append('?');
      charArray0[3] = 'V';
      strBuilder0.buffer = charArray0;
      char[] charArray1 = new char[3];
      charArray1[0] = '6';
      // Undeclared exception!
      try { 
        strBuilder0.rightString(457);
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer0 = new Integer((-5204));
      char[] charArray0 = new char[0];
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "%Y*EtZZ*h-~>");
      boolean boolean0 = linkedList0.add(integer0);
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
      StrBuilder strBuilder3 = strBuilder0.deleteCharAt(0);
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher("");
      StrMatcher strMatcher3 = StrMatcher.charMatcher('.');
      int int0 = strBuilder3.lastIndexOf(strMatcher2);
      StrBuilder strBuilder4 = strBuilder3.replaceAll("", "#H,&p$G]wJ^");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder strBuilder5 = strBuilder1.trim();
      StrBuilder strBuilder6 = strBuilder1.deleteAll("");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder3.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(charArray0);
      // Undeclared exception!
      try { 
        strBuilder4.insert((-424), (double) (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -424
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      StrBuilder strBuilder2 = strBuilder0.append((Object) strBuilder1);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators((Collection) linkedList0, "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      String string0 = strBuilder0.rightString(0);
      StrBuilder strBuilder4 = strBuilder1.setNewLineText("");
      int int0 = strBuilder1.validateRange(0, 0);
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('E');
      boolean boolean0 = strBuilder3.contains(strMatcher0);
      boolean boolean1 = strBuilder0.contains("");
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(">X<uEb");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("1EHvw");
      StrBuilder strBuilder2 = strBuilder1.append((char[]) null);
      char char0 = ';';
      StrBuilder strBuilder3 = strBuilder0.replaceAll(';', ';');
      // Undeclared exception!
      try { 
        strBuilder3.delete(0, (-303));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder("HP-UX");
      int int0 = 0;
      char char0 = 'P';
      StrBuilder strBuilder2 = strBuilder1.clear();
      char char1 = 'F';
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadRight(0, 0, 'F');
      StrBuilder strBuilder4 = strBuilder3.clear();
      // Undeclared exception!
      try { 
        strBuilder3.insert((-1507), '0');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1507
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(114);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      boolean boolean0 = strBuilder_StrBuilderTokenizer0.hasNext();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      char[] charArray0 = new char[1];
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strBuilder_StrBuilderTokenizer0, "");
      charArray0[0] = 'q';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      StrBuilder strBuilder2 = strBuilder0.deleteFirst((StrMatcher) strMatcher_CharSetMatcher0);
      int int0 = strBuilder1.size();
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(572, 572, 'k');
      String string0 = strBuilder0.substring(0);
      StrBuilder strBuilder2 = strBuilder1.deleteFirst("*0Kw");
      // Undeclared exception!
      try { 
        strBuilder2.append(strBuilder1, 57, 572);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(115);
      // Undeclared exception!
      try { 
        strBuilder0.delete(115, 115);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      char[] charArray0 = null;
      StrBuilder strBuilder2 = strBuilder0.append((char[]) null);
      int int0 = 1;
      char char0 = 'K';
      // Undeclared exception!
      try { 
        strBuilder2.appendFixedWidthPadRight((Object) strBuilder0, 1, 'K');
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      char[] charArray0 = strBuilder0.toCharArray(0, 0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      strBuilder_StrBuilderReader0.mark(2438);
      long long0 = strBuilder_StrBuilderReader0.skip((-1L));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
      // Undeclared exception!
      try { 
        strBuilder0.getChars(114, 97, charArray0, (-1863));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 97
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("DYFOnhgA->%N");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('@');
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.reverse();
      int int1 = strBuilder0.indexOf("DYFOnhgA->%N");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.append((CharSequence) "DYFOnhgA->%N", 1716, 0);
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("_MACJ(Z|");
      char char0 = 'c';
      int int0 = 116;
      int int1 = strBuilder0.lastIndexOf('c', 116);
      char[] charArray0 = new char[8];
      charArray0[0] = 'c';
      charArray0[1] = 'c';
      charArray0[2] = 'o';
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      // Undeclared exception!
      try { 
        strBuilder0.replace(strMatcher0, "_MACJ(Z|", (-1), 116, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-69));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((-69), (-69), ']');
      int int0 = strBuilder0.lastIndexOf('O');
      int int1 = strBuilder0.lastIndexOf(']');
      // Undeclared exception!
      try { 
        strBuilder0.insert((-2054), (char[]) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2054
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft((Object) strBuilder0, 31, '9');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex((-733));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -733
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.substring((-886));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -886
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      String string0 = null;
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      int int0 = 115;
      // Undeclared exception!
      try { 
        strBuilder0.insert((-4383), 32);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -4383
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "startIndex must be valid");
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      boolean boolean0 = strBuilder1.contains(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.setNullText("startIndex must be valid");
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      String string1 = strBuilder1.leftString((-2016));
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(48);
      int int0 = strBuilder0.lastIndexOf("YJ>!#XV0j", 48);
      int int1 = (-1381);
      StrBuilder strBuilder1 = new StrBuilder((-1381));
      StrBuilder strBuilder2 = strBuilder0.append((-1381));
      String string0 = strBuilder0.leftString((-1381));
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, (-1), 97);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1));
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1), (-4910.876F));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Writer writer0 = strBuilder0.asWriter();
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) "";
      objectArray0[2] = (Object) strBuilder0;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "");
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((Object) "", 1, 'E');
      String string0 = strBuilder0.midString(0, 0);
      StrBuilder strBuilder3 = strBuilder0.clear();
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      int int0 = 1025;
      StrBuilder strBuilder0 = new StrBuilder(1025);
      char[] charArray0 = new char[8];
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrBuilder strBuilder2 = strBuilder1.append(true);
      charArray0[0] = '{';
      charArray0[1] = '2';
      charArray0[2] = 'r';
      charArray0[3] = '_';
      char char0 = 'S';
      charArray0[4] = 'S';
      charArray0[5] = ':';
      charArray0[6] = 'A';
      charArray0[7] = '7';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 0, (-1014));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: -1014
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder2 = strBuilder1.append(false);
      int int0 = 0;
      StringBuffer stringBuffer0 = new StringBuffer(0);
      int int1 = (-1016);
      // Undeclared exception!
      try { 
        stringBuffer0.appendCodePoint((-1016));
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[6];
      charArray0[0] = '5';
      charArray0[1] = 'g';
      charArray0[2] = '?';
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      int int0 = strBuilder1.lastIndexOf(strMatcher0, 0);
      StrBuilder strBuilder2 = new StrBuilder(0);
      StrBuilder strBuilder3 = strBuilder1.insert(0, (Object) strBuilder2);
      charArray0[3] = 'C';
      charArray0[4] = '%';
      charArray0[5] = 'C';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 0, 110);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 110
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1));
      StrBuilder strBuilder1 = strBuilder0.appendPadding((-1), 'p');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark((-1));
      strBuilder_StrBuilderReader0.close();
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight(1250, 0, 'p');
      StrBuilder strBuilder3 = strBuilder2.insert(0, 0);
      String string0 = strBuilder2.leftString(114);
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      String string0 = strBuilder0.getNullText();
      String string1 = strBuilder0.leftString(0);
      // Undeclared exception!
      try { 
        strBuilder0.substring(0, (-861));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) null, "java.awt.printerjob");
      StrBuilder strBuilder2 = strBuilder0.ensureCapacity(229);
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder2, 229, (-232));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("j=]]1m/VFcDzpN&DX");
      // Undeclared exception!
      try { 
        strBuilder0.insert(32, 32);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "1.6");
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.insert(0, true);
      String string0 = strBuilder0.toString();
      StrTokenizer strTokenizer0 = strBuilder1.asTokenizer();
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("true");
      StrBuilder strBuilder2 = strBuilder1.deleteAll((StrMatcher) strMatcher_StringMatcher0);
      char[] charArray0 = new char[0];
      StrBuilder strBuilder3 = strBuilder1.append(charArray0);
      int int0 = strBuilder2.hashCode();
      StrBuilder strBuilder4 = strBuilder3.ensureCapacity(141);
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.reverse();
      int int0 = (-831);
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight((Object) strBuilder0, (-831), 'N');
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        strBuilder1.substring((-1006), (-831));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1006
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append("");
      boolean boolean0 = strBuilder0.contains("Invalid offset: ");
      boolean boolean1 = strBuilder0.equals((Object) "Invalid offset: ");
      int int0 = strBuilder0.validateRange(0, 0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      boolean boolean2 = strBuilder_StrBuilderReader0.markSupported();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[8];
      charArray0[0] = '+';
      charArray0[1] = '#';
      charArray0[2] = 'H';
      charArray0[3] = 'i';
      charArray0[4] = 'v';
      charArray0[5] = 'l';
      charArray0[6] = '+';
      charArray0[7] = ']';
      strBuilder_StrBuilderWriter0.write(charArray0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[3];
      charArray0[0] = 'b';
      charArray0[1] = 'q';
      charArray0[2] = 'F';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, (-1195), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(0);
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder(903);
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((Object) strBuilder1, 903, '/');
      StrBuilder strBuilder3 = new StrBuilder(903);
      StrBuilder strBuilder4 = strBuilder3.setLength(1588);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder3.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      StrBuilder strBuilder5 = strBuilder0.replaceAll('w', 'k');
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(0, 0, 'd');
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight(4, 0, 'Q');
      String string0 = strBuilder2.substring(0);
      StringBuffer stringBuffer0 = strBuilder1.toStringBuffer();
      StrBuilder strBuilder3 = strBuilder0.append('d');
      boolean boolean0 = strBuilder3.equals((Object) "java.endorsed.dirs");
      StrBuilder strBuilder4 = strBuilder0.appendPadding(174, 'H');
      String string1 = strBuilder4.midString(0, 0);
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2395);
      int int0 = strBuilder0.lastIndexOf("Y,+EU~eG");
      StrBuilder strBuilder1 = strBuilder0.deleteAll('y');
      StrBuilder strBuilder2 = strBuilder0.appendNull();
      int int1 = strBuilder0.indexOf("3Q", 1748);
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("t'?WM&7GH4} &R");
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrBuilder strBuilder2 = strBuilder0.appendPadding((-1), 'm');
      String string0 = strBuilder2.substring(0);
      boolean boolean0 = strBuilder1.contains(" gQkh,q");
      StrBuilder strBuilder3 = strBuilder1.replaceAll('d', 'd');
      StrBuilder strBuilder4 = strBuilder2.append('O');
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("LHNkPV&f31,[yK");
      StrBuilder strBuilder1 = new StrBuilder("LHNkPV&f31,[yK");
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      int int0 = strBuilder1.indexOf("LHNkPV&f31,[yK", (-649));
      StrBuilder strBuilder2 = strBuilder0.insert(0, '4');
      StrBuilder strBuilder3 = strBuilder1.insert(0, "org.apache.commons.lang.SystemUtils");
      String string0 = strBuilder3.toString();
      StrBuilder strBuilder4 = new StrBuilder();
      boolean boolean1 = strBuilder1.equals((Object) strBuilder4);
      StrBuilder strBuilder5 = new StrBuilder((-253));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder5.new StrBuilderReader();
      int int1 = strBuilder_StrBuilderReader0.read();
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("{p)W9Qg91L3a");
      Object[] objectArray0 = new Object[3];
      Object object0 = new Object();
      objectArray0[0] = object0;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object1 = strBuilder_StrBuilderTokenizer0.next();
      objectArray0[1] = (Object) "{p)W9Qg91L3a";
      objectArray0[2] = (Object) strBuilder0;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "{p)W9Qg91L3a");
      StrBuilder strBuilder2 = strBuilder0.insert(114, 'g');
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-425));
      boolean boolean0 = strBuilder0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(5);
      // Undeclared exception!
      try { 
        strBuilder0.validateRange((-2559), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2559
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.toString();
      StrBuilder strBuilder1 = strBuilder0.setNullText("1.4");
      boolean boolean0 = strBuilder0.contains('b');
      StrBuilder strBuilder2 = strBuilder0.reverse();
      int int0 = strBuilder0.size();
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      String string0 = "N";
      StrBuilder strBuilder0 = new StrBuilder("N");
      int int0 = 32;
      char[] charArray0 = new char[8];
      charArray0[0] = 'J';
      charArray0[1] = '-';
      charArray0[2] = 'I';
      charArray0[3] = 'C';
      charArray0[4] = '@';
      charArray0[5] = '~';
      charArray0[6] = '@';
      charArray0[7] = '5';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      // Undeclared exception!
      try { 
        strBuilder0.insert(32, false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(32, 32, 'J');
      StrBuilder strBuilder2 = strBuilder0.reverse();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("");
      int int0 = strBuilder2.indexOf(strMatcher0, 32);
      String string0 = strBuilder2.leftString(32);
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2421);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("org.apache.commons.lang.text.StrMatcher$StringMatcher");
      char[] charArray0 = new char[8];
      charArray0[0] = 'p';
      charArray0[1] = '+';
      charArray0[2] = '=';
      charArray0[3] = 'S';
      charArray0[4] = 'k';
      charArray0[5] = 'L';
      charArray0[6] = '|';
      charArray0[7] = 'j';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder0.indexOf(strMatcher0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      char[] charArray1 = new char[7];
      charArray1[0] = 'N';
      charArray1[1] = 'J';
      charArray1[2] = 'b';
      charArray1[3] = 'L';
      charArray1[4] = 'y';
      charArray1[5] = '';
      charArray1[6] = '(';
      StrBuilder strBuilder1 = strBuilder0.insert(0, charArray1);
      StrBuilder strBuilder2 = strBuilder1.replaceAll("org.apache.commons.lang.text.StrMatcher$StringMatcher", "");
      StrBuilder strBuilder3 = strBuilder1.setLength(0);
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      int int0 = strBuilder0.indexOf((StrMatcher) strMatcher_StringMatcher0, 611);
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(611, 'R');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 611
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("1.2");
      StrBuilder strBuilder1 = new StrBuilder("1.2");
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((-1193), (-1193), ')');
      boolean boolean0 = strBuilder0.equals(strBuilder1);
      StrBuilder strBuilder3 = strBuilder0.insert(0, 1.0);
      char[] charArray0 = new char[6];
      charArray0[0] = 'T';
      charArray0[1] = ')';
      charArray0[2] = ')';
      charArray0[3] = ')';
      charArray0[4] = ')';
      charArray0[5] = ')';
      StrBuilder strBuilder4 = strBuilder0.append(charArray0);
      char[] charArray1 = new char[2];
      charArray1[0] = '\'';
      charArray1[1] = 'Y';
      char[] charArray2 = strBuilder3.getChars(charArray1);
      StrBuilder strBuilder5 = strBuilder0.append(0);
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("FTm2(ZKR,<]2?)e");
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrBuilder strBuilder2 = strBuilder0.replaceAll("Invalid startIndex: ", "");
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      boolean boolean0 = strBuilder0.contains((StrMatcher) strMatcher_TrimMatcher0);
      StrBuilder strBuilder3 = strBuilder0.replaceFirst((StrMatcher) strMatcher_TrimMatcher0, "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadLeft((Object) "=Fp$X", 0, ')');
      String string0 = strBuilder0.leftString(0);
      String string1 = "+<Ix}%pbQOIc(,0Vn\\U";
      StrBuilder strBuilder5 = strBuilder1.append("+<Ix}%pbQOIc(,0VnU", 0, 0);
      StrBuilder strBuilder6 = strBuilder0.append(strBuilder5);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder6.new StrBuilderReader();
      char[] charArray0 = new char[8];
      charArray0[0] = ')';
      charArray0[2] = ')';
      charArray0[3] = ')';
      charArray0[4] = ')';
      charArray0[5] = ')';
      StrBuilder strBuilder7 = strBuilder5.minimizeCapacity();
      charArray0[6] = ')';
      charArray0[7] = ')';
      int int0 = (-1662);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 0, (-1662));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(".5xA");
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrBuilder strBuilder1 = strBuilder0.append(124.0F);
      char[] charArray0 = new char[1];
      char char0 = 'h';
      charArray0[0] = 'h';
      int int0 = strMatcher0.isMatch(charArray0, 0, 0, (-570));
      int int1 = strMatcher0.isMatch(charArray0, 0, 0, 0);
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      int int2 = strBuilder0.lastIndexOf(".5xA", 3705);
      boolean boolean1 = strBuilder0.endsWith(".5xA");
      StrBuilder strBuilder2 = strBuilder0.trim();
      Reader reader0 = strBuilder2.asReader();
      String string0 = "Xu8e@'TExq10 ";
      StrBuilder strBuilder3 = strBuilder1.replaceAll(".5xA", "Xu8e@'TExq10 ");
      // Undeclared exception!
      try { 
        strBuilder1.append(charArray0, 3705, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("");
      StrMatcher strMatcher1 = StrMatcher.charMatcher('@');
      StrMatcher strMatcher2 = StrMatcher.stringMatcher("");
      StrMatcher strMatcher3 = StrMatcher.charMatcher('I');
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.clear();
      int int0 = strBuilder2.indexOf(strMatcher0);
      StrBuilder strBuilder3 = strBuilder1.append((-656L));
      StrBuilder strBuilder4 = strBuilder0.setNewLineText("");
      StrMatcher strMatcher4 = StrMatcher.stringMatcher("rTb;J!J`+x.\\g-7Yhs");
      int int1 = strBuilder4.lastIndexOf(strMatcher0, 1905);
      int int2 = strBuilder4.indexOf(strMatcher0);
      String string0 = strBuilder1.leftString(1905);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder4.new StrBuilderReader();
      char[] charArray0 = new char[9];
      charArray0[0] = 'I';
      charArray0[1] = 'I';
      charArray0[2] = 'I';
      charArray0[3] = '@';
      charArray0[4] = '@';
      charArray0[5] = '@';
      charArray0[6] = 'I';
      charArray0[7] = 'I';
      charArray0[8] = '@';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, (-1), (-1));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendPadding(5, 'k');
      char[] charArray0 = new char[1];
      charArray0[0] = 'k';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setQuoteMatcher(strMatcher0);
      String string0 = null;
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Iterator) strBuilder_StrBuilderTokenizer0, (String) null);
      int int1 = strBuilder2.indexOf(';');
      int int2 = strBuilder2.indexOf('f');
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) 'k';
      objectArray0[1] = (Object) strMatcher0;
      objectArray0[2] = (Object) strBuilder_StrBuilderTokenizer0;
      objectArray0[3] = (Object) 'k';
      objectArray0[4] = (Object) strBuilder1;
      objectArray0[5] = (Object) strMatcher0;
      objectArray0[6] = (Object) strMatcher0;
      Object object0 = new Object();
      objectArray0[7] = object0;
      objectArray0[8] = (Object) strTokenizer0;
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators(objectArray0, (String) null);
      StrBuilder strBuilder4 = strBuilder1.append(0);
      StrBuilder strBuilder5 = strBuilder2.clear();
      boolean boolean0 = strBuilder2.equals(strBuilder1);
      int int3 = strBuilder1.hashCode();
      // Undeclared exception!
      try { 
        strBuilder1.substring(32, 57);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2364);
      StrBuilder strBuilder1 = strBuilder0.insert(0, (-2021L));
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("Invalid offset: ");
      StrBuilder strBuilder2 = strBuilder0.setNullText("Invalid offset: ");
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_StringMatcher0);
      StrBuilder strBuilder3 = strBuilder0.deleteCharAt(0);
      StrBuilder strBuilder4 = strBuilder0.replaceAll(')', ')');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder4.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      char[] charArray0 = new char[2];
      charArray0[0] = ')';
      charArray0[1] = ')';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 0, 3120);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }
}
