/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 29 01:51:56 GMT 2020
 */

package org.apache.commons.lang.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.Writer;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.NoSuchElementException;
import org.apache.commons.lang.text.StrBuilder;
import org.apache.commons.lang.text.StrMatcher;
import org.apache.commons.lang.text.StrTokenizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StrBuilder_ESTest extends StrBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append('W');
      int int0 = strBuilder0.indexOf("");
      char char0 = strBuilder0.charAt(0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.reverse();
      String string0 = strBuilder1.midString(2, 2);
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("BVm2JsYc*Ah4Do");
      StrBuilder strBuilder2 = strBuilder0.deleteAll(strMatcher0);
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      StrBuilder strBuilder3 = strBuilder0.setNewLineText("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset();
      StrBuilder strBuilder4 = strBuilder3.appendWithSeparators((Iterator) strTokenizer0, "");
      StrBuilder strBuilder5 = strBuilder0.append((double) (-1));
      char[] charArray0 = new char[0];
      StrBuilder strBuilder6 = strBuilder5.deleteAll("BVm2JsYc*Ah4Do");
      int int0 = strMatcher0.isMatch(charArray0, 0, 9, (-1320));
      StringBuffer stringBuffer0 = strBuilder5.toStringBuffer();
      StringBuffer stringBuffer1 = strBuilder2.toStringBuffer();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      boolean boolean0 = strBuilder2.equalsIgnoreCase(strBuilder4);
      strBuilder_StrBuilderWriter0.flush();
      strBuilder_StrBuilderWriter0.write("BVm2JsYc*Ah4Do");
      strBuilder_StrBuilderWriter0.write((char[]) null);
      boolean boolean1 = strBuilder2.contains(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(4099);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[9];
      charArray0[0] = 'S';
      charArray0[1] = '9';
      charArray0[2] = '@';
      charArray0[3] = '{';
      charArray0[4] = 'p';
      charArray0[5] = 'h';
      charArray0[6] = 'D';
      charArray0[7] = 'J';
      StringBuffer stringBuffer0 = new StringBuffer("(N,CoQO");
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder2 = strBuilder1.replaceFirst("Invalid startIndex: ", "");
      charArray0[8] = 'p';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0);
      strBuilder_StrBuilderReader0.reset();
      StrBuilder strBuilder3 = strBuilder0.replaceAll('N', 'K');
      StrBuilder strBuilder4 = strBuilder3.replaceFirst("", "Invalid startIndex: ");
      int int1 = strBuilder4.lastIndexOf('t', 7);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(39);
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(39);
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt((-2136), 'V');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2136
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Object[]) null, "'A25\"~SSSOIhJ");
      int int0 = 2004;
      int int1 = (-2317);
      String string0 = "";
      // Undeclared exception!
      try { 
        strBuilder0.replace(2004, (-2317), "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      String string0 = "1.3";
      StrBuilder strBuilder0 = new StrBuilder("1.3");
      StrBuilder strBuilder1 = new StrBuilder(1734);
      StrBuilder strBuilder2 = strBuilder0.deleteFirst("1.3");
      StrBuilder strBuilder3 = new StrBuilder("1.3");
      char char0 = '9';
      StrBuilder strBuilder4 = strBuilder2.deleteAll('9');
      char char1 = ' ';
      StrBuilder strBuilder5 = strBuilder0.appendFixedWidthPadRight((Object) strBuilder1, 1734, ' ');
      StrBuilder strBuilder6 = strBuilder0.append(strBuilder1);
      StrBuilder strBuilder7 = strBuilder5.appendNull();
      Writer writer0 = strBuilder1.asWriter();
      int int0 = (-2578);
      // Undeclared exception!
      try { 
        strBuilder0.validateRange((-2578), (-2578));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2578
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      int int0 = (-1872);
      StrBuilder strBuilder0 = new StrBuilder((-1872));
      String string0 = null;
      char[] charArray0 = new char[4];
      charArray0[0] = ' ';
      charArray0[1] = 'x';
      charArray0[2] = '1';
      charArray0[2] = '{';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrBuilder strBuilder2 = strBuilder1.replaceFirst(strMatcher0, "0g");
      StrBuilder strBuilder3 = strBuilder2.deleteFirst('{');
      StrBuilder strBuilder4 = strBuilder2.deleteAll("0g");
      StrBuilder strBuilder5 = strBuilder0.trim();
      StrBuilder strBuilder6 = strBuilder5.append((Object) strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder1.replace(strMatcher0, "})}|-aN ", (int) '\u0000', (-1872), (-1872));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1611));
      String string0 = strBuilder0.midString((-1611), (-1611));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[1];
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) "");
      strBuilder_StrBuilderWriter0.write(charArray0);
      strBuilder_StrBuilderWriter0.flush();
      char[] charArray1 = new char[9];
      charArray1[0] = 'f';
      charArray1[1] = 'j';
      charArray1[2] = 'T';
      charArray1[3] = 'w';
      charArray1[4] = '7';
      charArray1[5] = 'z';
      charArray1[6] = '@';
      charArray1[7] = 'U';
      charArray1[8] = 'H';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray1);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("");
      StrBuilder strBuilder1 = strBuilder0.replaceAll((StrMatcher) strMatcher_CharSetMatcher0, ", Length: ");
      boolean boolean0 = strBuilder1.contains(strMatcher1);
      Reader reader0 = strBuilder1.asReader();
      boolean boolean1 = strBuilder0.startsWith("");
      int int0 = strBuilder1.size();
      StrBuilder strBuilder2 = strBuilder0.replaceFirst(strMatcher0, ", Length: ");
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceAll("4.", "4.");
      String string0 = strBuilder1.leftString(0);
      StrBuilder strBuilder2 = strBuilder0.appendNewLine();
      strBuilder0.validateIndex(0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      int int0 = strBuilder0.lastIndexOf('w');
      StrBuilder strBuilder3 = strBuilder0.append(true);
      StrBuilder strBuilder4 = strBuilder0.deleteFirst('%');
      StrBuilder strBuilder5 = strBuilder3.appendFixedWidthPadRight((-1109), 0, 'Q');
      Reader reader0 = strBuilder3.asReader();
      StrBuilder strBuilder6 = strBuilder1.appendFixedWidthPadLeft((Object) strBuilder3, 187, '2');
      StrBuilder strBuilder7 = strBuilder6.setNewLineText(",IXcP]A_gP");
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      int int1 = strBuilder0.indexOf(strMatcher0, 0);
      StrBuilder strBuilder8 = strBuilder7.append(false);
      StrBuilder strBuilder9 = strBuilder2.setNewLineText("4.");
      boolean boolean1 = strBuilder_StrBuilderReader0.ready();
      StrBuilder strBuilder10 = strBuilder3.append(strBuilder7);
      strBuilder_StrBuilderReader0.reset();
      int int2 = strBuilder4.indexOf('%', 67);
      long long0 = strBuilder_StrBuilderReader0.skip(2431L);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      int int0 = (-1872);
      StrBuilder strBuilder0 = new StrBuilder((-1872));
      String string0 = null;
      char[] charArray0 = new char[4];
      charArray0[0] = ' ';
      charArray0[1] = 'x';
      charArray0[2] = '1';
      charArray0[3] = '1';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      String string1 = "0g";
      StrBuilder strBuilder2 = new StrBuilder('1');
      StrBuilder strBuilder3 = strBuilder2.deleteFirst((String) null);
      StrBuilder strBuilder4 = strBuilder2.deleteFirst('r');
      StrBuilder strBuilder5 = strBuilder2.deleteAll("0g");
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrBuilder strBuilder6 = strBuilder0.trim();
      StrBuilder strBuilder7 = strBuilder6.append((Object) strMatcher_NoMatcher0);
      int int1 = 1505;
      // Undeclared exception!
      try { 
        strBuilder1.replace((StrMatcher) strMatcher_NoMatcher0, "})}|-aN ", 1505, (-1872), (-1872));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      int int0 = (-1872);
      StrBuilder strBuilder0 = new StrBuilder((-1872));
      String string0 = null;
      char[] charArray0 = new char[4];
      charArray0[0] = ' ';
      charArray0[1] = 'x';
      charArray0[2] = '1';
      charArray0[3] = '{';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrBuilder strBuilder2 = strBuilder1.replaceFirst(strMatcher0, "g");
      StrBuilder strBuilder3 = strBuilder2.deleteFirst('r');
      StrBuilder strBuilder4 = strBuilder2.deleteAll("g");
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrBuilder strBuilder5 = strBuilder0.trim();
      StrBuilder strBuilder6 = strBuilder5.append((Object) strMatcher_NoMatcher0);
      int int1 = 1505;
      // Undeclared exception!
      try { 
        strBuilder1.replace((StrMatcher) strMatcher_NoMatcher0, "})}|-aN ", 1505, (-1872), (-1872));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(43);
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      int int0 = strBuilder0.lastIndexOf('f', 873);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[1];
      int int0 = strBuilder0.lastIndexOf('}', 4);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      int int0 = (-1872);
      StrBuilder strBuilder0 = new StrBuilder((-1872));
      String string0 = null;
      char[] charArray0 = new char[20];
      charArray0[0] = ' ';
      charArray0[1] = 'm';
      charArray0[2] = '1';
      charArray0[3] = '1';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrBuilder strBuilder2 = strBuilder1.replaceFirst(strMatcher0, "0g");
      StrBuilder strBuilder3 = strBuilder2.deleteFirst('r');
      StrBuilder strBuilder4 = strBuilder2.deleteAll("0g");
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrBuilder strBuilder5 = strBuilder0.trim();
      StrBuilder strBuilder6 = strBuilder5.append((Object) strMatcher_NoMatcher0);
      int int1 = 1505;
      // Undeclared exception!
      try { 
        strBuilder1.replace((StrMatcher) strMatcher_NoMatcher0, "})}|I-aN", 1505, (-1872), (-1872));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(4099);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[9];
      charArray0[0] = 'S';
      charArray0[1] = '9';
      charArray0[2] = '@';
      charArray0[3] = '{';
      charArray0[4] = 'p';
      charArray0[5] = 'h';
      charArray0[6] = 'D';
      charArray0[7] = 'J';
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder2 = strBuilder1.replaceFirst("Invalid startIndex: ", "");
      charArray0[8] = 'p';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0);
      strBuilder_StrBuilderReader0.reset();
      StrBuilder strBuilder3 = strBuilder0.replaceAll('9', 'K');
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(4099);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[9];
      charArray0[0] = 'S';
      charArray0[1] = '9';
      charArray0[2] = '@';
      StrBuilder strBuilder1 = strBuilder0.appendPadding((-1909), 'S');
      charArray0[3] = '{';
      charArray0[4] = 'p';
      charArray0[5] = 'h';
      charArray0[6] = 'D';
      charArray0[7] = 'J';
      StringBuffer stringBuffer0 = new StringBuffer("(N,CoQO");
      StrBuilder strBuilder2 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder3 = strBuilder2.replaceFirst("Invalid startIndex: ", "");
      charArray0[8] = 'p';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0);
      strBuilder_StrBuilderReader0.reset();
      StrBuilder strBuilder4 = strBuilder0.replaceAll('N', 'K');
      StrBuilder strBuilder5 = strBuilder4.deleteAll("");
      StrBuilder strBuilder6 = strBuilder4.deleteAll('K');
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-3940));
      char[] charArray0 = strBuilder0.toCharArray();
      StringBuffer stringBuffer0 = new StringBuffer("{+@u6Vx@y9<&AA3:8>N");
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      int int1 = strBuilder_StrBuilderReader0.read();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setQuoteChar('G');
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      // Undeclared exception!
      try { 
        strBuilder1.appendFixedWidthPadRight(object0, 2, 'o');
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "");
      int int0 = 101;
      StringBuffer stringBuffer1 = new StringBuffer(22);
      StringBuffer stringBuffer2 = stringBuffer0.append(stringBuffer1);
      strBuilder_StrBuilderReader0.mark(101);
      int int1 = 2004;
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 101, 2004);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2225);
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setTrimmerMatcher(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Iterator) strTokenizer0, "org.apache.commons.lang.text.StrBuilder");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(2225);
      String string0 = strBuilder2.rightString((-1));
      StringBuffer stringBuffer0 = new StringBuffer("org.apache.commons.lang.text.StrBuilder");
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 2225, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      String string0 = "*UoX r^}NinZuijHoG";
      StrBuilder strBuilder0 = new StrBuilder("*UoX r^}NinZuijHoG");
      StrBuilder strBuilder1 = strBuilder0.reverse();
      StrBuilder strBuilder2 = strBuilder0.append(532L);
      char char0 = '%';
      boolean boolean0 = strBuilder0.contains('%');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      char[] charArray0 = new char[4];
      charArray0[0] = '%';
      charArray0[1] = '%';
      charArray0[2] = '%';
      charArray0[3] = '%';
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance(charArray0);
      StrTokenizer strTokenizer1 = strBuilder_StrBuilderTokenizer0.reset();
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators((Iterator) strTokenizer1, "*UoX r^}NinZuijHoG");
      int int0 = 2208;
      // Undeclared exception!
      try { 
        strBuilder3.setCharAt(2208, '[');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2208
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      int int0 = (-1872);
      StrBuilder strBuilder0 = new StrBuilder((-1872));
      String string0 = null;
      char[] charArray0 = new char[4];
      charArray0[0] = ' ';
      charArray0[2] = 'x';
      charArray0[2] = '1';
      charArray0[3] = '{';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrBuilder strBuilder2 = strBuilder1.replaceFirst(strMatcher0, "0g");
      StrBuilder strBuilder3 = strBuilder2.deleteFirst('r');
      StrBuilder strBuilder4 = strBuilder2.deleteAll("0g");
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrBuilder strBuilder5 = strBuilder0.trim();
      StrBuilder strBuilder6 = strBuilder5.append((Object) strMatcher_NoMatcher0);
      int int1 = 1505;
      // Undeclared exception!
      try { 
        strBuilder1.replace((StrMatcher) strMatcher_NoMatcher0, "})}|-aN ", 1505, (-1872), (-1872));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "startIndex must be valid";
      char char0 = 'y';
      int int0 = 9;
      StrBuilder strBuilder1 = strBuilder0.append(0L);
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Iterator) null, "startIndex must be valid");
      StrBuilder strBuilder3 = strBuilder0.setNewLineText("user.timezone");
      StrMatcher strMatcher0 = StrMatcher.charMatcher('y');
      int int1 = strBuilder3.indexOf(strMatcher0);
      int int2 = (-410);
      // Undeclared exception!
      try { 
        strBuilder3.replace(strMatcher0, "user.timezone", 4101, (-410), (-500));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity((-1942));
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("7!&wIn*0");
      StrBuilder strBuilder2 = strBuilder1.deleteAll((StrMatcher) strMatcher_StringMatcher0);
      StrBuilder strBuilder3 = strBuilder1.setNullText("*.\"T=sTgLdNu");
      // Undeclared exception!
      try { 
        strBuilder0.equals((StrBuilder) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteAll('Q');
      StrBuilder strBuilder2 = strBuilder1.append((-1L));
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      int int0 = strBuilder0.length();
      String string0 = null;
      StrBuilder strBuilder1 = strBuilder0.append((String) null);
      StrTokenizer strTokenizer0 = strBuilder1.asTokenizer();
      int int1 = (-2035);
      char[] charArray0 = new char[4];
      charArray0[0] = '5';
      charArray0[1] = '2';
      charArray0[2] = 'R';
      charArray0[3] = 'M';
      // Undeclared exception!
      try { 
        strBuilder1.insert((-2035), charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2035
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(686);
      int int0 = strBuilder0.lastIndexOf("1#Tovb\"XaAfV #sS");
      StrBuilder strBuilder1 = strBuilder0.append(686);
      // Undeclared exception!
      try { 
        strBuilder0.insert(17, 0.0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 17
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2164);
      StrBuilder strBuilder1 = strBuilder0.append("w*=eyF#");
      Reader reader0 = strBuilder1.asReader();
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight((-340), 2164, '1');
      StrBuilder strBuilder3 = strBuilder2.append(false);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      StrBuilder strBuilder4 = strBuilder3.appendFixedWidthPadRight((-32), (-2099), '1');
      int int0 = strBuilder_StrBuilderReader0.read();
      boolean boolean1 = strBuilder1.contains('(');
      strBuilder3.validateIndex(0);
      int int1 = strBuilder1.lastIndexOf((String) null, (-1924));
      String string0 = strBuilder0.toString();
      String string1 = strBuilder0.midString((-1924), 117);
      int int2 = strBuilder0.indexOf('1', (-2958));
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      String string0 = "MNL5n";
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) "MNL5n");
      Object[] objectArray0 = new Object[2];
      StrBuilder strBuilder1 = new StrBuilder("MNL5n");
      boolean boolean0 = strBuilder1.contains("MNL5n");
      strBuilder_StrBuilderWriter0.write((char[]) null, 30, 30);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.previous();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      int int0 = 711;
      StrBuilder strBuilder0 = new StrBuilder(711);
      char char0 = 'J';
      StrBuilder strBuilder1 = strBuilder0.append('J');
      int int1 = 0;
      char char1 = 'j';
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight(0, 0, 'j');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder2.substring(0);
      char[] charArray0 = new char[8];
      charArray0[0] = '5';
      charArray0[1] = '5';
      charArray0[2] = 'j';
      charArray0[3] = '5';
      charArray0[4] = 'j';
      charArray0[5] = 'j';
      charArray0[6] = '5';
      charArray0[7] = '5';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 711, 711);
      StrBuilder strBuilder3 = strBuilder2.deleteAll('5');
      // Undeclared exception!
      try { 
        strBuilder3.append(strBuilder1, 711, 711);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      boolean boolean0 = linkedList0.add((Object) null);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
      int int0 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.replace((-1120), 0, ".c%7F)y{!");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1120
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("rh}\"cJ\"NBk");
      StrBuilder strBuilder1 = strBuilder0.append((StringBuffer) null);
      String string0 = strBuilder1.rightString(0);
      StrBuilder strBuilder2 = strBuilder1.append(0.0F);
      String string1 = "";
      StrBuilder strBuilder3 = strBuilder0.replaceAll("rh}\"cJ\"NBk", "");
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder3.append(strBuilder0, (-1), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3);
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      int int0 = strBuilder0.lastIndexOf("ZF7vNvg&EZ*", 3);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      String string0 = ", Length: ";
      StrBuilder strBuilder0 = new StrBuilder(", Length: ");
      StrBuilder strBuilder1 = strBuilder0.insert(5, ',');
      int int0 = 3723;
      char[] charArray0 = new char[7];
      charArray0[0] = ',';
      charArray0[1] = ',';
      charArray0[2] = ',';
      charArray0[3] = ',';
      charArray0[4] = ',';
      charArray0[5] = ',';
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      int int1 = strBuilder0.indexOf(strMatcher0, (-3761));
      charArray0[6] = ',';
      // Undeclared exception!
      try { 
        strBuilder1.getChars(3723, 5, charArray0, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid length: ");
      StringBuffer stringBuffer0 = null;
      StrBuilder strBuilder1 = strBuilder0.append((StringBuffer) null);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-856), (Object) "Invalid length: ");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -856
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) strBuilder0;
      objectArray0[3] = (Object) strBuilder0;
      objectArray0[4] = (Object) "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter";
      objectArray0[5] = (Object) "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter";
      objectArray0[6] = (Object) strBuilder0;
      objectArray0[7] = (Object) strBuilder0;
      objectArray0[8] = (Object) "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter";
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "y<");
      int int0 = strBuilder0.lastIndexOf((StrMatcher) null, 0);
      StrBuilder strBuilder2 = strBuilder1.append(2206.657F);
      StrBuilder strBuilder3 = strBuilder2.insert(0, 1L);
      int int1 = strBuilder0.indexOf((String) null);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1499);
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0, (-299));
      StrBuilder strBuilder1 = strBuilder0.append((double) 1499);
      StrMatcher strMatcher1 = StrMatcher.tabMatcher();
      String string0 = strBuilder0.toString();
      String string1 = "|el]l35";
      StrMatcher strMatcher2 = StrMatcher.stringMatcher("|el]l35");
      int int1 = strBuilder0.indexOf(strMatcher1, 1499);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(330L);
      strBuilder_StrBuilderReader0.mark((-1));
      StrBuilder strBuilder2 = strBuilder1.deleteFirst(strMatcher1);
      StrBuilder strBuilder3 = strBuilder1.appendFixedWidthPadLeft((-299), (-299), 'f');
      StrBuilder strBuilder4 = strBuilder1.setNewLineText("|el]l35");
      StrBuilder strBuilder5 = strBuilder3.setNewLineText("|el]l35");
      Reader reader0 = strBuilder1.asReader();
      // Undeclared exception!
      try { 
        strBuilder1.replace((-2206), (-2206), "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2206
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      int int0 = 1;
      StrBuilder strBuilder0 = new StrBuilder(1);
      StrBuilder strBuilder1 = strBuilder0.append(0.0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      int int1 = strBuilder0.lastIndexOf(strMatcher0);
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder strBuilder2 = strBuilder0.setNewLineText("0.0");
      // Undeclared exception!
      try { 
        strBuilder2.append(strBuilder0, 1, 4);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("startIndex must be valid");
      Integer integer0 = new Integer(0);
      StrBuilder strBuilder1 = strBuilder0.insert(0, (Object) integer0);
      boolean boolean0 = strBuilder0.contains("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      boolean boolean1 = strBuilder_StrBuilderReader0.ready();
      StrBuilder strBuilder2 = strBuilder1.minimizeCapacity();
      char[] charArray0 = new char[9];
      charArray0[0] = 'j';
      charArray0[1] = '\"';
      charArray0[2] = ']';
      charArray0[3] = ']';
      charArray0[4] = '3';
      charArray0[5] = 'C';
      charArray0[6] = 'G';
      charArray0[7] = 't';
      charArray0[8] = 't';
      strBuilder2.getChars(0, 0, charArray0, 0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceAll('u', 'u');
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2164);
      StrBuilder strBuilder1 = strBuilder0.append("w*=eyF#");
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight((-340), 2164, '1');
      StrBuilder strBuilder3 = strBuilder2.append(false);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      int int0 = strBuilder_StrBuilderReader0.read();
      boolean boolean1 = strBuilder1.contains('(');
      strBuilder3.validateIndex(0);
      int int1 = strBuilder1.lastIndexOf((String) null, (-1924));
      String string0 = strBuilder0.toString();
      String string1 = strBuilder0.midString((-1924), 117);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      StrBuilder strBuilder1 = strBuilder0.replace(strMatcher0, (String) null, 0, 0, 0);
      StrMatcher strMatcher1 = StrMatcher.doubleQuoteMatcher();
      char[] charArray0 = new char[0];
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder0.lastIndexOf(strMatcher1, 0);
      StrMatcher strMatcher3 = StrMatcher.charSetMatcher("[pDr");
      Reader reader0 = strBuilder0.asReader();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder strBuilder2 = strBuilder0.deleteAll("Linux");
      int int1 = strBuilder2.indexOf(strMatcher1);
      StrBuilder strBuilder3 = strBuilder1.appendNull();
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        strBuilder1.insert(117, false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 117
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder((-1392));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      int int0 = strBuilder1.indexOf(strMatcher0, (-1392));
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, (-1392), (-1392));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<String> linkedList1 = new LinkedList<String>(linkedList0);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) linkedList1, (-1298), 'E');
      StrTokenizer strTokenizer0 = strBuilder1.asTokenizer();
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Collection) linkedList1, (String) null);
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      StrMatcher strMatcher2 = StrMatcher.stringMatcher("4.1");
      StrBuilder strBuilder3 = strBuilder0.deleteFirst(strMatcher0);
      StrBuilder strBuilder4 = strBuilder2.appendFixedWidthPadLeft((-1298), (-1), 'E');
      StrMatcher strMatcher3 = StrMatcher.doubleQuoteMatcher();
      StrBuilder strBuilder5 = strBuilder0.replaceFirst(strMatcher3, "4.1");
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      String string0 = "1.3";
      StrBuilder strBuilder0 = new StrBuilder("1.3");
      int int0 = 1734;
      StrBuilder strBuilder1 = new StrBuilder(1734);
      StrBuilder strBuilder2 = strBuilder0.deleteFirst("1.3");
      // Undeclared exception!
      try { 
        strBuilder2.append("1.3", 1734, 183);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.midString(3566, 3566);
      int int0 = strBuilder0.lastIndexOf('t', (-1));
      StrBuilder strBuilder1 = strBuilder0.trim();
      int int1 = strBuilder0.size();
      StrBuilder strBuilder2 = strBuilder0.deleteFirst('t');
      // Undeclared exception!
      try { 
        strBuilder2.replace(0, (-1), "SunOS");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(92);
      String string0 = strBuilder0.getNullText();
      String string1 = strBuilder0.rightString(92);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) null, 0, 0);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("awt.toolkit", 2524, 612);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[9];
      charArray0[0] = ' ';
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "", 0, 0);
      int int0 = strBuilder_StrBuilderReader0.read(charBuffer0);
      charArray0[1] = '4';
      charArray0[2] = 'T';
      charArray0[3] = 'R';
      charArray0[4] = 't';
      charArray0[5] = 'U';
      charArray0[6] = 'w';
      charArray0[7] = 'n';
      charArray0[8] = '';
      CharBuffer charBuffer1 = CharBuffer.wrap(charArray0);
      CharBuffer charBuffer2 = charBuffer1.slice();
      CharBuffer charBuffer3 = charBuffer1.duplicate();
      int int1 = strBuilder_StrBuilderReader0.read(charBuffer1);
      strBuilder_StrBuilderReader0.reset();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("");
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("");
      strBuilder_StrBuilderWriter0.write(charArray0);
      boolean boolean1 = strBuilder0.startsWith("");
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(830);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[8];
      charArray0[0] = 'A';
      charArray0[1] = 'D';
      charArray0[2] = 'o';
      charArray0[3] = '.';
      charArray0[4] = 'z';
      charArray0[5] = 'Y';
      charArray0[6] = '<';
      charArray0[7] = 'q';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 2008, 2008);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = "";
      StringBuffer stringBuffer0 = new StringBuffer("");
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder2 = strBuilder1.minimizeCapacity();
      int int1 = 0;
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadLeft(0, 0, 'u');
      boolean boolean0 = strBuilder1.contains("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      boolean boolean1 = strBuilder_StrBuilderTokenizer0.hasNext();
      String[] stringArray0 = strBuilder_StrBuilderTokenizer0.getTokenArray();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.next();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "2\\K";
      StrBuilder strBuilder1 = strBuilder0.append(0);
      StrBuilder strBuilder2 = strBuilder0.setNullText("2K");
      boolean boolean0 = strBuilder2.equalsIgnoreCase(strBuilder0);
      int int0 = (-3400);
      StrBuilder strBuilder3 = new StrBuilder((String) null);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder3.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      boolean boolean1 = strBuilder2.contains(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder0.insert(39, 46.407873937);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 39
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      String string0 = " QaGI}@idbQi";
      StrBuilder strBuilder0 = new StrBuilder(" QaGI}@idbQi");
      StrBuilder strBuilder1 = strBuilder0.reverse();
      int int0 = 0;
      StrBuilder strBuilder2 = strBuilder1.ensureCapacity(0);
      char[] charArray0 = null;
      // Undeclared exception!
      try { 
        strBuilder1.getChars(0, 0, (char[]) null, 0);
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      String string0 = null;
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.setNullText((String) null);
      int int0 = (-376);
      char[] charArray0 = new char[2];
      charArray0[0] = ']';
      charArray0[1] = '3';
      // Undeclared exception!
      try { 
        strBuilder0.insert((-376), charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -376
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 108;
      StrBuilder strBuilder1 = new StrBuilder("HP-UX");
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      // Undeclared exception!
      try { 
        strBuilder0.insert(108, 0L);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 108
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder1.getChars(0, 0, (char[]) null, 0);
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      int int0 = strBuilder0.lastIndexOf((StrMatcher) null);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.append(false);
      String string0 = "7s\\";
      boolean boolean0 = strBuilder0.startsWith("7s");
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("7s");
      // Undeclared exception!
      try { 
        strBuilder1.replace(strMatcher0, "zNNhrR@``&[", (-297), (-297), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -297
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      int int0 = (-2934);
      StrBuilder strBuilder0 = new StrBuilder((-2934));
      StringBuffer stringBuffer0 = new StringBuffer();
      StringBuffer stringBuffer1 = stringBuffer0.reverse();
      StringBuffer stringBuffer2 = stringBuffer0.append((float) (-2934));
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, (-2934), (-2934));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("A5{'#EWGh");
      char[] charArray0 = strBuilder0.toCharArray();
      int int0 = 117;
      // Undeclared exception!
      try { 
        strBuilder0.charAt(117);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 117
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(101, 101, 'v');
      String string0 = strBuilder0.substring(101, 101);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      boolean boolean0 = linkedList0.remove((Object) "");
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Collection) linkedList0, "i2l>'eYj-");
      StrBuilder strBuilder3 = strBuilder1.replaceFirst('+', '+');
      char[] charArray0 = new char[6];
      charArray0[0] = 'v';
      charArray0[1] = '+';
      charArray0[2] = '+';
      charArray0[3] = '+';
      charArray0[4] = 'J';
      charArray0[5] = 'v';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      int int0 = strBuilder1.lastIndexOf((StrMatcher) strMatcher_CharSetMatcher0);
      int int1 = strBuilder1.lastIndexOf((StrMatcher) strMatcher_CharSetMatcher0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      char[] charArray1 = new char[4];
      charArray1[0] = 'v';
      charArray1[1] = '$';
      charArray1[2] = 'v';
      charArray1[3] = 'J';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray1);
      int int2 = strBuilder1.lastIndexOf(strMatcher0);
      StrMatcher strMatcher2 = StrMatcher.noneMatcher();
      int int3 = strBuilder2.lastIndexOf(strMatcher2);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      char[] charArray0 = new char[5];
      charArray0[0] = '8';
      charArray0[1] = 'I';
      charArray0[2] = 'a';
      charArray0[3] = 'h';
      charArray0[4] = '2';
      char[] charArray1 = strBuilder0.getChars(charArray0);
      StrBuilder strBuilder1 = strBuilder0.deleteAll("length must be valid");
      StrBuilder strBuilder2 = strBuilder1.appendNewLine();
      StrBuilder strBuilder3 = strBuilder1.replaceFirst("", "");
      int int0 = strBuilder0.indexOf('2');
      StrBuilder strBuilder4 = strBuilder3.append((long) (-1));
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray(458, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1);
      String string0 = strBuilder0.substring(0, 0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      int int1 = strBuilder_StrBuilderReader0.read();
      int int2 = strBuilder0.lastIndexOf("}xFI\"l ixh\"6i,\":", (-1317));
      char[] charArray0 = new char[8];
      charArray0[0] = '|';
      charArray0[1] = '\"';
      charArray0[2] = 'r';
      charArray0[3] = 'r';
      charArray0[4] = 'E';
      charArray0[5] = 'E';
      charArray0[6] = ':';
      charArray0[7] = 's';
      char[] charArray1 = strBuilder0.getChars(charArray0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.insert(0, (Object) null);
      char char0 = 'S';
      StrBuilder strBuilder2 = strBuilder1.insert(0, (Object) "end < start");
      int int0 = 425;
      // Undeclared exception!
      try { 
        strBuilder1.append("", 425, 425);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      int int0 = 48;
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(48, 48, '.');
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Collection) linkedList0, "9t");
      StrTokenizer strTokenizer0 = strBuilder2.asTokenizer();
      Reader reader0 = strBuilder2.asReader();
      StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "9t");
      StrBuilder strBuilder4 = strBuilder2.append(false);
      char[] charArray0 = new char[6];
      charArray0[0] = '.';
      charArray0[1] = '.';
      charArray0[2] = '.';
      charArray0[3] = '.';
      charArray0[4] = '.';
      charArray0[5] = '.';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      String string0 = "StrTokenizer";
      // Undeclared exception!
      try { 
        strBuilder2.replaceAll((StrMatcher) strMatcher_CharSetMatcher0, "StrTokenizer");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1800));
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1800), (float) (-1800));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1800
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrBuilder strBuilder1 = strBuilder0.replaceAll((String) null, "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      StrBuilder strBuilder2 = strBuilder0.deleteAll("");
      strBuilder_StrBuilderReader0.mark((-518));
      strBuilder_StrBuilderReader0.reset();
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder3 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder4 = strBuilder3.appendFixedWidthPadLeft(59, (-518), '6');
      StrBuilder strBuilder5 = strBuilder3.setNewLineText((String) null);
      String string0 = strBuilder5.toString();
      StringBuffer stringBuffer1 = strBuilder2.toStringBuffer();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder6 = strBuilder1.appendWithSeparators((Collection) linkedList0, "");
      char[] charArray0 = new char[3];
      charArray0[0] = '6';
      charArray0[1] = '6';
      charArray0[2] = '6';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      int int0 = strBuilder3.lastIndexOf((StrMatcher) strMatcher_CharSetMatcher0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.append(',');
      String string0 = strBuilder0.midString(0, 101);
      // Undeclared exception!
      try { 
        strBuilder1.substring(117, 101);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      int int0 = 362;
      StrBuilder strBuilder0 = new StrBuilder(362);
      strBuilder0.size = 1265;
      char char0 = 'b';
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('b');
      char[] charArray0 = new char[0];
      String string0 = "+]ByHCpSRA=U";
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("+]ByHCpSRA=U");
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      int int1 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_CharMatcher0, 102);
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) strBuilder0;
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("+]ByHCpSRA=U");
      objectArray0[1] = (Object) strMatcher0;
      objectArray0[2] = (Object) strMatcher_CharMatcher0;
      String string1 = "";
      // Undeclared exception!
      try { 
        strBuilder0.appendWithSeparators(objectArray0, "");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      int int0 = (-74);
      StrBuilder strBuilder0 = new StrBuilder((-74));
      char char0 = '';
      StrBuilder strBuilder1 = strBuilder0.appendPadding((-74), '');
      char char1 = 'r';
      int int1 = strBuilder0.indexOf('r', 161);
      StrBuilder strBuilder2 = strBuilder0.append((-1.0));
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('r');
      String string0 = "";
      StrBuilder strBuilder3 = strBuilder0.replaceAll(strMatcher0, "");
      Writer writer0 = strBuilder3.asWriter();
      // Undeclared exception!
      try { 
        strBuilder0.replace((-74), (-1), "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -74
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[0];
      StrBuilder strBuilder1 = strBuilder0.append((-494L));
      int int0 = (-1358);
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray((-1358), (-1358));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1358
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder strBuilder1 = strBuilder0.append(object0);
      StrBuilder strBuilder2 = strBuilder0.replace(48, 48, (String) null);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      char[] charArray0 = new char[8];
      charArray0[0] = 'K';
      charArray0[1] = 'r';
      charArray0[2] = '=';
      charArray0[3] = 'w';
      charArray0[4] = 'Z';
      charArray0[5] = 'm';
      charArray0[6] = ';';
      charArray0[7] = 'm';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 48, 32);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      StrBuilder strBuilder2 = strBuilder1.append("w[m");
      StrBuilder strBuilder3 = strBuilder1.appendPadding((-3571), '%');
      StrBuilder strBuilder4 = strBuilder3.append('r');
      Object[] objectArray0 = new Object[0];
      StrBuilder strBuilder5 = strBuilder0.appendWithSeparators(objectArray0, "org.apache.commons.lang.text.StrMatcher");
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      Reader reader0 = strBuilder1.asReader();
      int int0 = strBuilder5.indexOf((StrMatcher) strMatcher_NoMatcher0, 39);
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('h');
      int int1 = strBuilder5.lastIndexOf(strMatcher0, 57);
      boolean boolean0 = strBuilder0.endsWith("org.apache.commons.lang.text.StrMatcher");
      StrBuilder strBuilder6 = strBuilder0.replaceAll(strMatcher0, "org.apache.commons.lang.text.StrMatcher");
      Reader reader1 = strBuilder6.asReader();
      int int2 = (-2450);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-2450), 'h');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2450
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2116));
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray((-2116), 2495);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2116
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.insert(57, (-2571.52599734));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 57
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(true);
      Writer writer0 = strBuilder1.asWriter();
      int int0 = 5;
      // Undeclared exception!
      try { 
        strBuilder1.insert(5, 5);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 5
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.append(0L);
      boolean boolean0 = strBuilder0.contains("");
      StrBuilder strBuilder2 = strBuilder1.append((Object) "");
      char[] charArray0 = new char[8];
      charArray0[0] = '4';
      charArray0[1] = '%';
      charArray0[2] = 'h';
      StrBuilder strBuilder3 = strBuilder0.clear();
      charArray0[3] = '|';
      charArray0[4] = 'n';
      charArray0[5] = 'M';
      charArray0[6] = 'p';
      charArray0[7] = ']';
      StrBuilder strBuilder4 = strBuilder2.append(charArray0);
      boolean boolean1 = strBuilder2.equals((Object) strBuilder0);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      StrBuilder strBuilder5 = strBuilder4.appendWithSeparators((Collection) linkedList0, "");
      StrBuilder strBuilder6 = strBuilder1.insert(0, (-3223L));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder4.new StrBuilderReader();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 0, (-569));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1611));
      String string0 = strBuilder0.midString((-1611), (-1611));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[1];
      charArray0[0] = 'K';
      strBuilder_StrBuilderWriter0.write(charArray0);
      strBuilder_StrBuilderWriter0.flush();
      char[] charArray1 = new char[9];
      charArray1[0] = 'f';
      charArray1[1] = 'j';
      charArray1[2] = 'T';
      charArray1[3] = 'w';
      charArray1[4] = '7';
      charArray1[5] = 'z';
      charArray1[6] = '@';
      charArray1[7] = 'U';
      charArray1[8] = 'H';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray1);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("");
      StrBuilder strBuilder1 = strBuilder0.replaceAll((StrMatcher) strMatcher_CharSetMatcher0, ", Length: ");
      boolean boolean0 = strBuilder1.contains(strMatcher1);
      Reader reader0 = strBuilder1.asReader();
      boolean boolean1 = strBuilder0.startsWith("");
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      strBuilder0.validateIndex(0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "");
      // Undeclared exception!
      try { 
        strBuilder0.validateRange((-614), (-614));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -614
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1);
      String string0 = "k6YcO";
      StrBuilder strBuilder1 = strBuilder0.append(1);
      StrBuilder strBuilder2 = strBuilder0.replaceFirst((String) null, "k6YcO");
      // Undeclared exception!
      try { 
        strBuilder2.charAt(1);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.class.version");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[0];
      int int0 = 756;
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 0, 756);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "";
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("");
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) "";
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) "";
      objectArray0[3] = (Object) "";
      objectArray0[4] = (Object) strBuilder0;
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators(objectArray0, "");
      StrBuilder strBuilder3 = strBuilder1.insert(0, 0L);
      int int0 = 2;
      char char0 = 'm';
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight(2, 2, 'm');
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      char[] charArray0 = new char[3];
      charArray0[0] = 'e';
      charArray0[1] = 'L';
      charArray0[2] = '/';
      int int0 = strMatcher0.isMatch(charArray0, 0, 0, 0);
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray1 = new char[3];
      charArray1[0] = '~';
      charArray1[1] = '2';
      charArray1[2] = 'L';
      int int1 = strBuilder_StrBuilderReader0.read(charArray1);
      strBuilder_StrBuilderReader0.mark(116);
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.insert(0, 0);
      StrBuilder strBuilder2 = strBuilder0.appendNewLine();
      StrBuilder strBuilder3 = strBuilder1.append((Object) strBuilder2);
      StrBuilder strBuilder4 = strBuilder1.append(Integer.MAX_VALUE);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      String string0 = "org.apache.commons.lang.text.StrMatcher$TrimMatcher";
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrMatcher$TrimMatcher");
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("org.apache.commons.lang.text.StrMatcher$TrimMatcher");
      StrBuilder strBuilder2 = strBuilder0.setLength(0);
      String string1 = strBuilder0.getNewLineText();
      float float0 = 5281.246F;
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-856));
      StrBuilder strBuilder1 = strBuilder0.appendPadding(0, 'A');
      String string0 = strBuilder1.midString((-78), (-78));
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      int int0 = 1547;
      StrBuilder strBuilder0 = new StrBuilder(1547);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      String string0 = "{!d?<rRb`\\oY;XP(";
      int int1 = 2584;
      int int2 = (-2539);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("{!d?<rRb`oY;XP(", 0, (-2539));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      String string0 = "p4;J)Cn!Q|B},iI<";
      StrBuilder strBuilder0 = new StrBuilder("p4;J)Cn!Q|B},iI<");
      StrBuilder strBuilder1 = strBuilder0.append(0.0);
      StrBuilder strBuilder2 = strBuilder1.append((-2514));
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder3 = new StrBuilder();
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) "p4;J)Cn!Q|B},iI<";
      objectArray0[1] = (Object) strBuilder1;
      objectArray0[2] = (Object) strBuilder1;
      objectArray0[3] = (Object) "p4;J)Cn!Q|B},iI<";
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.next();
      objectArray0[4] = (Object) "p4;J)Cn!Q|B},iI<0.0-2514";
      objectArray0[5] = (Object) strBuilder3;
      objectArray0[6] = (Object) strBuilder3;
      StrBuilder strBuilder4 = strBuilder3.appendWithSeparators(objectArray0, "p4;J)Cn!Q|B},iI<");
      // Undeclared exception!
      try { 
        strBuilder4.append("{_7x=O", 0, 426);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      StrBuilder strBuilder2 = strBuilder0.replaceAll("", "");
      char char0 = strBuilder0.charAt(0);
      StrBuilder strBuilder3 = strBuilder0.replaceAll('\n', '\n');
      StrBuilder strBuilder4 = strBuilder3.appendNull();
      int int0 = (-27);
      StrBuilder strBuilder5 = strBuilder3.appendFixedWidthPadRight((Object) "os.name", (-27), '\n');
      StrBuilder strBuilder6 = strBuilder5.deleteAll(';');
      StrBuilder strBuilder7 = strBuilder0.appendNull();
      String string0 = strBuilder1.toString();
      Reader reader0 = strBuilder6.asReader();
      StrBuilder strBuilder8 = strBuilder6.appendFixedWidthPadRight(0, 0, '\n');
      String string1 = "";
      int int1 = strBuilder0.indexOf("", (-27));
      String string2 = strBuilder5.getNewLineText();
      int int2 = (-378);
      int int3 = strBuilder8.indexOf("Invalid startIndex: ", (-378));
      StrBuilder strBuilder9 = strBuilder6.replaceFirst('\n', ';');
      // Undeclared exception!
      try { 
        strBuilder8.substring((-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      int int0 = 711;
      StrBuilder strBuilder0 = new StrBuilder(711);
      char char0 = 'J';
      StrBuilder strBuilder1 = strBuilder0.append('J');
      int int1 = 0;
      char char1 = 'j';
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight(0, 0, 'j');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder strBuilder3 = strBuilder2.deleteAll('5');
      // Undeclared exception!
      try { 
        strBuilder3.append(strBuilder1, 711, 711);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      strBuilder0.size = 0;
      StrBuilder strBuilder1 = strBuilder0.append("");
      StrBuilder strBuilder2 = strBuilder1.setNullText("");
      StrBuilder strBuilder3 = strBuilder1.replace(0, 31, "");
      int int0 = strBuilder0.indexOf('B', 386);
      String string0 = strBuilder2.getNewLineText();
      StrBuilder strBuilder4 = strBuilder2.appendFixedWidthPadRight((Object) strBuilder1, 115, 'B');
      StrBuilder strBuilder5 = new StrBuilder();
      StrBuilder strBuilder6 = strBuilder4.insert(115, (Object) strBuilder5);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder5.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      int int1 = strBuilder6.lastIndexOf(strMatcher0);
      String string1 = strBuilder4.rightString(0);
      int int2 = strBuilder0.indexOf('|');
      StrTokenizer strTokenizer0 = strBuilder4.asTokenizer();
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(4274);
      StrBuilder strBuilder1 = strBuilder0.appendNull();
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = new StringBuffer(48);
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder2 = strBuilder0.appendPadding(0, 'u');
      int int0 = strBuilder2.size();
      StrBuilder strBuilder3 = strBuilder2.insert(0, (Object) strBuilder1);
      // Undeclared exception!
      try { 
        strBuilder2.charAt(517);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 517
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = 'V';
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('V');
      StrBuilder strBuilder2 = strBuilder0.append((char[]) null);
      // Undeclared exception!
      try { 
        strBuilder2.insert(5, (char[]) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 5
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrBuilder strBuilder2 = strBuilder0.deleteAll(strMatcher0);
      StrBuilder strBuilder3 = strBuilder0.delete(0, 1203);
      StrBuilder strBuilder4 = strBuilder3.clear();
      StrBuilder strBuilder5 = strBuilder3.appendFixedWidthPadRight(1203, 289, 'c');
      StringBuffer stringBuffer0 = new StringBuffer("os.arch");
      StrBuilder strBuilder6 = strBuilder3.append(stringBuffer0);
      char[] charArray0 = new char[8];
      charArray0[0] = 'c';
      charArray0[1] = 'c';
      charArray0[2] = 'c';
      charArray0[3] = 'c';
      charArray0[4] = 'c';
      charArray0[5] = 'c';
      charArray0[6] = 'c';
      charArray0[7] = 'c';
      StrBuilder strBuilder7 = strBuilder6.append(charArray0);
      Reader reader0 = strBuilder7.asReader();
      StrBuilder strBuilder8 = strBuilder6.trim();
      StrBuilder strBuilder9 = strBuilder2.append("java.specification.name");
      StrBuilder strBuilder10 = strBuilder9.ensureCapacity(102);
      StrBuilder strBuilder11 = strBuilder9.deleteAll(strMatcher0);
      StrBuilder strBuilder12 = strBuilder11.append((long) 1203);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      Reader reader1 = strBuilder0.asReader();
      StrBuilder strBuilder13 = strBuilder2.append((float) 289);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3102);
      char char0 = '5';
      StrBuilder strBuilder1 = strBuilder0.appendPadding(3102, '5');
      StrBuilder strBuilder2 = strBuilder0.setLength(776);
      StrBuilder strBuilder3 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder3.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(3102);
      // Undeclared exception!
      try { 
        strBuilder3.insert(776, "Windows NT");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 776
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((-4301), 0, 'h');
      char[] charArray0 = new char[4];
      charArray0[0] = 'h';
      charArray0[1] = 'h';
      charArray0[2] = 'h';
      charArray0[3] = 'h';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder1.lastIndexOf(strMatcher0);
      Reader reader0 = strBuilder1.asReader();
      StrBuilder strBuilder2 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder3 = strBuilder2.deleteFirst('h');
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2007));
      boolean boolean0 = strBuilder0.startsWith("K|Ub_\"");
      StrBuilder strBuilder1 = strBuilder0.trim();
      boolean boolean1 = strBuilder0.isEmpty();
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight((Object) "K|Ub_\"", (-2007), 'n');
      StrBuilder strBuilder3 = strBuilder2.deleteFirst("X&UT`e>$9P+b|o;Y&v");
      StrBuilder strBuilder4 = strBuilder2.append((-1189L));
      StringBuffer stringBuffer0 = new StringBuffer(637);
      StrBuilder strBuilder5 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder6 = strBuilder0.ensureCapacity(0);
      StrBuilder strBuilder7 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder4.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      boolean boolean2 = strBuilder6.contains(strMatcher0);
      StrBuilder strBuilder8 = strBuilder6.appendFixedWidthPadRight((Object) strBuilder7, 0, '?');
      StrBuilder strBuilder9 = strBuilder8.append("QWFl+5L:");
      StrBuilder strBuilder10 = strBuilder2.append((-5753.812F));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder4.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[1];
      charArray0[0] = 'a';
      strBuilder0.buffer = charArray0;
      int int0 = strBuilder0.indexOf("");
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("G>miND*xy'@");
      strBuilder_StrBuilderWriter0.write("");
      int int0 = 0;
      strBuilder_StrBuilderWriter0.write(0);
      int int1 = 0;
      StrBuilder strBuilder1 = strBuilder0.replace(0, 0, "");
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("");
      StrBuilder strBuilder2 = strBuilder0.deleteFirst(strMatcher0);
      int int2 = strBuilder1.hashCode();
      Reader reader0 = strBuilder1.asReader();
      StrBuilder strBuilder3 = strBuilder0.append((long) 0);
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(898, 'd');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 898
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1351));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("670u!D$w4*Of-n`u");
      int int0 = strBuilder0.indexOf(strMatcher0);
      String string0 = strBuilder0.toString();
      Reader reader0 = strBuilder0.asReader();
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      String string0 = "X(,/y";
      StrBuilder strBuilder0 = new StrBuilder("X(,/y");
      int int0 = 4;
      StrBuilder strBuilder1 = strBuilder0.deleteCharAt(4);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      int int1 = 2199;
      char[] charArray0 = new char[1];
      charArray0[0] = 'A';
      // Undeclared exception!
      try { 
        strBuilder0.insert(0, charArray0, 663, (-4795));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: 663
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "org.apache.commons.lang.text.StrBuilder";
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("org.apache.commons.lang.text.StrBuilder", "org.apache.commons.lang.text.StrBuilder");
      StrBuilder strBuilder2 = strBuilder0.append(0);
      int int0 = (-1798);
      // Undeclared exception!
      try { 
        strBuilder2.replace(108, (-1798), "org.apache.commons.lang.text.StrBuilder");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1513);
      String string0 = strBuilder0.midString((-775), (-775));
      char[] charArray0 = new char[7];
      charArray0[0] = 'n';
      charArray0[1] = 'X';
      charArray0[2] = 'e';
      charArray0[3] = '8';
      charArray0[4] = '8';
      charArray0[5] = '3';
      charArray0[6] = '6';
      StrBuilder strBuilder1 = strBuilder0.insert(0, charArray0);
      StrBuilder strBuilder2 = strBuilder0.append("");
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      String string1 = strBuilder0.leftString(1513);
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setQuoteMatcher((StrMatcher) null);
      StrBuilder strBuilder3 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder0.insert(0, charArray0, 117, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: 117
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "");
      Writer writer0 = strBuilder0.asWriter();
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.append(0.0F);
      char[] charArray0 = new char[7];
      charArray0[0] = '`';
      charArray0[1] = '7';
      charArray0[2] = '_';
      charArray0[3] = '<';
      charArray0[4] = '\\';
      charArray0[5] = '?';
      charArray0[6] = 'H';
      StrBuilder strBuilder3 = strBuilder2.append(charArray0, 0, 0);
      boolean boolean1 = strBuilder2.equals(strBuilder0);
      char[] charArray1 = new char[4];
      charArray1[0] = 'h';
      charArray1[1] = '#';
      charArray1[2] = '1';
      charArray1[3] = 'E';
      StrBuilder strBuilder4 = strBuilder0.insert(0, charArray1);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(116);
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("0]n3E%<)j`");
      // Undeclared exception!
      try { 
        strBuilder0.delete(931, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "/,T2u> 1Cq]j_-UV)t";
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) null, "/,T2u> 1Cq]j_-UV)t");
      StrBuilder strBuilder2 = strBuilder0.deleteFirst('&');
      char[] charArray0 = strBuilder2.toCharArray();
      String string1 = null;
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = null;
      try {
        strMatcher_StringMatcher0 = new StrMatcher.StringMatcher((String) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrMatcher$StringMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      StrBuilder strBuilder1 = strBuilder0.deleteCharAt(0);
      boolean boolean0 = strBuilder0.isEmpty();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      int int0 = strBuilder_StrBuilderReader0.read();
      int int1 = strBuilder0.lastIndexOf("java.awt.graphicsenv", 0);
      StrBuilder strBuilder2 = strBuilder0.append((Object) strBuilder_StrBuilderReader0);
      boolean boolean1 = strBuilder1.equals(strBuilder0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      boolean boolean0 = strBuilder0.endsWith("");
      char[] charArray0 = new char[2];
      charArray0[0] = 'b';
      charArray0[1] = '7';
      StrBuilder strBuilder2 = strBuilder1.insert(0, charArray0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.append((float) 0);
      StrBuilder strBuilder2 = strBuilder0.insert(0, "");
      StrBuilder strBuilder3 = strBuilder0.replaceAll("", "");
      strBuilder2.size = 851;
      StrBuilder strBuilder4 = strBuilder3.clear();
      char[] charArray0 = new char[5];
      charArray0[0] = 'm';
      charArray0[1] = 'K';
      StrBuilder strBuilder5 = strBuilder3.replaceFirst((StrMatcher) null, "G2P");
      charArray0[2] = ' ';
      charArray0[3] = '*';
      charArray0[4] = 'O';
      StrBuilder strBuilder6 = strBuilder3.append(charArray0, 0, 0);
      StrBuilder strBuilder7 = strBuilder6.replaceFirst("", "E$)}*k~sTrM3u9'e{j");
      StrTokenizer strTokenizer0 = strBuilder2.asTokenizer();
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      int int0 = strBuilder0.lastIndexOf("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter", 0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "5{\\>>gRX";
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder1.replaceFirst("5{>>gRX", "osV992dA .0!ohZ]L");
      Writer writer0 = strBuilder0.asWriter();
      int int0 = (-1124);
      char char0 = ':';
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadRight((Object) strBuilder1, (-1124), ':');
      StrBuilder strBuilder4 = strBuilder3.appendFixedWidthPadRight((-1124), 0, ':');
      char[] charArray0 = new char[0];
      StrBuilder strBuilder5 = strBuilder0.trim();
      // Undeclared exception!
      try { 
        strBuilder1.append(charArray0, (-1648), (-1648));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -1648
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(4823.0464F);
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight((Object) strBuilder0, 0, '+');
      StrBuilder strBuilder3 = strBuilder2.append(0);
      StrBuilder strBuilder4 = strBuilder3.append((-1206));
      StrBuilder strBuilder5 = strBuilder1.deleteFirst("");
      boolean boolean0 = strBuilder0.startsWith("IMu('&");
      StrBuilder strBuilder6 = strBuilder0.ensureCapacity(1);
      StrBuilder strBuilder7 = strBuilder6.clear();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder4.new StrBuilderWriter();
      StrBuilder strBuilder8 = strBuilder2.insert(0, 4823.0464F);
      strBuilder_StrBuilderWriter0.write((char[]) null);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      int int1 = (-1);
      char char0 = '}';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((-1), (-1), '}');
      StrBuilder strBuilder2 = strBuilder0.setNewLineText("");
      // Undeclared exception!
      try { 
        strBuilder1.charAt((-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.insert(175, "Linux");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 175
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      String string0 = null;
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(46);
      StrBuilder strBuilder2 = strBuilder0.appendNewLine();
      // Undeclared exception!
      try { 
        strBuilder2.charAt((-1820));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1820
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      int int1 = 1;
      // Undeclared exception!
      try { 
        strBuilder0.substring(1, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((double) (-308));
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight((-308), (-308), 'F');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("D` P");
      StrMatcher strMatcher0 = StrMatcher.charMatcher('F');
      StrBuilder strBuilder3 = strBuilder0.deleteFirst(strMatcher0);
      char[] charArray0 = new char[4];
      charArray0[0] = 'F';
      charArray0[1] = 'F';
      charArray0[2] = 'F';
      charArray0[3] = 'F';
      char[] charArray1 = strBuilder2.getChars(charArray0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((-913.0F));
      StrBuilder strBuilder2 = strBuilder1.insert(4, (char[]) null, 4, 0);
      char char0 = 'g';
      StrBuilder strBuilder3 = strBuilder0.insert(4, 'g');
      // Undeclared exception!
      try { 
        strBuilder0.insert(47, 'T');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 47
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[7];
      charArray0[0] = 'm';
      charArray0[1] = 'I';
      charArray0[2] = '.';
      charArray0[3] = 'c';
      charArray0[4] = ')';
      charArray0[5] = 'm';
      charArray0[6] = '.';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, (-1383), (-1383));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-44);
      strBuilder0.size = (-44);
      String string0 = strBuilder0.rightString((-44));
      String string1 = "hX]8~jVQyI'9'.*|";
      int int1 = 161;
      int int2 = strBuilder0.indexOf("hX]8~jVQyI'9'.*|", 161);
      char char0 = 'X';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(161, (-44), 'X');
      StrTokenizer strTokenizer0 = strBuilder1.asTokenizer();
      // Undeclared exception!
      try { 
        strBuilder0.append(1.0);
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      int int0 = (-2298);
      StrBuilder strBuilder0 = new StrBuilder((-2298));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[1];
      char char0 = '5';
      charArray0[0] = '5';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, (-1942), (-1942));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("n");
      StrBuilder strBuilder1 = strBuilder0.append(1.0);
      Writer writer0 = strBuilder0.asWriter();
      // Undeclared exception!
      try { 
        strBuilder1.insert(3947, false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3947
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.class.version");
      StrBuilder strBuilder1 = strBuilder0.insert(2, 2461.2349F);
      StrBuilder strBuilder2 = strBuilder0.reverse();
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      int int0 = (-3011);
      StrBuilder strBuilder0 = new StrBuilder((-3011));
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      String string0 = strBuilder0.rightString((-3011));
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher((String) null);
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "java.library.path");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterString("java.library.path");
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "/%t'M");
      StrBuilder strBuilder3 = strBuilder2.append(strBuilder0);
      // Undeclared exception!
      try { 
        strBuilder0.setLength((-3011));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3011
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(32);
      StrBuilder strBuilder1 = new StrBuilder("V-K}W{AUpZs63;5%f");
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      int int0 = (-3369);
      StrBuilder strBuilder0 = new StrBuilder((-3369));
      // Undeclared exception!
      try { 
        strBuilder0.setLength((-3369));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3369
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1752);
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(1752);
      StrBuilder strBuilder2 = strBuilder1.append(457.7208755786);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      StrBuilder strBuilder3 = strBuilder0.append(object0);
      StrBuilder strBuilder4 = strBuilder1.append(false);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrBuilder strBuilder5 = strBuilder3.setLength(2019);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      int int0 = (-2298);
      StrBuilder strBuilder0 = new StrBuilder((-2298));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[1];
      char char0 = '5';
      charArray0[0] = '5';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 3320, 3320);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-96));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder strBuilder1 = strBuilder0.append(object0);
      String string0 = strBuilder0.leftString((-96));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset("Invalid startIndex: ");
      boolean boolean1 = strBuilder1.equals((Object) null);
      char[] charArray0 = new char[6];
      charArray0[0] = '`';
      charArray0[1] = '^';
      charArray0[2] = 'c';
      charArray0[3] = ')';
      charArray0[4] = 'Z';
      charArray0[5] = 'g';
      // Undeclared exception!
      try { 
        strBuilder1.getChars((-489), (-96), charArray0, 44);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -489
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      char[] charArray0 = new char[6];
      charArray0[0] = 'r';
      charArray0[1] = 'B';
      charArray0[2] = 'g';
      charArray0[3] = '#';
      charArray0[4] = '9';
      charArray0[5] = '|';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.append('%');
      StrMatcher strMatcher2 = StrMatcher.charMatcher('|');
      String string0 = "m[w#LMct";
      StrBuilder strBuilder2 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder3 = strBuilder0.replaceFirst((StrMatcher) strMatcher_NoMatcher0, "m[w#LMct");
      // Undeclared exception!
      try { 
        strBuilder3.insert(8976, '9');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 8976
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      String string0 = "org.apache.commons.lang.text.StrBuilder$StrBuilderReader";
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(134);
      Object[] objectArray0 = new Object[7];
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      objectArray0[0] = object0;
      objectArray0[1] = (Object) strBuilder1;
      objectArray0[2] = (Object) strBuilder1;
      objectArray0[3] = (Object) "org.apache.commons.lang.text.StrBuilder$StrBuilderReader";
      objectArray0[4] = (Object) strBuilder0;
      objectArray0[5] = (Object) strBuilder1;
      objectArray0[6] = (Object) strBuilder0;
      String string1 = "fC(jffcS%9_";
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators(objectArray0, "fC(jffcS%9_");
      StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      // Undeclared exception!
      try { 
        strBuilder0.insert(1160, (Object) "vuO^zTF`(");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1160
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder2 = strBuilder1.minimizeCapacity();
      StrBuilder strBuilder3 = strBuilder1.trim();
      int int0 = strBuilder3.indexOf('!');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      char[] charArray0 = new char[5];
      charArray0[0] = '!';
      charArray0[1] = '!';
      charArray0[2] = 'P';
      charArray0[3] = '!';
      charArray0[4] = '!';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, (-1), (-1285));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -1285
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.leftString(0);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("n");
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("(RY.vn/V");
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher("(RY.vn/V");
      StrBuilder strBuilder1 = strBuilder0.appendPadding(0, 'J');
      StrBuilder strBuilder2 = strBuilder0.append('G');
      String string1 = strBuilder2.toString();
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1634), (-1634));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1634
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[2];
      charArray0[0] = ')';
      charArray0[1] = 'q';
      // Undeclared exception!
      try { 
        strBuilder0.getChars((-81), (-81), charArray0, 32);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -81
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("]X=(aR6Q&O~.ti?$CA'");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst((StrMatcher) strMatcher_StringMatcher0, "");
      char[] charArray0 = strBuilder0.toCharArray();
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("-fR");
      StrBuilder strBuilder1 = strBuilder0.append(false);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrBuilder strBuilder2 = strBuilder0.replaceFirst(strMatcher0, "");
      StrBuilder strBuilder3 = strBuilder2.append(1124.41818828539);
      int int0 = strBuilder2.indexOf("-fR", (-244));
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((-3275), 740, '}');
      StrBuilder strBuilder2 = strBuilder0.append(false);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("MK\"5G@&WU");
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) "MK\"5G@&WU");
      strBuilder_StrBuilderWriter0.write("MK\"5G@&WU");
      int int0 = strBuilder1.capacity();
      boolean boolean0 = strBuilder0.contains('X');
      // Undeclared exception!
      try { 
        strBuilder1.insert((-3614), (Object) strBuilder0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3614
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("7Etj@");
      // Undeclared exception!
      try { 
        strBuilder0.insert(3617, (Object) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3617
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((-308), (-308), 'F');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("D` P");
      char[] charArray0 = new char[4];
      charArray0[0] = 'F';
      charArray0[1] = 'F';
      charArray0[3] = 'F';
      char[] charArray1 = strBuilder1.getChars(charArray0);
      // Undeclared exception!
      try { 
        strBuilder0.charAt(1094);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1094
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "^}.uj\"9Oxi@|=-w0]!(";
      int int0 = (-32);
      int int1 = (-2236);
      // Undeclared exception!
      try { 
        strBuilder0.append("^}.uj\"9Oxi@|=-w0]!(", (-32), (-2236));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("");
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      boolean boolean0 = strBuilder0.equals(object0);
      StrBuilder strBuilder2 = strBuilder0.append("");
      StrBuilder strBuilder3 = strBuilder2.deleteAll("(");
      String string0 = null;
      int int0 = 1842;
      char[] charArray0 = new char[3];
      charArray0[0] = '!';
      charArray0[1] = 'o';
      charArray0[2] = 'z';
      int int1 = 391;
      // Undeclared exception!
      try { 
        strBuilder0.getChars(1842, (-2225), charArray0, 391);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2225
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 1697;
      char char0 = ')';
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt((-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      strBuilder_StrBuilderReader0.mark(2519);
      char[] charArray0 = new char[0];
      StrMatcher strMatcher0 = StrMatcher.charMatcher('\'');
      // Undeclared exception!
      try { 
        strBuilder0.replace(strMatcher0, "", (-1134), (-3063), (-1780));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1134
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      int int0 = 1634;
      StrBuilder strBuilder0 = new StrBuilder(1634);
      char[] charArray0 = new char[9];
      charArray0[0] = '_';
      charArray0[1] = ':';
      charArray0[2] = 'W';
      char char0 = '[';
      char[] charArray1 = new char[1];
      charArray1[0] = 'W';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(117, (-1001), charArray1, 48);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1001
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('N');
      StrBuilder strBuilder2 = strBuilder0.appendPadding(2827, 'N');
      StrBuilder strBuilder3 = strBuilder2.insert(2827, 'N');
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt((-587));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -587
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      boolean boolean0 = strBuilder0.equals(object0);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      String string1 = "";
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("");
      // Undeclared exception!
      try { 
        strBuilder0.replace(193, 193, "^_. z~)!Xp");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(44);
      char[] charArray0 = new char[2];
      charArray0[0] = '-';
      charArray0[1] = '';
      String string0 = null;
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("", (String) null);
      StringBuffer stringBuffer0 = strBuilder1.toStringBuffer();
      int int0 = (-214);
      // Undeclared exception!
      try { 
        strBuilder0.getChars(44, 44, charArray0, (-214));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 44
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("f#m3kyr2+J");
      StrBuilder strBuilder1 = strBuilder0.setCharAt(0, '(');
      StringBuffer stringBuffer0 = new StringBuffer("f#m3kyr2+J");
      StrBuilder strBuilder2 = strBuilder1.append(stringBuffer0, 0, 0);
      StringBuffer stringBuffer1 = new StringBuffer((CharSequence) "f#m3kyr2+J");
      StrBuilder strBuilder3 = strBuilder0.append(stringBuffer1);
      StrBuilder strBuilder4 = strBuilder3.append("UvRrUQWJ4VC7");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder4.new StrBuilderWriter();
      char[] charArray0 = new char[5];
      charArray0[0] = '(';
      charArray0[1] = '(';
      charArray0[2] = '(';
      charArray0[3] = '(';
      charArray0[4] = 'T';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, (-2650), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      Object object0 = new Object();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(object0, (-1118), '+');
      StrBuilder strBuilder2 = strBuilder0.append(115);
      StrBuilder strBuilder3 = strBuilder1.append((StringBuffer) null, (-1118), (-680));
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(32);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      String string0 = strBuilder0.leftString(32);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      StrBuilder strBuilder1 = strBuilder0.append(object0);
      int int0 = strBuilder0.length();
      String string0 = null;
      StrBuilder strBuilder2 = strBuilder0.append((String) null);
      StrTokenizer strTokenizer0 = strBuilder2.asTokenizer();
      int int1 = (-2035);
      char[] charArray0 = new char[4];
      charArray0[0] = '5';
      charArray0[1] = '2';
      charArray0[2] = 'R';
      charArray0[3] = 'M';
      // Undeclared exception!
      try { 
        strBuilder2.insert((-2035), charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2035
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(491);
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(491);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 491
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      int int0 = 1002;
      StrBuilder strBuilder0 = new StrBuilder(1002);
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      boolean boolean0 = strBuilder0.contains((StrMatcher) strMatcher_TrimMatcher0);
      // Undeclared exception!
      try { 
        strBuilder0.substring(390);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.vm.specification.name");
      StrBuilder strBuilder1 = strBuilder0.append(0L);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      boolean boolean0 = strBuilder1.contains(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.insert(0, (char[]) null, 0, 0);
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Solaris");
      boolean boolean0 = strBuilder0.endsWith("");
      // Undeclared exception!
      try { 
        strBuilder0.substring(3016);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.contains("yYLF");
      StrBuilder strBuilder1 = new StrBuilder((-1327));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      StrBuilder strBuilder2 = strBuilder0.setNewLineText("yYLF");
      // Undeclared exception!
      try { 
        strBuilder0.substring((-1327), 2112);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1327
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = "#~k]/0G^36";
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance("#~k]/0G^36");
      int int1 = (-2791);
      int int2 = (-1664);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-2791), (-1664));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2791
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      String string0 = strBuilder0.midString(0, 0);
      StrBuilder strBuilder1 = strBuilder0.insert(0, (double) 0);
      int int0 = strBuilder1.length();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
      StrBuilder strBuilder2 = strBuilder0.appendPadding(0, 'C');
      char[] charArray0 = new char[8];
      charArray0[0] = 'C';
      charArray0[1] = 'C';
      charArray0[2] = 'C';
      charArray0[3] = 'C';
      charArray0[4] = 'C';
      charArray0[5] = 'C';
      charArray0[6] = 'C';
      charArray0[7] = 'C';
      strBuilder_StrBuilderWriter0.write(charArray0);
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("HC@gb1d,$ckAj");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      char[] charArray0 = new char[4];
      charArray0[0] = 'k';
      charArray0[1] = 'Y';
      StrMatcher strMatcher1 = StrMatcher.charMatcher('t');
      charArray0[2] = '`';
      charArray0[3] = '=';
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder2 = strBuilder0.replaceAll(strMatcher0, "HC@gb1d,$ckAj");
      // Undeclared exception!
      try { 
        strBuilder2.append(charArray0, 0, 604);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 604
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      int int0 = 2269;
      StrBuilder strBuilder0 = new StrBuilder(2269);
      StrBuilder strBuilder1 = strBuilder0.replaceAll(")[R\u0007n5", "");
      StrBuilder strBuilder2 = strBuilder0.replaceAll(")[R\u0007n5", (String) null);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("StrTokenizer");
      StrBuilder strBuilder3 = strBuilder0.deleteFirst(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-2082), false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2082
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(97);
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex(97);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 97
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 1033;
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(1033, '<');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1033
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      int int0 = 3113;
      StrBuilder strBuilder0 = new StrBuilder(3113);
      StrBuilder strBuilder1 = strBuilder0.append((double) 3113);
      String string0 = strBuilder0.midString(3113, 3113);
      StrBuilder strBuilder2 = strBuilder0.replaceAll("E&t_P|", (String) null);
      int int1 = 3144;
      String string1 = strBuilder2.midString(3113, 3144);
      StrBuilder strBuilder3 = strBuilder2.replaceAll("zY]ZK!zIsc=niY", "");
      StrBuilder strBuilder4 = strBuilder3.appendWithSeparators((Object[]) null, "");
      // Undeclared exception!
      try { 
        strBuilder4.validateIndex(3144);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3144
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(114);
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('g', 'g');
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrBuilder strBuilder2 = strBuilder0.replaceAll(strMatcher0, "");
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Rh+ap@PmfS-\"B 4");
      int int0 = 0;
      int int1 = 2;
      char[] charArray0 = new char[2];
      char char0 = 'T';
      charArray0[0] = 'T';
      char char1 = '3';
      charArray0[1] = '3';
      int int2 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 0, 995);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 995
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("?");
      char[] charArray0 = new char[1];
      charArray0[0] = 'j';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 1607, (-216));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -216
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.insert((-2097), (double) (-2097));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2097
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.indexOf("", 0);
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[2];
      StrBuilder strBuilder1 = strBuilder0.insert(0, 'a');
      charArray0[0] = 'm';
      charArray0[1] = 'p';
      strBuilder0.buffer = charArray0;
      StrBuilder strBuilder2 = strBuilder0.append('\"');
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder strBuilder3 = strBuilder0.appendNewLine();
      StrBuilder strBuilder4 = strBuilder2.replaceAll("!-m:", "!-m:");
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('\"');
      StrMatcher strMatcher0 = StrMatcher.charMatcher('\"');
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_CharMatcher0, 0);
      StrBuilder strBuilder5 = strBuilder4.replaceFirst('X', '(');
      String string0 = strBuilder5.getNullText();
      boolean boolean0 = strBuilder3.startsWith(":YJ 1AYtl ");
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("startIndex must be valid");
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("}Q*B!e_Ql");
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder0.append("}Q*B!e_Ql", 108, 34);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      Object[] objectArray0 = new Object[7];
      StrBuilder strBuilder1 = strBuilder0.insert(0, 60.0F);
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) strBuilder0;
      objectArray0[3] = (Object) strBuilder0;
      objectArray0[4] = (Object) "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer";
      objectArray0[5] = (Object) "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer";
      objectArray0[6] = (Object) strBuilder0;
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators(objectArray0, "Invalid offset: ");
      // Undeclared exception!
      try { 
        strBuilder0.insert((-2202), true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2202
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3564);
      String string0 = strBuilder0.toString();
      StrBuilder strBuilder1 = strBuilder0.clear();
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(3564, '2');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3564
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("=/TeDO>+1lx]UqV");
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      int int0 = strBuilder0.indexOf((StrMatcher) strMatcher_NoMatcher0);
      StrBuilder strBuilder1 = strBuilder0.setCharAt(0, '?');
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3);
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst((StrMatcher) null);
      // Undeclared exception!
      try { 
        strBuilder0.insert(3, '@');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrBuilder strBuilder1 = strBuilder0.append((StrBuilder) null);
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder0.insert((-589), charArray0, 2, (-589));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -589
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("6HvZGw2.b-");
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "6HvZGw2.b-");
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder2 = strBuilder0.delete(0, 0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      int int0 = strBuilder2.lastIndexOf(strMatcher0);
      StrBuilder strBuilder3 = strBuilder0.replace(0, 0, "6HvZGw2.b-");
      StrBuilder strBuilder4 = strBuilder3.appendNewLine();
      int int1 = strBuilder0.size();
      int int2 = strBuilder0.lastIndexOf('$');
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("6HvZGw2.b-");
      StrBuilder strBuilder5 = strBuilder0.deleteAll(strMatcher1);
      StringBuffer stringBuffer1 = strBuilder5.toStringBuffer();
      StrBuilder strBuilder6 = strBuilder0.minimizeCapacity();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder6.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip((-1L));
      LinkedList<StrBuilder> linkedList0 = new LinkedList<StrBuilder>();
      StrBuilder strBuilder7 = strBuilder2.appendWithSeparators((Collection) linkedList0, "6HvZGw2.b-");
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.reverse();
      String string0 = strBuilder1.midString(2, 2);
      String string1 = "BVm2JsYc*Ah4Do";
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("BVm2JsYc*Ah4Do");
      StrBuilder strBuilder2 = strBuilder0.deleteAll(strMatcher0);
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('W');
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      StrBuilder strBuilder3 = strBuilder0.setNewLineText("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset();
      StrBuilder strBuilder4 = strBuilder3.appendWithSeparators((Iterator) strTokenizer0, "");
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_CharMatcher0, (-1));
      StrBuilder strBuilder5 = strBuilder0.append((double) (-1));
      char[] charArray0 = new char[0];
      int int1 = strMatcher0.isMatch(charArray0, 0, 9, (-1320));
      // Undeclared exception!
      try { 
        strBuilder5.append("", (-1), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(569);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("java.specification.name");
      char[] charArray0 = new char[2];
      charArray0[0] = 'g';
      charArray0[1] = '*';
      // Undeclared exception!
      try { 
        strMatcher0.isMatch(charArray0, (-1), (-1), 569);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceAll("4.", "4.");
      String string0 = strBuilder1.leftString(0);
      StrBuilder strBuilder2 = strBuilder0.appendNewLine();
      strBuilder0.validateIndex(0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      int int0 = strBuilder0.lastIndexOf('w');
      StrBuilder strBuilder3 = strBuilder0.append(true);
      StrBuilder strBuilder4 = strBuilder0.deleteFirst('%');
      StrBuilder strBuilder5 = strBuilder3.appendFixedWidthPadRight((-1109), 0, 'Q');
      Reader reader0 = strBuilder3.asReader();
      StrBuilder strBuilder6 = strBuilder1.appendFixedWidthPadLeft((Object) strBuilder3, 187, '2');
      StrBuilder strBuilder7 = strBuilder6.setNewLineText(",IXcP]A_gP");
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      int int1 = strBuilder0.indexOf(strMatcher0, 0);
      StrBuilder strBuilder8 = strBuilder7.append(false);
      StrBuilder strBuilder9 = strBuilder2.setNewLineText("4.");
      boolean boolean1 = strBuilder_StrBuilderReader0.ready();
      StrBuilder strBuilder10 = strBuilder3.append(strBuilder7);
      int int2 = strBuilder10.indexOf(strMatcher0, 857);
      strBuilder_StrBuilderReader0.reset();
      // Undeclared exception!
      try { 
        strBuilder1.setCharAt(857, 'Q');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 857
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.append(0L);
      boolean boolean0 = strBuilder0.contains("");
      StrBuilder strBuilder2 = strBuilder1.append((Object) "");
      char[] charArray0 = new char[8];
      charArray0[0] = '4';
      charArray0[1] = '%';
      charArray0[2] = 'h';
      StrBuilder strBuilder3 = strBuilder0.clear();
      charArray0[3] = '|';
      charArray0[4] = 'n';
      charArray0[5] = 'M';
      charArray0[6] = 'p';
      charArray0[7] = ']';
      strBuilder0.buffer = charArray0;
      StrBuilder strBuilder4 = strBuilder2.append(charArray0);
      boolean boolean1 = strBuilder2.equals((Object) strBuilder0);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      StrBuilder strBuilder5 = strBuilder4.appendWithSeparators((Collection) linkedList0, "");
      StrBuilder strBuilder6 = strBuilder1.insert(0, (-3223L));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder4.new StrBuilderReader();
      int int0 = strBuilder2.indexOf('M', (-569));
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 0, (-569));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      char char0 = 'A';
      StrBuilder strBuilder1 = strBuilder0.append('A');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.previousToken();
      Object object0 = strBuilder_StrBuilderTokenizer0.next();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      Object object1 = strBuilder_StrBuilderTokenizer0.clone();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('A');
      StrMatcher strMatcher2 = StrMatcher.charMatcher('A');
      int int1 = strBuilder1.indexOf(strMatcher0, 2193);
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrMatcher strMatcher3 = StrMatcher.charSetMatcher("ScNw");
      StrBuilder strBuilder2 = strBuilder1.replaceFirst(")w&", "ScNw");
      StrMatcher strMatcher4 = StrMatcher.stringMatcher("4.9");
      String string1 = "pz.<OA#D";
      StrMatcher strMatcher5 = StrMatcher.charSetMatcher("pz.<OA#D");
      int int2 = strBuilder1.lastIndexOf((StrMatcher) strMatcher_TrimMatcher0);
      String string2 = "S-sp$0pv<}E&GD&9Fnj";
      StrBuilder strBuilder3 = strBuilder0.replace(0, 0, "S-sp$0pv<}E&GD&9Fnj");
      int int3 = 1;
      // Undeclared exception!
      try { 
        strBuilder1.insert(2193, 1);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2193
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      int int0 = (-1872);
      StrBuilder strBuilder0 = new StrBuilder((-1872));
      String string0 = null;
      char[] charArray0 = new char[4];
      charArray0[0] = ' ';
      charArray0[1] = 'x';
      charArray0[2] = '1';
      charArray0[3] = '{';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrBuilder strBuilder2 = strBuilder1.replaceFirst(strMatcher0, "0g");
      StrBuilder strBuilder3 = strBuilder2.deleteFirst('r');
      StrBuilder strBuilder4 = strBuilder2.deleteAll("0g");
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrBuilder strBuilder5 = strBuilder0.trim();
      StrBuilder strBuilder6 = strBuilder5.append((Object) strMatcher_NoMatcher0);
      int int1 = 1505;
      // Undeclared exception!
      try { 
        strBuilder1.replace((StrMatcher) strMatcher_NoMatcher0, "})}|-aN ", 1505, (-1872), (-1872));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }
}
