/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 29 01:48:55 GMT 2020
 */

package org.apache.commons.lang.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.Writer;
import java.nio.CharBuffer;
import java.nio.ReadOnlyBufferException;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.NoSuchElementException;
import java.util.stream.Stream;
import org.apache.commons.lang.text.StrBuilder;
import org.apache.commons.lang.text.StrMatcher;
import org.apache.commons.lang.text.StrTokenizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StrBuilder_ESTest extends StrBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((-2423));
      StrMatcher strMatcher0 = null;
      StrBuilder strBuilder2 = strBuilder0.deleteAll((StrMatcher) null);
      String string0 = "E]~6T\"JHd";
      char char0 = 'n';
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadLeft((Object) "E]~6T\"JHd", 1, 'n');
      StrBuilder strBuilder4 = strBuilder3.append(",ktF", 1, 1);
      int int0 = 97;
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight(97, 1, '#');
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.endsWith("");
      StrBuilder strBuilder1 = strBuilder0.append("");
      String string0 = strBuilder0.getNewLineText();
      StrBuilder strBuilder2 = strBuilder0.append(5L);
      StrBuilder strBuilder3 = strBuilder1.appendWithSeparators((Collection) null, (String) null);
      int int0 = 6;
      // Undeclared exception!
      try { 
        strBuilder3.validateIndex(6);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 6
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("NO)/R=H#LJ");
      StrBuilder strBuilder1 = strBuilder0.appendPadding((-466), 'G');
      StrBuilder strBuilder2 = strBuilder0.ensureCapacity(978);
      int int0 = strBuilder0.lastIndexOf(';');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrBuilder strBuilder3 = strBuilder2.deleteFirst(strMatcher0);
      StrBuilder strBuilder4 = strBuilder3.appendFixedWidthPadLeft((Object) strBuilder1, (-466), ';');
      Writer writer0 = strBuilder3.asWriter();
      StrBuilder strBuilder5 = strBuilder3.replaceFirst("NO)/R=H#LJ", "NO)/R=H#LJ");
      // Undeclared exception!
      try { 
        strBuilder3.append("NO)/R=H#LJ", (-466), (-466));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.endsWith((String) null);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(32);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst((String) null);
      boolean boolean0 = strBuilder0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      int int0 = 2;
      StrBuilder strBuilder0 = new StrBuilder(2);
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('<');
      String string0 = "";
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher("");
      int int1 = 2454;
      int int2 = strBuilder0.indexOf(strMatcher0, 2454);
      StrMatcher strMatcher3 = StrMatcher.charSetMatcher((char[]) null);
      int int3 = strBuilder0.indexOf(strMatcher2, 2454);
      strBuilder0.size = 2;
      int int4 = strBuilder0.lastIndexOf('i', 2);
      StrBuilder strBuilder1 = strBuilder0.insert(2, (double) (-1));
      StrBuilder strBuilder2 = strBuilder1.appendPadding((-3566), 'n');
      int int5 = 304;
      // Undeclared exception!
      try { 
        strBuilder1.substring(304);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder2 = strBuilder1.minimizeCapacity();
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadLeft(0, 2164, '-');
      StrBuilder strBuilder4 = strBuilder3.deleteFirst('N');
      String string0 = strBuilder1.substring(2164);
      boolean boolean0 = strBuilder2.isEmpty();
      StrMatcher strMatcher0 = StrMatcher.charMatcher('-');
      StrBuilder strBuilder5 = strBuilder2.replace(strMatcher0, "end < start", 5, 34, (-1358));
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder();
      boolean boolean0 = strBuilder0.equals(strBuilder1);
      Object[] objectArray0 = new Object[0];
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators(objectArray0, ">foUc|1.uj@,|");
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("'p_Bvwl${(");
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder2 = strBuilder1.appendNewLine();
      boolean boolean0 = strBuilder0.contains('/');
      StrBuilder strBuilder3 = strBuilder0.append((Object) "'p_Bvwl${(");
      StringBuffer stringBuffer0 = new StringBuffer();
      int int0 = 34;
      // Undeclared exception!
      try { 
        strBuilder3.append(strBuilder0, 34, 34);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) reader0, 117, 'D');
      String string0 = strBuilder0.rightString((-609));
      StrBuilder strBuilder2 = strBuilder0.replaceAll("$", "$");
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      Reader reader0 = strBuilder0.asReader();
      boolean boolean0 = strBuilder0.contains('8');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.previousToken();
      boolean boolean1 = strBuilder_StrBuilderTokenizer0.hasPrevious();
      strBuilder_StrBuilderWriter0.write((-1));
      String string1 = strBuilder_StrBuilderTokenizer0.nextToken();
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) null, 0, 2);
      strBuilder_StrBuilderWriter0.flush();
      boolean boolean2 = strBuilder0.endsWith("");
      int int0 = StrBuilder.CAPACITY;
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder_StrBuilderWriter0;
      objectArray0[2] = (Object) strBuilder1;
      StrBuilder strBuilder2 = new StrBuilder((String) null);
      StrBuilder strBuilder3 = strBuilder0.appendNull();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean3 = strBuilder_StrBuilderReader0.markSupported();
      int int1 = strBuilder2.indexOf('8', 31);
      boolean boolean4 = strBuilder0.isEmpty();
      StrBuilder strBuilder4 = strBuilder2.append('8');
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst((String) null, "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder0.getChars(3646, 3646, charArray0, 3646);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3646
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder0.rightString(3260);
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      char char0 = '\'';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(object0, 0, '\'');
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      int int0 = strBuilder1.lastIndexOf(strMatcher0);
      Reader reader0 = strBuilder1.asReader();
      int int1 = strBuilder1.indexOf("", 180);
      int int2 = strBuilder0.indexOf("");
      StrBuilder strBuilder2 = strBuilder1.replaceFirst('u', 'u');
      char[] charArray0 = new char[5];
      charArray0[0] = 'u';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.remove();
      } catch(UnsupportedOperationException e) {
         //
         // remove() is unsupported
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Et~8/%au");
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("");
      StrMatcher strMatcher1 = StrMatcher.charMatcher('c');
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 21);
      boolean boolean0 = strBuilder0.contains('');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      String string0 = "Index: ";
      StrBuilder strBuilder0 = new StrBuilder("Index: ");
      strBuilder0.size = (-21);
      char[] charArray0 = new char[2];
      charArray0[0] = '>';
      charArray0[1] = '5';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0);
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3315);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(object0, 3315, 'F');
      StrBuilder strBuilder2 = strBuilder0.deleteFirst('e');
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "org.apache.commons.langtext.StrBuilder$StruilderReader";
      char char0 = 'b';
      StrBuilder strBuilder1 = strBuilder0.deleteAll('b');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      StrBuilder strBuilder2 = strBuilder1.deleteAll("y *V1peM$s8!n'e,^o");
      StrTokenizer strTokenizer0 = strBuilder2.asTokenizer();
      strBuilder1.size = (-1568);
      long long0 = strBuilder_StrBuilderReader0.skip(1L);
      StrBuilder strBuilder3 = strBuilder1.ensureCapacity((-1));
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt((-1149), ':');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1149
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2483);
      int int0 = strBuilder0.capacity();
      String string0 = "";
      StrBuilder strBuilder1 = strBuilder0.replaceAll("", "");
      String string1 = "";
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("");
      StrBuilder strBuilder2 = strBuilder0.replaceFirst(strMatcher0, "");
      StrBuilder strBuilder3 = strBuilder0.reverse();
      int int1 = strBuilder0.length();
      int int2 = (-532);
      // Undeclared exception!
      try { 
        strBuilder3.insert((-532), 2483);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -532
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((-2423));
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance();
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Iterator) strTokenizer0, "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      StrBuilder strBuilder3 = strBuilder0.deleteAll((StrMatcher) null);
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadLeft((Object) "E]~6T\"JHd", 1, 'n');
      StrBuilder strBuilder5 = strBuilder4.append(",ktF", 1, 1);
      StrBuilder strBuilder6 = strBuilder0.appendFixedWidthPadRight(97, 108, '#');
      StrBuilder strBuilder7 = strBuilder4.replaceFirst((StrMatcher) null, "E]~6T\"JHd");
      int int0 = strBuilder4.indexOf((StrMatcher) null, 0);
      StrBuilder strBuilder8 = strBuilder1.appendFixedWidthPadLeft((Object) strBuilder0, 97, 'n');
      boolean boolean0 = strBuilder6.contains("");
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("x+jMUB\"hXg");
      char[] charArray0 = new char[2];
      charArray0[0] = 'f';
      StrBuilder strBuilder1 = strBuilder0.deleteAll("x+jMUB\"hXg");
      String string0 = strBuilder0.rightString(3026);
      charArray0[1] = ',';
      // Undeclared exception!
      try { 
        strBuilder0.getChars((-3563), 1311, charArray0, 2194);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3563
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(114);
      StrBuilder strBuilder1 = strBuilder0.append((float) 114);
      char[] charArray0 = new char[0];
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      StrBuilder strBuilder2 = strBuilder1.replaceAll(strMatcher0, "8pKqaA &/:*MYS");
      boolean boolean0 = strBuilder2.contains(strMatcher1);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "");
      int int0 = strBuilder_StrBuilderReader0.read(charBuffer0);
      long long0 = strBuilder_StrBuilderReader0.skip(1721L);
      StrBuilder strBuilder3 = strBuilder1.deleteFirst("Ut]ZK@Tk");
      strBuilder_StrBuilderReader0.mark(1771);
      strBuilder_StrBuilderReader0.close();
      int int1 = strBuilder1.hashCode();
      boolean boolean1 = strBuilder_StrBuilderReader0.ready();
      char[] charArray1 = new char[0];
      StrBuilder strBuilder4 = strBuilder1.append(charArray1, 0, 0);
      String string0 = strBuilder4.leftString(528);
      boolean boolean2 = strBuilder1.contains('Y');
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((StringBuffer) null);
      StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
      StrBuilder strBuilder3 = strBuilder2.deleteFirst("");
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      int int0 = strBuilder3.lastIndexOf(strMatcher0);
      boolean boolean0 = strBuilder1.equals((Object) "");
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Index: ");
      strBuilder0.size = (-4);
      int int0 = strBuilder0.length();
      int int1 = strBuilder0.lastIndexOf("Index: ");
      StrBuilder strBuilder1 = strBuilder0.deleteAll('p');
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = new StrBuilder();
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      StrBuilder strBuilder2 = strBuilder1.append(0L);
      StrBuilder strBuilder3 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder3.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(" q:~HcL");
      StrBuilder strBuilder1 = new StrBuilder(1976);
      StrBuilder strBuilder2 = strBuilder1.replaceFirst(" q:~HcL", "w-crRc q+_SpBK7t1/:");
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder1);
      String string0 = strBuilder0.rightString(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      StrBuilder strBuilder4 = strBuilder3.replaceFirst(strMatcher0, "RFt'V<bPw");
      boolean boolean0 = strBuilder0.endsWith(" q:~HcL");
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity((-1269));
      String string0 = strBuilder0.substring(0, 0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      // Undeclared exception!
      try { 
        CharBuffer.wrap((CharSequence) "", (-1269), 0);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("![ANhBjm|0Nw\"");
      String string0 = strBuilder0.getNewLineText();
      int int0 = 3755;
      // Undeclared exception!
      try { 
        strBuilder0.replace(3755, (-863), "line.separator");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      Reader reader0 = strBuilder0.asReader();
      boolean boolean0 = strBuilder0.contains('7');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.previousToken();
      boolean boolean1 = strBuilder_StrBuilderTokenizer0.hasPrevious();
      strBuilder_StrBuilderWriter0.write((-1));
      String string1 = strBuilder_StrBuilderTokenizer0.nextToken();
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) null, 0, 2);
      strBuilder_StrBuilderWriter0.flush();
      boolean boolean2 = strBuilder0.endsWith("Invalid offset: ");
      int int0 = strBuilder1.validateRange(0, 31);
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder_StrBuilderWriter0;
      objectArray0[2] = (Object) strBuilder1;
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators(objectArray0, "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      StrBuilder strBuilder3 = strBuilder0.appendNull();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean3 = strBuilder_StrBuilderReader0.markSupported();
      int int1 = strBuilder2.indexOf('7', 31);
      boolean boolean4 = strBuilder0.isEmpty();
      StrBuilder strBuilder4 = strBuilder2.append('7');
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 5;
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(5, 0, 'M');
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      char[] charArray0 = new char[7];
      charArray0[0] = 'M';
      charArray0[1] = 'M';
      charArray0[2] = '+';
      charArray0[3] = 'M';
      charArray0[4] = 'M';
      charArray0[5] = 'K';
      charArray0[6] = 'M';
      StrBuilder strBuilder2 = strBuilder1.insert(0, charArray0, 5, 0);
      StrBuilder strBuilder3 = strBuilder0.deleteFirst((StrMatcher) strMatcher_TrimMatcher0);
      StringBuffer stringBuffer0 = strBuilder3.toStringBuffer();
      // Undeclared exception!
      try { 
        strBuilder0.substring((int) 'M', (int) 'M');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.startsWith("");
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder1.append(1.0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      List list0 = strBuilder_StrBuilderTokenizer0.getTokenList();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.previous();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2429);
      String string0 = strBuilder0.getNullText();
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      char[] charArray0 = new char[1];
      charArray0[0] = 'A';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_TrimMatcher0, 2429);
      StrBuilder strBuilder1 = strBuilder0.delete(0, 57);
      StrBuilder strBuilder2 = strBuilder1.deleteAll(strMatcher0);
      StrBuilder strBuilder3 = strBuilder1.append(true);
      StrBuilder strBuilder4 = strBuilder3.append(true);
      int int1 = strBuilder1.lastIndexOf("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      StrBuilder strBuilder5 = strBuilder1.append("");
      StrBuilder strBuilder6 = strBuilder1.appendNull();
      StrBuilder strBuilder7 = strBuilder1.append('A');
      StrBuilder strBuilder8 = strBuilder7.deleteFirst(strMatcher0);
      Writer writer0 = strBuilder5.asWriter();
      int int2 = strBuilder6.indexOf('}');
      StrBuilder strBuilder9 = strBuilder5.append(0);
      int int3 = strBuilder2.lastIndexOf((StrMatcher) strMatcher_TrimMatcher0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.substring(0);
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "");
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      int int0 = strBuilder1.indexOf('\\');
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("PSsmQx%ek");
      StrBuilder strBuilder1 = strBuilder0.replaceAll('j', 'W');
      StrBuilder strBuilder2 = strBuilder1.append(961.21014F);
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher((char[]) null);
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      boolean boolean1 = strBuilder0.isEmpty();
      boolean boolean2 = strBuilder1.equals(strBuilder0);
      StrMatcher strMatcher2 = StrMatcher.noneMatcher();
      char[] charArray0 = new char[4];
      charArray0[0] = '|';
      charArray0[1] = 'W';
      charArray0[2] = 'j';
      charArray0[3] = 'j';
      StrMatcher strMatcher3 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder2.lastIndexOf(strMatcher2);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1), (-712));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.clear();
      int int0 = 3161;
      char char0 = '_';
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft(3161, 3161, '_');
      StrTokenizer strTokenizer0 = strBuilder2.asTokenizer();
      StrBuilder strBuilder3 = strBuilder0.setNullText("");
      int int1 = (-63);
      // Undeclared exception!
      try { 
        strBuilder3.toCharArray(3161, (-63));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity((-846));
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.insert(0, 'b');
      StrBuilder strBuilder2 = strBuilder0.replaceAll((StrMatcher) null, "_1eq-V3LnnZh");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      char[] charArray0 = new char[6];
      charArray0[0] = 'b';
      charArray0[1] = 'b';
      charArray0[2] = 'u';
      charArray0[3] = 'b';
      charArray0[4] = 'b';
      charArray0[5] = 'b';
      strBuilder0.buffer = charArray0;
      char[] charArray1 = new char[6];
      charArray1[0] = 'b';
      charArray1[1] = 'b';
      charArray1[2] = 'b';
      charArray1[3] = 'b';
      charArray1[4] = 'b';
      charArray1[5] = 'b';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray1, 41, 0);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder2 = strBuilder1.deleteFirst('%');
      int int0 = strBuilder1.indexOf("", 9);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      char[] charArray0 = new char[8];
      charArray0[0] = '%';
      charArray0[1] = '%';
      charArray0[2] = '%';
      charArray0[3] = '%';
      charArray0[4] = '%';
      charArray0[5] = '%';
      charArray0[6] = '%';
      charArray0[7] = '%';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 1163, 3260);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      int int0 = 4178;
      StrBuilder strBuilder0 = new StrBuilder(4178);
      char char0 = 'm';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(4178, 4362, 'm');
      StrBuilder strBuilder2 = strBuilder1.deleteAll('m');
      StrBuilder strBuilder3 = strBuilder0.append(false);
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      int int1 = strBuilder3.indexOf((StrMatcher) strMatcher_TrimMatcher0, 4362);
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex(4178);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 4178
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      String string0 = null;
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt((-527), '%');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -527
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("qB9,X>Y3oB*_I");
      int int0 = strBuilder0.lastIndexOf("qB9,X>Y3oB*_I");
      StrBuilder strBuilder1 = strBuilder0.insert(0, (float) 0);
      char[] charArray0 = new char[8];
      charArray0[0] = 'T';
      charArray0[1] = 'X';
      charArray0[2] = 'l';
      charArray0[3] = 'R';
      charArray0[4] = '}';
      charArray0[5] = '*';
      charArray0[6] = ',';
      charArray0[7] = 'k';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      // Undeclared exception!
      try { 
        strBuilder0.replace((StrMatcher) strMatcher_CharSetMatcher0, ">O", (-1), (-1), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[9];
      StrMatcher strMatcher0 = StrMatcher.charMatcher('K');
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("S4/`[>oJ`}-;%b");
      int int0 = strBuilder0.indexOf(strMatcher0, (-2201));
      charArray0[0] = 'I';
      charArray0[1] = '.';
      charArray0[2] = '*';
      charArray0[3] = '%';
      charArray0[4] = '3';
      charArray0[5] = '+';
      charArray0[6] = '3';
      charArray0[7] = '}';
      charArray0[8] = '2';
      char[] charArray1 = strBuilder0.getChars(charArray0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("org.apache.commons.lang.text.StrMatcher$TrimMatcher");
      strBuilder_StrBuilderWriter0.flush();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int1 = strBuilder_StrBuilderReader0.read();
      // Undeclared exception!
      try { 
        strBuilder0.insert(1433, (-1123.470444043));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1433
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1));
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder2 = strBuilder0.deleteFirst("i80K)i>N");
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(684);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[9];
      charArray0[0] = '}';
      charArray0[1] = '_';
      charArray0[2] = '_';
      charArray0[3] = 'K';
      charArray0[4] = '9';
      StringBuffer stringBuffer0 = new StringBuffer("java.awt.fonts");
      StringBuffer stringBuffer1 = new StringBuffer(stringBuffer0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      StringBuffer stringBuffer2 = stringBuffer1.append(object0);
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) stringBuffer1);
      charArray0[5] = 'W';
      charArray0[6] = 'G';
      charArray0[7] = 'm';
      charArray0[8] = '#';
      strBuilder_StrBuilderWriter0.write(charArray0, 1, 5);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder("length must be valid");
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight((Object) strBuilder1, (-130), '\"');
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1971));
      String string0 = strBuilder0.toString();
      StrBuilder strBuilder1 = new StrBuilder("pCE*j&q>");
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      StrBuilder strBuilder3 = strBuilder1.append(strBuilder0);
      Object[] objectArray0 = new Object[0];
      StrBuilder strBuilder4 = strBuilder2.appendWithSeparators(objectArray0, "");
      String string1 = strBuilder0.substring(1);
      StrBuilder strBuilder5 = strBuilder4.deleteAll('h');
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("Invalid offset: ");
      StrBuilder strBuilder6 = strBuilder3.deleteAll(strMatcher0);
      StrBuilder strBuilder7 = strBuilder2.appendFixedWidthPadRight((-210), 0, '4');
      StrBuilder strBuilder8 = strBuilder7.append('4');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      strBuilder_StrBuilderReader0.mark(0);
      StrBuilder strBuilder9 = strBuilder6.deleteFirst(strMatcher0);
      String string2 = strBuilder7.leftString(0);
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder10 = strBuilder7.append(stringBuffer0, 0, 0);
      // Undeclared exception!
      try { 
        strBuilder1.charAt((-210));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -210
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = strBuilder0.toCharArray();
      StrBuilder strBuilder1 = new StrBuilder(0);
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("', has a length less than 2");
      // Undeclared exception!
      try { 
        strBuilder0.equalsIgnoreCase((StrBuilder) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(">ly;");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      char[] charArray0 = new char[9];
      charArray0[0] = 'i';
      StrBuilder strBuilder2 = strBuilder1.insert(0, false);
      long long0 = strBuilder_StrBuilderReader0.skip(1L);
      charArray0[1] = 'k';
      charArray0[2] = '*';
      long long1 = strBuilder_StrBuilderReader0.skip((-1L));
      charArray0[3] = 'o';
      charArray0[4] = '\'';
      char char0 = '\\';
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) ">ly;");
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charBuffer0);
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.StringCharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(114);
      StrBuilder strBuilder1 = strBuilder0.append((float) 114);
      char[] charArray0 = new char[0];
      int int0 = 1771;
      // Undeclared exception!
      try { 
        strBuilder1.getChars(0, 0, charArray0, 1771);
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      String string0 = "UZU0N;roMMZjL,";
      StrBuilder strBuilder0 = new StrBuilder("UZU0N;roMMZjL,");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('#');
      int int0 = 1208;
      char[] charArray0 = new char[2];
      charArray0[0] = '#';
      charArray0[1] = '#';
      strBuilder0.buffer = charArray0;
      StrBuilder strBuilder2 = strBuilder0.deleteAll("UZU0N;roMMZjL,");
      // Undeclared exception!
      try { 
        strBuilder0.insert(1208, '+');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1208
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(108);
      char[] charArray0 = new char[4];
      charArray0[0] = '_';
      charArray0[1] = '>';
      charArray0[2] = '*';
      charArray0[3] = 'j';
      int int0 = (-821);
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, (-821), 5);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 5
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("", "ccgM#|;)-yeG");
      int int0 = 0;
      int int1 = 1310;
      char[] charArray0 = strBuilder0.toCharArray(0, 1310);
      StrBuilder strBuilder2 = strBuilder1.append(true);
      StrBuilder strBuilder3 = strBuilder2.deleteAll((StrMatcher) null);
      StrBuilder strBuilder4 = strBuilder0.append('&');
      // Undeclared exception!
      try { 
        strBuilder0.insert(1310, true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1310
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      int int0 = 0;
      StringBuffer stringBuffer0 = new StringBuffer(0);
      StringBuffer stringBuffer1 = stringBuffer0.append((double) 0);
      stringBuffer0.ensureCapacity(0);
      StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) stringBuffer1);
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0, 0, 0);
      StrBuilder strBuilder2 = strBuilder1.trim();
      StrBuilder strBuilder3 = strBuilder1.setLength(0);
      String string0 = strBuilder1.toString();
      char char0 = 'Z';
      // Undeclared exception!
      try { 
        strBuilder2.insert(758, 'Z');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 758
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.midString((-1979), 39);
      int int0 = 2653;
      // Undeclared exception!
      try { 
        strBuilder0.charAt(2653);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2653
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[8];
      charArray0[0] = 'U';
      charArray0[1] = 'V';
      charArray0[2] = 'Q';
      charArray0[3] = 'z';
      charArray0[4] = 'h';
      charArray0[5] = '[';
      charArray0[6] = '(';
      charArray0[7] = 'T';
      StrBuilder strBuilder1 = strBuilder0.insert(0, charArray0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      String string0 = null;
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      // Undeclared exception!
      try { 
        strBuilder0.setLength((-3345));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3345
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("9SgTv%Q'^yy");
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('9');
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("9SgTv%Q'^yy");
      int int0 = 2;
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("");
      char char0 = strBuilder0.charAt(2);
      int int1 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_CharMatcher0, 2);
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      // Undeclared exception!
      try { 
        strBuilder1.replace(0, (-3262), "4.0");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      int int0 = strBuilder_StrBuilderReader0.read();
      StrBuilder strBuilder1 = strBuilder0.append(true);
      // Undeclared exception!
      try { 
        strBuilder1.charAt(1311);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1311
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 5;
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(5, 0, 'M');
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder2 = strBuilder0.deleteFirst((StrMatcher) strMatcher_TrimMatcher0);
      StringBuffer stringBuffer0 = strBuilder2.toStringBuffer();
      // Undeclared exception!
      try { 
        strBuilder0.substring(274, 274);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("*EM:b!`aN^;]9uq@)n");
      int int0 = strBuilder0.size();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      strBuilder_StrBuilderReader0.reset();
      char char0 = '`';
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('`', '`');
      StrBuilder strBuilder2 = strBuilder1.replace((StrMatcher) null, "*EM:b!`aN^;]9uq@)n", 0, 18, 0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[3];
      charArray0[0] = '`';
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "*EM:b!`aN^;]9uq@)n");
      StrBuilder strBuilder3 = strBuilder2.append(stringBuffer0, 18, 0);
      strBuilder_StrBuilderReader0.mark(0);
      charArray0[1] = '`';
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(18);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 18
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "");
      int int0 = 1608;
      int int1 = strBuilder0.lastIndexOf('f', 1608);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[1];
      charArray0[0] = 'f';
      // Undeclared exception!
      try { 
        strBuilder0.replace(1608, (-1), "Invalid offset: ");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StringBuffer stringBuffer1 = strBuilder0.toStringBuffer();
      StringBuffer stringBuffer2 = strBuilder0.toStringBuffer();
      int int0 = 1341;
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray(1341, 1341);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(581);
      String string0 = strBuilder0.toString();
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("");
      int int0 = strBuilder0.lastIndexOf('r', 611);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 2653;
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray(2653, 2653);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("zW-h5$L46WS<[|kS1t");
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(3);
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) strBuilder_StrBuilderReader0;
      objectArray0[3] = (Object) "zW-h5$L46WS<[|kS1t";
      objectArray0[4] = (Object) strTokenizer0;
      strBuilder_StrBuilderReader0.reset();
      objectArray0[5] = (Object) strBuilder0;
      Object object0 = new Object();
      objectArray0[6] = object0;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "4K zQ%");
      String string0 = strBuilder0.rightString(3);
      int int0 = strBuilder1.indexOf('C', 1);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("'p_Bvwl${(");
      boolean boolean0 = strBuilder0.contains('/');
      StrBuilder strBuilder1 = strBuilder0.append((Object) "'p_Bvwl${(");
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 34, 34);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.append(1.0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      strBuilder_StrBuilderReader0.reset();
      StrBuilder strBuilder2 = new StrBuilder((-1));
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder2);
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("org.apache.commons.lang.text.StrMatcher");
      Writer writer0 = strBuilder1.asWriter();
      StrBuilder strBuilder4 = strBuilder3.deleteAll(strMatcher0);
      StrBuilder strBuilder5 = strBuilder0.append(true);
      StrBuilder strBuilder6 = strBuilder5.append((Object) strBuilder1);
      int int0 = strBuilder0.lastIndexOf('g', 0);
      strBuilder2.size = (-1);
      StrBuilder strBuilder7 = strBuilder3.setCharAt(0, '[');
      StrBuilder strBuilder8 = strBuilder2.appendFixedWidthPadLeft((-1), 0, '');
      int int1 = strBuilder3.capacity();
      int int2 = strBuilder6.length();
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      int int0 = (-37);
      StrBuilder strBuilder0 = new StrBuilder((-37));
      char char0 = '_';
      Object object0 = new Object();
      StrBuilder strBuilder1 = strBuilder0.append(object0);
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, (-500), (-37));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[4];
      charArray0[0] = ';';
      charArray0[1] = '8';
      charArray0[2] = '!';
      long long0 = strBuilder_StrBuilderReader0.skip(0L);
      charArray0[3] = 's';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = strBuilder_StrBuilderReader0.read(charBuffer0);
      strBuilder_StrBuilderReader0.mark((-65));
      int int1 = strBuilder0.lastIndexOf((String) null, 0);
      strBuilder_StrBuilderReader0.mark(1377);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-248), (long) (-248));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -248
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Reader reader0 = strBuilder0.asReader();
      int int0 = (-3670);
      String string0 = strBuilder0.rightString((-3670));
      StrBuilder strBuilder1 = strBuilder0.replaceAll((String) null, "end < start");
      StrBuilder strBuilder2 = strBuilder1.appendNewLine();
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      int int1 = strBuilder2.lastIndexOf(strMatcher0);
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        strBuilder0.insert(34, false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 34
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("sc|j(wHvO]z1v$B");
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("sc|j(wHvO]z1v$B");
      int int0 = strBuilder0.lastIndexOf(strMatcher0, (-1201));
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      String string0 = strBuilder0.rightString((-1882));
      StrTokenizer strTokenizer1 = strBuilder0.asTokenizer();
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('w');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      StrBuilder strBuilder2 = strBuilder1.replace(strMatcher0, "", 0, 4495, (-3560));
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-396));
      String string0 = "";
      StrBuilder strBuilder1 = strBuilder0.append(')');
      // Undeclared exception!
      try { 
        strBuilder0.validateRange(0, (-396));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('<');
      char[] charArray0 = strBuilder0.toCharArray();
      int int0 = 2;
      StrBuilder strBuilder2 = strBuilder1.appendPadding(2, '<');
      StrMatcher strMatcher0 = StrMatcher.charMatcher('8');
      int int1 = strBuilder2.lastIndexOf(strMatcher0, 2);
      StrMatcher strMatcher1 = StrMatcher.quoteMatcher();
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher(charArray0);
      int int2 = strBuilder1.indexOf(strMatcher1, 0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      // Undeclared exception!
      try { 
        CharBuffer.wrap(charArray0, (-1), 2);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-4198));
      StrBuilder strBuilder1 = strBuilder0.append((StringBuffer) null);
      StrBuilder strBuilder2 = strBuilder0.replaceAll("H$B44{hOmpa*D]", "H$B44{hOmpa*D]");
      boolean boolean0 = strBuilder2.isEmpty();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean1 = strBuilder_StrBuilderReader0.ready();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators((Collection) linkedList0, "H$B44{hOmpa*D]");
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      int int0 = 9;
      StrBuilder strBuilder0 = new StrBuilder(9);
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      char[] charArray0 = new char[7];
      charArray0[0] = '\"';
      charArray0[1] = 'p';
      charArray0[2] = 'S';
      charArray0[3] = 'd';
      charArray0[4] = 'I';
      charArray0[5] = '`';
      charArray0[6] = 'M';
      int int1 = strMatcher0.isMatch(charArray0, 0, 0, (-395));
      int int2 = strBuilder0.lastIndexOf(strMatcher0);
      char[] charArray1 = new char[5];
      charArray1[0] = '8';
      charArray1[1] = '@';
      charArray1[2] = '9';
      char char0 = '.';
      // Undeclared exception!
      try { 
        strBuilder0.insert(1645, charArray1, 102, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1645
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2);
      char[] charArray0 = new char[9];
      charArray0[0] = '';
      charArray0[1] = 'd';
      charArray0[2] = 'S';
      charArray0[3] = 'F';
      charArray0[4] = ')';
      charArray0[5] = '+';
      charArray0[6] = 'K';
      charArray0[7] = 'v';
      charArray0[8] = 'i';
      // Undeclared exception!
      try { 
        strBuilder0.insert(1796, charArray0, 1393, 1219);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1796
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      int int0 = (-1);
      StrBuilder strBuilder0 = new StrBuilder((-1));
      char[] charArray0 = new char[2];
      charArray0[0] = 'o';
      charArray0[1] = 'n';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      StrBuilder strBuilder3 = strBuilder0.appendWithSeparators((Collection) linkedList0, "UKzt&-#nT");
      StrBuilder strBuilder4 = strBuilder3.appendNewLine();
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrBuilder strBuilder5 = strBuilder2.append((long) (-1));
      // Undeclared exception!
      try { 
        strBuilder4.replace(strMatcher0, "UKzt&-#nT", 142, 142, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder strBuilder1 = strBuilder0.reverse();
      int int0 = strBuilder0.size();
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      int int1 = 0;
      int int2 = strBuilder1.indexOf(strMatcher0, 0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((-1));
      char[] charArray0 = new char[0];
      strBuilder_StrBuilderWriter0.write(charArray0);
      strBuilder_StrBuilderWriter0.write(charArray0);
      StrBuilder strBuilder2 = strBuilder1.replaceFirst('-', '-');
      Writer writer1 = strBuilder0.asWriter();
      StrBuilder strBuilder3 = strBuilder1.clear();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      // Undeclared exception!
      try { 
        strBuilder3.append("f6^7f Wu~*5grrD-", (-1), 2);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.leftString(162);
      int int0 = 2502;
      int int1 = (-3421);
      // Undeclared exception!
      try { 
        strBuilder0.substring(2502, (-3421));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(31);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[6];
      charArray0[0] = 'N';
      charArray0[1] = 'u';
      charArray0[2] = '(';
      charArray0[3] = '=';
      charArray0[4] = 'o';
      charArray0[5] = '^';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0);
      long long0 = strBuilder_StrBuilderReader0.skip(1L);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(31, 31, 'I');
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) null;
      Object object0 = new Object();
      objectArray0[1] = object0;
      objectArray0[2] = (Object) null;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "");
      boolean boolean0 = strBuilder0.isEmpty();
      int int0 = strBuilder0.indexOf((String) null);
      StrBuilder strBuilder2 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      char[] charArray0 = new char[8];
      charArray0[0] = '\"';
      charArray0[1] = 'W';
      charArray0[2] = '+';
      charArray0[3] = '2';
      charArray0[4] = 'M';
      charArray0[5] = 'R';
      charArray0[6] = '\"';
      charArray0[7] = '?';
      strBuilder_StrBuilderWriter0.write(charArray0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("aHN8HjW<\"KXYj");
      StrBuilder strBuilder1 = strBuilder0.deleteAll('I');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("aHN8HjW<\"KXYj");
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 1);
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) strMatcher1;
      objectArray0[1] = (Object) "aHN8HjW<\"KXYj";
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators(objectArray0, "aHN8HjW<\"KXYj");
      StrBuilder strBuilder3 = strBuilder0.deleteCharAt(0);
      String string0 = strBuilder1.toString();
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[8];
      charArray0[0] = 'H';
      charArray0[1] = ')';
      charArray0[2] = 'Y';
      charArray0[3] = 'Z';
      charArray0[4] = '.';
      charArray0[5] = ',';
      charArray0[6] = ',';
      charArray0[7] = '1';
      strBuilder_StrBuilderWriter0.write(charArray0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-113);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-113), 0.0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -113
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("");
      StrBuilder strBuilder1 = strBuilder0.deleteAll((StrMatcher) strMatcher_StringMatcher0);
      String string0 = strBuilder0.leftString(0);
      StrBuilder strBuilder2 = strBuilder0.replaceAll("", "");
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder3 = strBuilder2.append(stringBuffer0);
      // Undeclared exception!
      try { 
        strBuilder2.insert(32, (float) 32);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[7];
      charArray0[0] = '&';
      charArray0[1] = 'G';
      charArray0[2] = 'M';
      charArray0[3] = 'N';
      charArray0[4] = '0';
      charArray0[5] = '{';
      charArray0[6] = '/';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, (-156), 0);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(117);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[8];
      charArray0[0] = '^';
      charArray0[1] = 'L';
      charArray0[2] = 's';
      charArray0[3] = '8';
      charArray0[4] = 'H';
      charArray0[5] = 'X';
      charArray0[6] = '(';
      charArray0[7] = 'C';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 117, (-1916));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(101);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("user.country");
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher((String) null);
      int int0 = strBuilder0.indexOf(strMatcher0);
      char[] charArray0 = new char[1];
      charArray0[0] = 'v';
      int int1 = strMatcher1.isMatch(charArray0, 101, 0, 0);
      StrBuilder strBuilder1 = strBuilder0.trim();
      int int2 = strBuilder0.lastIndexOf(strMatcher1);
      StrBuilder strBuilder2 = strBuilder1.appendNewLine();
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      strBuilder_StrBuilderReader0.close();
      StrBuilder strBuilder1 = strBuilder0.setNullText("0");
      char char0 = '!';
      StrBuilder strBuilder2 = strBuilder0.appendPadding((-279), '!');
      StringBuffer stringBuffer0 = new StringBuffer();
      StringBuffer stringBuffer1 = new StringBuffer(stringBuffer0);
      // Undeclared exception!
      try { 
        stringBuffer1.insert((-279), "h");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -279
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[1];
      charArray0[0] = '0';
      strBuilder0.buffer = charArray0;
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[9];
      charArray0[0] = 'E';
      charArray0[1] = 'v';
      charArray0[2] = '7';
      charArray0[3] = '0';
      charArray0[4] = '<';
      charArray0[5] = 'Y';
      charArray0[6] = 'M';
      charArray0[7] = ']';
      charArray0[8] = '8';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0, 0, 0);
      strBuilder_StrBuilderReader0.mark((-1713));
      StringBuffer stringBuffer0 = new StringBuffer();
      StringBuffer stringBuffer1 = new StringBuffer(stringBuffer0);
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer1);
      StringBuffer stringBuffer2 = stringBuffer0.append((-1713));
      StrBuilder strBuilder2 = strBuilder1.replaceAll("", "Invalid length: ");
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(428);
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      String string0 = strBuilder0.leftString((-910));
      StrBuilder strBuilder2 = strBuilder1.appendPadding((-910), 'D');
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      int int0 = 32;
      StrBuilder strBuilder0 = new StrBuilder(32);
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      int int1 = strBuilder0.lastIndexOf(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.append(32);
      char[] charArray0 = new char[4];
      charArray0[0] = 'h';
      charArray0[1] = '!';
      charArray0[2] = 'p';
      charArray0[3] = '\'';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StringBuffer stringBuffer0 = new StringBuffer();
      char[] charArray1 = new char[6];
      charArray1[0] = 'g';
      StringBuffer stringBuffer1 = new StringBuffer("");
      StringBuffer stringBuffer2 = stringBuffer0.append(stringBuffer1);
      charArray1[1] = '~';
      charArray1[2] = '9';
      charArray1[3] = '\"';
      charArray1[4] = 'U';
      charArray1[5] = 'l';
      StrBuilder strBuilder2 = strBuilder1.append(charArray1);
      int int2 = 3599;
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 44, 3599);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder0);
      StrBuilder strBuilder1 = strBuilder0.append(0L);
      StrBuilder strBuilder2 = strBuilder1.replaceAll("", (String) null);
      StrBuilder strBuilder3 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder3.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("");
      strBuilder_StrBuilderWriter0.close();
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1195));
      StrBuilder strBuilder1 = strBuilder0.append("");
      StrBuilder strBuilder2 = strBuilder0.replaceAll('l', 'l');
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      int int0 = strBuilder2.lastIndexOf(strMatcher0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize((char[]) null, 1244, (-1195));
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1553);
      char[] charArray0 = new char[5];
      charArray0[0] = 'A';
      charArray0[1] = '^';
      charArray0[2] = 't';
      charArray0[3] = '?';
      charArray0[4] = '/';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      int int0 = (-3068);
      StrBuilder strBuilder0 = new StrBuilder((-3068));
      StrBuilder strBuilder1 = new StrBuilder("DHi)GqDY0Y !YHt:");
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterMatcher(strMatcher0);
      Object object0 = strBuilder_StrBuilderTokenizer0.next();
      String string0 = strBuilder_StrBuilderTokenizer0.nextToken();
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadRight((Object) "DHi)GqDY0Y !YHt:", (-3068), 't');
      Object object1 = strBuilder_StrBuilderTokenizer0.cloneReset();
      // Undeclared exception!
      try { 
        strBuilder0.insert((-3068), object1);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3068
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append("end < start");
      StrBuilder strBuilder2 = strBuilder0.append((char[]) null);
      String string0 = strBuilder1.rightString(3736);
      boolean boolean0 = strBuilder1.equalsIgnoreCase(strBuilder0);
      StrBuilder strBuilder3 = strBuilder0.replaceAll("end < start", "end < start");
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.append((Object) "");
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      StrBuilder strBuilder2 = strBuilder0.insert(0, true);
      StrBuilder strBuilder3 = strBuilder1.appendFixedWidthPadLeft(0, 0, 'k');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoreEmptyTokens(true);
      StrBuilder strBuilder4 = strBuilder1.appendWithSeparators((Iterator) strTokenizer0, "");
      char[] charArray0 = new char[8];
      charArray0[0] = 'k';
      charArray0[1] = 'k';
      charArray0[2] = 'k';
      charArray0[3] = 'k';
      charArray0[4] = 'k';
      charArray0[5] = 'k';
      charArray0[6] = 'i';
      charArray0[7] = 'k';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      strBuilder0.validateIndex(0);
      int int0 = strBuilder1.indexOf(strMatcher0);
      StrBuilder strBuilder5 = strBuilder0.setLength(2897);
      boolean boolean0 = strBuilder5.isEmpty();
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("];1Y3,]&FxhuagX");
      StrBuilder strBuilder1 = new StrBuilder();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Collection) linkedList0, "");
      StrTokenizer strTokenizer0 = strBuilder1.asTokenizer();
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder1);
      StrBuilder strBuilder4 = strBuilder0.deleteFirst('N');
      StrBuilder strBuilder5 = strBuilder0.append(0.0);
      StrTokenizer strTokenizer1 = StrTokenizer.getCSVInstance("");
      StrBuilder strBuilder6 = strBuilder5.appendWithSeparators((Iterator) strTokenizer1, "");
      int int0 = strBuilder4.lastIndexOf(")vJ13\u0006");
      int int1 = strBuilder4.lastIndexOf("", (-1312));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder5.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(426);
      StrBuilder strBuilder7 = strBuilder4.append((float) 426);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append("Invalid offset: ");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      StrBuilder strBuilder2 = strBuilder1.deleteAll(strMatcher0);
      StrBuilder strBuilder3 = strBuilder1.appendFixedWidthPadLeft((Object) strBuilder0, 0, 'F');
      Writer writer0 = strBuilder1.asWriter();
      StrBuilder strBuilder4 = strBuilder0.setNullText("Invalid offset: ");
      StrBuilder strBuilder5 = strBuilder2.replaceAll("Invalid offset: ", "t<ZZ^&w28-2");
      StrBuilder strBuilder6 = strBuilder3.deleteFirst('$');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.append((CharSequence) "t<ZZ^&w28-2", 0, 52);
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1674));
      char[] charArray0 = new char[6];
      charArray0[0] = '$';
      charArray0[1] = '&';
      charArray0[2] = ';';
      charArray0[3] = '+';
      charArray0[4] = 'w';
      charArray0[5] = '2';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 855, (-1721));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -1721
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("gz&r:W/&");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("h#vYOI(#");
      strBuilder_StrBuilderWriter0.write("gz&r:W/&");
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      int int0 = strBuilder0.capacity();
      StrBuilder strBuilder2 = strBuilder0.replaceFirst("1.6", "1.6");
      StrMatcher strMatcher0 = StrMatcher.charMatcher('K');
      char[] charArray0 = new char[7];
      charArray0[0] = 'K';
      charArray0[1] = 'K';
      charArray0[2] = 'K';
      charArray0[3] = 'K';
      charArray0[4] = 'K';
      charArray0[5] = 'K';
      charArray0[6] = 'K';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder3 = strBuilder1.replaceFirst(strMatcher0, "The Array must not be null");
      int int1 = strBuilder1.lastIndexOf(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-825));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      String string0 = strBuilder_StrBuilderTokenizer0.toString();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "StrTokenizer[not tokenized yet]");
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('F');
      StrBuilder strBuilder2 = strBuilder0.deleteFirst(strMatcher0);
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadRight(object0, (-825), '+');
      boolean boolean0 = strBuilder3.contains(strMatcher0);
      StringBuffer stringBuffer1 = strBuilder0.toStringBuffer();
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = 'x';
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('x');
      int int0 = strBuilder1.validateRange(0, 681);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("");
      strBuilder_StrBuilderWriter0.write((-2016));
      char[] charArray0 = new char[5];
      charArray0[0] = 'x';
      charArray0[1] = 'x';
      charArray0[2] = 'T';
      charArray0[3] = 'x';
      charArray0[4] = 'x';
      // Undeclared exception!
      try { 
        strBuilder0.getChars((-123), (-123), charArray0, (-3712));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -123
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      String string0 = null;
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.append((Object) null);
      int int0 = (-1);
      // Undeclared exception!
      try { 
        strBuilder0.delete((-997), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -997
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.insert(0, "");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char char0 = '_';
      StrBuilder strBuilder2 = strBuilder1.replaceFirst("", "");
      StrBuilder strBuilder3 = strBuilder0.deleteAll('_');
      strBuilder1.size = 0;
      char char1 = 'r';
      // Undeclared exception!
      try { 
        strBuilder1.setCharAt(0, 'r');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) null;
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) strBuilder0;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, (String) null);
      StrBuilder strBuilder2 = strBuilder0.setLength(0);
      StrBuilder strBuilder3 = strBuilder2.append(false);
      StrBuilder strBuilder4 = strBuilder2.append((float) 0);
      String string0 = "Ag%Zv[OQ$l";
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("Ag%Zv[OQ$l");
      StrBuilder strBuilder5 = strBuilder0.replaceAll((StrMatcher) strMatcher_StringMatcher0, (String) null);
      int int0 = strBuilder0.indexOf("Ag%Zv[OQ$l", 0);
      StrBuilder strBuilder6 = strBuilder1.replaceAll("Ag%Zv[OQ$l", "");
      int int1 = 928;
      // Undeclared exception!
      try { 
        strBuilder2.deleteCharAt((-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1287));
      StrBuilder strBuilder1 = new StrBuilder((-1287));
      boolean boolean0 = strBuilder0.equals((Object) strBuilder1);
      StrBuilder strBuilder2 = strBuilder1.insert(0, "Invalid offset: ");
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.lastIndexOf('2');
      int int1 = strBuilder0.indexOf("java.vm.specification.vendor", (-1));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((-1));
      StrBuilder strBuilder1 = strBuilder0.append('T');
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 777;
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(777, '');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 777
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      // Undeclared exception!
      try { 
        strBuilder0.insert(713, 0L);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 713
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      int int0 = 9;
      StrBuilder strBuilder0 = new StrBuilder(9);
      String string0 = "end < start";
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("end < start");
      // Undeclared exception!
      try { 
        strBuilder1.insert(9, "4.9");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 9
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = strBuilder0.indexOf((StrMatcher) null, 981);
      char char0 = '~';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(0, 981, '~');
      StrBuilder strBuilder2 = strBuilder1.deleteAll("");
      strBuilder1.size = (-1);
      // Undeclared exception!
      try { 
        strBuilder1.append((long) (-1));
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = ")msuou*#xR2l";
      StrBuilder strBuilder1 = strBuilder0.deleteAll(")msuou*#xR2l");
      StrBuilder strBuilder2 = strBuilder1.replaceFirst(")msuou*#xR2l", ")msuou*#xR2l");
      StrBuilder strBuilder3 = strBuilder0.appendNewLine();
      int int0 = 433;
      // Undeclared exception!
      try { 
        strBuilder3.append(")msuou*#xR2l", 433, (-1770));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      int int0 = 2675;
      StrBuilder strBuilder0 = new StrBuilder(2675);
      int int1 = 0;
      char char0 = '`';
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('`');
      StrBuilder strBuilder2 = strBuilder0.insert(0, (float) 0);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder strBuilder3 = strBuilder0.append((-1642));
      // Undeclared exception!
      try { 
        strBuilder3.replace(2675, (-1053), "Y039");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      int int0 = (-692);
      StrBuilder strBuilder0 = new StrBuilder((-692));
      int int1 = 1506;
      String string0 = "";
      StrBuilder strBuilder1 = strBuilder0.deleteAll("");
      // Undeclared exception!
      try { 
        strBuilder1.insert(1506, (Object) "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1506
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(428);
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      int int0 = (-910);
      String string0 = strBuilder0.leftString((-910));
      StrBuilder strBuilder2 = strBuilder1.appendPadding((-910), 'J');
      // Undeclared exception!
      try { 
        strBuilder1.append("", 136, (-910));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("4XFr", "4XFr");
      StrTokenizer strTokenizer0 = strBuilder1.asTokenizer();
      int int0 = 0;
      StrBuilder strBuilder2 = strBuilder1.setLength(0);
      StrBuilder strBuilder3 = new StrBuilder(0);
      StrBuilder strBuilder4 = strBuilder0.append(strBuilder3);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      // Undeclared exception!
      try { 
        strBuilder3.append(strBuilder0, 0, (-2297));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder("");
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1, 0, 0);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("~=&X@I 3%N+^i>!8F");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      int int0 = strBuilder_StrBuilderTokenizer0.size();
      int int1 = 190;
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterChar(':');
      // Undeclared exception!
      try { 
        strBuilder0.substring(190, 190);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((-1L));
      int int0 = strBuilder0.indexOf("t%`|x1Y");
      StrBuilder strBuilder2 = strBuilder0.ensureCapacity((-1));
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrBuilder strBuilder1 = strBuilder0.append((Object) strBuilder_StrBuilderWriter0);
      StrBuilder strBuilder2 = new StrBuilder(1);
      StrBuilder strBuilder3 = strBuilder1.appendFixedWidthPadLeft((Object) strBuilder2, 0, '4');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "blxhyP8-8TcND!");
      Writer writer0 = strBuilder4.asWriter();
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance("");
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrBuilder strBuilder5 = strBuilder1.deleteAll(strMatcher0);
      strBuilder_StrBuilderWriter0.write((String) null);
      strBuilder_StrBuilderWriter0.flush();
      char char0 = '8';
      StrBuilder strBuilder6 = strBuilder0.append('8');
      StrBuilder strBuilder7 = strBuilder6.append((Object) "");
      boolean boolean0 = strBuilder7.contains(strMatcher0);
      int int0 = strBuilder6.size();
      String string0 = strBuilder5.toString();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      StrBuilder strBuilder8 = strBuilder0.appendWithSeparators((Collection) linkedList0, (String) null);
      StringBuffer stringBuffer0 = null;
      try {
        stringBuffer0 = new StringBuffer((CharSequence) null);
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.contains("\"}B,]N62@AD$m(!");
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[0];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = strBuilder_StrBuilderReader0.read(charBuffer0);
      strBuilder_StrBuilderReader0.reset();
      boolean boolean0 = strBuilder0.endsWith("^*Gy");
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) null, 0, '[');
      // Undeclared exception!
      try { 
        strBuilder0.validateRange(5, 5);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      int int0 = 3231;
      StrBuilder strBuilder0 = new StrBuilder(3231);
      // Undeclared exception!
      try { 
        strBuilder0.insert(3231, (float) 3231);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3231
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.getNewLineText();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      int int0 = 744;
      strBuilder_StrBuilderWriter0.write(744);
      StrBuilder strBuilder1 = strBuilder0.setNewLineText((String) null);
      StrBuilder strBuilder2 = strBuilder1.deleteAll("xe(MEI");
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      // Undeclared exception!
      try { 
        strBuilder1.insert(203, object0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 203
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.insert(31, (Object) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 31
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(0.0F);
      StrBuilder strBuilder2 = strBuilder1.append(114);
      StrBuilder strBuilder3 = strBuilder2.trim();
      StrBuilder strBuilder4 = strBuilder0.append((-2572.7803F));
      int int0 = 2;
      char[] charArray0 = new char[3];
      StrBuilder strBuilder5 = strBuilder0.replaceFirst("tUEstjX/:96 tA6XA", "java.vm.info");
      StrBuilder strBuilder6 = strBuilder5.insert(2, "java.vm.info");
      String string0 = strBuilder5.midString((-2083), 1017);
      // Undeclared exception!
      try { 
        strBuilder6.insert((-1052), true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1052
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 1407;
      char[] charArray0 = null;
      // Undeclared exception!
      try { 
        strBuilder0.insert(1407, (char[]) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1407
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(102);
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(102);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 102
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      int int0 = (-2400);
      // Undeclared exception!
      try { 
        strBuilder0.substring((-2400), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2400
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      int int0 = 1741;
      StrBuilder strBuilder0 = new StrBuilder(1741);
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      char char0 = '0';
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('0');
      // Undeclared exception!
      try { 
        strBuilder0.insert(1741, (-1121));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1741
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(48);
      String string0 = strBuilder0.midString(48, 48);
      StrBuilder strBuilder1 = strBuilder0.deleteAll("");
      StrBuilder strBuilder2 = strBuilder0.append((Object) "end < start");
      boolean boolean0 = strBuilder1.equalsIgnoreCase(strBuilder2);
      StrBuilder strBuilder3 = strBuilder2.append("end < start");
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder4 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder5 = strBuilder4.deleteAll('y');
      StrBuilder strBuilder6 = strBuilder5.trim();
      String string1 = strBuilder4.rightString(57);
      // Undeclared exception!
      try { 
        strBuilder2.insert(709, (char[]) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 709
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.append((double) 1218);
      String string0 = strBuilder0.midString(0, 1218);
      StrBuilder strBuilder2 = strBuilder0.reverse();
      StrBuilder strBuilder3 = strBuilder0.append(291);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      StrBuilder strBuilder4 = strBuilder2.insert(0, (double) 0);
      StrBuilder strBuilder5 = strBuilder2.delete(0, 5);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string1 = strBuilder_StrBuilderTokenizer0.getContent();
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrBuilder strBuilder6 = strBuilder2.deleteFirst(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid startIndex: ");
      StrBuilder strBuilder1 = strBuilder0.trim();
      StringBuffer stringBuffer0 = new StringBuffer("Invalid startIndex: ");
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, (-2609), (-2609));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.insert(44, true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 44
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(48);
      String string0 = strBuilder0.midString(48, 48);
      StrBuilder strBuilder1 = strBuilder0.deleteAll("");
      StrBuilder strBuilder2 = strBuilder0.append((Object) "end < start");
      boolean boolean0 = strBuilder1.equalsIgnoreCase(strBuilder2);
      StrBuilder strBuilder3 = strBuilder2.append("end < start");
      StringBuffer stringBuffer0 = new StringBuffer("");
      StrBuilder strBuilder4 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder5 = strBuilder4.deleteAll('y');
      String string1 = strBuilder4.rightString(57);
      // Undeclared exception!
      try { 
        strBuilder2.insert(709, (char[]) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 709
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1530));
      StrBuilder strBuilder1 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, 1312, 1312);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrBuilder strBuilder1 = strBuilder0.append("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrBuilder strBuilder2 = strBuilder0.append((Object) "Invalid startIndex: ");
      char[] charArray0 = strBuilder0.toCharArray();
      String string0 = strBuilder0.getNullText();
      int int0 = strBuilder2.size();
      int int1 = strBuilder0.hashCode();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 139, 139);
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      int int2 = 0;
      StrBuilder strBuilder3 = strBuilder2.insert(139, "length must be valid");
      // Undeclared exception!
      try { 
        strBuilder1.getChars(1509, 0, charArray0, 139);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.isEmpty();
      int int0 = strBuilder0.hashCode();
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[4];
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) "", 0, 0);
      charArray0[0] = '*';
      strBuilder_StrBuilderWriter0.write("");
      charArray0[1] = 'C';
      char char0 = '}';
      Writer writer1 = strBuilder_StrBuilderWriter0.append('9');
      char[] charArray1 = new char[2];
      charArray1[0] = '}';
      charArray1[1] = '9';
      strBuilder_StrBuilderWriter0.write(charArray1, 0, 0);
      // Undeclared exception!
      try { 
        strBuilder0.getChars(3026, 0, charArray0, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[9];
      charArray0[0] = 'I';
      charArray0[1] = ' ';
      charArray0[2] = 'Q';
      charArray0[3] = 'L';
      charArray0[4] = 'w';
      charArray0[5] = '3';
      charArray0[6] = '@';
      charArray0[7] = '~';
      charArray0[8] = 'z';
      // Undeclared exception!
      try { 
        strBuilder0.getChars((-766), (-766), charArray0, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -766
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("end < start");
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      char[] charArray0 = strBuilder0.toCharArray();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("java.library.path", (-1244), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      String string0 = strBuilder0.leftString(0);
      String string1 = strBuilder0.getNullText();
      StringBuffer stringBuffer0 = null;
      try {
        stringBuffer0 = new StringBuffer((CharSequence) null);
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.insert(0, 0);
      StrBuilder strBuilder2 = strBuilder0.replace(0, 1007, (String) null);
      Object object0 = new Object();
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadRight(object0, 1007, '+');
      int int0 = strBuilder1.indexOf("6qvQ >RD+m", 0);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.toString();
      float float0 = 0.0F;
      StrBuilder strBuilder1 = strBuilder0.append(0.0F);
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("");
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("org.apache.commons.lang.text.StrMatcher");
      int int0 = strBuilder0.indexOf((StrMatcher) strMatcher_StringMatcher0);
      char[] charArray0 = new char[0];
      char[] charArray1 = strBuilder1.getChars(charArray0);
      StrBuilder strBuilder2 = strBuilder1.deleteFirst("");
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("org.apache.commons.lang.text.StrMatcher");
      // Undeclared exception!
      try { 
        strBuilder2.substring((-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      String string0 = null;
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      String string1 = strBuilder0.toString();
      // Undeclared exception!
      try { 
        strBuilder0.insert(48, (double) 48);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 48
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-13));
      String string0 = strBuilder0.toString();
      String string1 = strBuilder0.midString((-13), (-13));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      char[] charArray0 = strBuilder0.toCharArray();
      char[] charArray1 = strBuilder0.toCharArray();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("c-t~>q|m");
      StrBuilder strBuilder1 = strBuilder0.append((-1.0F));
      StrBuilder strBuilder2 = strBuilder1.append('6');
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-912), "c-t~>q|m");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -912
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("W)s}yO");
      StrBuilder strBuilder1 = strBuilder0.append(true);
      int int0 = strBuilder0.indexOf('X');
      StrBuilder strBuilder2 = strBuilder0.setNullText("W)s}yO");
      char[] charArray0 = new char[2];
      charArray0[0] = 'X';
      charArray0[1] = 'X';
      char[] charArray1 = strBuilder2.getChars(charArray0);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("'1G7t$e*`4qZwU.}fF");
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher((char[]) null);
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "'1G7t$e*`4qZwU.}fF");
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-310));
      StrBuilder strBuilder1 = new StrBuilder();
      int int0 = 4;
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight((Object) strBuilder1, 84, '\'');
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, 4, 1764);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1186));
      char[] charArray0 = new char[9];
      charArray0[0] = '';
      charArray0[1] = 'w';
      charArray0[2] = 'k';
      charArray0[3] = 'A';
      charArray0[4] = 'o';
      charArray0[5] = 'C';
      charArray0[6] = 'I';
      charArray0[7] = 'W';
      charArray0[8] = '6';
      char[] charArray1 = strBuilder0.getChars(charArray0);
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((-2423));
      StrBuilder strBuilder2 = strBuilder0.deleteAll((StrMatcher) null);
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadLeft((Object) "E]~6T\"JHd", 1, 'n');
      StrBuilder strBuilder4 = strBuilder3.append(",ktF", 1, 1);
      StrBuilder strBuilder5 = strBuilder0.appendFixedWidthPadRight(97, 108, '#');
      StrBuilder strBuilder6 = strBuilder3.replaceFirst((StrMatcher) null, "E]~6T\"JHd");
      int int0 = strBuilder3.indexOf((StrMatcher) null, 0);
      StrBuilder strBuilder7 = strBuilder1.appendFixedWidthPadLeft((Object) strBuilder0, 97, 'n');
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[9];
      StrMatcher strMatcher0 = StrMatcher.charMatcher('K');
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("S4/`[>oJ`}-;%b");
      int int0 = strBuilder0.indexOf(strMatcher0, (-2201));
      charArray0[0] = 'I';
      charArray0[1] = '.';
      charArray0[2] = '*';
      charArray0[3] = '%';
      charArray0[4] = '3';
      charArray0[5] = '+';
      charArray0[6] = '3';
      charArray0[7] = '}';
      charArray0[8] = '2';
      char[] charArray1 = strBuilder0.getChars(charArray0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("org.apache.commons.lang.text.StrMatcher$TrimMatcher");
      strBuilder_StrBuilderWriter0.flush();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int1 = strBuilder_StrBuilderReader0.read();
      int int2 = 1433;
      // Undeclared exception!
      try { 
        strBuilder0.insert(1433, (-1123.470444043));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1433
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft(0, 2164, '-');
      StrBuilder strBuilder3 = strBuilder2.deleteFirst('N');
      String string0 = strBuilder1.substring(2164);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder("");
      StrBuilder strBuilder2 = strBuilder0.appendNull();
      StrBuilder strBuilder3 = strBuilder2.deleteAll("");
      StrBuilder strBuilder4 = strBuilder0.append(strBuilder1);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      boolean boolean0 = linkedList0.add("");
      Stream<String> stream0 = linkedList0.stream();
      boolean boolean1 = linkedList0.add("");
      StrBuilder strBuilder5 = strBuilder0.appendWithSeparators((Collection) linkedList0, "startIndex must be valid");
      StrBuilder strBuilder6 = strBuilder5.setNewLineText("java.compiler");
      StrBuilder strBuilder7 = strBuilder6.delete(0, 48);
      // Undeclared exception!
      try { 
        strBuilder1.validateRange((-2638), (-4119));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2638
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1174);
      StrBuilder strBuilder1 = strBuilder0.setLength(1174);
      StrBuilder strBuilder2 = strBuilder0.setLength(1174);
      StrBuilder strBuilder3 = strBuilder2.setNullText("`lLTn^vH");
      StrBuilder strBuilder4 = strBuilder1.insert(1174, (long) 1174);
      char[] charArray0 = new char[0];
      StrBuilder strBuilder5 = strBuilder4.append(charArray0);
      StrBuilder strBuilder6 = strBuilder4.appendNewLine();
      StrBuilder strBuilder7 = strBuilder1.deleteFirst("");
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      boolean boolean0 = strBuilder1.contains(strMatcher0);
      StrBuilder strBuilder8 = strBuilder0.minimizeCapacity();
      boolean boolean1 = strBuilder0.contains("Xn_wUyRy+ (BS<");
      StrBuilder strBuilder9 = strBuilder1.replace(5, 5, "");
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("Xn_wUyRy+ (BS<");
      int int0 = strBuilder1.indexOf(strMatcher1);
      StrBuilder strBuilder10 = strBuilder1.replaceFirst('G', 'e');
      StrBuilder strBuilder11 = strBuilder7.replaceAll('e', '8');
      StringBuffer stringBuffer0 = strBuilder4.toStringBuffer();
      StringBuffer stringBuffer1 = strBuilder10.toStringBuffer();
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("'p_Bvwl${(");
      boolean boolean0 = strBuilder0.contains('/');
      StrBuilder strBuilder1 = strBuilder0.append((Object) "'p_Bvwl${(");
      StringBuffer stringBuffer0 = new StringBuffer();
      Object[] objectArray0 = new Object[0];
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators(objectArray0, "org.apache.commons.lang.text.StrMatcher$StringMatcher");
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 34, 34);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("NO)/R=H#LJ");
      StrBuilder strBuilder1 = strBuilder0.appendPadding((-466), 'G');
      StrBuilder strBuilder2 = strBuilder0.deleteAll('#');
      StrBuilder strBuilder3 = strBuilder0.ensureCapacity(978);
      int int0 = strBuilder2.lastIndexOf(';');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder3.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrBuilder strBuilder4 = strBuilder3.deleteFirst(strMatcher0);
      StrBuilder strBuilder5 = strBuilder4.appendFixedWidthPadLeft((Object) strBuilder1, (-466), ';');
      Writer writer0 = strBuilder4.asWriter();
      StrBuilder strBuilder6 = strBuilder4.replaceFirst("NO)/R=H#LJ", "NO)/R=H#LJ");
      // Undeclared exception!
      try { 
        strBuilder4.append("NO)/R=H#LJ", (-466), (-466));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Index: ");
      strBuilder0.size = 5;
      int int0 = strBuilder0.length();
      int int1 = strBuilder0.lastIndexOf("Index: ");
      StrBuilder strBuilder1 = strBuilder0.deleteAll('p');
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendPadding((-1557), 'q');
      StrTokenizer strTokenizer0 = strBuilder1.asTokenizer();
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      int int0 = strBuilder1.lastIndexOf((StrMatcher) strMatcher_NoMatcher0, (-3705));
      StrBuilder strBuilder2 = strBuilder0.insert(0, 'O');
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("gAFzNc*n#d!,RI)bh");
      StrBuilder strBuilder3 = strBuilder2.deleteFirst(strMatcher0);
      StrBuilder strBuilder4 = strBuilder1.minimizeCapacity();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder4.new StrBuilderReader();
      int int1 = strBuilder4.indexOf(strMatcher1, (-3705));
      long long0 = strBuilder_StrBuilderReader0.skip(1805L);
      int int2 = strBuilder_StrBuilderReader0.read();
  }
}
