* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.lang.text.StrBuilder
* Starting client
* Connecting to master process on port 6784
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/patch1-Lang-59-CapGen-plausible/Lang_59_1-plausible_capgen/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.lang.text.StrBuilder
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 657
  - Branch 517
  - Exception 0
  - MutationFactory 580
  - Output 841
  - Method 127
  - MethodNoException 127
  - CBranchFitnessFactory 517
* Using seed 1585666844713
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%][Progress:=>                            6%] [Cov:>                                  0%][Progress:=>                            6%] [Cov:>                                  1%][Progress:=>                            6%] [Cov:====>                              13%][Progress:==>                           8%] [Cov:====>                              13%][Progress:===>                          11%] [Cov:>                                  1%][Progress:===>                          11%] [Cov:=>                                 3%][Progress:===>                          11%] [Cov:=====>                             15%][Progress:===>                          11%] [Cov:=====>                             16%][Progress:===>                          11%] [Cov:======>                            18%][Progress:===>                          13%] [Cov:======>                            19%][Progress:====>                         15%] [Cov:=====>                             15%][Progress:=====>                        18%] [Cov:>                                  2%][Progress:======>                       20%] [Cov:=>                                 3%][Progress:======>                       20%] [Cov:=====>                             16%][Progress:======>                       20%] [Cov:======>                            18%][Progress:======>                       20%] [Cov:=======>                           20%][Progress:======>                       21%] [Cov:====>                              13%][Progress:======>                       21%] [Cov:====>                              14%][Progress:======>                       21%] [Cov:=====>                             15%][Progress:======>                       21%] [Cov:=====>                             17%][Progress:======>                       21%] [Cov:======>                            18%][Progress:==========>                   35%] [Cov:>                                  2%][Progress:==========>                   35%] [Cov:=>                                 5%][Progress:==========>                   35%] [Cov:=====>                             17%][Progress:==========>                   35%] [Cov:======>                            19%][Progress:==========>                   35%] [Cov:=======>                           22%][Progress:==========>                   35%] [Cov:========>                          24%][Progress:==========>                   35%] [Cov:========>                          25%][Progress:============>                 40%] [Cov:>                                  0%][Progress:============>                 40%] [Cov:====>                              12%][Progress:============>                 40%] [Cov:====>                              14%][Progress:============>                 40%] [Cov:=====>                             15%][Progress:============>                 40%] [Cov:=====>                             16%][Progress:============>                 40%] [Cov:======>                            18%][Progress:============>                 41%] [Cov:>                                  0%][Progress:============>                 41%] [Cov:>                                  1%][Progress:============>                 41%] [Cov:====>                              14%][Progress:============>                 41%] [Cov:=====>                             15%][Progress:============>                 41%] [Cov:=====>                             16%][Progress:============>                 41%] [Cov:=====>                             17%][Progress:============>                 41%] [Cov:======>                            19%][Progress:============>                 41%] [Cov:=======>                           21%][Progress:============>                 41%] [Cov:=======>                           22%][Progress:============>                 43%] [Cov:=====>                             15%][Progress:============>                 43%] [Cov:=====>                             17%][Progress:============>                 43%] [Cov:======>                            18%][Progress:============>                 43%] [Cov:======>                            19%][Progress:============>                 43%] [Cov:=======>                           21%][Progress:============>                 43%] [Cov:========>                          23%][Progress:============>                 43%] [Cov:========>                          24%][Progress:=============>                45%] [Cov:======>                            19%][Progress:=============>                45%] [Cov:=======>                           22%][Progress:=============>                45%] [Cov:========>                          24%][Progress:=============>                46%] [Cov:=======>                           20%][Progress:=============>                46%] [Cov:========>                          23%][Progress:=============>                46%] [Cov:=========>                         26%][Progress:=============>                46%] [Cov:=========>                         27%][Progress:==============>               48%] [Cov:======>                            19%][Progress:==============>               48%] [Cov:=======>                           20%][Progress:==============>               48%] [Cov:=======>                           21%][Progress:==============>               48%] [Cov:========>                          24%][Progress:==============>               48%] [Cov:=========>                         26%][Progress:==============>               48%] [Cov:=========>                         27%][Progress:===============>              50%] [Cov:=====>                             17%][Progress:===============>              50%] [Cov:======>                            19%][Progress:===============>              50%] [Cov:=======>                           20%][Progress:===============>              50%] [Cov:========>                          23%][Progress:===============>              50%] [Cov:========>                          25%][Progress:===============>              50%] [Cov:=========>                         26%][Progress:===============>              51%] [Cov:========>                          23%][Progress:===============>              51%] [Cov:========>                          24%][Progress:===============>              53%] [Cov:>                                  2%][Progress:===============>              53%] [Cov:=====>                             15%][Progress:===============>              53%] [Cov:=====>                             16%][Progress:===============>              53%] [Cov:=====>                             17%][Progress:===============>              53%] [Cov:======>                            18%][Progress:===============>              53%] [Cov:======>                            19%][Progress:===============>              53%] [Cov:=======>                           21%][Progress:===============>              53%] [Cov:========>                          24%][Progress:===============>              53%] [Cov:========>                          25%][Progress:================>             55%] [Cov:>                                  2%][Progress:================>             55%] [Cov:=>                                 3%][Progress:================>             55%] [Cov:=====>                             16%][Progress:================>             55%] [Cov:=====>                             17%][Progress:================>             55%] [Cov:======>                            18%][Progress:================>             55%] [Cov:=======>                           20%][Progress:================>             55%] [Cov:=======>                           21%][Progress:================>             56%] [Cov:>                                  2%][Progress:================>             56%] [Cov:=>                                 4%][Progress:================>             56%] [Cov:=====>                             17%][Progress:================>             56%] [Cov:======>                            18%][Progress:================>             56%] [Cov:======>                            19%][Progress:================>             56%] [Cov:=======>                           21%][Progress:================>             56%] [Cov:========>                          23%][Progress:================>             56%] [Cov:=========>                         27%][Progress:=================>            58%] [Cov:=========>                         27%][Progress:=================>            58%] [Cov:=========>                         28%][Progress:==================>           60%] [Cov:======>                            19%][Progress:==================>           60%] [Cov:=======>                           20%][Progress:==================>           60%] [Cov:=======>                           21%][Progress:==================>           60%] [Cov:=======>                           22%][Progress:==================>           60%] [Cov:========>                          23%][Progress:==================>           60%] [Cov:========>                          25%][Progress:==================>           61%] [Cov:=====>                             15%][Progress:==================>           61%] [Cov:========>                          24%][Progress:==================>           61%] [Cov:========>                          25%][Progress:==================>           63%] [Cov:========>                          23%][Progress:==================>           63%] [Cov:========>                          24%][Progress:==================>           63%] [Cov:========>                          25%][Progress:==================>           63%] [Cov:=========>                         26%][Progress:==================>           63%] [Cov:=========>                         27%][Progress:===================>          65%] [Cov:========>                          24%][Progress:===================>          65%] [Cov:=========>                         27%][Progress:===================>          66%] [Cov:=======>                           21%][Progress:===================>          66%] [Cov:========>                          24%][Progress:===================>          66%] [Cov:========>                          25%][Progress:===================>          66%] [Cov:=========>                         26%][Progress:===================>          66%] [Cov:=========>                         27%][Progress:===================>          66%] [Cov:=========>                         28%][Progress:====================>         68%] [Cov:=========>                         26%][Progress:====================>         68%] [Cov:=========>                         27%][Progress:====================>         68%] [Cov:=========>                         28%][Progress:=====================>        70%] [Cov:=======>                           21%][Progress:=====================>        70%] [Cov:=======>                           22%][Progress:=====================>        70%] [Cov:========>                          23%][Progress:=====================>        70%] [Cov:=========>                         27%][Progress:=====================>        71%] [Cov:==========================>        75%][Progress:=====================>        73%] [Cov:=========================>         74%][Progress:=====================>        73%] [Cov:==========================>        75%][Progress:======================>       75%] [Cov:=========================>         73%][Progress:======================>       75%] [Cov:==========================>        75%][Progress:======================>       76%] [Cov:=========================>         74%][Progress:======================>       76%] [Cov:==========================>        75%][Progress:========================>     80%] [Cov:==========================>        75%][Progress:========================>     81%] [Cov:=========================>         73%][Progress:========================>     81%] [Cov:=========================>         74%][Progress:========================>     81%] [Cov:==========================>        75%][Progress:=========================>    85%] [Cov:==========================>        75%][Progress:===========================>  91%] [Cov:=========================>         73%][Progress:===========================>  91%] [Cov:=========================>         74%][Progress:===========================>  91%] [Cov:==========================>        75%][Progress:===========================>  91%] [Cov:==========================>        75%][Progress:===========================>  93%] [Cov:==========================>        75%][Progress:===========================>  93%] [Cov:==========================>        76%][Progress:============================> 95%] [Cov:==========================>        75%][Progress:============================> 95%] [Cov:==========================>        76%][Progress:============================> 96%] [Cov:==========================>        75%][Progress:============================> 96%] [Cov:==========================>        76%][Progress:=============================>98%] [Cov:==========================>        76%][Progress:=============================>98%] [Cov:==========================>        77%][Progress:==============================100%] [Cov:==========================>        76%][Progress:==============================100%] [Cov:==========================>        77%][Progress:==============================100%] [Cov:==========================>        77%][Progress:==============================100%] [Cov:=============================>     83%]
* Search finished after 63s and 6 generations, 5446 statements, best individual has fitness: 1306.81233749589
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
[MASTER] 23:03:07.045 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Coverage of criterion LINE: 88%
* Total number of goals: 657
* Number of covered goals: 579
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 85%
* Total number of goals: 517
* Number of covered goals: 437
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 30
* Number of covered goals: 30
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 72%
* Total number of goals: 580
* Number of covered goals: 416
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 49%
* Total number of goals: 841
* Number of covered goals: 408
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 98%
* Total number of goals: 127
* Number of covered goals: 125
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 96%
* Total number of goals: 127
* Number of covered goals: 122
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 81%
* Total number of goals: 517
* Number of covered goals: 420
* Generated 183 tests with total length 2846
* Resulting test suite's coverage: 84% (average coverage for all fitness functions)
* Compiling and checking tests
* Writing JUnit test case 'StrBuilder_ESTest' to evosuite-tests
* Computation finished
