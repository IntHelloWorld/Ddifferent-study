/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 28 17:01:07 GMT 2020
 */

package org.apache.commons.lang.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.Writer;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.ListIterator;
import java.util.NoSuchElementException;
import java.util.stream.IntStream;
import org.apache.commons.lang.text.StrBuilder;
import org.apache.commons.lang.text.StrMatcher;
import org.apache.commons.lang.text.StrTokenizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StrBuilder_ESTest extends StrBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[7];
      charArray0[0] = 'i';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0, 0, 0);
      charArray0[1] = 'u';
      charArray0[2] = '_';
      charArray0[3] = 'A';
      charArray0[4] = '5';
      charArray0[5] = 'q';
      charArray0[6] = '~';
      int int1 = strBuilder_StrBuilderReader0.read(charArray0);
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst((StrMatcher) strMatcher_TrimMatcher0, "");
      StrBuilder strBuilder2 = strBuilder1.appendNewLine();
      String string0 = strBuilder2.rightString(1645);
      StrBuilder strBuilder3 = strBuilder1.appendNewLine();
      int int2 = strBuilder3.indexOf("\n", 1645);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      String string0 = "startIndex must be valid";
      StrBuilder strBuilder0 = new StrBuilder("startIndex must be valid");
      String string1 = "";
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("");
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "");
      Reader reader0 = strBuilder0.asReader();
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1091), (long) (-1091));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1091
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) strBuilder0;
      StrBuilder strBuilder1 = strBuilder0.replaceFirst((StrMatcher) null, "");
      objectArray0[1] = (Object) strBuilder0;
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators(objectArray0, "SupI9*");
      StrBuilder strBuilder3 = strBuilder0.append(17.6089);
      int int0 = strBuilder1.length();
      char[] charArray0 = new char[9];
      charArray0[0] = '}';
      StrBuilder strBuilder4 = strBuilder0.appendNewLine();
      charArray0[1] = ',';
      charArray0[2] = '`';
      charArray0[3] = '`';
      charArray0[4] = 'w';
      charArray0[5] = 'z';
      charArray0[6] = ']';
      charArray0[7] = 'N';
      charArray0[8] = '/';
      char[] charArray1 = strBuilder1.getChars(charArray0);
      boolean boolean0 = strBuilder2.contains("");
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2702);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(object0, 32, ':');
      int int0 = 0;
      char char0 = 'k';
      StrBuilder strBuilder2 = strBuilder0.insert(0, 'k');
      // Undeclared exception!
      try { 
        strBuilder2.toCharArray(2702, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("K<R]++8.u6+;");
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.append(false);
      Integer integer0 = new Integer(0);
      StrBuilder strBuilder3 = new StrBuilder(0);
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadLeft(34, 44, ',');
      StrBuilder strBuilder5 = strBuilder4.deleteCharAt(3);
      StrBuilder strBuilder6 = strBuilder3.replaceAll("K<R]++8.u6+;", "");
      StrBuilder strBuilder7 = strBuilder6.setNullText("");
      StrBuilder strBuilder8 = strBuilder6.insert(0, "");
      int int0 = strBuilder1.capacity();
      int int1 = strBuilder6.lastIndexOf(strMatcher0);
      StrMatcher strMatcher1 = StrMatcher.charMatcher('F');
      StrBuilder strBuilder9 = strBuilder8.deleteFirst(',');
      int int2 = strBuilder6.indexOf('8', 44);
      StrBuilder strBuilder10 = strBuilder8.deleteFirst("startIndex must be valid");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder3.new StrBuilderTokenizer();
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize((char[]) null, (-1), (-1));
      String string0 = strBuilder7.leftString(34);
      boolean boolean0 = strBuilder5.contains('W');
      StrBuilder strBuilder11 = strBuilder0.ensureCapacity(4);
      // Undeclared exception!
      try { 
        strBuilder11.insert((-1), (Object) "K<R]++8.u6+;");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("cw/.anG");
      StrBuilder strBuilder1 = strBuilder0.appendPadding(1932, '(');
      StrBuilder strBuilder2 = strBuilder0.append(629);
      StrBuilder strBuilder3 = strBuilder0.insert(32, true);
      StrBuilder strBuilder4 = strBuilder2.setNullText("J#JilN!>1:l4`");
      StrBuilder strBuilder5 = strBuilder4.appendPadding(1932, '(');
      StrBuilder strBuilder6 = strBuilder0.ensureCapacity(1);
      String string0 = strBuilder2.getNewLineText();
      char[] charArray0 = strBuilder2.toCharArray();
      int int0 = strBuilder0.lastIndexOf("", (-2803));
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.indexOf((String) null, 2905);
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder strBuilder1 = strBuilder0.append('L');
      StrBuilder strBuilder2 = strBuilder0.deleteFirst('Z');
      int int1 = strBuilder2.size();
      StrBuilder strBuilder3 = strBuilder2.append((float) 1);
      Reader reader0 = strBuilder0.asReader();
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[9];
      charArray0[0] = '';
      charArray0[1] = '{';
      charArray0[2] = '&';
      charArray0[3] = 'S';
      charArray0[4] = '5';
      charArray0[5] = '>';
      charArray0[6] = '[';
      charArray0[7] = 'W';
      charArray0[8] = ']';
      strBuilder_StrBuilderWriter0.write(charArray0, 0, 0);
      int int0 = strBuilder0.length();
      strBuilder_StrBuilderWriter0.flush();
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('>');
      int int1 = strBuilder0.lastIndexOf(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder2 = strBuilder0.setNullText("org.apache.commons.lang.text.StrBuilder");
      strBuilder2.validateIndex(0);
      int int2 = strBuilder2.indexOf("org.apache.commons.lang.text.StrBuilder", (-1));
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = strBuilder0.toCharArray(0, 0);
      int int0 = strBuilder0.indexOf("YmI5|f1Co", (-2));
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      int int1 = strBuilder0.lastIndexOf(strMatcher0, 4011);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      char[] charArray0 = new char[7];
      charArray0[0] = 'k';
      charArray0[1] = 'd';
      StrBuilder strBuilder2 = new StrBuilder('k');
      charArray0[2] = 'k';
      charArray0[3] = '?';
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrBuilder strBuilder3 = strBuilder1.deleteFirst(strMatcher0);
      charArray0[4] = '*';
      charArray0[5] = '2';
      charArray0[6] = '7';
      StrMatcher strMatcher1 = StrMatcher.doubleQuoteMatcher();
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher(charArray0);
      StrMatcher strMatcher3 = StrMatcher.charSetMatcher(charArray0);
      boolean boolean0 = strBuilder0.contains(strMatcher1);
      StrBuilder strBuilder4 = strBuilder1.append(charArray0, 0, 0);
      StrBuilder strBuilder5 = strBuilder4.delete(0, 0);
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder6 = strBuilder4.appendFixedWidthPadLeft(0, 0, 'x');
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.insert(0, 1276);
      char[] charArray0 = strBuilder0.toCharArray(0, 0);
      String string0 = strBuilder0.getNullText();
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[7];
      charArray0[0] = 'i';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0, 0, 0);
      charArray0[1] = 'u';
      charArray0[2] = '_';
      charArray0[3] = 'A';
      charArray0[4] = '5';
      charArray0[5] = 'q';
      charArray0[6] = '~';
      int int1 = strBuilder_StrBuilderReader0.read(charArray0);
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst((StrMatcher) strMatcher_TrimMatcher0, "");
      StrBuilder strBuilder2 = strBuilder1.appendNewLine();
      String string0 = strBuilder2.rightString(1645);
      StrBuilder strBuilder3 = strBuilder1.appendNewLine();
      boolean boolean1 = strBuilder1.endsWith("");
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "\n");
      // Undeclared exception!
      try { 
        strBuilder3.append(stringBuffer0, 0, 35);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.nextToken();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset((char[]) null);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "pms");
      char[] charArray0 = strBuilder1.toCharArray(0, 39);
      StrBuilder strBuilder2 = strBuilder1.deleteFirst("pms");
      StrBuilder strBuilder3 = strBuilder1.insert(0, (char[]) null);
      StrBuilder strBuilder4 = strBuilder3.deleteFirst('2');
      StrTokenizer strTokenizer1 = strBuilder1.asTokenizer();
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2428));
      StrBuilder strBuilder1 = strBuilder0.append((float) (-2428));
      StringBuffer stringBuffer0 = strBuilder1.toStringBuffer();
      int int0 = strBuilder1.hashCode();
      char[] charArray0 = new char[5];
      charArray0[0] = '7';
      charArray0[1] = ',';
      charArray0[2] = '_';
      charArray0[3] = '~';
      charArray0[4] = '+';
      // Undeclared exception!
      try { 
        strBuilder0.insert((-2428), charArray0, 44, 3);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2428
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("K<R]++8.u6+;");
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.append(false);
      Integer integer0 = new Integer(0);
      StrBuilder strBuilder3 = strBuilder0.append((Object) integer0);
      StrBuilder strBuilder4 = strBuilder3.appendFixedWidthPadLeft(34, 44, ',');
      StrBuilder strBuilder5 = strBuilder4.deleteCharAt(3);
      StrBuilder strBuilder6 = strBuilder3.replaceAll("K<R]++8.u6+;", "");
      StrBuilder strBuilder7 = strBuilder6.setNullText("");
      StrBuilder strBuilder8 = strBuilder6.insert(0, "");
      StrBuilder strBuilder9 = strBuilder6.append(803L);
      int int0 = strBuilder1.capacity();
      int int1 = strBuilder6.lastIndexOf(strMatcher0);
      StrMatcher strMatcher1 = StrMatcher.charMatcher('F');
      int int2 = strBuilder6.indexOf('8', 44);
      StrBuilder strBuilder10 = strBuilder8.deleteFirst("startIndex must be valid");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder3.new StrBuilderTokenizer();
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize((char[]) null, 88, 60);
      String string0 = strBuilder7.leftString(34);
      boolean boolean0 = strBuilder5.contains('W');
      StrBuilder strBuilder11 = strBuilder0.ensureCapacity(4);
      StrBuilder strBuilder12 = strBuilder11.insert(60, (Object) "K<R]++8.u6+;");
      StrBuilder strBuilder13 = strBuilder6.appendPadding(88, '=');
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.reverse();
      // Undeclared exception!
      try { 
        strBuilder2.setLength((-1230));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1230
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("K<R]++8.u6+;");
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.append(false);
      Integer integer0 = new Integer(0);
      StrBuilder strBuilder3 = strBuilder0.append((Object) integer0);
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadLeft(34, 44, ',');
      StrBuilder strBuilder5 = strBuilder4.deleteCharAt(3);
      StrBuilder strBuilder6 = strBuilder3.replaceAll("K<R]++8.u6+;", "");
      StrBuilder strBuilder7 = new StrBuilder(34);
      StrBuilder strBuilder8 = strBuilder6.insert(0, "");
      int int0 = strBuilder1.capacity();
      int int1 = strBuilder6.lastIndexOf(strMatcher0);
      StrMatcher strMatcher1 = StrMatcher.charMatcher('F');
      StrBuilder strBuilder9 = strBuilder8.deleteFirst(',');
      int int2 = strBuilder6.indexOf('8', 44);
      StrBuilder strBuilder10 = strBuilder8.deleteFirst("startIndex must be valid");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder3.new StrBuilderTokenizer();
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize((char[]) null, (-1), 60);
      String string0 = strBuilder7.leftString(34);
      boolean boolean0 = strBuilder5.contains(',');
      StrBuilder strBuilder11 = strBuilder0.ensureCapacity(4);
      StrBuilder strBuilder12 = strBuilder11.insert(60, (Object) "K<R]++8.u6+;");
      StrBuilder strBuilder13 = strBuilder6.appendPadding((-1), '=');
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = 'i';
      charArray0[1] = 'i';
      charArray0[2] = 'i';
      StrBuilder strBuilder0 = new StrBuilder(117);
      StrBuilder strBuilder1 = new StrBuilder("line.separator");
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((StringBuffer) null, 32, 86);
      StrBuilder strBuilder2 = strBuilder1.clear();
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0, 32);
      int int1 = strBuilder0.lastIndexOf("OS/2");
      int int2 = strBuilder1.size();
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      char[] charArray0 = strBuilder0.toCharArray();
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.isEmpty();
      char[] charArray0 = new char[6];
      charArray0[0] = '6';
      charArray0[1] = 'I';
      charArray0[2] = '^';
      int int0 = 1779;
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(1779);
      charArray0[3] = '[';
      charArray0[4] = 'A';
      charArray0[5] = '9';
      StrBuilder strBuilder2 = strBuilder0.append(charArray0);
      int int1 = 1119;
      // Undeclared exception!
      try { 
        strBuilder1.getChars(1779, 1119, charArray0, 1119);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1119
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2512));
      String string0 = strBuilder0.rightString((-2512));
      String string1 = strBuilder0.midString((-2512), (-2512));
      char[] charArray0 = new char[7];
      charArray0[0] = ' ';
      charArray0[2] = 's';
      charArray0[3] = '\'';
      charArray0[4] = 'p';
      charArray0[5] = 'L';
      charArray0[6] = '}';
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance(charArray0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "RnJSu");
      StrBuilder strBuilder2 = strBuilder0.append((Object) "");
      StrTokenizer strTokenizer1 = StrTokenizer.getTSVInstance();
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators((Iterator) strTokenizer1, "file.encoding");
      boolean boolean0 = strBuilder3.endsWith("RnJSu");
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = 'X';
      StrMatcher strMatcher0 = StrMatcher.charMatcher('X');
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      StrMatcher strMatcher2 = StrMatcher.stringMatcher("Invalid length: ");
      int int0 = strBuilder0.indexOf(strMatcher0, Integer.MAX_VALUE);
      int int1 = (-2695);
      String string0 = strBuilder0.leftString((-2695));
      // Undeclared exception!
      try { 
        strBuilder0.substring(1538, 1434);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((Object) strBuilder1, 282, 'j');
      char char0 = strBuilder0.charAt(95);
      StrBuilder strBuilder3 = strBuilder0.insert(95, "Invalid length: ");
      char[] charArray0 = new char[8];
      charArray0[0] = 'j';
      charArray0[1] = 'j';
      charArray0[2] = 'j';
      charArray0[3] = '0';
      charArray0[4] = 'j';
      charArray0[5] = 'j';
      charArray0[6] = 'j';
      charArray0[7] = 'j';
      char[] charArray1 = strBuilder3.getChars(charArray0);
      int int0 = strBuilder2.indexOf("Invalid length: ");
      StrBuilder strBuilder4 = strBuilder1.insert(0, charArray0);
      StrBuilder strBuilder5 = strBuilder0.append((String) null, 0, 282);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('');
      char[] charArray0 = new char[7];
      charArray0[0] = '';
      charArray0[1] = '}';
      charArray0[2] = '';
      charArray0[3] = '';
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "1.6");
      charArray0[4] = '';
      charArray0[5] = '';
      charArray0[6] = '';
      StrBuilder strBuilder2 = strBuilder0.insert(0, charArray0);
      char[] charArray1 = new char[2];
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher("");
      charArray1[0] = 'R';
      charArray1[1] = '';
      StrTokenizer strTokenizer0 = strBuilder2.asTokenizer();
      int int0 = strMatcher0.isMatch(charArray1, 1244, 2, 2);
      int int1 = strBuilder0.indexOf(strMatcher0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      StrBuilder strBuilder3 = strBuilder2.trim();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer1 = strBuilder_StrBuilderTokenizer0.setTrimmerMatcher(strMatcher2);
      StrBuilder strBuilder4 = strBuilder2.appendWithSeparators((Iterator) strTokenizer1, "");
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("cw/.anG");
      StrBuilder strBuilder1 = strBuilder0.appendPadding(1932, '(');
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      StrBuilder strBuilder2 = strBuilder1.deleteFirst(strMatcher0);
      StrBuilder strBuilder3 = strBuilder0.append(629);
      StrBuilder strBuilder4 = strBuilder3.setNullText("J#JilN!>1:l4`");
      String string0 = strBuilder3.getNewLineText();
      char[] charArray0 = strBuilder3.toCharArray();
      int int0 = strBuilder2.indexOf('(');
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "J#JilN!>1:l4`");
      // Undeclared exception!
      try { 
        strBuilder1.append(stringBuffer0, 1586, (-3045));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("K<R]++8.u6+;");
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.append(false);
      Integer integer0 = new Integer(0);
      StrBuilder strBuilder3 = strBuilder0.append((Object) integer0);
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadLeft(34, 44, ',');
      StrBuilder strBuilder5 = strBuilder4.deleteCharAt(3);
      StrBuilder strBuilder6 = strBuilder3.replaceAll("K<R]++8.u6+;", "");
      StrBuilder strBuilder7 = strBuilder6.setNullText("");
      StrBuilder strBuilder8 = strBuilder6.insert(0, "");
      int int0 = strBuilder1.capacity();
      int int1 = strBuilder6.lastIndexOf(strMatcher0);
      StrMatcher strMatcher1 = StrMatcher.charMatcher('F');
      StrBuilder strBuilder9 = strBuilder8.deleteFirst(',');
      int int2 = strBuilder6.indexOf('8', 44);
      StrBuilder strBuilder10 = strBuilder8.deleteFirst("startIndex must be valid");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder3.new StrBuilderTokenizer();
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize((char[]) null, (-1), 60);
      String string0 = strBuilder7.leftString(34);
      boolean boolean0 = strBuilder5.contains('W');
      StrBuilder strBuilder11 = strBuilder0.ensureCapacity(4);
      StrBuilder strBuilder12 = strBuilder11.insert(60, (Object) "K<R]++8.u6+;");
      StrBuilder strBuilder13 = strBuilder6.appendPadding((-1), '=');
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      int int0 = (-1);
      StrBuilder strBuilder0 = new StrBuilder((-1));
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      StrBuilder strBuilder2 = strBuilder0.append((double) (-1));
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder3 = strBuilder0.appendWithSeparators((Collection) linkedList0, "'; the SystemUtils property value will default to null.");
      StrBuilder strBuilder4 = strBuilder2.deleteAll('.');
      StrBuilder strBuilder5 = strBuilder4.setNullText("Y8;nl_K!w$t");
      char[] charArray0 = new char[7];
      charArray0[0] = '.';
      charArray0[1] = '.';
      charArray0[2] = '.';
      charArray0[3] = '.';
      charArray0[4] = '8';
      charArray0[5] = 'X';
      charArray0[6] = '.';
      // Undeclared exception!
      try { 
        strBuilder5.insert((-1), charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("_88p$=wYxIk");
      boolean boolean0 = strBuilder0.startsWith("6;");
      StrBuilder strBuilder1 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, 0, 4822);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(true);
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Iterator) null, "The Array must not be null");
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight(34, 34, 'E');
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("A8rh8W,qN");
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("7*-?0{rA1,GL");
      StrMatcher strMatcher2 = StrMatcher.stringMatcher("");
      StrMatcher strMatcher3 = StrMatcher.stringMatcher("A8rh8W,qN");
      StrMatcher strMatcher4 = StrMatcher.stringMatcher("fqRk");
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.deleteCharAt(0);
      StrBuilder strBuilder3 = strBuilder1.appendFixedWidthPadRight(0, 0, '6');
      String string0 = strBuilder1.substring(0);
      StrBuilder strBuilder4 = strBuilder3.deleteAll(',');
      StrBuilder strBuilder5 = strBuilder1.deleteCharAt(0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[7];
      charArray0[0] = '6';
      charArray0[1] = '6';
      charArray0[2] = ',';
      charArray0[3] = '6';
      charArray0[4] = ',';
      charArray0[5] = ',';
      charArray0[6] = '6';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 0, 3646);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder");
      int int0 = strBuilder0.lastIndexOf('T', 0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      String string0 = "";
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrBuilder strBuilder2 = strBuilder1.deleteFirst(strMatcher0);
      int int0 = strBuilder1.indexOf(strMatcher0, 0);
      StrBuilder strBuilder3 = strBuilder1.deleteAll("");
      StringBuffer stringBuffer0 = strBuilder3.toStringBuffer();
      StrBuilder strBuilder4 = strBuilder1.replaceAll("", "");
      int int1 = 0;
      StrBuilder strBuilder5 = strBuilder4.insert(0, (float) 0);
      boolean boolean0 = strBuilder0.endsWith("");
      StrBuilder strBuilder6 = strBuilder1.append((double) 0);
      StrBuilder strBuilder7 = strBuilder6.replace(strMatcher0, "", 0, 315, 0);
      // Undeclared exception!
      try { 
        strBuilder6.deleteCharAt(315);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 315
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      char[] charArray0 = new char[3];
      int int0 = strMatcher0.isMatch(charArray0, 953, 953, 2123);
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance(charArray0);
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      charArray0[0] = 'F';
      charArray0[1] = 'q';
      strBuilder0.buffer = charArray0;
      charArray0[2] = ':';
      int int1 = strMatcher0.isMatch(charArray0, 0, 0, 102);
      int int2 = strBuilder0.lastIndexOf(strMatcher0, 1);
      int int3 = strBuilder0.indexOf('2', 1);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("");
      int int4 = strBuilder0.indexOf("", 0);
      int int5 = strBuilder0.lastIndexOf(strMatcher0);
      StrMatcher strMatcher2 = StrMatcher.spaceMatcher();
      // Undeclared exception!
      try { 
        strBuilder0.replace(strMatcher2, "", (-1), 102, (-1570));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder("Invalid length: ");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.next();
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((Object) "Invalid", 117, '*');
      StringBuffer stringBuffer0 = new StringBuffer();
      StringBuffer stringBuffer1 = new StringBuffer();
      StringBuffer stringBuffer2 = stringBuffer1.append(stringBuffer0);
      StringBuffer stringBuffer3 = stringBuffer0.append((CharSequence) stringBuffer1);
      StrBuilder strBuilder3 = strBuilder0.append(stringBuffer0);
      int int0 = strBuilder0.indexOf("", 0);
      StrBuilder strBuilder4 = strBuilder3.replaceAll('z', '5');
      boolean boolean0 = strBuilder4.contains(' ');
      StrBuilder strBuilder5 = strBuilder4.insert(0, (long) 0);
      int int1 = strBuilder2.size();
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      char char0 = '{';
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrBuilder strBuilder2 = strBuilder1.setNullText("");
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer0 = new Integer(0);
      boolean boolean0 = linkedList0.add(integer0);
      String string0 = "org.apache.commons.lang.text.StrMatcher$CharSetMatcher";
      StrBuilder strBuilder3 = strBuilder0.appendWithSeparators((Collection) linkedList0, "org.apache.commons.lang.text.StrMatcher$CharSetMatcher");
      StrBuilder strBuilder4 = strBuilder0.setCharAt(0, '{');
      String string1 = strBuilder4.getNewLineText();
      Reader reader0 = strBuilder4.asReader();
      StringBuffer stringBuffer0 = strBuilder3.toStringBuffer();
      int int1 = (-1755);
      StrTokenizer strTokenizer0 = strBuilder3.asTokenizer();
      // Undeclared exception!
      try { 
        strBuilder0.charAt((-1755));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1755
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder0;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, (String) null);
      String string0 = strBuilder0.midString(5, (-939));
      StrBuilder strBuilder2 = strBuilder1.append(678);
      StrBuilder strBuilder3 = strBuilder2.setNullText("");
      StrBuilder strBuilder4 = strBuilder2.appendFixedWidthPadLeft(objectArray0[1], 4, 'z');
      StrBuilder strBuilder5 = strBuilder1.append(objectArray0[1]);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[8];
      charArray0[0] = 'z';
      charArray0[1] = 'z';
      charArray0[2] = '';
      charArray0[3] = 'z';
      charArray0[4] = 'z';
      charArray0[5] = 'z';
      charArray0[6] = 'z';
      charArray0[7] = '\'';
      strBuilder_StrBuilderWriter0.write(charArray0);
      strBuilder_StrBuilderWriter0.close();
      StrBuilder strBuilder6 = strBuilder0.setNullText("");
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 824;
      StrBuilder strBuilder1 = strBuilder0.appendPadding(824, '.');
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrBuilder strBuilder2 = strBuilder1.deleteAll(strMatcher0);
      StrBuilder strBuilder3 = strBuilder1.minimizeCapacity();
      StrTokenizer strTokenizer0 = strBuilder2.asTokenizer();
      StrBuilder strBuilder4 = strBuilder0.deleteAll("end < start");
      StrBuilder strBuilder5 = strBuilder1.append(824);
      char[] charArray0 = new char[8];
      charArray0[0] = '.';
      charArray0[1] = '.';
      charArray0[2] = '.';
      charArray0[3] = '.';
      charArray0[4] = 'x';
      charArray0[5] = '.';
      charArray0[6] = '.';
      charArray0[7] = '.';
      // Undeclared exception!
      try { 
        strBuilder2.insert(39, charArray0, 824, 707);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: 824
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append("', is neither of type Map.Entry nor an Array");
      StrBuilder strBuilder2 = strBuilder0.append((StrBuilder) null, 0, 117);
      String string0 = strBuilder2.rightString(117);
      int int0 = strBuilder0.lastIndexOf("', is neither of type Map.Entry nor an Array", 34);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-3077));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setQuoteChar('o');
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('x');
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 0);
      String string0 = strBuilder0.getNullText();
      char[] charArray0 = new char[8];
      charArray0[0] = 'x';
      charArray0[1] = 'x';
      charArray0[2] = 'o';
      charArray0[3] = 'x';
      charArray0[4] = 'k';
      charArray0[5] = 'x';
      charArray0[6] = 'x';
      charArray0[7] = 'o';
      char[] charArray1 = strBuilder0.getChars(charArray0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Mn3sG");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(6125);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("~}]|7,Z[ j:>a(-J!(");
      int int0 = 634;
      char char0 = '-';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) "~}]|7,Z[ j:>a(-J!(", 634, '-');
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('-');
      char[] charArray0 = new char[8];
      charArray0[0] = '-';
      charArray0[1] = '-';
      charArray0[2] = '-';
      charArray0[3] = '-';
      charArray0[4] = '-';
      charArray0[5] = '-';
      charArray0[6] = '-';
      charArray0[7] = '-';
      strBuilder1.buffer = charArray0;
      int int1 = 0;
      int int2 = 2;
      char[] charArray1 = new char[2];
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher("4iVhRl3U");
      charArray1[0] = '-';
      // Undeclared exception!
      try { 
        strBuilder0.trim();
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 651
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = null;
      StrBuilder strBuilder1 = strBuilder0.setNullText((String) null);
      StringBuffer stringBuffer0 = new StringBuffer(2817);
      StrBuilder strBuilder2 = strBuilder0.ensureCapacity(95);
      StrBuilder strBuilder3 = strBuilder2.append((Object) stringBuffer0);
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 95, 2817);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      String string0 = "KN:Yb^0V";
      StrBuilder strBuilder0 = new StrBuilder("KN:Yb^0V");
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.replace(0, 0, "KN:Yb^0V");
      int int1 = 44;
      // Undeclared exception!
      try { 
        strBuilder1.substring((-2361), 44);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2361
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("58K;2.o kE@aaX`{rK");
      StrBuilder strBuilder1 = strBuilder0.append("?w,S8bRV;q)=\",S2|/$");
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Object[]) null, "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      StrBuilder strBuilder3 = strBuilder0.deleteFirst(strMatcher0);
      int int0 = strBuilder1.indexOf(strMatcher0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder3.new StrBuilderReader();
      char[] charArray0 = new char[4];
      charArray0[0] = 'V';
      StrBuilder strBuilder4 = strBuilder3.deleteFirst(strMatcher0);
      charArray0[1] = 'u';
      charArray0[2] = 'Y';
      charArray0[3] = 'm';
      int int1 = strBuilder_StrBuilderReader0.read(charArray0, 1, 1);
      StrBuilder strBuilder5 = strBuilder3.clear();
      StrBuilder strBuilder6 = strBuilder2.appendFixedWidthPadLeft(0, 0, 'u');
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1789));
      StrBuilder strBuilder1 = strBuilder0.append("");
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      String string0 = "java.specification.vendor";
      StrBuilder strBuilder0 = new StrBuilder("java.specification.vendor");
      StringBuffer stringBuffer0 = new StringBuffer("java.specification.vendor");
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      char char0 = '0';
      int int0 = (-2181);
      int int1 = 48;
      IntStream intStream0 = stringBuffer0.codePoints();
      // Undeclared exception!
      try { 
        stringBuffer0.insert(48, "java.specification.vendor");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 48
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.insert(0, 0.0F);
      char[] charArray0 = new char[9];
      charArray0[0] = 'i';
      charArray0[1] = ' ';
      charArray0[2] = '>';
      charArray0[3] = '}';
      charArray0[4] = 'h';
      charArray0[5] = 's';
      charArray0[6] = '.';
      charArray0[7] = 'Z';
      charArray0[8] = '>';
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance(charArray0);
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "");
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(39);
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.append((float) 39);
      char[] charArray0 = new char[0];
      strBuilder0.buffer = charArray0;
      String string0 = "4.9";
      // Undeclared exception!
      try { 
        strBuilder0.lastIndexOf("4.9");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("ML<Cu!NVB/bFKBn");
      String string0 = strBuilder0.leftString(905);
      int int0 = (-782);
      // Undeclared exception!
      try { 
        strBuilder0.append("user.dir", (-782), (-782));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "25");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      char[] charArray0 = new char[8];
      charArray0[0] = 'E';
      charArray0[1] = '3';
      charArray0[2] = 'T';
      charArray0[3] = 'w';
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoreEmptyTokens(true);
      charArray0[4] = '\"';
      StrBuilder strBuilder2 = strBuilder0.minimizeCapacity();
      charArray0[5] = 'f';
      charArray0[6] = '&';
      charArray0[7] = '/';
      int int0 = strMatcher0.isMatch(charArray0, 2382, 2382, 2382);
      StrBuilder strBuilder3 = strBuilder1.appendWithSeparators((Collection) linkedList0, "25");
      StrBuilder strBuilder4 = strBuilder1.append(strBuilder0);
      String string0 = strBuilder4.toString();
      String string1 = strBuilder_StrBuilderTokenizer0.getContent();
      boolean boolean0 = strBuilder4.isEmpty();
      String string2 = strBuilder_StrBuilderTokenizer0.getContent();
      char[] charArray1 = strBuilder3.toCharArray();
      int int1 = strBuilder2.indexOf(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3112);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset();
      StrTokenizer strTokenizer1 = strBuilder_StrBuilderTokenizer0.reset();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "y&stvR?Y^");
      String string0 = strBuilder1.leftString(3112);
      int int0 = strBuilder1.hashCode();
      String string1 = strBuilder0.rightString((-1464));
      StrBuilder strBuilder2 = strBuilder1.append("y&stvR?Y^");
      String string2 = strBuilder2.substring(0);
      StrBuilder strBuilder3 = strBuilder1.setLength(5);
      int int1 = strBuilder1.lastIndexOf("", 0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder3.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(0);
      char[] charArray0 = new char[8];
      charArray0[0] = '*';
      charArray0[1] = 'q';
      charArray0[2] = 'S';
      charArray0[3] = '-';
      charArray0[4] = 'Z';
      charArray0[5] = 'S';
      charArray0[6] = 'W';
      charArray0[7] = 'S';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      // Undeclared exception!
      try { 
        strBuilder1.replace(strMatcher0, "", 1337, 5, 3);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) strBuilder0;
      StrBuilder strBuilder1 = strBuilder0.replaceFirst((StrMatcher) null, "");
      objectArray0[1] = (Object) strBuilder0;
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators(objectArray0, "SupI9*");
      int int0 = strBuilder1.length();
      char[] charArray0 = new char[9];
      charArray0[0] = '}';
      charArray0[1] = ',';
      charArray0[2] = '`';
      charArray0[3] = '`';
      charArray0[4] = 'w';
      charArray0[5] = 'z';
      charArray0[6] = ']';
      charArray0[7] = 'N';
      charArray0[8] = '/';
      char[] charArray1 = strBuilder1.getChars(charArray0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "";
      StrBuilder strBuilder1 = strBuilder0.replaceAll("", "");
      StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
      StrBuilder strBuilder3 = strBuilder2.clear();
      int int0 = (-6725);
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex((-6725));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -6725
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) strBuilder0;
      StrBuilder strBuilder1 = strBuilder0.replaceFirst((StrMatcher) null, "");
      objectArray0[1] = (Object) strBuilder0;
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators(objectArray0, "SupI9*");
      int int0 = strBuilder1.length();
      char[] charArray0 = new char[9];
      charArray0[1] = ',';
      charArray0[2] = '`';
      charArray0[3] = '`';
      charArray0[4] = 'w';
      charArray0[5] = 'z';
      charArray0[6] = ']';
      charArray0[7] = 'N';
      charArray0[8] = '/';
      char[] charArray1 = strBuilder1.getChars(charArray0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("G0&IC");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(85, 4181, 's');
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) "G0&IC";
      objectArray0[1] = (Object) "G0&IC";
      objectArray0[2] = (Object) "G0&IC";
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators(objectArray0, (String) null);
      int int0 = strBuilder0.lastIndexOf("G0&IC", 3820);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[7];
      charArray0[0] = '.';
      charArray0[1] = '<';
      charArray0[2] = '0';
      charArray0[3] = 'R';
      charArray0[4] = '[';
      charArray0[5] = '4';
      charArray0[6] = '9';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0, 0, 0);
      StrBuilder strBuilder2 = strBuilder0.append((float) 0);
      StrBuilder strBuilder3 = strBuilder0.replace(0, 0, (String) null);
      StrBuilder strBuilder4 = strBuilder0.setNullText("D");
      StrBuilder strBuilder5 = strBuilder0.deleteAll("D");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read(charArray0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(":^7J@H*$/gJym>");
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, ":^7J@H*$/gJym>");
      String string0 = strBuilder0.rightString(0);
      StrBuilder strBuilder2 = strBuilder0.append(0.0F);
      Object[] objectArray0 = new Object[0];
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators(objectArray0, "R:");
      boolean boolean0 = strBuilder0.equals((Object) strMatcher0);
      StrTokenizer strTokenizer0 = strBuilder1.asTokenizer();
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      String string0 = ">z2_(^9+)";
      StrBuilder strBuilder0 = new StrBuilder(">z2_(^9+)");
      int int0 = strBuilder0.length();
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      char char0 = 'F';
      StrBuilder strBuilder2 = strBuilder1.deleteFirst('F');
      // Undeclared exception!
      try { 
        strBuilder1.charAt(10);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 10
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = new StrBuilder("");
      boolean boolean0 = strBuilder0.equals(strBuilder1);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.vm.specification.version");
      int int0 = strBuilder0.validateRange(4, 1325);
      Writer writer0 = strBuilder0.asWriter();
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      char[] charArray0 = new char[9];
      charArray0[0] = 'j';
      charArray0[1] = '(';
      charArray0[2] = '(';
      charArray0[3] = 'M';
      charArray0[4] = '!';
      charArray0[5] = 'M';
      charArray0[6] = '%';
      charArray0[7] = 'j';
      charArray0[8] = 't';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.replace(strMatcher0, "_=Ql", 4, 48, 1325);
      StrBuilder strBuilder2 = strBuilder1.reverse();
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = null;
      try {
        strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher((char[]) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrMatcher$CharSetMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      boolean boolean0 = strBuilder_StrBuilderTokenizer0.hasPrevious();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0, 1);
      StrBuilder strBuilder1 = strBuilder0.reverse();
      StrBuilder strBuilder2 = strBuilder1.replaceFirst((String) null, (String) null);
      StrBuilder strBuilder3 = strBuilder2.deleteFirst("");
      // Undeclared exception!
      try { 
        strBuilder0.insert(1, false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2173));
      String string0 = "hqmYSia~+Yr[>";
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      int int0 = 2;
      char char0 = '{';
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight(object0, 2, '{');
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = new StrBuilder();
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "z|x'7`]>?5,L");
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      String string0 = "T{+{{n?KIS`@;U:";
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "T{+{{n?KIS`@;U:");
      char char0 = 'I';
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('I');
      StrMatcher strMatcher0 = StrMatcher.charMatcher('I');
      StrBuilder strBuilder2 = strBuilder0.replaceAll((StrMatcher) strMatcher_CharMatcher0, "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      char char1 = 'S';
      StrBuilder strBuilder3 = strBuilder1.deleteFirst('S');
      int int0 = 563;
      StrBuilder strBuilder4 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.insert(563, (Object) strBuilder4);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 563
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "");
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("AqVM\"Yt[9E^tAfgD@");
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      // Undeclared exception!
      try { 
        strBuilder0.insert((-2263), (Object) strMatcher0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2263
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("=x6Qq37A");
      char char0 = '5';
      int int0 = (-2775);
      int int1 = strBuilder0.indexOf('5', (-2775));
      StrBuilder strBuilder1 = strBuilder0.replaceAll("wL+", "=x6Qq37A");
      char[] charArray0 = new char[4];
      charArray0[0] = '5';
      charArray0[1] = '5';
      charArray0[2] = '5';
      charArray0[3] = '}';
      // Undeclared exception!
      try { 
        strBuilder1.insert((-2775), charArray0, (-1444), 2458);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2775
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(0);
      StrBuilder strBuilder2 = strBuilder0.append(2709.453F);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      int int0 = (-3155);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read((char[]) null, (-1577), (-3155));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      boolean boolean0 = strBuilder0.contains("+?1z)-k3$");
      int int1 = strBuilder0.indexOf('X', (-1));
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("MC5Uh", 473, 108);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("M+5;");
      StrMatcher strMatcher0 = StrMatcher.charMatcher('l');
      String string0 = "line.separator";
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("line.separator");
      StrMatcher strMatcher2 = StrMatcher.charMatcher('l');
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "8tMFN[r>wSfs?Y");
      boolean boolean0 = strBuilder0.isEmpty();
      int int0 = 57;
      StrBuilder strBuilder2 = strBuilder1.append(57);
      char[] charArray0 = new char[6];
      charArray0[0] = 'l';
      StrBuilder strBuilder3 = strBuilder2.setNullText("line.separator");
      charArray0[1] = '2';
      charArray0[2] = 'l';
      StrBuilder strBuilder4 = strBuilder2.append(663);
      charArray0[3] = 'l';
      charArray0[4] = 'l';
      charArray0[5] = 'l';
      // Undeclared exception!
      try { 
        strBuilder2.insert(57, charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 57
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("Invalid length: ", "Invalid length: ");
      StrBuilder strBuilder2 = strBuilder1.trim();
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadLeft(2617, 0, 'U');
      StrBuilder strBuilder4 = strBuilder0.append((Object) null);
      StrBuilder strBuilder5 = strBuilder0.appendNull();
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) "Invalid length: ";
      objectArray0[2] = (Object) "Invalid length: ";
      objectArray0[3] = (Object) "Invalid length: ";
      StrBuilder strBuilder6 = new StrBuilder(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder6.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      objectArray0[4] = object0;
      objectArray0[5] = (Object) strBuilder2;
      objectArray0[6] = (Object) strBuilder2;
      objectArray0[7] = null;
      objectArray0[8] = (Object) strBuilder5;
      StrBuilder strBuilder7 = strBuilder5.appendWithSeparators(objectArray0, "Invalid length: ");
      StrBuilder strBuilder8 = strBuilder0.ensureCapacity(2617);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("o;a:T/JX");
      int int0 = (-796);
      char char0 = 'I';
      StrBuilder strBuilder1 = strBuilder0.appendPadding((-796), 'I');
      boolean boolean0 = strBuilder0.equals(strBuilder1);
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      int int1 = strBuilder0.indexOf((StrMatcher) strMatcher_TrimMatcher0);
      StrBuilder strBuilder2 = strBuilder0.replaceFirst((StrMatcher) strMatcher_TrimMatcher0, "o;a:T/JX");
      // Undeclared exception!
      try { 
        strBuilder0.append("o;a:T/JX", 697, 697);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      int int0 = (-2377);
      StrBuilder strBuilder0 = new StrBuilder((-2377));
      StrBuilder strBuilder1 = strBuilder0.clear();
      Reader reader0 = strBuilder0.asReader();
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      char char0 = 'p';
      StrBuilder strBuilder2 = strBuilder0.trim();
      StrBuilder strBuilder3 = strBuilder2.append('p');
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("java.specification.vendor");
      StrMatcher strMatcher1 = StrMatcher.charMatcher('p');
      int int1 = strBuilder0.indexOf((StrMatcher) strMatcher_TrimMatcher0);
      StrBuilder strBuilder4 = strBuilder0.append('p');
      // Undeclared exception!
      try { 
        strBuilder4.setLength((-2377));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2377
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[5];
      charArray0[0] = 'c';
      charArray0[1] = '2';
      charArray0[2] = 'q';
      charArray0[3] = '0';
      charArray0[4] = '>';
      strBuilder0.buffer = charArray0;
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((-144));
      strBuilder_StrBuilderWriter0.close();
      StrBuilder strBuilder1 = new StrBuilder("length must be valid");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset(charArray0);
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "");
      String string0 = strBuilder2.toString();
      StrBuilder strBuilder3 = strBuilder0.appendNewLine();
      String string1 = strBuilder_StrBuilderTokenizer0.getContent();
      boolean boolean1 = strBuilder2.contains("\uFF70java.lang.String@0000000007");
      strBuilder_StrBuilderReader0.close();
      StrBuilder strBuilder4 = strBuilder1.deleteAll("\uFF702q0>");
      boolean boolean2 = strBuilder3.equalsIgnoreCase(strBuilder0);
      Reader reader0 = strBuilder3.asReader();
      StringBuffer stringBuffer0 = null;
      try {
        stringBuffer0 = new StringBuffer((CharSequence) null);
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1173);
      boolean boolean0 = strBuilder0.contains("}OmFYY");
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(", '");
      boolean boolean0 = strBuilder0.isEmpty();
      Reader reader0 = strBuilder0.asReader();
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher((String) null);
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher((char[]) null);
      StrMatcher strMatcher3 = StrMatcher.charSetMatcher((char[]) null);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(57);
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder1.clear();
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder1);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      StrBuilder strBuilder4 = strBuilder1.replace(strMatcher0, "V", 0, 0, 1149);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(";41T.th>B-");
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(0);
      StrBuilder strBuilder2 = strBuilder0.insert(0, (double) 0);
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight((Object) ";41T.th>B-", 2155, '');
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 42
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("@?fn~Hh'lo");
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) "";
      objectArray0[1] = (Object) "";
      objectArray0[2] = (Object) "@?fn~Hh'lo";
      String string0 = "";
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators(objectArray0, "");
      int int0 = strBuilder0.length();
      // Undeclared exception!
      try { 
        strBuilder2.setCharAt(91, '!');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 91
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      String string0 = "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter";
      int int0 = (-97);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter", 0, (-97));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      int int0 = 3;
      StrBuilder strBuilder0 = new StrBuilder(3);
      String string0 = "!,j";
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("!,j", "!,j");
      StrBuilder strBuilder2 = strBuilder0.setNewLineText("");
      // Undeclared exception!
      try { 
        strBuilder2.setCharAt(0, 'C');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      Integer integer0 = new Integer((-20));
      boolean boolean0 = strBuilder0.endsWith("");
      StrBuilder strBuilder1 = new StrBuilder("");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("", 0, (int) integer0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder strBuilder1 = strBuilder0.append(1.0);
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterChar('a');
      StrBuilder strBuilder2 = strBuilder0.append(false);
      StrBuilder strBuilder3 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, (String) null);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrBuilder strBuilder4 = strBuilder0.deleteFirst("");
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      int int0 = (-564);
      StrBuilder strBuilder0 = new StrBuilder((-564));
      int int1 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.insert(261, 261);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 261
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendPadding((-791), 'T');
      StrBuilder strBuilder2 = strBuilder1.appendNewLine();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      int int0 = strBuilder0.lastIndexOf('t', (-791));
      StrTokenizer strTokenizer0 = strBuilder1.asTokenizer();
      StrBuilder strBuilder3 = strBuilder1.append(strBuilder0);
      boolean boolean1 = strBuilder2.equals((Object) "");
      // Undeclared exception!
      try { 
        strBuilder2.validateIndex(1990);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1990
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-607));
      StringBuffer stringBuffer0 = new StringBuffer();
      String string0 = strBuilder0.midString(0, 458);
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((char[]) null, 458, (-607));
      StringBuffer stringBuffer1 = stringBuffer0.append(4788L);
      char[] charArray0 = null;
      StrBuilder strBuilder2 = strBuilder0.deleteAll("7^=]v^;L}{#Em,:';`");
      int int0 = (-4260);
      // Undeclared exception!
      try { 
        strBuilder1.setCharAt((-47), 'n');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -47
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      int int0 = strBuilder0.validateRange(0, 0);
      String string0 = strBuilder0.substring(0, 0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2);
      int int0 = strBuilder0.indexOf('l');
      char[] charArray0 = new char[0];
      char[] charArray1 = strBuilder0.getChars(charArray0);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('l');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      int int1 = 1093;
      strBuilder_StrBuilderWriter0.write(1093);
      strBuilder_StrBuilderWriter0.flush();
      // Undeclared exception!
      try { 
        strBuilder0.insert((-3284), 'Y');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3284
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(4);
      String string0 = strBuilder0.toString();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[2];
      char char0 = 'e';
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrBuilder strBuilder2 = strBuilder1.ensureCapacity(4);
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        strBuilder2.append(stringBuffer0, 4, 4);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2941);
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0, 2941);
      StrBuilder strBuilder1 = strBuilder0.replaceAll('N', 'N');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      char[] charArray0 = new char[8];
      charArray0[0] = 'N';
      charArray0[1] = 'N';
      charArray0[2] = 'N';
      strBuilder_StrBuilderWriter0.write("");
      charArray0[3] = 'N';
      charArray0[4] = 'N';
      charArray0[5] = 'N';
      charArray0[6] = 'N';
      charArray0[7] = 'N';
      strBuilder_StrBuilderWriter0.write(charArray0);
      char[] charArray1 = strBuilder1.getChars(charArray0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.deleteAll('*');
      int int0 = strBuilder0.lastIndexOf('*', 115);
      char[] charArray0 = new char[9];
      charArray0[0] = '*';
      charArray0[1] = 'D';
      charArray0[2] = '*';
      charArray0[3] = '*';
      charArray0[4] = '*';
      charArray0[5] = '*';
      charArray0[6] = '*';
      charArray0[7] = '*';
      charArray0[8] = '*';
      // Undeclared exception!
      try { 
        strBuilder1.getChars(0, (-1662), charArray0, 115);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1662
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      int int0 = strBuilder0.indexOf('3', 0);
      StrBuilder strBuilder1 = strBuilder0.append(false);
      int int1 = strBuilder1.indexOf('3', 0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      char[] charArray0 = new char[5];
      charArray0[0] = '3';
      charArray0[1] = '3';
      charArray0[2] = '3';
      charArray0[3] = '3';
      charArray0[4] = '3';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 0, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(false);
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft(0, 9, 'h');
      int int0 = strBuilder0.indexOf('-');
      StrBuilder strBuilder3 = strBuilder1.insert(4, (long) 0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-510));
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      String string0 = "w:Kz\\`#k<we?";
      StrBuilder strBuilder2 = strBuilder1.setNullText("w:Kz`#k<we?");
      String string1 = strBuilder2.leftString(2);
      int int0 = strBuilder0.lastIndexOf('p');
      String string2 = strBuilder1.toString();
      StrBuilder strBuilder3 = strBuilder1.appendFixedWidthPadLeft((-510), (-1), 'p');
      StrBuilder strBuilder4 = strBuilder3.deleteFirst("w:Kz`#k<we?");
      boolean boolean0 = strBuilder1.endsWith("w:Kz`#k<we?");
      char[] charArray0 = strBuilder4.toCharArray();
      // Undeclared exception!
      try { 
        strBuilder3.append(charArray0, (-1), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("(");
      String string0 = "y";
      StringBuffer stringBuffer0 = new StringBuffer("y");
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0, 0, 0);
      int int1 = 2065;
      char[] charArray0 = strBuilder0.toCharArray(0, 2065);
      String string1 = strBuilder0.midString(48, 2065);
      StrBuilder strBuilder2 = strBuilder0.append((-1955.215F));
      String string2 = "";
      StrBuilder strBuilder3 = strBuilder0.deleteFirst("");
      // Undeclared exception!
      try { 
        strBuilder3.appendFixedWidthPadRight((Object) stringBuffer0, 48, 'u');
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("_^q'~7o)*Ft%q");
      StringBuffer stringBuffer0 = new StringBuffer("qfy_!NQ\"]/6|kVU(Z");
      int int0 = 3;
      String string0 = null;
      StrBuilder strBuilder1 = strBuilder0.insert(3, (String) null);
      int int1 = 31;
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 0, 31);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("v/l0@~EQ<TwQ.~");
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.minimizeCapacity();
      StrTokenizer strTokenizer0 = strBuilder2.asTokenizer();
      char char0 = '}';
      StrBuilder strBuilder3 = strBuilder0.replaceFirst('}', '}');
      int int0 = 44;
      // Undeclared exception!
      try { 
        strBuilder2.insert(44, 287.04);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 44
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2270);
      StrBuilder strBuilder1 = strBuilder0.trim();
      char[] charArray0 = new char[4];
      charArray0[0] = '#';
      charArray0[1] = 'W';
      charArray0[2] = 'P';
      charArray0[3] = 'G';
      int int0 = 1328;
      // Undeclared exception!
      try { 
        strBuilder0.insert(2270, charArray0, 1328, 2270);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2270
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(48);
      // Undeclared exception!
      try { 
        strBuilder1.delete(724, 724);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      boolean boolean0 = linkedList0.add((Object) strBuilder0);
      StrBuilder strBuilder1 = new StrBuilder();
      boolean boolean1 = linkedList0.add((Object) strBuilder1);
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Collection) linkedList0, "c<*FH$3B0V(V3(0");
      String string0 = strBuilder0.rightString(743);
      StrBuilder strBuilder3 = strBuilder0.replaceAll('Q', '=');
      StrBuilder strBuilder4 = strBuilder1.insert(0, "java.awt.graphicsenv");
      StrBuilder strBuilder5 = strBuilder4.append((Object) "");
      char[] charArray0 = new char[5];
      ListIterator<Object> listIterator0 = linkedList0.listIterator();
      charArray0[0] = 'Q';
      charArray0[1] = 'Q';
      charArray0[2] = '=';
      charArray0[3] = 'Q';
      charArray0[4] = 'v';
      char[] charArray1 = strBuilder1.getChars(charArray0);
      boolean boolean2 = strBuilder1.equals(strBuilder2);
      StrBuilder strBuilder6 = strBuilder2.append('v');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder3.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      String string0 = "B `UX?Ge^la9";
      StrBuilder strBuilder0 = new StrBuilder("B `UX?Ge^la9");
      Reader reader0 = strBuilder0.asReader();
      int int0 = strBuilder0.indexOf(", Length: 0");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      int int1 = (-3886);
      int int2 = 2036;
      // Undeclared exception!
      try { 
        strBuilder0.replace(strMatcher0, ", Length: 0", (-3886), 2036, (-3886));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3886
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append("&Y6zB#m");
      int int0 = 2749;
      // Undeclared exception!
      try { 
        strBuilder1.insert(2749, 't');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2749
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(32);
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst((StrMatcher) strMatcher_TrimMatcher0, "startIndex must be valid");
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      int int0 = strBuilder1.indexOf(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder0.insert(32, "jy?)jF");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-3941));
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      char[] charArray0 = new char[5];
      charArray0[0] = '4';
      charArray0[1] = '7';
      charArray0[2] = '|';
      charArray0[3] = '1';
      charArray0[4] = 't';
      // Undeclared exception!
      try { 
        strBuilder1.insert(108, charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 108
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      int int0 = 9;
      StrBuilder strBuilder0 = new StrBuilder(9);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StringBuffer stringBuffer0 = new StringBuffer();
      int int1 = Integer.MAX_VALUE;
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 9, Integer.MAX_VALUE);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("y-{W@/Q");
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0, 0);
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
      // Undeclared exception!
      try { 
        strBuilder1.deleteCharAt((-1176));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1176
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.append(0);
      char[] charArray0 = strBuilder0.toCharArray();
      int int0 = 0;
      StrBuilder strBuilder2 = strBuilder1.append(strBuilder0, 0, 0);
      StrBuilder strBuilder3 = strBuilder0.deleteAll("1.6");
      StrBuilder strBuilder4 = strBuilder1.deleteAll('1');
      int int1 = 452;
      StrBuilder strBuilder5 = strBuilder3.ensureCapacity(452);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      int int2 = strBuilder3.indexOf(strMatcher0, (-3272));
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('1');
      StrBuilder strBuilder6 = strBuilder5.replaceFirst((StrMatcher) strMatcher_CharMatcher0, "1.6");
      StrBuilder strBuilder7 = strBuilder0.replaceFirst('1', 'U');
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 452, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      Object[] objectArray0 = new Object[4];
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder strBuilder1 = strBuilder0.append('2');
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      objectArray0[0] = object0;
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) strBuilder0;
      objectArray0[3] = (Object) strBuilder0;
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators(objectArray0, "line.separator");
      LinkedList<StrBuilder> linkedList0 = new LinkedList<StrBuilder>();
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators((Collection) linkedList0, "` ),pa)}QD^1k|F ?73");
      StrBuilder strBuilder4 = strBuilder2.appendNull();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      StrBuilder strBuilder5 = strBuilder1.append(strBuilder0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[5];
      charArray0[0] = 'U';
      charArray0[1] = 'C';
      charArray0[2] = '8';
      charArray0[3] = 'O';
      charArray0[4] = '@';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 5, 5);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      String string0 = "UdU 8W5Q~c,aH";
      StrBuilder strBuilder0 = new StrBuilder("UdU 8W5Q~c,aH");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('F', 'M');
      StrBuilder strBuilder2 = strBuilder1.setNullText("UdU 8W5Q~c,aH");
      String string1 = "6\"l85n:N#d";
      // Undeclared exception!
      try { 
        strBuilder0.insert((-109), 's');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -109
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[4];
      charArray0[0] = 'p';
      charArray0[1] = 'H';
      charArray0[2] = '.';
      charArray0[3] = '~';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 108, (-1477));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      int int0 = 0;
      String string0 = strBuilder0.rightString(0);
      StrBuilder strBuilder1 = strBuilder0.deleteCharAt(3);
      StringBuffer stringBuffer0 = new StringBuffer(9);
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 3, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = '/';
      char[] charArray0 = new char[8];
      charArray0[0] = '/';
      charArray0[1] = '/';
      charArray0[2] = '/';
      charArray0[3] = '/';
      charArray0[4] = '/';
      charArray0[5] = '/';
      charArray0[6] = '/';
      charArray0[7] = '/';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 5, (-1366));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: -1366
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(object0, (-1), 'Y');
      StrTokenizer strTokenizer0 = strBuilder1.asTokenizer();
      StrBuilder strBuilder2 = strBuilder0.replaceAll('q', 'q');
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder2.append(charArray0, 0, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      String string0 = "cLt>ZcVa";
      StrBuilder strBuilder0 = new StrBuilder("cLt>ZcVa");
      int int0 = 0;
      char char0 = '-';
      StrBuilder strBuilder1 = strBuilder0.appendPadding(0, '-');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      char[] charArray0 = new char[8];
      charArray0[0] = '-';
      charArray0[1] = '-';
      charArray0[2] = '*';
      charArray0[3] = '-';
      charArray0[4] = '-';
      charArray0[5] = '-';
      charArray0[6] = '-';
      charArray0[7] = '-';
      strBuilder_StrBuilderWriter0.write(charArray0, 0, 0);
      strBuilder_StrBuilderWriter0.write("cLt>ZcVa", 0, 0);
      int int1 = (-487);
      // Undeclared exception!
      try { 
        CharBuffer.wrap((CharSequence) "cLt>ZcVa", 0, (-487));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(48);
      String string0 = strBuilder0.midString(48, 48);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("<^N>WW=\"ViJfun", 48, (-2971));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[9];
      charArray0[0] = '';
      charArray0[1] = '{';
      charArray0[2] = '&';
      charArray0[3] = 'S';
      charArray0[4] = '5';
      charArray0[5] = '>';
      charArray0[6] = '[';
      charArray0[7] = 'W';
      charArray0[8] = ']';
      strBuilder_StrBuilderWriter0.write(charArray0, 0, 0);
      int int0 = strBuilder0.length();
      strBuilder_StrBuilderWriter0.flush();
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      int int1 = strBuilder0.lastIndexOf(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[1];
      charArray0[0] = '9';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 3189, 3189);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 3189
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder strBuilder1 = strBuilder0.replaceAll("", "");
      int int0 = 0;
      // Undeclared exception!
      try { 
        strBuilder1.deleteCharAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      String string0 = "";
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      int int0 = (-20);
      int int1 = new Integer((-20));
      StrBuilder strBuilder2 = strBuilder1.deleteAll("");
      StringBuffer stringBuffer0 = strBuilder2.toStringBuffer();
      StrBuilder strBuilder3 = strBuilder1.replaceAll("", "");
      // Undeclared exception!
      try { 
        strBuilder3.insert((-20), (float) (-20));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -20
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('%', '%');
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder2 = strBuilder1.append(stringBuffer0);
      Writer writer0 = strBuilder2.asWriter();
      // Undeclared exception!
      try { 
        strBuilder0.insert(4479, "Invalid offset: ");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 4479
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.class.version");
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(333);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 333
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('');
      char[] charArray0 = new char[7];
      charArray0[0] = '';
      charArray0[1] = '}';
      charArray0[2] = '';
      charArray0[3] = '';
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "1.6");
      charArray0[4] = '';
      charArray0[5] = '';
      charArray0[6] = '';
      StrBuilder strBuilder2 = strBuilder0.insert(0, charArray0);
      char[] charArray1 = new char[2];
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher("");
      charArray1[0] = 'R';
      charArray1[1] = 'F';
      int int0 = strMatcher0.isMatch(charArray1, 1244, 2, 2);
      int int1 = strBuilder0.indexOf(strMatcher0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setTrimmerMatcher(strMatcher2);
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators((Iterator) strTokenizer0, "");
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      char char0 = 'V';
      StrBuilder strBuilder1 = strBuilder0.append('V');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
      int int0 = (-1080);
      // Undeclared exception!
      try { 
        strBuilder0.charAt((-1080));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1080
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(32);
      char[] charArray0 = new char[8];
      charArray0[0] = 't';
      charArray0[1] = 'R';
      charArray0[2] = 'n';
      charArray0[3] = 'O';
      charArray0[4] = '/';
      charArray0[5] = 'R';
      charArray0[6] = 'V';
      charArray0[7] = '/';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(32, 5, charArray0, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 5
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(117);
      int int0 = 3;
      String string0 = "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter";
      int int1 = (-2263);
      int int2 = 3669;
      // Undeclared exception!
      try { 
        strBuilder0.insert(117, (-1.0));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 117
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      int int0 = (-333);
      StrBuilder strBuilder0 = new StrBuilder((-333));
      // Undeclared exception!
      try { 
        strBuilder0.charAt((-2183));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2183
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2702);
      int int0 = 0;
      char char0 = 'k';
      StrBuilder strBuilder1 = strBuilder0.insert(0, 'k');
      // Undeclared exception!
      try { 
        strBuilder1.toCharArray(2702, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1166), '&');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1166
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = 202;
      char char0 = 'i';
      String string1 = "|=x.H89T~9ov.J";
      int int1 = 117;
      char[] charArray0 = new char[3];
      // Undeclared exception!
      try { 
        strBuilder0.charAt(202);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 202
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('e', 'y');
      boolean boolean1 = strBuilder0.contains('y');
      StrBuilder strBuilder2 = strBuilder0.append(2893L);
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      boolean boolean2 = strBuilder2.contains(strMatcher0);
      StrBuilder strBuilder3 = strBuilder0.append((Object) "?wGY}hQ7hE8");
      int int1 = strBuilder_StrBuilderReader0.read();
      StrBuilder strBuilder4 = strBuilder1.appendFixedWidthPadLeft((-1), 0, '3');
      StrBuilder strBuilder5 = strBuilder4.appendFixedWidthPadRight(0, 0, '~');
      StrBuilder strBuilder6 = strBuilder1.appendPadding(50, '');
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((-2758.48614511));
      StrBuilder strBuilder2 = strBuilder1.replaceFirst("0u}33*)F", "");
      StrBuilder strBuilder3 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder4 = new StrBuilder("77<M.&yxHn1$]55x");
      char[] charArray0 = new char[2];
      charArray0[0] = '4';
      charArray0[1] = '#';
      // Undeclared exception!
      try { 
        strBuilder4.getChars(0, 1548, charArray0, 1548);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1548
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      char[] charArray0 = new char[6];
      charArray0[0] = 'u';
      charArray0[1] = 'H';
      charArray0[2] = 't';
      StrBuilder strBuilder1 = strBuilder0.replaceAll("org.apache.commons.lang.text.StrBuilder", "org.apache.commons.lang.text.StrBuilder");
      charArray0[3] = '~';
      StrBuilder strBuilder2 = strBuilder0.insert(0, "1.4");
      charArray0[4] = '6';
      charArray0[5] = 'E';
      StrBuilder strBuilder3 = strBuilder0.insert(0, charArray0);
      StrBuilder strBuilder4 = strBuilder3.appendNewLine();
      StrBuilder strBuilder5 = strBuilder0.replaceFirst('r', 'r');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder5.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrBuilder strBuilder6 = strBuilder5.setLength(1160);
      StrTokenizer strTokenizer1 = strBuilder_StrBuilderTokenizer0.setDelimiterMatcher(strMatcher0);
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 0, 0);
      StrBuilder strBuilder7 = strBuilder5.append(charArray0);
      StrBuilder strBuilder8 = strBuilder7.minimizeCapacity();
      StrBuilder strBuilder9 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder9.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(89L);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[9];
      charArray0[0] = 'M';
      charArray0[1] = '@';
      charArray0[2] = 'W';
      charArray0[3] = 'Y';
      charArray0[4] = '#';
      charArray0[5] = 'm';
      charArray0[6] = 'k';
      charArray0[7] = 'f';
      charArray0[8] = '0';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 4, 4);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      String string0 = "lg#L6UJN5]G#";
      StrBuilder strBuilder2 = strBuilder1.replaceAll("lg#L6UJN5]G#", "lg#L6UJN5]G#");
      StrBuilder strBuilder3 = strBuilder0.append(true);
      char[] charArray0 = new char[8];
      charArray0[0] = 'O';
      charArray0[1] = 'F';
      charArray0[2] = 'm';
      charArray0[3] = '`';
      charArray0[4] = 'y';
      charArray0[5] = '>';
      charArray0[6] = '|';
      charArray0[7] = '%';
      StrBuilder strBuilder4 = strBuilder1.append(charArray0);
      int int0 = (-355);
      // Undeclared exception!
      try { 
        strBuilder1.insert(1777, (double) 1777);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1777
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance("length must be valid");
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "length must be valid");
      char[] charArray0 = new char[3];
      charArray0[0] = '.';
      charArray0[1] = '!';
      charArray0[2] = 'v';
      strBuilder0.buffer = charArray0;
      // Undeclared exception!
      try { 
        strBuilder0.replaceAll("Invalid startIndex: ", "length must be valid");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('q', 'e');
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      StrBuilder strBuilder2 = strBuilder1.deleteAll('5');
      boolean boolean0 = strBuilder0.contains('');
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      String string0 = strBuilder0.toString();
      StrBuilder strBuilder3 = strBuilder2.replaceAll('5', '');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      char[] charArray0 = new char[7];
      charArray0[0] = '';
      charArray0[1] = '';
      charArray0[2] = '';
      charArray0[3] = '';
      charArray0[4] = '';
      charArray0[5] = '';
      charArray0[6] = '';
      strBuilder_StrBuilderWriter0.write(charArray0);
      StrBuilder strBuilder4 = strBuilder3.appendWithSeparators((Iterator) strTokenizer0, "{JPkJXqbA%34~]u");
      char[] charArray1 = strBuilder0.toCharArray();
      StrBuilder strBuilder5 = strBuilder0.setLength(2357);
      StrBuilder strBuilder6 = strBuilder4.appendNull();
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.getNullText();
      int int0 = strBuilder0.lastIndexOf((String) null, 31);
      // Undeclared exception!
      try { 
        strBuilder0.setLength((-2030));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2030
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      String string0 = strBuilder0.leftString(2);
      char[] charArray0 = new char[8];
      charArray0[0] = '`';
      charArray0[1] = 'a';
      charArray0[2] = '(';
      charArray0[3] = ')';
      charArray0[4] = 't';
      charArray0[5] = 'O';
      charArray0[6] = '`';
      charArray0[7] = '`';
      // Undeclared exception!
      try { 
        strBuilder0.insert(2, charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[3];
      charArray0[0] = ';';
      charArray0[1] = '/';
      charArray0[2] = 'N';
      strBuilder_StrBuilderWriter0.write(charArray0);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      int int0 = (-553);
      StrBuilder strBuilder0 = new StrBuilder((-553));
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder1.append(3238);
      char[] charArray0 = new char[2];
      charArray0[0] = 'I';
      charArray0[1] = 'E';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      String string0 = "java.awt.fonts";
      int int1 = (-1317);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("java.awt.fonts");
      // Undeclared exception!
      try { 
        strBuilder1.replace((StrMatcher) strMatcher_CharSetMatcher0, "java.awt.fonts", (-553), (-1317), (-553));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -553
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-511));
      StrBuilder strBuilder1 = new StrBuilder("F^U6");
      StrBuilder strBuilder2 = strBuilder1.append("F^U6");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      char[] charArray0 = new char[2];
      charArray0[0] = 'G';
      charArray0[1] = 'v';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder3 = strBuilder1.deleteFirst(strMatcher0);
      int int0 = 1583;
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, (-511), 1583);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      String string0 = "imr";
      StrBuilder strBuilder0 = new StrBuilder("imr");
      int int0 = 2;
      StrBuilder strBuilder1 = strBuilder0.insert(2, false);
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder1;
      objectArray0[2] = (Object) strBuilder0;
      objectArray0[3] = (Object) strBuilder0;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.next();
      objectArray0[4] = (Object) "imfalser";
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators(objectArray0, "imr");
      // Undeclared exception!
      try { 
        strBuilder2.insert((-316), 921.1531F);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -316
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[8];
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(object0, (-3941), 'e');
      charArray0[0] = '8';
      charArray0[1] = 'F';
      charArray0[2] = 'X';
      charArray0[3] = 'W';
      charArray0[4] = '^';
      charArray0[5] = 'h';
      charArray0[6] = ',';
      charArray0[7] = 'Y';
      char[] charArray1 = strBuilder0.getChars(charArray0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(0L);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1973);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip((-266L));
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendPadding(0, '\'');
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder2 = strBuilder1.replace(0, 0, "");
      StrBuilder strBuilder3 = strBuilder1.append(stringBuffer0);
      StrBuilder strBuilder4 = strBuilder1.appendFixedWidthPadRight(0, 0, '\'');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((-235));
      char[] charArray0 = new char[3];
      charArray0[0] = '\'';
      charArray0[1] = '\'';
      charArray0[2] = '\'';
      StrBuilder strBuilder5 = strBuilder0.append(charArray0, 0, 1);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder3.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read(charArray0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.startsWith("");
      char[] charArray0 = new char[8];
      charArray0[0] = 'J';
      charArray0[1] = 'd';
      charArray0[2] = 'M';
      charArray0[3] = 'v';
      charArray0[4] = ' ';
      charArray0[5] = 'j';
      charArray0[6] = '';
      charArray0[7] = 'Q';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.deleteAll((StrMatcher) strMatcher_CharSetMatcher0);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
      boolean boolean0 = strBuilder0.startsWith("`_/P%z$");
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      int int0 = strBuilder0.length();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.next();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      char[] charArray0 = new char[5];
      charArray0[0] = 'K';
      charArray0[1] = 'O';
      charArray0[2] = 'O';
      charArray0[3] = '{';
      charArray0[4] = ';';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_NoMatcher0, 166);
      int int1 = strBuilder0.length();
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      int int0 = (-917);
      StrBuilder strBuilder0 = new StrBuilder((-917));
      Reader reader0 = strBuilder0.asReader();
      String string0 = "{}";
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) null, "{}");
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "{}");
      String string1 = "org.apache.commons.lang.text.StrBuilder$StrBuilderReader";
      // Undeclared exception!
      try { 
        stringBuffer0.insert((-917), (String) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -917
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      int int0 = (-1691);
      char[] charArray0 = null;
      StrBuilder strBuilder2 = strBuilder1.append((char[]) null);
      // Undeclared exception!
      try { 
        strBuilder2.substring((-1691), (-1691));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1691
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Hlbs=)KAL");
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.insert(0, (char[]) null, 0, 0);
      // Undeclared exception!
      try { 
        strBuilder1.insert(97, (long) 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 97
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      // Undeclared exception!
      try { 
        strBuilder1.replace((-1122), (-828), "aKb;lI;b");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1122
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((char[]) null);
      strBuilder_StrBuilderWriter0.close();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder1 = strBuilder0.append(false);
      StrBuilder strBuilder2 = strBuilder1.deleteCharAt(0);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[0];
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(102);
      StrBuilder strBuilder1 = strBuilder0.appendPadding(2890, '>');
      StrBuilder strBuilder2 = strBuilder1.clear();
      boolean boolean0 = strBuilder0.equals((Object) "");
      StrBuilder strBuilder3 = strBuilder0.ensureCapacity(102);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder3.new StrBuilderReader();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher(':');
      int int0 = 97;
      int int1 = strBuilder0.indexOf(strMatcher0, 97);
      char[] charArray0 = new char[3];
      charArray0[0] = 'R';
      charArray0[1] = '>';
      charArray0[2] = '>';
      int int2 = strBuilder_StrBuilderReader0.read(charArray0);
      boolean boolean1 = strBuilder_StrBuilderReader0.markSupported();
      // Undeclared exception!
      try { 
        strBuilder0.insert(102, (float) 2890);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 102
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      boolean boolean0 = strBuilder0.equals((Object) "");
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(57);
      StrBuilder strBuilder2 = strBuilder0.replaceFirst("Qz}{Nx&jRs", (String) null);
      StringBuffer stringBuffer0 = new StringBuffer(0);
      StrBuilder strBuilder3 = strBuilder0.append(stringBuffer0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = new StrBuilder("");
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      int int0 = 1780;
      // Undeclared exception!
      try { 
        strBuilder0.substring(1780);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(2025, 0, '#');
      LinkedList<String> linkedList0 = new LinkedList<String>();
      String string0 = "os.version";
      StrBuilder strBuilder2 = strBuilder0.append((float) 2025);
      StrBuilder strBuilder3 = strBuilder0.replaceFirst((String) null, (String) null);
      StrBuilder strBuilder4 = strBuilder0.replaceFirst("os.version", "os.version");
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      int int1 = strBuilder4.lastIndexOf(strMatcher0, 0);
      StrBuilder strBuilder5 = strBuilder1.appendWithSeparators((Collection) linkedList0, "SunOS");
      boolean boolean0 = strBuilder1.contains('m');
      StrBuilder strBuilder6 = strBuilder1.minimizeCapacity();
      Reader reader0 = strBuilder5.asReader();
      StrBuilder strBuilder7 = strBuilder5.append((long) 2025);
      // Undeclared exception!
      try { 
        strBuilder7.setCharAt(2343, 'n');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2343
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.toString();
      StrBuilder strBuilder1 = strBuilder0.append(52.7);
      char char0 = 'n';
      StrBuilder strBuilder2 = strBuilder0.append('n');
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight((Object) "}xFW2_,V1HWxs", (int) 'n', ':');
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid length: ");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0, 57);
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) null, (-2483), '/');
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      int int0 = 822;
      int int1 = 115;
      // Undeclared exception!
      try { 
        strBuilder0.insert(115, (float) 115);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 115
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      StrMatcher strMatcher0 = null;
      int int0 = strBuilder0.lastIndexOf((StrMatcher) null);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1), false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      String string0 = ">:8y~Q";
      StrBuilder strBuilder0 = new StrBuilder(">:8y~Q");
      StrBuilder strBuilder1 = strBuilder0.deleteAll('H');
      char[] charArray0 = strBuilder0.getChars((char[]) null);
      int int0 = 4017;
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex(4017);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 4017
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.append((-1.0F));
      StrBuilder strBuilder2 = strBuilder0.deleteAll((String) null);
      // Undeclared exception!
      try { 
        strBuilder0.append("", 0, 48);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("D}bo)S6X");
      Object object0 = new Object();
      boolean boolean0 = strBuilder0.equals(object0);
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("");
      StrBuilder strBuilder2 = strBuilder1.trim();
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.replaceAll('J', 'o');
      StrMatcher strMatcher1 = StrMatcher.charMatcher('J');
      StrBuilder strBuilder3 = strBuilder0.replaceAll('i', ',');
      int int0 = (-3094);
      // Undeclared exception!
      try { 
        strBuilder3.insert((-3094), false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3094
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.setNewLineText((String) null);
      StrBuilder strBuilder2 = strBuilder0.append((String) null);
      StrBuilder strBuilder3 = strBuilder1.append('X');
      String string0 = strBuilder1.leftString(97);
      StrBuilder strBuilder4 = strBuilder0.deleteFirst('T');
      int int0 = strBuilder0.capacity();
      StrBuilder strBuilder5 = strBuilder3.replaceAll('X', 'X');
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) strBuilder0;
      objectArray0[3] = (Object) strBuilder0;
      objectArray0[4] = (Object) strBuilder0;
      objectArray0[5] = (Object) strBuilder0;
      objectArray0[6] = (Object) strBuilder0;
      StrBuilder strBuilder1 = strBuilder0.append((-2296.0F));
      StrBuilder strBuilder2 = strBuilder1.setNullText("path.separator");
      objectArray0[7] = (Object) strBuilder0;
      StrBuilder strBuilder3 = strBuilder0.append("", 0, 0);
      StrBuilder strBuilder4 = strBuilder0.appendWithSeparators(objectArray0, "");
      StrBuilder strBuilder5 = strBuilder4.minimizeCapacity();
      StrBuilder strBuilder6 = strBuilder5.append(strBuilder0, 2, 2);
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(102);
      // Undeclared exception!
      try { 
        strBuilder0.getChars(0, 0, (char[]) null, 4);
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-2252), (-569.4F));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2252
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.append((String) null, (-272), (-2921));
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteAll('6');
      Reader reader0 = strBuilder1.asReader();
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      int int0 = strBuilder1.indexOf((StrMatcher) null, 1225);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) "");
      Writer writer1 = strBuilder_StrBuilderWriter0.append('R');
      strBuilder_StrBuilderWriter0.close();
      StrBuilder strBuilder3 = strBuilder0.appendNewLine();
      StringBuffer stringBuffer0 = new StringBuffer("");
      StrBuilder strBuilder4 = strBuilder3.append(stringBuffer0);
      StrBuilder strBuilder5 = strBuilder3.append((double) 1225);
      StrBuilder strBuilder6 = strBuilder5.deleteAll('R');
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      char[] charArray0 = new char[2];
      charArray0[0] = 'O';
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      charArray0[1] = 'j';
      char[] charArray1 = strBuilder0.getChars(charArray0);
      StrBuilder strBuilder1 = strBuilder0.delete(0, 0);
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Iterator) null, "([K^O=];I*)`MOy");
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4f*rx&a");
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      int int0 = 0;
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.previous();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('v');
      Reader reader0 = strBuilder1.asReader();
      // Undeclared exception!
      try { 
        strBuilder0.insert(102, true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 102
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[0];
      StrBuilder strBuilder1 = strBuilder0.deleteAll("w@:eAmI%^");
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder2 = strBuilder0.deleteAll(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder0.insert(108, true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 108
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-313));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      String string0 = strBuilder0.getNewLineText();
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) strBuilder_StrBuilderTokenizer0;
      objectArray0[1] = (Object) null;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, (String) null);
      // Undeclared exception!
      try { 
        strBuilder1.validateRange(735, 6637);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      StrBuilder strBuilder1 = strBuilder0.append(object0);
      StrBuilder strBuilder2 = new StrBuilder();
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder2);
      StrBuilder strBuilder4 = strBuilder3.deleteFirst('b');
      int int0 = strBuilder2.lastIndexOf('3');
      StrBuilder strBuilder5 = strBuilder0.append(429.3024F);
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2512));
      String string0 = strBuilder0.rightString((-2512));
      String string1 = strBuilder0.midString((-2512), (-2512));
      StrBuilder strBuilder1 = strBuilder0.append((Object) "");
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance();
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Iterator) strTokenizer0, "file.encoding");
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = "zi/L)^2aJ";
      StrBuilder strBuilder1 = new StrBuilder("zi/L)^2aJ");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrBuilder strBuilder2 = strBuilder1.deleteAll(strMatcher0);
      StrBuilder strBuilder3 = strBuilder2.insert(0, (long) 0);
      StrMatcher strMatcher1 = StrMatcher.stringMatcher((String) null);
      String string1 = strBuilder_StrBuilderTokenizer0.toString();
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, 0, 1083);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder();
      int int0 = 4149;
      StrBuilder strBuilder2 = strBuilder0.append((double) 4149);
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, 4149, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[7];
      charArray0[0] = '.';
      charArray0[1] = '<';
      charArray0[2] = '.';
      charArray0[3] = 'R';
      charArray0[4] = '0';
      charArray0[5] = '4';
      charArray0[6] = '9';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0, 0, 0);
      StrBuilder strBuilder2 = strBuilder0.append((float) 0);
      StrBuilder strBuilder3 = strBuilder0.replace(0, 0, (String) null);
      StrBuilder strBuilder4 = strBuilder0.setNullText("D");
      StrBuilder strBuilder5 = strBuilder0.deleteAll("D");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read(charArray0, 0, 0);
      StrBuilder strBuilder6 = strBuilder4.replaceAll(':', '9');
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[9];
      charArray0[0] = '';
      charArray0[1] = '{';
      charArray0[2] = '&';
      charArray0[3] = 'c';
      charArray0[4] = '5';
      charArray0[5] = '>';
      charArray0[6] = '[';
      charArray0[7] = 'W';
      charArray0[8] = ']';
      strBuilder_StrBuilderWriter0.write(charArray0, 0, 0);
      int int0 = strBuilder0.length();
      strBuilder_StrBuilderWriter0.flush();
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      int int1 = strBuilder0.lastIndexOf(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-26));
      String string0 = "";
      // Undeclared exception!
      try { 
        strBuilder0.insert((-26), "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -26
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrMatcher strMatcher0 = StrMatcher.charMatcher('');
      char[] charArray0 = new char[7];
      charArray0[0] = '';
      charArray0[1] = '}';
      charArray0[2] = '';
      charArray0[3] = '';
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "1.6");
      charArray0[4] = '';
      charArray0[5] = '';
      charArray0[6] = '';
      StrBuilder strBuilder2 = strBuilder0.insert(0, charArray0);
      char[] charArray1 = new char[2];
      StrMatcher.NoMatcher strMatcher_NoMatcher1 = new StrMatcher.NoMatcher();
      charArray1[0] = 'R';
      charArray1[1] = 'F';
      int int0 = strMatcher_NoMatcher0.isMatch(charArray1, 1244, 2, 2);
      int int1 = strBuilder0.indexOf((StrMatcher) strMatcher_NoMatcher0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setTrimmerMatcher(strMatcher_NoMatcher1);
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators((Iterator) strTokenizer0, "");
      StrBuilder strBuilder4 = strBuilder3.replace(strMatcher0, "", 0, 2, 2);
      StrBuilder strBuilder5 = strBuilder4.replaceFirst("", "java.specification.name");
      String string0 = strBuilder2.leftString(1);
      StringBuffer stringBuffer0 = strBuilder2.toStringBuffer();
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("K<R]++8.u6+;");
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.append(false);
      Integer integer0 = new Integer(0);
      StrBuilder strBuilder3 = strBuilder0.append((Object) integer0);
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadLeft(34, 44, ',');
      StrBuilder strBuilder5 = strBuilder4.deleteCharAt(3);
      StrBuilder strBuilder6 = strBuilder3.replaceAll("K<R]++8.u6+;", "");
      StrBuilder strBuilder7 = strBuilder6.setNullText("");
      StrBuilder strBuilder8 = strBuilder6.insert(0, "");
      int int0 = strBuilder1.capacity();
      Integer integer1 = new Integer(0);
      StrMatcher strMatcher1 = StrMatcher.charMatcher('F');
      StrBuilder strBuilder9 = strBuilder8.deleteFirst(',');
      int int1 = strBuilder6.indexOf('8', 44);
      StrBuilder strBuilder10 = strBuilder8.deleteFirst("startIndex must be valid");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder3.new StrBuilderTokenizer();
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize((char[]) null, (-1), (int) integer1);
      String string0 = strBuilder7.leftString(34);
      boolean boolean0 = strBuilder5.contains('W');
      StrBuilder strBuilder11 = strBuilder0.ensureCapacity(4);
      StrBuilder strBuilder12 = strBuilder11.insert((int) integer1, (Object) "K<R]++8.u6+;");
      StrBuilder strBuilder13 = strBuilder6.appendPadding((-1), '=');
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("cw/.anG");
      StrBuilder strBuilder1 = strBuilder0.appendPadding(1932, '(');
      StrBuilder strBuilder2 = strBuilder0.append(629);
      StrBuilder strBuilder3 = strBuilder0.insert(32, true);
      StrBuilder strBuilder4 = strBuilder2.setNullText("J#JilN!>1:l4`");
      StrBuilder strBuilder5 = strBuilder0.ensureCapacity(1);
      String string0 = strBuilder2.getNewLineText();
      char[] charArray0 = strBuilder2.toCharArray();
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      char[] charArray0 = new char[7];
      charArray0[0] = 'k';
      charArray0[1] = 'd';
      StrBuilder strBuilder2 = strBuilder1.appendNewLine();
      charArray0[2] = 'k';
      charArray0[3] = '?';
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrBuilder strBuilder3 = strBuilder1.deleteFirst(strMatcher0);
      charArray0[4] = '*';
      charArray0[5] = '2';
      charArray0[6] = '7';
      StrMatcher strMatcher1 = StrMatcher.doubleQuoteMatcher();
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher(charArray0);
      boolean boolean0 = strBuilder0.contains(strMatcher1);
      StrBuilder strBuilder4 = strBuilder1.append(charArray0, 0, 0);
      StrBuilder strBuilder5 = strBuilder4.delete(0, 0);
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder6 = strBuilder4.appendFixedWidthPadLeft(0, 0, 'x');
  }
}
