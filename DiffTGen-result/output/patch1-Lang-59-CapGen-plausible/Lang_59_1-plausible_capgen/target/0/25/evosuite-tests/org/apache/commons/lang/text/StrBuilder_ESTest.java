/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 31 15:13:45 GMT 2020
 */

package org.apache.commons.lang.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.Writer;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.NoSuchElementException;
import java.util.stream.IntStream;
import org.apache.commons.lang.text.StrBuilder;
import org.apache.commons.lang.text.StrMatcher;
import org.apache.commons.lang.text.StrTokenizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StrBuilder_ESTest extends StrBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.size();
      char char0 = 'X';
      int int1 = strBuilder0.lastIndexOf('X', 0);
      StringBuffer stringBuffer0 = null;
      try {
        stringBuffer0 = new StringBuffer((CharSequence) null);
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("i>J[aK");
      int int0 = (-3327);
      strBuilder0.size = (-3327);
      char char0 = ':';
      // Undeclared exception!
      try { 
        strBuilder0.append(':');
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3327
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      String[] stringArray0 = strTokenizer0.getTokenArray();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      boolean boolean0 = strBuilder1.equals(strBuilder0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = 'a';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) "QF", 1577, 'a');
      StrBuilder strBuilder2 = strBuilder1.appendNull();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("'; the SystemUtils property value will default to null.");
      int int0 = strBuilder1.indexOf(strMatcher0);
      char[] charArray0 = new char[8];
      charArray0[0] = 'a';
      charArray0[1] = 'a';
      charArray0[2] = ':';
      charArray0[3] = 'a';
      charArray0[4] = 'a';
      charArray0[5] = 'a';
      charArray0[6] = 'a';
      // Undeclared exception!
      try { 
        strBuilder1.insert(1577, charArray0, 1577, 52);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: 1577
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      char[] charArray0 = new char[9];
      charArray0[0] = 'N';
      charArray0[1] = 't';
      charArray0[2] = '?';
      charArray0[3] = 'Q';
      charArray0[4] = 'm';
      charArray0[5] = '\"';
      charArray0[6] = '-';
      charArray0[7] = '\\';
      charArray0[8] = 'm';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst((StrMatcher) strMatcher_NoMatcher0);
      char[] charArray1 = new char[1];
      charArray1[0] = 't';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("eL|J]FWlt");
      strBuilder0.buffer = charArray1;
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_NoMatcher0, 37);
      int int1 = strBuilder0.length();
      int int2 = strBuilder0.indexOf('-');
      int int3 = strBuilder0.indexOf('.');
      StrBuilder strBuilder2 = strBuilder0.ensureCapacity((-1));
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance();
      StrBuilder strBuilder0 = new StrBuilder("wKQsPPmrj`C{((,g");
      char[] charArray0 = new char[3];
      charArray0[0] = 'y';
      charArray0[1] = '9';
      charArray0[2] = 'H';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 3, 34);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 34
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      String string0 = strBuilder0.rightString(34);
      Reader reader0 = strBuilder0.asReader();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder2 = strBuilder0.insert(34, 'X');
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.deleteAll('x');
      String string0 = strBuilder1.toString();
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft(0, 0, 'Y');
      String string1 = "5.0";
      StrBuilder strBuilder3 = new StrBuilder("g");
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadLeft((Object) strBuilder2, 0, 'C');
      StrBuilder strBuilder5 = strBuilder2.minimizeCapacity();
      StrBuilder strBuilder6 = strBuilder5.setLength(0);
      StrBuilder strBuilder7 = strBuilder5.setNullText("");
      StrBuilder strBuilder8 = strBuilder2.appendFixedWidthPadLeft(0, 34, 'C');
      int int0 = strBuilder3.indexOf("g");
      int int1 = strBuilder3.lastIndexOf("");
      StrBuilder strBuilder9 = strBuilder4.reverse();
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrBuilder strBuilder10 = strBuilder9.replaceFirst((StrMatcher) strMatcher_NoMatcher0, "T]");
      StrBuilder strBuilder11 = strBuilder0.setNewLineText("Qw:}pR");
      StrBuilder strBuilder12 = strBuilder0.setLength(0);
      StrBuilder strBuilder13 = strBuilder12.appendFixedWidthPadLeft((Object) strBuilder4, 26, 'W');
      char[] charArray0 = new char[1];
      charArray0[0] = 'x';
      // Undeclared exception!
      try { 
        strBuilder4.append(charArray0, 97, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      String string0 = "startIndex must be valid";
      StrBuilder strBuilder0 = new StrBuilder("startIndex must be valid");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) "java.vendor", 540, 'W');
      StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      boolean boolean0 = strBuilder2.contains(strMatcher0);
      int int0 = strBuilder0.indexOf("[cP?jR8&w=:5e~");
      StrBuilder strBuilder3 = strBuilder0.trim();
      StrBuilder strBuilder4 = strBuilder3.deleteFirst("tLl?UH(Dd'\"l?/");
      StrBuilder strBuilder5 = strBuilder0.append(true);
      StrBuilder strBuilder6 = strBuilder5.insert(540, '@');
      boolean boolean1 = strBuilder6.contains(strMatcher0);
      StrBuilder strBuilder7 = strBuilder3.append(0.0);
      String string1 = strBuilder6.getNewLineText();
      // Undeclared exception!
      try { 
        strBuilder2.getChars(2167, 0, (char[]) null, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.insert(0, (long) 0);
      StrBuilder strBuilder2 = strBuilder1.deleteAll('K');
      String string0 = strBuilder2.toString();
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadLeft(0, 0, 'e');
      StrBuilder strBuilder4 = strBuilder3.replaceAll("g", "Invalid length: ");
      int int0 = strBuilder2.indexOf((StrMatcher) null);
      StrBuilder strBuilder5 = strBuilder0.appendFixedWidthPadLeft((Object) strBuilder3, 0, 'C');
      StrBuilder strBuilder6 = strBuilder3.minimizeCapacity();
      StrBuilder strBuilder7 = strBuilder6.setLength(0);
      StrBuilder strBuilder8 = strBuilder6.setNullText("0");
      StrBuilder strBuilder9 = strBuilder3.appendFixedWidthPadLeft(0, 27, 'C');
      int int1 = strBuilder4.indexOf("g");
      StrBuilder strBuilder10 = strBuilder3.replaceFirst('q', 'e');
      int int2 = strBuilder4.lastIndexOf("");
      StrBuilder strBuilder11 = strBuilder5.reverse();
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrBuilder strBuilder12 = strBuilder11.replaceFirst((StrMatcher) strMatcher_NoMatcher0, "T]");
      StrBuilder strBuilder13 = strBuilder0.setNewLineText("Qw:}pR");
      StrBuilder strBuilder14 = strBuilder1.setLength(8);
      StrBuilder strBuilder15 = strBuilder14.appendFixedWidthPadLeft((Object) strBuilder5, 57, 'W');
      char[] charArray0 = new char[1];
      charArray0[0] = 'K';
      // Undeclared exception!
      try { 
        strBuilder5.append(charArray0, 97, 8);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 8
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      int int0 = strBuilder1.indexOf("Nt7_fWukhr<>YN", 705);
      char[] charArray0 = new char[2];
      charArray0[0] = 'Y';
      charArray0[1] = 'q';
      StrBuilder strBuilder2 = strBuilder0.append(charArray0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("iW&z6C%1", "iW&z6C%1");
      int int0 = 32;
      int int1 = 636;
      StrBuilder strBuilder2 = new StrBuilder('N');
      // Undeclared exception!
      try { 
        strBuilder1.setCharAt(32, 'N');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      String string0 = "startIndex must be valid";
      StrBuilder strBuilder0 = new StrBuilder("startIndex must be valid");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) "java.vendor", 540, 'W');
      StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
      int int0 = strBuilder0.indexOf("[cP?jR8&w=:5e~");
      StrBuilder strBuilder3 = strBuilder0.trim();
      StrBuilder strBuilder4 = strBuilder3.deleteFirst("tLl?UH(Dd'\"l?/");
      StrBuilder strBuilder5 = strBuilder4.minimizeCapacity();
      StrBuilder strBuilder6 = strBuilder0.append(true);
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('W');
      int int1 = strBuilder6.indexOf((StrMatcher) strMatcher_CharMatcher0, (-1722));
      StrBuilder strBuilder7 = strBuilder5.append(0.0);
      // Undeclared exception!
      try { 
        strBuilder2.getChars(2167, 0, (char[]) null, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("iW&z6C%1", "iW&z6C%1");
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight(32, 32, 'N');
      // Undeclared exception!
      try { 
        strBuilder0.insert(93, (double) 93);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 93
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("l");
      int int0 = 1088;
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder0.insert(0, charArray0, 0, 2950);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 2950
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[6];
      charArray0[0] = 'k';
      charArray0[1] = '$';
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder2 = strBuilder0.append((Object) null);
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      StrBuilder strBuilder3 = strBuilder2.replaceFirst(strMatcher0, "ZHZ#Vn !k");
      charArray0[2] = 'w';
      charArray0[3] = 'o';
      charArray0[4] = 'n';
      charArray0[5] = '5';
      // Undeclared exception!
      try { 
        strBuilder0.insert((-138), charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -138
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      Object[] objectArray0 = new Object[4];
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter", 3283, ' ');
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder0;
      StrBuilder strBuilder2 = strBuilder0.delete(115, 1057);
      objectArray0[2] = (Object) strBuilder0;
      objectArray0[3] = (Object) strBuilder0;
      StrBuilder strBuilder3 = strBuilder0.appendWithSeparators(objectArray0, "-3NM");
      StrBuilder strBuilder4 = strBuilder3.append(2302L);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      int int0 = strBuilder0.size();
      char[] charArray0 = strBuilder0.toCharArray();
      StrBuilder strBuilder2 = strBuilder0.append((double) 0);
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder3 = strBuilder2.deleteAll((StrMatcher) strMatcher_TrimMatcher0);
      StrBuilder strBuilder4 = strBuilder2.appendFixedWidthPadRight(3, 0, 'K');
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Collection) linkedList0, "D_)\"L#Rp,\"&'q,");
      Integer integer0 = new Integer(106);
      boolean boolean0 = linkedList0.add(integer0);
      String string0 = strBuilder0.midString(1203, 0);
      StringBuffer stringBuffer0 = new StringBuffer(0);
      StrBuilder strBuilder3 = strBuilder2.append(stringBuffer0);
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("o3-A9KtC+XnK:_");
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      int int0 = 5300;
      StrBuilder strBuilder0 = new StrBuilder(5300);
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('N');
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      String string0 = "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer";
      StrBuilder strBuilder1 = strBuilder0.append((Object) "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      StrBuilder strBuilder2 = strBuilder1.deleteFirst('N');
      int int1 = strBuilder1.lastIndexOf("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer", 5300);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder strBuilder3 = strBuilder0.deleteAll(strMatcher0);
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      String string1 = strBuilder_StrBuilderTokenizer0.nextToken();
      StrBuilder strBuilder4 = strBuilder0.append(object0);
      // Undeclared exception!
      try { 
        strBuilder4.replace(strMatcher1, "", 5300, 19, 2107);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.insert(0, (long) 0);
      StrBuilder strBuilder2 = strBuilder1.deleteAll('K');
      String string0 = strBuilder2.toString();
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadLeft(0, 0, 'Y');
      String string1 = "Invalid length: ";
      StrBuilder strBuilder4 = strBuilder3.replaceAll("g", "Invalid length: ");
      StrBuilder strBuilder5 = strBuilder0.appendFixedWidthPadLeft((Object) strBuilder3, 0, 'C');
      StrBuilder strBuilder6 = strBuilder3.minimizeCapacity();
      StrBuilder strBuilder7 = strBuilder6.setLength(0);
      StrBuilder strBuilder8 = strBuilder6.setNullText("0");
      StrBuilder strBuilder9 = strBuilder3.appendFixedWidthPadLeft(0, 34, 'C');
      int int0 = strBuilder4.indexOf("g");
      StrBuilder strBuilder10 = strBuilder3.replaceFirst('q', 'Y');
      int int1 = strBuilder4.lastIndexOf("");
      StrBuilder strBuilder11 = strBuilder5.reverse();
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrBuilder strBuilder12 = strBuilder11.replaceFirst((StrMatcher) strMatcher_NoMatcher0, "T]");
      StrBuilder strBuilder13 = strBuilder0.setNewLineText("Qw:}pR");
      StrBuilder strBuilder14 = strBuilder1.setLength(15);
      StrBuilder strBuilder15 = strBuilder14.appendFixedWidthPadLeft((Object) strBuilder5, 28, 'W');
      char[] charArray0 = new char[1];
      charArray0[0] = 'K';
      // Undeclared exception!
      try { 
        strBuilder5.append(charArray0, 97, 15);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 15
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder");
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("org.apache.commons.lang.text.StrBuilder");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(451, 5160, 'f');
      Integer integer0 = new Integer(0);
      boolean boolean0 = strBuilder0.equals((Object) integer0);
      StrMatcher strMatcher2 = StrMatcher.charMatcher('E');
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      // Undeclared exception!
      strBuilder0.deleteAll(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      int int0 = 5890;
      StrBuilder strBuilder0 = new StrBuilder(5890);
      char char0 = '5';
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('5');
      StrBuilder strBuilder2 = strBuilder1.deleteAll("3R8xADuH`Z?XQp Yc+");
      StrBuilder strBuilder3 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder4 = strBuilder0.append((-828.7769261229));
      char[] charArray0 = new char[3];
      charArray0[0] = '5';
      charArray0[1] = '5';
      charArray0[2] = '5';
      StrBuilder strBuilder5 = strBuilder4.append(charArray0);
      char[] charArray1 = new char[8];
      charArray1[0] = '5';
      charArray1[1] = '5';
      charArray1[2] = '5';
      // Undeclared exception!
      try { 
        strBuilder3.toCharArray((-2434), (-1986));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2434
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("t%yZCj/7JKVRM");
      StrBuilder strBuilder1 = strBuilder0.setLength(97);
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('$');
      StrMatcher strMatcher0 = StrMatcher.stringMatcher(".CaBy1X:Kv>7]<&");
      int int0 = strBuilder1.lastIndexOf((StrMatcher) strMatcher_CharMatcher0);
      String string0 = strBuilder0.leftString(97);
      StrMatcher strMatcher1 = StrMatcher.charMatcher('$');
      char[] charArray0 = new char[1];
      charArray0[0] = '$';
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder2 = strBuilder0.append((long) 97);
      StrBuilder strBuilder3 = strBuilder2.deleteAll('$');
      int int1 = strBuilder2.indexOf("");
      StrBuilder strBuilder4 = strBuilder1.replaceAll((StrMatcher) strMatcher_CharMatcher0, "");
      StrBuilder strBuilder5 = new StrBuilder(0);
      StrBuilder strBuilder6 = strBuilder1.append(strBuilder5);
      StrBuilder strBuilder7 = strBuilder4.append(strBuilder2);
      int int2 = strBuilder1.indexOf(strMatcher1);
      StrBuilder strBuilder8 = strBuilder3.deleteAll('h');
      StrBuilder strBuilder9 = strBuilder0.append(2112);
      StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
      StrBuilder strBuilder11 = strBuilder9.deleteFirst("t%yZCj/7JKVRM\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000");
      StrBuilder strBuilder12 = strBuilder2.deleteFirst(".CaBy1X:Kv>7]<&");
      StrBuilder strBuilder13 = strBuilder2.append("");
      StrTokenizer strTokenizer0 = strBuilder7.asTokenizer();
      // Undeclared exception!
      try { 
        strBuilder12.insert(32, charArray0, (-1), 44);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setLength(1750);
      char[] charArray0 = new char[4];
      charArray0[0] = '}';
      charArray0[1] = 'r';
      charArray0[2] = 't';
      charArray0[3] = '%';
      strBuilder0.buffer = charArray0;
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher((String) null);
      int int0 = strBuilder1.lastIndexOf(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.appendNull();
      StrBuilder strBuilder3 = new StrBuilder();
      StrBuilder strBuilder4 = strBuilder2.appendFixedWidthPadRight((Object) strBuilder3, (-2518), '0');
      int int1 = strBuilder0.size();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      // Undeclared exception!
      try { 
        strBuilder2.append(object0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder");
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      char[] charArray0 = new char[4];
      charArray0[0] = 'n';
      charArray0[1] = 'f';
      charArray0[2] = '\'';
      StrBuilder strBuilder1 = strBuilder0.deleteAll('a');
      charArray0[3] = '6';
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("org.apache.commons.lang.text.StrBuilder");
      int int1 = 5160;
      int int2 = 0;
      int int3 = strMatcher0.isMatch(charArray0, 0, 5160, 0);
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft(451, 5160, 'f');
      // Undeclared exception!
      try { 
        strBuilder0.replace(strMatcher0, "java.awt.printerjob", (-1), 3, (-296));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      String string0 = "\"dt! mtPFI'2*dX)Ss";
      StrBuilder strBuilder0 = new StrBuilder("\"dt! mtPFI'2*dX)Ss");
      StrBuilder strBuilder1 = strBuilder0.deleteCharAt(0);
      // Undeclared exception!
      try { 
        strBuilder0.append("\"dt! mtPFI'2*dX)Ss", (-2174), (-2174));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.trim();
      int int0 = strBuilder0.lastIndexOf('y');
      String string0 = strBuilder1.toString();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft((-1397), (-2495), 'O');
      char[] charArray0 = new char[4];
      charArray0[0] = 'y';
      charArray0[1] = 'y';
      charArray0[2] = 'O';
      charArray0[3] = 'O';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      boolean boolean0 = strBuilder2.contains(strMatcher0);
      StrMatcher strMatcher1 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      int int1 = strBuilder1.indexOf(strMatcher1, (-1));
      StrBuilder strBuilder3 = strBuilder0.reverse();
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder((-835));
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("i[%");
      char[] charArray0 = new char[2];
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder1.lastIndexOf((StrMatcher) strMatcher_StringMatcher0);
      charArray0[0] = 'u';
      charArray0[1] = 'R';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      boolean boolean0 = strBuilder1.contains((StrMatcher) strMatcher_StringMatcher0);
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      StringBuffer stringBuffer0 = strBuilder2.toStringBuffer();
      boolean boolean1 = strBuilder2.contains((StrMatcher) strMatcher_StringMatcher0);
      int int1 = 0;
      // Undeclared exception!
      try { 
        strBuilder1.toCharArray((-835), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -835
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = null;
      StrBuilder strBuilder1 = strBuilder0.setNullText((String) null);
      char char0 = '*';
      // Undeclared exception!
      try { 
        strBuilder1.appendFixedWidthPadRight((Object) "dUaH&Z}{Rx{0[Cl", 116, '*');
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      char[] charArray0 = new char[1];
      charArray0[0] = 'r';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      int int1 = strBuilder0.indexOf('n', 101);
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1));
      char[] charArray0 = new char[9];
      charArray0[0] = 'I';
      charArray0[1] = '-';
      charArray0[2] = '/';
      charArray0[3] = '|';
      charArray0[4] = '|';
      charArray0[5] = '`';
      charArray0[6] = 'k';
      charArray0[7] = 'Q';
      charArray0[8] = ';';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0, 0, 0);
      String string0 = strBuilder0.getNewLineText();
      String string1 = strBuilder0.toString();
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("m");
      int int0 = 0;
      char[] charArray0 = new char[7];
      charArray0[0] = '&';
      charArray0[1] = '5';
      charArray0[2] = 'O';
      charArray0[3] = 'F';
      charArray0[4] = '~';
      charArray0[5] = 'L';
      charArray0[6] = '!';
      strBuilder0.getChars(0, 0, charArray0, 0);
      StrBuilder strBuilder1 = new StrBuilder("m");
      strBuilder1.buffer = charArray0;
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean1 = strBuilder_StrBuilderReader0.ready();
      strBuilder_StrBuilderReader0.mark(0);
      StrBuilder strBuilder2 = strBuilder1.append(strBuilder0);
      strBuilder_StrBuilderReader0.close();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      // Undeclared exception!
      try { 
        strBuilder2.insert(97, object0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 97
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((String) null, 0, 0);
      strBuilder_StrBuilderWriter0.flush();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[8];
      charArray0[0] = 'I';
      charArray0[1] = 's';
      charArray0[2] = '=';
      charArray0[3] = '+';
      charArray0[4] = 'o';
      charArray0[5] = ';';
      charArray0[6] = '&';
      charArray0[7] = 'Z';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StringBuffer stringBuffer0 = new StringBuffer("");
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher((String) null);
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder2 = strBuilder0.setLength(0);
      StrBuilder strBuilder3 = strBuilder1.ensureCapacity(0);
      StrBuilder strBuilder4 = strBuilder0.append((char[]) null, 0, 0);
      StrBuilder strBuilder5 = strBuilder4.setNewLineText("");
      Writer writer0 = strBuilder1.asWriter();
      // Undeclared exception!
      try { 
        strBuilder4.deleteCharAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[7];
      charArray0[0] = ',';
      StrBuilder strBuilder1 = strBuilder0.appendPadding(9, ',');
      Reader reader0 = strBuilder1.asReader();
      charArray0[1] = '<';
      charArray0[2] = 'y';
      charArray0[3] = 'l';
      charArray0[4] = 'a';
      charArray0[5] = 'y';
      charArray0[6] = '(';
      StrBuilder strBuilder2 = strBuilder0.append(charArray0);
      StrBuilder strBuilder3 = strBuilder2.setCharAt(9, '(');
      StrBuilder strBuilder4 = strBuilder3.insert(0, "gL Tv .Z5&");
      StrBuilder strBuilder5 = strBuilder2.appendNull();
      char[] charArray1 = strBuilder2.getChars(charArray0);
      StrTokenizer strTokenizer0 = strBuilder4.asTokenizer();
      StrBuilder strBuilder6 = strBuilder0.deleteAll("0~)BVFm_}5d1V");
      StrBuilder strBuilder7 = new StrBuilder(3688);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder7.new StrBuilderTokenizer();
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 0, 0);
      StrBuilder strBuilder8 = strBuilder4.replaceAll('v', 'j');
      StrBuilder strBuilder9 = strBuilder1.clear();
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.reverse();
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft(0, 0, 'x');
      StrBuilder strBuilder3 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder3.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrBuilder strBuilder4 = strBuilder2.replace(strMatcher0, "uX+kRdZi", 0, 0, 0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('g');
      StrBuilder strBuilder1 = strBuilder0.replaceFirst((StrMatcher) strMatcher_CharMatcher0, "-)L,\"76U");
      char[] charArray0 = new char[2];
      charArray0[0] = 'g';
      charArray0[1] = 'g';
      StrBuilder strBuilder2 = strBuilder1.insert(0, charArray0, 0, 0);
      String string0 = strBuilder0.substring(0, 1);
      StrBuilder strBuilder3 = strBuilder1.setNullText("P}j.~^{j*?7o.");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder3.new StrBuilderWriter();
      int int0 = strBuilder3.indexOf((StrMatcher) strMatcher_CharMatcher0);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("P}j.~^{j*?7o.");
      strBuilder_StrBuilderWriter0.write((char[]) null);
      String string1 = strBuilder0.substring(0);
      int int1 = strBuilder1.indexOf('g');
      StrBuilder strBuilder4 = strBuilder1.insert(0, "");
      StrTokenizer strTokenizer0 = strBuilder1.asTokenizer();
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(44);
      String string0 = "";
      StringBuffer stringBuffer1 = stringBuffer0.append("");
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrBuilder strBuilder2 = strBuilder1.append(0.0F);
      stringBuffer0.trimToSize();
      StrBuilder strBuilder3 = strBuilder1.appendNewLine();
      StrBuilder strBuilder4 = strBuilder1.insert(0, 0.0);
      boolean boolean0 = strBuilder1.equals((Object) stringBuffer0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      boolean boolean1 = linkedList0.offerFirst(strBuilder1);
      StrBuilder strBuilder5 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(0);
      int int0 = strBuilder_StrBuilderReader0.read();
      strBuilder_StrBuilderReader0.mark(988);
      long long0 = strBuilder_StrBuilderReader0.skip((-978L));
      String string1 = strBuilder2.getNullText();
      int int1 = 1567;
      // Undeclared exception!
      try { 
        strBuilder2.substring(1567, 988);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Object object0 = null;
      int int0 = 1;
      String string0 = "\\}d&zB|kfS;c";
      StrBuilder strBuilder1 = new StrBuilder("}d&zB|kfS;c");
      strBuilder1.validateIndex(1);
      int int1 = 0;
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1, 1, 0);
      StrBuilder strBuilder3 = strBuilder2.deleteFirst("}d&zB|kfS;c");
      // Undeclared exception!
      try { 
        strBuilder2.insert((-812), true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -812
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceAll("Invalid length: ", "Invalid length: ");
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("");
      char[] charArray0 = new char[6];
      charArray0[0] = 'U';
      charArray0[1] = '!';
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((Object) strBuilder1, (-1684), '!');
      int int0 = strBuilder2.indexOf(strMatcher0);
      charArray0[2] = 'U';
      charArray0[3] = ';';
      charArray0[4] = '%';
      charArray0[5] = '<';
      int int1 = (-1444);
      int int2 = strMatcher0.isMatch(charArray0, (-805), (-1994), (-1444));
      StrBuilder strBuilder3 = strBuilder0.deleteFirst(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder3.append("2ej>e?", 0, (-1444));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      int int0 = 399;
      StrBuilder strBuilder0 = new StrBuilder(399);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[8];
      charArray0[0] = ';';
      StrBuilder strBuilder1 = strBuilder0.deleteAll(';');
      charArray0[1] = '%';
      charArray0[2] = 'N';
      charArray0[3] = 'R';
      charArray0[4] = 'v';
      charArray0[5] = '3';
      strBuilder_StrBuilderWriter0.write(charArray0);
      int int1 = 4006;
      String string0 = strBuilder1.toString();
      // Undeclared exception!
      try { 
        strBuilder0.getChars(0, (-2548), charArray0, 4006);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2548
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strBuilder_StrBuilderTokenizer0, "'; the SystemUtils property value will default to null.");
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((Object) "QF", 1577, 'a');
      StrBuilder strBuilder3 = strBuilder2.appendNull();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
      StrBuilder strBuilder4 = strBuilder1.insert(1577, false);
      char[] charArray0 = new char[8];
      charArray0[0] = 'a';
      charArray0[1] = 'a';
      charArray0[2] = ':';
      charArray0[3] = 'a';
      charArray0[4] = 'a';
      charArray0[5] = 'a';
      charArray0[6] = 'a';
      charArray0[7] = 'a';
      char[] charArray1 = strBuilder2.getChars(charArray0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      boolean boolean0 = strBuilder0.endsWith((String) null);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.endsWith("Invalid offset: ");
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-746));
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("");
      char[] charArray0 = new char[4];
      charArray0[0] = 'n';
      charArray0[1] = ',';
      charArray0[2] = '-';
      charArray0[3] = '(';
      StrMatcher strMatcher1 = StrMatcher.charMatcher(',');
      int int0 = strMatcher0.isMatch(charArray0, (-746), 4909, 490);
      int int1 = strBuilder0.indexOf(strMatcher0, (-746));
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "b-;T");
      StrBuilder strBuilder2 = strBuilder0.setNullText(",");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      int int2 = strMatcher0.isMatch(charArray0, 0, 968, 450);
      strBuilder_StrBuilderWriter0.write("");
      StrBuilder strBuilder3 = strBuilder0.replaceAll('n', '-');
      StrBuilder strBuilder4 = strBuilder0.append((-1));
      strBuilder_StrBuilderWriter0.close();
      // Undeclared exception!
      try { 
        strBuilder3.insert((-1), false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      int int0 = strBuilder0.lastIndexOf((StrMatcher) null);
      StrBuilder strBuilder1 = strBuilder0.append((String) null);
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder2 = strBuilder0.deleteAll((String) null);
      char[] charArray0 = new char[9];
      charArray0[0] = 'S';
      charArray0[1] = 'd';
      charArray0[2] = '/';
      charArray0[3] = 'n';
      charArray0[4] = 'O';
      charArray0[5] = '*';
      charArray0[6] = 'w';
      charArray0[7] = 'X';
      charArray0[8] = '|';
      // Undeclared exception!
      try { 
        strBuilder2.getChars(0, 0, charArray0, 117);
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      String string0 = "startIndex must be valid";
      StrBuilder strBuilder0 = new StrBuilder("startIndex must be valid");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) "java.vendor", 540, 'W');
      StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
      int int0 = strBuilder0.indexOf("[cP?jR8&w=:5e~");
      StrBuilder strBuilder3 = strBuilder0.trim();
      StrBuilder strBuilder4 = strBuilder3.deleteFirst("tLl?UH(Dd'\"l?/");
      StrBuilder strBuilder5 = strBuilder4.minimizeCapacity();
      StrBuilder strBuilder6 = strBuilder0.append(true);
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      int int1 = strBuilder6.indexOf(strMatcher0, (-1722));
      StrBuilder strBuilder7 = strBuilder5.append(0.0);
      // Undeclared exception!
      try { 
        strBuilder2.getChars(2167, 0, (char[]) null, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.insert(0, (long) 0);
      StrBuilder strBuilder2 = strBuilder1.deleteAll('K');
      String string0 = strBuilder2.toString();
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadLeft(0, 0, 'Y');
      String string1 = "Invalid length: ";
      StrBuilder strBuilder4 = strBuilder3.replaceAll("g", "Invalid length: ");
      StrBuilder strBuilder5 = strBuilder0.appendFixedWidthPadLeft((Object) strBuilder3, 0, 'C');
      StrBuilder strBuilder6 = strBuilder3.minimizeCapacity();
      StrBuilder strBuilder7 = strBuilder6.setLength(0);
      StrBuilder strBuilder8 = strBuilder6.setNullText("0");
      StrBuilder strBuilder9 = strBuilder3.appendFixedWidthPadLeft(0, 34, 'C');
      int int0 = strBuilder4.indexOf("g");
      StrBuilder strBuilder10 = strBuilder3.replaceFirst('q', 'Y');
      int int1 = strBuilder4.lastIndexOf("");
      StrBuilder strBuilder11 = strBuilder5.reverse();
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrBuilder strBuilder12 = strBuilder11.replaceFirst((StrMatcher) strMatcher_NoMatcher0, "T]");
      StrBuilder strBuilder13 = strBuilder0.setNewLineText("Qw:}pR");
      StrBuilder strBuilder14 = strBuilder1.setLength(15);
      StrBuilder strBuilder15 = strBuilder14.appendFixedWidthPadLeft((Object) strBuilder5, 57, 'W');
      char[] charArray0 = new char[1];
      charArray0[0] = 'K';
      // Undeclared exception!
      try { 
        strBuilder5.append(charArray0, 97, 15);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 15
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      int int0 = (-2738);
      StrBuilder strBuilder0 = new StrBuilder((-2738));
      StrBuilder strBuilder1 = new StrBuilder((-2738));
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((Object) strBuilder1, (-2738), '7');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((-2738));
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("", (-1131), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1720);
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      String string0 = "";
      StrBuilder strBuilder1 = strBuilder0.append("");
      int int0 = strBuilder0.indexOf(strMatcher0);
      Object object0 = new Object();
      StrBuilder strBuilder2 = strBuilder0.append(object0);
      String string1 = "Kkk(R~uZPc \"TN?PT[";
      StrBuilder strBuilder3 = strBuilder0.setNullText("Kkk(R~uZPc \"TN?PT[");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      boolean boolean0 = linkedList0.add((Object) strBuilder2);
      StrBuilder strBuilder4 = strBuilder2.appendWithSeparators((Collection) linkedList0, "N4j\"'+V{x#g)k");
      Writer writer0 = strBuilder4.asWriter();
      StrBuilder strBuilder5 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder5.substring(1720);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("2$` ");
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder1.appendNewLine();
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      String string0 = strBuilder1.midString(32, (-2005));
      StrBuilder strBuilder3 = strBuilder1.append(102);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder4 = strBuilder3.appendWithSeparators((Collection) linkedList0, "$LYu_^ A8eDuhK5LG");
      StrBuilder strBuilder5 = strBuilder4.setNullText("java.io.tmpdir");
      StrBuilder strBuilder6 = strBuilder0.replaceFirst(strMatcher0, "W`(T");
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, 0, 75);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "");
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight(5, 5, '.');
      StrBuilder strBuilder3 = strBuilder0.ensureCapacity(0);
      char[] charArray0 = new char[5];
      charArray0[0] = '.';
      charArray0[1] = '.';
      charArray0[2] = '.';
      charArray0[3] = '.';
      charArray0[4] = '.';
      StrBuilder strBuilder4 = strBuilder2.append(charArray0);
      StrBuilder strBuilder5 = strBuilder2.replaceAll('t', 'J');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder4.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1306);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("<snC5,gSUe");
      StrMatcher strMatcher0 = null;
      StrBuilder strBuilder2 = strBuilder1.append(1L);
      StrBuilder strBuilder3 = strBuilder2.trim();
      StrBuilder strBuilder4 = strBuilder1.deleteAll((StrMatcher) null);
      StrBuilder strBuilder5 = strBuilder1.replaceFirst((StrMatcher) null, "3g\"oCp<$s!&H");
      int int0 = strBuilder5.indexOf((StrMatcher) null, 4);
      char[] charArray0 = strBuilder5.toCharArray();
      boolean boolean0 = strBuilder1.isEmpty();
      boolean boolean1 = strBuilder1.contains((StrMatcher) null);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder5.new StrBuilderTokenizer();
      StrBuilder strBuilder6 = strBuilder5.deleteFirst("1P0Pmk");
      char char0 = '\\';
      StrBuilder strBuilder7 = strBuilder1.replaceFirst((StrMatcher) null, "3g\"oCp<$s!&H");
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterChar('\\');
      StrBuilder strBuilder8 = strBuilder2.appendWithSeparators((Iterator) strTokenizer0, "3g\"oCp<$s!&H");
      int int1 = 32;
      String string0 = strBuilder0.midString(32, 1853);
      StrBuilder strBuilder9 = strBuilder4.setNewLineText("Invalid length: ");
      // Undeclared exception!
      try { 
        strBuilder4.deleteCharAt(913);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 913
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("file.encoding");
      StringBuffer stringBuffer0 = new StringBuffer(1563);
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      String string0 = strBuilder0.midString(1563, 1721);
      StrBuilder strBuilder2 = strBuilder0.deleteFirst("file.encoding");
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      int int0 = strBuilder2.indexOf((StrMatcher) strMatcher_NoMatcher0);
      Reader reader0 = strBuilder2.asReader();
      StrBuilder strBuilder3 = strBuilder0.deleteFirst("file.encoding");
      StrBuilder strBuilder4 = strBuilder2.replaceFirst('*', '*');
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      String string0 = "set() is unsupported";
      StrBuilder strBuilder0 = new StrBuilder("set() is unsupported");
      boolean boolean0 = strBuilder0.isEmpty();
      char char0 = '`';
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('`');
      StrBuilder strBuilder2 = strBuilder1.deleteAll((StrMatcher) null);
      StrBuilder strBuilder3 = new StrBuilder((-3660));
      // Undeclared exception!
      try { 
        strBuilder1.insert((-3660), (Object) strBuilder3);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3660
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2);
      boolean boolean0 = strBuilder0.contains("*`orZ");
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1), (long) (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-5865));
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("NnK^SsQN", "length must be valid");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      char[] charArray0 = new char[6];
      charArray0[0] = '6';
      charArray0[1] = 'f';
      charArray0[2] = '!';
      charArray0[3] = ')';
      charArray0[4] = 'D';
      charArray0[5] = 'I';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0);
      long long0 = strBuilder_StrBuilderReader0.skip(2215L);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.reverse();
      char[] charArray0 = new char[5];
      charArray0[0] = 'r';
      charArray0[1] = '2';
      charArray0[2] = ';';
      charArray0[3] = 's';
      charArray0[4] = '@';
      StrBuilder strBuilder2 = strBuilder1.append(charArray0);
      StrMatcher strMatcher0 = StrMatcher.charMatcher('{');
      StrBuilder strBuilder3 = strBuilder2.deleteFirst(strMatcher0);
      StrBuilder strBuilder4 = strBuilder3.append(strBuilder1);
      int int0 = 108;
      String string0 = strBuilder4.midString(108, 108);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
      StrBuilder strBuilder5 = strBuilder1.setNullText("c} gx{iYl");
      strBuilder_StrBuilderWriter0.write(charArray0);
      strBuilder1.size = 44;
      StrBuilder strBuilder6 = new StrBuilder("c} gx{iYl");
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder6);
      Writer writer0 = strBuilder0.asWriter();
      char[] charArray1 = strBuilder6.toCharArray(0, 0);
      // Undeclared exception!
      try { 
        strBuilder3.insert(0, (double) 0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      char[] charArray0 = new char[6];
      charArray0[0] = 'D';
      charArray0[1] = 'J';
      charArray0[2] = '^';
      charArray0[3] = 'r';
      charArray0[4] = 'X';
      charArray0[5] = ' ';
      strBuilder0.buffer = charArray0;
      StrBuilder strBuilder2 = strBuilder1.append('b');
      char[] charArray1 = new char[2];
      charArray1[0] = 'b';
      charArray1[1] = 'X';
      strBuilder0.buffer = charArray1;
      StrBuilder strBuilder3 = strBuilder0.replace((StrMatcher) null, " $*_{q>_wZ#J", 0, 0, 1596);
      String string0 = strBuilder3.leftString(0);
      StrBuilder strBuilder4 = strBuilder3.replaceFirst("", "j:Ltp;E[g");
      int int0 = strBuilder3.lastIndexOf((StrMatcher) null);
      StrBuilder strBuilder5 = strBuilder0.append(true);
      int int1 = strBuilder1.hashCode();
      StrBuilder strBuilder6 = strBuilder2.append(' ');
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.deleteAll("fwLc%%Z");
      char char0 = 'I';
      strBuilder0.size = (-570);
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((Object) null, 0, 'I');
      StrMatcher strMatcher0 = null;
      int int1 = strBuilder0.indexOf((StrMatcher) null);
      int int2 = strBuilder0.hashCode();
      char[] charArray0 = new char[6];
      charArray0[0] = 'I';
      charArray0[1] = 'I';
      charArray0[2] = 'I';
      charArray0[3] = 'I';
      charArray0[4] = 'I';
      charArray0[5] = '5';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0);
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(",fpRM");
      String string0 = strBuilder0.leftString(0);
      StrBuilder strBuilder1 = strBuilder0.insert(0, 'C');
      StrBuilder strBuilder2 = strBuilder1.replace(0, 0, "");
      String string1 = strBuilder1.leftString((-1685));
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      boolean boolean0 = strBuilder0.startsWith("Invalid startIndex: ");
      char[] charArray0 = new char[8];
      charArray0[0] = 'C';
      charArray0[1] = 'C';
      charArray0[2] = 'C';
      charArray0[3] = 'C';
      charArray0[4] = 'C';
      charArray0[5] = 'C';
      charArray0[6] = 'C';
      charArray0[7] = 'C';
      // Undeclared exception!
      try { 
        strBuilder0.insert(0, charArray0, 2070, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: 2070
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[9];
      charArray0[0] = '|';
      charArray0[1] = 'h';
      charArray0[2] = 'L';
      charArray0[3] = 'o';
      int int1 = strBuilder0.indexOf((StrMatcher) null);
      charArray0[4] = 'K';
      char char0 = 'G';
      String string0 = "";
      StrBuilder strBuilder1 = strBuilder0.replace(0, 39, "");
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1), (Object) strBuilder1);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      String string0 = "()'O'*ULm*";
      StrBuilder strBuilder0 = new StrBuilder("()'O'*ULm*");
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance("()'O'*ULm*");
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "()'O'*ULm*");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[0];
      int int0 = 205;
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 205, 205);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(38);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[4];
      charArray0[0] = '*';
      charArray0[1] = 'k';
      charArray0[2] = 'T';
      charArray0[3] = '2';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 38, 101);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0, (-4736));
      StrBuilder strBuilder1 = strBuilder0.replace(0, 3774, "");
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder2 = strBuilder0.replaceFirst(':', ':');
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder3 = strBuilder1.replaceFirst((String) null, "");
      StringBuffer stringBuffer1 = stringBuffer0.append((-480.53832908));
      StrBuilder strBuilder4 = strBuilder3.append(0.0F);
      StrBuilder strBuilder5 = strBuilder2.appendWithSeparators((Collection) linkedList0, "('?hN,");
      boolean boolean0 = strBuilder2.contains(':');
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrBuilder strBuilder6 = strBuilder1.replace(strMatcher0, "{}", 0, 932, 0);
      int int0 = strBuilder6.indexOf(strMatcher0);
      StrTokenizer strTokenizer0 = strBuilder6.asTokenizer();
      int int1 = 1783;
      StrBuilder strBuilder7 = strBuilder3.append((long) 932);
      // Undeclared exception!
      try { 
        strBuilder5.insert(1783, "end < start");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1783
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-488));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[8];
      charArray0[0] = 'e';
      charArray0[1] = '>';
      charArray0[2] = 'A';
      charArray0[3] = 'R';
      charArray0[4] = '-';
      charArray0[5] = '#';
      charArray0[6] = 'c';
      charArray0[7] = '3';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, (-488), (-488));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[1];
      char char0 = 'h';
      charArray0[0] = 'h';
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst((StrMatcher) strMatcher_NoMatcher0);
      int int0 = (-4361);
      // Undeclared exception!
      try { 
        strBuilder1.insert((-4361), (float) (-4361));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -4361
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.delete(0, 0);
      boolean boolean0 = strBuilder0.equals((Object) strBuilder1);
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((-95), (-24), 'C');
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[0];
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder0.indexOf(strMatcher0);
      StrBuilder strBuilder1 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight((Object) strBuilder1, 31, 'I');
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[0];
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder0.indexOf(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight((Object) strBuilder0, 31, 'I');
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[7];
      charArray0[0] = '!';
      charArray0[1] = 'C';
      charArray0[2] = ';';
      charArray0[3] = 'U';
      charArray0[4] = 'E';
      charArray0[5] = 'Q';
      charArray0[6] = ']';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(Integer.MAX_VALUE, Integer.MAX_VALUE, charArray0, Integer.MAX_VALUE);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2147483647
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('g');
      StrBuilder strBuilder1 = strBuilder0.replaceFirst((StrMatcher) strMatcher_CharMatcher0, "-)L,\"76U");
      char[] charArray0 = new char[2];
      charArray0[0] = 'g';
      charArray0[1] = 'g';
      StrBuilder strBuilder2 = strBuilder1.insert(0, charArray0, 0, 0);
      String string0 = strBuilder0.substring(0, (int) 'g');
      StrBuilder strBuilder3 = strBuilder1.setNullText("P}j.~^{j*?7o.");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder3.new StrBuilderWriter();
      int int0 = strBuilder3.indexOf((StrMatcher) strMatcher_CharMatcher0);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("P}j.~^{j*?7o.");
      strBuilder_StrBuilderWriter0.write((char[]) null);
      String string1 = strBuilder0.substring(0);
      StrBuilder strBuilder4 = strBuilder1.insert(0, "");
      StrTokenizer strTokenizer0 = strBuilder1.asTokenizer();
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("P-%*=0<t(");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrBuilder strBuilder1 = strBuilder0.replace(strMatcher0, "P-%*=0<t(", 0, 31, 31);
      boolean boolean0 = strBuilder1.startsWith("P-%*=0<t(");
      StrMatcher strMatcher1 = StrMatcher.charMatcher('>');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder");
      StrBuilder strBuilder1 = strBuilder0.append(421L);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      char[] charArray0 = new char[2];
      charArray0[0] = '9';
      charArray0[1] = 'x';
      int int0 = 0;
      strBuilder_StrBuilderWriter0.write("l9+\"1F;M", 0, 0);
      Writer writer0 = strBuilder_StrBuilderWriter0.append('9');
      strBuilder_StrBuilderWriter0.write(charArray0);
      StrBuilder strBuilder2 = strBuilder0.replaceAll((String) null, (String) null);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators((Collection) linkedList0, "java.library.path");
      strBuilder_StrBuilderWriter0.write(charArray0);
      StringBuffer stringBuffer0 = new StringBuffer();
      int int1 = (-3288);
      // Undeclared exception!
      try { 
        strBuilder1.append(stringBuffer0, (-3288), 234);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) "";
      objectArray0[2] = (Object) strBuilder0;
      objectArray0[3] = (Object) strBuilder0;
      objectArray0[4] = (Object) "";
      Object object0 = new Object();
      objectArray0[5] = object0;
      objectArray0[6] = (Object) strBuilder0;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "1n}[x4_M!Iw<");
      String string0 = strBuilder0.midString(0, 654);
      String string1 = strBuilder0.getNullText();
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      int int0 = 665;
      StrBuilder strBuilder0 = new StrBuilder(665);
      String string0 = "vvcu|C^6=N";
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrBuilder strBuilder2 = strBuilder1.setNullText("vvcu|C^6=N");
      strBuilder2.size = 665;
      int int1 = 2518;
      int int2 = 0;
      // Undeclared exception!
      try { 
        strBuilder1.append(strBuilder0, 2518, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((String) null, 39, 31);
      String string0 = "";
      char[] charArray0 = new char[6];
      charArray0[0] = 'K';
      charArray0[1] = '5';
      charArray0[2] = 'G';
      charArray0[3] = 'Z';
      charArray0[4] = 'N';
      charArray0[5] = 'K';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 31, (-1838));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -1838
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      int int0 = (-2968);
      StrBuilder strBuilder0 = new StrBuilder((-2968));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      int int1 = 108;
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("Y<)W,i58s>uD'", 108, 108);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setNullText("");
      StrBuilder strBuilder2 = strBuilder1.append(140.291F);
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("");
      char[] charArray0 = new char[8];
      charArray0[0] = '3';
      charArray0[1] = 'D';
      charArray0[2] = '~';
      charArray0[3] = 'q';
      charArray0[4] = 'i';
      charArray0[5] = 'S';
      charArray0[6] = 'm';
      charArray0[7] = ']';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder3 = strBuilder0.append(0.0F);
      StrBuilder strBuilder4 = strBuilder2.replaceAll(strMatcher0, "~B");
      Writer writer0 = strBuilder0.asWriter();
      StrMatcher strMatcher2 = StrMatcher.stringMatcher("");
      int int0 = strBuilder0.indexOf(strMatcher2);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("dmk*`1@p7VI4)*");
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder1 = strBuilder0.setNullText("NR~`PN@6");
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) "dmk*`1@p7VI4)*";
      Object object0 = new Object();
      objectArray0[1] = object0;
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators(objectArray0, "NR~`PN@6");
      char[] charArray0 = new char[1];
      charArray0[0] = 'N';
      StrBuilder strBuilder3 = strBuilder2.append(charArray0);
      StrBuilder strBuilder4 = strBuilder0.append(1379.048138745253);
      StrBuilder strBuilder5 = strBuilder2.append(strBuilder0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      int int0 = (-120);
      StrBuilder strBuilder0 = new StrBuilder((-120));
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher((char[]) null);
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("#CQE:M'`I;(sYeE2");
      StrBuilder strBuilder2 = strBuilder1.appendNewLine();
      StrBuilder strBuilder3 = strBuilder1.append('}');
      StrBuilder strBuilder4 = strBuilder3.deleteFirst('\"');
      int int1 = strBuilder3.lastIndexOf(strMatcher0);
      StrBuilder strBuilder5 = strBuilder0.deleteFirst("");
      StrBuilder strBuilder6 = strBuilder1.deleteAll("#CQE:M'`I;(sYeE2");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder6.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("6>3hk6F");
      char[] charArray0 = strBuilder1.toCharArray();
      StringBuffer stringBuffer0 = strBuilder6.toStringBuffer();
      // Undeclared exception!
      try { 
        strBuilder4.deleteCharAt((-1360));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1360
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2994));
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(',', 'e');
      StrBuilder strBuilder2 = strBuilder0.append(0);
      String string0 = strBuilder1.leftString(2805);
      int int0 = strBuilder0.indexOf("0");
      String string1 = strBuilder0.getNullText();
      int int1 = strBuilder0.lastIndexOf(',', (-207));
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher((String) null);
      int int2 = strBuilder1.indexOf(strMatcher0, 0);
      // Undeclared exception!
      try { 
        strBuilder1.insert(1006, (double) (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1006
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-657));
      StrBuilder strBuilder1 = strBuilder0.append((-657));
      int int0 = strBuilder0.length();
      StringBuffer stringBuffer0 = new StringBuffer();
      StringBuffer stringBuffer1 = new StringBuffer("");
      StringBuffer stringBuffer2 = stringBuffer0.append(stringBuffer1);
      StrBuilder strBuilder2 = strBuilder0.append((-657));
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, (-657), 5);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(32);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "-r2K.=EB: (@LO");
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      String string0 = "5p},S@4X$,Yz";
      StrBuilder strBuilder0 = new StrBuilder("5p},S@4X$,Yz");
      int int0 = 0;
      strBuilder0.size = 0;
      int int1 = 0;
      String string1 = strBuilder0.rightString(0);
      StrBuilder strBuilder1 = strBuilder0.append((long) 0);
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      StrBuilder strBuilder2 = strBuilder1.append(strBuilder0, 1, 0);
      // Undeclared exception!
      try { 
        strBuilder0.insert(97, (Object) "java.lang.Object");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 97
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      int int0 = 745;
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(745);
      StrBuilder strBuilder2 = strBuilder1.trim();
      StrBuilder strBuilder3 = strBuilder2.ensureCapacity(745);
      char char0 = '4';
      // Undeclared exception!
      try { 
        strBuilder3.insert(745, '4');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 745
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteAll("b/s{_");
      boolean boolean0 = strBuilder0.startsWith("b/s{_");
      StringBuffer stringBuffer0 = new StringBuffer();
      StringBuffer stringBuffer1 = new StringBuffer((CharSequence) "b/s{_");
      StringBuffer stringBuffer2 = stringBuffer0.append(stringBuffer1);
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 4165, (-1180));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("we3*t8(OpH8MBDJ^4f");
      StrBuilder strBuilder1 = strBuilder0.append(false);
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      int int0 = strBuilder1.lastIndexOf((StrMatcher) strMatcher_NoMatcher0);
      StrBuilder strBuilder2 = strBuilder0.replaceFirst("we3*t8(OpH8MBDJ^4f", "b+");
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.clear();
      char[] charArray0 = strBuilder0.getChars((char[]) null);
      StrBuilder strBuilder2 = strBuilder0.append(1.5);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterChar('e');
      StrBuilder strBuilder3 = strBuilder1.appendWithSeparators((Iterator) strTokenizer0, "|.T#]6S5kDNFD");
      String string0 = strBuilder1.rightString(1549);
      StrBuilder strBuilder4 = strBuilder0.deleteFirst('#');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder4.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      long long0 = strBuilder_StrBuilderReader0.skip(0L);
      StrBuilder strBuilder5 = strBuilder1.replaceAll('C', 'C');
      // Undeclared exception!
      try { 
        strBuilder1.insert(1460, 0.0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1460
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1575);
      char char0 = '\"';
      int int0 = strBuilder0.lastIndexOf('\"', 1575);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[9];
      charArray0[0] = '\"';
      charArray0[1] = '\"';
      charArray0[2] = '\"';
      charArray0[3] = '\"';
      charArray0[4] = '\"';
      charArray0[5] = '\"';
      charArray0[6] = '\"';
      charArray0[7] = '\"';
      charArray0[8] = '\"';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, (-4401), (-2435));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -2435
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      char[] charArray0 = new char[6];
      charArray0[0] = 'm';
      charArray0[1] = '3';
      charArray0[2] = ',';
      charArray0[3] = '+';
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, (String) null);
      charArray0[4] = '';
      charArray0[5] = 'B';
      StrBuilder strBuilder2 = strBuilder0.append(charArray0);
      StrBuilder strBuilder3 = strBuilder0.replaceFirst((String) null, (String) null);
      int int0 = strBuilder0.size();
      StrBuilder strBuilder4 = strBuilder0.append((Object) strBuilder3);
      StrMatcher strMatcher0 = StrMatcher.charMatcher('m');
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      int int1 = strBuilder3.lastIndexOf(strMatcher0, 6);
      int int2 = strBuilder1.lastIndexOf("end < start");
      int int3 = 0;
      StrBuilder strBuilder5 = strBuilder0.append(strBuilder4, 0, 0);
      char char0 = strBuilder4.charAt(0);
      char[] charArray1 = strBuilder0.toCharArray();
      // Undeclared exception!
      try { 
        strBuilder3.insert((-1), (double) (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("c@_.");
      int int0 = strBuilder0.indexOf(strMatcher0, 0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance((char[]) null);
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder strBuilder1 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, 0, (-842));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      char[] charArray0 = new char[2];
      charArray0[0] = 'Z';
      charArray0[1] = '<';
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance(charArray0);
      int int0 = strMatcher0.isMatch(charArray0, (-1831), (-1535), 184);
      StrTokenizer strTokenizer1 = strBuilder_StrBuilderTokenizer0.setIgnoredMatcher(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer1, "");
      StrBuilder strBuilder2 = strBuilder1.append((Object) "");
      StrBuilder strBuilder3 = strBuilder2.insert(0, 1L);
      char[] charArray1 = strBuilder0.toCharArray();
      StrBuilder strBuilder4 = strBuilder0.deleteAll('9');
      StrBuilder strBuilder5 = new StrBuilder(0);
      StrBuilder strBuilder6 = strBuilder2.appendFixedWidthPadLeft((Object) strBuilder5, 577, '<');
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      Integer integer0 = new Integer(0);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) integer0, 0, 'P');
      StrMatcher strMatcher0 = StrMatcher.stringMatcher((String) null);
      int int0 = strBuilder1.indexOf(strMatcher0, 3);
      StrBuilder strBuilder2 = new StrBuilder((-593));
      StringBuffer stringBuffer0 = strBuilder2.toStringBuffer();
      StrBuilder strBuilder3 = strBuilder2.append((long) (-593));
      // Undeclared exception!
      try { 
        strBuilder0.insert(3, (Object) strBuilder2);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      char[] charArray0 = new char[3];
      charArray0[0] = 'D';
      charArray0[1] = 's';
      charArray0[2] = ')';
      strBuilder0.buffer = charArray0;
      int int1 = strBuilder0.validateRange(0, 0);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-72), (Object) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -72
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2729);
      char[] charArray0 = new char[4];
      charArray0[0] = 'E';
      charArray0[1] = 'Z';
      charArray0[2] = '\\';
      charArray0[3] = 'L';
      char[] charArray1 = strBuilder0.getChars(charArray0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(0.0);
      String string0 = "";
      int int0 = 0;
      int int1 = 1542;
      // Undeclared exception!
      try { 
        strBuilder1.append("", 0, 1542);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      StrBuilder strBuilder1 = strBuilder0.append(false);
      StrBuilder strBuilder2 = strBuilder1.appendNull();
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      StrBuilder strBuilder3 = strBuilder2.insert(0, (-1.0));
      StrBuilder strBuilder4 = strBuilder1.deleteFirst(strMatcher0);
      StrBuilder strBuilder5 = strBuilder2.append("", 0, 0);
      // Undeclared exception!
      try { 
        strBuilder1.insert((-192), 'S');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -192
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[0];
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strMatcher0.isMatch(charArray0, (-3505), (-3505), (-3505));
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      char char0 = 'j';
      StrMatcher strMatcher2 = StrMatcher.charMatcher('j');
      int int1 = 2;
      int int2 = strBuilder0.lastIndexOf(strMatcher0, 2);
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt((-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 1987;
      // Undeclared exception!
      try { 
        strBuilder0.validateRange(1987, 1987);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.insert(0, (float) 0);
      StrBuilder strBuilder2 = strBuilder0.ensureCapacity((-1963));
      StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder4 = strBuilder3.appendFixedWidthPadRight((Object) strBuilder1, (-1963), 'z');
      StrBuilder strBuilder5 = strBuilder3.setCharAt(0, '%');
      int int0 = strBuilder3.indexOf((StrMatcher) null);
      boolean boolean0 = strBuilder0.contains((StrMatcher) null);
      char char0 = strBuilder5.charAt(0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[3];
      charArray0[0] = '%';
      charArray0[1] = '%';
      charArray0[2] = 'f';
      int int1 = strBuilder_StrBuilderReader0.read(charArray0);
      strBuilder_StrBuilderReader0.reset();
      int int2 = strBuilder4.indexOf("h?@4OLju)*{", 0);
      boolean boolean1 = strBuilder2.isEmpty();
      StrBuilder strBuilder6 = strBuilder2.appendFixedWidthPadRight((Object) strBuilder1, (-1963), ']');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder4.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      strBuilder_StrBuilderWriter0.flush();
      StrBuilder strBuilder7 = strBuilder0.insert(0, 'b');
      StrBuilder strBuilder8 = strBuilder4.insert(0, "`Sv$oL?2");
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      StrBuilder strBuilder2 = strBuilder0.replaceFirst("", "");
      StrBuilder strBuilder3 = strBuilder2.append(2846L);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder4 = strBuilder3.appendWithSeparators((Collection) linkedList0, "");
      StrBuilder strBuilder5 = strBuilder1.insert(0, 44);
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder strBuilder6 = strBuilder1.replaceFirst("", "org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrBuilder strBuilder7 = strBuilder6.setCharAt(0, '&');
      int int0 = 1164;
      char char0 = 'Z';
      // Undeclared exception!
      try { 
        strBuilder1.appendFixedWidthPadRight((Object) strBuilder0, 1164, 'Z');
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Integer integer0 = new Integer(0);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) integer0, 0, 'D');
      strBuilder0.size = 0;
      boolean boolean0 = strBuilder0.isEmpty();
      int int0 = strBuilder0.capacity();
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) strBuilder1;
      objectArray0[1] = (Object) integer0;
      objectArray0[2] = (Object) integer0;
      objectArray0[3] = (Object) integer0;
      objectArray0[4] = (Object) strBuilder1;
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators(objectArray0, "E;fVkp]");
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      String string0 = null;
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      int int0 = (-2306);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) null, (-2306), '\"');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      int int1 = strBuilder0.lastIndexOf(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.append((char[]) null);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      // Undeclared exception!
      try { 
        linkedList1.add((-89), (String) null);
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -89, Size: 0
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("y*X>CbOxTiMD");
      StrBuilder strBuilder1 = strBuilder0.replaceAll("=", "W2!J8*@EPK\"rNzW");
      int int0 = 0;
      StrBuilder strBuilder2 = strBuilder0.insert(0, (-1));
      char char0 = '.';
      // Undeclared exception!
      try { 
        strBuilder2.setCharAt((-1), '.');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1));
      StrBuilder strBuilder1 = strBuilder0.replaceAll("Z(]g(0fL5v_FO", "Z(]g(0fL5v_FO");
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex((-1955));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1955
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(115);
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt((-467), 'I');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -467
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = 'v';
      char[] charArray0 = new char[4];
      charArray0[0] = 'v';
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      charArray0[1] = '5';
      charArray0[2] = 'v';
      charArray0[3] = 'v';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(117, 0, charArray0, 117);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(185);
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      char[] charArray0 = new char[1];
      charArray0[0] = '\'';
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance(charArray0);
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, (String) null);
      StrBuilder strBuilder3 = strBuilder0.appendWithSeparators((Object[]) null, "1.4");
      StrBuilder strBuilder4 = strBuilder3.appendFixedWidthPadLeft((Object) "1.4", 185, '\'');
      Writer writer0 = strBuilder3.asWriter();
      Writer writer1 = strBuilder0.asWriter();
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight(185, 185, 'T');
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      String string0 = "java.version";
      StrBuilder strBuilder0 = new StrBuilder("java.version");
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer0 = new Integer((-2014));
      boolean boolean0 = linkedList0.add(integer0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "java.version");
      String string1 = strBuilder0.getNullText();
      int int0 = 0;
      char char0 = ':';
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft(0, (-2014), ':');
      int int1 = (-1);
      // Undeclared exception!
      try { 
        strBuilder1.validateIndex((-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(137);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(137);
      long long0 = strBuilder_StrBuilderReader0.skip(0L);
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      strBuilder_StrBuilderReader0.reset();
      char[] charArray0 = new char[6];
      charArray0[0] = '\\';
      charArray0[1] = 'M';
      charArray0[2] = '|';
      charArray0[3] = 'L';
      charArray0[4] = '[';
      charArray0[5] = 'S';
      StrBuilder strBuilder2 = strBuilder0.append(charArray0);
      StrBuilder strBuilder3 = strBuilder2.append(false);
      Reader reader0 = strBuilder3.asReader();
      StrBuilder strBuilder4 = strBuilder2.appendPadding(137, '2');
      StrBuilder strBuilder5 = strBuilder4.deleteAll('=');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      int int0 = strBuilder2.indexOf((String) null, 3632);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3);
      long long0 = 0L;
      char[] charArray0 = new char[7];
      charArray0[0] = 'g';
      charArray0[1] = '3';
      charArray0[2] = 'E';
      StrBuilder strBuilder1 = strBuilder0.replaceFirst((StrMatcher) null, (String) null);
      charArray0[3] = '';
      charArray0[4] = '>';
      charArray0[5] = 'Y';
      charArray0[6] = '!';
      int int0 = 44;
      // Undeclared exception!
      try { 
        strBuilder0.insert(0, charArray0, 44, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: 44
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.append("J}d_j=GNTga-ab");
      StringBuffer stringBuffer0 = strBuilder1.toStringBuffer();
      StrBuilder strBuilder2 = strBuilder1.deleteFirst((StrMatcher) null);
      StrBuilder strBuilder3 = strBuilder1.deleteAll("J}d_j=GNTga-ab");
      StrBuilder strBuilder4 = strBuilder1.minimizeCapacity();
      boolean boolean0 = strBuilder0.startsWith("ct%");
      char[] charArray0 = strBuilder0.toCharArray();
      StrBuilder strBuilder5 = strBuilder0.reverse();
      StrBuilder strBuilder6 = strBuilder0.insert(0, (-1.0F));
      StrBuilder strBuilder7 = strBuilder5.replaceFirst((StrMatcher) null, "J}d_j=GNTga-ab");
      StrBuilder strBuilder8 = strBuilder7.replace((StrMatcher) null, "ct%", 0, 1636, (-964));
      int int0 = strBuilder2.length();
      int int1 = strBuilder3.length();
      StrBuilder strBuilder9 = strBuilder1.append(charArray0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int1 = strBuilder_StrBuilderReader0.read();
      strBuilder_StrBuilderReader0.mark(0);
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Iterator) strBuilder_StrBuilderTokenizer0, "\n");
      StrBuilder strBuilder3 = strBuilder2.appendNewLine();
      char[] charArray0 = new char[4];
      charArray0[0] = ':';
      charArray0[1] = '.';
      charArray0[2] = 'e';
      charArray0[3] = '';
      // Undeclared exception!
      try { 
        strBuilder3.insert(0, charArray0, 10, 10);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: 10
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("startIndex must be valid");
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      boolean boolean0 = strBuilder0.contains((StrMatcher) strMatcher_TrimMatcher0);
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("w");
      StrBuilder strBuilder1 = strBuilder0.replaceAll((StrMatcher) strMatcher_TrimMatcher0, "");
      StrBuilder strBuilder2 = strBuilder0.setNewLineText("startIndex must be valid");
      int int0 = 2491;
      // Undeclared exception!
      try { 
        strBuilder1.delete(2491, 2491);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(482);
      StrBuilder strBuilder1 = strBuilder0.replaceFirst((String) null, (String) null);
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      int int0 = strBuilder1.lastIndexOf(strMatcher0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      int int0 = 680;
      StrBuilder strBuilder0 = new StrBuilder(680);
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      StrBuilder strBuilder2 = strBuilder0.setNewLineText("java.vm.version");
      StrBuilder strBuilder3 = strBuilder1.deleteFirst('U');
      StrBuilder strBuilder4 = strBuilder3.append("java.vm.version");
      StrBuilder strBuilder5 = strBuilder4.delete(0, 680);
      // Undeclared exception!
      try { 
        strBuilder1.append(strBuilder2, 680, 680);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      char[] charArray0 = new char[6];
      charArray0[0] = 'j';
      charArray0[1] = 'v';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("4|DLSz6_w^PyPT#y,");
      charArray0[2] = 'Z';
      charArray0[3] = 'Q';
      charArray0[4] = 'M';
      charArray0[5] = 'E';
      // Undeclared exception!
      try { 
        strBuilder0.getChars((-1), (-1497), charArray0, 5);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('P');
      // Undeclared exception!
      try { 
        strBuilder1.getChars(0, 0, (char[]) null, 0);
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      int int0 = strBuilder0.lastIndexOf((String) null, 48);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-41));
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      StrBuilder strBuilder2 = strBuilder0.appendNewLine();
      StrBuilder strBuilder3 = strBuilder1.append((String) null);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.append((double) 0);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.buffer = null;
      // Undeclared exception!
      try { 
        strBuilder0.appendPadding(48, 'g');
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      int int0 = (-209);
      StrBuilder strBuilder0 = new StrBuilder((-209));
      StrBuilder strBuilder1 = new StrBuilder("}");
      // Undeclared exception!
      try { 
        strBuilder1.insert((-209), 786.497825112653);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -209
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(false);
      StrBuilder strBuilder2 = strBuilder0.append('n');
      StrBuilder strBuilder3 = strBuilder1.append(strBuilder0);
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrBuilder strBuilder4 = strBuilder3.deleteFirst(strMatcher0);
      String string0 = strBuilder4.midString((-754), (-754));
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2493);
      StrBuilder strBuilder1 = new StrBuilder("");
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(3336.27F);
      StrBuilder strBuilder2 = strBuilder1.append((Object) strBuilder0);
      int int0 = 116;
      // Undeclared exception!
      try { 
        strBuilder1.append("/4=c-=bZ}V_0q)a", 116, 116);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-4798));
      StrBuilder strBuilder1 = strBuilder0.append('V');
      int int0 = 1164;
      // Undeclared exception!
      try { 
        strBuilder1.append("Xe?x~CO):", 87, 1164);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      int int0 = 2275;
      StrBuilder strBuilder0 = new StrBuilder(2275);
      int int1 = 860;
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(860);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 860
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("[#*SqV#jbwdaH\n");
      char char0 = 's';
      StrBuilder strBuilder1 = strBuilder0.replaceAll('s', 'c');
      int int0 = (-375);
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        strBuilder1.append(stringBuffer0, (-375), (-375));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = '4';
      StrMatcher strMatcher0 = StrMatcher.charMatcher('4');
      int int0 = strBuilder0.lastIndexOf(strMatcher0, (-3542));
      String string0 = "kMWlCm{";
      StringBuffer stringBuffer0 = new StringBuffer("kMWlCm{");
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder2 = strBuilder1.append("kMWlCm{");
      StrBuilder strBuilder3 = strBuilder1.trim();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        stringBuffer0.appendCodePoint((-501));
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("J<z<LBUFMd>^");
      char char0 = '2';
      int int0 = Integer.MAX_VALUE;
      // Undeclared exception!
      try { 
        strBuilder0.substring(Integer.MAX_VALUE);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Reader reader0 = strBuilder0.asReader();
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("\"dt! mtPFI'2*dX)Ss");
      StrBuilder strBuilder1 = strBuilder0.deleteCharAt(0);
      // Undeclared exception!
      try { 
        strBuilder0.append("\"dt! mtPFI'2*dX)Ss", (-2174), (-2174));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("\".");
      char[] charArray0 = new char[1];
      charArray0[0] = '<';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 0);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = strBuilder0.substring(0);
      int int0 = (-6068);
      // Undeclared exception!
      try { 
        strBuilder0.substring((-6068));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -6068
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.charMatcher('2');
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      boolean boolean0 = strBuilder0.contains('h');
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoreEmptyTokens(true);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "', is neither of type Map.Entry nor an Array");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight((Object) strBuilder0, 0, 'l');
      StrBuilder strBuilder3 = strBuilder1.appendFixedWidthPadLeft(0, 32, '.');
      int int0 = strBuilder_StrBuilderReader0.read();
      char[] charArray0 = new char[2];
      charArray0[0] = 'l';
      charArray0[1] = 'l';
      StrTokenizer strTokenizer1 = strBuilder_StrBuilderTokenizer0.reset(charArray0);
      long long0 = strBuilder_StrBuilderReader0.skip(46);
      StrBuilder strBuilder4 = strBuilder0.replaceAll(')', '~');
      StrBuilder strBuilder5 = strBuilder4.setLength(2061);
      StrBuilder strBuilder6 = strBuilder5.trim();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      boolean boolean1 = strBuilder0.equals((Object) "', is neither of type Map.Entry nor an Array");
      // Undeclared exception!
      try { 
        strBuilder6.insert(924, (-2950));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 924
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(429);
      StrBuilder strBuilder1 = strBuilder0.trim();
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      char[] charArray0 = new char[6];
      charArray0[0] = 'F';
      charArray0[1] = 'p';
      charArray0[2] = '`';
      charArray0[3] = 'Q';
      charArray0[4] = 'A';
      charArray0[5] = 'i';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      boolean boolean0 = strBuilder0.contains((StrMatcher) strMatcher_TrimMatcher0);
      // Undeclared exception!
      try { 
        strBuilder0.replace(39, 39, (String) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 1156;
      // Undeclared exception!
      try { 
        strBuilder0.insert(1156, "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1156
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[6];
      char char0 = '-';
      charArray0[0] = '-';
      char char1 = ';';
      charArray0[1] = ';';
      charArray0[2] = '?';
      char char2 = '7';
      charArray0[3] = '7';
      char char3 = '\'';
      charArray0[4] = '\'';
      char char4 = 'g';
      charArray0[5] = 'g';
      StrBuilder strBuilder1 = strBuilder0.insert(0, charArray0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterChar('7');
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      int int0 = strBuilder1.indexOf(strMatcher0);
      int int1 = 501;
      // Undeclared exception!
      try { 
        strBuilder1.insert(501, '=');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 501
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("t LFo5ty~/^F2)7#|[-");
      long long0 = strBuilder_StrBuilderReader0.skip(0L);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      strBuilder_StrBuilderReader0.reset();
      StrBuilder strBuilder2 = strBuilder0.delete(0, 0);
      strBuilder_StrBuilderReader0.mark(0);
      StrBuilder strBuilder3 = strBuilder0.insert(0, (double) 0);
      strBuilder_StrBuilderReader0.reset();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoredMatcher(strMatcher0);
      StrMatcher strMatcher1 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      StrBuilder strBuilder4 = strBuilder2.replaceAll(strMatcher1, "t LFo5ty~/^F2)7#|[-");
      String string0 = strBuilder1.getNewLineText();
      StrBuilder strBuilder5 = strBuilder4.append(0L);
      StrBuilder strBuilder6 = strBuilder4.replaceAll('#', '#');
      StrBuilder strBuilder7 = strBuilder1.append(499);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StringBuffer stringBuffer0 = new StringBuffer("dwFnABF>br4");
      IntStream intStream0 = stringBuffer0.chars();
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0, 0, 0);
      char[] charArray0 = new char[4];
      charArray0[0] = 'Z';
      charArray0[1] = '|';
      charArray0[2] = '\"';
      charArray0[3] = 'L';
      StrBuilder strBuilder2 = strBuilder0.insert(0, charArray0, 0, 0);
      StringBuffer stringBuffer1 = strBuilder0.toStringBuffer();
      String string0 = strBuilder2.toString();
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadRight((Object) "Invalid offset: ", 0, '|');
      StrBuilder strBuilder4 = strBuilder0.append(true);
      Writer writer0 = strBuilder2.asWriter();
      StrBuilder strBuilder5 = strBuilder3.appendWithSeparators((Collection) null, "");
      // Undeclared exception!
      try { 
        strBuilder1.append(stringBuffer0, 0, Integer.MAX_VALUE);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.midString((-1796), (-637));
      int int0 = (-1924);
      StringBuffer stringBuffer0 = new StringBuffer();
      StringBuffer stringBuffer1 = stringBuffer0.append("");
      StrBuilder strBuilder1 = strBuilder0.append(1888);
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      int int1 = strBuilder1.indexOf(strMatcher0, 9);
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 0, 9);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize((char[]) null, 39, 39);
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      int int0 = strMatcher0.isMatch((char[]) null, 39, 1855, 0);
      StrMatcher strMatcher1 = StrMatcher.charMatcher('_');
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder0.substring(39, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("X$ 4+ )LQ>Gi}");
      StrMatcher strMatcher0 = StrMatcher.charMatcher('/');
      int int0 = strBuilder0.indexOf(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("X$ 4+ )LQ>Gi}", "X$ 4+ )LQ>Gi}");
      StrBuilder strBuilder2 = new StrBuilder();
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder2);
      int int1 = strBuilder2.length();
      StrBuilder strBuilder3 = strBuilder2.insert(0, "Q,+4'A)-pk");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder4 = strBuilder2.appendWithSeparators((Collection) linkedList0, "X$ 4+ )LQ>Gi}");
      char[] charArray0 = new char[0];
      StrBuilder strBuilder5 = strBuilder2.append(charArray0, 0, 0);
      StrBuilder strBuilder6 = strBuilder5.appendPadding(0, 'F');
      StrBuilder strBuilder7 = strBuilder6.clear();
      strBuilder1.validateIndex(0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      // Undeclared exception!
      try { 
        strBuilder0.insert(531, '\\');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 531
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = strBuilder0.leftString(689);
      int int0 = strBuilder0.length();
      boolean boolean0 = strBuilder0.contains('(');
      char[] charArray0 = new char[9];
      charArray0[0] = '(';
      charArray0[1] = '(';
      charArray0[2] = '(';
      charArray0[3] = '(';
      charArray0[4] = '(';
      charArray0[5] = '(';
      charArray0[6] = 'H';
      charArray0[7] = '(';
      charArray0[8] = '(';
      StrBuilder strBuilder1 = strBuilder0.insert(0, charArray0);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder();
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      StrBuilder strBuilder2 = strBuilder0.append('a');
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 952;
      StrBuilder strBuilder1 = new StrBuilder(952);
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        strBuilder1.replace((StrMatcher) null, "", 4, (-549), (-549));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      StrBuilder strBuilder1 = strBuilder0.append('W');
      // Undeclared exception!
      try { 
        strBuilder1.charAt((-630));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -630
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      // Undeclared exception!
      try { 
        strBuilder0.charAt(1651);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1651
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.substring(3, 3);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.toString();
      int int0 = (-2047);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-2047), (long) (-2047));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2047
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[2];
      charArray0[0] = 'A';
      charArray0[1] = '!';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder0.indexOf(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((-1), 3131, '.');
      // Undeclared exception!
      try { 
        strBuilder0.replace((-1), Integer.MAX_VALUE, "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.clear();
      char char0 = 'l';
      StrBuilder strBuilder2 = strBuilder1.append('l');
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance((char[]) null);
      StrBuilder strBuilder3 = strBuilder1.appendWithSeparators((Iterator) strTokenizer0, "u4S5FDRm'5m");
      Reader reader0 = strBuilder3.asReader();
      StrBuilder strBuilder4 = strBuilder0.append((-1206));
      // Undeclared exception!
      try { 
        strBuilder4.insert(822, (-1.0F));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 822
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0, 116);
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      int int1 = strBuilder1.size();
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.insert(0, 1L);
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.indexOf((StrMatcher) null);
      StringBuffer stringBuffer0 = new StringBuffer("");
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, (-1), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1354);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(1354, 1354, '^');
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt((-2637));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2637
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      char[] charArray0 = strBuilder0.toCharArray(0, 0);
      StrBuilder strBuilder1 = strBuilder0.insert(0, 0.0F);
      strBuilder1.size = 4;
      int int1 = (-2265);
      // Undeclared exception!
      try { 
        strBuilder1.setLength((-2265));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2265
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(", Length: 0");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "file.separator");
      StrBuilder strBuilder2 = strBuilder0.replaceAll('m', 'x');
      StrBuilder strBuilder3 = strBuilder2.append("%X+2&PqLHI*6Qm/DUY9");
      StrBuilder strBuilder4 = new StrBuilder(0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder4.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((char[]) null, 1973, 1973);
      boolean boolean0 = strBuilder3.contains("");
      char[] charArray0 = strBuilder2.toCharArray(0, 1385);
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = strBuilder0.lastIndexOf("1.2");
      // Undeclared exception!
      try { 
        strBuilder0.setLength((-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "");
      StrBuilder strBuilder2 = strBuilder0.setLength(0);
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(115);
      Reader reader0 = strBuilder0.asReader();
      // Undeclared exception!
      try { 
        strBuilder0.insert(334, "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 334
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("7");
      int int0 = strBuilder0.indexOf('|', 0);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-3707), 768.76F);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3707
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2048);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrBuilder strBuilder2 = new StrBuilder(2048);
      StrBuilder strBuilder3 = strBuilder0.append(1);
      StrBuilder strBuilder4 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.next();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("x/kn8");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[2];
      charArray0[0] = '?';
      charArray0[1] = '-';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, (-381), (-426));
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("sdeY;");
      StrBuilder strBuilder1 = strBuilder0.appendPadding((-1973), '\'');
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) strBuilder0;
      String string0 = strBuilder0.leftString(2);
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) strBuilder0;
      objectArray0[3] = (Object) "org.apache.commons.lang.text.StrBuilder$StrBuilderReader";
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "org.apache.commons.lang.text.StrBuilder");
      char[] charArray0 = new char[6];
      charArray0[0] = 'Y';
      charArray0[1] = '<';
      charArray0[2] = 'q';
      charArray0[3] = '|';
      charArray0[4] = 'V';
      charArray0[5] = 'R';
      // Undeclared exception!
      try { 
        strBuilder1.insert((-87), charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -87
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-449);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(4, (-449), 'O');
      StrBuilder strBuilder2 = strBuilder1.append((float) 4);
      StrBuilder strBuilder3 = new StrBuilder("end < start");
      String string0 = strBuilder3.leftString(101);
      // Undeclared exception!
      try { 
        strBuilder2.append(strBuilder3, (-449), 4);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      int int0 = (-2506);
      StrBuilder strBuilder0 = new StrBuilder((-2506));
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "");
      char[] charArray0 = new char[1];
      charArray0[0] = 'i';
      // Undeclared exception!
      try { 
        strBuilder1.insert(344, charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 344
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder(0);
      boolean boolean0 = strBuilder0.equals((Object) strBuilder1);
      char[] charArray0 = new char[1];
      charArray0[0] = '[';
      StrBuilder strBuilder2 = strBuilder1.insert(0, true);
      StrBuilder strBuilder3 = strBuilder2.append(false);
      // Undeclared exception!
      try { 
        strBuilder1.append(charArray0, 2066, 117);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 117
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.compiler");
      String string0 = strBuilder0.midString(3350, 9);
      // Undeclared exception!
      try { 
        strBuilder0.equals((StrBuilder) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrBuilder strBuilder1 = strBuilder0.insert(0, (String) null);
      StrBuilder strBuilder2 = strBuilder1.reverse();
      StrBuilder strBuilder3 = strBuilder0.insert(0, true);
      StrBuilder strBuilder4 = strBuilder0.deleteFirst("");
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1));
      StrBuilder strBuilder1 = strBuilder0.deleteAll("");
      int int0 = strBuilder0.size();
      // Undeclared exception!
      try { 
        strBuilder0.insert(199, true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 199
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("AJiuoOfBDN#bu{B=");
      String string0 = strBuilder0.toString();
      int int0 = strBuilder0.lastIndexOf('%', 0);
      char[] charArray0 = new char[6];
      charArray0[0] = '%';
      charArray0[1] = '%';
      charArray0[2] = '%';
      charArray0[3] = '@';
      charArray0[4] = '%';
      charArray0[5] = '%';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, (-1), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(", Length: 0");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "file.separator");
      StrBuilder strBuilder2 = strBuilder0.replaceAll('m', 'x');
      StrBuilder strBuilder3 = strBuilder2.append("file.separator");
      StrBuilder strBuilder4 = new StrBuilder(0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder4.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((char[]) null, 1973, 1973);
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Yo|}*");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[4];
      charArray0[0] = '%';
      charArray0[1] = '9';
      charArray0[2] = '$';
      charArray0[3] = '\"';
      strBuilder_StrBuilderWriter0.write(charArray0);
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.vm.specification.name");
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) "java.vm.specification.name";
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) strBuilder0;
      objectArray0[3] = (Object) strBuilder0;
      objectArray0[4] = (Object) "java.vm.specification.name";
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      objectArray0[5] = object0;
      Object object1 = strBuilder_StrBuilderTokenizer0.cloneReset();
      objectArray0[6] = object1;
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators(objectArray0, "java.vm.specification.name");
      String string0 = strBuilder0.getNullText();
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      String string0 = strBuilder0.midString((-1707), (-1707));
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance((char[]) null);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(object0, (-1707), '~');
      String string1 = strBuilder1.getNullText();
      // Undeclared exception!
      try { 
        strBuilder1.replace((-1707), 0, (String) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1707
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-3263));
      StrBuilder strBuilder1 = strBuilder0.appendPadding((-3263), '<');
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      String string0 = "j!`^pv, A0?N{U-5r|";
      StrBuilder strBuilder0 = new StrBuilder("j!`^pv, A0?N{U-5r|");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("j!`^pv, A0?N{U-5r|", "file.encoding");
      StrBuilder strBuilder2 = strBuilder0.appendNewLine();
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder1);
      char char0 = '}';
      int int0 = (-1792);
      // Undeclared exception!
      try { 
        strBuilder2.replace((-1792), (-1792), "j!`^pv, A0?N{U-5r|");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1792
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      String string0 = "E<i.3DS=49";
      StrBuilder strBuilder0 = new StrBuilder("E<i.3DS=49");
      char char0 = ':';
      StrBuilder strBuilder1 = strBuilder0.append(':');
      StrBuilder strBuilder2 = strBuilder1.deleteFirst("");
      StrBuilder strBuilder3 = strBuilder0.append(false);
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "E<i.3DS=49");
      // Undeclared exception!
      try { 
        strBuilder3.append(stringBuffer0, (-413), (-413));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(48);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer1 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer1.getIgnoredMatcher();
      StrBuilder strBuilder1 = strBuilder0.append('[');
      StrTokenizer strTokenizer1 = StrTokenizer.getCSVInstance((char[]) null);
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 39);
      StrTokenizer strTokenizer2 = StrTokenizer.getCSVInstance();
      // Undeclared exception!
      try { 
        strBuilder0.substring(3, 48);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("l");
      int int0 = 1070;
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder0.insert(0, charArray0, 0, (-825));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: -825
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("iW&z6C%1", "iW&z6C%1");
      int int0 = 32;
      int int1 = 598;
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight(32, 598, 'N');
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      // Undeclared exception!
      try { 
        strBuilder0.insert((-902), object0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -902
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.insert(0, (long) 0);
      StrBuilder strBuilder2 = strBuilder1.deleteAll('K');
      String string0 = strBuilder2.toString();
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadLeft(0, 0, 'Y');
      StrBuilder strBuilder4 = strBuilder3.replaceAll("g", "Invalid length: ");
      StrBuilder strBuilder5 = strBuilder0.appendFixedWidthPadLeft((Object) strBuilder3, 0, 'C');
      StrBuilder strBuilder6 = strBuilder0.setLength(0);
      StrBuilder strBuilder7 = strBuilder2.setNullText("0");
      StrBuilder strBuilder8 = strBuilder3.appendFixedWidthPadLeft(0, 34, 'C');
      int int0 = strBuilder4.indexOf("g");
      StrBuilder strBuilder9 = strBuilder3.replaceFirst('q', 'Y');
      int int1 = strBuilder4.lastIndexOf("");
      StrBuilder strBuilder10 = strBuilder5.reverse();
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("");
      int int2 = strBuilder10.lastIndexOf((StrMatcher) strMatcher_StringMatcher0);
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrBuilder strBuilder11 = strBuilder10.replaceFirst((StrMatcher) strMatcher_NoMatcher0, "T]");
      StrBuilder strBuilder12 = strBuilder0.setNewLineText("Qw:}pR");
      StrBuilder strBuilder13 = strBuilder1.setLength(15);
      StrBuilder strBuilder14 = strBuilder13.appendFixedWidthPadLeft((Object) strBuilder5, 28, 'W');
      char[] charArray0 = new char[1];
      charArray0[0] = 'K';
      boolean boolean0 = strBuilder12.startsWith("Invalid length: ");
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
  }
}
