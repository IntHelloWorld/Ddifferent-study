/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 28 13:57:27 GMT 2020
 */

package org.apache.commons.math.linear;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.linear.Array2DRowRealMatrix;
import org.apache.commons.math.linear.ArrayRealVector;
import org.apache.commons.math.linear.DecompositionSolver;
import org.apache.commons.math.linear.EigenDecompositionImpl;
import org.apache.commons.math.linear.OpenMapRealMatrix;
import org.apache.commons.math.linear.OpenMapRealVector;
import org.apache.commons.math.linear.RealMatrix;
import org.apache.commons.math.linear.RealVector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EigenDecompositionImpl_ESTest extends EigenDecompositionImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = Double.POSITIVE_INFINITY;
      doubleArray0[1] = (-1750.0);
      doubleArray0[2] = 0.5;
      doubleArray0[3] = (-818.4903016075363);
      doubleArray0[4] = (-1628.34);
      doubleArray0[5] = 1.3225875155227278E-25;
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
      RealMatrix realMatrix0 = array2DRowRealMatrix0.transpose();
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (-1628.34));
      } catch(RuntimeException e) {
         //
         // no entry at indices (1, 0) in a 1x6 matrix
         //
         verifyException("org.apache.commons.math.linear.Array2DRowRealMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (-429.209);
      doubleArray0[1] = 2264.656652;
      doubleArray0[2] = 2.2250738585072014E-308;
      doubleArray0[3] = -0.0;
      doubleArray0[4] = (-429.209);
      doubleArray0[5] = (-1158.85105219);
      doubleArray0[6] = 1.5;
      doubleArray0[7] = 0.0;
      doubleArray0[8] = 2.2250738585072014E-308;
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-429.209));
      OpenMapRealVector openMapRealVector1 = new OpenMapRealVector(openMapRealVector0);
      OpenMapRealMatrix openMapRealMatrix0 = openMapRealVector1.outerproduct(openMapRealVector0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(openMapRealMatrix0, 0.0);
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getVT();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getV();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 1.0;
      doubleArray0[3] = 1.0;
      doubleArray0[4] = (-2613.747737752096);
      doubleArray0[5] = (-1030.7044511);
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = 536.5046996068909;
      doubleArray1[1] = 1.0;
      doubleArray1[2] = (-315.4794188946464);
      doubleArray1[3] = 0.0;
      doubleArray1[4] = (-1030.7044511);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      try { 
        eigenDecompositionImpl0.getImagEigenvalue((-250));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -250
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(49, 49);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, 49);
      // Undeclared exception!
      eigenDecompositionImpl0.getV();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (-429.209);
      doubleArray0[1] = 2264.656652;
      doubleArray0[2] = 2.2250738585072014E-308;
      doubleArray0[3] = -0.0;
      doubleArray0[4] = (-429.209);
      doubleArray0[5] = (-1158.85105219);
      doubleArray0[6] = 1.5;
      doubleArray0[7] = 0.0;
      doubleArray0[8] = 2.2250738585072014E-308;
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-429.209));
      OpenMapRealVector openMapRealVector1 = new OpenMapRealVector(openMapRealVector0);
      OpenMapRealMatrix openMapRealMatrix0 = openMapRealVector1.outerproduct(openMapRealVector0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(openMapRealMatrix0, 0.0);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getVT();
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(9, 9);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, 9);
      double[] doubleArray0 = eigenDecompositionImpl0.getRealEigenvalues();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[2] = (-699.86);
      doubleArray0[3] = 1267.0545;
      doubleArray0[4] = 0.0;
      doubleArray0[5] = 3340.548;
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = 3620.04015696;
      doubleArray1[1] = (-699.86);
      doubleArray1[2] = 3620.04015696;
      doubleArray1[3] = 3340.548;
      doubleArray1[4] = (-699.86);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      RealVector realVector0 = eigenDecompositionImpl0.getEigenvector(4);
      try { 
        eigenDecompositionImpl0.getEigenvector(419);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 419
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(4, 4);
      RealMatrix realMatrix0 = array2DRowRealMatrix0.scalarMultiply(4);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 4);
      int int0 = (-2813);
      try { 
        eigenDecompositionImpl0.getRealEigenvalue((-2813));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2813
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix();
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, Double.NEGATIVE_INFINITY);
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.linear.TriDiagonalTransformer", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (-429.209);
      doubleArray0[1] = 2264.656652;
      doubleArray0[2] = 2.2250738585072014E-308;
      doubleArray0[3] = -0.0;
      doubleArray0[4] = 0.0;
      doubleArray0[5] = (-1158.85105219);
      doubleArray0[6] = 1.5;
      doubleArray0[7] = 0.0;
      doubleArray0[8] = 2.2250738585072014E-308;
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-429.209));
      OpenMapRealVector openMapRealVector1 = new OpenMapRealVector(openMapRealVector0);
      OpenMapRealMatrix openMapRealMatrix0 = openMapRealVector1.outerproduct(openMapRealVector0);
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(openMapRealMatrix0, 0.0);
      } catch(RuntimeException e) {
         //
         // cannot solve degree 3 equation
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl((double[]) null, (double[]) null, 0.0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 3620.04015696;
      doubleArray0[2] = (-699.86);
      doubleArray0[3] = 1267.0545;
      doubleArray0[4] = 0.0;
      doubleArray0[5] = 3340.548;
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = 3620.04015696;
      doubleArray1[1] = (-699.86);
      doubleArray1[2] = 3620.04015696;
      doubleArray1[3] = 3340.548;
      doubleArray1[4] = (-699.86);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      try { 
        eigenDecompositionImpl0.getEigenvector(419);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 419
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int int0 = 52;
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(52, 52);
      int int1 = 1332;
      int int2 = 4;
      RealMatrix realMatrix0 = array2DRowRealMatrix0.createMatrix(1332, 4);
      boolean boolean0 = array2DRowRealMatrix0.isSquare();
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 52);
      } catch(RuntimeException e) {
         //
         // a 1,332x4 matrix was provided instead of a square matrix
         //
         verifyException("org.apache.commons.math.linear.TriDiagonalTransformer", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl((RealMatrix) null, 54.0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, 0.0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (-6139.621248769021);
      doubleArray0[1] = (-1969.18085875538);
      doubleArray0[2] = 2.2250738585072014E-308;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = 2195.628982;
      doubleArray0[5] = 234.03253120477;
      doubleArray0[6] = (-670.55827);
      doubleArray0[7] = (-2332.6);
      doubleArray0[8] = 0.0;
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, 234.03253120477);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 1.0;
      doubleArray0[3] = 536.5046996068909;
      doubleArray0[4] = (-2613.257570322);
      doubleArray0[5] = (-1030.7044511);
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = 536.5046996068909;
      doubleArray1[1] = 1.0;
      doubleArray1[2] = (-315.4794188946464);
      doubleArray1[3] = 0.0;
      doubleArray1[4] = (-1030.7044511);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      try { 
        eigenDecompositionImpl0.getImagEigenvalue((-250));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -250
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Double[] doubleArray0 = new Double[5];
      Double double0 = new Double(0.0);
      doubleArray0[0] = double0;
      Double double1 = new Double((-960.1584016));
      doubleArray0[1] = double1;
      Double double2 = new Double((-960.1584016));
      doubleArray0[2] = double2;
      Double double3 = new Double((-2097.7928619013));
      doubleArray0[3] = double3;
      Double double4 = new Double((double) doubleArray0[3]);
      doubleArray0[4] = double4;
      boolean boolean0 = Double.isFinite((double) doubleArray0[0]);
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-960.1584016));
      boolean boolean1 = Double.isFinite((-2303.66508521));
      double double5 = Double.min(0.0, 1367.39200188);
      double double6 = Double.min(0.0, 2.2250738585072014E-308);
      OpenMapRealVector openMapRealVector1 = new OpenMapRealVector(openMapRealVector0);
      RealMatrix realMatrix0 = openMapRealVector1.outerProduct((RealVector) openMapRealVector0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (double) doubleArray0[4]);
      int int0 = 20;
      double double7 = Double.min((double) doubleArray0[2], 0.0);
      try { 
        eigenDecompositionImpl0.getRealEigenvalue(20);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 20
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Double[] doubleArray0 = new Double[4];
      Double double0 = new Double((-225.0035982733678));
      doubleArray0[0] = double0;
      Double double1 = new Double((-225.0035982733678));
      doubleArray0[1] = double1;
      Double double2 = Double.valueOf((-225.0035982733678));
      doubleArray0[2] = double2;
      Double double3 = new Double((double) doubleArray0[1]);
      doubleArray0[3] = double3;
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0);
      double[] doubleArray1 = new double[3];
      doubleArray1[0] = (double) doubleArray0[2];
      doubleArray1[1] = (double) doubleArray0[1];
      double double4 = Double.min(2.2250738585072014E-308, (-225.0035982733678));
      doubleArray1[2] = (-225.0035982733678);
      ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray1);
      try { 
        arrayRealVector1.ebeDivide(doubleArray1);
      } catch(IllegalArgumentException e) {
         //
         // vector length mismatch: got 7 but expected 3
         //
         verifyException("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (-537.9003975634974);
      doubleArray0[1] = 450.0;
      doubleArray0[2] = 2315.523276576739;
      doubleArray0[3] = (-48.3);
      doubleArray0[4] = Double.POSITIVE_INFINITY;
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, (-48.3));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl((RealMatrix) null, 0.0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 3.0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = 1668.4928639829172;
      doubleArray0[5] = 0.0;
      doubleArray0[6] = (-1885.1480300648);
      doubleArray0[7] = 0.0;
      doubleArray0[8] = 1401.0;
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, 0.0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }
}
