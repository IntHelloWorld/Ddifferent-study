* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.math.linear.EigenDecompositionImpl
* Starting client
* Connecting to master process on port 6657
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/patch1-Math-80-CapGen-plausible/Math_80_1-plausible_capgen/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math.linear.EigenDecompositionImpl
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 851
  - Branch 428
  - Exception 0
  - MutationFactory 212
  - Output 28
  - Method 17
  - MethodNoException 17
  - CBranchFitnessFactory 428
* Using seed 1585404038366
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%][Progress:>                             3%] [Cov:>                                  0%][Progress:>                             3%] [Cov:>                                  1%][Progress:>                             3%] [Cov:====>                              13%][Progress:=>                            5%] [Cov:>                                  1%][Progress:=>                            5%] [Cov:>                                  2%][Progress:=>                            5%] [Cov:====>                              14%][Progress:=>                            5%] [Cov:=====>                             16%][Progress:=>                            5%] [Cov:=====>                             17%][Progress:===>                          10%] [Cov:==>                                7%][Progress:===>                          10%] [Cov:====>                              13%][Progress:===>                          10%] [Cov:=========>                         26%][Progress:===>                          10%] [Cov:===========>                       33%][Progress:===>                          10%] [Cov:===========>                       34%][Progress:===>                          10%] [Cov:============>                      36%][Progress:===>                          10%] [Cov:============>                      37%][Progress:===>                          10%] [Cov:==============>                    42%][Progress:===>                          11%] [Cov:>                                  0%][Progress:===>                          11%] [Cov:>                                  1%][Progress:===>                          11%] [Cov:====>                              13%][Progress:===>                          13%] [Cov:====>                              12%][Progress:===>                          13%] [Cov:====>                              14%][Progress:=====>                        18%] [Cov:>                                  0%][Progress:=====>                        18%] [Cov:====>                              13%][Progress:======>                       20%] [Cov:>                                  0%][Progress:======>                       20%] [Cov:>                                  1%][Progress:======>                       20%] [Cov:====>                              13%][Progress:======>                       20%] [Cov:====>                              14%][Progress:======>                       23%] [Cov:>                                  0%][Progress:======>                       23%] [Cov:>                                  1%][Progress:======>                       23%] [Cov:====>                              13%][Progress:======>                       23%] [Cov:====>                              14%][Progress:=======>                      25%] [Cov:>                                  0%][Progress:=======>                      25%] [Cov:>                                  1%][Progress:=======>                      25%] [Cov:====>                              13%][Progress:=======>                      25%] [Cov:====>                              14%][Progress:========>                     28%] [Cov:>                                  1%][Progress:========>                     28%] [Cov:====>                              13%][Progress:========>                     28%] [Cov:====>                              14%][Progress:========>                     28%] [Cov:=====>                             15%][Progress:========>                     28%] [Cov:=====>                             16%][Progress:========>                     28%] [Cov:=====>                             17%][Progress:========>                     28%] [Cov:======>                            19%][Progress:========>                     28%] [Cov:=======>                           20%][Progress:========>                     28%] [Cov:=======>                           21%][Progress:========>                     28%] [Cov:==============>                    42%][Progress:=========>                    30%] [Cov:=======>                           20%][Progress:=========>                    30%] [Cov:============>                      36%][Progress:=========>                    30%] [Cov:============>                      37%][Progress:=========>                    30%] [Cov:==============>                    42%][Progress:=========>                    31%] [Cov:====>                              13%][Progress:=========>                    31%] [Cov:====>                              14%][Progress:=========>                    31%] [Cov:=====>                             15%][Progress:=========>                    31%] [Cov:=====>                             16%][Progress:=========>                    31%] [Cov:=====>                             17%][Progress:=========>                    31%] [Cov:=======>                           22%][Progress:=========>                    31%] [Cov:========>                          23%][Progress:=========>                    31%] [Cov:========>                          25%][Progress:=========>                    31%] [Cov:============>                      36%][Progress:=========>                    31%] [Cov:============>                      37%][Progress:=========>                    31%] [Cov:==============>                    42%][Progress:=========>                    33%] [Cov:=======>                           22%][Progress:=========>                    33%] [Cov:========>                          25%][Progress:=========>                    33%] [Cov:=========>                         26%][Progress:=========>                    33%] [Cov:=========>                         27%][Progress:=========>                    33%] [Cov:==========>                        30%][Progress:=========>                    33%] [Cov:============>                      36%][Progress:=========>                    33%] [Cov:============>                      37%][Progress:=========>                    33%] [Cov:==============>                    42%][Progress:==========>                   35%] [Cov:================>                  47%][Progress:===========>                  38%] [Cov:==============>                    41%][Progress:===========>                  38%] [Cov:================>                  47%][Progress:============>                 40%] [Cov:==============>                    41%][Progress:============>                 40%] [Cov:================>                  47%][Progress:============>                 40%] [Cov:================>                  47%][Progress:============>                 41%] [Cov:==============>                    41%][Progress:============>                 41%] [Cov:===============>                   43%][Progress:============>                 41%] [Cov:===============>                   44%][Progress:============>                 41%] [Cov:================>                  47%][Progress:============>                 43%] [Cov:================>                  47%][Progress:=============>                45%] [Cov:==============>                    41%][Progress:=============>                45%] [Cov:================>                  47%][Progress:=============>                46%] [Cov:===============>                   43%][Progress:=============>                46%] [Cov:================>                  47%][Progress:==============>               48%] [Cov:================>                  47%][Progress:===============>              51%] [Cov:================>                  48%][Progress:===============>              53%] [Cov:==============>                    42%][Progress:===============>              53%] [Cov:================>                  48%][Progress:================>             55%] [Cov:================>                  48%][Progress:================>             56%] [Cov:================>                  48%][Progress:=================>            58%] [Cov:================>                  48%][Progress:==================>           60%] [Cov:================>                  48%][Progress:==================>           61%] [Cov:================>                  48%][Progress:==================>           63%] [Cov:================>                  48%][Progress:===================>          65%] [Cov:==============>                    42%][Progress:===================>          65%] [Cov:================>                  48%][Progress:===================>          65%] [Cov:=================>                 49%][Progress:===================>          65%] [Cov:=================>                 50%][Progress:===================>          65%] [Cov:=================>                 51%][Progress:===================>          65%] [Cov:==================>                53%][Progress:===================>          66%] [Cov:===============>                   43%][Progress:===================>          66%] [Cov:================>                  48%][Progress:====================>         68%] [Cov:==================>                54%][Progress:=====================>        70%] [Cov:==================>                53%][Progress:=====================>        70%] [Cov:==================>                54%][Progress:=====================>        71%] [Cov:==================>                53%][Progress:=====================>        71%] [Cov:==================>                54%][Progress:=====================>        73%] [Cov:==================>                54%][Progress:======================>       75%] [Cov:==================>                54%][Progress:======================>       75%] [Cov:===================>               55%][Progress:======================>       75%] [Cov:===================>               56%][Progress:======================>       76%] [Cov:==================>                54%][Progress:======================>       76%] [Cov:===================>               55%][Progress:=======================>      78%] [Cov:==================>                54%][Progress:========================>     80%] [Cov:===================>               57%][Progress:========================>     81%] [Cov:===================>               56%][Progress:========================>     81%] [Cov:===================>               57%][Progress:========================>     83%] [Cov:===================>               56%][Progress:========================>     83%] [Cov:===================>               57%][Progress:=========================>    85%] [Cov:===================>               57%][Progress:=========================>    86%] [Cov:===================>               57%][Progress:=========================>    86%] [Cov:====================>              58%][Progress:=========================>    86%] [Cov:====================>              59%][Progress:==========================>   88%] [Cov:===================>               57%][Progress:===========================>  90%] [Cov:====================>              59%][Progress:===========================>  91%] [Cov:====================>              59%][Progress:===========================>  93%] [Cov:====================>              59%][Progress:===========================>  93%] [Cov:=====================>             60%][Progress:============================> 95%] [Cov:=====================>             60%][Progress:============================> 96%] [Cov:=====================>             60%][Progress:============================> 96%] [Cov:=====================>             61%][Progress:=============================>98%] [Cov:=====================>             60%][Progress:==============================100%] [Cov:=====================>             61%][Progress:==============================100%] [Cov:=====================>             61%][Progress:==============================100%] [Cov:=====================>             61%][Progress:==============================100%] [Cov:=====================>             62%]
* Search finished after 63s and 13 generations, 9646 statements, best individual has fitness: 1057.4827811324033
* Minimizing test suite
* Going to analyze the coverage criteria
[MASTER] 22:03:11.922 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 80%
* Total number of goals: 851
* Number of covered goals: 679
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 69%
* Total number of goals: 428
* Number of covered goals: 297
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 52%
* Total number of goals: 212
* Number of covered goals: 111
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 18%
* Total number of goals: 28
* Number of covered goals: 5
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 65%
* Total number of goals: 17
* Number of covered goals: 11
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 47%
* Total number of goals: 17
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 69%
* Total number of goals: 428
* Number of covered goals: 297
* Generated 47 tests with total length 1107
* Resulting test suite's coverage: 63% (average coverage for all fitness functions)
* Compiling and checking tests
* Writing JUnit test case 'EigenDecompositionImpl_ESTest' to evosuite-tests
* Done!

* Computation finished
