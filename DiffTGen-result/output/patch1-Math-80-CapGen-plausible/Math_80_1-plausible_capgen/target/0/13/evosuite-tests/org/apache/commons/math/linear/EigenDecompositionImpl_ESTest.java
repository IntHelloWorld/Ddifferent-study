/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 28 14:00:22 GMT 2020
 */

package org.apache.commons.math.linear;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.linear.Array2DRowRealMatrix;
import org.apache.commons.math.linear.ArrayRealVector;
import org.apache.commons.math.linear.DecompositionSolver;
import org.apache.commons.math.linear.EigenDecompositionImpl;
import org.apache.commons.math.linear.OpenMapRealMatrix;
import org.apache.commons.math.linear.OpenMapRealVector;
import org.apache.commons.math.linear.RealMatrix;
import org.apache.commons.math.linear.RealVector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EigenDecompositionImpl_ESTest extends EigenDecompositionImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = (-534.1631197420555);
      doubleArray0[2] = (-251.0);
      doubleArray0[3] = 0.0;
      doubleArray0[4] = (-2185.93334093076);
      doubleArray0[5] = (-1464.598566);
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = (-251.0);
      doubleArray1[1] = (-2185.93334093076);
      doubleArray1[2] = (-534.1631197420555);
      doubleArray1[3] = (-251.0);
      doubleArray1[4] = (-2185.93334093076);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-2185.93334093076));
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getV();
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      try { 
        eigenDecompositionImpl0.getEigenvector(3124);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3124
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = (-534.1631197420555);
      doubleArray0[2] = (-251.0);
      doubleArray0[3] = 0.0;
      doubleArray0[5] = (-1464.598566);
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = (-251.0);
      doubleArray1[1] = (-2185.93334093076);
      doubleArray1[2] = (-534.1631197420555);
      doubleArray1[3] = (-251.0);
      doubleArray1[4] = (-2185.93334093076);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      double double0 = eigenDecompositionImpl0.getRealEigenvalue(0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = (-534.1631197420555);
      doubleArray0[2] = (-251.0);
      doubleArray0[3] = 0.0;
      doubleArray0[4] = (-2185.93334093076);
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = (-251.0);
      doubleArray1[1] = (-2185.93334093076);
      doubleArray1[2] = (-534.1631197420555);
      doubleArray1[3] = (-251.0);
      doubleArray1[4] = (-2185.93334093076);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-2185.93334093076));
      double double0 = eigenDecompositionImpl0.getRealEigenvalue(0);
      double double1 = eigenDecompositionImpl0.getDeterminant();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = (-534.1631197420555);
      doubleArray0[2] = (-251.0);
      doubleArray0[3] = 0.0;
      doubleArray0[4] = (-2185.93334093076);
      doubleArray0[5] = (-1464.598566);
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = (-251.0);
      doubleArray1[1] = (-2185.93334093076);
      doubleArray1[2] = (-534.1631197420555);
      doubleArray1[3] = (-251.0);
      doubleArray1[4] = (-2185.93334093076);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-2185.93334093076));
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getV();
      double double0 = eigenDecompositionImpl0.getRealEigenvalue(0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = (-534.1631197420555);
      doubleArray0[2] = (-251.0);
      doubleArray0[3] = (-534.1631197420555);
      doubleArray0[4] = (-2185.93334093076);
      doubleArray0[5] = (-1464.598566);
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = (-251.0);
      doubleArray1[1] = (-2185.93334093076);
      doubleArray1[2] = (-534.1631197420555);
      doubleArray1[3] = (-251.0);
      doubleArray1[4] = (-2185.93334093076);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-2185.93334093076));
      double double0 = eigenDecompositionImpl0.getRealEigenvalue(0);
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ArrayRealVector arrayRealVector0 = new ArrayRealVector();
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector();
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix();
      RealVector realVector0 = arrayRealVector0.copy();
      double double0 = (-414.530183778);
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, (-414.530183778));
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.linear.TriDiagonalTransformer", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = (-534.1631197420555);
      doubleArray0[2] = (-251.0);
      doubleArray0[3] = 0.0;
      doubleArray0[4] = (-2185.93334093076);
      doubleArray0[5] = (-251.0);
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = (-251.0);
      doubleArray1[1] = (-251.0);
      doubleArray1[2] = (-534.1631197420555);
      doubleArray1[3] = (-251.0);
      doubleArray1[4] = (-2185.93334093076);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-2185.93334093076));
      double double0 = eigenDecompositionImpl0.getRealEigenvalue(0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Double[] doubleArray0 = new Double[5];
      Double double0 = new Double(0.0);
      doubleArray0[0] = double0;
      Double double1 = new Double((double) doubleArray0[0]);
      doubleArray0[1] = double1;
      Double double2 = new Double((-2733.544889469848));
      doubleArray0[2] = double2;
      Double double3 = new Double(54.0);
      doubleArray0[3] = double3;
      Double double4 = new Double((-453.88731127));
      doubleArray0[4] = double4;
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
      OpenMapRealMatrix openMapRealMatrix0 = openMapRealVector0.outerproduct(openMapRealVector0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(openMapRealMatrix0, (double) doubleArray0[1]);
      double double5 = eigenDecompositionImpl0.getDeterminant();
      boolean boolean0 = Double.isFinite((double) doubleArray0[2]);
      double double6 = eigenDecompositionImpl0.getRealEigenvalue(0);
      double double7 = Double.max(2.0145069237824996E-13, 1.0);
      try { 
        eigenDecompositionImpl0.getEigenvector(5676);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5676
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = 0.0;
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, false);
      RealMatrix realMatrix0 = arrayRealVector0.outerProduct(doubleArray0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getD();
      DecompositionSolver decompositionSolver1 = eigenDecompositionImpl0.getSolver();
      DecompositionSolver decompositionSolver2 = eigenDecompositionImpl0.getSolver();
      try { 
        eigenDecompositionImpl0.getRealEigenvalue(1);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = 32;
      int int1 = 2395;
      OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(32, 2395);
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(openMapRealMatrix0, (-2811.7));
      } catch(RuntimeException e) {
         //
         // row index 32 out of allowed range [0, 31]
         //
         verifyException("org.apache.commons.math.linear.MatrixUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = 1650.5;
      double[] doubleArray1 = new double[0];
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-848.673587));
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      int int0 = 2343;
      try { 
        eigenDecompositionImpl0.getRealEigenvalue(2343);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2343
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = 2175.674;
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
      RealMatrix realMatrix0 = array2DRowRealMatrix0.scalarAdd(2175.674);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 2.0);
      double[] doubleArray1 = eigenDecompositionImpl0.getRealEigenvalues();
      try { 
        eigenDecompositionImpl0.getEigenvector(859);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 859
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = (-534.1631197420555);
      doubleArray0[2] = (-251.0);
      doubleArray0[3] = 0.0;
      doubleArray0[4] = (-2185.93334093076);
      doubleArray0[5] = (-1464.598566);
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = (-251.0);
      doubleArray1[1] = (-2185.93334093076);
      doubleArray1[2] = (-534.1631197420555);
      doubleArray1[3] = (-251.0);
      doubleArray1[4] = (-2185.93334093076);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-2185.93334093076));
      double double0 = eigenDecompositionImpl0.getRealEigenvalue(0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, 22.0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl((double[]) null, (double[]) null, 0.0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (-1267.075036937);
      doubleArray0[1] = (-443.396);
      doubleArray0[2] = 2205.747805;
      doubleArray0[3] = 1938.4931699437;
      doubleArray0[4] = 0.0;
      doubleArray0[5] = 27.0;
      doubleArray0[6] = (-784.54629);
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, 0.0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 3719.8187899;
      doubleArray0[1] = 0.0;
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
      RealMatrix realMatrix0 = array2DRowRealMatrix0.copy();
      double double0 = (-2606.745470718);
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, (-2606.745470718));
      } catch(RuntimeException e) {
         //
         // a 2x1 matrix was provided instead of a square matrix
         //
         verifyException("org.apache.commons.math.linear.TriDiagonalTransformer", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl((RealMatrix) null, 2315.17139511782);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = (-534.1631197420555);
      doubleArray0[2] = (-251.0);
      doubleArray0[3] = 0.0;
      doubleArray0[4] = 0.0;
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = (-251.0);
      doubleArray1[1] = (-2185.93334093076);
      doubleArray1[2] = (-534.1631197420555);
      doubleArray1[4] = (-2185.93334093076);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      double double0 = eigenDecompositionImpl0.getRealEigenvalue(0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Double[] doubleArray0 = new Double[6];
      Double double0 = new Double(0.0);
      doubleArray0[0] = double0;
      Double double1 = new Double(0.0);
      doubleArray0[1] = double1;
      Double double2 = new Double(0.0);
      doubleArray0[2] = double2;
      Double double3 = new Double((-3545.0));
      doubleArray0[3] = double3;
      Double double4 = new Double((-1796.106414466306));
      doubleArray0[4] = double4;
      Double double5 = new Double(2332.013838);
      doubleArray0[5] = double5;
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, 1237.8867929101634);
      OpenMapRealVector openMapRealVector1 = new OpenMapRealVector(openMapRealVector0);
      RealMatrix realMatrix0 = openMapRealVector0.outerProduct((RealVector) openMapRealVector1);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (-3545.0));
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[1] = 142.2;
      doubleArray0[2] = (-313.6);
      doubleArray0[3] = 0.9999999999999998;
      doubleArray0[4] = (-1518.5855967892874);
      doubleArray0[5] = 0.0;
      doubleArray0[6] = 0.9999999999999998;
      doubleArray0[7] = (-1012.945448534418);
      doubleArray0[8] = 3662.03;
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, 0.0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 3824.662956742385;
      doubleArray0[1] = 1.0E-12;
      doubleArray0[2] = 3.0;
      doubleArray0[3] = 3076.56895;
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, 0.0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 2640.656016163667;
      doubleArray0[1] = 1.1102230246251565E-14;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 6.283185307179586;
      doubleArray0[4] = 1036.1905740923;
      doubleArray0[5] = 0.0;
      doubleArray0[6] = 1047.2122666327894;
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
      RealMatrix realMatrix0 = array2DRowRealMatrix0.scalarAdd(0.0);
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
      } catch(RuntimeException e) {
         //
         // a 7x1 matrix was provided instead of a square matrix
         //
         verifyException("org.apache.commons.math.linear.TriDiagonalTransformer", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (-1352.2287025814);
      doubleArray0[1] = Double.NEGATIVE_INFINITY;
      doubleArray0[2] = Double.POSITIVE_INFINITY;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = 733.5438;
      doubleArray0[5] = (-2655.8);
      doubleArray0[6] = 12.566370614359172;
      doubleArray0[7] = (-1110.67352324);
      doubleArray0[8] = 0.0;
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, 12.566370614359172);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }
}
