* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.math.linear.EigenDecompositionImpl
* Starting client
* Connecting to master process on port 7167
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/patch1-Math-80-CapGen-plausible/Math_80_1-plausible_capgen/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math.linear.EigenDecompositionImpl
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 851
  - Branch 428
  - Exception 0
  - MutationFactory 212
  - Output 28
  - Method 17
  - MethodNoException 17
  - CBranchFitnessFactory 428
* Using seed 1585404038421
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%][Progress:=>                            5%] [Cov:>                                  0%][Progress:=>                            5%] [Cov:====>                              12%][Progress:=>                            6%] [Cov:>                                  0%][Progress:=>                            6%] [Cov:>                                  1%][Progress:=>                            6%] [Cov:====>                              13%][Progress:=>                            6%] [Cov:====>                              14%][Progress:==>                           8%] [Cov:>                                  2%][Progress:==>                           8%] [Cov:=>                                 4%][Progress:==>                           8%] [Cov:=====>                             16%][Progress:==>                           8%] [Cov:=====>                             17%][Progress:==>                           8%] [Cov:======>                            18%][Progress:==>                           8%] [Cov:=======>                           20%][Progress:==>                           8%] [Cov:=======>                           21%][Progress:==>                           8%] [Cov:=======>                           22%][Progress:===>                          10%] [Cov:>                                  0%][Progress:===>                          10%] [Cov:>                                  1%][Progress:===>                          10%] [Cov:====>                              13%][Progress:===>                          10%] [Cov:====>                              14%][Progress:===>                          11%] [Cov:====>                              13%][Progress:===>                          11%] [Cov:====>                              14%][Progress:===>                          13%] [Cov:====>                              13%][Progress:=====>                        18%] [Cov:>                                  0%][Progress:=====>                        18%] [Cov:====>                              12%][Progress:=====>                        18%] [Cov:====>                              13%][Progress:=====>                        18%] [Cov:====>                              14%][Progress:=====>                        18%] [Cov:=====>                             16%][Progress:=====>                        18%] [Cov:======>                            18%][Progress:=====>                        18%] [Cov:======>                            19%][Progress:=====>                        18%] [Cov:========>                          23%][Progress:=====>                        18%] [Cov:========>                          25%][Progress:=====>                        18%] [Cov:=========>                         26%][Progress:======>                       20%] [Cov:>                                  0%][Progress:======>                       20%] [Cov:>                                  1%][Progress:======>                       20%] [Cov:====>                              13%][Progress:======>                       20%] [Cov:====>                              14%][Progress:======>                       21%] [Cov:>                                  0%][Progress:======>                       21%] [Cov:>                                  1%][Progress:======>                       21%] [Cov:====>                              13%][Progress:======>                       21%] [Cov:====>                              14%][Progress:======>                       23%] [Cov:>                                  0%][Progress:======>                       23%] [Cov:>                                  1%][Progress:======>                       23%] [Cov:====>                              13%][Progress:======>                       23%] [Cov:====>                              14%][Progress:======>                       23%] [Cov:=====>                             15%][Progress:======>                       23%] [Cov:=====>                             17%][Progress:======>                       23%] [Cov:======>                            19%][Progress:=======>                      25%] [Cov:====>                              13%][Progress:=======>                      25%] [Cov:====>                              14%][Progress:=======>                      25%] [Cov:=========>                         26%][Progress:=======>                      26%] [Cov:====>                              13%][Progress:=======>                      26%] [Cov:======>                            19%][Progress:=======>                      26%] [Cov:========>                          25%][Progress:=======>                      26%] [Cov:=========>                         26%][Progress:========>                     28%] [Cov:====>                              13%][Progress:========>                     28%] [Cov:=========>                         26%][Progress:=========>                    31%] [Cov:==========>                        31%][Progress:=========>                    33%] [Cov:==========>                        30%][Progress:=========>                    33%] [Cov:==========>                        31%][Progress:==========>                   36%] [Cov:==========>                        31%][Progress:===========>                  38%] [Cov:==========>                        30%][Progress:===========>                  38%] [Cov:==========>                        31%][Progress:===========>                  38%] [Cov:==========>                        31%][Progress:============>                 40%] [Cov:==========>                        30%][Progress:============>                 40%] [Cov:==========>                        31%][Progress:============>                 41%] [Cov:==========>                        30%][Progress:============>                 41%] [Cov:==========>                        31%][Progress:=============>                45%] [Cov:===========>                       32%][Progress:=============>                46%] [Cov:==========>                        31%][Progress:=============>                46%] [Cov:===========>                       32%][Progress:==============>               48%] [Cov:==========>                        31%][Progress:==============>               48%] [Cov:===========>                       32%][Progress:===============>              51%] [Cov:===========>                       32%][Progress:===============>              53%] [Cov:===========>                       32%][Progress:================>             55%] [Cov:==========>                        30%][Progress:================>             55%] [Cov:==========>                        31%][Progress:================>             56%] [Cov:===========>                       33%][Progress:================>             56%] [Cov:============>                      35%][Progress:================>             56%] [Cov:=============>                     39%][Progress:================>             56%] [Cov:==============>                    40%][Progress:=================>            58%] [Cov:==========>                        30%][Progress:=================>            58%] [Cov:==========>                        31%][Progress:=================>            58%] [Cov:===========>                       32%][Progress:==================>           60%] [Cov:===========>                       32%][Progress:==================>           61%] [Cov:===============>                   43%][Progress:==================>           63%] [Cov:==============>                    42%][Progress:===================>          65%] [Cov:==============>                    42%][Progress:===================>          66%] [Cov:===============>                   43%][Progress:====================>         68%] [Cov:==============>                    42%][Progress:====================>         68%] [Cov:===============>                   43%][Progress:=====================>        70%] [Cov:==============>                    42%][Progress:=====================>        71%] [Cov:===============>                   43%][Progress:=====================>        73%] [Cov:==============>                    42%][Progress:=====================>        73%] [Cov:===============>                   43%][Progress:=====================>        73%] [Cov:===============>                   44%][Progress:======================>       75%] [Cov:===============>                   44%][Progress:======================>       76%] [Cov:==============>                    42%][Progress:======================>       76%] [Cov:===============>                   44%][Progress:=======================>      78%] [Cov:===============>                   44%][Progress:========================>     80%] [Cov:==============>                    41%][Progress:========================>     80%] [Cov:===============>                   44%][Progress:========================>     81%] [Cov:==============>                    42%][Progress:========================>     81%] [Cov:===============>                   44%][Progress:========================>     83%] [Cov:===============>                   45%][Progress:=========================>    85%] [Cov:===============>                   44%][Progress:=========================>    85%] [Cov:===============>                   45%][Progress:=========================>    86%] [Cov:===============>                   44%][Progress:=========================>    86%] [Cov:===============>                   45%][Progress:==========================>   88%] [Cov:===============>                   45%][Progress:===========================>  90%] [Cov:===============>                   43%][Progress:===========================>  90%] [Cov:===============>                   45%][Progress:===========================>  91%] [Cov:==============>                    42%][Progress:===========================>  91%] [Cov:===============>                   45%][Progress:===========================>  93%] [Cov:===============>                   45%][Progress:============================> 95%] [Cov:===============>                   44%][Progress:============================> 95%] [Cov:===============>                   45%][Progress:============================> 96%] [Cov:===============>                   43%][Progress:============================> 96%] [Cov:===============>                   45%][Progress:=============================>98%] [Cov:===============>                   45%][Progress:==============================100%] [Cov:===============>                   45%][Progress:==============================100%] [Cov:===============>                   45%][Progress:==============================100%] [Cov:===============>                   45%][Progress:==============================100%] [Cov:================>                  47%]
* Search finished after 62s and 14 generations, 9661 statements, best individual has fitness: 2242.3912641612637
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 50%
* Total number of goals: 851
* Number of covered goals: 424
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 36%
* Total number of goals: 428
* Number of covered goals: 154
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 41%
* Total number of goals: 212
* Number of covered goals: 86
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 18%
* Total number of goals: 28
* Number of covered goals: 5
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 59%
* Total number of goals: 17
* Number of covered goals: 10
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 41%
* Total number of goals: 17
* Number of covered goals: 7
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 36%
* Total number of goals: 428
* Number of covered goals: 154
* Generated 25 tests with total length 116
* Resulting test suite's coverage: 47% (average coverage for all fitness functions)
* Compiling and checking tests
* Computation finished
