* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer
* Starting client
* Connecting to master process on port 3037
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/patch1-Math-57-SOFix/Math_57_1_sofix/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 115
  - Branch 64
  - Exception 0
  - MutationFactory 161
  - Output 6
  - Method 3
  - MethodNoException 3
  - CBranchFitnessFactory 64
[Progress:>                             0%] [Cov:>                                  0%]* Using seed 1585471947729
* Starting evolution
[Progress:=====>                        18%] [Cov:>                                  1%][Progress:=====>                        18%] [Cov:====>                              13%][Progress:=====>                        18%] [Cov:========>                          24%][Progress:=====>                        18%] [Cov:==========>                        31%][Progress:======>                       20%] [Cov:>                                  0%][Progress:======>                       20%] [Cov:>                                  1%][Progress:======>                       20%] [Cov:====>                              13%][Progress:======>                       20%] [Cov:======>                            19%][Progress:======>                       20%] [Cov:========>                          23%][Progress:=======>                      25%] [Cov:>                                  0%][Progress:=======>                      25%] [Cov:====>                              12%][Progress:=======>                      25%] [Cov:====>                              13%][Progress:=======>                      25%] [Cov:=======>                           20%][Progress:=======>                      25%] [Cov:========>                          24%][Progress:==========>                   35%] [Cov:>                                  2%][Progress:==========>                   35%] [Cov:=>                                 3%][Progress:==========>                   35%] [Cov:=====>                             15%][Progress:==========>                   35%] [Cov:=========>                         26%][Progress:==========>                   35%] [Cov:===========>                       34%][Progress:==========>                   35%] [Cov:============>                      35%][Progress:==========>                   35%] [Cov:===============>                   45%][Progress:==========>                   35%] [Cov:================>                  46%][Progress:==========>                   35%] [Cov:=================>                 51%][Progress:==========>                   35%] [Cov:==================>                54%][Progress:==========>                   36%] [Cov:>                                  1%][Progress:==========>                   36%] [Cov:====>                              13%][Progress:==========>                   36%] [Cov:=======>                           20%][Progress:==========>                   36%] [Cov:========>                          24%][Progress:==========>                   36%] [Cov:=========>                         27%][Progress:==========>                   36%] [Cov:=============>                     38%][Progress:==========>                   36%] [Cov:=================>                 49%][Progress:==========>                   36%] [Cov:==================>                52%][Progress:============>                 41%] [Cov:>                                  1%][Progress:============>                 41%] [Cov:====>                              13%][Progress:============>                 41%] [Cov:========>                          24%][Progress:============>                 41%] [Cov:==========>                        31%][Progress:=============>                45%] [Cov:=>                                 5%][Progress:=============>                45%] [Cov:===>                               9%][Progress:=============>                45%] [Cov:=======>                           21%][Progress:=============>                45%] [Cov:=========>                         26%][Progress:=============>                45%] [Cov:==========>                        30%][Progress:=============>                45%] [Cov:============>                      37%][Progress:=============>                45%] [Cov:===============>                   45%][Progress:=============>                45%] [Cov:================>                  47%][Progress:===============>              50%] [Cov:>                                  2%][Progress:===============>              50%] [Cov:=>                                 3%][Progress:===============>              50%] [Cov:=====>                             15%][Progress:===============>              50%] [Cov:=====>                             16%][Progress:===============>              50%] [Cov:=========>                         27%][Progress:===============>              50%] [Cov:===========>                       34%][Progress:===============>              50%] [Cov:============>                      35%][Progress:===============>              50%] [Cov:=============>                     38%][Progress:===============>              50%] [Cov:=================>                 49%][Progress:===============>              50%] [Cov:=================>                 50%][Progress:===============>              50%] [Cov:================>                  47%][Progress:===============>              51%] [Cov:==========>                        31%][Progress:===============>              51%] [Cov:================>                  47%][Progress:===============>              51%] [Cov:=================>                 50%][Progress:===============>              51%] [Cov:==================>                52%][Progress:================>             56%] [Cov:===========>                       32%][Progress:================>             56%] [Cov:===========>                       33%][Progress:================>             56%] [Cov:============>                      35%][Progress:=================>            58%] [Cov:=====================>             60%][Progress:==================>           61%] [Cov:=====================>             60%][Progress:===================>          65%] [Cov:===================>               57%][Progress:===================>          65%] [Cov:====================>              59%][Progress:===================>          65%] [Cov:=====================>             60%][Progress:===================>          66%] [Cov:====================>              59%][Progress:===================>          66%] [Cov:=====================>             60%][Progress:====================>         68%] [Cov:=====================>             60%][Progress:=====================>        70%] [Cov:===================>               57%][Progress:=====================>        70%] [Cov:====================>              59%][Progress:=====================>        73%] [Cov:===================>               57%][Progress:=====================>        73%] [Cov:====================>              59%][Progress:=====================>        73%] [Cov:=====================>             60%][Progress:=====================>        73%] [Cov:=====================>             60%][Progress:======================>       76%] [Cov:=====================>             60%][Progress:========================>     80%] [Cov:=====================>             60%][Progress:=========================>    85%] [Cov:=====================>             60%][Progress:==========================>   88%] [Cov:=====================>             60%][Progress:==========================>   88%] [Cov:=====================>             60%][Progress:===========================>  91%] [Cov:=====================>             60%][Progress:============================> 95%] [Cov:=====================>             60%][Progress:============================> 96%] [Cov:=====================>             60%][Progress:==============================100%] [Cov:=====================>             60%][Progress:==============================100%] [Cov:=====================>             60%][Progress:==============================100%] [Cov:=====================>             60%][Progress:==============================100%] [Cov:======================>            63%]
* Search finished after 63s and 5 generations, 3658 statements, best individual has fitness: 259.51638418079096
* Minimizing test suite
[MASTER] 16:54:45.740 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 50%
* Total number of goals: 115
* Number of covered goals: 57
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 39%
* Total number of goals: 64
* Number of covered goals: 25
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 51%
* Total number of goals: 161
* Number of covered goals: 82
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 33%
* Total number of goals: 6
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 39%
* Total number of goals: 64
* Number of covered goals: 25
* Generated 9 tests with total length 230
* Resulting test suite's coverage: 64% (average coverage for all fitness functions)
* Compiling and checking tests
* Writing JUnit test case 'KMeansPlusPlusClusterer_ESTest' to evosuite-tests
* Done!

* Computation finished
