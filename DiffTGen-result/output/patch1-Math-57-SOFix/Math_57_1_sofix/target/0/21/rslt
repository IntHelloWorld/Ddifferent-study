* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer
* Starting client
* Connecting to master process on port 9910
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/patch1-Math-57-SOFix/Math_57_1_sofix/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 115
  - Branch 64
  - Exception 0
  - MutationFactory 161
  - Output 6
  - Method 3
  - MethodNoException 3
  - CBranchFitnessFactory 64
* Using seed 1585471947941
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%][Progress:====>                         15%] [Cov:>                                  1%][Progress:====>                         15%] [Cov:====>                              13%][Progress:====>                         15%] [Cov:========>                          24%][Progress:====>                         15%] [Cov:==========>                        31%][Progress:====>                         16%] [Cov:>                                  0%][Progress:====>                         16%] [Cov:>                                  1%][Progress:====>                         16%] [Cov:====>                              13%][Progress:====>                         16%] [Cov:======>                            19%][Progress:====>                         16%] [Cov:========>                          23%][Progress:====>                         16%] [Cov:========>                          24%][Progress:====>                         16%] [Cov:==========>                        31%][Progress:=======>                      26%] [Cov:>                                  0%][Progress:=======>                      26%] [Cov:>                                  1%][Progress:=======>                      26%] [Cov:====>                              13%][Progress:=======>                      26%] [Cov:======>                            19%][Progress:=======>                      26%] [Cov:=========>                         27%][Progress:=======>                      26%] [Cov:==========>                        31%][Progress:========>                     28%] [Cov:>                                  1%][Progress:========>                     28%] [Cov:====>                              13%][Progress:========>                     28%] [Cov:========>                          24%][Progress:========>                     28%] [Cov:==========>                        31%][Progress:=========>                    33%] [Cov:>                                  1%][Progress:=========>                    33%] [Cov:====>                              13%][Progress:=========>                    33%] [Cov:========>                          24%][Progress:=========>                    33%] [Cov:==========>                        31%][Progress:=========>                    33%] [Cov:=============>                     38%][Progress:=========>                    33%] [Cov:=================>                 49%][Progress:=========>                    33%] [Cov:==================>                52%][Progress:===========>                  38%] [Cov:>                                  1%][Progress:===========>                  38%] [Cov:====>                              13%][Progress:===========>                  38%] [Cov:========>                          24%][Progress:===========>                  38%] [Cov:==========>                        31%][Progress:============>                 43%] [Cov:>                                  2%][Progress:============>                 43%] [Cov:=>                                 3%][Progress:============>                 43%] [Cov:=====>                             15%][Progress:============>                 43%] [Cov:=====>                             16%][Progress:============>                 43%] [Cov:=========>                         27%][Progress:============>                 43%] [Cov:===========>                       34%][Progress:============>                 43%] [Cov:============>                      35%][Progress:==============>               48%] [Cov:>                                  2%][Progress:==============>               48%] [Cov:=>                                 3%][Progress:==============>               48%] [Cov:=====>                             15%][Progress:==============>               48%] [Cov:=====>                             16%][Progress:==============>               48%] [Cov:=========>                         27%][Progress:==============>               48%] [Cov:===========>                       34%][Progress:==============>               48%] [Cov:============>                      35%][Progress:==============>               48%] [Cov:==================>                52%][Progress:===============>              50%] [Cov:==========>                        31%][Progress:===============>              50%] [Cov:==============>                    41%][Progress:================>             55%] [Cov:========>                          23%][Progress:================>             55%] [Cov:==========>                        31%][Progress:================>             55%] [Cov:===================>               57%][Progress:================>             56%] [Cov:===================>               55%][Progress:================>             56%] [Cov:===================>               56%][Progress:================>             56%] [Cov:===================>               57%][Progress:================>             56%] [Cov:===================>               57%][Progress:==================>           60%] [Cov:===================>               57%][Progress:==================>           61%] [Cov:===================>               57%][Progress:==================>           61%] [Cov:====================>              58%][Progress:==================>           61%] [Cov:====================>              58%][Progress:==================>           63%] [Cov:===================>               55%][Progress:==================>           63%] [Cov:===================>               56%][Progress:==================>           63%] [Cov:===================>               57%][Progress:==================>           63%] [Cov:====================>              58%][Progress:===================>          66%] [Cov:====================>              58%][Progress:=====================>        71%] [Cov:====================>              58%][Progress:======================>       75%] [Cov:===================>               56%][Progress:======================>       75%] [Cov:====================>              58%][Progress:======================>       75%] [Cov:====================>              58%][Progress:======================>       75%] [Cov:====================>              58%][Progress:=======================>      78%] [Cov:===================>               57%][Progress:=======================>      78%] [Cov:====================>              58%][Progress:========================>     80%] [Cov:===================>               57%][Progress:========================>     80%] [Cov:====================>              58%][Progress:========================>     80%] [Cov:====================>              58%][Progress:========================>     80%] [Cov:====================>              58%][Progress:=========================>    85%] [Cov:====================>              58%][Progress:=========================>    85%] [Cov:====================>              59%][Progress:=========================>    85%] [Cov:====================>              59%][Progress:===========================>  91%] [Cov:====================>              58%][Progress:===========================>  91%] [Cov:====================>              59%][Progress:===========================>  91%] [Cov:====================>              59%][Progress:============================> 95%] [Cov:====================>              58%][Progress:============================> 95%] [Cov:====================>              59%][Progress:=============================>98%] [Cov:====================>              58%][Progress:=============================>98%] [Cov:====================>              59%][Progress:=============================>98%] [Cov:====================>              59%][Progress:==============================100%] [Cov:====================>              59%][Progress:==============================100%] [Cov:====================>              59%][Progress:==============================100%] [Cov:====================>              59%][Progress:==============================100%] [Cov:====================>              59%][Progress:==============================100%] [Cov:=====================>             62%]
* Search finished after 64s and 12 generations, 6322 statements, best individual has fitness: 272.9977011466313
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 49%
* Total number of goals: 115
* Number of covered goals: 56
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 36%
* Total number of goals: 64
* Number of covered goals: 23
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 48%
* Total number of goals: 161
* Number of covered goals: 78
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 33%
* Total number of goals: 6
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 36%
* Total number of goals: 64
* Number of covered goals: 23
* Generated 6 tests with total length 41
* Resulting test suite's coverage: 63% (average coverage for all fitness functions)
* Compiling and checking tests
#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (mmap) failed to map 65536 bytes for committing reserved memory.
# An error report file with more information is saved as:
# /home/hewitt/work/DiffTGen-master/output/patch1-Math-57-SOFix/Math_57_1_sofix/target/0/21/hs_err_pid56075.log
#
# Compiler replay data is saved as:
# /home/hewitt/work/DiffTGen-master/output/patch1-Math-57-SOFix/Math_57_1_sofix/target/0/21/replay_pid56075.log
