* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer
* Starting client
* Connecting to master process on port 4305
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/patch1-Math-57-SOFix/Math_57_1_sofix/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 115
  - Branch 64
  - Exception 0
  - MutationFactory 161
  - Output 6
  - Method 3
  - MethodNoException 3
  - CBranchFitnessFactory 64
* Using seed 1585472112737
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%][Progress:===>                          11%] [Cov:>                                  0%][Progress:===>                          11%] [Cov:>                                  1%][Progress:===>                          11%] [Cov:====>                              13%][Progress:===>                          11%] [Cov:======>                            19%][Progress:===>                          11%] [Cov:========>                          23%][Progress:===>                          11%] [Cov:========>                          24%][Progress:===>                          11%] [Cov:==========>                        31%][Progress:====>                         16%] [Cov:>                                  0%][Progress:====>                         16%] [Cov:====>                              13%][Progress:====>                         16%] [Cov:======>                            19%][Progress:====>                         16%] [Cov:========>                          23%][Progress:====>                         16%] [Cov:========>                          24%][Progress:====>                         16%] [Cov:==========>                        31%][Progress:=====>                        18%] [Cov:>                                  0%][Progress:=====>                        18%] [Cov:>                                  1%][Progress:=====>                        18%] [Cov:====>                              13%][Progress:=====>                        18%] [Cov:======>                            19%][Progress:=====>                        18%] [Cov:========>                          23%][Progress:=====>                        18%] [Cov:========>                          24%][Progress:=====>                        18%] [Cov:==========>                        31%][Progress:=====>                        18%] [Cov:===========>                       34%][Progress:=======>                      26%] [Cov:==>                                6%][Progress:=======>                      26%] [Cov:===>                               10%][Progress:=======>                      26%] [Cov:=======>                           22%][Progress:=======>                      26%] [Cov:==========>                        29%][Progress:=======>                      26%] [Cov:==============>                    40%][Progress:=======>                      26%] [Cov:=================>                 51%][Progress:========>                     28%] [Cov:==================>                54%][Progress:=========>                    30%] [Cov:>                                  1%][Progress:=========>                    30%] [Cov:====>                              13%][Progress:=========>                    30%] [Cov:========>                          24%][Progress:=========>                    30%] [Cov:==========>                        31%][Progress:==========>                   35%] [Cov:>                                  2%][Progress:==========>                   35%] [Cov:=>                                 3%][Progress:==========>                   35%] [Cov:=====>                             15%][Progress:==========>                   35%] [Cov:=====>                             16%][Progress:==========>                   35%] [Cov:=========>                         27%][Progress:==========>                   35%] [Cov:===========>                       34%][Progress:==========>                   35%] [Cov:============>                      35%][Progress:==========>                   35%] [Cov:==================>                53%][Progress:===========>                  38%] [Cov:===========>                       32%][Progress:===========>                  38%] [Cov:===========>                       33%][Progress:===========>                  38%] [Cov:============>                      35%][Progress:============>                 40%] [Cov:========>                          24%][Progress:============>                 40%] [Cov:=========>                         27%][Progress:============>                 40%] [Cov:==========>                        31%][Progress:============>                 40%] [Cov:============>                      35%][Progress:============>                 40%] [Cov:============>                      36%][Progress:============>                 40%] [Cov:=================>                 50%][Progress:============>                 40%] [Cov:==================>                53%][Progress:============>                 40%] [Cov:===================>               56%][Progress:============>                 40%] [Cov:====================>              58%][Progress:============>                 40%] [Cov:=====================>             60%][Progress:============>                 41%] [Cov:===================>               56%][Progress:=============>                45%] [Cov:====================>              59%][Progress:=============>                45%] [Cov:=====================>             60%][Progress:===============>              50%] [Cov:===================>               57%][Progress:===============>              50%] [Cov:====================>              59%][Progress:================>             55%] [Cov:===================>               56%][Progress:================>             55%] [Cov:===================>               57%][Progress:================>             55%] [Cov:====================>              59%][Progress:==================>           60%] [Cov:===================>               57%][Progress:==================>           60%] [Cov:====================>              59%][Progress:==================>           60%] [Cov:=====================>             60%][Progress:==================>           61%] [Cov:=====================>             60%][Progress:===================>          65%] [Cov:=====================>             60%][Progress:===================>          65%] [Cov:=====================>             60%][Progress:===================>          66%] [Cov:====================>              59%][Progress:===================>          66%] [Cov:=====================>             60%][Progress:=====================>        70%] [Cov:=====================>             60%][Progress:=====================>        73%] [Cov:===================>               57%][Progress:=====================>        73%] [Cov:=====================>             60%][Progress:=====================>        73%] [Cov:=====================>             60%][Progress:======================>       75%] [Cov:=====================>             60%][Progress:======================>       75%] [Cov:=====================>             60%][Progress:=======================>      78%] [Cov:====================>              59%][Progress:=======================>      78%] [Cov:=====================>             60%][Progress:========================>     80%] [Cov:====================>              59%][Progress:========================>     80%] [Cov:=====================>             60%][Progress:========================>     80%] [Cov:=====================>             60%][Progress:========================>     81%] [Cov:=====================>             60%][Progress:========================>     81%] [Cov:=====================>             60%][Progress:========================>     81%] [Cov:=====================>             61%][Progress:=========================>    85%] [Cov:=====================>             60%][Progress:=========================>    86%] [Cov:=====================>             61%][Progress:===========================>  90%] [Cov:=====================>             60%][Progress:===========================>  90%] [Cov:=====================>             61%][Progress:===========================>  90%] [Cov:=====================>             61%][Progress:===========================>  91%] [Cov:=====================>             61%][Progress:===========================>  91%] [Cov:=====================>             61%][Progress:===========================>  93%] [Cov:=====================>             60%][Progress:============================> 96%] [Cov:=====================>             60%][Progress:============================> 96%] [Cov:=====================>             61%][Progress:=============================>98%] [Cov:=====================>             60%][Progress:=============================>98%] [Cov:=====================>             61%][Progress:==============================100%] [Cov:=====================>             60%][Progress:==============================100%] [Cov:=====================>             61%][Progress:==============================100%] [Cov:=====================>             61%][Progress:==============================100%] [Cov:=====================>             60%][Progress:==============================100%] [Cov:=====================>             61%][Progress:==============================100%] [Cov:======================>            63%]
* Search finished after 62s and 14 generations, 6540 statements, best individual has fitness: 259.51638418079096
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 50%
* Total number of goals: 115
* Number of covered goals: 57
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 39%
* Total number of goals: 64
* Number of covered goals: 25
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 51%
* Total number of goals: 161
* Number of covered goals: 82
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 33%
* Total number of goals: 6
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 39%
* Total number of goals: 64
* Number of covered goals: 25
* Generated 8 tests with total length 58
* Resulting test suite's coverage: 64% (average coverage for all fitness functions)
* Compiling and checking tests
* Writing JUnit test case 'KMeansPlusPlusClusterer_ESTest' to evosuite-tests
* Done!

* Computation finished
