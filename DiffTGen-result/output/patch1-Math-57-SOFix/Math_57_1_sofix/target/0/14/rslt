* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer
* Starting client
* Connecting to master process on port 12841
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/patch1-Math-57-SOFix/Math_57_1_sofix/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 115
  - Branch 64
  - Exception 0
  - MutationFactory 161
  - Output 6
  - Method 3
  - MethodNoException 3
  - CBranchFitnessFactory 64
* Using seed 1585471806157
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%][Progress:===>                          13%] [Cov:>                                  0%][Progress:===>                          13%] [Cov:>                                  1%][Progress:===>                          13%] [Cov:====>                              13%][Progress:===>                          13%] [Cov:======>                            19%][Progress:===>                          13%] [Cov:========>                          23%][Progress:===>                          13%] [Cov:========>                          24%][Progress:===>                          13%] [Cov:==========>                        31%][Progress:====>                         15%] [Cov:====>                              12%][Progress:====>                         15%] [Cov:========>                          24%][Progress:====>                         15%] [Cov:==========>                        31%][Progress:========>                     28%] [Cov:>                                  1%][Progress:========>                     28%] [Cov:====>                              13%][Progress:========>                     28%] [Cov:=======>                           20%][Progress:========>                     28%] [Cov:========>                          24%][Progress:=========>                    33%] [Cov:>                                  0%][Progress:=========>                    33%] [Cov:>                                  1%][Progress:=========>                    33%] [Cov:====>                              13%][Progress:=========>                    33%] [Cov:=======>                           20%][Progress:=========>                    33%] [Cov:========>                          23%][Progress:=========>                    33%] [Cov:========>                          24%][Progress:=========>                    33%] [Cov:==========>                        31%][Progress:=========>                    33%] [Cov:============>                      35%][Progress:==========>                   35%] [Cov:=======>                           20%][Progress:==========>                   35%] [Cov:========>                          23%][Progress:==========>                   35%] [Cov:=========>                         26%][Progress:==========>                   35%] [Cov:============>                      37%][Progress:==========>                   35%] [Cov:=================>                 49%][Progress:==========>                   35%] [Cov:=================>                 50%][Progress:============>                 40%] [Cov:>                                  0%][Progress:============>                 40%] [Cov:>                                  1%][Progress:============>                 40%] [Cov:====>                              13%][Progress:============>                 40%] [Cov:======>                            19%][Progress:============>                 40%] [Cov:=========>                         27%][Progress:============>                 40%] [Cov:==========>                        31%][Progress:============>                 41%] [Cov:>                                  1%][Progress:============>                 41%] [Cov:====>                              13%][Progress:============>                 41%] [Cov:=======>                           20%][Progress:============>                 41%] [Cov:========>                          24%][Progress:============>                 41%] [Cov:==========>                        31%][Progress:=============>                46%] [Cov:=>                                 3%][Progress:=============>                46%] [Cov:=>                                 5%][Progress:=============>                46%] [Cov:=====>                             17%][Progress:=============>                46%] [Cov:======>                            19%][Progress:=============>                46%] [Cov:==========>                        30%][Progress:=============>                46%] [Cov:==============>                    42%][Progress:=============>                46%] [Cov:===============>                   43%][Progress:===============>              51%] [Cov:>                                  2%][Progress:===============>              51%] [Cov:=>                                 3%][Progress:===============>              51%] [Cov:=====>                             15%][Progress:===============>              51%] [Cov:=====>                             16%][Progress:===============>              51%] [Cov:=========>                         27%][Progress:===============>              51%] [Cov:===========>                       34%][Progress:===============>              51%] [Cov:============>                      35%][Progress:===============>              51%] [Cov:===============>                   45%][Progress:===============>              51%] [Cov:================>                  46%][Progress:===============>              53%] [Cov:=>                                 3%][Progress:===============>              53%] [Cov:=>                                 5%][Progress:===============>              53%] [Cov:=====>                             17%][Progress:===============>              53%] [Cov:======>                            19%][Progress:===============>              53%] [Cov:========>                          23%][Progress:===============>              53%] [Cov:===========>                       34%][Progress:===============>              53%] [Cov:===============>                   45%][Progress:===============>              53%] [Cov:================>                  46%][Progress:===============>              53%] [Cov:=================>                 50%][Progress:================>             55%] [Cov:==========>                        31%][Progress:================>             55%] [Cov:=================>                 50%][Progress:================>             55%] [Cov:===================>               56%][Progress:==================>           60%] [Cov:==================>                54%][Progress:==================>           60%] [Cov:===================>               56%][Progress:==================>           61%] [Cov:==================>                53%][Progress:==================>           61%] [Cov:===================>               55%][Progress:==================>           61%] [Cov:===================>               56%][Progress:==================>           61%] [Cov:===================>               56%][Progress:===================>          66%] [Cov:==================>                53%][Progress:===================>          66%] [Cov:===================>               56%][Progress:====================>         68%] [Cov:==================>                54%][Progress:====================>         68%] [Cov:===================>               55%][Progress:====================>         68%] [Cov:===================>               56%][Progress:====================>         68%] [Cov:===================>               56%][Progress:=====================>        70%] [Cov:===================>               55%][Progress:=====================>        70%] [Cov:===================>               56%][Progress:=====================>        70%] [Cov:===================>               56%][Progress:======================>       75%] [Cov:==================>                53%][Progress:======================>       75%] [Cov:===================>               56%][Progress:========================>     80%] [Cov:==================>                53%][Progress:========================>     80%] [Cov:===================>               56%][Progress:=========================>    85%] [Cov:==================>                53%][Progress:=========================>    85%] [Cov:===================>               56%][Progress:=========================>    85%] [Cov:===================>               56%][Progress:===========================>  90%] [Cov:===================>               56%][Progress:============================> 95%] [Cov:==================>                53%][Progress:============================> 95%] [Cov:===================>               56%][Progress:============================> 95%] [Cov:===================>               56%][Progress:==============================100%] [Cov:==================>                53%][Progress:==============================100%] [Cov:==================>                54%][Progress:==============================100%] [Cov:===================>               56%][Progress:==============================100%] [Cov:===================>               56%][Progress:==============================100%] [Cov:===================>               56%][Progress:==============================100%] [Cov:=====================>             60%]
* Search finished after 63s and 7 generations, 4016 statements, best individual has fitness: 301.4015151491868
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 43%
* Total number of goals: 115
* Number of covered goals: 50
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 33%
* Total number of goals: 64
* Number of covered goals: 21
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 39%
* Total number of goals: 161
* Number of covered goals: 62
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 33%
* Total number of goals: 6
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 33%
* Total number of goals: 64
* Number of covered goals: 21
* Generated 6 tests with total length 38
* Resulting test suite's coverage: 60% (average coverage for all fitness functions)
* Compiling and checking tests
* Writing JUnit test case 'KMeansPlusPlusClusterer_ESTest' to evosuite-tests
* Done!

* Computation finished
