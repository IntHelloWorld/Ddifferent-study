* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer
* Starting client
* Connecting to master process on port 13007
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/patch1-Math-57-SOFix/Math_57_1_sofix/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 115
  - Branch 64
  - Exception 0
  - MutationFactory 161
  - Output 6
  - Method 3
  - MethodNoException 3
  - CBranchFitnessFactory 64
* Using seed 1585471947099
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%][Progress:====>                         15%] [Cov:>                                  0%][Progress:====>                         15%] [Cov:>                                  1%][Progress:====>                         15%] [Cov:====>                              13%][Progress:====>                         15%] [Cov:======>                            19%][Progress:====>                         15%] [Cov:========>                          23%][Progress:=========>                    31%] [Cov:>                                  1%][Progress:=========>                    31%] [Cov:====>                              13%][Progress:=========>                    31%] [Cov:========>                          24%][Progress:=========>                    31%] [Cov:==========>                        31%][Progress:=========>                    31%] [Cov:===========>                       33%][Progress:=========>                    31%] [Cov:==============>                    41%][Progress:=========>                    33%] [Cov:==============>                    42%][Progress:============>                 40%] [Cov:>                                  2%][Progress:============>                 40%] [Cov:=>                                 3%][Progress:============>                 40%] [Cov:=====>                             15%][Progress:============>                 40%] [Cov:=====>                             16%][Progress:============>                 40%] [Cov:=========>                         27%][Progress:============>                 40%] [Cov:============>                      35%][Progress:============>                 40%] [Cov:==============>                    42%][Progress:============>                 40%] [Cov:===============>                   43%][Progress:============>                 40%] [Cov:================>                  46%][Progress:============>                 41%] [Cov:==========>                        31%][Progress:============>                 41%] [Cov:=================>                 50%][Progress:============>                 43%] [Cov:==========>                        31%][Progress:============>                 43%] [Cov:==================>                54%][Progress:=============>                45%] [Cov:=================>                 51%][Progress:=============>                45%] [Cov:==================>                54%][Progress:=============>                45%] [Cov:==================>                54%][Progress:=============>                45%] [Cov:==================>                54%][Progress:=============>                46%] [Cov:==================>                54%][Progress:=============>                46%] [Cov:==================>                54%][Progress:==============>               48%] [Cov:==================>                54%][Progress:===============>              51%] [Cov:==================>                54%][Progress:===============>              51%] [Cov:===================>               55%][Progress:===============>              51%] [Cov:===================>               56%][Progress:===============>              51%] [Cov:===================>               56%][Progress:===============>              53%] [Cov:==================>                53%][Progress:===============>              53%] [Cov:===================>               55%][Progress:===============>              53%] [Cov:===================>               56%][Progress:=================>            58%] [Cov:==================>                53%][Progress:=================>            58%] [Cov:===================>               55%][Progress:=================>            58%] [Cov:===================>               56%][Progress:==================>           60%] [Cov:===================>               55%][Progress:==================>           63%] [Cov:===================>               55%][Progress:==================>           63%] [Cov:===================>               56%][Progress:====================>         68%] [Cov:===================>               55%][Progress:====================>         68%] [Cov:===================>               56%][Progress:====================>         68%] [Cov:===================>               56%][Progress:====================>         68%] [Cov:====================>              58%][Progress:=====================>        70%] [Cov:===================>               57%][Progress:=====================>        70%] [Cov:====================>              58%][Progress:=====================>        71%] [Cov:===================>               57%][Progress:=====================>        71%] [Cov:====================>              58%][Progress:=====================>        73%] [Cov:====================>              58%][Progress:=====================>        73%] [Cov:====================>              58%][Progress:======================>       76%] [Cov:===================>               57%][Progress:======================>       76%] [Cov:====================>              58%][Progress:======================>       76%] [Cov:====================>              58%][Progress:========================>     81%] [Cov:====================>              58%][Progress:=========================>    85%] [Cov:===================>               57%][Progress:=========================>    85%] [Cov:====================>              58%][Progress:===========================>  90%] [Cov:====================>              58%][Progress:===========================>  91%] [Cov:====================>              58%][Progress:===========================>  93%] [Cov:====================>              58%][Progress:===========================>  93%] [Cov:====================>              58%][Progress:===========================>  93%] [Cov:====================>              59%][Progress:============================> 95%] [Cov:====================>              58%][Progress:=============================>98%] [Cov:===================>               57%][Progress:=============================>98%] [Cov:====================>              58%][Progress:==============================100%] [Cov:====================>              58%][Progress:==============================100%] [Cov:====================>              58%][Progress:==============================100%] [Cov:====================>              59%][Progress:==============================100%] [Cov:=====================>             62%]
* Search finished after 64s and 14 generations, 6289 statements, best individual has fitness: 273.516384177997
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 50%
* Total number of goals: 115
* Number of covered goals: 57
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 36%
* Total number of goals: 64
* Number of covered goals: 23
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 46%
* Total number of goals: 161
* Number of covered goals: 74
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 33%
* Total number of goals: 6
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 36%
* Total number of goals: 64
* Number of covered goals: 23
* Generated 6 tests with total length 41
* Resulting test suite's coverage: 63% (average coverage for all fitness functions)
* Compiling and checking tests
* Writing JUnit test case 'KMeansPlusPlusClusterer_ESTest' to evosuite-tests
* Done!

* Computation finished
