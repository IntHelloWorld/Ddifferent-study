* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer
* Starting client
* Connecting to master process on port 9351
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/patch1-Math-57-SOFix/Math_57_1_sofix/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 115
  - Branch 64
  - Exception 0
  - MutationFactory 161
  - Output 6
  - Method 3
  - MethodNoException 3
  - CBranchFitnessFactory 64
[Progress:>                             0%] [Cov:>                                  0%]* Using seed 1585471661956
* Starting evolution
[Progress:========>                     28%] [Cov:>                                  1%][Progress:========>                     28%] [Cov:====>                              13%][Progress:========>                     28%] [Cov:========>                          24%][Progress:========>                     28%] [Cov:==========>                        31%][Progress:=========>                    30%] [Cov:>                                  0%][Progress:=========>                    30%] [Cov:====>                              12%][Progress:=========>                    30%] [Cov:====>                              13%][Progress:=========>                    30%] [Cov:======>                            19%][Progress:=========>                    30%] [Cov:========>                          23%][Progress:=========>                    30%] [Cov:========>                          24%][Progress:=========>                    30%] [Cov:==========>                        31%][Progress:=========>                    30%] [Cov:===========>                       33%][Progress:=========>                    30%] [Cov:==============>                    41%][Progress:=========>                    30%] [Cov:==============>                    42%][Progress:=========>                    31%] [Cov:====>                              13%][Progress:=========>                    31%] [Cov:=====>                             15%][Progress:=========>                    31%] [Cov:======>                            19%][Progress:=========>                    31%] [Cov:========>                          24%][Progress:=========>                    31%] [Cov:==========>                        31%][Progress:==========>                   36%] [Cov:>                                  1%][Progress:==========>                   36%] [Cov:====>                              13%][Progress:==========>                   36%] [Cov:========>                          24%][Progress:==========>                   36%] [Cov:==========>                        31%][Progress:============>                 41%] [Cov:>                                  0%][Progress:============>                 41%] [Cov:====>                              13%][Progress:============>                 41%] [Cov:======>                            19%][Progress:============>                 41%] [Cov:========>                          23%][Progress:============>                 41%] [Cov:========>                          24%][Progress:============>                 41%] [Cov:==========>                        31%][Progress:=============>                46%] [Cov:>                                  0%][Progress:=============>                46%] [Cov:>                                  1%][Progress:=============>                46%] [Cov:====>                              13%][Progress:=============>                46%] [Cov:======>                            19%][Progress:=============>                46%] [Cov:========>                          23%][Progress:=============>                46%] [Cov:========>                          24%][Progress:=============>                46%] [Cov:==========>                        31%][Progress:===============>              51%] [Cov:>                                  0%][Progress:===============>              51%] [Cov:>                                  1%][Progress:===============>              51%] [Cov:====>                              13%][Progress:===============>              51%] [Cov:======>                            19%][Progress:===============>              51%] [Cov:=========>                         27%][Progress:===============>              51%] [Cov:==========>                        31%][Progress:===============>              53%] [Cov:>                                  1%][Progress:===============>              53%] [Cov:====>                              13%][Progress:===============>              53%] [Cov:========>                          24%][Progress:===============>              53%] [Cov:==========>                        31%][Progress:===============>              53%] [Cov:============>                      37%][Progress:===============>              53%] [Cov:=================>                 49%][Progress:===============>              53%] [Cov:=================>                 50%][Progress:=================>            58%] [Cov:=>                                 4%][Progress:=================>            58%] [Cov:==>                                7%][Progress:=================>            58%] [Cov:=======>                           20%][Progress:=================>            58%] [Cov:========>                          24%][Progress:=================>            58%] [Cov:=========>                         27%][Progress:=================>            58%] [Cov:=============>                     38%][Progress:=================>            58%] [Cov:=================>                 49%][Progress:=================>            58%] [Cov:==================>                52%][Progress:==================>           63%] [Cov:>                                  0%][Progress:==================>           63%] [Cov:====>                              12%][Progress:====================>         68%] [Cov:>                                  1%][Progress:====================>         68%] [Cov:====>                              13%][Progress:====================>         68%] [Cov:========>                          24%][Progress:====================>         68%] [Cov:==========>                        31%][Progress:=====================>        73%] [Cov:>                                  1%][Progress:=====================>        73%] [Cov:====>                              13%][Progress:=====================>        73%] [Cov:=======>                           20%][Progress:=====================>        73%] [Cov:========>                          24%][Progress:=====================>        73%] [Cov:==========>                        31%][Progress:=====================>        73%] [Cov:==================>                52%][Progress:======================>       75%] [Cov:==========>                        31%][Progress:======================>       75%] [Cov:===========>                       34%][Progress:======================>       75%] [Cov:================>                  47%][Progress:======================>       75%] [Cov:=================>                 49%][Progress:======================>       75%] [Cov:=================>                 50%][Progress:========================>     80%] [Cov:===>                               11%][Progress:========================>     80%] [Cov:==========>                        31%][Progress:========================>     80%] [Cov:==================>                52%][Progress:========================>     81%] [Cov:==================>                52%][Progress:=========================>    85%] [Cov:=================>                 50%][Progress:=========================>    85%] [Cov:=================>                 51%][Progress:=========================>    85%] [Cov:==================>                53%][Progress:=========================>    86%] [Cov:=================>                 50%][Progress:=========================>    86%] [Cov:==================>                52%][Progress:=========================>    86%] [Cov:===================>               55%][Progress:=========================>    86%] [Cov:===================>               55%][Progress:==========================>   88%] [Cov:==================>                53%][Progress:==========================>   88%] [Cov:===================>               55%][Progress:==========================>   88%] [Cov:===================>               55%][Progress:===========================>  90%] [Cov:===================>               55%][Progress:===========================>  90%] [Cov:===================>               55%][Progress:===========================>  91%] [Cov:===================>               55%][Progress:===========================>  91%] [Cov:===================>               55%][Progress:===========================>  93%] [Cov:===================>               55%][Progress:===========================>  93%] [Cov:===================>               55%][Progress:===========================>  93%] [Cov:===================>               56%][Progress:=============================>98%] [Cov:===================>               55%][Progress:=============================>98%] [Cov:===================>               56%][Progress:==============================100%] [Cov:===================>               55%][Progress:==============================100%] [Cov:===================>               56%][Progress:==============================100%] [Cov:===================>               56%][Progress:==============================100%] [Cov:=====================>             60%]
* Search finished after 63s and 8 generations, 3900 statements, best individual has fitness: 294.5686274481864
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 42%
* Total number of goals: 115
* Number of covered goals: 48
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 33%
* Total number of goals: 64
* Number of covered goals: 21
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 40%
* Total number of goals: 161
* Number of covered goals: 65
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 33%
* Total number of goals: 6
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 33%
* Total number of goals: 64
* Number of covered goals: 21
* Generated 6 tests with total length 37
* Resulting test suite's coverage: 60% (average coverage for all fitness functions)
* Compiling and checking tests
* Writing JUnit test case 'KMeansPlusPlusClusterer_ESTest' to evosuite-tests
* Done!

* Computation finished
