* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer
* Starting client
* Connecting to master process on port 6402
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/patch1-Math-57-SOFix/Math_57_1_sofix/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 115
  - Branch 64
  - Exception 0
  - MutationFactory 161
  - Output 6
  - Method 3
  - MethodNoException 3
  - CBranchFitnessFactory 64
* Using seed 1585472113070
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%][Progress:===>                          10%] [Cov:>                                  2%][Progress:===>                          10%] [Cov:=>                                 3%][Progress:===>                          10%] [Cov:=====>                             15%][Progress:===>                          10%] [Cov:=========>                         26%][Progress:===>                          10%] [Cov:===========>                       34%][Progress:======>                       20%] [Cov:>                                  1%][Progress:======>                       20%] [Cov:====>                              13%][Progress:======>                       20%] [Cov:========>                          24%][Progress:======>                       20%] [Cov:==========>                        31%][Progress:=======>                      25%] [Cov:>                                  1%][Progress:=======>                      25%] [Cov:====>                              13%][Progress:=======>                      25%] [Cov:========>                          24%][Progress:=======>                      25%] [Cov:==========>                        31%][Progress:=======>                      26%] [Cov:>                                  1%][Progress:=======>                      26%] [Cov:====>                              13%][Progress:=======>                      26%] [Cov:========>                          24%][Progress:=======>                      26%] [Cov:==========>                        31%][Progress:=========>                    33%] [Cov:>                                  2%][Progress:=========>                    33%] [Cov:=>                                 3%][Progress:=========>                    33%] [Cov:=====>                             15%][Progress:=========>                    33%] [Cov:=====>                             16%][Progress:=========>                    33%] [Cov:=========>                         27%][Progress:=========>                    33%] [Cov:===========>                       34%][Progress:=========>                    33%] [Cov:============>                      35%][Progress:===========>                  38%] [Cov:>                                  2%][Progress:===========>                  38%] [Cov:=>                                 3%][Progress:===========>                  38%] [Cov:=====>                             15%][Progress:===========>                  38%] [Cov:=====>                             16%][Progress:===========>                  38%] [Cov:=========>                         27%][Progress:===========>                  38%] [Cov:===========>                       34%][Progress:===========>                  38%] [Cov:============>                      35%][Progress:===========>                  38%] [Cov:=============>                     38%][Progress:===========>                  38%] [Cov:=================>                 49%][Progress:===========>                  38%] [Cov:=================>                 50%][Progress:============>                 43%] [Cov:>                                  1%][Progress:============>                 43%] [Cov:====>                              13%][Progress:============>                 43%] [Cov:========>                          24%][Progress:============>                 43%] [Cov:==========>                        31%][Progress:===============>              53%] [Cov:=>                                 5%][Progress:===============>              53%] [Cov:==>                                8%][Progress:===============>              53%] [Cov:=======>                           21%][Progress:===============>              53%] [Cov:=========>                         26%][Progress:===============>              53%] [Cov:==========>                        29%][Progress:===============>              53%] [Cov:==============>                    41%][Progress:===============>              53%] [Cov:==================>                52%][Progress:===============>              53%] [Cov:==================>                54%][Progress:===============>              53%] [Cov:==================>                54%][Progress:=================>            58%] [Cov:=================>                 51%][Progress:=================>            58%] [Cov:==================>                52%][Progress:=================>            58%] [Cov:==================>                54%][Progress:==================>           60%] [Cov:===================>               55%][Progress:===================>          65%] [Cov:===================>               55%][Progress:====================>         68%] [Cov:===================>               55%][Progress:=====================>        71%] [Cov:===================>               55%][Progress:=====================>        71%] [Cov:===================>               55%][Progress:======================>       75%] [Cov:==================>                53%][Progress:========================>     80%] [Cov:===================>               55%][Progress:========================>     83%] [Cov:==================>                53%][Progress:========================>     83%] [Cov:==================>                54%][Progress:========================>     83%] [Cov:===================>               55%][Progress:==========================>   88%] [Cov:==================>                52%][Progress:==========================>   88%] [Cov:==================>                53%][Progress:==========================>   88%] [Cov:===================>               55%][Progress:==========================>   88%] [Cov:===================>               55%][Progress:===========================>  91%] [Cov:===================>               55%][Progress:============================> 95%] [Cov:===================>               55%][Progress:=============================>98%] [Cov:===================>               55%][Progress:==============================100%] [Cov:===================>               55%][Progress:==============================100%] [Cov:===================>               55%][Progress:==============================100%] [Cov:===================>               55%][Progress:==============================100%] [Cov:====================>              58%]
* Search finished after 63s and 4 generations, 3587 statements, best individual has fitness: 314.8962992316109
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 41%
* Total number of goals: 115
* Number of covered goals: 47
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 30%
* Total number of goals: 64
* Number of covered goals: 19
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 36%
* Total number of goals: 161
* Number of covered goals: 58
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 33%
* Total number of goals: 6
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 30%
* Total number of goals: 64
* Number of covered goals: 19
* Generated 4 tests with total length 27
* Resulting test suite's coverage: 59% (average coverage for all fitness functions)
* Compiling and checking tests
* Computation finished
