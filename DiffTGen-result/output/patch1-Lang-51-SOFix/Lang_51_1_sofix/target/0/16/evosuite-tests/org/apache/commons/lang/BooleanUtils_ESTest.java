/*
 * This file was automatically generated by EvoSuite
 * Mon Mar 30 04:15:59 GMT 2020
 */

package org.apache.commons.lang;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.lang.BooleanUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BooleanUtils_ESTest extends BooleanUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject("false");
      String string0 = BooleanUtils.toStringTrueFalse(false);
      boolean boolean1 = BooleanUtils.toBoolean("false");
      boolean[] booleanArray0 = new boolean[3];
      booleanArray0[0] = false;
      booleanArray0[1] = false;
      booleanArray0[2] = false;
      boolean boolean2 = BooleanUtils.xor(booleanArray0);
      Boolean boolean3 = BooleanUtils.toBooleanObject(true);
      String string1 = BooleanUtils.toStringYesNo(false);
      String string2 = BooleanUtils.toStringOnOff((Boolean) false);
      // Undeclared exception!
      try { 
        BooleanUtils.toBooleanObject("", "X3yV@*Ck!g_Iy,Vy~", "X3yV@*Ck!g_Iy,Vy~", "`IzJHNnae4{,CF`L");
      } catch(IllegalArgumentException e) {
         //
         // The String did not match any specified value
         //
         verifyException("org.apache.commons.lang.BooleanUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject(true);
      Boolean boolean1 = Boolean.valueOf("");
      boolean boolean2 = Boolean.logicalOr(true, true);
      boolean boolean3 = Boolean.getBoolean("");
      boolean boolean4 = Boolean.logicalAnd(true, true);
      boolean boolean5 = Boolean.logicalOr(false, false);
      boolean boolean6 = Boolean.logicalOr(false, true);
      int int0 = Boolean.compare(true, false);
      boolean boolean7 = Boolean.logicalOr(true, false);
      boolean boolean8 = BooleanUtils.isTrue(boolean1);
      Integer integer0 = new Integer(46);
      String string0 = Integer.toUnsignedString((-1));
      Boolean boolean9 = BooleanUtils.toBooleanObject(integer0);
      String string1 = BooleanUtils.toStringOnOff(true);
      long long0 = Integer.toUnsignedLong(116);
      Integer integer1 = BooleanUtils.toIntegerObject(true, integer0, (Integer) null);
      boolean boolean10 = BooleanUtils.toBoolean("on");
      Integer integer2 = BooleanUtils.toIntegerObject(false, (Integer) null, integer0);
      Boolean boolean11 = BooleanUtils.toBooleanObject((Integer) null);
      String string2 = BooleanUtils.toStringTrueFalse(true);
      Boolean boolean12 = BooleanUtils.toBooleanObject("The Array must not be null");
      Boolean boolean13 = Boolean.FALSE;
      String string3 = BooleanUtils.toString(boolean13, " is not a valid number.", (String) null, "Array element ");
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      boolean boolean0 = false;
      String string0 = BooleanUtils.toStringOnOff(false);
      boolean boolean1 = BooleanUtils.toBoolean("off");
      String string1 = "false";
      String string2 = "-0x";
      String string3 = "d=xFSJ";
      // Undeclared exception!
      try { 
        BooleanUtils.toBooleanObject("false", "-0x", "d=xFSJ", "off");
      } catch(IllegalArgumentException e) {
         //
         // The String did not match any specified value
         //
         verifyException("org.apache.commons.lang.BooleanUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject(false);
      int int0 = Boolean.compare(false, true);
      boolean boolean1 = Boolean.logicalXor(true, false);
      int int1 = Boolean.compare(false, false);
      String string0 = BooleanUtils.toStringTrueFalse(boolean0);
      Boolean boolean2 = BooleanUtils.toBooleanObject("", "false", "", "', has a length less than 2");
      // Undeclared exception!
      try { 
        BooleanUtils.toBoolean((String) null, "", "");
      } catch(IllegalArgumentException e) {
         //
         // The String did not match either specified value
         //
         verifyException("org.apache.commons.lang.BooleanUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = BooleanUtils.toStringTrueFalse(true);
      Integer integer0 = new Integer(69);
      long long0 = Integer.toUnsignedLong(69);
      int int0 = Integer.compare(69, 69);
      Boolean boolean0 = BooleanUtils.toBooleanObject(integer0);
      boolean boolean1 = false;
      Boolean boolean2 = BooleanUtils.toBooleanObject(false);
      String string1 = BooleanUtils.toString(false, "true", "true");
      boolean boolean3 = BooleanUtils.toBoolean("{}");
      int int1 = BooleanUtils.toInteger(true);
      String string2 = ", '";
      // Undeclared exception!
      try { 
        BooleanUtils.toBooleanObject(", '", "Array is empty", "{}", "{}");
      } catch(IllegalArgumentException e) {
         //
         // The String did not match any specified value
         //
         verifyException("org.apache.commons.lang.BooleanUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        BooleanUtils.xor((boolean[]) null);
      } catch(IllegalArgumentException e) {
         //
         // The Array must not be null
         //
         verifyException("org.apache.commons.lang.BooleanUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = BooleanUtils.toStringYesNo(true);
      boolean boolean0 = BooleanUtils.toBoolean("yes");
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject("", ", Length: ", "", "");
      int int0 = Boolean.compare(true, true);
      Integer integer0 = BooleanUtils.toIntegerObject(false);
      boolean boolean1 = Boolean.logicalAnd(false, true);
      Integer integer1 = new Integer((-2718));
      long long0 = Integer.toUnsignedLong((-2718));
      int int1 = Integer.sum((-1748), 0);
      Integer integer2 = BooleanUtils.toIntegerObject(false, integer0, integer1);
      String string0 = Integer.toUnsignedString(0);
      int int2 = Integer.remainderUnsigned(0, (-1748));
      // Undeclared exception!
      try { 
        BooleanUtils.toBoolean((Integer) null, integer0, integer2);
      } catch(IllegalArgumentException e) {
         //
         // The Integer did not match either specified value
         //
         verifyException("org.apache.commons.lang.BooleanUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Integer integer0 = new Integer((-3346));
      Integer integer1 = BooleanUtils.toIntegerObject(false, integer0, (Integer) null);
      Integer integer2 = new Integer(445);
      Integer integer3 = BooleanUtils.toIntegerObject(false, (Integer) null, integer2);
      // Undeclared exception!
      try { 
        BooleanUtils.toBooleanObject((-3346), 661, (-87), 661);
      } catch(IllegalArgumentException e) {
         //
         // The Integer did not match any specified value
         //
         verifyException("org.apache.commons.lang.BooleanUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject("The Array must not be null", "s=v2TwNnjcL.fD)", "The Array must not be null", "The Array must not be null");
      Integer integer0 = BooleanUtils.toIntegerObject(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      boolean boolean0 = BooleanUtils.toBoolean("x8iy");
      boolean boolean1 = BooleanUtils.toBoolean("x8iy", "x8iy", "@1hqSGYpXcn#");
      Boolean boolean2 = Boolean.valueOf(true);
      boolean boolean3 = Boolean.logicalOr(false, true);
      boolean boolean4 = Boolean.getBoolean((String) null);
      boolean boolean5 = Boolean.getBoolean("");
      boolean boolean6 = Boolean.logicalXor(false, true);
      int int0 = Boolean.compare(true, true);
      boolean boolean7 = BooleanUtils.toBooleanDefaultIfNull(boolean2, true);
      int int1 = BooleanUtils.toInteger(true, 0, 0);
      int int2 = BooleanUtils.toInteger(true, 351, 0);
      String string0 = BooleanUtils.toStringTrueFalse(false);
      BooleanUtils booleanUtils0 = new BooleanUtils();
      boolean[] booleanArray0 = new boolean[9];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      booleanArray0[2] = false;
      booleanArray0[3] = false;
      booleanArray0[4] = true;
      booleanArray0[5] = false;
      booleanArray0[6] = true;
      booleanArray0[7] = false;
      booleanArray0[8] = false;
      boolean boolean8 = BooleanUtils.xor(booleanArray0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject((-731));
      Boolean boolean1 = BooleanUtils.toBooleanObject(true);
      BooleanUtils booleanUtils0 = new BooleanUtils();
      boolean boolean2 = Boolean.getBoolean("Y50L");
      boolean boolean3 = BooleanUtils.toBoolean((String) null, (String) null, "");
      Boolean boolean4 = new Boolean(true);
      boolean boolean5 = BooleanUtils.toBoolean(boolean4);
      int int0 = BooleanUtils.toInteger(true);
      Boolean[] booleanArray0 = new Boolean[3];
      booleanArray0[0] = boolean0;
      booleanArray0[1] = boolean1;
      booleanArray0[2] = boolean0;
      Boolean boolean6 = BooleanUtils.xor(booleanArray0);
      Integer integer0 = BooleanUtils.toIntegerObject(true);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Boolean boolean0 = new Boolean(false);
      boolean boolean1 = Boolean.logicalOr(true, true);
      boolean boolean2 = Boolean.logicalXor(false, false);
      String string0 = "";
      boolean boolean3 = Boolean.getBoolean("");
      boolean boolean4 = Boolean.logicalXor(false, true);
      boolean boolean5 = Boolean.logicalOr(false, false);
      String string1 = BooleanUtils.toStringOnOff(boolean0);
      String string2 = BooleanUtils.toStringTrueFalse(false);
      Boolean[] booleanArray0 = new Boolean[0];
      // Undeclared exception!
      try { 
        BooleanUtils.xor(booleanArray0);
      } catch(IllegalArgumentException e) {
         //
         // Array is empty
         //
         verifyException("org.apache.commons.lang.BooleanUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = null;
      boolean boolean0 = BooleanUtils.toBoolean((String) null);
      // Undeclared exception!
      try { 
        BooleanUtils.toBoolean((-1), 57, 117);
      } catch(IllegalArgumentException e) {
         //
         // The Integer did not match either specified value
         //
         verifyException("org.apache.commons.lang.BooleanUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      boolean boolean0 = BooleanUtils.toBoolean("GT");
      int int0 = 45;
      int int1 = BooleanUtils.toInteger(false, 45, 45);
      // Undeclared exception!
      try { 
        BooleanUtils.toBooleanObject("", "ISoZe6=}.5[+Nk5", "GT", "GT");
      } catch(IllegalArgumentException e) {
         //
         // The String did not match any specified value
         //
         verifyException("org.apache.commons.lang.BooleanUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      boolean boolean0 = BooleanUtils.toBoolean("GT");
      Integer integer0 = BooleanUtils.toIntegerObject(false);
      Boolean boolean1 = BooleanUtils.toBooleanObject(69);
      boolean boolean2 = Boolean.logicalAnd(true, false);
      int int0 = Boolean.compare(false, false);
      Boolean boolean3 = BooleanUtils.toBooleanObject(53);
      boolean[] booleanArray0 = new boolean[1];
      booleanArray0[0] = false;
      boolean boolean4 = BooleanUtils.xor(booleanArray0);
      Integer integer1 = BooleanUtils.toIntegerObject(false);
      Boolean boolean5 = BooleanUtils.toBooleanObject(":?2V45'Vngp");
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject("Array is empty");
      String string0 = BooleanUtils.toString((Boolean) null, "g!*3# ~#", "Array is empty", "Array is empty");
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String string0 = BooleanUtils.toStringYesNo((Boolean) null);
      Integer integer0 = BooleanUtils.toIntegerObject((Boolean) null);
      Boolean boolean0 = BooleanUtils.toBooleanObject((String) null);
      boolean boolean1 = true;
      boolean boolean2 = BooleanUtils.toBooleanDefaultIfNull((Boolean) null, true);
      String string1 = ", Length: 0";
      // Undeclared exception!
      try { 
        BooleanUtils.toBoolean("", ", Length: 0", ", Length: 0");
      } catch(IllegalArgumentException e) {
         //
         // The String did not match either specified value
         //
         verifyException("org.apache.commons.lang.BooleanUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject("The Array must not be null");
      boolean boolean1 = Boolean.logicalXor(true, true);
      boolean boolean2 = Boolean.logicalXor(true, true);
      int int0 = Boolean.compare(false, true);
      boolean boolean3 = BooleanUtils.isNotFalse((Boolean) null);
      Boolean boolean4 = Boolean.valueOf(true);
      Integer integer0 = new Integer((-1));
      Integer integer1 = BooleanUtils.toIntegerObject(boolean4, integer0, integer0, integer0);
      int int1 = Integer.compare(5907, 5907);
      boolean boolean5 = Boolean.logicalOr(true, false);
      int int2 = Integer.compareUnsigned(101, 5907);
      boolean boolean6 = Boolean.logicalAnd(true, false);
      Integer integer2 = new Integer((-312));
      int int3 = Integer.min((-312), (-312));
      Integer integer3 = BooleanUtils.toIntegerObject(true, integer1, integer2);
      boolean boolean7 = BooleanUtils.isFalse((Boolean) null);
      Boolean boolean8 = BooleanUtils.negate((Boolean) null);
      Boolean boolean9 = new Boolean("The Array must not be null");
      Boolean boolean10 = BooleanUtils.negate(boolean9);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int int0 = 2379;
      Boolean boolean0 = BooleanUtils.toBooleanObject(0, 0, 2379, 0);
      Integer integer0 = BooleanUtils.toIntegerObject(boolean0);
      int int1 = (-591);
      int int2 = Integer.compareUnsigned((-2217), 101);
      Integer integer1 = new Integer((-591));
      int int3 = Integer.remainderUnsigned((-836), (-3754));
      try { 
        Integer.parseUnsignedInt("W");
      } catch(NumberFormatException e) {
         //
         // For input string: \"W\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      int int0 = BooleanUtils.toInteger(false, (-496), 0);
      Boolean boolean0 = Boolean.FALSE;
      boolean boolean1 = Boolean.logicalOr(true, true);
      boolean boolean2 = Boolean.logicalAnd(false, false);
      int int1 = Boolean.compare(false, true);
      boolean boolean3 = Boolean.getBoolean((String) null);
      boolean boolean4 = Boolean.logicalOr(false, false);
      boolean boolean5 = Boolean.logicalOr(false, true);
      boolean boolean6 = Boolean.logicalAnd(false, true);
      String string0 = BooleanUtils.toString(boolean0, "", "", "");
      String string1 = BooleanUtils.toStringTrueFalse((Boolean) null);
      Integer integer0 = new Integer(0);
      Boolean boolean7 = BooleanUtils.toBooleanObject(integer0);
      boolean boolean8 = BooleanUtils.toBoolean(boolean7);
      Integer integer1 = BooleanUtils.toIntegerObject(false, integer0, integer0);
      Boolean boolean9 = BooleanUtils.toBooleanObject(integer1);
      String string2 = BooleanUtils.toString(true, (String) null, (String) null);
      // Undeclared exception!
      try { 
        BooleanUtils.toBooleanObject((String) null, "=)$sK?@NgMCu2p29", "", ")O.G~");
      } catch(IllegalArgumentException e) {
         //
         // The String did not match any specified value
         //
         verifyException("org.apache.commons.lang.BooleanUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int int0 = 6693;
      Boolean boolean0 = BooleanUtils.toBooleanObject(6693);
      // Undeclared exception!
      try { 
        BooleanUtils.xor((Boolean[]) null);
      } catch(IllegalArgumentException e) {
         //
         // The Array must not be null
         //
         verifyException("org.apache.commons.lang.BooleanUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      BooleanUtils booleanUtils0 = new BooleanUtils();
      Boolean boolean0 = BooleanUtils.toBooleanObject(1917, 1917, 0, 115);
      boolean boolean1 = Boolean.getBoolean("#+|6");
      boolean boolean2 = Boolean.logicalOr(false, false);
      boolean boolean3 = BooleanUtils.isTrue(boolean0);
      String string0 = BooleanUtils.toString(false, (String) null, (String) null);
      int int0 = BooleanUtils.toInteger(false, 0, 68);
      String string1 = BooleanUtils.toStringOnOff(false);
      Boolean boolean4 = BooleanUtils.toBooleanObject(0, 2818, 68, 0);
      int int1 = BooleanUtils.toInteger(boolean0, 2818, 116, (-1896));
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      boolean boolean0 = false;
      String string0 = BooleanUtils.toString(false, "The Integer did not match either specified value", "/~%d:BiNE");
      boolean[] booleanArray0 = new boolean[0];
      // Undeclared exception!
      try { 
        BooleanUtils.xor(booleanArray0);
      } catch(IllegalArgumentException e) {
         //
         // Array is empty
         //
         verifyException("org.apache.commons.lang.BooleanUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      boolean[] booleanArray0 = new boolean[0];
      // Undeclared exception!
      try { 
        BooleanUtils.xor(booleanArray0);
      } catch(IllegalArgumentException e) {
         //
         // Array is empty
         //
         verifyException("org.apache.commons.lang.BooleanUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Boolean[] booleanArray0 = new Boolean[5];
      boolean boolean0 = false;
      Boolean boolean1 = Boolean.valueOf(false);
      booleanArray0[0] = boolean1;
      Integer integer0 = new Integer(594);
      Boolean boolean2 = BooleanUtils.toBooleanObject((Integer) null, integer0, (Integer) null, integer0);
      booleanArray0[1] = boolean2;
      Boolean boolean3 = BooleanUtils.toBooleanObject(boolean0);
      booleanArray0[2] = boolean3;
      Boolean boolean4 = BooleanUtils.toBooleanObject((-2370), 0, 0, (-2370));
      booleanArray0[3] = null;
      Boolean boolean5 = new Boolean(true);
      booleanArray0[4] = boolean5;
      // Undeclared exception!
      try { 
        BooleanUtils.xor(booleanArray0);
      } catch(IllegalArgumentException e) {
         //
         // The array must not contain any null elements
         //
         verifyException("org.apache.commons.lang.BooleanUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Integer integer0 = new Integer((-1803));
      Integer integer1 = new Integer((-1803));
      Integer integer2 = BooleanUtils.toIntegerObject(false, integer0, integer1);
      Integer integer3 = new Integer(1326);
      // Undeclared exception!
      try { 
        BooleanUtils.toBooleanObject((Integer) null, integer2, integer2, integer3);
      } catch(IllegalArgumentException e) {
         //
         // The Integer did not match any specified value
         //
         verifyException("org.apache.commons.lang.BooleanUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject("no");
      boolean boolean1 = Boolean.logicalOr(false, true);
      boolean boolean2 = Boolean.logicalOr(false, false);
      boolean boolean3 = Boolean.logicalXor(false, false);
      String string0 = BooleanUtils.toString(boolean0, "no", "no", "no");
      String string1 = BooleanUtils.toString(false, "no", "no");
      boolean boolean4 = BooleanUtils.isFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf(false);
      int int0 = Boolean.compare(true, false);
      boolean boolean1 = BooleanUtils.isFalse(boolean0);
      Integer integer0 = new Integer(84);
      Boolean boolean2 = BooleanUtils.toBooleanObject(integer0);
      int int1 = Integer.remainderUnsigned(1, 1);
      Integer integer1 = new Integer(84);
      Integer integer2 = BooleanUtils.toIntegerObject(boolean2, (Integer) null, integer0, integer1);
      // Undeclared exception!
      try { 
        BooleanUtils.toBoolean(0, 84, 89);
      } catch(IllegalArgumentException e) {
         //
         // The Integer did not match either specified value
         //
         verifyException("org.apache.commons.lang.BooleanUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      boolean boolean1 = Boolean.logicalXor(false, false);
      Integer integer0 = BooleanUtils.toIntegerObject(boolean0);
      Integer integer1 = BooleanUtils.toIntegerObject(boolean0);
      boolean boolean2 = Boolean.getBoolean("LIeq/`P");
      int int0 = 0;
      // Undeclared exception!
      try { 
        BooleanUtils.toBoolean((-194), (-2646), 0);
      } catch(IllegalArgumentException e) {
         //
         // The Integer did not match either specified value
         //
         verifyException("org.apache.commons.lang.BooleanUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      String string0 = "6QKI]]H\\h!)+}lU";
      Boolean boolean0 = Boolean.valueOf("6QKI]]Hh!)+}lU");
      Integer integer0 = new Integer(0);
      Integer integer1 = BooleanUtils.toIntegerObject(boolean0, integer0, integer0, integer0);
      Boolean[] booleanArray0 = new Boolean[4];
      booleanArray0[0] = boolean0;
      booleanArray0[1] = boolean0;
      booleanArray0[2] = boolean0;
      booleanArray0[3] = boolean0;
      Boolean boolean1 = BooleanUtils.xor(booleanArray0);
      boolean boolean2 = true;
      Integer integer2 = new Integer(0);
      int int0 = 2;
      try { 
        Integer.decode("6QKI]]Hh!)+}lU");
      } catch(NumberFormatException e) {
         //
         // For input string: \"6QKI]]Hh!)+}lU\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Integer integer0 = new Integer(1111);
      int int0 = Integer.max(5100, 1111);
      int int1 = Integer.divideUnsigned(1111, 79);
      Boolean boolean0 = BooleanUtils.toBooleanObject(integer0);
      boolean boolean1 = Boolean.logicalOr(true, true);
      boolean boolean2 = BooleanUtils.toBoolean("z!,Wih:%(([]B");
      boolean boolean3 = BooleanUtils.toBoolean(boolean0);
      Boolean boolean4 = BooleanUtils.negate(boolean0);
      Integer integer1 = new Integer(79);
      Integer integer2 = BooleanUtils.toIntegerObject(true);
      Integer integer3 = BooleanUtils.toIntegerObject(boolean4, integer0, integer1, integer2);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject(78);
      int int0 = Boolean.compare(false, false);
      boolean boolean1 = Boolean.logicalXor(false, false);
      boolean boolean2 = Boolean.logicalOr(false, false);
      Boolean boolean3 = BooleanUtils.negate(boolean0);
      boolean boolean4 = BooleanUtils.isNotTrue(boolean3);
      Boolean boolean5 = BooleanUtils.toBooleanObject(78);
      boolean boolean6 = BooleanUtils.toBoolean(78);
      String string0 = BooleanUtils.toStringYesNo(boolean5);
      boolean boolean7 = BooleanUtils.isFalse(boolean5);
      Integer integer0 = new Integer(78);
      Integer integer1 = new Integer(69);
      boolean boolean8 = BooleanUtils.toBoolean(integer0, integer1, integer0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      boolean boolean0 = true;
      int int0 = BooleanUtils.toInteger(true);
      Integer integer0 = new Integer(1);
      int int1 = Integer.compareUnsigned(1, 1);
      String string0 = Integer.toUnsignedString(1);
      Integer integer1 = Integer.getInteger(">$Ug", 1);
      Boolean boolean1 = BooleanUtils.toBooleanObject(integer0);
      int int2 = BooleanUtils.toInteger(true);
      boolean boolean2 = BooleanUtils.toBoolean(">$Ug", "[^Tiw6T8>^p2.v7Z?", ">$Ug");
      long long0 = Integer.toUnsignedLong((-757));
      // Undeclared exception!
      try { 
        BooleanUtils.toBoolean(1472, 1, 4129);
      } catch(IllegalArgumentException e) {
         //
         // The Integer did not match either specified value
         //
         verifyException("org.apache.commons.lang.BooleanUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      boolean[] booleanArray0 = new boolean[4];
      booleanArray0[0] = false;
      booleanArray0[1] = false;
      booleanArray0[2] = false;
      booleanArray0[3] = false;
      boolean boolean0 = BooleanUtils.xor(booleanArray0);
      Boolean boolean1 = Boolean.TRUE;
      String string0 = BooleanUtils.toStringOnOff(boolean1);
      boolean boolean2 = BooleanUtils.toBoolean("Sq1olN(`T5gw");
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      boolean boolean0 = BooleanUtils.isFalse((Boolean) null);
      boolean boolean1 = BooleanUtils.toBoolean((Boolean) null);
      Integer integer0 = new Integer(181);
      Integer integer1 = new Integer(181);
      Integer integer2 = new Integer(181);
      Integer integer3 = BooleanUtils.toIntegerObject((Boolean) null, integer0, integer1, integer2);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      int int0 = BooleanUtils.toInteger((Boolean) null, 57, 0, 69);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject(true);
      boolean boolean1 = true;
      String string0 = BooleanUtils.toStringTrueFalse(true);
      BooleanUtils booleanUtils0 = new BooleanUtils();
      // Undeclared exception!
      try { 
        BooleanUtils.toBoolean("org.apache.commons.lang.ArrayUtils", "", "");
      } catch(IllegalArgumentException e) {
         //
         // The String did not match either specified value
         //
         verifyException("org.apache.commons.lang.BooleanUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Integer integer0 = new Integer((-3858));
      Integer integer1 = Integer.getInteger((String) null);
      Integer integer2 = new Integer((-100));
      Integer integer3 = BooleanUtils.toIntegerObject(true, integer0, integer2);
      Boolean[] booleanArray0 = new Boolean[1];
      Boolean boolean0 = BooleanUtils.toBooleanObject(integer0);
      booleanArray0[0] = boolean0;
      Boolean boolean1 = BooleanUtils.xor(booleanArray0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject(true);
      String string0 = BooleanUtils.toStringTrueFalse(true);
      // Undeclared exception!
      try { 
        BooleanUtils.toBoolean("Array element ", "#>B}bRR'hp$", "h/`Z.luV>g/|a");
      } catch(IllegalArgumentException e) {
         //
         // The String did not match either specified value
         //
         verifyException("org.apache.commons.lang.BooleanUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      boolean boolean0 = BooleanUtils.toBoolean("", "", "");
      Boolean boolean1 = Boolean.TRUE;
      String string0 = BooleanUtils.toString(boolean1, "FU:NWaR", "FU:NWaR", "FU:NWaR");
      Boolean boolean2 = BooleanUtils.toBooleanObject(true);
      int int0 = Boolean.compare(true, true);
      String string1 = BooleanUtils.toStringOnOff(boolean2);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      int int0 = BooleanUtils.toInteger(false);
      Boolean boolean0 = BooleanUtils.negate((Boolean) null);
      boolean boolean1 = BooleanUtils.isTrue((Boolean) null);
      int int1 = Boolean.compare(true, false);
      int int2 = BooleanUtils.toInteger((Boolean) null, (-659), 0, (-280));
      Integer integer0 = new Integer(46);
      Boolean boolean2 = BooleanUtils.toBooleanObject(integer0);
      Integer integer1 = BooleanUtils.toIntegerObject(false);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      String string0 = BooleanUtils.toStringOnOff(true);
      boolean boolean0 = BooleanUtils.toBoolean(3616);
      boolean boolean1 = BooleanUtils.toBoolean("on");
      String string1 = BooleanUtils.toString(true, "{", "{");
      String string2 = BooleanUtils.toStringTrueFalse(true);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf("tu2ysf");
      boolean boolean1 = Boolean.logicalXor(true, true);
      int int0 = Boolean.compare(true, true);
      boolean boolean2 = BooleanUtils.isFalse(boolean0);
      BooleanUtils booleanUtils0 = new BooleanUtils();
      Boolean[] booleanArray0 = new Boolean[2];
      booleanArray0[0] = boolean0;
      booleanArray0[1] = boolean0;
      Boolean boolean3 = BooleanUtils.xor(booleanArray0);
      Boolean boolean4 = Boolean.valueOf("");
      boolean boolean5 = BooleanUtils.toBooleanDefaultIfNull(boolean4, true);
      boolean[] booleanArray1 = new boolean[3];
      booleanArray1[0] = true;
      booleanArray1[1] = false;
      booleanArray1[2] = true;
      boolean boolean6 = BooleanUtils.xor(booleanArray1);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      int int0 = BooleanUtils.toInteger(false, 655, 655);
      boolean boolean0 = true;
      Integer integer0 = BooleanUtils.toIntegerObject(true);
      int int1 = Integer.max(655, 2398);
      boolean boolean1 = BooleanUtils.toBoolean(integer0, integer0, (Integer) null);
      String string0 = "org.apache.commons.lang.ArrayUtils";
      // Undeclared exception!
      try { 
        BooleanUtils.toBooleanObject("org.apache.commons.lang.BooleanUtils", "org.apache.commons.lang.ArrayUtils", "The array must not contain any null elements", "");
      } catch(IllegalArgumentException e) {
         //
         // The String did not match any specified value
         //
         verifyException("org.apache.commons.lang.BooleanUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      String string0 = BooleanUtils.toStringOnOff(false);
      Boolean boolean0 = Boolean.TRUE;
      boolean boolean1 = Boolean.getBoolean("=l- ,'~Rq|7u;+m(`");
      boolean boolean2 = Boolean.logicalXor(true, true);
      String string1 = BooleanUtils.toStringYesNo(boolean0);
      Boolean boolean3 = BooleanUtils.toBooleanObject(0, 0, 0, (-1925));
      boolean boolean4 = Boolean.getBoolean("Array is empty");
      boolean boolean5 = Boolean.logicalAnd(false, false);
      boolean boolean6 = BooleanUtils.toBooleanDefaultIfNull(boolean3, false);
      Integer integer0 = new Integer((-1925));
      int int0 = Integer.compareUnsigned((-1925), 0);
      Boolean boolean7 = BooleanUtils.toBooleanObject(integer0);
      Boolean boolean8 = BooleanUtils.toBooleanObject(563);
      // Undeclared exception!
      try { 
        BooleanUtils.toBooleanObject("Q.W:1X!>`/7iB", "off", "A blank string is not a valid number", (String) null);
      } catch(IllegalArgumentException e) {
         //
         // The String did not match any specified value
         //
         verifyException("org.apache.commons.lang.BooleanUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject(97, 97, 0, 0);
      String string0 = BooleanUtils.toStringYesNo(false);
      Integer integer0 = new Integer(0);
      int int0 = Integer.sum(0, 0);
      Integer integer1 = BooleanUtils.toIntegerObject(false, integer0, integer0);
      Boolean[] booleanArray0 = new Boolean[9];
      booleanArray0[0] = boolean0;
      booleanArray0[1] = boolean0;
      booleanArray0[2] = boolean0;
      booleanArray0[3] = boolean0;
      booleanArray0[4] = boolean0;
      Integer integer2 = new Integer(97);
      Integer integer3 = new Integer(0);
      // Undeclared exception!
      try { 
        BooleanUtils.toBooleanObject(integer2, integer3, integer3, (Integer) null);
      } catch(IllegalArgumentException e) {
         //
         // The Integer did not match any specified value
         //
         verifyException("org.apache.commons.lang.BooleanUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      boolean boolean0 = BooleanUtils.toBooleanDefaultIfNull((Boolean) null, false);
      String string0 = BooleanUtils.toStringYesNo(false);
      String string1 = BooleanUtils.toStringYesNo(false);
      boolean boolean1 = BooleanUtils.toBooleanDefaultIfNull((Boolean) null, false);
      Integer integer0 = new Integer(0);
      Integer integer1 = Integer.getInteger("B]RV0!o|b*3NAh%U/X", integer0);
      Integer integer2 = new Integer(0);
      Integer integer3 = new Integer(0);
      boolean boolean2 = BooleanUtils.toBoolean(integer1, integer2, integer3);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject("qZ|&?+_X\"={~*t7@", "2!-Z_i", "2!-Z_i", "qZ|&?+_X\"={~*t7@");
      boolean boolean1 = BooleanUtils.isFalse((Boolean) null);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Integer integer0 = new Integer((-1218));
      Integer integer1 = new Integer((-1218));
      Integer integer2 = BooleanUtils.toIntegerObject(false, integer0, integer1);
      Boolean boolean0 = BooleanUtils.toBooleanObject(integer1);
      Boolean boolean1 = BooleanUtils.negate(boolean0);
      Integer integer3 = BooleanUtils.toIntegerObject(boolean1);
      // Undeclared exception!
      try { 
        BooleanUtils.toBooleanObject(integer0, integer3, integer3, integer3);
      } catch(IllegalArgumentException e) {
         //
         // The Integer did not match any specified value
         //
         verifyException("org.apache.commons.lang.BooleanUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      boolean[] booleanArray0 = new boolean[5];
      booleanArray0[0] = true;
      booleanArray0[1] = false;
      booleanArray0[2] = true;
      booleanArray0[3] = true;
      booleanArray0[4] = false;
      boolean boolean0 = BooleanUtils.xor(booleanArray0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      String string0 = BooleanUtils.toString(true, "(? bzX6I+bLdf", "false");
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf("Index: ");
      Boolean boolean1 = BooleanUtils.negate(boolean0);
      boolean boolean2 = Boolean.logicalOr(true, false);
      boolean boolean3 = Boolean.logicalXor(true, true);
      boolean boolean4 = BooleanUtils.isTrue(boolean1);
      String string0 = BooleanUtils.toStringTrueFalse(true);
      Boolean boolean5 = Boolean.valueOf("off");
      boolean boolean6 = BooleanUtils.isTrue(boolean5);
      boolean boolean7 = BooleanUtils.toBoolean("Index: ");
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      int int0 = BooleanUtils.toInteger(false, 1, 0);
      String string0 = BooleanUtils.toStringOnOff(false);
      Boolean boolean0 = BooleanUtils.toBooleanObject((-589));
      boolean boolean1 = Boolean.logicalAnd(false, false);
      boolean boolean2 = Boolean.logicalAnd(false, false);
      int int1 = BooleanUtils.toInteger(boolean0, 0, 0, 1938);
      Boolean boolean3 = BooleanUtils.toBooleanObject(false);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Integer integer0 = new Integer((-509));
      Integer integer1 = new Integer(101);
      Integer integer2 = new Integer(101);
      // Undeclared exception!
      try { 
        BooleanUtils.toBoolean(integer0, integer1, integer2);
      } catch(IllegalArgumentException e) {
         //
         // The Integer did not match either specified value
         //
         verifyException("org.apache.commons.lang.BooleanUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Boolean boolean0 = new Boolean("`xvx6");
      Boolean boolean1 = BooleanUtils.negate(boolean0);
      String string0 = BooleanUtils.toString(boolean1, "`xvx6", "`xvx6", "`xvx6");
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      boolean boolean0 = Boolean.logicalXor(true, true);
      Boolean boolean1 = new Boolean(false);
      String string0 = BooleanUtils.toString(boolean1, "", "", (String) null);
      Integer integer0 = BooleanUtils.toIntegerObject(false);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject(false);
      boolean boolean1 = Boolean.logicalXor(true, false);
      boolean boolean2 = Boolean.getBoolean("1g#RK&+B2K");
      boolean boolean3 = Boolean.logicalAnd(false, true);
      int int0 = BooleanUtils.toInteger(boolean0, 0, 0, 43);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Boolean boolean0 = BooleanUtils.toBooleanObject(integer0);
      boolean boolean1 = BooleanUtils.isTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Integer integer0 = new Integer(3473);
      Boolean boolean0 = BooleanUtils.toBooleanObject((Integer) null, (Integer) null, integer0, (Integer) null);
      Boolean boolean1 = BooleanUtils.toBooleanObject(3473, 3473, 3473, 0);
      Integer integer1 = BooleanUtils.toIntegerObject(boolean1, integer0, integer0, (Integer) null);
      String string0 = BooleanUtils.toStringTrueFalse(true);
      Integer integer2 = BooleanUtils.toIntegerObject(true);
      int int0 = BooleanUtils.toInteger(true);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      int int0 = BooleanUtils.toInteger(true, (-1161), (-1161));
      Integer integer0 = BooleanUtils.toIntegerObject(false);
      Boolean boolean0 = BooleanUtils.toBooleanObject(false);
      Boolean boolean1 = BooleanUtils.toBooleanObject(0, (-1161), 0, 0);
      String string0 = BooleanUtils.toStringTrueFalse(false);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject((String) null, (String) null, "false", ";S2CCdaWO'K<zYi[5/Q");
      Boolean boolean1 = BooleanUtils.toBooleanObject(0);
      Boolean boolean2 = BooleanUtils.toBooleanObject(", Length: 0", (String) null, "false", ", Length: 0");
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer(0);
      int int0 = Integer.compareUnsigned(101, 101);
      Integer integer2 = BooleanUtils.toIntegerObject(true, integer0, integer1);
      boolean boolean3 = BooleanUtils.toBoolean(integer0, integer1, integer2);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Boolean[] booleanArray0 = new Boolean[7];
      Boolean boolean0 = Boolean.FALSE;
      booleanArray0[0] = boolean0;
      Boolean boolean1 = Boolean.FALSE;
      booleanArray0[1] = boolean1;
      Boolean boolean2 = BooleanUtils.toBooleanObject("");
      booleanArray0[2] = null;
      Boolean boolean3 = BooleanUtils.toBooleanObject("", "", "", "");
      booleanArray0[3] = boolean3;
      Boolean boolean4 = BooleanUtils.toBooleanObject(70);
      booleanArray0[4] = boolean4;
      Integer integer0 = new Integer(84);
      Integer integer1 = new Integer(70);
      Boolean boolean5 = BooleanUtils.toBooleanObject(integer0, integer0, integer1, integer1);
      booleanArray0[5] = boolean5;
      Boolean boolean6 = new Boolean("");
      booleanArray0[6] = boolean6;
      // Undeclared exception!
      try { 
        BooleanUtils.xor(booleanArray0);
      } catch(IllegalArgumentException e) {
         //
         // The array must not contain any null elements
         //
         verifyException("org.apache.commons.lang.BooleanUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject(")z;X]g");
      boolean boolean1 = Boolean.logicalOr(true, true);
      boolean boolean2 = BooleanUtils.isTrue((Boolean) null);
      Boolean[] booleanArray0 = new Boolean[1];
      booleanArray0[0] = null;
      // Undeclared exception!
      try { 
        BooleanUtils.xor(booleanArray0);
      } catch(IllegalArgumentException e) {
         //
         // The array must not contain any null elements
         //
         verifyException("org.apache.commons.lang.BooleanUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Boolean boolean0 = BooleanUtils.toBooleanObject(integer0, integer0, integer0, integer0);
      Boolean boolean1 = BooleanUtils.negate(boolean0);
      boolean boolean2 = Boolean.getBoolean("");
      boolean boolean3 = BooleanUtils.isNotTrue(boolean1);
      String string0 = BooleanUtils.toStringTrueFalse(boolean1);
      Boolean boolean4 = BooleanUtils.toBooleanObject("");
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject((-330));
      boolean boolean1 = BooleanUtils.isNotTrue(boolean0);
      BooleanUtils booleanUtils0 = new BooleanUtils();
      boolean boolean2 = BooleanUtils.isNotTrue(boolean0);
      Integer integer0 = new Integer((-330));
      Boolean boolean3 = BooleanUtils.toBooleanObject(integer0);
      Boolean boolean4 = BooleanUtils.negate(boolean3);
      String string0 = BooleanUtils.toStringOnOff(boolean4);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject(true);
      boolean boolean1 = Boolean.logicalAnd(true, false);
      int int0 = Boolean.compare(false, false);
      int int1 = Boolean.compare(false, false);
      boolean boolean2 = BooleanUtils.isNotFalse(boolean0);
      Integer integer0 = new Integer(0);
      Integer integer1 = BooleanUtils.toIntegerObject(true, integer0, integer0);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject("Index: ");
      boolean boolean1 = Boolean.logicalAnd(false, false);
      int int0 = Boolean.compare(false, false);
      String string0 = BooleanUtils.toStringOnOff((Boolean) null);
      boolean boolean2 = BooleanUtils.isTrue((Boolean) null);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      // Undeclared exception!
      try { 
        BooleanUtils.toBooleanObject((-1046), (-1043), (-1043), 0);
      } catch(IllegalArgumentException e) {
         //
         // The Integer did not match any specified value
         //
         verifyException("org.apache.commons.lang.BooleanUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      boolean boolean1 = Boolean.logicalOr(true, true);
      String string0 = BooleanUtils.toStringTrueFalse(boolean0);
      Boolean boolean2 = BooleanUtils.toBooleanObject("Sk157j=06=+JWmJE}");
      Boolean boolean3 = BooleanUtils.toBooleanObject((-2315));
      Boolean[] booleanArray0 = new Boolean[6];
      booleanArray0[0] = boolean3;
      booleanArray0[1] = boolean0;
      booleanArray0[2] = boolean3;
      booleanArray0[3] = boolean0;
      booleanArray0[4] = boolean3;
      booleanArray0[5] = boolean0;
      Boolean boolean4 = BooleanUtils.xor(booleanArray0);
      Integer integer0 = new Integer((-4436));
      Integer integer1 = new Integer(2147483645);
      int int0 = Integer.divideUnsigned((-1395), 82);
      int int1 = Integer.compareUnsigned(10, 1023);
      int int2 = Integer.min(1, 4158);
      Integer integer2 = new Integer((-4436));
      int int3 = Integer.compare((-3679), 52377632);
      Boolean boolean5 = BooleanUtils.toBooleanObject(integer0, integer1, integer1, integer2);
      String string1 = BooleanUtils.toStringTrueFalse(boolean0);
      Integer integer3 = new Integer((-2315));
      boolean boolean6 = BooleanUtils.toBoolean(integer2, integer2, integer3);
      Boolean boolean7 = BooleanUtils.toBooleanObject("true", "true", "true", "N0eMKZZ*+K");
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      String string0 = BooleanUtils.toStringYesNo(true);
      String string1 = BooleanUtils.toStringYesNo((Boolean) null);
      Integer integer0 = new Integer(824);
      String string2 = Integer.toUnsignedString((-1061));
      Integer integer1 = Integer.valueOf(151);
      int int0 = Integer.compareUnsigned(3, (-4570));
      int int1 = Integer.sum((-262), 65);
      // Undeclared exception!
      try { 
        BooleanUtils.toBoolean((Integer) null, integer0, integer1);
      } catch(IllegalArgumentException e) {
         //
         // The Integer did not match either specified value
         //
         verifyException("org.apache.commons.lang.BooleanUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      Integer integer0 = new Integer(738);
      boolean boolean0 = BooleanUtils.toBoolean(integer0, integer0, integer0);
      Boolean[] booleanArray0 = new Boolean[4];
      Boolean boolean1 = BooleanUtils.negate((Boolean) null);
      booleanArray0[0] = null;
      Boolean boolean2 = Boolean.FALSE;
      booleanArray0[1] = boolean2;
      Integer integer1 = new Integer(2518);
      Boolean boolean3 = BooleanUtils.toBooleanObject(integer1);
      booleanArray0[2] = boolean3;
      // Undeclared exception!
      try { 
        BooleanUtils.toBooleanObject(2518, 738, 76, 1437);
      } catch(IllegalArgumentException e) {
         //
         // The Integer did not match any specified value
         //
         verifyException("org.apache.commons.lang.BooleanUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      Boolean[] booleanArray0 = new Boolean[6];
      boolean boolean0 = true;
      Boolean boolean1 = Boolean.valueOf(true);
      booleanArray0[0] = boolean1;
      Boolean boolean2 = Boolean.FALSE;
      booleanArray0[1] = boolean2;
      boolean boolean3 = Boolean.logicalOr(false, false);
      Boolean boolean4 = BooleanUtils.toBooleanObject(boolean0);
      booleanArray0[2] = boolean4;
      Boolean boolean5 = Boolean.valueOf(true);
      booleanArray0[3] = boolean5;
      Boolean boolean6 = BooleanUtils.toBooleanObject(97, 97, 97, 97);
      booleanArray0[4] = boolean6;
      Boolean boolean7 = BooleanUtils.negate((Boolean) boolean0);
      booleanArray0[5] = boolean7;
      boolean boolean8 = Boolean.logicalOr(true, false);
      Boolean boolean9 = BooleanUtils.xor(booleanArray0);
      boolean boolean10 = Boolean.logicalAnd(boolean0, false);
      boolean boolean11 = Boolean.logicalAnd(false, true);
      boolean boolean12 = Boolean.getBoolean("=-1a");
      boolean boolean13 = BooleanUtils.toBoolean(0);
      boolean boolean14 = BooleanUtils.toBoolean(boolean7);
      Boolean boolean15 = BooleanUtils.toBooleanObject(true);
      // Undeclared exception!
      try { 
        BooleanUtils.toBoolean(97, 0, 1);
      } catch(IllegalArgumentException e) {
         //
         // The Integer did not match either specified value
         //
         verifyException("org.apache.commons.lang.BooleanUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      boolean boolean0 = BooleanUtils.toBoolean((-2334), 68, (-2334));
      Boolean boolean1 = BooleanUtils.toBooleanObject((Integer) null);
      Boolean boolean2 = BooleanUtils.toBooleanObject((Integer) null, (Integer) null, (Integer) null, (Integer) null);
      Boolean boolean3 = BooleanUtils.toBooleanObject((-2334));
      int int0 = BooleanUtils.toInteger(false);
      Boolean boolean4 = new Boolean("The Array must not be null");
      boolean boolean5 = Boolean.logicalXor(false, false);
      boolean boolean6 = Boolean.logicalOr(false, true);
      String string0 = BooleanUtils.toString(boolean4, "The Array must not be null", "The Array must not be null", "The Array must not be null");
      Boolean boolean7 = BooleanUtils.toBooleanObject((-2334));
      boolean boolean8 = BooleanUtils.toBoolean(82, 82, 150);
      String string1 = BooleanUtils.toStringYesNo(boolean3);
      boolean boolean9 = BooleanUtils.toBoolean((-348));
      Boolean boolean10 = BooleanUtils.toBooleanObject("The Array must not be null");
      boolean boolean11 = Boolean.logicalAnd(true, true);
      String string2 = BooleanUtils.toStringTrueFalse(false);
      Boolean boolean12 = BooleanUtils.negate(boolean4);
      boolean boolean13 = BooleanUtils.isNotTrue(boolean4);
      Integer integer0 = Integer.getInteger("The Array must not be null", 69);
      Boolean boolean14 = BooleanUtils.toBooleanObject(integer0);
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject(true);
      Boolean boolean1 = Boolean.valueOf("");
      boolean boolean2 = Boolean.logicalOr(true, true);
      boolean boolean3 = Boolean.getBoolean("");
      boolean boolean4 = Boolean.logicalAnd(true, true);
      boolean boolean5 = Boolean.logicalOr(false, false);
      boolean boolean6 = Boolean.logicalOr(false, true);
      int int0 = Boolean.compare(true, false);
      boolean boolean7 = Boolean.logicalOr(true, false);
      boolean boolean8 = BooleanUtils.isTrue(boolean1);
      Integer integer0 = new Integer(46);
      String string0 = Integer.toUnsignedString((-1));
      Boolean boolean9 = BooleanUtils.toBooleanObject(integer0);
      String string1 = BooleanUtils.toStringOnOff(true);
      Integer integer1 = BooleanUtils.toIntegerObject(true, integer0, (Integer) null);
      boolean boolean10 = BooleanUtils.toBoolean("on");
      Integer integer2 = BooleanUtils.toIntegerObject(false, (Integer) null, integer0);
      Boolean boolean11 = BooleanUtils.toBooleanObject((Integer) null);
      String string2 = BooleanUtils.toStringTrueFalse(true);
      Boolean boolean12 = BooleanUtils.toBooleanObject("The Array must not be null");
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject("false", "false", "", "false");
      boolean boolean1 = Boolean.logicalOr(false, false);
      int int0 = Boolean.compare(false, false);
      boolean boolean2 = Boolean.getBoolean("y9%p^M[LOV?\" ");
      boolean boolean3 = Boolean.logicalAnd(false, true);
      String string0 = BooleanUtils.toStringYesNo(boolean0);
      String string1 = BooleanUtils.toString(false, "y9%p^M[LOV?\" ", "");
      boolean boolean4 = false;
      boolean boolean5 = Boolean.logicalAnd(false, false);
      String string2 = BooleanUtils.toStringTrueFalse(boolean0);
      boolean boolean6 = BooleanUtils.isNotTrue(boolean0);
      boolean boolean7 = BooleanUtils.toBoolean(0, 0, (-2697));
      boolean boolean8 = BooleanUtils.toBoolean(boolean0);
      Integer integer0 = BooleanUtils.toIntegerObject(false);
      boolean boolean9 = BooleanUtils.toBoolean("");
      // Undeclared exception!
      try { 
        BooleanUtils.toBooleanObject("Index: ", "bsvt@+1kxh4}Zt$", "org.apache.commons.lang.math.NumberUtils", "false");
      } catch(IllegalArgumentException e) {
         //
         // The String did not match any specified value
         //
         verifyException("org.apache.commons.lang.BooleanUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject("The Array must not be null");
      boolean boolean1 = Boolean.logicalXor(true, true);
      boolean boolean2 = Boolean.logicalXor(true, true);
      int int0 = Boolean.compare(false, true);
      boolean boolean3 = BooleanUtils.isNotFalse((Boolean) null);
      Boolean boolean4 = Boolean.valueOf(true);
      Integer integer0 = new Integer((-1));
      Integer integer1 = BooleanUtils.toIntegerObject(boolean4, integer0, integer0, integer0);
      int int1 = Integer.compare(5907, 5907);
      boolean boolean5 = Boolean.logicalOr(false, true);
      boolean boolean6 = Boolean.logicalOr(true, false);
      int int2 = Integer.compareUnsigned(101, 5907);
      boolean boolean7 = Boolean.logicalAnd(true, false);
      Integer integer2 = new Integer((-312));
      int int3 = Integer.min((-312), (-312));
      Integer integer3 = BooleanUtils.toIntegerObject(true, integer1, integer2);
      boolean boolean8 = BooleanUtils.isFalse((Boolean) null);
      Boolean boolean9 = BooleanUtils.negate((Boolean) null);
      Boolean boolean10 = new Boolean("The Array must not be null");
      Boolean boolean11 = BooleanUtils.negate(boolean10);
      boolean[] booleanArray0 = new boolean[5];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      booleanArray0[2] = true;
      booleanArray0[3] = true;
      booleanArray0[4] = true;
      boolean boolean12 = BooleanUtils.xor(booleanArray0);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      boolean[] booleanArray0 = new boolean[1];
      booleanArray0[0] = true;
      boolean boolean0 = BooleanUtils.xor(booleanArray0);
      boolean boolean1 = BooleanUtils.toBoolean((-463));
      String string0 = BooleanUtils.toString(true, "", (String) null);
      Boolean boolean2 = Boolean.TRUE;
      int int0 = Boolean.compare(true, true);
      int int1 = Boolean.compare(true, true);
      boolean boolean3 = Boolean.logicalAnd(true, true);
      boolean boolean4 = BooleanUtils.isFalse(boolean2);
      int int2 = BooleanUtils.toInteger(true, 2944, 2944);
      String string1 = BooleanUtils.toStringYesNo(true);
      Boolean boolean5 = Boolean.FALSE;
      boolean boolean6 = BooleanUtils.isNotFalse(boolean5);
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      boolean boolean0 = BooleanUtils.toBoolean("/HcT{W[[WZ8lL0G", "/HcT{W[[WZ8lL0G", "/HcT{W[[WZ8lL0G");
      boolean boolean1 = BooleanUtils.toBoolean("mffc`iCFEMS>", "The Array must not be null", "mffc`iCFEMS>");
      Boolean boolean2 = BooleanUtils.toBooleanObject("", "", "", "The Array must not be null");
      int int0 = Boolean.compare(true, true);
      boolean boolean3 = Boolean.logicalXor(false, false);
      String string0 = BooleanUtils.toStringTrueFalse(boolean2);
      boolean[] booleanArray0 = new boolean[13];
      booleanArray0[0] = false;
      boolean boolean4 = Boolean.getBoolean("%3s_bt.j6R%(Z-='");
      boolean boolean5 = Boolean.logicalXor(false, false);
      booleanArray0[1] = false;
      boolean boolean6 = BooleanUtils.xor(booleanArray0);
      boolean boolean7 = BooleanUtils.isTrue(boolean2);
      BooleanUtils booleanUtils0 = new BooleanUtils();
      boolean boolean8 = BooleanUtils.toBooleanDefaultIfNull((Boolean) false, false);
      int int1 = BooleanUtils.toInteger((Boolean) null, 0, 0, 0);
      Boolean[] booleanArray1 = new Boolean[3];
      booleanArray1[0] = (Boolean) false;
      Boolean boolean9 = Boolean.valueOf("The Array must not be null");
      booleanArray1[1] = boolean9;
      booleanArray1[2] = (Boolean) false;
      Boolean boolean10 = BooleanUtils.xor(booleanArray1);
      int int2 = Boolean.compare(false, true);
      String string1 = BooleanUtils.toStringTrueFalse(boolean10);
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject("", "", "", "");
      boolean boolean1 = Boolean.logicalXor(true, true);
      String string0 = BooleanUtils.toStringYesNo(boolean0);
      Integer integer0 = new Integer(3177);
      long long0 = Integer.toUnsignedLong(101);
      Boolean boolean2 = BooleanUtils.toBooleanObject(integer0, (Integer) null, integer0, integer0);
      boolean boolean3 = Boolean.getBoolean("yes");
      boolean boolean4 = Boolean.logicalOr(true, true);
      Integer integer1 = BooleanUtils.toIntegerObject(boolean2);
      Boolean boolean5 = BooleanUtils.toBooleanObject("", "", "", "");
      Integer integer2 = new Integer(85);
      try { 
        Integer.parseUnsignedInt("");
      } catch(NumberFormatException e) {
         //
         // For input string: \"\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }
}
