/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 29 05:18:07 GMT 2020
 */

package org.apache.commons.lang;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import org.apache.commons.lang.LocaleUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LocaleUtils_ESTest extends LocaleUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("gzywT0.~[5hf/z");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: gzywT0.~[5hf/z
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("andqhld+7w");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: andqhld+7w
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("}bYx.XI");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: }bYx.XI
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Locale locale0 = Locale.FRENCH;
      boolean boolean0 = LocaleUtils.isAvailableLocale(locale0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Locale locale0 = Locale.ITALY;
      List list0 = LocaleUtils.localeLookupList(locale0, locale0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      List list0 = LocaleUtils.availableLocaleList();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      List list0 = LocaleUtils.countriesByLanguage((String) null);
      Locale locale0 = Locale.ITALY;
      List list1 = LocaleUtils.localeLookupList(locale0, locale0);
      List list2 = LocaleUtils.countriesByLanguage((String) null);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Locale locale0 = Locale.ITALY;
      String string0 = locale0.getExtension('F');
      List list0 = LocaleUtils.localeLookupList(locale0);
      String string1 = locale0.toLanguageTag();
      List list1 = LocaleUtils.languagesByCountry("");
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      List list0 = LocaleUtils.languagesByCountry("org.apache.commons.lang.LocaleUtils");
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Set set0 = LocaleUtils.availableLocaleSet();
      Set set1 = LocaleUtils.availableLocaleSet();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Locale locale0 = Locale.ROOT;
      Locale locale1 = Locale.GERMAN;
      List list0 = LocaleUtils.localeLookupList(locale0, locale1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Locale locale0 = new Locale("", "", "8l^d15{ W,P\"C6|o");
      List list0 = LocaleUtils.localeLookupList(locale0, locale0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      List list0 = LocaleUtils.localeLookupList((Locale) null, (Locale) null);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("z1k&9'h,X2");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: z1k&9'h,X2
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("N}Rh[pmh\f<B6");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: N}Rh[pmh\f<B6
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("it-IT");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: it-IT
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Locale locale0 = LocaleUtils.toLocale("fi");
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Locale locale0 = LocaleUtils.toLocale((String) null);
      List list0 = LocaleUtils.languagesByCountry((String) null);
      Locale locale1 = LocaleUtils.toLocale((String) null);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: 
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Locale locale0 = Locale.FRENCH;
      List list0 = LocaleUtils.localeLookupList(locale0);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      List<String> list1 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      List<String> list2 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list1, locale_FilteringMode1);
      List<String> list3 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list2);
      boolean boolean0 = linkedList0.containsAll(list2);
      List<String> list4 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list3);
      List<String> list5 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list4, locale_FilteringMode0);
      String string0 = locale0.toLanguageTag();
      List list6 = LocaleUtils.localeLookupList(locale0);
      List list7 = LocaleUtils.localeLookupList(locale0);
      List list8 = LocaleUtils.countriesByLanguage("fr");
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LocaleUtils localeUtils0 = new LocaleUtils();
      List list0 = LocaleUtils.countriesByLanguage("");
      String string0 = "org.apache.commons.lang.LocaleUtils";
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("org.apache.commons.lang.LocaleUtils");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: org.apache.commons.lang.LocaleUtils
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      boolean boolean0 = LocaleUtils.isAvailableLocale((Locale) null);
  }
}
