/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 29 05:18:09 GMT 2020
 */

package org.apache.commons.lang;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import org.apache.commons.lang.LocaleUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LocaleUtils_ESTest extends LocaleUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("a6");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: a6
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      List list0 = LocaleUtils.countriesByLanguage("pl");
      List list1 = LocaleUtils.countriesByLanguage((String) null);
      Locale locale0 = Locale.KOREAN;
      Locale locale1 = locale0.stripExtensions();
      String string0 = locale1.getDisplayScript();
      Set<String> set0 = locale1.getUnicodeLocaleAttributes();
      List list2 = LocaleUtils.localeLookupList(locale1);
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("D<^d}}=2G6+n$l[xa");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: D<^d}}=2G6+n$l[xa
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      List list0 = LocaleUtils.languagesByCountry("TH");
      String string0 = null;
      Locale locale0 = LocaleUtils.toLocale((String) null);
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("org.apache.commons.lang.LocaleUtils");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: org.apache.commons.lang.LocaleUtils
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Set set0 = LocaleUtils.availableLocaleSet();
      Set set1 = LocaleUtils.availableLocaleSet();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Locale locale0 = Locale.CANADA;
      Locale locale1 = Locale.CHINESE;
      List list0 = LocaleUtils.localeLookupList(locale1, locale0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Locale locale0 = Locale.CHINESE;
      List list0 = LocaleUtils.localeLookupList(locale0, locale0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Locale locale0 = new Locale("jQ.2}`G", "jQ.2}`G", "jQ.2}`G");
      List list0 = LocaleUtils.localeLookupList(locale0, locale0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      List list0 = LocaleUtils.localeLookupList((Locale) null, (Locale) null);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("e}Wbsn#S#r8_?oQ~y~");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: e}Wbsn#S#r8_?oQ~y~
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("\u0E40\u0E22\u0E2D\u0E23\u0E21\u0E31\u0E19");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: \u0E40\u0E22\u0E2D\u0E23\u0E21\u0E31\u0E19
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: 
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("yRM;r");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: yRM;r
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Locale locale0 = LocaleUtils.toLocale("th");
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LocaleUtils localeUtils0 = new LocaleUtils();
      List list0 = LocaleUtils.languagesByCountry((String) null);
      Locale locale0 = Locale.CANADA;
      List list1 = LocaleUtils.localeLookupList(locale0, locale0);
      Locale locale1 = Locale.CHINESE;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      linkedList1.addLast(locale0);
      List<Locale> list2 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1, locale_FilteringMode0);
      List<Locale> list3 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list2);
      Locale locale2 = Locale.lookup(linkedList0, list3);
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      LinkedList<String> linkedList3 = new LinkedList<String>();
      List<String> list4 = Locale.filterTags((List<Locale.LanguageRange>) linkedList2, (Collection<String>) linkedList3);
      List list5 = LocaleUtils.localeLookupList(locale1, locale1);
      Locale locale3 = Locale.FRENCH;
      String[] stringArray0 = Locale.getISOCountries();
      Locale locale4 = locale3.stripExtensions();
      List list6 = LocaleUtils.localeLookupList(locale4);
      List list7 = LocaleUtils.countriesByLanguage("gArdUA");
      List list8 = LocaleUtils.availableLocaleList();
      List list9 = LocaleUtils.localeLookupList((Locale) null, (Locale) null);
      Set set0 = LocaleUtils.availableLocaleSet();
      List list10 = LocaleUtils.languagesByCountry("");
      Set set1 = LocaleUtils.availableLocaleSet();
      List list11 = LocaleUtils.countriesByLanguage("gArdUA");
      boolean boolean0 = LocaleUtils.isAvailableLocale((Locale) null);
      List list12 = LocaleUtils.countriesByLanguage("");
      List list13 = LocaleUtils.availableLocaleList();
      List list14 = LocaleUtils.countriesByLanguage("V]I;S6g[(xM5\"M");
      List list15 = LocaleUtils.localeLookupList(locale3, locale0);
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("org.apache.commons.lang.LocaleUtils");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: org.apache.commons.lang.LocaleUtils
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      boolean boolean0 = LocaleUtils.isAvailableLocale(locale0);
  }
}
