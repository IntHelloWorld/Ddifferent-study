* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.math.linear.EigenDecompositionImpl
* Starting client
* Connecting to master process on port 17206
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/patch3-Math-80-CapGen-plausible/Math_80_3-plausible_capgen/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math.linear.EigenDecompositionImpl
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 851
  - Branch 428
  - Exception 0
  - MutationFactory 212
  - Output 28
  - Method 17
  - MethodNoException 17
  - CBranchFitnessFactory 428
[Progress:>                             0%] [Cov:>                                  0%]* Using seed 1585411890955
* Starting evolution
[Progress:=>                            6%] [Cov:>                                  0%][Progress:==>                           8%] [Cov:>                                  1%][Progress:==>                           8%] [Cov:====>                              13%][Progress:==>                           8%] [Cov:====>                              14%][Progress:===>                          10%] [Cov:====>                              12%][Progress:===>                          11%] [Cov:===>                               11%][Progress:=========>                    33%] [Cov:>                                  1%][Progress:==========>                   35%] [Cov:>                                  2%][Progress:==========>                   35%] [Cov:====>                              14%][Progress:==========>                   35%] [Cov:=====>                             15%][Progress:==========>                   35%] [Cov:=====>                             16%][Progress:==========>                   36%] [Cov:>                                  0%][Progress:==========>                   36%] [Cov:>                                  1%][Progress:==========>                   36%] [Cov:====>                              13%][Progress:==========>                   36%] [Cov:====>                              14%][Progress:===========>                  38%] [Cov:>                                  0%][Progress:===========>                  38%] [Cov:>                                  1%][Progress:===========>                  38%] [Cov:====>                              13%][Progress:===========>                  38%] [Cov:====>                              14%][Progress:===========>                  38%] [Cov:=====>                             16%][Progress:===========>                  38%] [Cov:=====>                             17%][Progress:===========>                  38%] [Cov:======>                            18%][Progress:============>                 40%] [Cov:=======>                           20%][Progress:============>                 40%] [Cov:=======>                           22%][Progress:============>                 40%] [Cov:========>                          23%][Progress:============>                 40%] [Cov:========>                          24%][Progress:============>                 40%] [Cov:========>                          25%][Progress:============>                 41%] [Cov:>                                  0%][Progress:============>                 41%] [Cov:>                                  1%][Progress:============>                 41%] [Cov:====>                              13%][Progress:============>                 41%] [Cov:====>                              14%][Progress:============>                 41%] [Cov:=====>                             15%][Progress:============>                 41%] [Cov:=====>                             16%][Progress:============>                 41%] [Cov:======>                            18%][Progress:============>                 41%] [Cov:======>                            19%][Progress:=============>                45%] [Cov:>                                  0%][Progress:=============>                45%] [Cov:====>                              13%][Progress:=============>                45%] [Cov:====>                              14%][Progress:=============>                45%] [Cov:=====>                             16%][Progress:=============>                45%] [Cov:=====>                             17%][Progress:=============>                45%] [Cov:======>                            18%][Progress:=============>                46%] [Cov:====>                              13%][Progress:=============>                46%] [Cov:====>                              14%][Progress:=============>                46%] [Cov:========>                          25%][Progress:==============>               48%] [Cov:====>                              14%][Progress:==============>               48%] [Cov:========>                          23%][Progress:==============>               48%] [Cov:========>                          25%][Progress:===============>              50%] [Cov:====>                              13%][Progress:===============>              50%] [Cov:====>                              14%][Progress:===============>              50%] [Cov:=====>                             16%][Progress:===============>              50%] [Cov:=====>                             17%][Progress:===============>              50%] [Cov:======>                            18%][Progress:===============>              50%] [Cov:========>                          23%][Progress:===============>              53%] [Cov:===========>                       32%][Progress:================>             55%] [Cov:==========>                        31%][Progress:================>             55%] [Cov:===========>                       32%][Progress:================>             56%] [Cov:==========>                        31%][Progress:================>             56%] [Cov:===========>                       32%][Progress:==================>           60%] [Cov:===========>                       32%][Progress:==================>           60%] [Cov:===========>                       33%][Progress:==================>           61%] [Cov:==========>                        31%][Progress:==================>           61%] [Cov:===========>                       32%][Progress:==================>           63%] [Cov:===========>                       32%][Progress:===================>          65%] [Cov:===========>                       34%][Progress:===================>          66%] [Cov:===========>                       33%][Progress:===================>          66%] [Cov:===========>                       34%][Progress:====================>         68%] [Cov:===========>                       34%][Progress:====================>         68%] [Cov:============>                      35%][Progress:=====================>        70%] [Cov:===========>                       33%][Progress:=====================>        70%] [Cov:===========>                       34%][Progress:=====================>        71%] [Cov:============>                      35%][Progress:=====================>        73%] [Cov:============>                      35%][Progress:======================>       75%] [Cov:============>                      35%][Progress:======================>       76%] [Cov:============>                      35%][Progress:======================>       76%] [Cov:============>                      35%][Progress:=======================>      78%] [Cov:===========>                       34%][Progress:=======================>      78%] [Cov:============>                      35%][Progress:========================>     80%] [Cov:============>                      35%][Progress:=========================>    85%] [Cov:============>                      35%][Progress:=========================>    86%] [Cov:============>                      35%][Progress:==========================>   88%] [Cov:============>                      35%][Progress:===========================>  90%] [Cov:============>                      35%][Progress:===========================>  91%] [Cov:============>                      36%][Progress:===========================>  93%] [Cov:============>                      35%][Progress:===========================>  93%] [Cov:============>                      36%][Progress:============================> 95%] [Cov:============>                      36%][Progress:============================> 95%] [Cov:============>                      36%][Progress:============================> 96%] [Cov:============>                      36%][Progress:=============================>98%] [Cov:============>                      35%][Progress:=============================>98%] [Cov:============>                      36%][Progress:==============================100%] [Cov:============>                      36%][Progress:==============================100%] [Cov:=============>                     38%]
* Search finished after 63s and 9 generations, 6741 statements, best individual has fitness: 3743.58167495854
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 29%
* Total number of goals: 851
* Number of covered goals: 249
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 17%
* Total number of goals: 428
* Number of covered goals: 73
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 20%
* Total number of goals: 212
* Number of covered goals: 43
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 21%
* Total number of goals: 28
* Number of covered goals: 6
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 59%
* Total number of goals: 17
* Number of covered goals: 10
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 47%
* Total number of goals: 17
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 17%
* Total number of goals: 428
* Number of covered goals: 73
* Generated 21 tests with total length 85
* Resulting test suite's coverage: 39% (average coverage for all fitness functions)
* Compiling and checking tests
* Writing JUnit test case 'EigenDecompositionImpl_ESTest' to evosuite-tests
* Done!

* Computation finished
