/*
 * This file was automatically generated by EvoSuite
 * Mon Mar 30 02:55:31 GMT 2020
 */

package org.apache.commons.math.analysis.solvers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.analysis.UnivariateRealFunction;
import org.apache.commons.math.analysis.function.Atanh;
import org.apache.commons.math.analysis.function.Constant;
import org.apache.commons.math.analysis.function.Cos;
import org.apache.commons.math.analysis.function.Exp;
import org.apache.commons.math.analysis.function.Gaussian;
import org.apache.commons.math.analysis.function.HarmonicOscillator;
import org.apache.commons.math.analysis.function.Identity;
import org.apache.commons.math.analysis.function.Log;
import org.apache.commons.math.analysis.function.Logit;
import org.apache.commons.math.analysis.function.Rint;
import org.apache.commons.math.analysis.function.Sigmoid;
import org.apache.commons.math.analysis.function.Sinh;
import org.apache.commons.math.analysis.function.Tan;
import org.apache.commons.math.analysis.solvers.AllowedSolution;
import org.apache.commons.math.analysis.solvers.IllinoisSolver;
import org.apache.commons.math.analysis.solvers.PegasusSolver;
import org.apache.commons.math.analysis.solvers.RegulaFalsiSolver;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BaseSecantSolver_ESTest extends BaseSecantSolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(0.08713622391223907, 0.0);
      HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator(0.0, (-854.93), 0.0);
      AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
      double double0 = regulaFalsiSolver0.solve(1842, (UnivariateRealFunction) harmonicOscillator0, 0.08713622391223907, 2848.8944634668674, 0.0, allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver((-869.56), 2356.0);
      Sigmoid sigmoid0 = new Sigmoid(1.8014398509481984E16, 2439);
      UnivariateRealFunction univariateRealFunction0 = sigmoid0.derivative();
      AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
      double double0 = regulaFalsiSolver0.solve(2439, univariateRealFunction0, (-869.56), 1.8014398509481984E16, 1.8014398509481984E16, allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Rint rint0 = new Rint();
      IllinoisSolver illinoisSolver0 = new IllinoisSolver((-1.0));
      double double0 = illinoisSolver0.solve(2142226466, (UnivariateRealFunction) rint0, (double) 0, 0.08371849358081818, 1.9699272335463627E-8);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(2.8320594499755694);
      Log log0 = new Log();
      illinoisSolver0.setup(1876, log0, 0.3498052630505466, 2.8320594499755694, 58.3026595);
      double double0 = illinoisSolver0.doSolve();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PegasusSolver pegasusSolver0 = new PegasusSolver(795.23031280913);
      Gaussian gaussian0 = new Gaussian();
      AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
      double double0 = pegasusSolver0.solve(18, (UnivariateRealFunction) gaussian0, (-895.5), 795.23031280913, allowedSolution0);
      double double1 = pegasusSolver0.doSolve();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver();
      Gaussian gaussian0 = new Gaussian();
      AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
      // Undeclared exception!
      try { 
        illinoisSolver0.solve((-832), (UnivariateRealFunction) gaussian0, 1.0E-6, (double) (-832), allowedSolution0);
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (-832) exceeded: evaluations
         //
         verifyException("org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
      AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
      Identity identity0 = new Identity();
      // Undeclared exception!
      try { 
        regulaFalsiSolver0.solve(4011, (UnivariateRealFunction) identity0, 2552.579533705888, 2552.579533705888, allowedSolution0);
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [2,552.58, 2,552.58]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver((-2138.36), (-2138.36));
      AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
      // Undeclared exception!
      try { 
        regulaFalsiSolver0.solve(33, (UnivariateRealFunction) null, (-2016.727349), (-2016.727349), allowedSolution0);
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(0.0);
      Atanh atanh0 = new Atanh();
      AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
      // Undeclared exception!
      try { 
        illinoisSolver0.solve(1, (UnivariateRealFunction) atanh0, (double) 1, 0.0, (double) 1, allowedSolution0);
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (1) exceeded: evaluations
         //
         verifyException("org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PegasusSolver pegasusSolver0 = new PegasusSolver(304.0, 1218.01);
      Constant constant0 = new Constant(1522);
      AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
      // Undeclared exception!
      try { 
        pegasusSolver0.solve(1522, (UnivariateRealFunction) constant0, 1218.01, 1218.01, 304.0, allowedSolution0);
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [1,218.01, 1,218.01]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PegasusSolver pegasusSolver0 = new PegasusSolver(3294198.0, 3294198.0);
      Sigmoid sigmoid0 = new Sigmoid(11, 0.49999999999999994);
      AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
      // Undeclared exception!
      try { 
        pegasusSolver0.solve(11, (UnivariateRealFunction) sigmoid0, 12.0, 2138.8771, 1.0, allowedSolution0);
      } catch(IllegalArgumentException e) {
         //
         // function values at endpoints do not have different signs, endpoints: [12, 2,138.877], values: [0.5, 0.5]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PegasusSolver pegasusSolver0 = new PegasusSolver();
      Sinh sinh0 = new Sinh();
      // Undeclared exception!
      try { 
        pegasusSolver0.solve((-2469), (UnivariateRealFunction) sinh0, (double) (-2469), (double) (-2469), 0.0);
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (-2,469) exceeded: evaluations
         //
         verifyException("org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(267.07221117, 267.07221117, 0.0);
      Logit logit0 = new Logit();
      // Undeclared exception!
      try { 
        illinoisSolver0.solve(724, (UnivariateRealFunction) logit0, 267.07221117, (double) 724, 0.0);
      } catch(IllegalArgumentException e) {
         //
         // 267.072 out of [0, 1] range
         //
         verifyException("org.apache.commons.math.analysis.function.Logit", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
      // Undeclared exception!
      try { 
        pegasusSolver0.doSolve();
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (0) exceeded: evaluations
         //
         verifyException("org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(2.8320594499755694, 144.42323792);
      Log log0 = new Log();
      illinoisSolver0.setup(1876, log0, 0.3498052630505466, 0.8812983881499055, (-476.78));
      // Undeclared exception!
      try { 
        illinoisSolver0.doSolve();
      } catch(IllegalArgumentException e) {
         //
         // function values at endpoints do not have different signs, endpoints: [0.35, 0.881], values: [-1.05, -0.126]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(2560.95060578801);
      Logit logit0 = new Logit();
      AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
      double double0 = illinoisSolver0.solve(686, (UnivariateRealFunction) logit0, 0.0, 0.6299605249474366, allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(0.8813735870195429, 0.8813735870195429);
      Tan tan0 = new Tan();
      double double0 = illinoisSolver0.solve(1156, (UnivariateRealFunction) tan0, (-1.50379886372903E-6), 0.8813735870195429, 0.5000645138333226);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(2560.95060578801, 2560.95060578801, 2560.95060578801);
      Logit logit0 = new Logit();
      AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
      double double0 = illinoisSolver0.solve(686, (UnivariateRealFunction) logit0, 0.0, 0.6299605249474366, allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(0.0, 0.0);
      Cos cos0 = new Cos();
      double double0 = illinoisSolver0.solve(34, (UnivariateRealFunction) cos0, 0.0, 21.61492820196668, 0.0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
      Atanh atanh0 = new Atanh();
      AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
      double double0 = regulaFalsiSolver0.solve(4011, (UnivariateRealFunction) atanh0, 2551.0494053861353, 0.0, 0.0, allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver((-966.7570000068994));
      Exp exp0 = new Exp();
      double double0 = regulaFalsiSolver0.solve(2147483346, (UnivariateRealFunction) exp0, (-966.7570000068994), (-966.7570000068994), (-966.7570000068994));
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(2560.95060578801);
      Logit logit0 = new Logit();
      AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
      double double0 = illinoisSolver0.solve(686, (UnivariateRealFunction) logit0, 0.0, 0.6299605249474366, allowedSolution0);
      double double1 = illinoisSolver0.doSolve();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver((-27.81530733341991), 144.42323792);
      Log log0 = new Log();
      illinoisSolver0.setup(1876, log0, 0.3498052630505466, (-27.81530733341991), 58.3026595);
      // Undeclared exception!
      try { 
        illinoisSolver0.doSolve();
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [0.35, -27.815]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver();
      // Undeclared exception!
      try { 
        illinoisSolver0.solve(1762, (UnivariateRealFunction) null, (-328.74), (-328.74), (double) 1762);
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math.util.MathUtils", e);
      }
  }
}
