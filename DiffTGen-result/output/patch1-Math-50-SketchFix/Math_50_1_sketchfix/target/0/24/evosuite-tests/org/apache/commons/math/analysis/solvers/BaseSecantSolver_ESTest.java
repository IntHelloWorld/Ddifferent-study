/*
 * This file was automatically generated by EvoSuite
 * Mon Mar 30 02:57:48 GMT 2020
 */

package org.apache.commons.math.analysis.solvers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.analysis.UnivariateRealFunction;
import org.apache.commons.math.analysis.function.Abs;
import org.apache.commons.math.analysis.function.Exp;
import org.apache.commons.math.analysis.function.Floor;
import org.apache.commons.math.analysis.function.Gaussian;
import org.apache.commons.math.analysis.function.HarmonicOscillator;
import org.apache.commons.math.analysis.function.Log;
import org.apache.commons.math.analysis.function.Logistic;
import org.apache.commons.math.analysis.function.Minus;
import org.apache.commons.math.analysis.function.Sigmoid;
import org.apache.commons.math.analysis.function.Signum;
import org.apache.commons.math.analysis.function.Sin;
import org.apache.commons.math.analysis.function.Sinc;
import org.apache.commons.math.analysis.function.Tan;
import org.apache.commons.math.analysis.solvers.AllowedSolution;
import org.apache.commons.math.analysis.solvers.IllinoisSolver;
import org.apache.commons.math.analysis.solvers.PegasusSolver;
import org.apache.commons.math.analysis.solvers.RegulaFalsiSolver;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BaseSecantSolver_ESTest extends BaseSecantSolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(0.5);
      Logistic logistic0 = new Logistic(1065.8706314468, 0.5, 0.5, (-931.5), (-1855.63), 0.5);
      UnivariateRealFunction univariateRealFunction0 = logistic0.derivative();
      double double0 = illinoisSolver0.solve(707, univariateRealFunction0, 0.0, 1190.91);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PegasusSolver pegasusSolver0 = new PegasusSolver(2.4384203044354907E-8, 2.4384203044354907E-8, 2020.03863992);
      Tan tan0 = new Tan();
      AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
      double double0 = pegasusSolver0.solve(723, (UnivariateRealFunction) tan0, 0.0, (double) 723, allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(0.08371849358081818, 0.08371849358081818);
      Gaussian gaussian0 = new Gaussian(0.0, 0.19999999999923582, 0.08371849358081818);
      AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
      double double0 = regulaFalsiSolver0.solve(3989, (UnivariateRealFunction) gaussian0, 0.08371849358081818, 0.08371849358081818, allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PegasusSolver pegasusSolver0 = new PegasusSolver(2.4384203044354907E-8, 2.4384203044354907E-8, 2020.03863992);
      Tan tan0 = new Tan();
      AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
      double double0 = pegasusSolver0.solve(40, (UnivariateRealFunction) tan0, 0.0, 0.0, (-1346.0), allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver((-2111.6666364));
      Exp exp0 = new Exp();
      AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
      double double0 = regulaFalsiSolver0.solve(2, (UnivariateRealFunction) exp0, (-2111.6666364), (-2111.6666364), 0.5, allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver((-683.697838647452), 1.073741824E9, (-728.90137079));
      HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator((-728.90137079), 19, 1250.22175);
      double double0 = illinoisSolver0.solve(2021, (UnivariateRealFunction) harmonicOscillator0, 4.4201311904146223E-4, (double) 2021, (-1718.801771747));
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PegasusSolver pegasusSolver0 = new PegasusSolver(2.4384203044354907E-8, 2.4384203044354907E-8, 2020.03863992);
      Tan tan0 = new Tan();
      double double0 = pegasusSolver0.solve(40, (UnivariateRealFunction) tan0, 0.0, 0.0, 2.4384203044354907E-8);
      double double1 = pegasusSolver0.doSolve();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(1858.230278739, 1858.230278739);
      Sigmoid sigmoid0 = new Sigmoid();
      UnivariateRealFunction univariateRealFunction0 = sigmoid0.derivative();
      AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
      double double0 = illinoisSolver0.solve(2098, univariateRealFunction0, 1858.230278739, 0.0, (double) 2098, allowedSolution0);
      double double1 = illinoisSolver0.doSolve();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver();
      Log log0 = new Log();
      AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
      // Undeclared exception!
      try { 
        illinoisSolver0.solve(0, (UnivariateRealFunction) log0, 12.0, 1676.6, allowedSolution0);
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (0) exceeded: evaluations
         //
         verifyException("org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(0.0, 0.0);
      AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
      // Undeclared exception!
      try { 
        regulaFalsiSolver0.solve(798, (UnivariateRealFunction) null, 0.0, 0.0, allowedSolution0);
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver();
      Sigmoid sigmoid0 = new Sigmoid((-277), 1262.22776352);
      AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
      // Undeclared exception!
      try { 
        illinoisSolver0.solve((-277), (UnivariateRealFunction) sigmoid0, 1262.22776352, (double) (-277), (double) (-277), allowedSolution0);
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (-277) exceeded: evaluations
         //
         verifyException("org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(1858.230278739, 1858.230278739);
      AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
      Minus minus0 = new Minus();
      // Undeclared exception!
      try { 
        illinoisSolver0.solve(2098, (UnivariateRealFunction) minus0, (double) Integer.MAX_VALUE, 211.65331965625364, 932.58150757784, allowedSolution0);
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [2,147,483,647, 211.653]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PegasusSolver pegasusSolver0 = new PegasusSolver(2707.0378581652612, 2707.0378581652612);
      Abs abs0 = new Abs();
      AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
      // Undeclared exception!
      try { 
        pegasusSolver0.solve(1686, (UnivariateRealFunction) abs0, 1091.8848, 2707.0378581652612, (-97.172), allowedSolution0);
      } catch(IllegalArgumentException e) {
         //
         // function values at endpoints do not have different signs, endpoints: [1,091.885, 2,707.038], values: [1,091.885, 2,707.038]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver((-683.697838647452), 1.073741824E9, (-728.90137079));
      HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator((-728.90137079), 19, 1250.22175);
      // Undeclared exception!
      try { 
        illinoisSolver0.solve(19, (UnivariateRealFunction) harmonicOscillator0, (-728.90137079), (-2465.552), (-2465.552));
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [-728.901, -2,465.552]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(0.5, 0.5, (-2.356194490192345));
      // Undeclared exception!
      try { 
        regulaFalsiSolver0.solve(10, (UnivariateRealFunction) null, (-1.0), (double) 10, 0.0);
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PegasusSolver pegasusSolver0 = new PegasusSolver();
      // Undeclared exception!
      try { 
        pegasusSolver0.doSolve();
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (0) exceeded: evaluations
         //
         verifyException("org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PegasusSolver pegasusSolver0 = new PegasusSolver(2.4384203044354907E-8, 2020.03863992);
      Tan tan0 = new Tan();
      pegasusSolver0.setup(16, tan0, 40, 40, 0.0);
      // Undeclared exception!
      try { 
        pegasusSolver0.doSolve();
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [40, 40]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PegasusSolver pegasusSolver0 = new PegasusSolver();
      Logistic logistic0 = new Logistic(5, (-5.472449963684608E-4), (-7.800414592973399E-9), (-7.800414592973399E-9), 0.11764700710773468, 1.0E-6);
      pegasusSolver0.setup(5, logistic0, 1.0E-6, 2.0083303794827458E-6, 0.7816168916087839);
      // Undeclared exception!
      try { 
        pegasusSolver0.doSolve();
      } catch(IllegalArgumentException e) {
         //
         // function values at endpoints do not have different signs, endpoints: [0, 0], values: [5.038, 5.038]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PegasusSolver pegasusSolver0 = new PegasusSolver(2.4384203044354907E-8, 2015.232320922593);
      Tan tan0 = new Tan();
      AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
      double double0 = pegasusSolver0.solve(21, (UnivariateRealFunction) tan0, 0.6931470632553101, (double) 21, 0.0, allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PegasusSolver pegasusSolver0 = new PegasusSolver(2.4384203044354907E-8, 2020.03863992);
      Tan tan0 = new Tan();
      AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
      double double0 = pegasusSolver0.solve(40, (UnivariateRealFunction) tan0, 0.6931470632553101, (double) 40, (-0.9999092042625951), allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(2.587643069545497E10, 1.2393345855018391E-8, 2.587643069545497E10);
      Signum signum0 = new Signum();
      AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
      double double0 = regulaFalsiSolver0.solve(2102130163, (UnivariateRealFunction) signum0, (-3120.36819496289), 1.2393345855018391E-8, allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PegasusSolver pegasusSolver0 = new PegasusSolver(2.4384203044354907E-8, 2.4384203044354907E-8, 2020.03863992);
      Tan tan0 = new Tan();
      AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
      double double0 = pegasusSolver0.solve(40, (UnivariateRealFunction) tan0, 0.6931470632553101, (double) 40, 0.0, allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(2.587643069545497E10, 2.587643069545497E10, 2.587643069545497E10);
      Signum signum0 = new Signum();
      AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
      double double0 = regulaFalsiSolver0.solve(2102130163, (UnivariateRealFunction) signum0, (-3120.36819496289), 2.587643069545497E10, allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver((-2938.867), (-2938.867), (-1684.5126));
      Sin sin0 = new Sin();
      // Undeclared exception!
      try { 
        regulaFalsiSolver0.solve(1053, (UnivariateRealFunction) sin0, (-2938.867), 98.0311766875251, 2741.67291712964);
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (1,053) exceeded: evaluations
         //
         verifyException("org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PegasusSolver pegasusSolver0 = new PegasusSolver();
      Sinc sinc0 = new Sinc();
      double double0 = pegasusSolver0.solve(554, (UnivariateRealFunction) sinc0, (double) (-4031), 172.36095392560304, (-2657.01920491));
      double double1 = pegasusSolver0.doSolve();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(0.5);
      Floor floor0 = new Floor();
      AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
      double double0 = illinoisSolver0.solve(1342, (UnivariateRealFunction) floor0, (-1566.93041041664), 2660.21575761443, (-4039.3269623), allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(0.5);
      Logistic logistic0 = new Logistic(1065.8706314468, 0.5, 0.5, 0.5, (-1855.461358176283), 0.5);
      UnivariateRealFunction univariateRealFunction0 = logistic0.derivative();
      double double0 = illinoisSolver0.solve(707, univariateRealFunction0, 0.0, (-2044.88592));
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(0.5);
      AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
      Minus minus0 = new Minus();
      // Undeclared exception!
      try { 
        illinoisSolver0.solve(707, (UnivariateRealFunction) minus0, (double) 707, Double.NEGATIVE_INFINITY, allowedSolution0);
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [707, -\u221E]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }
}
