* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.math.linear.EigenDecompositionImpl
* Starting client
* Connecting to master process on port 18283
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/patch2-Math-80-Jaid-plausible/Math_80_2-plausible_jaid/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math.linear.EigenDecompositionImpl
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 853
  - Branch 434
  - Exception 0
  - MutationFactory 219
  - Output 28
  - Method 17
  - MethodNoException 17
  - CBranchFitnessFactory 434
* Using seed 1585439576830
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%][Progress:=>                            5%] [Cov:>                                  0%][Progress:=>                            5%] [Cov:>                                  1%][Progress:=>                            5%] [Cov:====>                              13%][Progress:====>                         15%] [Cov:==>                                6%][Progress:====>                         15%] [Cov:===>                               10%][Progress:====>                         15%] [Cov:========>                          23%][Progress:====>                         15%] [Cov:=========>                         28%][Progress:====>                         15%] [Cov:==========>                        30%][Progress:====>                         15%] [Cov:===========>                       32%][Progress:====>                         16%] [Cov:============>                      35%][Progress:=====>                        18%] [Cov:====>                              12%][Progress:=====>                        18%] [Cov:====>                              13%][Progress:=====>                        18%] [Cov:====>                              14%][Progress:======>                       20%] [Cov:>                                  0%][Progress:======>                       20%] [Cov:>                                  1%][Progress:======>                       20%] [Cov:====>                              13%][Progress:======>                       20%] [Cov:====>                              14%][Progress:======>                       21%] [Cov:>                                  0%][Progress:======>                       21%] [Cov:====>                              13%][Progress:======>                       23%] [Cov:>                                  0%][Progress:======>                       23%] [Cov:>                                  1%][Progress:======>                       23%] [Cov:====>                              13%][Progress:======>                       23%] [Cov:====>                              14%][Progress:========>                     28%] [Cov:>                                  0%][Progress:========>                     28%] [Cov:>                                  1%][Progress:========>                     28%] [Cov:====>                              13%][Progress:========>                     28%] [Cov:====>                              14%][Progress:========>                     28%] [Cov:=====>                             15%][Progress:=========>                    30%] [Cov:====>                              14%][Progress:=========>                    31%] [Cov:====>                              13%][Progress:=========>                    33%] [Cov:>                                  0%][Progress:=========>                    33%] [Cov:====>                              13%][Progress:=========>                    33%] [Cov:====>                              14%][Progress:==========>                   35%] [Cov:==>                                7%][Progress:==========>                   35%] [Cov:====>                              12%][Progress:==========>                   35%] [Cov:========>                          25%][Progress:==========>                   35%] [Cov:==========>                        31%][Progress:==========>                   35%] [Cov:===========>                       33%][Progress:==========>                   35%] [Cov:===========>                       34%][Progress:==========>                   35%] [Cov:=============>                     38%][Progress:==========>                   36%] [Cov:>                                  2%][Progress:==========>                   36%] [Cov:=>                                 3%][Progress:==========>                   36%] [Cov:=====>                             15%][Progress:==========>                   36%] [Cov:=====>                             16%][Progress:==========>                   36%] [Cov:======>                            19%][Progress:==========>                   36%] [Cov:=======>                           21%][Progress:==========>                   36%] [Cov:=======>                           22%][Progress:==========>                   36%] [Cov:=============>                     38%][Progress:===========>                  38%] [Cov:====>                              14%][Progress:===========>                  38%] [Cov:=======>                           21%][Progress:===========>                  38%] [Cov:=======>                           22%][Progress:===========>                  38%] [Cov:=============>                     38%][Progress:============>                 40%] [Cov:====>                              13%][Progress:============>                 40%] [Cov:====>                              14%][Progress:============>                 40%] [Cov:=====>                             15%][Progress:============>                 40%] [Cov:=====>                             16%][Progress:============>                 41%] [Cov:===============>                   44%][Progress:============>                 43%] [Cov:==============>                    40%][Progress:============>                 43%] [Cov:==============>                    41%][Progress:============>                 43%] [Cov:==============>                    42%][Progress:============>                 43%] [Cov:===============>                   43%][Progress:============>                 43%] [Cov:===============>                   45%][Progress:=============>                46%] [Cov:================>                  48%][Progress:==============>               48%] [Cov:===============>                   44%][Progress:==============>               48%] [Cov:================>                  48%][Progress:==============>               48%] [Cov:=================>                 49%][Progress:===============>              50%] [Cov:==================>                53%][Progress:===============>              51%] [Cov:==================>                53%][Progress:===============>              53%] [Cov:================>                  48%][Progress:===============>              53%] [Cov:==================>                53%][Progress:================>             55%] [Cov:================>                  48%][Progress:================>             55%] [Cov:==================>                53%][Progress:================>             56%] [Cov:==================>                53%][Progress:=================>            58%] [Cov:================>                  48%][Progress:=================>            58%] [Cov:=================>                 49%][Progress:==================>           60%] [Cov:==================>                53%][Progress:==================>           61%] [Cov:=================>                 49%][Progress:==================>           61%] [Cov:==================>                53%][Progress:===================>          65%] [Cov:==================>                54%][Progress:===================>          66%] [Cov:==================>                54%][Progress:===================>          66%] [Cov:===================>               55%][Progress:===================>          66%] [Cov:===================>               56%][Progress:===================>          66%] [Cov:===================>               57%][Progress:====================>         68%] [Cov:===================>               57%][Progress:=====================>        70%] [Cov:===================>               57%][Progress:=====================>        71%] [Cov:==================>                53%][Progress:=====================>        71%] [Cov:===================>               57%][Progress:=====================>        73%] [Cov:===================>               57%][Progress:======================>       75%] [Cov:===================>               57%][Progress:======================>       75%] [Cov:====================>              58%][Progress:======================>       76%] [Cov:====================>              59%][Progress:=======================>      78%] [Cov:====================>              58%][Progress:=======================>      78%] [Cov:====================>              59%][Progress:========================>     80%] [Cov:====================>              59%][Progress:========================>     81%] [Cov:====================>              59%][Progress:========================>     81%] [Cov:====================>              59%][Progress:========================>     83%] [Cov:====================>              59%][Progress:=========================>    85%] [Cov:====================>              59%][Progress:=========================>    86%] [Cov:====================>              59%][Progress:==========================>   88%] [Cov:===================>               55%][Progress:==========================>   88%] [Cov:====================>              59%][Progress:===========================>  90%] [Cov:====================>              59%][Progress:===========================>  91%] [Cov:====================>              59%][Progress:===========================>  93%] [Cov:====================>              59%][Progress:============================> 95%] [Cov:====================>              59%][Progress:============================> 96%] [Cov:====================>              59%][Progress:=============================>98%] [Cov:====================>              59%][Progress:=============================>98%] [Cov:=====================>             60%][Progress:=============================>98%] [Cov:=====================>             61%][Progress:==============================100%] [Cov:====================>              59%][Progress:==============================100%] [Cov:=====================>             60%][Progress:==============================100%] [Cov:=====================>             62%][Progress:==============================100%] [Cov:======================>            64%]
* Search finished after 62s and 16 generations, 11299 statements, best individual has fitness: 1289.8404430378716
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 74%
* Total number of goals: 853
* Number of covered goals: 633
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 60%
* Total number of goals: 434
* Number of covered goals: 262
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 51%
* Total number of goals: 219
* Number of covered goals: 111
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 43%
* Total number of goals: 28
* Number of covered goals: 12
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 71%
* Total number of goals: 17
* Number of covered goals: 12
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 65%
* Total number of goals: 17
* Number of covered goals: 11
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 60%
* Total number of goals: 434
* Number of covered goals: 262
* Generated 37 tests with total length 179
* Resulting test suite's coverage: 65% (average coverage for all fitness functions)
* Compiling and checking tests
* Writing JUnit test case 'EigenDecompositionImpl_ESTest' to evosuite-tests
* Done!

* Computation finished
