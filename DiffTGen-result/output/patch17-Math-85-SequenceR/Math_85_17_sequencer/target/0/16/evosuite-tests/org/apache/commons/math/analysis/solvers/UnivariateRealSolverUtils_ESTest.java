/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 31 14:03:47 GMT 2020
 */

package org.apache.commons.math.analysis.solvers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.analysis.UnivariateRealFunction;
import org.apache.commons.math.analysis.polynomials.PolynomialFunction;
import org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeForm;
import org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonForm;
import org.apache.commons.math.analysis.polynomials.PolynomialSplineFunction;
import org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class UnivariateRealSolverUtils_ESTest extends UnivariateRealSolverUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = Double.POSITIVE_INFINITY;
      doubleArray0[1] = 0.0;
      double double0 = 0.5;
      doubleArray0[2] = 0.5;
      doubleArray0[3] = (-193.23494);
      PolynomialFunction[] polynomialFunctionArray0 = new PolynomialFunction[7];
      PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
      polynomialFunctionArray0[0] = polynomialFunction0;
      PolynomialFunction polynomialFunction1 = new PolynomialFunction(doubleArray0);
      polynomialFunctionArray0[1] = polynomialFunction1;
      PolynomialFunction polynomialFunction2 = new PolynomialFunction(doubleArray0);
      polynomialFunctionArray0[2] = polynomialFunction2;
      PolynomialFunction polynomialFunction3 = new PolynomialFunction(doubleArray0);
      PolynomialFunction polynomialFunction4 = polynomialFunction0.add(polynomialFunction0);
      polynomialFunctionArray0[3] = polynomialFunction3;
      double[] doubleArray1 = new double[0];
      // Undeclared exception!
      UnivariateRealSolverUtils.bracket((UnivariateRealFunction) polynomialFunction4, 2040.2989414682672, 129.82248311895, 4814.5766495, 2062);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 505.416162;
      doubleArray0[1] = 505.416162;
      PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
      PolynomialFunction polynomialFunction1 = (PolynomialFunction)polynomialFunction0.derivative();
      String string0 = polynomialFunction1.toString();
      double double0 = 1.0;
      double double1 = 1.0E-6;
      double double2 = 708.225;
      double[] doubleArray1 = UnivariateRealSolverUtils.bracket((UnivariateRealFunction) polynomialFunction0, 0.0, 0.0, 675.0);
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.bracket((UnivariateRealFunction) polynomialFunction0, 707.0, 505.416162, 0.5, (-3190));
      } catch(IllegalArgumentException e) {
         //
         // bad value for maximum iterations number: -3,190
         //
         verifyException("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 0.5;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 0.5;
      PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
      UnivariateRealFunction univariateRealFunction0 = polynomialFunction0.derivative();
      double double0 = UnivariateRealSolverUtils.solve(univariateRealFunction0, 0.0, 3191.66113042, 0.0);
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.solve((UnivariateRealFunction) polynomialFunction0, 1018.565398, 0.5);
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [1,018.565, 0.5]
         //
         verifyException("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 505.416162;
      doubleArray0[1] = 505.416162;
      PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
      UnivariateRealFunction univariateRealFunction0 = polynomialFunction0.derivative();
      PolynomialFunction polynomialFunction1 = new PolynomialFunction(doubleArray0);
      PolynomialFunction polynomialFunction2 = polynomialFunction0.subtract(polynomialFunction1);
      double[] doubleArray1 = UnivariateRealSolverUtils.bracket((UnivariateRealFunction) polynomialFunction0, 1.5, (-1040.3971389904618), 1.9305072486035265E42, 709);
      try { 
        UnivariateRealSolverUtils.bracket(univariateRealFunction0, 1.0, 1.0E-6, 708.225);
      } catch(Exception e) {
         //
         // number of iterations=708, maximum iterations=2,147,483,647, initial=1, lower bound=0, upper bound=708.225, final a value=0, final b value=708.225, f(a)=505.416, f(b)=505.416
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 637.9892837100001;
      doubleArray0[1] = 637.9892837100001;
      doubleArray0[2] = (-1112.52);
      doubleArray0[3] = 1.8936410182474937E42;
      doubleArray0[4] = (-3236.7102);
      doubleArray0[5] = 1.8212144017035155E42;
      doubleArray0[6] = 1650.98066986;
      doubleArray0[7] = 2066.69791;
      doubleArray0[8] = 1.0;
      PolynomialFunctionLagrangeForm polynomialFunctionLagrangeForm0 = new PolynomialFunctionLagrangeForm(doubleArray0, doubleArray0);
      try { 
        UnivariateRealSolverUtils.solve((UnivariateRealFunction) polynomialFunctionLagrangeForm0, (-1112.52), 1.8936410182474937E42, 1.8936410182474937E42);
      } catch(Exception e) {
         //
         // Abscissa 637.989 is duplicated at both indices 1 and 1
         //
         verifyException("org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeForm", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double double0 = UnivariateRealSolverUtils.midpoint((-1.0), (-1.0));
      double double1 = (-607.581751331784);
      double double2 = UnivariateRealSolverUtils.midpoint((-607.581751331784), 0.5);
      double double3 = 1.0;
      double double4 = UnivariateRealSolverUtils.midpoint(1.0, (-1.0));
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (-303.540875665892);
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 1.0;
      doubleArray0[3] = 1.0;
      doubleArray0[4] = (-1.0);
      doubleArray0[5] = (-1.0);
      doubleArray0[6] = (-607.581751331784);
      PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
      PolynomialFunction polynomialFunction1 = new PolynomialFunction(doubleArray0);
      PolynomialFunction polynomialFunction2 = polynomialFunction1.negate();
      PolynomialFunction polynomialFunction3 = polynomialFunction0.subtract(polynomialFunction1);
      PolynomialFunction polynomialFunction4 = polynomialFunction0.negate();
      PolynomialFunction polynomialFunction5 = polynomialFunction0.multiply(polynomialFunction1);
      // Undeclared exception!
      UnivariateRealSolverUtils.bracket((UnivariateRealFunction) polynomialFunction0, 1345.98928371, 0.0, 2129.0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double double0 = UnivariateRealSolverUtils.midpoint(0.0, 0.0);
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = 0.0;
      PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
      UnivariateRealFunction univariateRealFunction0 = polynomialFunction0.derivative();
      double double1 = UnivariateRealSolverUtils.solve(univariateRealFunction0, 0.0, 800.8120613903);
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.bracket(univariateRealFunction0, 0.0, 0.0, (-515.9584928069492), 9);
      } catch(IllegalArgumentException e) {
         //
         // invalid bracketing parameters:  lower bound=0,  initial=0, upper bound=-515.958
         //
         verifyException("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (-1519.982);
      doubleArray0[1] = (-5001.02200826);
      PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
      UnivariateRealFunction univariateRealFunction0 = polynomialFunction0.derivative();
      String string0 = polynomialFunction0.toString();
      UnivariateRealFunction univariateRealFunction1 = polynomialFunction0.derivative();
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.bracket(univariateRealFunction1, (-1519.982), (-1519.982), (-5001.02200826), 1918);
      } catch(IllegalArgumentException e) {
         //
         // invalid bracketing parameters:  lower bound=-1,519.982,  initial=-1,519.982, upper bound=-5,001.022
         //
         verifyException("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double double0 = UnivariateRealSolverUtils.midpoint(Double.POSITIVE_INFINITY, 0.0);
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = Double.POSITIVE_INFINITY;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = Double.POSITIVE_INFINITY;
      doubleArray0[3] = Double.POSITIVE_INFINITY;
      doubleArray0[4] = Double.POSITIVE_INFINITY;
      doubleArray0[5] = Double.POSITIVE_INFINITY;
      doubleArray0[6] = Double.POSITIVE_INFINITY;
      doubleArray0[7] = Double.POSITIVE_INFINITY;
      doubleArray0[8] = Double.POSITIVE_INFINITY;
      PolynomialFunctionLagrangeForm polynomialFunctionLagrangeForm0 = new PolynomialFunctionLagrangeForm(doubleArray0, doubleArray0);
      PolynomialFunctionLagrangeForm.verifyInterpolationArray(doubleArray0, doubleArray0);
      double double1 = PolynomialFunctionLagrangeForm.evaluate(doubleArray0, doubleArray0, Double.POSITIVE_INFINITY);
      double double2 = UnivariateRealSolverUtils.solve((UnivariateRealFunction) polynomialFunctionLagrangeForm0, 0.0, 3818.86795, Double.POSITIVE_INFINITY);
      PolynomialFunctionLagrangeForm.verifyInterpolationArray(doubleArray0, doubleArray0);
      double double3 = UnivariateRealSolverUtils.midpoint(Double.POSITIVE_INFINITY, 5200.5620844);
      double double4 = PolynomialFunctionLagrangeForm.evaluate(doubleArray0, doubleArray0, 0.0);
      double double5 = UnivariateRealSolverUtils.midpoint((-1122.778670343), 3818.86795);
      double double6 = UnivariateRealSolverUtils.solve((UnivariateRealFunction) polynomialFunctionLagrangeForm0, (-1122.778670343), Double.POSITIVE_INFINITY);
      double[] doubleArray1 = UnivariateRealSolverUtils.bracket((UnivariateRealFunction) polynomialFunctionLagrangeForm0, 5200.5620844, 1348.0446398284998, Double.POSITIVE_INFINITY);
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.bracket((UnivariateRealFunction) polynomialFunctionLagrangeForm0, 1050.561733735, Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY);
      } catch(IllegalArgumentException e) {
         //
         // invalid bracketing parameters:  lower bound=\u221E,  initial=1,050.562, upper bound=\u221E
         //
         verifyException("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (-4723.3277);
      doubleArray0[1] = 991.615;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 1.0;
      doubleArray0[4] = 846.0;
      doubleArray0[5] = (-217.316738786);
      doubleArray0[6] = 396.205251094;
      PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
      UnivariateRealFunction univariateRealFunction0 = polynomialFunction0.derivative();
      double double0 = UnivariateRealSolverUtils.solve(univariateRealFunction0, (-1.0), 3249.969, 396.205251094);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 4344.9183341;
      doubleArray0[1] = 0.0;
      PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
      UnivariateRealFunction univariateRealFunction0 = polynomialFunction0.derivative();
      PolynomialFunction polynomialFunction1 = polynomialFunction0.negate();
      double[] doubleArray1 = UnivariateRealSolverUtils.bracket(univariateRealFunction0, (-686.0752184116566), (-686.0752184116566), 0.0, 4);
      double double0 = (-1447.04879);
      double double1 = 0.0;
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.solve(univariateRealFunction0, (-321.8531), (-1447.04879), 0.0);
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [-321.853, -1,447.049]
         //
         verifyException("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = (-2754.448);
      doubleArray0[2] = 0.0;
      PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
      UnivariateRealFunction univariateRealFunction0 = polynomialFunction0.derivative();
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.bracket(univariateRealFunction0, (-2754.448), 1821.6848208434, 0.0, 1054);
      } catch(IllegalArgumentException e) {
         //
         // invalid bracketing parameters:  lower bound=1,821.685,  initial=-2,754.448, upper bound=0
         //
         verifyException("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = Double.POSITIVE_INFINITY;
      PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
      UnivariateRealFunction univariateRealFunction0 = polynomialFunction0.derivative();
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.bracket(univariateRealFunction0, (-3074.8440127), Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY);
      } catch(IllegalArgumentException e) {
         //
         // invalid bracketing parameters:  lower bound=\u221E,  initial=-3,074.844, upper bound=\u221E
         //
         verifyException("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      double double0 = 1.0;
      doubleArray0[0] = 1.0;
      doubleArray0[1] = (-2088.6643);
      doubleArray0[2] = 1.0;
      doubleArray0[3] = 2603.7759171;
      PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
      double double1 = UnivariateRealSolverUtils.solve((UnivariateRealFunction) polynomialFunction0, (-2088.6643), 2603.7759171);
      double double2 = UnivariateRealSolverUtils.solve((UnivariateRealFunction) polynomialFunction0, (-13.052621123107752), 1.0);
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.solve((UnivariateRealFunction) polynomialFunction0, 1.0, 0.0);
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [1, 0]
         //
         verifyException("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.bracket((UnivariateRealFunction) null, 1.0, 1.0, 0.0, 32);
      } catch(IllegalArgumentException e) {
         //
         // function is null
         //
         verifyException("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 842.921435195754;
      doubleArray0[1] = Double.POSITIVE_INFINITY;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 0.5;
      double double0 = (-1180.584448281467);
      doubleArray0[4] = (-1180.584448281467);
      double double1 = (-339.3866);
      doubleArray0[5] = (-339.3866);
      PolynomialFunctionLagrangeForm polynomialFunctionLagrangeForm0 = new PolynomialFunctionLagrangeForm(doubleArray0, doubleArray0);
      double double2 = UnivariateRealSolverUtils.solve((UnivariateRealFunction) polynomialFunctionLagrangeForm0, (-1180.584448281467), 1599.5877655493073, (-1180.584448281467));
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.solve((UnivariateRealFunction) polynomialFunctionLagrangeForm0, 0.5, 0.0, 0.0);
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [0.5, 0]
         //
         verifyException("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 2162.271;
      doubleArray0[1] = 960.0;
      doubleArray0[2] = (-1017.327419699175);
      doubleArray0[3] = 0.0;
      doubleArray0[4] = (-1.0);
      doubleArray0[5] = (-1.0);
      PolynomialFunctionLagrangeForm polynomialFunctionLagrangeForm0 = new PolynomialFunctionLagrangeForm(doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.bracket((UnivariateRealFunction) polynomialFunctionLagrangeForm0, 118.4372, (-1017.327419699175), (-1.0), 0);
      } catch(IllegalArgumentException e) {
         //
         // bad value for maximum iterations number: 0
         //
         verifyException("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 1726.07529;
      doubleArray0[1] = (-4975.8243954);
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 1.0;
      PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
      UnivariateRealFunction univariateRealFunction0 = polynomialFunction0.derivative();
      UnivariateRealFunction univariateRealFunction1 = polynomialFunction0.derivative();
      try { 
        UnivariateRealSolverUtils.bracket(univariateRealFunction0, 1.0, 0.0, 1.0);
      } catch(Exception e) {
         //
         // number of iterations=1, maximum iterations=2,147,483,647, initial=1, lower bound=0, upper bound=1, final a value=0, final b value=1, f(a)=-4,975.824, f(b)=-4,972.824
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 1550.292;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 1379.3620572427;
      PolynomialFunctionLagrangeForm polynomialFunctionLagrangeForm0 = new PolynomialFunctionLagrangeForm(doubleArray0, doubleArray0);
      double double0 = polynomialFunctionLagrangeForm0.value(2835.69611284);
      double[] doubleArray1 = UnivariateRealSolverUtils.bracket((UnivariateRealFunction) polynomialFunctionLagrangeForm0, 0.0, (-2995.408760297), 1379.3620572427, 1476);
      double double1 = UnivariateRealSolverUtils.midpoint(2835.69611284, 1550.292);
      PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray1);
      UnivariateRealFunction univariateRealFunction0 = polynomialFunction0.derivative();
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.solve(univariateRealFunction0, 0.0, (-74.360410498981));
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [0, -74.36]
         //
         verifyException("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 0.5;
      doubleArray0[1] = 1166.0;
      PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.solve((UnivariateRealFunction) polynomialFunction0, 0.5, 1166.0, 0.0);
      } catch(IllegalArgumentException e) {
         //
         // function values at endpoints do not have different signs.  Endpoints: [0.5, 1,166], Values: [583.5, 1,359,556.5]
         //
         verifyException("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.solve((UnivariateRealFunction) null, (-847.526134898878), (-847.526134898878), 0.0);
      } catch(IllegalArgumentException e) {
         //
         // function is null
         //
         verifyException("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      double double0 = UnivariateRealSolverUtils.midpoint((-1027.0375314813898), Double.POSITIVE_INFINITY);
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (-1027.0375314813898);
      doubleArray0[1] = Double.POSITIVE_INFINITY;
      PolynomialFunction[] polynomialFunctionArray0 = new PolynomialFunction[1];
      PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
      polynomialFunctionArray0[0] = polynomialFunction0;
      PolynomialSplineFunction polynomialSplineFunction0 = new PolynomialSplineFunction(doubleArray0, polynomialFunctionArray0);
      PolynomialSplineFunction polynomialSplineFunction1 = polynomialSplineFunction0.polynomialSplineDerivative();
      UnivariateRealFunction univariateRealFunction0 = polynomialSplineFunction1.derivative();
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.bracket(univariateRealFunction0, Double.POSITIVE_INFINITY, (-1.0), (-1027.0375314813898), (-1807));
      } catch(IllegalArgumentException e) {
         //
         // bad value for maximum iterations number: -1,807
         //
         verifyException("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      double double0 = UnivariateRealSolverUtils.midpoint(0.0, 0.0);
      double double1 = UnivariateRealSolverUtils.midpoint(0.0, (-1206.59752));
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (-3926.71248325);
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 915.8354;
      doubleArray0[3] = (-2991.22212);
      doubleArray0[4] = (-1118.72);
      doubleArray0[5] = 0.0;
      doubleArray0[6] = 0.5;
      PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
      String string0 = polynomialFunction0.toString();
      PolynomialFunction polynomialFunction1 = polynomialFunction0.negate();
      PolynomialFunction polynomialFunction2 = polynomialFunction0.subtract(polynomialFunction1);
      double double0 = UnivariateRealSolverUtils.solve((UnivariateRealFunction) polynomialFunction0, (-504.8599079), 0.0);
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.solve((UnivariateRealFunction) polynomialFunction0, 0.0, (-3926.71248325));
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [0, -3,926.712]
         //
         verifyException("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = 139.4737412811;
      PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
      UnivariateRealFunction univariateRealFunction0 = polynomialFunction0.derivative();
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.solve(univariateRealFunction0, 139.4737412811, 139.4737412811);
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [139.474, 139.474]
         //
         verifyException("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      double double0 = 0.5;
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.solve((UnivariateRealFunction) null, 1.0, 0.5);
      } catch(IllegalArgumentException e) {
         //
         // function is null
         //
         verifyException("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      double double0 = UnivariateRealSolverUtils.midpoint(339.679921, 339.679921);
      UnivariateRealFunction univariateRealFunction0 = null;
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.bracket((UnivariateRealFunction) null, 0.0, (-670.0), 339.679921);
      } catch(IllegalArgumentException e) {
         //
         // function is null
         //
         verifyException("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      UnivariateRealFunction univariateRealFunction0 = null;
      double double0 = (-2283.763);
      double double1 = (-2044.581);
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.bracket((UnivariateRealFunction) null, (-2283.763), (-2044.581), (-2044.581));
      } catch(IllegalArgumentException e) {
         //
         // function is null
         //
         verifyException("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      double double0 = UnivariateRealSolverUtils.midpoint(178.5977532876, 178.5977532876);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      double double0 = UnivariateRealSolverUtils.midpoint(0.5, (-1.0));
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.bracket((UnivariateRealFunction) null, (-1.0), (-0.25), (-1.0));
      } catch(IllegalArgumentException e) {
         //
         // function is null
         //
         verifyException("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (-1519.982);
      doubleArray0[1] = (-1519.982);
      PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
      UnivariateRealFunction univariateRealFunction0 = polynomialFunction0.derivative();
      String string0 = polynomialFunction0.toString();
      UnivariateRealFunction univariateRealFunction1 = polynomialFunction0.derivative();
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.bracket(univariateRealFunction1, (-1519.982), (-1519.982), (-1519.982), 1918);
      } catch(IllegalArgumentException e) {
         //
         // invalid bracketing parameters:  lower bound=-1,519.982,  initial=-1,519.982, upper bound=-1,519.982
         //
         verifyException("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      double double0 = (-757.16241);
      doubleArray0[0] = (-757.16241);
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 941.7413219903;
      double double1 = (-1.0);
      doubleArray0[3] = (-1.0);
      doubleArray0[4] = (-1.0);
      double double2 = 0.0;
      doubleArray0[5] = 0.0;
      doubleArray0[6] = (-71.785651);
      doubleArray0[7] = 1.0;
      PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
      String string0 = polynomialFunction0.toString();
      PolynomialFunction polynomialFunction1 = new PolynomialFunction(doubleArray0);
      double double3 = polynomialFunction0.value((-1.0));
      PolynomialFunction polynomialFunction2 = polynomialFunction1.multiply(polynomialFunction0);
      PolynomialFunction polynomialFunction3 = polynomialFunction0.subtract(polynomialFunction1);
      String string1 = polynomialFunction1.toString();
      PolynomialFunction polynomialFunction4 = polynomialFunction0.multiply(polynomialFunction1);
      PolynomialFunction polynomialFunction5 = polynomialFunction0.subtract(polynomialFunction1);
      PolynomialFunction polynomialFunction6 = new PolynomialFunction(doubleArray0);
      double[] doubleArray1 = UnivariateRealSolverUtils.bracket((UnivariateRealFunction) polynomialFunction6, 641.9892837100001, (-71.785651), 941.7413219903);
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.bracket((UnivariateRealFunction) polynomialFunction0, (-71.785651), (-757.16241), 0.0, (-2797));
      } catch(IllegalArgumentException e) {
         //
         // bad value for maximum iterations number: -2,797
         //
         verifyException("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 505.416162;
      doubleArray0[1] = 505.416162;
      PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
      UnivariateRealFunction univariateRealFunction0 = polynomialFunction0.derivative();
      try { 
        UnivariateRealSolverUtils.bracket(univariateRealFunction0, 1.0, 1.0E-6, 708.225);
      } catch(Exception e) {
         //
         // number of iterations=708, maximum iterations=2,147,483,647, initial=1, lower bound=0, upper bound=708.225, final a value=0, final b value=708.225, f(a)=505.416, f(b)=505.416
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      double double0 = 0.0;
      doubleArray0[0] = 0.0;
      PolynomialFunctionLagrangeForm polynomialFunctionLagrangeForm0 = null;
      try {
        polynomialFunctionLagrangeForm0 = new PolynomialFunctionLagrangeForm(doubleArray0, doubleArray0);
      } catch(IllegalArgumentException e) {
         //
         // 2 points are required, got only 1
         //
         verifyException("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      double double0 = UnivariateRealSolverUtils.midpoint(Double.POSITIVE_INFINITY, 0.0);
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = Double.POSITIVE_INFINITY;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = Double.POSITIVE_INFINITY;
      doubleArray0[3] = Double.POSITIVE_INFINITY;
      doubleArray0[4] = Double.POSITIVE_INFINITY;
      doubleArray0[5] = Double.POSITIVE_INFINITY;
      doubleArray0[6] = Double.POSITIVE_INFINITY;
      doubleArray0[7] = Double.POSITIVE_INFINITY;
      doubleArray0[8] = Double.POSITIVE_INFINITY;
      PolynomialFunctionLagrangeForm polynomialFunctionLagrangeForm0 = new PolynomialFunctionLagrangeForm(doubleArray0, doubleArray0);
      PolynomialFunctionLagrangeForm.verifyInterpolationArray(doubleArray0, doubleArray0);
      double double1 = PolynomialFunctionLagrangeForm.evaluate(doubleArray0, doubleArray0, Double.POSITIVE_INFINITY);
      PolynomialFunctionLagrangeForm.verifyInterpolationArray(doubleArray0, doubleArray0);
      double[] doubleArray1 = polynomialFunctionLagrangeForm0.getCoefficients();
      double double2 = PolynomialFunctionLagrangeForm.evaluate(doubleArray0, doubleArray1, (-3790.83004037285));
      double double3 = UnivariateRealSolverUtils.solve((UnivariateRealFunction) polynomialFunctionLagrangeForm0, 0.0, 3818.86795, Double.POSITIVE_INFINITY);
      PolynomialFunctionLagrangeForm.verifyInterpolationArray(doubleArray0, doubleArray0);
      double double4 = UnivariateRealSolverUtils.midpoint(Double.POSITIVE_INFINITY, 5200.5620844);
      double double5 = PolynomialFunctionLagrangeForm.evaluate(doubleArray0, doubleArray0, 0.0);
      double double6 = UnivariateRealSolverUtils.midpoint((-1122.778670343), 3818.86795);
      double double7 = UnivariateRealSolverUtils.solve((UnivariateRealFunction) polynomialFunctionLagrangeForm0, (-1122.778670343), Double.POSITIVE_INFINITY);
      double[] doubleArray2 = UnivariateRealSolverUtils.bracket((UnivariateRealFunction) polynomialFunctionLagrangeForm0, 5200.5620844, 1348.0446398284998, Double.POSITIVE_INFINITY);
      // Undeclared exception!
      try { 
        UnivariateRealSolverUtils.bracket((UnivariateRealFunction) polynomialFunctionLagrangeForm0, 1050.561733735, Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY);
      } catch(IllegalArgumentException e) {
         //
         // invalid bracketing parameters:  lower bound=\u221E,  initial=1,050.562, upper bound=\u221E
         //
         verifyException("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      double double0 = UnivariateRealSolverUtils.midpoint(0.0, 0.0);
      double[] doubleArray0 = null;
      double[] doubleArray1 = new double[4];
      doubleArray1[1] = 0.0;
      double double1 = 1924.359322697;
      doubleArray1[2] = 1924.359322697;
      doubleArray1[3] = 0.0;
      PolynomialFunctionNewtonForm polynomialFunctionNewtonForm0 = null;
      try {
        polynomialFunctionNewtonForm0 = new PolynomialFunctionNewtonForm((double[]) null, doubleArray1);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonForm", e);
      }
  }
}
