/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 29 01:13:31 GMT 2020
 */

package org.apache.commons.lang.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.Writer;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.NoSuchElementException;
import org.apache.commons.lang.text.StrBuilder;
import org.apache.commons.lang.text.StrMatcher;
import org.apache.commons.lang.text.StrTokenizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StrBuilder_ESTest extends StrBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[4];
      charArray0[0] = 'k';
      charArray0[1] = '5';
      charArray0[2] = 'M';
      StrBuilder strBuilder1 = strBuilder0.append(0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      boolean boolean0 = linkedList0.add((String) null);
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Collection) linkedList0, "length must be valid");
      charArray0[3] = 'q';
      StrBuilder strBuilder3 = strBuilder0.insert(0, charArray0);
      Reader reader0 = strBuilder0.asReader();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      int int0 = strBuilder0.indexOf('i', 0);
      int int1 = strBuilder0.lastIndexOf('5', 0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      String string0 = strBuilder0.leftString((-705));
      char char0 = '4';
      // Undeclared exception!
      try { 
        strBuilder0.insert((-705), 36);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -705
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("_TWGv ");
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[5];
      charArray0[0] = 'L';
      charArray0[1] = '+';
      charArray0[2] = '$';
      strBuilder_StrBuilderWriter0.write("org.apache.commons.lang.text.StrBuilder");
      charArray0[3] = 'L';
      charArray0[4] = 'x';
      StrBuilder strBuilder2 = strBuilder0.insert(4, "");
      StrBuilder strBuilder3 = strBuilder2.deleteFirst('!');
      strBuilder_StrBuilderWriter0.write(charArray0);
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      StrMatcher strMatcher2 = StrMatcher.doubleQuoteMatcher();
      int int1 = strBuilder1.lastIndexOf(strMatcher2, (-1));
      boolean boolean0 = strBuilder1.contains(strMatcher0);
      int int2 = strBuilder1.indexOf(strMatcher2, (-1));
      StrBuilder strBuilder4 = new StrBuilder("");
      boolean boolean1 = strBuilder1.equals(strBuilder4);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.vm.version");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[6];
      charArray0[0] = 'Y';
      charArray0[1] = 'Q';
      charArray0[2] = 'P';
      charArray0[3] = ':';
      charArray0[4] = 'H';
      charArray0[5] = '`';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0);
      long long0 = strBuilder_StrBuilderReader0.skip(0L);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder("bk`7qB5 +4^");
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      Reader reader0 = strBuilder2.asReader();
      StrBuilder strBuilder3 = strBuilder0.append(420.9741F);
      StrBuilder strBuilder4 = strBuilder0.append(false);
      Object object0 = new Object();
      StrBuilder strBuilder5 = strBuilder4.deleteAll('\"');
      StrBuilder strBuilder6 = strBuilder3.append(object0);
      StrBuilder strBuilder7 = strBuilder4.appendNewLine();
      String string0 = strBuilder3.leftString(0);
      StrBuilder strBuilder8 = strBuilder6.append((long) 0);
      char[] charArray0 = new char[4];
      charArray0[0] = '\"';
      charArray0[1] = '\"';
      charArray0[2] = '\"';
      charArray0[3] = '0';
      StrBuilder strBuilder9 = strBuilder6.append(charArray0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder5.new StrBuilderReader();
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      int int0 = strBuilder_StrBuilderReader0.read(charBuffer0);
      strBuilder_StrBuilderReader0.close();
      StrBuilder strBuilder10 = strBuilder2.minimizeCapacity();
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("1n/yzi2(r8G2T&|dW");
      StrBuilder strBuilder1 = strBuilder0.insert(4, (long) 4);
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("J3d{RZq]");
      StrBuilder strBuilder2 = strBuilder1.deleteAll((StrMatcher) strMatcher_StringMatcher0);
      StrBuilder strBuilder3 = strBuilder1.append(1L);
      StrBuilder strBuilder4 = strBuilder1.appendFixedWidthPadRight((Object) strBuilder0, 0, 'l');
      StrBuilder strBuilder5 = strBuilder0.replaceFirst('l', 'x');
      String string0 = strBuilder0.getNewLineText();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(0);
      int int0 = strBuilder5.indexOf("G9LH_Wc");
      StrBuilder strBuilder6 = strBuilder1.append('f');
      String string1 = strBuilder6.getNullText();
      char[] charArray0 = new char[7];
      charArray0[0] = 'm';
      charArray0[1] = 'l';
      charArray0[2] = 'l';
      charArray0[3] = 'f';
      charArray0[4] = 'l';
      charArray0[5] = 'l';
      charArray0[6] = 'z';
      strBuilder_StrBuilderWriter0.write(charArray0);
      StrBuilder strBuilder7 = strBuilder1.append(strBuilder5, 4, 4);
      boolean boolean0 = strBuilder4.equals(strBuilder6);
      int int1 = strBuilder3.length();
      StrBuilder strBuilder8 = strBuilder1.insert(4, (double) 1L);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setLength(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight(object0, 661, 'A');
      StrBuilder strBuilder3 = strBuilder0.deleteFirst('-');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer1 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer1.getIgnoredMatcher();
      char[] charArray0 = new char[9];
      charArray0[0] = 'A';
      charArray0[1] = 'A';
      charArray0[2] = '-';
      charArray0[3] = 'A';
      charArray0[4] = '-';
      charArray0[5] = 'c';
      charArray0[6] = '-';
      charArray0[7] = '-';
      charArray0[8] = '-';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder4 = strBuilder3.deleteAll(strMatcher0);
      StrBuilder strBuilder5 = strBuilder3.reverse();
      int int0 = strBuilder4.indexOf('A');
      // Undeclared exception!
      try { 
        strBuilder5.getChars((-1), 0, charArray0, 661);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("!7k6eJ9}");
      StrBuilder strBuilder1 = new StrBuilder(5120);
      char[] charArray0 = new char[1];
      charArray0[0] = '@';
      char[] charArray1 = strBuilder1.getChars(charArray0);
      boolean boolean0 = strBuilder0.contains('{');
      StrBuilder strBuilder2 = new StrBuilder("!7k6eJ9}");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
      int int0 = (-1);
      char[] charArray2 = new char[6];
      charArray2[0] = '{';
      charArray2[1] = '@';
      charArray2[2] = '{';
      charArray2[3] = '{';
      charArray2[4] = '@';
      charArray2[5] = '{';
      // Undeclared exception!
      try { 
        strBuilder1.insert((-1), charArray2);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.vm.version");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      CharBuffer charBuffer0 = CharBuffer.allocate(288);
      int int0 = strBuilder_StrBuilderReader0.read(charBuffer0);
      char[] charArray0 = new char[6];
      charArray0[0] = 'Y';
      charArray0[1] = 'Q';
      charArray0[2] = 'P';
      charArray0[3] = ':';
      charArray0[4] = 'H';
      charArray0[5] = '`';
      int int1 = strBuilder_StrBuilderReader0.read(charArray0);
      long long0 = strBuilder_StrBuilderReader0.skip(0L);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      int int0 = (-2522);
      StrBuilder strBuilder0 = new StrBuilder((-2522));
      char char0 = ')';
      int int1 = strBuilder0.indexOf(')', (-954));
      // Undeclared exception!
      try { 
        strBuilder0.substring((-1), (-2522));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-356));
      StrBuilder strBuilder1 = strBuilder0.clear();
      int int0 = strBuilder0.lastIndexOf((StrMatcher) null);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      char[] charArray0 = new char[6];
      charArray0[0] = '[';
      charArray0[1] = 'Z';
      charArray0[2] = 'h';
      charArray0[3] = 'L';
      charArray0[4] = 'p';
      charArray0[5] = '4';
      // Undeclared exception!
      try { 
        strBuilder1.insert((-356), charArray0, (-356), 2264);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -356
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      int int0 = (-1893);
      StrBuilder strBuilder0 = new StrBuilder((-1893));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterChar('\'');
      Writer writer0 = strBuilder0.asWriter();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      String string0 = "java.specification.name";
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher((char[]) null);
      StrMatcher strMatcher2 = StrMatcher.stringMatcher("java.specification.name");
      int int1 = strBuilder0.indexOf(strMatcher0, (-1893));
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      StrBuilder strBuilder1 = strBuilder0.append(object0);
      StrBuilder strBuilder2 = strBuilder0.deleteFirst("S 5<BOB~-Ne .");
      char[] charArray0 = new char[3];
      charArray0[0] = '\'';
      StrBuilder strBuilder3 = strBuilder0.append((char[]) null);
      charArray0[1] = '\'';
      charArray0[2] = '\'';
      StrTokenizer strTokenizer1 = strBuilder_StrBuilderTokenizer0.reset(charArray0);
      int int2 = 772;
      StrBuilder strBuilder4 = new StrBuilder(772);
      // Undeclared exception!
      try { 
        strBuilder2.insert((-1), (Object) strBuilder4);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder0.capacity();
      // Undeclared exception!
      try { 
        CharBuffer.allocate((-4680));
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Object[]) null, "length must be valid");
      StrBuilder strBuilder2 = strBuilder1.append(strBuilder0);
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('_');
      int int0 = strBuilder2.indexOf((StrMatcher) strMatcher_CharMatcher0, 32);
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrBuilder strBuilder3 = strBuilder1.deleteFirst(strMatcher0);
      int int1 = strBuilder0.lastIndexOf(strMatcher0, 32);
      StrBuilder strBuilder4 = strBuilder0.append((Object) "length must be valid");
      char[] charArray0 = new char[2];
      char[] charArray1 = strBuilder1.getChars(charArray0);
      // Undeclared exception!
      try { 
        strBuilder0.replace((-1350), (-1350), "length must be valid");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1350
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder1 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder1.equalsIgnoreCase((StrBuilder) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceAll((StrMatcher) strMatcher_NoMatcher0, "");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(115);
      char[] charArray0 = new char[7];
      charArray0[0] = ')';
      charArray0[1] = ')';
      charArray0[2] = ')';
      charArray0[3] = ')';
      charArray0[4] = ')';
      charArray0[5] = ')';
      charArray0[6] = ')';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 1917, 1285);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("org.apache.commons.lang.ArrayUtils");
      StrBuilder strBuilder2 = strBuilder0.deleteFirst(")1;!sJ(n.CmR;O{Uo");
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadRight((Object) strBuilder1, 915, '*');
      StrBuilder strBuilder4 = strBuilder0.deleteFirst("");
      StrTokenizer strTokenizer0 = strBuilder4.asTokenizer();
      String string0 = strBuilder0.rightString(915);
      StrBuilder strBuilder5 = strBuilder4.setNewLineText("");
      StrBuilder strBuilder6 = strBuilder1.replace(0, 0, "org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid length: ");
      char[] charArray0 = new char[7];
      charArray0[0] = '3';
      charArray0[1] = 'a';
      charArray0[2] = '\"';
      charArray0[3] = 'S';
      charArray0[4] = '.';
      charArray0[5] = '\"';
      charArray0[6] = 'u';
      // Undeclared exception!
      try { 
        strBuilder0.getChars((-161), 1, charArray0, (-161));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -161
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(117);
      String string0 = strBuilder0.leftString(117);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[6];
      charArray0[0] = 'B';
      charArray0[1] = 'W';
      charArray0[2] = '8';
      charArray0[3] = '>';
      charArray0[4] = 'C';
      charArray0[5] = '6';
      strBuilder_StrBuilderWriter0.write(charArray0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      int int0 = (-897);
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((Object) "", (-897), 'x');
      Writer writer0 = strBuilder2.asWriter();
      int int1 = strBuilder1.size();
      strBuilder0.validateIndex(0);
      int int2 = 3660;
      StrBuilder strBuilder3 = strBuilder2.append(3660);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      char[] charArray0 = new char[6];
      charArray0[0] = 'x';
      charArray0[1] = 'x';
      charArray0[2] = 'x';
      charArray0[3] = 'x';
      charArray0[4] = 'x';
      charArray0[5] = 'x';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 517, 517);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 517
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = "qd]";
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) "qd]", 0, 'Q');
      char char0 = '_';
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight((Object) "qd]", 31, '_');
      StrBuilder strBuilder3 = strBuilder2.append((-1935.0403F));
      StrBuilder strBuilder4 = strBuilder2.append(false);
      StrBuilder strBuilder5 = strBuilder4.replaceAll("qd]", "qd]");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder4.new StrBuilderWriter();
      int int1 = 785;
      StrBuilder strBuilder6 = strBuilder4.setNullText((String) null);
      StrBuilder strBuilder7 = strBuilder0.deleteAll('_');
      StrBuilder strBuilder8 = strBuilder4.append('_');
      StrBuilder strBuilder9 = strBuilder8.append(false);
      StrBuilder strBuilder10 = strBuilder8.setNewLineText("qd]");
      // Undeclared exception!
      try { 
        strBuilder9.insert(114, (-2152.0));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 114
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      strBuilder0.validateIndex(0);
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      int int0 = strBuilder0.lastIndexOf((String) null, (-814));
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      int int1 = (-1802);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1802), (float) 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1802
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(958);
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      StrBuilder strBuilder2 = strBuilder1.clear();
      int int0 = strBuilder1.lastIndexOf((String) null);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      boolean boolean0 = strBuilder0.isEmpty();
      int int0 = 318;
      StrBuilder strBuilder1 = strBuilder0.append((String) null, 0, 318);
      StrBuilder strBuilder2 = new StrBuilder();
      String string0 = strBuilder2.rightString(0);
      int int1 = 1033;
      int int2 = (-2309);
      // Undeclared exception!
      try { 
        strBuilder2.setCharAt(0, '2');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("end < start");
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder1 = strBuilder0.deleteCharAt(0);
      StrBuilder strBuilder2 = strBuilder1.deleteCharAt(0);
      StrBuilder strBuilder3 = strBuilder2.setNullText("end < start");
      StrBuilder strBuilder4 = strBuilder3.trim();
      StrBuilder strBuilder5 = strBuilder0.setCharAt(0, '0');
      boolean boolean0 = strBuilder0.equals((Object) "end < start");
      // Undeclared exception!
      try { 
        strBuilder5.delete(2331, 20);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrBuilder strBuilder2 = strBuilder1.setLength(116);
      int int0 = strBuilder0.validateRange(116, 443);
      StrBuilder strBuilder3 = strBuilder2.insert(3, 0.0F);
      char[] charArray0 = strBuilder0.toCharArray();
      StrBuilder strBuilder4 = strBuilder0.append((StringBuffer) null, 117, 117);
      int int1 = strBuilder3.indexOf('1', 117);
      StrBuilder strBuilder5 = strBuilder3.append((long) 116);
      int int2 = strBuilder5.lastIndexOf('1');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      boolean boolean0 = true;
      StrBuilder strBuilder1 = strBuilder0.insert(0, true);
      int int1 = strBuilder1.lastIndexOf("length must be valid", 0);
      // Undeclared exception!
      try { 
        strBuilder0.substring(3149, 3149);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      StrMatcher strMatcher1 = StrMatcher.charMatcher('2');
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher("5");
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight((Object) "", (-964), 'o');
      StrBuilder strBuilder3 = strBuilder0.insert(0, (Object) strMatcher1);
      StrBuilder strBuilder4 = strBuilder1.appendFixedWidthPadRight(0, 0, 'Z');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      StrBuilder strBuilder5 = strBuilder1.deleteFirst(strMatcher2);
      boolean boolean0 = strBuilder1.equals((Object) strBuilder3);
      Object[] objectArray0 = new Object[4];
      Object object0 = strBuilder_StrBuilderTokenizer0.next();
      objectArray0[0] = (Object) "org.apache.commons.lang.text.StrMatcher$CharMatcher@0000000003";
      objectArray0[1] = (Object) "5";
      char[] charArray0 = new char[7];
      charArray0[0] = '2';
      charArray0[1] = 'o';
      charArray0[2] = '2';
      charArray0[3] = 'Z';
      charArray0[4] = 'o';
      charArray0[5] = 'o';
      charArray0[6] = 'Z';
      StrMatcher strMatcher3 = StrMatcher.charSetMatcher(charArray0);
      objectArray0[2] = (Object) strMatcher0;
      objectArray0[3] = (Object) "5";
      StrBuilder strBuilder6 = strBuilder3.appendWithSeparators(objectArray0, "");
      boolean boolean1 = strBuilder6.isEmpty();
      StrBuilder strBuilder7 = strBuilder0.deleteFirst('2');
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = 0;
      char[] charArray0 = new char[8];
      charArray0[0] = 'Z';
      char char0 = 'L';
      charArray0[1] = 'L';
      char char1 = '7';
      charArray0[2] = '7';
      charArray0[3] = 'I';
      charArray0[4] = 'f';
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      int int1 = strBuilder0.indexOf(strMatcher0, 0);
      charArray0[5] = '%';
      charArray0[6] = 'l';
      charArray0[7] = '?';
      strBuilder0.getChars(0, 0, charArray0, 0);
      int int2 = 991;
      // Undeclared exception!
      try { 
        strBuilder0.charAt(991);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 991
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4apR[");
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(4);
      StrBuilder strBuilder2 = strBuilder1.appendPadding(4, 'E');
      StrBuilder strBuilder3 = strBuilder0.append((Object) "4apR[");
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      int int0 = strBuilder3.indexOf(strMatcher0, 4);
      StringBuffer stringBuffer0 = new StringBuffer("java.vm.specification.version");
      StrBuilder strBuilder4 = strBuilder3.append(stringBuffer0);
      StrBuilder strBuilder5 = strBuilder0.append((-531.57));
      char[] charArray0 = new char[7];
      charArray0[0] = 'E';
      charArray0[1] = 'E';
      charArray0[2] = 'N';
      charArray0[3] = 'E';
      charArray0[4] = 'E';
      charArray0[5] = 'E';
      charArray0[6] = 'E';
      StrBuilder strBuilder6 = strBuilder5.append(charArray0);
      boolean boolean0 = strBuilder0.startsWith("4apR[");
      StrBuilder strBuilder7 = strBuilder0.deleteFirst('R');
      StrBuilder strBuilder8 = strBuilder7.append(4);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder4.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder strBuilder9 = strBuilder8.appendFixedWidthPadLeft(object0, (-3073), 'R');
      StrMatcher strMatcher1 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      StrBuilder strBuilder10 = strBuilder9.deleteFirst(strMatcher1);
      StrBuilder strBuilder11 = strBuilder9.replaceAll("v=", "+8jClg{U!u:[)R1i7");
      StrTokenizer strTokenizer0 = strBuilder7.asTokenizer();
      StrBuilder strBuilder12 = strBuilder4.minimizeCapacity();
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("StrTokenizer");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.insert(0, 3043.32F);
      String string1 = strBuilder0.substring(0, 395);
      char[] charArray0 = new char[3];
      char char0 = 'H';
      charArray0[0] = 'H';
      char char1 = 'I';
      charArray0[1] = 'I';
      charArray0[2] = '7';
      // Undeclared exception!
      try { 
        strBuilder0.insert(0, charArray0, 395, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: 395
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("$4X/}Z#R$q90S");
      StrBuilder strBuilder1 = new StrBuilder();
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      String string0 = "41s%u]YGlA:w";
      StringBuffer stringBuffer0 = new StringBuffer("41s%u]YGlA:w");
      StringBuffer stringBuffer1 = stringBuffer0.append(521);
      // Undeclared exception!
      try { 
        strBuilder1.append(stringBuffer0, (-1205), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(57);
      StrMatcher strMatcher0 = null;
      boolean boolean0 = strBuilder0.contains((StrMatcher) null);
      char char0 = 'W';
      boolean boolean1 = strBuilder0.contains('W');
      StrBuilder strBuilder1 = strBuilder0.replaceFirst((StrMatcher) null, "gd*KaP32B");
      float float0 = (-2373.85F);
      int int0 = 0;
      StringBuffer stringBuffer0 = new StringBuffer(0);
      // Undeclared exception!
      try { 
        stringBuffer0.insert(57, (CharSequence) "gd*KaP32B", (-618), 57);
      } catch(IndexOutOfBoundsException e) {
         //
         // dstOffset 57
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrBuilder strBuilder2 = strBuilder1.appendPadding(1648, 'U');
      char[] charArray0 = new char[1];
      charArray0[0] = 'U';
      StrBuilder strBuilder3 = strBuilder2.insert(0, charArray0);
      StrBuilder strBuilder4 = strBuilder1.insert(0, "");
      int int0 = strBuilder0.validateRange(0, 0);
      StrBuilder strBuilder5 = strBuilder4.append(false);
      StrBuilder strBuilder6 = strBuilder4.setNullText("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrBuilder strBuilder7 = strBuilder6.insert(0, (Object) strBuilder0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder8 = strBuilder7.appendWithSeparators((Collection) linkedList0, "org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrBuilder strBuilder9 = strBuilder3.replaceAll("", "");
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      int int1 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_TrimMatcher0);
      StrBuilder strBuilder10 = strBuilder9.insert(0, (Object) strMatcher_TrimMatcher0);
      char[] charArray1 = strBuilder9.toCharArray();
      StrBuilder strBuilder11 = strBuilder9.insert(1648, false);
      // Undeclared exception!
      try { 
        strBuilder11.append(strBuilder3, 0, (-2498));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 1017;
      StrBuilder strBuilder1 = strBuilder0.append(1017);
      String string0 = "";
      StrBuilder strBuilder2 = strBuilder0.append("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(1017);
      StrMatcher strMatcher0 = null;
      int int1 = strBuilder1.lastIndexOf((StrMatcher) null);
      int int2 = strBuilder1.size();
      // Undeclared exception!
      try { 
        strBuilder1.append(strBuilder0, 4, 1017);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[3];
      charArray0[0] = '2';
      charArray0[1] = '\'';
      charArray0[2] = ';';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StrBuilder strBuilder2 = strBuilder1.append(0.0F);
      // Undeclared exception!
      try { 
        strBuilder2.insert(336, (long) 336);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 336
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(0, 0, '/');
      StrBuilder strBuilder2 = strBuilder0.appendNull();
      StrBuilder strBuilder3 = strBuilder2.appendNull();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      StrBuilder strBuilder4 = strBuilder0.appendPadding(1569, 'N');
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("GDMc");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('x');
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setQuoteMatcher(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "GDMc");
      StrBuilder strBuilder2 = strBuilder0.reverse();
      Reader reader0 = strBuilder2.asReader();
      StrBuilder strBuilder3 = strBuilder2.deleteAll("GDMc");
      boolean boolean0 = strBuilder2.contains("GDMc");
      int int0 = 0;
      String string0 = strBuilder1.rightString(0);
      boolean boolean1 = strBuilder1.isEmpty();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      char[] charArray0 = new char[3];
      charArray0[0] = 'x';
      strBuilder_StrBuilderWriter0.write("ty|w0*bRY*y^GxO@B", 0, 0);
      charArray0[1] = 'x';
      charArray0[2] = 'x';
      int int1 = 39;
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 39, 48);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 48
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.reverse();
      boolean boolean0 = strBuilder1.contains("user.home");
      StrBuilder strBuilder2 = new StrBuilder(0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(3345L);
      strBuilder_StrBuilderReader0.reset();
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      int int0 = (-2135);
      char[] charArray0 = new char[4];
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) null;
      objectArray0[2] = (Object) strBuilder0;
      objectArray0[3] = (Object) null;
      objectArray0[4] = (Object) null;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, (String) null);
      boolean boolean0 = strBuilder0.contains((StrMatcher) null);
      charArray0[0] = '7';
      charArray0[1] = ';';
      // Undeclared exception!
      try { 
        strBuilder0.replace((StrMatcher) null, (String) null, (-2135), (-2135), (-3179));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2135
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3395);
      int int0 = 1534;
      char char0 = 'M';
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(1534, 'M');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1534
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("nS");
      StrBuilder strBuilder1 = strBuilder0.setCharAt(0, 'B');
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      String string0 = "Z}fq:-|d6NBSr]=S";
      StrBuilder strBuilder0 = new StrBuilder("Z}fq:-|d6NBSr]=S");
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt((-721));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -721
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[0];
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft((-4753), (-3353), 'L');
      int int0 = (-316);
      // Undeclared exception!
      try { 
        strBuilder0.validateRange(811, (-316));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      char[] charArray0 = new char[3];
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      charArray0[0] = 'p';
      char char0 = '.';
      charArray0[1] = '.';
      StrBuilder strBuilder1 = strBuilder0.append('p');
      charArray0[2] = 'v';
      StrBuilder strBuilder2 = strBuilder0.append(charArray0, 0, 0);
      String string1 = "ke";
      StrBuilder strBuilder3 = strBuilder2.setNullText("ke");
      StrBuilder strBuilder4 = strBuilder2.appendPadding(0, '\"');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      int int0 = strBuilder1.lastIndexOf(strMatcher0, 0);
      StrBuilder strBuilder5 = strBuilder0.appendWithSeparators((Iterator) strBuilder_StrBuilderTokenizer0, "");
      // Undeclared exception!
      try { 
        strBuilder5.toCharArray((-1906), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1906
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-250));
      Object[] objectArray0 = new Object[0];
      StrBuilder strBuilder1 = strBuilder0.append('T');
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators(objectArray0, "_1%(6re=1x`");
      StrBuilder strBuilder3 = strBuilder2.deleteAll("_1%(6re=1x`");
      int int0 = strBuilder2.length();
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.append('<');
      char[] charArray0 = new char[0];
      StrBuilder strBuilder2 = strBuilder1.insert(0, charArray0);
      boolean boolean0 = strBuilder0.endsWith("");
      StrBuilder strBuilder3 = strBuilder1.insert(0, 3169);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      String string0 = "end < start";
      StrBuilder strBuilder0 = new StrBuilder("end < start");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      boolean boolean0 = strBuilder0.startsWith("end < start");
      int int0 = 2;
      long long0 = strBuilder_StrBuilderReader0.skip((-1153L));
      StrBuilder strBuilder1 = new StrBuilder(2);
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, 2, 2);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      char[] charArray0 = new char[1];
      charArray0[0] = 'H';
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance(charArray0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "");
      int int0 = strBuilder0.lastIndexOf("");
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[7];
      charArray0[0] = '~';
      charArray0[1] = '.';
      charArray0[2] = '>';
      charArray0[3] = 'c';
      charArray0[4] = 'A';
      charArray0[5] = 'N';
      charArray0[6] = 'x';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      // Undeclared exception!
      try { 
        strBuilder0.substring(Integer.MAX_VALUE, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("` SF6}p8c<V)C4Ok!:T");
      StrBuilder strBuilder2 = new StrBuilder((String) null);
      int int0 = (-2717);
      String string0 = "AIDwTX0X";
      int int1 = 0;
      // Undeclared exception!
      try { 
        strBuilder2.append("AIDwTX0X", 0, (-1332));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder0;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "");
      int int0 = 318;
      StrBuilder strBuilder2 = strBuilder1.minimizeCapacity();
      // Undeclared exception!
      try { 
        strBuilder2.setCharAt((-1850), '%');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1850
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder("bk`7qB5 +4^");
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      StrBuilder strBuilder3 = strBuilder0.append(420.9741F);
      StrBuilder strBuilder4 = strBuilder0.append(false);
      Object object0 = new Object();
      StrBuilder strBuilder5 = strBuilder4.deleteAll('5');
      StrBuilder strBuilder6 = strBuilder3.append(object0);
      StrBuilder strBuilder7 = strBuilder4.appendNewLine();
      StrBuilder strBuilder8 = strBuilder6.deleteAll((StrMatcher) null);
      String string0 = strBuilder3.leftString(0);
      StrBuilder strBuilder9 = strBuilder6.append((long) 0);
      char[] charArray0 = new char[4];
      charArray0[0] = '5';
      charArray0[1] = '5';
      charArray0[2] = '5';
      StrBuilder strBuilder10 = strBuilder6.append(charArray0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder5.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
      StrBuilder strBuilder11 = strBuilder2.minimizeCapacity();
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("JC");
      StrBuilder strBuilder1 = strBuilder0.replaceAll("D", "JC");
      int int0 = strBuilder0.lastIndexOf('F', 1031);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(1031);
      StrBuilder strBuilder2 = strBuilder1.ensureCapacity(0);
      Writer writer0 = strBuilder0.asWriter();
      int int1 = strBuilder0.indexOf(" >BWNXD", 9);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.lastIndexOf('7', 1499);
      // Undeclared exception!
      try { 
        strBuilder0.substring(1499);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      int int0 = 1;
      StrBuilder strBuilder0 = new StrBuilder(1);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Object[] objectArray0 = linkedList0.toArray();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "org.apache.commons.lang.text.StrBuilder");
      char[] charArray0 = new char[1];
      charArray0[0] = '0';
      char[] charArray1 = strBuilder0.getChars(charArray0);
      String string0 = strBuilder0.getNullText();
      StrBuilder strBuilder2 = strBuilder1.replaceAll('?', '^');
      StringBuffer stringBuffer0 = null;
      try {
        stringBuffer0 = new StringBuffer((CharSequence) null);
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder1 = strBuilder0.append(0.0);
      char[] charArray0 = new char[5];
      charArray0[0] = 'L';
      charArray0[1] = '!';
      charArray0[2] = '|';
      charArray0[3] = '[';
      charArray0[4] = 't';
      StrBuilder strBuilder2 = strBuilder1.insert(0, charArray0);
      char char0 = strBuilder0.charAt(0);
      char[] charArray1 = strBuilder1.toCharArray();
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(4);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Object[]) null, "_,xx%_'dfNoYZ@Wxa>g");
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.deleteAll('[');
      StrBuilder strBuilder2 = strBuilder0.insert(0, (float) 0);
      StrBuilder strBuilder3 = strBuilder1.replaceFirst("<Ixo#;x'`", "<Ixo#;x'`");
      StrBuilder strBuilder4 = strBuilder3.append(strBuilder0);
      char[] charArray0 = new char[9];
      charArray0[0] = '[';
      charArray0[1] = '[';
      charArray0[2] = '[';
      charArray0[3] = '[';
      charArray0[4] = '[';
      charArray0[5] = '[';
      charArray0[6] = '[';
      StrBuilder strBuilder5 = strBuilder3.clear();
      StrBuilder strBuilder6 = strBuilder1.append(strBuilder0);
      charArray0[7] = '[';
      charArray0[8] = '[';
      int int0 = 4;
      StrBuilder strBuilder7 = strBuilder4.append(charArray0, 0, 4);
      String string0 = strBuilder0.leftString(0);
      int int1 = (-2463);
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray((-2463), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2463
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.endorsed.dirs");
      StrMatcher strMatcher0 = StrMatcher.charMatcher('');
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      StringBuffer stringBuffer0 = new StringBuffer(3);
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 3, 3);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(" k;Ut|U)u0:Dd88:");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder1 = strBuilder0.setNewLineText(" k;Ut|U)u0:Dd88:");
      boolean boolean0 = linkedList0.add("");
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Collection) linkedList0, "end < start");
      StrBuilder strBuilder3 = strBuilder2.insert(0, "'\"");
      StrBuilder strBuilder4 = strBuilder3.append('g');
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      StrBuilder strBuilder5 = strBuilder4.replaceAll(strMatcher0, "");
      StrBuilder strBuilder6 = new StrBuilder("");
      LinkedList<StrBuilder> linkedList1 = new LinkedList<StrBuilder>();
      boolean boolean1 = linkedList1.add(strBuilder6);
      boolean boolean2 = linkedList0.removeAll(linkedList1);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder6.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(114);
      int int0 = strBuilder_StrBuilderReader0.read();
      StrBuilder strBuilder7 = strBuilder2.deleteFirst('I');
      int int1 = strBuilder_StrBuilderReader0.read();
      int int2 = strBuilder_StrBuilderReader0.read();
      StrBuilder strBuilder8 = strBuilder0.setNewLineText("");
      int int3 = strBuilder2.indexOf("Invalid startIndex: ");
      StrBuilder strBuilder9 = strBuilder2.minimizeCapacity();
      StrBuilder strBuilder10 = strBuilder1.deleteFirst("Invalid startIndex: ");
      StrBuilder strBuilder11 = strBuilder8.deleteFirst(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setNullText("xRR=_%/3t3^LNE/_");
      Writer writer0 = strBuilder1.asWriter();
      boolean boolean0 = strBuilder0.contains("xRR=_%/3t3^LNE/_");
      char char0 = 'K';
      int int0 = strBuilder0.indexOf('K');
      String string0 = strBuilder0.getNullText();
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      char char1 = '!';
      StrMatcher strMatcher0 = StrMatcher.charMatcher('!');
      int int1 = strBuilder0.indexOf((StrMatcher) strMatcher_NoMatcher0);
      int int2 = 5;
      char[] charArray0 = new char[9];
      charArray0[0] = 'K';
      charArray0[1] = 'K';
      charArray0[2] = 'K';
      charArray0[3] = 'K';
      StrBuilder strBuilder2 = strBuilder1.deleteFirst('K');
      // Undeclared exception!
      try { 
        strBuilder2.append("xRR=_%/3t3^LNE/_", 1537, 1537);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceAll('#', '#');
      StrBuilder strBuilder2 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder3 = strBuilder1.append(strBuilder0, 0, 0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      char[] charArray0 = new char[1];
      charArray0[0] = '#';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 0, (-3875));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(4);
      String string0 = "<1\\us#1yO@6#Y?Z2yM";
      boolean boolean0 = strBuilder0.contains(string0);
      StringBuffer stringBuffer0 = null;
      try {
        stringBuffer0 = new StringBuffer((-1413));
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "]T#K_SX('>";
      StrBuilder strBuilder1 = strBuilder0.replaceAll("]T#K_SX('>", "]T#K_SX('>");
      StrBuilder strBuilder2 = strBuilder0.append((StringBuffer) null);
      StrBuilder strBuilder3 = strBuilder1.append((StringBuffer) null, (-772), (-772));
      // Undeclared exception!
      try { 
        strBuilder3.replace(0, (-772), "1.3");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      int int0 = 32;
      StrBuilder strBuilder0 = new StrBuilder(32);
      int int1 = 4;
      // Undeclared exception!
      try { 
        strBuilder0.insert(4, (double) 32);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 4
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("(brcnway*N4HKE");
      StrBuilder strBuilder1 = strBuilder0.append(1609);
      int int0 = strBuilder1.validateRange(0, 1);
      StrBuilder strBuilder2 = strBuilder0.setNullText("(brcnway*N4HKE");
      char[] charArray0 = new char[6];
      charArray0[0] = 'S';
      charArray0[1] = 'y';
      charArray0[2] = 'u';
      charArray0[3] = '&';
      charArray0[4] = 'a';
      charArray0[5] = '!';
      StrBuilder strBuilder3 = strBuilder2.append(charArray0);
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "(brcnway*N4HKE");
      // Undeclared exception!
      try { 
        strBuilder1.append(stringBuffer0, 1, (-748));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2140));
      StrBuilder strBuilder1 = strBuilder0.setNullText("");
      // Undeclared exception!
      try { 
        strBuilder0.insert((-334), (double) (-2140));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -334
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.clear();
      char char0 = 'G';
      int int0 = strBuilder0.lastIndexOf('G');
      StrBuilder strBuilder2 = new StrBuilder((-1));
      StrBuilder strBuilder3 = strBuilder2.append(false);
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder4 = strBuilder1.append(stringBuffer0);
      // Undeclared exception!
      try { 
        strBuilder2.insert(3621, "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3621
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.endsWith("add() is unsupported");
      String string0 = strBuilder0.rightString(34);
      StrBuilder strBuilder1 = new StrBuilder(4);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      char[] charArray0 = new char[2];
      charArray0[0] = 'D';
      charArray0[1] = 'T';
      strBuilder_StrBuilderWriter0.write(charArray0);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("5S7-BjX*D'%'@^9?,t", 3640, 4);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      // Undeclared exception!
      try { 
        strBuilder0.append("", (-498), (-498));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      String string0 = strBuilder0.toString();
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(4);
      StrBuilder strBuilder1 = strBuilder0.append("");
      // Undeclared exception!
      try { 
        strBuilder0.delete(4, 4);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      int int0 = 189;
      StrBuilder strBuilder0 = new StrBuilder(189);
      String string0 = "9q~{_:B?yRtfNL~bi/:";
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.replaceAll(strMatcher0, "Invalid length: ");
      // Undeclared exception!
      try { 
        strBuilder2.append(strBuilder0, 189, 189);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-219));
      StrBuilder strBuilder1 = strBuilder0.appendPadding((-219), '7');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Iterator) strBuilder_StrBuilderTokenizer0, (String) null);
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      int int0 = strBuilder1.lastIndexOf(strMatcher0);
      StringBuffer stringBuffer0 = null;
      try {
        stringBuffer0 = new StringBuffer((String) null);
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((-1.0F));
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, 4193, 1821);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(4);
      String string0 = strBuilder0.midString(840, 3037);
      StrBuilder strBuilder1 = strBuilder0.append((StrBuilder) null, 840, Integer.MAX_VALUE);
      StrBuilder strBuilder2 = strBuilder0.append(281);
      Reader reader0 = strBuilder0.asReader();
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      int int0 = (-1244);
      strBuilder_StrBuilderReader0.mark((-1244));
      // Undeclared exception!
      try { 
        strBuilder1.charAt(3459);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3459
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      int int0 = 1789;
      StrBuilder strBuilder0 = new StrBuilder(1789);
      char[] charArray0 = new char[2];
      charArray0[0] = '7';
      char char0 = 'F';
      StringBuffer stringBuffer0 = new StringBuffer();
      StringBuffer stringBuffer1 = stringBuffer0.insert(0, "");
      stringBuffer0.ensureCapacity(0);
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 0, 4020);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2522));
      StringBuffer stringBuffer0 = new StringBuffer();
      StringBuffer stringBuffer1 = new StringBuffer(stringBuffer0);
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer1, 0, 0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("WYQ,3+");
      StrBuilder strBuilder1 = strBuilder0.append((Object) "WYQ,3+");
      // Undeclared exception!
      try { 
        strBuilder1.insert((-566), '\\');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -566
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("}");
      StrBuilder strBuilder1 = new StrBuilder();
      boolean boolean0 = strBuilder0.equals(strBuilder1);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      char[] charArray0 = new char[4];
      charArray0[0] = 'x';
      charArray0[1] = '_';
      charArray0[2] = '0';
      charArray0[3] = 'D';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder2 = strBuilder0.replaceAll(strMatcher0, "}");
      int int0 = strBuilder0.indexOf("}");
      StrBuilder strBuilder3 = strBuilder0.append((double) 0);
      StrBuilder strBuilder4 = strBuilder1.replaceAll("java.library.path", "}");
      int int1 = 97;
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.previous();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      String string0 = "!.wSbj.ITW";
      StrBuilder strBuilder0 = new StrBuilder("!.wSbj.ITW");
      char[] charArray0 = new char[3];
      charArray0[0] = 'j';
      charArray0[1] = 'v';
      charArray0[2] = 'G';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 2719, 2719);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 2719
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) null, "");
      StrBuilder strBuilder2 = strBuilder0.setLength(0);
      StringBuffer stringBuffer0 = new StringBuffer(0);
      StrBuilder strBuilder3 = strBuilder2.append(stringBuffer0);
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("");
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("");
      int int0 = strBuilder3.lastIndexOf(strMatcher0, (-2957));
      StrBuilder strBuilder4 = strBuilder0.append(false);
      StrBuilder strBuilder5 = strBuilder1.delete(0, 0);
      StrBuilder strBuilder6 = strBuilder2.replaceAll("java.vm.specification.name", "java.vm.specification.name");
      int int1 = strBuilder4.hashCode();
      // Undeclared exception!
      try { 
        strBuilder3.insert((-2957), "java.vm.specification.name");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2957
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-531));
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('');
      StrBuilder strBuilder1 = strBuilder0.deleteAll((StrMatcher) strMatcher_CharMatcher0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      StrBuilder strBuilder2 = strBuilder0.deleteFirst('a');
      StrBuilder strBuilder3 = strBuilder1.append('');
      int int0 = strBuilder0.hashCode();
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-435);
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity((-435));
      boolean boolean0 = strBuilder0.startsWith("java.awt.fonts");
      char[] charArray0 = new char[2];
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      int int1 = 117;
      int int2 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_TrimMatcher0, 117);
      charArray0[0] = 'M';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("java.awt.fonts");
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      boolean boolean1 = strBuilder0.contains((StrMatcher) strMatcher_CharSetMatcher0);
      charArray0[1] = ']';
      char[] charArray1 = new char[9];
      charArray1[0] = 'M';
      charArray1[1] = 'M';
      charArray1[2] = 'M';
      charArray1[3] = ']';
      charArray1[4] = ']';
      charArray1[5] = 'v';
      charArray1[6] = 'M';
      charArray1[7] = ']';
      charArray1[8] = 'M';
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher(charArray1);
      // Undeclared exception!
      try { 
        strBuilder0.getChars(2, (-3939), charArray0, (-3939));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3939
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(57);
      char char0 = 'I';
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("Mvs8#,4\u0003zJ>AwMu");
      int int0 = (-888);
      // Undeclared exception!
      try { 
        strBuilder1.charAt((-888));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -888
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity((-435));
      char[] charArray0 = new char[2];
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_TrimMatcher0, 117);
      charArray0[0] = 'M';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("");
      boolean boolean0 = strBuilder0.contains((StrMatcher) strMatcher_CharSetMatcher0);
      charArray0[1] = ']';
      char[] charArray1 = new char[9];
      charArray1[0] = 'M';
      charArray1[1] = 'M';
      charArray1[2] = 'M';
      charArray1[3] = ']';
      charArray1[4] = ']';
      charArray1[5] = 'v';
      charArray1[6] = 'M';
      charArray1[7] = ']';
      charArray1[8] = 'M';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray1);
      // Undeclared exception!
      try { 
        strBuilder0.getChars(2, (-3939), charArray0, (-3939));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3939
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      int int0 = (-398);
      StrBuilder strBuilder0 = new StrBuilder((-398));
      // Undeclared exception!
      try { 
        strBuilder0.charAt((-2814));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2814
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      int int0 = 44;
      StrBuilder strBuilder0 = new StrBuilder(44);
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      char[] charArray0 = new char[5];
      charArray0[0] = 'f';
      charArray0[1] = '>';
      charArray0[2] = 'q';
      charArray0[3] = '*';
      charArray0[4] = 'O';
      // Undeclared exception!
      try { 
        strBuilder1.getChars(457, 457, charArray0, 457);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 457
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      String string0 = "length must be valid";
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      Object[] objectArray0 = null;
      // Undeclared exception!
      try { 
        strBuilder0.charAt(2175);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2175
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = strBuilder0.size();
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("startIndex must be valid");
      StrBuilder strBuilder1 = strBuilder0.delete(1, 1);
      StrBuilder strBuilder2 = strBuilder1.append('F');
      StrBuilder strBuilder3 = strBuilder0.insert(9, (long) 9);
      char[] charArray0 = strBuilder0.toCharArray(9, 9);
      StrBuilder strBuilder4 = strBuilder0.setLength(9);
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      int int0 = strBuilder0.indexOf((StrMatcher) strMatcher_CharSetMatcher0, 117);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-608));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoredMatcher(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "");
      boolean boolean0 = strBuilder1.isEmpty();
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("OX=`u/C@2(!4VR7>S");
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      int int0 = 115;
      int int1 = strBuilder0.indexOf((String) null, 115);
      StringBuffer stringBuffer0 = null;
      try {
        stringBuffer0 = new StringBuffer((-1));
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("'5]Em>dz=@/I]M");
      char char0 = 'f';
      StrMatcher strMatcher0 = StrMatcher.charMatcher('f');
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("'5]Em>dz=@/I]M");
      StrBuilder strBuilder2 = strBuilder1.append((double) (-1));
      StrBuilder strBuilder3 = strBuilder1.deleteFirst((String) null);
      int int1 = 177;
      char char1 = 'H';
      // Undeclared exception!
      try { 
        strBuilder2.appendFixedWidthPadLeft((Object) null, 177, 'H');
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('l');
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "");
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) charBuffer0);
      String string1 = "d8^c~";
      strBuilder_StrBuilderWriter0.write("d8^c~");
      strBuilder_StrBuilderWriter0.write(0);
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      String string2 = null;
      int int0 = strBuilder1.indexOf((String) null);
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt((-1), 'l');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight((Object) null, 680, '%');
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Le&u");
      int int0 = 32;
      StrBuilder strBuilder1 = strBuilder0.append((float) 32);
      // Undeclared exception!
      try { 
        strBuilder0.insert(32, (-4724.5786F));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = strBuilder0.indexOf('\"');
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("", "");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft(object0, 2396, '!');
      StrBuilder strBuilder3 = new StrBuilder((-1));
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("OS/2");
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher("OS/2");
      StrBuilder strBuilder4 = strBuilder3.deleteAll(strMatcher0);
      StrBuilder strBuilder5 = strBuilder4.deleteFirst('\"');
      StrBuilder strBuilder6 = strBuilder4.replaceAll(strMatcher2, "");
      StrBuilder strBuilder7 = strBuilder6.appendFixedWidthPadLeft((-773), (-773), '\"');
      boolean boolean0 = strBuilder0.equals((Object) strBuilder3);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder4.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      int int0 = (-846);
      StrBuilder strBuilder0 = new StrBuilder((-846));
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("^*PV8%3*'=Dthi@Af");
      StrBuilder strBuilder2 = strBuilder0.replaceFirst("YDZ]1)e9", "Invalid length: ");
      Writer writer0 = strBuilder2.asWriter();
      boolean boolean0 = strBuilder2.equals(strBuilder0);
      StrBuilder strBuilder3 = strBuilder1.appendNewLine();
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, (-846), (-846));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-97);
      // Undeclared exception!
      try { 
        strBuilder0.delete((-97), (-97));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -97
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      String string0 = "CCy0L>/[,2Z_&(]3`&";
      StrBuilder strBuilder0 = new StrBuilder("CCy0L>/[,2Z_&(]3`&");
      int int0 = 108;
      StrBuilder strBuilder1 = strBuilder0.append(']');
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(108);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 108
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("startIndex must be valid");
      StrMatcher strMatcher1 = StrMatcher.charMatcher('#');
      StrMatcher strMatcher2 = StrMatcher.charMatcher('#');
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "startIndex must be valid");
      StrBuilder strBuilder2 = strBuilder0.append("Invalid length: ");
      StrBuilder strBuilder3 = strBuilder0.ensureCapacity(0);
      StrMatcher strMatcher3 = StrMatcher.quoteMatcher();
      StrMatcher strMatcher4 = StrMatcher.stringMatcher("startIndex must be valid");
      int int0 = strBuilder3.lastIndexOf(strMatcher3, 32);
      StrMatcher strMatcher5 = StrMatcher.stringMatcher("N|g^+vQnm");
      // Undeclared exception!
      try { 
        strBuilder3.insert((-1), 4374L);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.deleteAll('~');
      StrBuilder strBuilder2 = strBuilder1.ensureCapacity(3801);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      Reader reader0 = strBuilder0.asReader();
      boolean boolean0 = strBuilder0.endsWith("");
      StrBuilder strBuilder3 = strBuilder0.appendNull();
      char[] charArray0 = new char[9];
      charArray0[0] = 'd';
      charArray0[1] = '8';
      charArray0[2] = 'E';
      charArray0[3] = 'U';
      charArray0[4] = 'I';
      charArray0[5] = 'r';
      charArray0[6] = ']';
      charArray0[7] = 'B';
      charArray0[8] = 'B';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      int int0 = strBuilder3.lastIndexOf((StrMatcher) strMatcher_CharSetMatcher0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("JGO`mE6VHp~(l>");
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(0);
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft((Object) strBuilder0, 0, 'P');
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt((-4429), 'O');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -4429
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      char[] charArray0 = new char[4];
      int int0 = 0;
      String string0 = strBuilder0.leftString(0);
      StrBuilder strBuilder1 = strBuilder0.append((Object) "");
      StrBuilder strBuilder2 = strBuilder1.append(1.0F);
      charArray0[0] = '0';
      charArray0[1] = '.';
      charArray0[2] = ']';
      charArray0[3] = 'r';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      int int1 = 1943;
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      int int2 = strMatcher0.isMatch(charArray0, 0, (-163), 1943);
      StrBuilder strBuilder3 = strBuilder0.replaceFirst(strMatcher0, "");
      char[] charArray1 = new char[6];
      charArray1[0] = 'r';
      charArray1[1] = '.';
      charArray1[2] = ']';
      charArray1[3] = 'r';
      charArray1[4] = ']';
      charArray1[5] = '.';
      StrBuilder strBuilder4 = strBuilder3.append(charArray1, 0, 1);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      Writer writer0 = strBuilder_StrBuilderWriter0.append('r');
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, (-163), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3150);
      StrBuilder strBuilder1 = strBuilder0.setNullText("OBH9c>`X<sd");
      StrBuilder strBuilder2 = new StrBuilder(496);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      char[] charArray0 = new char[2];
      charArray0[0] = '0';
      charArray0[1] = 'B';
      int int0 = strMatcher0.isMatch(charArray0, 0, 1, (-1641));
      int int1 = strBuilder1.indexOf(strMatcher0, 496);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer1 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher1 = strBuilder_StrBuilderTokenizer1.getIgnoredMatcher();
      int int2 = strBuilder1.lastIndexOf(strMatcher1, 3150);
      StrBuilder strBuilder3 = strBuilder0.append(false);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-419);
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      char[] charArray0 = new char[1];
      char char0 = '`';
      charArray0[0] = '`';
      // Undeclared exception!
      try { 
        strBuilder0.insert((-419), charArray0, (-419), (-419));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -419
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      int int0 = 3497;
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      String string0 = "@F";
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "@F");
      String string1 = "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer";
      // Undeclared exception!
      try { 
        strBuilder0.replace(3497, 3497, "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("C!m@;&fQ&SsX6j&");
      StrBuilder strBuilder1 = new StrBuilder(0);
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      char[] charArray0 = new char[7];
      charArray0[0] = '@';
      StrMatcher strMatcher0 = StrMatcher.charMatcher('+');
      charArray0[1] = '\'';
      charArray0[2] = 'B';
      charArray0[3] = '&';
      charArray0[4] = '1';
      charArray0[5] = '}';
      charArray0[6] = 'D';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_NoMatcher0);
      StrBuilder strBuilder2 = strBuilder1.append((-4705L));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("C!m@;&fQ&SsX6j&");
      StrBuilder strBuilder3 = strBuilder1.replaceFirst('1', '|');
      int int1 = strBuilder2.indexOf('\'');
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("-:");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[6];
      charArray0[0] = 'o';
      charArray0[1] = '#';
      strBuilder_StrBuilderWriter0.write("");
      charArray0[2] = 'j';
      charArray0[3] = 'w';
      charArray0[4] = '~';
      charArray0[5] = '#';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, (-5000), (-5000));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -5000
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      int int0 = 2679;
      StrBuilder strBuilder0 = new StrBuilder(2679);
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("Irix", "GEG");
      StrBuilder strBuilder2 = strBuilder0.replaceFirst('*', '*');
      StrBuilder strBuilder3 = strBuilder2.append(strBuilder0);
      StrBuilder strBuilder4 = strBuilder1.append((Object) strBuilder2);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(":!wG?><!=`pQE+");
      StrBuilder strBuilder5 = strBuilder4.deleteFirst(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder4.substring(2679, 2679);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.charMatcher('-');
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "");
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      int int0 = strBuilder0.indexOf('\\');
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.clear();
      int int0 = strBuilder0.lastIndexOf('G');
      StrBuilder strBuilder2 = strBuilder1.setLength(3621);
      StrBuilder strBuilder3 = strBuilder2.append(false);
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder4 = strBuilder1.append(stringBuffer0);
      StrBuilder strBuilder5 = strBuilder2.insert(3621, "");
      StrBuilder strBuilder6 = strBuilder1.replaceFirst('f', 'R');
      char[] charArray0 = new char[5];
      charArray0[0] = 'R';
      charArray0[1] = 'f';
      charArray0[2] = 'f';
      charArray0[3] = 'f';
      charArray0[4] = 'G';
      // Undeclared exception!
      try { 
        strBuilder4.insert(1730, charArray0, 1, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Reader reader0 = strBuilder0.asReader();
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('*');
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      boolean boolean0 = strBuilder0.contains((StrMatcher) strMatcher_CharMatcher0);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("add() is unsupported");
      StrBuilder strBuilder2 = strBuilder0.replaceFirst('/', '/');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      CharBuffer charBuffer0 = CharBuffer.allocate(2);
      // Undeclared exception!
      try { 
        charBuffer0.subSequence(2, 0);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.HeapCharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrMatcher");
      StrBuilder strBuilder1 = strBuilder0.append((StrBuilder) null);
      char char0 = 'W';
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft((-3437), (-3437), 'W');
      char char1 = '~';
      StrBuilder strBuilder3 = strBuilder0.replaceFirst("org.apache.commons.lang.text.StrMatcher", "org.apache.commons.lang.text.StrMatcher");
      char char2 = 'i';
      StrBuilder strBuilder4 = strBuilder1.deleteAll('i');
      StrBuilder strBuilder5 = strBuilder4.replaceAll("", "");
      StrBuilder strBuilder6 = strBuilder1.deleteAll('~');
      // Undeclared exception!
      try { 
        strBuilder6.insert((-3437), (Object) strBuilder0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3437
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrBuilder strBuilder2 = strBuilder0.ensureCapacity((-3169));
      StrBuilder strBuilder3 = strBuilder0.setNullText("*@/+");
      StrBuilder strBuilder4 = strBuilder1.appendFixedWidthPadRight(48, 0, 'e');
      char[] charArray0 = new char[3];
      charArray0[0] = 'e';
      charArray0[1] = 'e';
      charArray0[2] = 'e';
      // Undeclared exception!
      try { 
        strBuilder4.insert(48, charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 48
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      String string0 = null;
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      int int0 = 304;
      // Undeclared exception!
      try { 
        strBuilder0.validateRange(304, 304);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterChar(']');
      String string0 = strBuilder_StrBuilderTokenizer0.previousToken();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      boolean boolean0 = strBuilder0.equals(object0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrBuilder strBuilder1 = strBuilder0.insert(0, (Object) strTokenizer0);
      strBuilder_StrBuilderWriter0.write((String) null, 0, 0);
      StrBuilder strBuilder2 = strBuilder0.insert(0, 's');
      strBuilder_StrBuilderWriter0.write("Mn X5");
      StrTokenizer strTokenizer1 = strBuilder0.asTokenizer();
      StrBuilder strBuilder3 = strBuilder0.deleteFirst((String) null);
      StrBuilder strBuilder4 = strBuilder0.append((double) 0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder5 = strBuilder3.appendWithSeparators((Collection) linkedList0, (String) null);
      StrBuilder strBuilder6 = strBuilder0.append(1L);
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      int int0 = strBuilder3.indexOf(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("{}");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      boolean boolean0 = strBuilder_StrBuilderTokenizer0.hasNext();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "startIndex must be valid");
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder2 = strBuilder0.deleteFirst("`3m-l?1");
      // Undeclared exception!
      try { 
        strBuilder2.replace(672, (-88), ".a>7");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 1853;
      // Undeclared exception!
      try { 
        strBuilder0.insert(1853, (Object) "K<<R-{ZsFr)4)");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1853
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      String string0 = "Invalid startIndex: ";
      StrBuilder strBuilder0 = new StrBuilder("Invalid startIndex: ");
      StrBuilder strBuilder1 = strBuilder0.append(1856.464082259);
      int int0 = 3256;
      // Undeclared exception!
      try { 
        strBuilder1.insert(3256, "file.separator");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3256
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      String string0 = "_R:fd9";
      StrBuilder strBuilder0 = new StrBuilder("_R:fd9");
      int int0 = 0;
      String string1 = strBuilder0.rightString(0);
      int int1 = (-289);
      char char0 = 't';
      int int2 = (-992);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-992), false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -992
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      int int0 = (-1997);
      StrBuilder strBuilder0 = new StrBuilder((-1997));
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex((-2263));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2263
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1), '0');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      int int0 = strBuilder0.indexOf((StrMatcher) null);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((char[]) null);
      strBuilder_StrBuilderWriter0.write((String) null, 1039, 1039);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(48);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(48, 48, 'K');
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight((Object) "u_<BUV", 0, 'O');
      StrBuilder strBuilder3 = strBuilder1.appendFixedWidthPadRight(48, 48, 'K');
      StrBuilder strBuilder4 = strBuilder3.append(strBuilder2);
      Reader reader0 = strBuilder0.asReader();
      String string0 = strBuilder2.substring(0);
      char[] charArray0 = new char[6];
      charArray0[0] = '~';
      charArray0[1] = 'K';
      charArray0[2] = 'K';
      charArray0[3] = 'K';
      charArray0[4] = 'K';
      charArray0[5] = 'K';
      StrBuilder strBuilder5 = strBuilder2.append(charArray0, 0, 0);
      StrBuilder strBuilder6 = strBuilder0.append(0);
      StrBuilder strBuilder7 = strBuilder6.insert(0, (long) 0);
      StrBuilder strBuilder8 = strBuilder0.deleteAll('5');
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder9 = strBuilder8.appendWithSeparators((Collection) linkedList0, "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      StrBuilder strBuilder10 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder10.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      boolean boolean0 = strBuilder5.contains(strMatcher0);
      StrBuilder strBuilder11 = strBuilder6.replace(strMatcher0, "java.lang.String@0000000002KKKKKKKKKKKKKKKKKKKKKjava.lang.String@0000000003KKKKKKKKKKKKKKKKKKKKKjava.lang.String@0000000002KKKKKKKKKKKKKKKKKKKKKjava.lang.String@0000000003KKKKKKKKKKKKKKKKKKKKK", 0, 0, 48);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      int int1 = 0;
      StrBuilder strBuilder1 = strBuilder0.append((String) null, 0, 0);
      StrBuilder strBuilder2 = strBuilder1.append(strBuilder0);
      int int2 = strBuilder2.lastIndexOf((StrMatcher) null, 0);
      Writer writer0 = strBuilder2.asWriter();
      StrBuilder strBuilder3 = strBuilder2.replaceFirst("<Wd(dW9pxjhi9", (String) null);
      StrBuilder strBuilder4 = strBuilder3.setLength(97);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      int int3 = strBuilder_StrBuilderTokenizer0.size();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      int int4 = 1298;
      // Undeclared exception!
      try { 
        strBuilder0.substring(1298);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(689);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher((String) null);
      StrMatcher strMatcher1 = StrMatcher.stringMatcher((String) null);
      int int0 = strBuilder0.indexOf(strMatcher0, 689);
      int int1 = 1016;
      // Undeclared exception!
      try { 
        strBuilder0.substring(1016);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      // Undeclared exception!
      try { 
        strBuilder0.insert(1420, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1420
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("GC![ *T9eEacT=bWUig");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      boolean boolean0 = strBuilder_StrBuilderTokenizer0.hasNext();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(object0, 0, 'Z');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "GC![ *T9eEacT=bWUig");
      StrBuilder strBuilder2 = strBuilder0.append(stringBuffer0);
      boolean boolean1 = strBuilder0.equalsIgnoreCase(strBuilder2);
      StringBuffer stringBuffer1 = stringBuffer0.append(true);
      StrBuilder strBuilder3 = strBuilder2.replaceAll("Invalid length: ", "GC![ *T9eEacT=bWUig");
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) "Invalid length: ";
      objectArray0[1] = (Object) "Invalid length: ";
      objectArray0[2] = object0;
      int int0 = strBuilder2.validateRange(0, 0);
      objectArray0[3] = (Object) stringBuffer0;
      objectArray0[4] = (Object) strBuilder1;
      objectArray0[5] = (Object) strBuilder2;
      objectArray0[6] = (Object) strBuilder2;
      char[] charArray0 = new char[2];
      charArray0[0] = 'Z';
      charArray0[1] = '}';
      StrBuilder strBuilder4 = strBuilder1.append(charArray0, 0, 0);
      objectArray0[7] = object0;
      objectArray0[8] = (Object) strBuilder2;
      StrBuilder strBuilder5 = strBuilder3.appendWithSeparators(objectArray0, "GC![ *T9eEacT=bWUig");
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("5W}P?{");
      int int0 = strBuilder0.length();
      StrBuilder strBuilder1 = strBuilder0.append((-3703));
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder2 = strBuilder0.replaceFirst((StrMatcher) strMatcher_TrimMatcher0, "5W}P?{");
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("}H9m'Iy.=~%9_5i,");
      StrBuilder strBuilder1 = strBuilder0.setNullText("}H9m'Iy.=~%9_5i,");
      StrBuilder strBuilder2 = strBuilder0.setNullText("7:?;b;");
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('&');
      char[] charArray0 = new char[3];
      charArray0[0] = '&';
      charArray0[1] = '&';
      charArray0[2] = '&';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("}H9m'Iy.=~%9_5i,");
      int int0 = strBuilder2.lastIndexOf((StrMatcher) strMatcher_CharMatcher0);
      String string0 = strBuilder0.leftString(0);
      StrBuilder strBuilder3 = strBuilder0.deleteFirst('5');
      char char0 = strBuilder1.charAt(0);
      StrBuilder strBuilder4 = strBuilder3.insert(0, (long) 0);
      StrBuilder strBuilder5 = strBuilder3.append((float) 0);
      StrBuilder strBuilder6 = strBuilder5.insert(0, (Object) null);
      StrBuilder strBuilder7 = strBuilder1.appendFixedWidthPadRight((Object) "7:?;b;", 0, 'D');
      StrBuilder strBuilder8 = strBuilder3.replaceAll("", "BDYj;-dM.YvEWy[=-6");
      StrBuilder strBuilder9 = strBuilder8.appendNull();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("");
      strBuilder_StrBuilderWriter0.write(charArray0);
      strBuilder_StrBuilderWriter0.flush();
      StrBuilder strBuilder10 = strBuilder3.deleteAll(strMatcher0);
      StrBuilder strBuilder11 = strBuilder2.deleteFirst((StrMatcher) strMatcher_CharMatcher0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder3.new StrBuilderTokenizer();
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, (-1), 0);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      String string0 = strBuilder0.midString(0, 0);
      StrBuilder strBuilder2 = strBuilder0.setNullText("");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(679);
      strBuilder_StrBuilderWriter0.close();
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.trim();
      char[] charArray0 = new char[0];
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Collection) linkedList0, (String) null);
      int int0 = strBuilder0.hashCode();
      int int1 = strBuilder0.length();
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("uwWY{ \"RU w");
      char[] charArray0 = new char[1];
      char char0 = 'X';
      charArray0[0] = 'X';
      strBuilder0.buffer = charArray0;
      String string0 = strBuilder0.leftString(0);
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance("uwWY{ \"RU w");
      // Undeclared exception!
      try { 
        strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-408));
      StrBuilder strBuilder1 = new StrBuilder((-408));
      StrBuilder strBuilder2 = strBuilder1.append((long) (-408));
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadRight((Object) strBuilder1, (-583), '!');
      boolean boolean0 = strBuilder1.equalsIgnoreCase(strBuilder3);
      char[] charArray0 = new char[2];
      charArray0[0] = '!';
      charArray0[1] = '!';
      // Undeclared exception!
      try { 
        strBuilder2.append(charArray0, (-1895), (-408));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -408
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((char[]) null, 171, (-1912));
      StrBuilder strBuilder2 = strBuilder1.append(0L);
      StrBuilder strBuilder3 = strBuilder2.append((char[]) null, (-1802), (-1802));
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      strBuilder0.size = 0;
      strBuilder0.validateIndex(0);
      char[] charArray0 = strBuilder0.toCharArray();
      int int0 = strBuilder0.indexOf("'6d,5Vt", 3);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft((Object) "org.apache.commons.lang.text.StrBuilder$StrBuilderReader", 0, '1');
      int int0 = strBuilder1.indexOf(strMatcher0);
      int int1 = strBuilder0.lastIndexOf(strMatcher0);
      String string0 = strBuilder0.getNewLineText();
      String string1 = strBuilder0.midString((-1296), (-1760));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = null;
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read((char[]) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1));
      String string0 = strBuilder0.rightString((-1));
      StrBuilder strBuilder1 = strBuilder0.append((-1L));
      String string1 = strBuilder1.midString(656, (-1));
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      char[] charArray0 = strBuilder0.toCharArray();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(0, 0, 'R');
      boolean boolean0 = strBuilder0.startsWith("/~}TRKt{P%n");
      char char0 = '4';
      strBuilder0.size = 4961;
      int int0 = 1250;
      // Undeclared exception!
      try { 
        strBuilder0.lastIndexOf('4', 1250);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1250
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("file.encoding");
      StrBuilder strBuilder1 = strBuilder0.replaceAll("psLd7rK'", "psLd7rK'");
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight((Object) "file.encoding", 0, ':');
      boolean boolean0 = strBuilder0.startsWith("file.encoding");
      char[] charArray0 = new char[1];
      charArray0[0] = ':';
      char[] charArray1 = strBuilder0.getChars(charArray0);
      StrBuilder strBuilder3 = strBuilder2.deleteAll("file.encoding");
      String string0 = strBuilder0.getNewLineText();
      StrBuilder strBuilder4 = new StrBuilder();
      String string1 = strBuilder2.substring(0);
      StrBuilder strBuilder5 = strBuilder4.appendFixedWidthPadRight(0, 349, ':');
      StrBuilder strBuilder6 = strBuilder2.appendFixedWidthPadLeft((Object) strBuilder4, 0, ':');
      int int0 = strBuilder4.length();
      StrBuilder strBuilder7 = strBuilder3.appendPadding(1496, 'V');
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.size = 0;
      boolean boolean0 = strBuilder0.startsWith("");
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      char[] charArray0 = strBuilder0.toCharArray();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(charArray0);
      int int0 = 0;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.previous();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-479));
      int int0 = strBuilder0.lastIndexOf('V');
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) "", 9, '3');
      StrBuilder strBuilder2 = strBuilder0.replaceAll('3', '?');
      String string0 = "";
      StrBuilder strBuilder3 = strBuilder2.replaceAll("", "2A4*X\"6z'");
      String string1 = strBuilder2.toString();
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder4 = strBuilder2.deleteAll((StrMatcher) strMatcher_TrimMatcher0);
      String string2 = "'HAf('&&Q";
      int int1 = 5;
      int int2 = 34;
      // Undeclared exception!
      try { 
        strBuilder1.replace((StrMatcher) strMatcher_TrimMatcher0, "", (-1), 2351, 34);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.replace(0, 0, "");
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder1 = new StrBuilder();
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      StrBuilder strBuilder2 = strBuilder0.replaceFirst("length must be valid", "length must be valid");
      StrBuilder strBuilder3 = strBuilder2.append("length must be valid");
      StrBuilder strBuilder4 = strBuilder1.appendFixedWidthPadRight(0, 3461, '5');
      StrBuilder strBuilder5 = strBuilder4.append(3461);
      String string0 = strBuilder4.substring(3461);
      StringBuffer stringBuffer0 = strBuilder4.toStringBuffer();
      StrBuilder strBuilder6 = strBuilder4.deleteFirst((StrMatcher) null);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      int int0 = 3013;
      StrBuilder strBuilder0 = new StrBuilder(3013);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.previous();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      int int0 = 97;
      char[] charArray0 = strBuilder0.toCharArray(2, 97);
      StrBuilder strBuilder1 = strBuilder0.insert(0, ';');
      StrBuilder strBuilder2 = strBuilder1.trim();
      StrBuilder strBuilder3 = strBuilder1.appendPadding(0, '?');
      StrBuilder strBuilder4 = strBuilder3.append(true);
      StrBuilder strBuilder5 = new StrBuilder("length must be valid");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder5.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      StrBuilder strBuilder6 = strBuilder3.deleteAll(strMatcher0);
      int int1 = 0;
      StrBuilder strBuilder7 = strBuilder3.insert(0, 0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      char[] charArray1 = new char[1];
      charArray1[0] = ';';
      strBuilder2.size = 102;
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray1);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append("Zn");
      StrBuilder strBuilder2 = strBuilder0.replaceFirst("=Qo(gE\"a1>+d", "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadLeft(932, 932, 'L');
      strBuilder3.validateIndex(932);
      StrBuilder strBuilder4 = strBuilder1.replace(0, 0, "");
      StringBuffer stringBuffer0 = new StringBuffer(932);
      StringBuffer stringBuffer1 = new StringBuffer(stringBuffer0);
      StrBuilder strBuilder5 = strBuilder2.append(stringBuffer1);
      StrBuilder strBuilder6 = strBuilder4.insert(0, 0L);
      StrBuilder strBuilder7 = strBuilder6.replaceAll("Zn", "Zn");
      Writer writer0 = strBuilder2.asWriter();
      StrBuilder strBuilder8 = strBuilder2.trim();
      StrBuilder strBuilder9 = strBuilder8.setNewLineText("Zn");
      String string0 = strBuilder9.toString();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      // Undeclared exception!
      try { 
        strBuilder8.replace(43, 0, "', is neither of type Map.Entry nor an Array");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder("bk`7qB5 +4^");
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      Reader reader0 = strBuilder2.asReader();
      StrBuilder strBuilder3 = strBuilder0.append(420.9741F);
      StrBuilder strBuilder4 = strBuilder0.append(false);
      Object object0 = new Object();
      StrBuilder strBuilder5 = strBuilder4.deleteAll('5');
      StrBuilder strBuilder6 = strBuilder3.append(object0);
      StrBuilder strBuilder7 = strBuilder4.appendNewLine();
      String string0 = strBuilder3.leftString(0);
      StrBuilder strBuilder8 = strBuilder6.append((long) 0);
      char[] charArray0 = new char[4];
      charArray0[0] = '5';
      charArray0[1] = '5';
      charArray0[2] = '5';
      charArray0[3] = '0';
      StrBuilder strBuilder9 = strBuilder6.append(charArray0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder5.new StrBuilderReader();
      // Undeclared exception!
      try { 
        CharBuffer.wrap(charArray0, 114, (-2495));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[4];
      charArray0[0] = 'k';
      charArray0[1] = '5';
      charArray0[2] = 'M';
      StrBuilder strBuilder1 = strBuilder0.append(0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      boolean boolean0 = linkedList0.add((String) null);
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Collection) linkedList0, "length must be valid");
      charArray0[3] = 'p';
      StrBuilder strBuilder3 = strBuilder0.insert(0, charArray0);
      Reader reader0 = strBuilder0.asReader();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      int int0 = strBuilder0.indexOf('i', 0);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.insert(0, (float) 0);
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft(0, 0, 'E');
      String string0 = "org.apache.commons.lang.text.StrMatcher";
      StrBuilder strBuilder3 = strBuilder1.setNewLineText("org.apache.commons.lang.text.StrMatcher");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(0);
      int int0 = 0;
      char char0 = '#';
      StrBuilder strBuilder4 = strBuilder0.deleteFirst('#');
      StrBuilder strBuilder5 = strBuilder1.appendFixedWidthPadLeft(0, 0, '^');
      int int1 = strBuilder_StrBuilderReader0.read();
      StrBuilder strBuilder6 = strBuilder0.append("java.library.path", 0, 0);
      // Undeclared exception!
      try { 
        strBuilder6.insert(48, (long) 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 48
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrBuilder strBuilder2 = strBuilder1.appendPadding(1648, 'U');
      char[] charArray0 = new char[1];
      charArray0[0] = 'U';
      StrBuilder strBuilder3 = strBuilder2.insert(0, charArray0);
      StrBuilder strBuilder4 = strBuilder1.insert(0, "");
      int int0 = strBuilder0.validateRange(0, 0);
      StrBuilder strBuilder5 = strBuilder4.append(false);
      StrBuilder strBuilder6 = strBuilder4.appendFixedWidthPadRight(1745, 0, 'U');
      StrBuilder strBuilder7 = strBuilder4.setNullText("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrBuilder strBuilder8 = strBuilder7.insert(0, (Object) strBuilder0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder9 = strBuilder8.appendWithSeparators((Collection) linkedList0, "org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrBuilder strBuilder10 = strBuilder3.replaceAll("", "");
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      int int1 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_TrimMatcher0);
      StrBuilder strBuilder11 = strBuilder10.insert(0, (Object) strMatcher_TrimMatcher0);
      char[] charArray1 = strBuilder10.toCharArray();
      StrBuilder strBuilder12 = strBuilder10.insert(1648, false);
      StrBuilder strBuilder13 = strBuilder3.clear();
      // Undeclared exception!
      try { 
        strBuilder12.append(strBuilder3, 0, (-2498));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }
}
