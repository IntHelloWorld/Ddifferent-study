/*
 * This file was automatically generated by EvoSuite
 * Mon Mar 30 02:18:11 GMT 2020
 */

package org.apache.commons.math.analysis.solvers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.analysis.UnivariateRealFunction;
import org.apache.commons.math.analysis.function.Asinh;
import org.apache.commons.math.analysis.function.Constant;
import org.apache.commons.math.analysis.function.Exp;
import org.apache.commons.math.analysis.function.Expm1;
import org.apache.commons.math.analysis.function.Gaussian;
import org.apache.commons.math.analysis.function.HarmonicOscillator;
import org.apache.commons.math.analysis.function.Identity;
import org.apache.commons.math.analysis.function.Log10;
import org.apache.commons.math.analysis.function.Log1p;
import org.apache.commons.math.analysis.function.Sigmoid;
import org.apache.commons.math.analysis.function.Sinc;
import org.apache.commons.math.analysis.function.Sqrt;
import org.apache.commons.math.analysis.function.Tan;
import org.apache.commons.math.analysis.solvers.AllowedSolution;
import org.apache.commons.math.analysis.solvers.IllinoisSolver;
import org.apache.commons.math.analysis.solvers.PegasusSolver;
import org.apache.commons.math.analysis.solvers.RegulaFalsiSolver;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BaseSecantSolver_ESTest extends BaseSecantSolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(567.602174, 232.79);
      Log1p log1p0 = new Log1p();
      AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
      double double0 = illinoisSolver0.solve(2097, (UnivariateRealFunction) log1p0, 232.79, 0.0, 0.0, allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver();
      Asinh asinh0 = new Asinh();
      double double0 = illinoisSolver0.solve(4202, (UnivariateRealFunction) asinh0, 0.0, 0.0, 0.0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(2159.20537586325, 2159.20537586325, 2159.20537586325);
      Exp exp0 = new Exp();
      double double0 = regulaFalsiSolver0.solve(2882, (UnivariateRealFunction) exp0, (double) 2882, (double) (-2146000294), (double) 2);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
      Gaussian gaussian0 = new Gaussian(0.0, 0.0, 1081);
      AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
      double double0 = pegasusSolver0.solve(1081, (UnivariateRealFunction) gaussian0, 0.0, 0.0, allowedSolution0);
      double double1 = pegasusSolver0.doSolve();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
      AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
      Constant constant0 = new Constant(1.34217729E8);
      // Undeclared exception!
      try { 
        regulaFalsiSolver0.solve((-2146000294), (UnivariateRealFunction) constant0, 1724.2447098, 0.0, allowedSolution0);
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (-2,146,000,294) exceeded: evaluations
         //
         verifyException("org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver((-4300.5639637));
      Log1p log1p0 = new Log1p();
      AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
      // Undeclared exception!
      try { 
        illinoisSolver0.solve(2047, (UnivariateRealFunction) log1p0, (-4300.5639637), 1.0E-6, allowedSolution0);
      } catch(IllegalArgumentException e) {
         //
         // function values at endpoints do not have different signs, endpoints: [-4,300.564, 0], values: [\uFFFD, 0]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(1007.37079776, 1007.37079776, 1007.37079776);
      Sqrt sqrt0 = new Sqrt();
      AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
      // Undeclared exception!
      try { 
        illinoisSolver0.solve((-24), (UnivariateRealFunction) sqrt0, (double) (-24), (double) (-24), 1007.37079776, allowedSolution0);
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (-24) exceeded: evaluations
         //
         verifyException("org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PegasusSolver pegasusSolver0 = new PegasusSolver((-552.9), (-552.9));
      HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator(1222, (-885.0545186432), (-389.354));
      AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
      // Undeclared exception!
      try { 
        pegasusSolver0.solve(1222, (UnivariateRealFunction) harmonicOscillator0, (double) 1222, 0.0, (double) 1222, allowedSolution0);
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [1,222, 0]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver();
      AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
      // Undeclared exception!
      try { 
        illinoisSolver0.solve((-883), (UnivariateRealFunction) null, (-812.80952417), (-818.30321082211), (-812.80952417), allowedSolution0);
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(398.49049211055, 0.0);
      Gaussian gaussian0 = new Gaussian(398.49049211055, 398.49049211055);
      // Undeclared exception!
      try { 
        illinoisSolver0.solve(2073, (UnivariateRealFunction) gaussian0, 1510.4136, 1510.4136, (double) 2073);
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [1,510.414, 1,510.414]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(1.0E-15, 0.0);
      // Undeclared exception!
      try { 
        illinoisSolver0.solve(5, (UnivariateRealFunction) null, 1.0E-15, 0.0, 733.3);
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
      Sigmoid sigmoid0 = new Sigmoid((-5485.905725356145), (-5485.905725356145));
      pegasusSolver0.setup(1081, sigmoid0, 3487.5579998, 3487.5579998, (-1.0));
      // Undeclared exception!
      try { 
        pegasusSolver0.doSolve();
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [3,487.558, 3,487.558]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver((-1471.4952612036857));
      Sinc sinc0 = new Sinc();
      illinoisSolver0.setup(806, sinc0, (-4326.188293048726), 543.7906569834776, 308090.26221034094);
      // Undeclared exception!
      try { 
        illinoisSolver0.doSolve();
      } catch(IllegalArgumentException e) {
         //
         // function values at endpoints do not have different signs, endpoints: [-4,326.188, 543.791], values: [-0, -0.001]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(2159.20537586325);
      HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator(2159.20537586325, 544.1622994572862, 2882);
      UnivariateRealFunction univariateRealFunction0 = harmonicOscillator0.derivative();
      AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
      double double0 = regulaFalsiSolver0.solve(2882, univariateRealFunction0, 0.031, (double) 2882, allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(2159.20537586325);
      HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator(2159.20537586325, 544.1622994572862, 2882);
      AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
      double double0 = regulaFalsiSolver0.solve(2882, (UnivariateRealFunction) harmonicOscillator0, (-1654.60084071446), 0.030589580535888672, 1568.5904629116774, allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(2159.20537586325);
      HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator(2159.20537586325, 544.1622994572862, 2882);
      AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
      double double0 = regulaFalsiSolver0.solve(2882, (UnivariateRealFunction) harmonicOscillator0, (-1654.60084071446), 0.031, 2159.20537586325, allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(2154.608013239271, 2154.608013239271);
      HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator(2154.608013239271, (-473.06907775951174), 2884);
      AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
      double double0 = regulaFalsiSolver0.solve(2884, (UnivariateRealFunction) harmonicOscillator0, (-1654.60084071446), 0.030589580535888672, 1567.843065554073, allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(2159.20537586325);
      HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator(2159.20537586325, 544.1622994572862, 2882);
      AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
      double double0 = regulaFalsiSolver0.solve(2882, (UnivariateRealFunction) harmonicOscillator0, (-1654.6), 0.031, 2159.20537586325, allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(2159.20537586325);
      HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator(2159.20537586325, 544.1622994572862, 2882);
      AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
      double double0 = regulaFalsiSolver0.solve(2882, (UnivariateRealFunction) harmonicOscillator0, (-689.6430623902623), 1797.348378025, allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(2159.20537586325, 2159.20537586325, 2159.20537586325);
      HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator(2159.20537586325, 544.1622994572862, 2882);
      AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
      double double0 = regulaFalsiSolver0.solve(2882, (UnivariateRealFunction) harmonicOscillator0, (-1654.60084071446), 0.030589580535888672, 1575.117511713499, allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(2159.20537586325, 2159.20537586325, 2159.20537586325);
      HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator(2159.20537586325, 544.1622994572862, 2882);
      AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
      double double0 = regulaFalsiSolver0.solve(2882, (UnivariateRealFunction) harmonicOscillator0, (-1654.60084071446), 0.030589580535888672, 1568.5904629116774, allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(2159.20537586325, 2159.20537586325, 2159.20537586325);
      HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator(2159.20537586325, 544.1622994572862, 2882);
      AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
      double double0 = regulaFalsiSolver0.solve(2882, (UnivariateRealFunction) harmonicOscillator0, (-1654.60084071446), 0.0, 2159.20537586325, allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(2159.20537586325, 2159.20537586325, 2159.20537586325);
      HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator(2159.20537586325, 544.1622994572862, 2882);
      AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
      double double0 = regulaFalsiSolver0.solve(2882, (UnivariateRealFunction) harmonicOscillator0, (-1661.4714868262643), (-4.759283522390156), 1568.5904629116774, allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(2159.20537586325, 2159.20537586325, 2159.20537586325);
      HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator(2159.20537586325, 544.1622994572862, 2882);
      AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
      double double0 = regulaFalsiSolver0.solve(2882, (UnivariateRealFunction) harmonicOscillator0, (-1654.60084071446), 0.030589580535888672, 1568.5904629116774, allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(2159.20537586325, 2159.20537586325, 2159.20537586325);
      HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator(2159.20537586325, 544.1622994572862, 2882);
      AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
      double double0 = regulaFalsiSolver0.solve(2882, (UnivariateRealFunction) harmonicOscillator0, (-1654.60084071446), 0.031, 2159.20537586325, allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      PegasusSolver pegasusSolver0 = new PegasusSolver();
      Tan tan0 = new Tan();
      AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
      double double0 = pegasusSolver0.solve(145, (UnivariateRealFunction) tan0, (-3833.70449877342), 1.0, allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver((-1471.4952612036857));
      Sinc sinc0 = new Sinc();
      illinoisSolver0.setup(806, sinc0, (-4326.188293048726), 522.03, 308090.26221034094);
      double double0 = illinoisSolver0.doSolve();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver((-2634.8), (-2634.8), 0.0);
      Identity identity0 = new Identity();
      AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
      double double0 = illinoisSolver0.solve(5, (UnivariateRealFunction) identity0, (-2634.8), 3046.0, allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
      HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator(1.997844754509471E-9, 544.1622994572862, 2882);
      AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
      double double0 = regulaFalsiSolver0.solve(2882, (UnivariateRealFunction) harmonicOscillator0, (-1654.60084071446), 0.030589580535888672, 5.478422174968109E-5, allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      PegasusSolver pegasusSolver0 = new PegasusSolver();
      HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator(0.0, 0.0, 0.0);
      double double0 = pegasusSolver0.solve(2365, (UnivariateRealFunction) harmonicOscillator0, (double) 2365, 1.3245471311735498E-8, (-1163.6562454196978));
      double double1 = pegasusSolver0.doSolve();
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver();
      Log10 log10_0 = new Log10();
      // Undeclared exception!
      try { 
        illinoisSolver0.solve(2, (UnivariateRealFunction) log10_0, 0.0, (double) 2, (double) (-277));
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (2) exceeded: evaluations
         //
         verifyException("org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(1.01, 0.0);
      Expm1 expm1_0 = new Expm1();
      AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
      // Undeclared exception!
      try { 
        illinoisSolver0.solve(10, (UnivariateRealFunction) expm1_0, 2309.64642486236, 1.01, allowedSolution0);
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [2,309.646, 1.01]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(4243.90043);
      // Undeclared exception!
      try { 
        regulaFalsiSolver0.doSolve();
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (0) exceeded: evaluations
         //
         verifyException("org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver", e);
      }
  }
}
