/*
 * This file was automatically generated by EvoSuite
 * Mon Mar 30 02:20:25 GMT 2020
 */

package org.apache.commons.math.analysis.solvers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.analysis.UnivariateRealFunction;
import org.apache.commons.math.analysis.function.Asin;
import org.apache.commons.math.analysis.function.Ceil;
import org.apache.commons.math.analysis.function.Cos;
import org.apache.commons.math.analysis.function.Inverse;
import org.apache.commons.math.analysis.function.Log10;
import org.apache.commons.math.analysis.function.Logit;
import org.apache.commons.math.analysis.function.Rint;
import org.apache.commons.math.analysis.function.Signum;
import org.apache.commons.math.analysis.function.Sin;
import org.apache.commons.math.analysis.function.Sinh;
import org.apache.commons.math.analysis.function.Sqrt;
import org.apache.commons.math.analysis.function.Ulp;
import org.apache.commons.math.analysis.polynomials.PolynomialFunction;
import org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeForm;
import org.apache.commons.math.analysis.solvers.AllowedSolution;
import org.apache.commons.math.analysis.solvers.IllinoisSolver;
import org.apache.commons.math.analysis.solvers.PegasusSolver;
import org.apache.commons.math.analysis.solvers.RegulaFalsiSolver;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BaseSecantSolver_ESTest extends BaseSecantSolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver((-1011.328223847042));
      Sin sin0 = new Sin();
      AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
      double double0 = illinoisSolver0.solve(456, (UnivariateRealFunction) sin0, 1955.777012237, 0.0, allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PegasusSolver pegasusSolver0 = new PegasusSolver();
      Signum signum0 = new Signum();
      AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
      double double0 = pegasusSolver0.solve(1765, (UnivariateRealFunction) signum0, 1.0, 0.0, 1.0, allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(3008.639);
      double[] doubleArray0 = new double[9];
      doubleArray0[1] = 3008.639;
      doubleArray0[2] = 3008.639;
      PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
      UnivariateRealFunction univariateRealFunction0 = polynomialFunction0.derivative();
      AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
      double double0 = illinoisSolver0.solve(389, univariateRealFunction0, (-1607.04881), 3008.639, 3008.639, allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PegasusSolver pegasusSolver0 = new PegasusSolver();
      Signum signum0 = new Signum();
      double double0 = pegasusSolver0.solve(2097, (UnivariateRealFunction) signum0, (-1947.0), 1866.6560395068573, 0.0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(0.0);
      Sqrt sqrt0 = new Sqrt();
      double double0 = regulaFalsiSolver0.solve(724, (UnivariateRealFunction) sqrt0, 0.0, (double) 724, 0.0);
      double double1 = regulaFalsiSolver0.doSolve();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(0.0, 0.0);
      Logit logit0 = new Logit(0.0, 0.0);
      UnivariateRealFunction univariateRealFunction0 = logit0.derivative();
      AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
      double double0 = illinoisSolver0.solve(1910900656, univariateRealFunction0, (-2.957007209750105E-8), (-2.957007209750105E-8), allowedSolution0);
      double double1 = illinoisSolver0.doSolve();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(0.0, 0.0);
      AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
      Cos cos0 = new Cos();
      // Undeclared exception!
      try { 
        illinoisSolver0.solve((-922), (UnivariateRealFunction) cos0, (-2360.0825622011), (-671.6489141952), allowedSolution0);
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (-922) exceeded: evaluations
         //
         verifyException("org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver((-1011.328223847042));
      AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
      Ulp ulp0 = new Ulp();
      // Undeclared exception!
      try { 
        illinoisSolver0.solve(456, (UnivariateRealFunction) ulp0, 1237.656430130364, 0.0, allowedSolution0);
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [1,237.656, 0]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(1.073741824E9);
      AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
      Signum signum0 = new Signum();
      // Undeclared exception!
      try { 
        illinoisSolver0.solve((-2147483647), (UnivariateRealFunction) signum0, (-1025.133460325), 568.57263255577, (double) 8388768, allowedSolution0);
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (-2,147,483,647) exceeded: evaluations
         //
         verifyException("org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver();
      Asin asin0 = new Asin();
      AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
      // Undeclared exception!
      try { 
        illinoisSolver0.solve(4, (UnivariateRealFunction) asin0, (double) 4, (double) 4, 0.5000000000042687, allowedSolution0);
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [4, 4]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PegasusSolver pegasusSolver0 = new PegasusSolver((-1075.0943287900222), 0.0, 1.0E-6);
      Rint rint0 = new Rint();
      AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
      // Undeclared exception!
      try { 
        pegasusSolver0.solve(1667, (UnivariateRealFunction) rint0, (double) 1667, 1900.083, 0.0, allowedSolution0);
      } catch(IllegalArgumentException e) {
         //
         // function values at endpoints do not have different signs, endpoints: [1,667, 1,900.083], values: [1,667, 1,900]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver((-0.22876443305666316), 0.19999954104423523, 898.329);
      Rint rint0 = new Rint();
      // Undeclared exception!
      try { 
        illinoisSolver0.solve(375, (UnivariateRealFunction) rint0, (-1.7976931348623157E308), 13.0, 0.16666666666745392);
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (375) exceeded: evaluations
         //
         verifyException("org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver((-3581.88154291), 2618.559336561184);
      Ceil ceil0 = new Ceil();
      // Undeclared exception!
      try { 
        regulaFalsiSolver0.solve(Integer.MAX_VALUE, (UnivariateRealFunction) ceil0, (double) Integer.MAX_VALUE, (-3530.238556992855), 1.0E-6);
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [2,147,483,647, -3,530.239]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver();
      Log10 log10_0 = new Log10();
      // Undeclared exception!
      try { 
        illinoisSolver0.solve(73, (UnivariateRealFunction) log10_0, 0.0, 2.7553817452272217E-6, 2.7553817452272217E-6);
      } catch(IllegalArgumentException e) {
         //
         // function values at endpoints do not have different signs, endpoints: [0, 0], values: [-\u221E, -5.56]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(0.0);
      // Undeclared exception!
      try { 
        regulaFalsiSolver0.doSolve();
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (0) exceeded: evaluations
         //
         verifyException("org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
      Signum signum0 = new Signum();
      regulaFalsiSolver0.setup(1023, signum0, 1023, (-2481.8709755), 1023);
      // Undeclared exception!
      try { 
        regulaFalsiSolver0.doSolve();
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [1,023, -2,481.871]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(1.073741824E9);
      AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
      Signum signum0 = new Signum();
      double double0 = illinoisSolver0.solve(8388768, (UnivariateRealFunction) signum0, (-1025.133460325), 568.57263255577, (double) 8388768, allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(1.073741824E9);
      double[] doubleArray0 = new double[5];
      doubleArray0[4] = (double) 8388768;
      PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
      UnivariateRealFunction univariateRealFunction0 = polynomialFunction0.derivative();
      AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
      double double0 = illinoisSolver0.solve(8388768, univariateRealFunction0, (-1705.8), 1103.0, allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(1.073741824E9);
      double[] doubleArray0 = new double[5];
      doubleArray0[4] = (double) 8388768;
      PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
      UnivariateRealFunction univariateRealFunction0 = polynomialFunction0.derivative();
      AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
      double double0 = illinoisSolver0.solve(8388768, univariateRealFunction0, (-1705.8), 1103.0, allowedSolution0);
      double double1 = illinoisSolver0.doSolve();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PegasusSolver pegasusSolver0 = new PegasusSolver((-43.445928), (-1514.614292782), 630.0283919);
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (-43.445928);
      doubleArray0[1] = 630.0283919;
      PolynomialFunctionLagrangeForm polynomialFunctionLagrangeForm0 = new PolynomialFunctionLagrangeForm(doubleArray0, doubleArray0);
      AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
      double double0 = pegasusSolver0.solve(3122, (UnivariateRealFunction) polynomialFunctionLagrangeForm0, (-1514.614292782), 19.14832610365482, allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PegasusSolver pegasusSolver0 = new PegasusSolver(361.1231809, 361.1231809, 19.14832610365482);
      Sinh sinh0 = new Sinh();
      double double0 = pegasusSolver0.solve(4, (UnivariateRealFunction) sinh0, (-2427.6763679992423), 1.0, (double) 4);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver((-3572.184), (-3572.184));
      Inverse inverse0 = new Inverse();
      // Undeclared exception!
      illinoisSolver0.solve(2130718697, (UnivariateRealFunction) inverse0, (-866.836878200482), (double) 2130718697, (-866.836878200482));
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(0.11111095942313305);
      AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
      // Undeclared exception!
      try { 
        illinoisSolver0.solve((-1240), (UnivariateRealFunction) null, (-2813.743286), (-2813.743286), allowedSolution0);
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math.util.MathUtils", e);
      }
  }
}
