* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer
* Starting client
* Connecting to master process on port 14996
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/patch1-Math-57-SequenceR/Math_57_1_sequencer/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 115
  - Branch 64
  - Exception 0
  - MutationFactory 161
  - Output 6
[Progress:>                             0%] [Cov:>                                  0%]  - Method 3
  - MethodNoException 3
  - CBranchFitnessFactory 64
* Using seed 1585461435306
* Starting evolution
[Progress:===>                          10%] [Cov:>                                  0%][Progress:===>                          10%] [Cov:>                                  1%][Progress:===>                          10%] [Cov:====>                              13%][Progress:===>                          10%] [Cov:=======>                           20%][Progress:===>                          10%] [Cov:========>                          23%][Progress:===>                          10%] [Cov:========>                          24%][Progress:===>                          10%] [Cov:==========>                        31%][Progress:===>                          11%] [Cov:>                                  1%][Progress:===>                          11%] [Cov:====>                              13%][Progress:===>                          11%] [Cov:========>                          24%][Progress:===>                          11%] [Cov:==========>                        31%][Progress:======>                       21%] [Cov:>                                  1%][Progress:======>                       21%] [Cov:====>                              13%][Progress:======>                       21%] [Cov:========>                          24%][Progress:======>                       21%] [Cov:==========>                        31%][Progress:======>                       21%] [Cov:============>                      35%][Progress:======>                       21%] [Cov:==============>                    42%][Progress:======>                       21%] [Cov:===============>                   45%][Progress:======>                       23%] [Cov:>                                  0%][Progress:======>                       23%] [Cov:>                                  1%][Progress:======>                       23%] [Cov:====>                              13%][Progress:======>                       23%] [Cov:=====>                             16%][Progress:======>                       23%] [Cov:======>                            19%][Progress:======>                       23%] [Cov:========>                          24%][Progress:======>                       23%] [Cov:==========>                        31%][Progress:======>                       23%] [Cov:=============>                     38%][Progress:======>                       23%] [Cov:=============>                     39%][Progress:======>                       23%] [Cov:===============>                   45%][Progress:======>                       23%] [Cov:================>                  46%][Progress:======>                       23%] [Cov:=================>                 49%][Progress:======>                       23%] [Cov:==================>                52%][Progress:======>                       23%] [Cov:==================>                52%][Progress:=======>                      25%] [Cov:===============>                   45%][Progress:=======>                      25%] [Cov:=================>                 49%][Progress:=======>                      25%] [Cov:==================>                53%][Progress:=======>                      26%] [Cov:==================>                53%][Progress:=======>                      26%] [Cov:==================>                53%][Progress:=======>                      26%] [Cov:==================>                53%][Progress:========>                     28%] [Cov:==================>                53%][Progress:========>                     28%] [Cov:==================>                53%][Progress:=========>                    30%] [Cov:==================>                52%][Progress:=========>                    30%] [Cov:==================>                53%][Progress:=========>                    30%] [Cov:==================>                53%][Progress:=========>                    33%] [Cov:==================>                54%][Progress:=========>                    33%] [Cov:===================>               56%][Progress:==========>                   35%] [Cov:==================>                53%][Progress:==========>                   35%] [Cov:===================>               56%][Progress:==========>                   35%] [Cov:===================>               57%][Progress:==========>                   35%] [Cov:====================>              59%][Progress:==========>                   35%] [Cov:=====================>             60%][Progress:==========>                   35%] [Cov:=====================>             60%][Progress:============>                 40%] [Cov:=====================>             60%][Progress:============>                 40%] [Cov:=====================>             60%][Progress:=============>                45%] [Cov:=====================>             60%][Progress:===============>              50%] [Cov:====================>              59%][Progress:===============>              53%] [Cov:=====================>             60%][Progress:================>             56%] [Cov:====================>              59%][Progress:================>             56%] [Cov:=====================>             60%][Progress:=================>            58%] [Cov:=====================>             60%][Progress:==================>           61%] [Cov:====================>              59%][Progress:==================>           61%] [Cov:=====================>             60%][Progress:===================>          66%] [Cov:====================>              59%][Progress:===================>          66%] [Cov:=====================>             60%][Progress:===================>          66%] [Cov:=====================>             60%][Progress:=====================>        70%] [Cov:====================>              59%][Progress:=====================>        70%] [Cov:=====================>             60%][Progress:=====================>        73%] [Cov:====================>              59%][Progress:======================>       76%] [Cov:=====================>             60%][Progress:======================>       76%] [Cov:=====================>             60%][Progress:========================>     81%] [Cov:=====================>             60%][Progress:=========================>    85%] [Cov:====================>              59%][Progress:=========================>    85%] [Cov:=====================>             60%][Progress:=========================>    85%] [Cov:=====================>             60%][Progress:=========================>    86%] [Cov:=====================>             60%][Progress:==========================>   88%] [Cov:=====================>             60%][Progress:==========================>   88%] [Cov:=====================>             60%][Progress:===========================>  91%] [Cov:=====================>             60%][Progress:===========================>  91%] [Cov:=====================>             61%][Progress:===========================>  91%] [Cov:=====================>             61%][Progress:============================> 96%] [Cov:=====================>             60%][Progress:============================> 96%] [Cov:=====================>             61%][Progress:============================> 96%] [Cov:=====================>             61%][Progress:=============================>98%] [Cov:=====================>             61%][Progress:=============================>98%] [Cov:=====================>             61%][Progress:==============================100%] [Cov:=====================>             61%][Progress:==============================100%] [Cov:=====================>             61%][Progress:==============================100%] [Cov:======================>            63%]
* Search finished after 62s and 17 generations, 11001 statements, best individual has fitness: 259.51638418079096
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 50%
* Total number of goals: 115
* Number of covered goals: 57
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 39%
* Total number of goals: 64
* Number of covered goals: 25
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 51%
* Total number of goals: 161
* Number of covered goals: 82
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 33%
* Total number of goals: 6
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 39%
* Total number of goals: 64
* Number of covered goals: 25
* Generated 7 tests with total length 49
* Resulting test suite's coverage: 64% (average coverage for all fitness functions)
* Computation finished
