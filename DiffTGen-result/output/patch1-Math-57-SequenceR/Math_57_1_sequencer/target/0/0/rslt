* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer
* Starting client
* Connecting to master process on port 5225
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/patch1-Math-57-SequenceR/Math_57_1_sequencer/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 115
  - Branch 64
  - Exception 0
  - MutationFactory 161
  - Output 6
  - Method 3
  - MethodNoException 3
  - CBranchFitnessFactory 64
* Using seed 1585460988000
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%][Progress:===>                          13%] [Cov:>                                  1%][Progress:===>                          13%] [Cov:====>                              13%][Progress:===>                          13%] [Cov:=======>                           20%][Progress:===>                          13%] [Cov:========>                          24%][Progress:===>                          13%] [Cov:==========>                        31%][Progress:====>                         15%] [Cov:>                                  1%][Progress:====>                         15%] [Cov:====>                              13%][Progress:====>                         15%] [Cov:========>                          24%][Progress:====>                         15%] [Cov:==========>                        31%][Progress:======>                       23%] [Cov:>                                  2%][Progress:======>                       23%] [Cov:=>                                 3%][Progress:======>                       23%] [Cov:=====>                             15%][Progress:======>                       23%] [Cov:=========>                         26%][Progress:======>                       23%] [Cov:===========>                       34%][Progress:=======>                      25%] [Cov:>                                  1%][Progress:=======>                      25%] [Cov:====>                              13%][Progress:=======>                      25%] [Cov:========>                          24%][Progress:=======>                      25%] [Cov:==========>                        31%][Progress:==========>                   35%] [Cov:>                                  1%][Progress:==========>                   35%] [Cov:====>                              13%][Progress:==========>                   35%] [Cov:========>                          24%][Progress:==========>                   35%] [Cov:==========>                        31%][Progress:==========>                   35%] [Cov:============>                      37%][Progress:==========>                   35%] [Cov:=================>                 49%][Progress:==========>                   35%] [Cov:=================>                 50%][Progress:==========>                   36%] [Cov:>                                  1%][Progress:==========>                   36%] [Cov:====>                              13%][Progress:==========>                   36%] [Cov:========>                          24%][Progress:==========>                   36%] [Cov:==========>                        31%][Progress:============>                 41%] [Cov:>                                  1%][Progress:============>                 41%] [Cov:====>                              13%][Progress:============>                 41%] [Cov:========>                          24%][Progress:============>                 41%] [Cov:==========>                        31%][Progress:============>                 41%] [Cov:=================>                 50%][Progress:============>                 43%] [Cov:==========>                        31%][Progress:============>                 43%] [Cov:=================>                 50%][Progress:=============>                45%] [Cov:==========>                        31%][Progress:=============>                45%] [Cov:=================>                 50%][Progress:=============>                46%] [Cov:==================>                52%][Progress:==============>               48%] [Cov:=================>                 50%][Progress:==============>               48%] [Cov:==================>                52%][Progress:==============>               48%] [Cov:==================>                52%][Progress:===============>              50%] [Cov:=================>                 50%][Progress:===============>              50%] [Cov:==================>                52%][Progress:===============>              51%] [Cov:=================>                 50%][Progress:===============>              51%] [Cov:==================>                52%][Progress:===============>              51%] [Cov:==================>                52%][Progress:===============>              53%] [Cov:==================>                52%][Progress:================>             55%] [Cov:==================>                52%][Progress:================>             55%] [Cov:==================>                52%][Progress:================>             56%] [Cov:==================>                52%][Progress:================>             56%] [Cov:==================>                52%][Progress:=================>            58%] [Cov:==================>                52%][Progress:=================>            58%] [Cov:==================>                52%][Progress:==================>           60%] [Cov:==================>                52%][Progress:==================>           60%] [Cov:==================>                52%][Progress:===================>          65%] [Cov:==================>                52%][Progress:===================>          66%] [Cov:==================>                52%][Progress:===================>          66%] [Cov:==================>                52%][Progress:====================>         68%] [Cov:==================>                52%][Progress:=====================>        73%] [Cov:==================>                52%][Progress:=====================>        73%] [Cov:==================>                52%][Progress:======================>       75%] [Cov:==================>                52%][Progress:======================>       75%] [Cov:==================>                52%][Progress:======================>       76%] [Cov:==================>                52%][Progress:========================>     81%] [Cov:==================>                52%][Progress:========================>     81%] [Cov:==================>                52%][Progress:========================>     83%] [Cov:==================>                52%][Progress:========================>     83%] [Cov:==================>                52%][Progress:==========================>   88%] [Cov:==================>                53%][Progress:==========================>   88%] [Cov:===================>               55%][Progress:==========================>   88%] [Cov:===================>               56%][Progress:===========================>  90%] [Cov:==================>                52%][Progress:===========================>  90%] [Cov:===================>               56%][Progress:===========================>  90%] [Cov:===================>               56%][Progress:===========================>  91%] [Cov:===================>               55%][Progress:===========================>  91%] [Cov:===================>               56%][Progress:===========================>  91%] [Cov:===================>               56%][Progress:===========================>  91%] [Cov:===================>               57%][Progress:===========================>  91%] [Cov:====================>              59%][Progress:===========================>  91%] [Cov:=====================>             60%][Progress:============================> 95%] [Cov:===================>               56%][Progress:============================> 95%] [Cov:===================>               57%][Progress:============================> 96%] [Cov:===================>               55%][Progress:============================> 96%] [Cov:===================>               56%][Progress:============================> 96%] [Cov:=====================>             60%][Progress:==============================100%] [Cov:====================>              59%][Progress:==============================100%] [Cov:=====================>             60%][Progress:==============================100%] [Cov:======================>            63%]
* Search finished after 62s and 18 generations, 9013 statements, best individual has fitness: 266.1166666666667
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 49%
* Total number of goals: 115
* Number of covered goals: 56
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 38%
* Total number of goals: 64
* Number of covered goals: 24
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 49%
* Total number of goals: 161
* Number of covered goals: 79
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 33%
* Total number of goals: 6
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 38%
* Total number of goals: 64
* Number of covered goals: 24
* Generated 6 tests with total length 41
* Resulting test suite's coverage: 63% (average coverage for all fitness functions)
* Compiling and checking tests
* Writing JUnit test case 'KMeansPlusPlusClusterer_ESTest' to evosuite-tests
* Done!

* Computation finished
