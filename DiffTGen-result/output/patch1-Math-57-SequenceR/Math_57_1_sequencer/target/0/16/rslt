* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer
* Starting client
* Connecting to master process on port 6121
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/patch1-Math-57-SequenceR/Math_57_1_sequencer/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 115
  - Branch 64
  - Exception 0
  - MutationFactory 161
  - Output 6
  - Method 3
  - MethodNoException 3
  - CBranchFitnessFactory 64
[Progress:>                             0%] [Cov:>                                  0%]* Using seed 1585461302068
* Starting evolution
[Progress:===>                          13%] [Cov:>                                  1%][Progress:===>                          13%] [Cov:====>                              13%][Progress:===>                          13%] [Cov:========>                          24%][Progress:===>                          13%] [Cov:==========>                        31%][Progress:====>                         15%] [Cov:=====>                             15%][Progress:====>                         15%] [Cov:=====>                             16%][Progress:====>                         15%] [Cov:=========>                         27%][Progress:====>                         15%] [Cov:============>                      35%][Progress:========>                     28%] [Cov:>                                  1%][Progress:========>                     28%] [Cov:====>                              13%][Progress:========>                     28%] [Cov:========>                          24%][Progress:========>                     28%] [Cov:==========>                        31%][Progress:=========>                    30%] [Cov:====>                              12%][Progress:=========>                    30%] [Cov:=======>                           20%][Progress:=========>                    30%] [Cov:========>                          24%][Progress:=========>                    30%] [Cov:==========>                        31%][Progress:=========>                    30%] [Cov:===========>                       34%][Progress:=========>                    30%] [Cov:==============>                    41%][Progress:=========>                    30%] [Cov:===============>                   44%][Progress:==========>                   35%] [Cov:>                                  1%][Progress:==========>                   35%] [Cov:====>                              13%][Progress:==========>                   35%] [Cov:========>                          24%][Progress:==========>                   35%] [Cov:==========>                        31%][Progress:==========>                   35%] [Cov:===========>                       34%][Progress:==========>                   35%] [Cov:===============>                   45%][Progress:==========>                   35%] [Cov:================>                  46%][Progress:==========>                   36%] [Cov:>                                  1%][Progress:==========>                   36%] [Cov:====>                              13%][Progress:==========>                   36%] [Cov:========>                          24%][Progress:==========>                   36%] [Cov:==========>                        31%][Progress:============>                 41%] [Cov:>                                  0%][Progress:============>                 41%] [Cov:====>                              13%][Progress:============>                 41%] [Cov:=====>                             15%][Progress:============>                 41%] [Cov:======>                            19%][Progress:============>                 41%] [Cov:========>                          24%][Progress:============>                 41%] [Cov:==========>                        31%][Progress:=============>                46%] [Cov:>                                  1%][Progress:=============>                46%] [Cov:====>                              13%][Progress:=============>                46%] [Cov:========>                          24%][Progress:=============>                46%] [Cov:==========>                        31%][Progress:==============>               48%] [Cov:>                                  0%][Progress:==============>               48%] [Cov:>                                  1%][Progress:==============>               48%] [Cov:====>                              13%][Progress:==============>               48%] [Cov:======>                            19%][Progress:==============>               48%] [Cov:=========>                         27%][Progress:==============>               48%] [Cov:===========>                       34%][Progress:==============>               48%] [Cov:===============>                   44%][Progress:==============>               48%] [Cov:===============>                   45%][Progress:==============>               48%] [Cov:================>                  48%][Progress:==============>               48%] [Cov:==================>                52%][Progress:===============>              50%] [Cov:===>                               11%][Progress:===============>              50%] [Cov:==========>                        31%][Progress:================>             55%] [Cov:===========>                       33%][Progress:================>             55%] [Cov:============>                      35%][Progress:==================>           60%] [Cov:==========>                        31%][Progress:==================>           60%] [Cov:===========>                       34%][Progress:==================>           60%] [Cov:================>                  46%][Progress:==================>           60%] [Cov:===================>               55%][Progress:==================>           61%] [Cov:==================>                52%][Progress:==================>           61%] [Cov:===================>               55%][Progress:==================>           61%] [Cov:===================>               55%][Progress:==================>           63%] [Cov:==================>                54%][Progress:==================>           63%] [Cov:===================>               55%][Progress:==================>           63%] [Cov:===================>               55%][Progress:===================>          65%] [Cov:==================>                52%][Progress:===================>          65%] [Cov:===================>               55%][Progress:===================>          65%] [Cov:===================>               55%][Progress:=====================>        70%] [Cov:===================>               55%][Progress:=====================>        70%] [Cov:===================>               56%][Progress:=====================>        71%] [Cov:===================>               55%][Progress:=====================>        71%] [Cov:===================>               56%][Progress:=====================>        73%] [Cov:===================>               55%][Progress:=====================>        73%] [Cov:===================>               56%][Progress:======================>       75%] [Cov:==================>                52%][Progress:======================>       75%] [Cov:==================>                53%][Progress:======================>       75%] [Cov:===================>               55%][Progress:======================>       76%] [Cov:===================>               55%][Progress:=======================>      78%] [Cov:==================>                52%][Progress:=======================>      78%] [Cov:===================>               55%][Progress:=======================>      78%] [Cov:===================>               56%][Progress:=======================>      78%] [Cov:===================>               56%][Progress:========================>     80%] [Cov:===================>               55%][Progress:========================>     80%] [Cov:===================>               56%][Progress:========================>     81%] [Cov:===================>               56%][Progress:========================>     81%] [Cov:===================>               56%][Progress:=========================>    86%] [Cov:===================>               55%][Progress:=========================>    86%] [Cov:===================>               56%][Progress:=========================>    86%] [Cov:===================>               57%][Progress:===========================>  91%] [Cov:===================>               56%][Progress:===========================>  91%] [Cov:===================>               57%][Progress:===========================>  91%] [Cov:===================>               57%][Progress:============================> 95%] [Cov:===================>               57%][Progress:============================> 96%] [Cov:===================>               57%][Progress:============================> 96%] [Cov:===================>               57%][Progress:==============================100%] [Cov:===================>               57%][Progress:==============================100%] [Cov:===================>               57%][Progress:==============================100%] [Cov:===================>               57%][Progress:==============================100%] [Cov:===================>               57%][Progress:==============================100%] [Cov:=====================>             61%]
* Search finished after 61s and 13 generations, 6608 statements, best individual has fitness: 288.5181818153879
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 43%
* Total number of goals: 115
* Number of covered goals: 50
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 34%
* Total number of goals: 64
* Number of covered goals: 22
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 43%
* Total number of goals: 161
* Number of covered goals: 69
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 33%
* Total number of goals: 6
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 34%
* Total number of goals: 64
* Number of covered goals: 22
* Generated 8 tests with total length 64
* Resulting test suite's coverage: 61% (average coverage for all fitness functions)
* Compiling and checking tests
* Writing JUnit test case 'KMeansPlusPlusClusterer_ESTest' to evosuite-tests
* Done!

* Computation finished
