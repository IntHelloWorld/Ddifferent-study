* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer
* Starting client
* Connecting to master process on port 7613
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/patch1-Math-57-SequenceR/Math_57_1_sequencer/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 115
  - Branch 64
  - Exception 0
  - MutationFactory 161
  - Output 6
  - Method 3
  - MethodNoException 3
  - CBranchFitnessFactory 64
* Using seed 1585461435248
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%][Progress:==>                           8%] [Cov:>                                  0%][Progress:==>                           8%] [Cov:>                                  1%][Progress:==>                           8%] [Cov:====>                              13%][Progress:==>                           8%] [Cov:======>                            19%][Progress:==>                           8%] [Cov:========>                          23%][Progress:==>                           8%] [Cov:========>                          24%][Progress:==>                           8%] [Cov:==========>                        31%][Progress:===>                          10%] [Cov:>                                  1%][Progress:===>                          10%] [Cov:====>                              13%][Progress:===>                          10%] [Cov:========>                          24%][Progress:===>                          10%] [Cov:==========>                        31%][Progress:======>                       20%] [Cov:>                                  0%][Progress:======>                       20%] [Cov:>                                  1%][Progress:======>                       20%] [Cov:====>                              13%][Progress:======>                       20%] [Cov:=====>                             16%][Progress:======>                       20%] [Cov:======>                            19%][Progress:======>                       20%] [Cov:========>                          23%][Progress:======>                       20%] [Cov:===========>                       34%][Progress:======>                       20%] [Cov:===============>                   45%][Progress:======>                       20%] [Cov:================>                  46%][Progress:=======>                      25%] [Cov:=>                                 4%][Progress:=======>                      25%] [Cov:==>                                6%][Progress:=======>                      25%] [Cov:======>                            19%][Progress:=======>                      25%] [Cov:=======>                           22%][Progress:=======>                      25%] [Cov:=========>                         26%][Progress:=======>                      25%] [Cov:============>                      37%][Progress:=======>                      25%] [Cov:================>                  48%][Progress:=======>                      25%] [Cov:=================>                 50%][Progress:=========>                    30%] [Cov:>                                  2%][Progress:=========>                    30%] [Cov:=>                                 3%][Progress:=========>                    30%] [Cov:=====>                             15%][Progress:=========>                    30%] [Cov:=====>                             16%][Progress:=========>                    30%] [Cov:=========>                         27%][Progress:=========>                    30%] [Cov:===========>                       34%][Progress:=========>                    30%] [Cov:============>                      35%][Progress:=========>                    33%] [Cov:==>                                8%][Progress:=========>                    33%] [Cov:=====>                             16%][Progress:=========>                    33%] [Cov:=========>                         28%][Progress:=========>                    33%] [Cov:=============>                     38%][Progress:=========>                    33%] [Cov:==============>                    42%][Progress:=========>                    33%] [Cov:==================>                53%][Progress:=========>                    33%] [Cov:======================>            64%][Progress:=========>                    33%] [Cov:========================>          71%][Progress:==========>                   36%] [Cov:>                                  2%][Progress:==========>                   36%] [Cov:=>                                 3%][Progress:==========>                   36%] [Cov:=====>                             15%][Progress:==========>                   36%] [Cov:=====>                             16%][Progress:==========>                   36%] [Cov:=========>                         27%][Progress:==========>                   36%] [Cov:===========>                       34%][Progress:==========>                   36%] [Cov:============>                      35%][Progress:============>                 43%] [Cov:>                                  2%][Progress:============>                 43%] [Cov:=>                                 3%][Progress:============>                 43%] [Cov:=====>                             15%][Progress:============>                 43%] [Cov:=====>                             16%][Progress:============>                 43%] [Cov:=========>                         27%][Progress:============>                 43%] [Cov:===========>                       34%][Progress:============>                 43%] [Cov:============>                      35%][Progress:============>                 43%] [Cov:==============>                    40%][Progress:============>                 43%] [Cov:==============>                    41%][Progress:============>                 43%] [Cov:========================>          71%][Progress:==============>               48%] [Cov:===========>                       34%][Progress:==============>               48%] [Cov:============>                      36%][Progress:==============>               48%] [Cov:==============>                    41%][Progress:==============>               48%] [Cov:===============>                   44%][Progress:==============>               48%] [Cov:======================>            64%][Progress:==============>               48%] [Cov:=======================>           66%][Progress:==============>               48%] [Cov:========================>          71%][Progress:===============>              50%] [Cov:==========>                        31%][Progress:===============>              50%] [Cov:=================>                 50%][Progress:===============>              50%] [Cov:=========================>         73%][Progress:================>             55%] [Cov:=======================>           68%][Progress:================>             55%] [Cov:=========================>         73%][Progress:================>             55%] [Cov:=========================>         73%][Progress:=================>            58%] [Cov:=======================>           68%][Progress:==================>           60%] [Cov:=======================>           66%][Progress:==================>           63%] [Cov:=======================>           68%][Progress:==================>           63%] [Cov:========================>          69%][Progress:==================>           63%] [Cov:=========================>         73%][Progress:===================>          66%] [Cov:=======================>           67%][Progress:===================>          66%] [Cov:=======================>           68%][Progress:=====================>        70%] [Cov:=======================>           68%][Progress:=====================>        70%] [Cov:=========================>         73%][Progress:=====================>        73%] [Cov:=======================>           67%][Progress:=====================>        73%] [Cov:=======================>           68%][Progress:=====================>        73%] [Cov:=========================>         73%][Progress:======================>       75%] [Cov:=======================>           68%][Progress:======================>       75%] [Cov:=========================>         73%][Progress:======================>       76%] [Cov:=======================>           68%][Progress:======================>       76%] [Cov:=========================>         73%][Progress:=======================>      78%] [Cov:=======================>           66%][Progress:========================>     81%] [Cov:=======================>           67%][Progress:========================>     81%] [Cov:=========================>         73%][Progress:========================>     83%] [Cov:=======================>           66%][Progress:========================>     83%] [Cov:=======================>           68%][Progress:========================>     83%] [Cov:========================>          69%][Progress:=========================>    86%] [Cov:=========================>         73%][Progress:=========================>    86%] [Cov:=========================>         73%][Progress:==========================>   88%] [Cov:========================>          69%][Progress:==========================>   88%] [Cov:=========================>         73%][Progress:===========================>  91%] [Cov:=======================>           66%][Progress:===========================>  91%] [Cov:=========================>         73%][Progress:===========================>  93%] [Cov:=========================>         73%][Progress:============================> 96%] [Cov:========================>          69%][Progress:============================> 96%] [Cov:=========================>         73%][Progress:=============================>98%] [Cov:=========================>         73%][Progress:=============================>98%] [Cov:=========================>         73%][Progress:==============================100%] [Cov:=========================>         73%][Progress:==============================100%] [Cov:=========================>         73%][Progress:==============================100%] [Cov:=========================>         74%]
* Search finished after 62s and 6 generations, 3593 statements, best individual has fitness: 151.0055555555556
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 70%
* Total number of goals: 115
* Number of covered goals: 80
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 66%
* Total number of goals: 64
* Number of covered goals: 42
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 63%
* Total number of goals: 161
* Number of covered goals: 101
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 33%
* Total number of goals: 6
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 66%
* Total number of goals: 64
* Number of covered goals: 42
* Generated 9 tests with total length 213
* Resulting test suite's coverage: 75% (average coverage for all fitness functions)
* Compiling and checking tests
[MASTER] 13:59:27.928 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Writing JUnit test case 'KMeansPlusPlusClusterer_ESTest' to evosuite-tests
* Done!

* Computation finished
