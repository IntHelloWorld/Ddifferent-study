* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer
* Starting client
* Connecting to master process on port 13565
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/patch1-Math-57-SequenceR/Math_57_1_sequencer/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 115
  - Branch 64
  - Exception 0
  - MutationFactory 161
  - Output 6
  - Method 3
  - MethodNoException 3
  - CBranchFitnessFactory 64
* Using seed 1585461134864
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%][Progress:====>                         16%] [Cov:>                                  1%][Progress:====>                         16%] [Cov:====>                              13%][Progress:====>                         16%] [Cov:========>                          24%][Progress:====>                         16%] [Cov:==========>                        31%][Progress:=======>                      26%] [Cov:>                                  0%][Progress:========>                     28%] [Cov:>                                  1%][Progress:========>                     28%] [Cov:====>                              13%][Progress:========>                     28%] [Cov:======>                            19%][Progress:========>                     28%] [Cov:========>                          23%][Progress:========>                     28%] [Cov:========>                          24%][Progress:========>                     28%] [Cov:==========>                        31%][Progress:=========>                    33%] [Cov:=>                                 3%][Progress:=========>                    33%] [Cov:=>                                 5%][Progress:=========>                    33%] [Cov:=====>                             17%][Progress:=========>                    33%] [Cov:======>                            19%][Progress:=========>                    33%] [Cov:==========>                        30%][Progress:=========>                    33%] [Cov:==============>                    42%][Progress:=========>                    33%] [Cov:===============>                   43%][Progress:===========>                  38%] [Cov:>                                  0%][Progress:===========>                  38%] [Cov:====>                              12%][Progress:===========>                  38%] [Cov:=====>                             15%][Progress:===========>                  38%] [Cov:=======>                           22%][Progress:===========>                  38%] [Cov:=========>                         26%][Progress:===========>                  38%] [Cov:============>                      37%][Progress:===========>                  38%] [Cov:=================>                 49%][Progress:===========>                  38%] [Cov:=================>                 50%][Progress:============>                 43%] [Cov:>                                  1%][Progress:============>                 43%] [Cov:====>                              13%][Progress:============>                 43%] [Cov:========>                          24%][Progress:============>                 43%] [Cov:==========>                        31%][Progress:=============>                45%] [Cov:>                                  1%][Progress:=============>                45%] [Cov:====>                              13%][Progress:=============>                45%] [Cov:========>                          24%][Progress:=============>                45%] [Cov:==========>                        31%][Progress:=============>                45%] [Cov:============>                      37%][Progress:=============>                45%] [Cov:=================>                 49%][Progress:=============>                45%] [Cov:=================>                 50%][Progress:=============>                46%] [Cov:>                                  0%][Progress:=============>                46%] [Cov:>                                  1%][Progress:=============>                46%] [Cov:====>                              13%][Progress:=============>                46%] [Cov:======>                            19%][Progress:=============>                46%] [Cov:========>                          23%][Progress:=============>                46%] [Cov:========>                          24%][Progress:=============>                46%] [Cov:==========>                        31%][Progress:================>             56%] [Cov:>                                  0%][Progress:================>             56%] [Cov:====>                              13%][Progress:================>             56%] [Cov:=====>                             15%][Progress:================>             56%] [Cov:======>                            19%][Progress:================>             56%] [Cov:========>                          24%][Progress:================>             56%] [Cov:==========>                        31%][Progress:=================>            58%] [Cov:====>                              13%][Progress:=================>            58%] [Cov:======>                            19%][Progress:=================>            58%] [Cov:========>                          23%][Progress:==================>           63%] [Cov:>                                  0%][Progress:==================>           63%] [Cov:>                                  1%][Progress:==================>           63%] [Cov:====>                              13%][Progress:==================>           63%] [Cov:======>                            19%][Progress:==================>           63%] [Cov:========>                          23%][Progress:==================>           63%] [Cov:=================>                 50%][Progress:===================>          65%] [Cov:========>                          23%][Progress:===================>          65%] [Cov:===============>                   43%][Progress:===================>          65%] [Cov:================>                  46%][Progress:===================>          65%] [Cov:=================>                 49%][Progress:===================>          65%] [Cov:=================>                 50%][Progress:===================>          66%] [Cov:==================>                52%][Progress:====================>         68%] [Cov:=================>                 50%][Progress:====================>         68%] [Cov:==================>                52%][Progress:====================>         68%] [Cov:==================>                52%][Progress:=====================>        70%] [Cov:=================>                 50%][Progress:=====================>        70%] [Cov:==================>                52%][Progress:=====================>        71%] [Cov:==================>                52%][Progress:=====================>        73%] [Cov:==================>                52%][Progress:=====================>        73%] [Cov:==================>                52%][Progress:======================>       75%] [Cov:==================>                52%][Progress:======================>       76%] [Cov:==================>                52%][Progress:=======================>      78%] [Cov:=================>                 50%][Progress:=======================>      78%] [Cov:==================>                52%][Progress:=======================>      78%] [Cov:==================>                52%][Progress:========================>     80%] [Cov:==================>                52%][Progress:========================>     83%] [Cov:==================>                53%][Progress:========================>     83%] [Cov:===================>               55%][Progress:========================>     83%] [Cov:===================>               55%][Progress:=========================>    85%] [Cov:==================>                52%][Progress:=========================>    85%] [Cov:===================>               55%][Progress:=========================>    85%] [Cov:===================>               55%][Progress:===========================>  90%] [Cov:===================>               55%][Progress:===========================>  90%] [Cov:===================>               56%][Progress:===========================>  90%] [Cov:====================>              58%][Progress:===========================>  90%] [Cov:====================>              59%][Progress:===========================>  91%] [Cov:===================>               55%][Progress:============================> 95%] [Cov:===================>               55%][Progress:============================> 95%] [Cov:====================>              59%][Progress:==============================100%] [Cov:====================>              58%][Progress:==============================100%] [Cov:====================>              59%][Progress:==============================100%] [Cov:====================>              58%][Progress:==============================100%] [Cov:====================>              59%][Progress:==============================100%] [Cov:=====================>             62%]
* Search finished after 64s and 9 generations, 4650 statements, best individual has fitness: 273.3497175113303
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 50%
* Total number of goals: 115
* Number of covered goals: 57
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 36%
* Total number of goals: 64
* Number of covered goals: 23
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 46%
* Total number of goals: 161
* Number of covered goals: 74
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 33%
* Total number of goals: 6
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 36%
* Total number of goals: 64
* Number of covered goals: 23
* Generated 6 tests with total length 41
* Resulting test suite's coverage: 63% (average coverage for all fitness functions)
* Compiling and checking tests
* Writing JUnit test case 'KMeansPlusPlusClusterer_ESTest' to evosuite-tests
* Done!

* Computation finished
