* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.math.linear.EigenDecompositionImpl
* Starting client
* Connecting to master process on port 8130
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/patch9-Math-80-CapGen-plausible/Math_80_9-plausible_capgen/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math.linear.EigenDecompositionImpl
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 851
  - Branch 428
  - Exception 0
  - MutationFactory 212
  - Output 28
  - Method 17
  - MethodNoException 17
  - CBranchFitnessFactory 428
* Using seed 1585403475456
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%][Progress:=>                            5%] [Cov:>                                  0%][Progress:=>                            5%] [Cov:>                                  1%][Progress:=>                            5%] [Cov:====>                              13%][Progress:=>                            6%] [Cov:====>                              13%][Progress:==>                           8%] [Cov:>                                  1%][Progress:==>                           8%] [Cov:====>                              13%][Progress:==>                           8%] [Cov:====>                              14%][Progress:==>                           8%] [Cov:=====>                             15%][Progress:===>                          10%] [Cov:>                                  0%][Progress:===>                          10%] [Cov:>                                  1%][Progress:===>                          10%] [Cov:====>                              13%][Progress:===>                          11%] [Cov:>                                  0%][Progress:===>                          11%] [Cov:>                                  1%][Progress:===>                          11%] [Cov:====>                              13%][Progress:===>                          11%] [Cov:====>                              14%][Progress:===>                          13%] [Cov:>                                  0%][Progress:===>                          13%] [Cov:>                                  1%][Progress:===>                          13%] [Cov:====>                              13%][Progress:===>                          13%] [Cov:====>                              14%][Progress:====>                         15%] [Cov:====>                              13%][Progress:====>                         15%] [Cov:====>                              14%][Progress:======>                       20%] [Cov:>                                  0%][Progress:======>                       20%] [Cov:====>                              13%][Progress:======>                       21%] [Cov:====>                              13%][Progress:======>                       21%] [Cov:====>                              14%][Progress:======>                       21%] [Cov:=====>                             16%][Progress:======>                       21%] [Cov:======>                            18%][Progress:======>                       23%] [Cov:>                                  0%][Progress:======>                       23%] [Cov:>                                  1%][Progress:======>                       23%] [Cov:====>                              13%][Progress:======>                       23%] [Cov:====>                              14%][Progress:=======>                      25%] [Cov:====>                              14%][Progress:=======>                      26%] [Cov:>                                  0%][Progress:=======>                      26%] [Cov:>                                  1%][Progress:=======>                      26%] [Cov:====>                              13%][Progress:=======>                      26%] [Cov:====>                              14%][Progress:========>                     28%] [Cov:>                                  0%][Progress:========>                     28%] [Cov:>                                  1%][Progress:========>                     28%] [Cov:====>                              13%][Progress:========>                     28%] [Cov:====>                              14%][Progress:=========>                    30%] [Cov:>                                  0%][Progress:=========>                    30%] [Cov:>                                  1%][Progress:=========>                    30%] [Cov:====>                              13%][Progress:=========>                    30%] [Cov:====>                              14%][Progress:=========>                    30%] [Cov:======>                            18%][Progress:=========>                    31%] [Cov:====>                              14%][Progress:=========>                    33%] [Cov:====>                              14%][Progress:==========>                   35%] [Cov:====>                              13%][Progress:==========>                   35%] [Cov:====>                              14%][Progress:==========>                   36%] [Cov:====>                              14%][Progress:===========>                  38%] [Cov:=====>                             15%][Progress:============>                 40%] [Cov:====>                              13%][Progress:============>                 40%] [Cov:====>                              14%][Progress:============>                 43%] [Cov:======>                            19%][Progress:=============>                45%] [Cov:======>                            18%][Progress:=============>                45%] [Cov:======>                            19%][Progress:=============>                46%] [Cov:======>                            18%][Progress:==============>               48%] [Cov:======>                            18%][Progress:==============>               48%] [Cov:=======>                           20%][Progress:==============>               48%] [Cov:=======>                           22%][Progress:==============>               48%] [Cov:========>                          23%][Progress:==============>               48%] [Cov:========>                          24%][Progress:==============>               48%] [Cov:=========>                         26%][Progress:==============>               48%] [Cov:=========>                         27%][Progress:===============>              50%] [Cov:======>                            18%][Progress:===============>              53%] [Cov:=========>                         27%][Progress:================>             55%] [Cov:=========>                         26%][Progress:================>             56%] [Cov:=========>                         26%][Progress:=================>            58%] [Cov:=========>                         26%][Progress:==================>           61%] [Cov:=========>                         27%][Progress:==================>           63%] [Cov:=========>                         27%][Progress:==================>           63%] [Cov:=========>                         28%][Progress:===================>          65%] [Cov:=========>                         26%][Progress:===================>          65%] [Cov:=========>                         27%][Progress:===================>          66%] [Cov:=========>                         26%][Progress:===================>          66%] [Cov:=========>                         27%][Progress:=====================>        70%] [Cov:=========>                         28%][Progress:=====================>        71%] [Cov:=========>                         27%][Progress:=====================>        71%] [Cov:=========>                         28%][Progress:=====================>        71%] [Cov:==========>                        29%][Progress:=====================>        73%] [Cov:=========>                         28%][Progress:======================>       75%] [Cov:=========>                         27%][Progress:======================>       75%] [Cov:=========>                         28%][Progress:=======================>      78%] [Cov:==========>                        29%][Progress:========================>     80%] [Cov:=========>                         28%][Progress:========================>     80%] [Cov:==========>                        29%][Progress:========================>     81%] [Cov:=========>                         28%][Progress:========================>     81%] [Cov:==========>                        29%][Progress:========================>     83%] [Cov:=========>                         28%][Progress:========================>     83%] [Cov:==========>                        29%][Progress:=========================>    85%] [Cov:==========>                        29%][Progress:=========================>    85%] [Cov:==========>                        30%][Progress:=========================>    86%] [Cov:=========>                         28%][Progress:=========================>    86%] [Cov:==========>                        29%][Progress:=========================>    86%] [Cov:==========>                        30%][Progress:=========================>    86%] [Cov:==========>                        31%][Progress:==========================>   88%] [Cov:=========>                         28%][Progress:==========================>   88%] [Cov:==========>                        29%][Progress:==========================>   88%] [Cov:==========>                        30%][Progress:==========================>   88%] [Cov:==========>                        31%][Progress:==========================>   88%] [Cov:===========>                       32%][Progress:===========================>  90%] [Cov:===========>                       32%][Progress:===========================>  91%] [Cov:===========>                       32%][Progress:===========================>  93%] [Cov:===========>                       34%][Progress:===========================>  93%] [Cov:============>                      36%][Progress:===========================>  93%] [Cov:==============>                    40%][Progress:===========================>  93%] [Cov:==============>                    42%][Progress:============================> 95%] [Cov:===========>                       32%][Progress:============================> 95%] [Cov:===========>                       33%][Progress:============================> 95%] [Cov:===========>                       34%][Progress:============================> 95%] [Cov:============>                      35%][Progress:============================> 96%] [Cov:================>                  48%][Progress:=============================>98%] [Cov:================>                  46%][Progress:=============================>98%] [Cov:================>                  47%][Progress:==============================100%] [Cov:================>                  46%][Progress:==============================100%] [Cov:================>                  48%][Progress:==============================100%] [Cov:================>                  48%][Progress:==============================100%] [Cov:=================>                 51%]
* Search finished after 63s and 9 generations, 7552 statements, best individual has fitness: 2228.02380952381
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 51%
* Total number of goals: 851
* Number of covered goals: 437
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 38%
* Total number of goals: 428
* Number of covered goals: 161
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 40%
* Total number of goals: 212
* Number of covered goals: 85
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 29%
* Total number of goals: 28
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 65%
* Total number of goals: 17
* Number of covered goals: 11
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 59%
* Total number of goals: 17
* Number of covered goals: 10
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 38%
* Total number of goals: 428
* Number of covered goals: 161
* Generated 30 tests with total length 136
* Resulting test suite's coverage: 51% (average coverage for all fitness functions)
* Compiling and checking tests
* Writing JUnit test case 'EigenDecompositionImpl_ESTest' to evosuite-tests
* Done!

* Computation finished
