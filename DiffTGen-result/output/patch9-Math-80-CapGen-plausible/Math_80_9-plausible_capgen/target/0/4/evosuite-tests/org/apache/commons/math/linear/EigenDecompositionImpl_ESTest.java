/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 28 13:45:28 GMT 2020
 */

package org.apache.commons.math.linear;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.linear.Array2DRowRealMatrix;
import org.apache.commons.math.linear.ArrayRealVector;
import org.apache.commons.math.linear.DecompositionSolver;
import org.apache.commons.math.linear.EigenDecompositionImpl;
import org.apache.commons.math.linear.RealMatrix;
import org.apache.commons.math.linear.RealVector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EigenDecompositionImpl_ESTest extends EigenDecompositionImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 2.0;
      doubleArray0[1] = 907.0;
      doubleArray0[2] = 3.0;
      doubleArray0[4] = 2.0;
      doubleArray0[6] = (-314.524117);
      doubleArray0[7] = 0.0;
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0);
      double double0 = arrayRealVector0.getL1Distance(doubleArray0);
      RealMatrix realMatrix0 = arrayRealVector0.outerProduct(doubleArray0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (-314.524117));
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getV();
      double[] doubleArray1 = eigenDecompositionImpl0.getRealEigenvalues();
      int int0 = 573;
      arrayRealVector0.set((-314.524117));
      try { 
        eigenDecompositionImpl0.getEigenvector(573);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 573
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 2.0;
      doubleArray0[1] = 907.0;
      doubleArray0[2] = 3.0;
      doubleArray0[3] = 3545.3162357539;
      doubleArray0[4] = 2.0;
      doubleArray0[5] = 907.0;
      doubleArray0[6] = (-314.524117);
      doubleArray0[7] = 0.0;
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0);
      double double0 = arrayRealVector0.getL1Distance(doubleArray0);
      RealMatrix realMatrix0 = arrayRealVector0.outerProduct(doubleArray0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (-314.524117));
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getV();
      double[] doubleArray1 = eigenDecompositionImpl0.getRealEigenvalues();
      int int0 = 573;
      arrayRealVector0.set((-314.524117));
      try { 
        eigenDecompositionImpl0.getEigenvector(573);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 573
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(31, 31);
      RealMatrix realMatrix0 = array2DRowRealMatrix0.transpose();
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (-1561.008199422));
      // Undeclared exception!
      eigenDecompositionImpl0.getVT();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, 0.0);
      Array2DRowRealMatrix array2DRowRealMatrix1 = new Array2DRowRealMatrix(doubleArray0);
      RealMatrix realMatrix0 = array2DRowRealMatrix0.multiply((RealMatrix) array2DRowRealMatrix1);
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getD();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (-3683.2288);
      doubleArray0[1] = (-2584.5160955);
      doubleArray0[2] = (-1.083429679904497);
      doubleArray0[3] = Double.NEGATIVE_INFINITY;
      doubleArray0[4] = 3780.8034132583;
      doubleArray0[5] = 0.0;
      doubleArray0[6] = 0.0;
      double[] doubleArray1 = new double[6];
      doubleArray1[0] = Double.NEGATIVE_INFINITY;
      doubleArray1[1] = Double.NEGATIVE_INFINITY;
      doubleArray1[2] = (-3683.2288);
      doubleArray1[3] = (-3683.2288);
      doubleArray1[4] = 0.0;
      doubleArray1[5] = Double.NEGATIVE_INFINITY;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 764.8427397450765);
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getD();
      DecompositionSolver decompositionSolver1 = eigenDecompositionImpl0.getSolver();
      double double0 = eigenDecompositionImpl0.getDeterminant();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 77.0;
      doubleArray0[1] = (-1046.7778823941);
      doubleArray0[2] = 4353.2298153;
      doubleArray0[3] = 1068.216618142297;
      doubleArray0[4] = 894.453507414;
      doubleArray0[5] = (-925.54);
      doubleArray0[6] = 2.402575915994021E-10;
      double[] doubleArray1 = new double[6];
      doubleArray1[0] = 4353.2298153;
      doubleArray1[1] = 894.453507414;
      doubleArray1[2] = 894.453507414;
      doubleArray1[3] = (-1046.7778823941);
      doubleArray1[4] = 2.402575915994021E-10;
      doubleArray1[5] = 894.453507414;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-231.91660694633));
      double[] doubleArray2 = eigenDecompositionImpl0.getImagEigenvalues();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (-3683.2288);
      doubleArray0[1] = (-2584.5160955);
      doubleArray0[2] = (-1.0);
      doubleArray0[3] = Double.NEGATIVE_INFINITY;
      doubleArray0[4] = 3780.8034132583;
      doubleArray0[5] = 0.0;
      doubleArray0[6] = 0.0;
      double[] doubleArray1 = new double[6];
      doubleArray1[0] = Double.NEGATIVE_INFINITY;
      doubleArray1[1] = Double.NEGATIVE_INFINITY;
      doubleArray1[2] = (-3683.2288);
      doubleArray1[3] = (-3683.2288);
      doubleArray1[4] = 0.0;
      doubleArray1[5] = Double.NEGATIVE_INFINITY;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 764.8427397450765);
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getD();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (-3683.2288);
      doubleArray0[1] = (-2584.5160955);
      doubleArray0[2] = (-1.0);
      doubleArray0[3] = Double.NEGATIVE_INFINITY;
      doubleArray0[4] = 3780.8034132583;
      doubleArray0[5] = 0.0;
      doubleArray0[6] = 0.0;
      double[] doubleArray1 = new double[6];
      doubleArray1[0] = Double.NEGATIVE_INFINITY;
      doubleArray1[1] = Double.NEGATIVE_INFINITY;
      doubleArray1[2] = (-3683.2288);
      doubleArray1[3] = (-3683.2288);
      doubleArray1[4] = 0.0;
      doubleArray1[5] = Double.NEGATIVE_INFINITY;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 764.8427397450765);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getD();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (-1.0);
      doubleArray0[1] = (-1828.0);
      doubleArray0[2] = 0.08325;
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
      RealMatrix realMatrix0 = array2DRowRealMatrix0.transpose();
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
      } catch(RuntimeException e) {
         //
         // no entry at indices (1, 0) in a 1x3 matrix
         //
         verifyException("org.apache.commons.math.linear.Array2DRowRealMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix();
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, 1459.96965569664);
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.linear.TriDiagonalTransformer", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (-849.9189690962);
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, (-849.9189690962));
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl((RealMatrix) null, 0.0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, 54.0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl((double[]) null, (double[]) null, 885.23960816);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (-1132.32);
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 2.2250738585072014E-308;
      doubleArray0[3] = (-1097.4);
      doubleArray0[4] = Double.NEGATIVE_INFINITY;
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, Double.NEGATIVE_INFINITY);
      } catch(RuntimeException e) {
         //
         // a 5x1 matrix was provided instead of a square matrix
         //
         verifyException("org.apache.commons.math.linear.TriDiagonalTransformer", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (-1439.066887753);
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 2261.2695;
      doubleArray0[4] = 487.03;
      doubleArray0[5] = 0.0;
      doubleArray0[6] = 54.0;
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, 0.0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (-1319.780273);
      doubleArray0[1] = (-2354.290418023251);
      doubleArray0[2] = (-939.5579164181187);
      doubleArray0[3] = 503.05651412766;
      doubleArray0[4] = 0.0;
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0);
      RealMatrix realMatrix0 = arrayRealVector0.outerProduct(doubleArray0);
      RealVector realVector0 = arrayRealVector0.mapAdd((-939.5579164181187));
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (-1104.1191));
      try { 
        eigenDecompositionImpl0.getRealEigenvalue(1806);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1806
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 2.0;
      doubleArray0[1] = 907.0;
      doubleArray0[2] = 3.0;
      doubleArray0[3] = 3545.3162357539;
      doubleArray0[4] = 2.0;
      doubleArray0[5] = 100.0;
      doubleArray0[6] = (-314.524117);
      doubleArray0[7] = 0.0;
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0);
      double double0 = arrayRealVector0.getL1Distance(doubleArray0);
      RealMatrix realMatrix0 = arrayRealVector0.outerProduct(doubleArray0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (-314.524117));
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getV();
      double[] doubleArray1 = eigenDecompositionImpl0.getRealEigenvalues();
      int int0 = 573;
      arrayRealVector0.set((-314.524117));
      try { 
        eigenDecompositionImpl0.getEigenvector(573);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 573
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (-2086.345325636417);
      doubleArray0[1] = 401.3701965476;
      doubleArray0[2] = (-685.160232371);
      doubleArray0[3] = 0.0;
      doubleArray0[4] = 0.25;
      doubleArray0[5] = 1506.7624876136877;
      doubleArray0[6] = 2173.4275;
      doubleArray0[7] = 0.0;
      doubleArray0[8] = 270.56014097141;
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, (-2086.345325636417));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (-2087.30380642794);
      doubleArray0[1] = (-1090.0);
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, (-2087.30380642794));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (-3300.1);
      doubleArray0[1] = 2450.805979363;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = (-806.49);
      doubleArray0[4] = (-1433.8);
      doubleArray0[5] = 1889.5;
      doubleArray0[6] = 1.1102230246251565E-14;
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, 2735.0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int int0 = 31;
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(31, 31);
      RealMatrix realMatrix0 = array2DRowRealMatrix0.transpose();
      double double0 = (-1561.008199422);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (-1561.008199422));
      // Undeclared exception!
      array2DRowRealMatrix0.preMultiply(realMatrix0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix();
      int[] intArray0 = new int[1];
      int int0 = (-2365);
      intArray0[0] = (-2365);
      try { 
        array2DRowRealMatrix0.getSubMatrix(intArray0, intArray0);
      } catch(RuntimeException e) {
         //
         // row index -2,365 out of allowed range [0, -1]
         //
         verifyException("org.apache.commons.math.linear.MatrixUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (-3683.2288);
      doubleArray0[2] = (-1.0);
      doubleArray0[3] = Double.NEGATIVE_INFINITY;
      doubleArray0[4] = 3780.8034132583;
      doubleArray0[5] = 0.0;
      doubleArray0[6] = 0.0;
      double[] doubleArray1 = new double[6];
      doubleArray1[0] = Double.NEGATIVE_INFINITY;
      doubleArray1[1] = Double.NEGATIVE_INFINITY;
      doubleArray1[2] = (-3683.2288);
      doubleArray1[3] = (-3683.2288);
      doubleArray1[4] = 0.0;
      doubleArray1[5] = Double.NEGATIVE_INFINITY;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 764.8427397450765);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getD();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getD();
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      RealMatrix realMatrix2 = eigenDecompositionImpl0.getD();
      RealMatrix realMatrix3 = eigenDecompositionImpl0.getVT();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 2687.60661759;
      doubleArray0[1] = 1.0E-12;
      doubleArray0[2] = 2.2250738585072014E-308;
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = 2.2250738585072014E-308;
      doubleArray1[1] = 1.0E-12;
      doubleArray1[2] = 2.2250738585072014E-308;
      doubleArray1[3] = 1.0E-12;
      doubleArray1[4] = 1.0E-12;
      doubleArray1[5] = 1.0E-12;
      doubleArray1[6] = 2.2250738585072014E-308;
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }
}
