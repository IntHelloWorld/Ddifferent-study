* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.math.linear.EigenDecompositionImpl
* Starting client
* Connecting to master process on port 9034
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/patch9-Math-80-CapGen-plausible/Math_80_9-plausible_capgen/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math.linear.EigenDecompositionImpl
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 851
  - Branch 428
  - Exception 0
  - MutationFactory 212
  - Output 28
  - Method 17
  - MethodNoException 17
  - CBranchFitnessFactory 428
* Using seed 1585402944356
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%][Progress:====>                         16%] [Cov:>                                  0%][Progress:====>                         16%] [Cov:>                                  1%][Progress:====>                         16%] [Cov:====>                              13%][Progress:=====>                        18%] [Cov:>                                  0%][Progress:=====>                        18%] [Cov:>                                  1%][Progress:=====>                        18%] [Cov:====>                              13%][Progress:======>                       20%] [Cov:>                                  0%][Progress:======>                       20%] [Cov:>                                  1%][Progress:======>                       20%] [Cov:====>                              13%][Progress:======>                       20%] [Cov:====>                              14%][Progress:======>                       21%] [Cov:====>                              13%][Progress:========>                     28%] [Cov:>                                  0%][Progress:========>                     28%] [Cov:>                                  1%][Progress:========>                     28%] [Cov:====>                              13%][Progress:========>                     28%] [Cov:====>                              14%][Progress:========>                     28%] [Cov:=====>                             15%][Progress:========>                     28%] [Cov:=====>                             16%][Progress:=========>                    30%] [Cov:>                                  0%][Progress:=========>                    30%] [Cov:>                                  1%][Progress:=========>                    30%] [Cov:====>                              13%][Progress:============>                 40%] [Cov:>                                  0%][Progress:============>                 40%] [Cov:>                                  1%][Progress:============>                 40%] [Cov:====>                              13%][Progress:============>                 40%] [Cov:====>                              14%][Progress:============>                 41%] [Cov:>                                  0%][Progress:============>                 41%] [Cov:>                                  1%][Progress:============>                 41%] [Cov:====>                              13%][Progress:============>                 41%] [Cov:====>                              14%][Progress:============>                 43%] [Cov:>                                  0%][Progress:============>                 43%] [Cov:====>                              12%][Progress:============>                 43%] [Cov:====>                              13%][Progress:==============>               48%] [Cov:>                                  0%][Progress:==============>               48%] [Cov:>                                  1%][Progress:==============>               48%] [Cov:====>                              13%][Progress:==============>               48%] [Cov:====>                              14%][Progress:===============>              50%] [Cov:>                                  0%][Progress:===============>              50%] [Cov:>                                  1%][Progress:===============>              50%] [Cov:====>                              13%][Progress:===============>              50%] [Cov:====>                              14%][Progress:===============>              51%] [Cov:>                                  0%][Progress:===============>              51%] [Cov:>                                  1%][Progress:===============>              51%] [Cov:====>                              13%][Progress:===============>              51%] [Cov:====>                              14%][Progress:===============>              51%] [Cov:=====>                             15%][Progress:================>             56%] [Cov:>                                  0%][Progress:================>             56%] [Cov:>                                  1%][Progress:================>             56%] [Cov:====>                              13%][Progress:================>             56%] [Cov:====>                              14%][Progress:=================>            58%] [Cov:>                                  0%][Progress:=================>            58%] [Cov:>                                  1%][Progress:=================>            58%] [Cov:====>                              13%][Progress:=================>            58%] [Cov:====>                              14%][Progress:=================>            58%] [Cov:=====>                             16%][Progress:=================>            58%] [Cov:======>                            18%][Progress:=================>            58%] [Cov:======>                            19%][Progress:=================>            58%] [Cov:========>                          23%][Progress:=================>            58%] [Cov:=========>                         26%][Progress:=================>            58%] [Cov:=========>                         27%][Progress:==================>           60%] [Cov:====>                              13%][Progress:==================>           60%] [Cov:====>                              14%][Progress:==================>           61%] [Cov:=>                                 5%][Progress:==================>           61%] [Cov:==>                                8%][Progress:==================>           61%] [Cov:=======>                           21%][Progress:==================>           61%] [Cov:========>                          25%][Progress:==================>           61%] [Cov:=========>                         26%][Progress:==================>           61%] [Cov:=========>                         28%][Progress:==================>           61%] [Cov:==========>                        29%][Progress:==================>           61%] [Cov:===========>                       32%][Progress:==================>           61%] [Cov:===========>                       32%][Progress:===================>          65%] [Cov:====>                              14%][Progress:===================>          65%] [Cov:=====>                             15%][Progress:===================>          65%] [Cov:=======>                           20%][Progress:===================>          65%] [Cov:=======>                           21%][Progress:===================>          66%] [Cov:====>                              13%][Progress:===================>          66%] [Cov:=========>                         27%][Progress:===================>          66%] [Cov:===========>                       32%][Progress:====================>         68%] [Cov:=====>                             15%][Progress:=====================>        70%] [Cov:====>                              14%][Progress:=====================>        70%] [Cov:==========>                        29%][Progress:=====================>        71%] [Cov:=====>                             16%][Progress:=====================>        71%] [Cov:=========>                         27%][Progress:======================>       75%] [Cov:==============>                    42%][Progress:======================>       76%] [Cov:==============>                    42%][Progress:=======================>      78%] [Cov:=============>                     39%][Progress:=======================>      78%] [Cov:==============>                    42%][Progress:========================>     80%] [Cov:=============>                     39%][Progress:========================>     81%] [Cov:==============>                    42%][Progress:========================>     83%] [Cov:==============>                    42%][Progress:=========================>    85%] [Cov:==============>                    40%][Progress:=========================>    85%] [Cov:==============>                    42%][Progress:=========================>    86%] [Cov:==============>                    42%][Progress:==========================>   88%] [Cov:==============>                    40%][Progress:==========================>   88%] [Cov:==============>                    42%][Progress:==========================>   88%] [Cov:===============>                   43%][Progress:==========================>   88%] [Cov:===============>                   44%][Progress:===========================>  90%] [Cov:=============>                     39%][Progress:===========================>  90%] [Cov:==============>                    40%][Progress:===========================>  90%] [Cov:==============>                    42%][Progress:===========================>  91%] [Cov:=============>                     39%][Progress:===========================>  91%] [Cov:==============>                    40%][Progress:============================> 95%] [Cov:================>                  47%][Progress:============================> 96%] [Cov:================>                  47%][Progress:=============================>98%] [Cov:===============>                   45%][Progress:==============================100%] [Cov:================>                  47%][Progress:==============================100%] [Cov:================>                  47%][Progress:==============================100%] [Cov:================>                  47%][Progress:==============================100%] [Cov:=================>                 49%]
* Search finished after 64s and 4 generations, 5016 statements, best individual has fitness: 2257.845314899688
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 49%
* Total number of goals: 851
* Number of covered goals: 421
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 35%
* Total number of goals: 428
* Number of covered goals: 151
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 40%
* Total number of goals: 212
* Number of covered goals: 85
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 21%
* Total number of goals: 28
* Number of covered goals: 6
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 65%
* Total number of goals: 17
* Number of covered goals: 11
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 53%
* Total number of goals: 17
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 35%
* Total number of goals: 428
* Number of covered goals: 151
* Generated 23 tests with total length 96
* Resulting test suite's coverage: 49% (average coverage for all fitness functions)
* Compiling and checking tests
* Writing JUnit test case 'EigenDecompositionImpl_ESTest' to evosuite-tests
* Done!

* Computation finished
