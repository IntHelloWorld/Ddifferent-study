/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 28 13:54:02 GMT 2020
 */

package org.apache.commons.math.linear;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.linear.Array2DRowRealMatrix;
import org.apache.commons.math.linear.ArrayRealVector;
import org.apache.commons.math.linear.BlockRealMatrix;
import org.apache.commons.math.linear.DecompositionSolver;
import org.apache.commons.math.linear.DefaultRealMatrixChangingVisitor;
import org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor;
import org.apache.commons.math.linear.EigenDecompositionImpl;
import org.apache.commons.math.linear.OpenMapRealMatrix;
import org.apache.commons.math.linear.OpenMapRealVector;
import org.apache.commons.math.linear.RealMatrix;
import org.apache.commons.math.linear.RealMatrixPreservingVisitor;
import org.apache.commons.math.linear.RealVector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EigenDecompositionImpl_ESTest extends EigenDecompositionImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = -0.0;
      doubleArray0[1] = 1.1102230246251565E-14;
      doubleArray0[2] = (-2908.0);
      doubleArray0[3] = 1.0;
      doubleArray0[4] = 50.253036;
      doubleArray0[5] = 0.0;
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0);
      RealMatrix realMatrix0 = arrayRealVector0.outerProduct(doubleArray0);
      RealVector realVector0 = arrayRealVector0.mapAdd((-2908.0));
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, -0.0);
      ArrayRealVector arrayRealVector1 = new ArrayRealVector();
      int int0 = 0;
      ArrayRealVector arrayRealVector2 = new ArrayRealVector((RealVector) arrayRealVector1);
      arrayRealVector0.set(0, arrayRealVector2);
      RealVector realVector1 = arrayRealVector0.mapPow(0.0);
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix();
      double double0 = eigenDecompositionImpl0.getImagEigenvalue(0);
      try { 
        eigenDecompositionImpl0.getEigenvector(44);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 44
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int int0 = 1;
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(1, 1);
      double double0 = 0.0;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, 0.0);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getD();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getV();
      RealMatrix realMatrix2 = eigenDecompositionImpl0.getD();
      Array2DRowRealMatrix array2DRowRealMatrix1 = new Array2DRowRealMatrix(1, 2);
      RealMatrix realMatrix3 = realMatrix1.multiply((RealMatrix) array2DRowRealMatrix1);
      RealMatrix realMatrix4 = eigenDecompositionImpl0.getV();
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (double) 1;
      try { 
        eigenDecompositionImpl0.getEigenvector(442);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 442
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 1.0;
      doubleArray0[1] = 1696.0;
      doubleArray0[2] = 5750.251148128;
      doubleArray0[3] = (-2200.18);
      doubleArray0[4] = 2643.1493487216;
      doubleArray0[5] = (-1698.333396388);
      doubleArray0[6] = 1.0;
      doubleArray0[7] = 0.25;
      doubleArray0[8] = 1613.8;
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0);
      RealMatrix realMatrix0 = arrayRealVector0.outerProduct(doubleArray0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (-4857.23594458928));
      double double0 = eigenDecompositionImpl0.getDeterminant();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      DefaultRealMatrixChangingVisitor defaultRealMatrixChangingVisitor0 = new DefaultRealMatrixChangingVisitor();
      double[][] doubleArray1 = new double[6][6];
      doubleArray1[0] = doubleArray0;
      doubleArray1[1] = doubleArray0;
      doubleArray1[2] = doubleArray0;
      doubleArray1[3] = doubleArray0;
      doubleArray1[4] = doubleArray0;
      doubleArray1[5] = doubleArray0;
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray1);
      RealMatrix realMatrix0 = array2DRowRealMatrix0.createMatrix(4, 6);
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 6);
      } catch(RuntimeException e) {
         //
         // no entry at indices (4, 0) in a 4x6 matrix
         //
         verifyException("org.apache.commons.math.linear.Array2DRowRealMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BlockRealMatrix blockRealMatrix0 = new BlockRealMatrix(981, 981);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(blockRealMatrix0, 912.3753278);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = -0.0;
      doubleArray0[1] = 1.1102230246251565E-14;
      doubleArray0[2] = (-2908.0);
      doubleArray0[3] = 0.9053207038854777;
      doubleArray0[4] = 50.253036;
      doubleArray0[5] = 0.0;
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0);
      RealMatrix realMatrix0 = arrayRealVector0.outerProduct(doubleArray0);
      RealVector realVector0 = arrayRealVector0.mapAdd((-2908.0));
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, -0.0);
      } catch(RuntimeException e) {
         //
         // cannot solve degree 3 equation
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 1.0E-12;
      doubleArray0[1] = (-438.477144158611);
      doubleArray0[2] = (-3273.796);
      doubleArray0[3] = 0.0;
      doubleArray0[4] = 0.0;
      doubleArray0[5] = 0.0;
      doubleArray0[6] = 0.333;
      double[] doubleArray1 = new double[6];
      doubleArray1[0] = (-3273.796);
      doubleArray1[1] = 0.333;
      doubleArray1[2] = 0.0;
      doubleArray1[3] = (-438.477144158611);
      doubleArray1[4] = (-438.477144158611);
      doubleArray1[5] = 0.0;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      try { 
        eigenDecompositionImpl0.getEigenvector((-2373));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2373
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(9, 9);
      RealMatrix realMatrix0 = array2DRowRealMatrix0.scalarMultiply((-2094.8));
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (-2020.0522875320198));
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getV();
      try { 
        eigenDecompositionImpl0.getRealEigenvalue(9);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 2538.573558077813;
      doubleArray0[1] = (-450.996);
      doubleArray0[2] = 1460.0362790566903;
      doubleArray0[3] = 2888.2159244681097;
      doubleArray0[4] = 0.0;
      doubleArray0[5] = 0.0;
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, (-1.0));
      } catch(RuntimeException e) {
         //
         // a 6x1 matrix was provided instead of a square matrix
         //
         verifyException("org.apache.commons.math.linear.TriDiagonalTransformer", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ArrayRealVector arrayRealVector0 = new ArrayRealVector();
      ArrayRealVector arrayRealVector1 = new ArrayRealVector((RealVector) arrayRealVector0);
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = (-254.3465304);
      doubleArray0[2] = (-1.0);
      ArrayRealVector arrayRealVector2 = new ArrayRealVector(arrayRealVector1, doubleArray0);
      ArrayRealVector arrayRealVector3 = new ArrayRealVector(arrayRealVector2, arrayRealVector0);
      RealMatrix realMatrix0 = arrayRealVector3.outerProduct(doubleArray0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 1516.8759727;
      doubleArray0[1] = 100.0;
      doubleArray0[2] = Double.NaN;
      doubleArray0[3] = Double.NaN;
      doubleArray0[4] = 0.0;
      doubleArray0[5] = 2824.3753232507333;
      doubleArray0[6] = 0.0;
      doubleArray0[7] = (-348.08955195);
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
      RealMatrix realMatrix0 = array2DRowRealMatrix0.getRowMatrix(3);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (-1422.5277115));
      double double0 = eigenDecompositionImpl0.getDeterminant();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, 1134.0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double[][] doubleArray0 = new double[2][0];
      double[] doubleArray1 = new double[6];
      doubleArray1[0] = (-2275.72479896349);
      doubleArray1[1] = (-2076.726);
      doubleArray1[2] = 0.0;
      doubleArray1[3] = 1016.0483;
      doubleArray1[4] = (-1.0);
      doubleArray1[5] = (-765.33079742362);
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[6];
      doubleArray2[0] = (-1.0);
      doubleArray2[1] = 179.2868;
      doubleArray2[2] = 1016.0483;
      doubleArray2[3] = (-999.0489336822);
      doubleArray2[4] = (-765.33079742362);
      doubleArray2[5] = 0.0;
      doubleArray0[1] = doubleArray2;
      BlockRealMatrix blockRealMatrix0 = new BlockRealMatrix(doubleArray0);
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(blockRealMatrix0, (-2157.6262535));
      } catch(RuntimeException e) {
         //
         // eigen decomposition of assymetric matrices not supported yet
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, 0.0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(46, 46, 0.0);
      OpenMapRealVector openMapRealVector1 = new OpenMapRealVector(46);
      OpenMapRealMatrix openMapRealMatrix0 = openMapRealVector0.outerproduct(openMapRealVector1);
      openMapRealVector0.setEpsilon(0.0);
      OpenMapRealMatrix openMapRealMatrix1 = new OpenMapRealMatrix(openMapRealMatrix0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(openMapRealMatrix1, (-234.5556));
      double[] doubleArray0 = eigenDecompositionImpl0.getRealEigenvalues();
      // Undeclared exception!
      eigenDecompositionImpl0.getEigenvector((-3238));
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix();
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, (-3304.411));
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.linear.TriDiagonalTransformer", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl((double[]) null, (double[]) null, 854.06297);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl((RealMatrix) null, (-4568.5338));
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 3407.879914226718;
      doubleArray0[1] = (-3255.228549416);
      doubleArray0[2] = 5942.616905311;
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, 5942.616905311);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = -0.0;
      doubleArray0[1] = 1.1102230246251565E-14;
      doubleArray0[2] = (-2908.0);
      doubleArray0[3] = 1.0;
      doubleArray0[4] = 50.253036;
      doubleArray0[5] = 0.0;
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0);
      RealMatrix realMatrix0 = arrayRealVector0.outerProduct(doubleArray0);
      RealVector realVector0 = arrayRealVector0.mapAdd((-2908.0));
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, -0.0);
      RealVector realVector1 = arrayRealVector0.mapInv();
      int int0 = 0;
      ArrayRealVector arrayRealVector1 = new ArrayRealVector(realVector1);
      arrayRealVector0.set(0, arrayRealVector1);
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getVT();
      try { 
        eigenDecompositionImpl0.getEigenvector(44);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 44
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 855.7133951027;
      doubleArray0[1] = (-3008.4917536987);
      doubleArray0[2] = (-236.1914231402);
      doubleArray0[3] = (-236.1914231402);
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, (-236.1914231402));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int int0 = 1;
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(1, 1);
      double double0 = 0.0;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, 0.0);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getV();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getD();
      RealMatrix realMatrix2 = eigenDecompositionImpl0.getV();
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (double) 1;
      doubleArray0[1] = 0.0;
      try { 
        array2DRowRealMatrix0.setColumnMatrix((-606), realMatrix0);
      } catch(RuntimeException e) {
         //
         // column index -606 out of allowed range [0, 0]
         //
         verifyException("org.apache.commons.math.linear.MatrixUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = 5416.3706;
      int int0 = 7;
      OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(52, 7);
      int int1 = 9;
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, 4064.35542);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 5271.3;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = 2.0;
      doubleArray0[5] = 476.8;
      doubleArray0[6] = (-773.977421);
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
      DefaultRealMatrixPreservingVisitor defaultRealMatrixPreservingVisitor0 = new DefaultRealMatrixPreservingVisitor();
      double double0 = array2DRowRealMatrix0.walkInOptimizedOrder((RealMatrixPreservingVisitor) defaultRealMatrixPreservingVisitor0);
      RealMatrix realMatrix0 = array2DRowRealMatrix0.getRowMatrix(0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 2.2250738585072014E-308);
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getVT();
      String string0 = array2DRowRealMatrix0.toString();
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      double double1 = eigenDecompositionImpl0.getRealEigenvalue(0);
      int int0 = 1143;
      try { 
        eigenDecompositionImpl0.getImagEigenvalue(1143);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1143
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }
}
