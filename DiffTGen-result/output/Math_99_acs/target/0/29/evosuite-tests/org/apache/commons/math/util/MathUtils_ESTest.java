/*
 * This file was automatically generated by EvoSuite
 * Mon Mar 23 07:55:51 GMT 2020
 */

package org.apache.commons.math.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.util.MathUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class MathUtils_ESTest extends MathUtils_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 15 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I13 Branch 140 IFLT L1196 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I17 Branch 141 IFLE L1196 - true
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I13 Branch 140 IFLT L1196 - false in context: org.apache.commons.math.util.MathUtils:subAndCheck(II)I
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I17 Branch 141 IFLE L1196 - true in context: org.apache.commons.math.util.MathUtils:subAndCheck(II)I
   * Goal 5. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: Line 1195
   * Goal 6. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: Line 1196
   * Goal 7. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: Line 1199
   * Goal 8. org.apache.commons.math.util.MathUtils.subAndCheck(II)I
   * Goal 9. org.apache.commons.math.util.MathUtils.subAndCheck(II)I
   * Goal 10. Weak Mutation 1546: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1195 - ReplaceArithmeticOperator - -> +
   * Goal 11. Weak Mutation 1548: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1195 - ReplaceArithmeticOperator - -> *
   * Goal 12. Weak Mutation 1549: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1195 - ReplaceArithmeticOperator - -> /
   * Goal 13. Weak Mutation 1557: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1196 - ReplaceComparisonOperator < -> !=
   * Goal 14. Weak Mutation 1566: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1196 - ReplaceComparisonOperator <= -> ==
   * Goal 15. org.apache.commons.math.util.MathUtils.subAndCheck(II)I:zero
   */

  @Test
  public void test000()  throws Throwable  {
      int int0 = MathUtils.subAndCheck(5, 5);
  }

  //Test case number: 1
  /*
   * 15 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I13 Branch 140 IFLT L1196 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I17 Branch 141 IFLE L1196 - true
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I13 Branch 140 IFLT L1196 - false in context: org.apache.commons.math.util.MathUtils:subAndCheck(II)I
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I17 Branch 141 IFLE L1196 - true in context: org.apache.commons.math.util.MathUtils:subAndCheck(II)I
   * Goal 5. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: Line 1195
   * Goal 6. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: Line 1196
   * Goal 7. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: Line 1199
   * Goal 8. org.apache.commons.math.util.MathUtils.subAndCheck(II)I
   * Goal 9. org.apache.commons.math.util.MathUtils.subAndCheck(II)I
   * Goal 10. Weak Mutation 1546: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1195 - ReplaceArithmeticOperator - -> +
   * Goal 11. Weak Mutation 1548: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1195 - ReplaceArithmeticOperator - -> *
   * Goal 12. Weak Mutation 1549: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1195 - ReplaceArithmeticOperator - -> /
   * Goal 13. Weak Mutation 1557: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1196 - ReplaceComparisonOperator < -> !=
   * Goal 14. Weak Mutation 1566: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1196 - ReplaceComparisonOperator <= -> ==
   * Goal 15. org.apache.commons.math.util.MathUtils.subAndCheck(II)I:positive
   */

  @Test
  public void test001()  throws Throwable  {
      int int0 = MathUtils.subAndCheck(651, 414);
  }

  //Test case number: 2
  /*
   * 11 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.sinh(D)D: root-Branch
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.sinh(D)D: root-Branch in context: org.apache.commons.math.util.MathUtils:sinh(D)D
   * Goal 3. org.apache.commons.math.util.MathUtils.sinh(D)D: Line 1181
   * Goal 4. org.apache.commons.math.util.MathUtils.sinh(D)D
   * Goal 5. org.apache.commons.math.util.MathUtils.sinh(D)D
   * Goal 6. Weak Mutation 1528: org.apache.commons.math.util.MathUtils.sinh(D)D:1181 - ReplaceArithmeticOperator - -> +
   * Goal 7. Weak Mutation 1530: org.apache.commons.math.util.MathUtils.sinh(D)D:1181 - ReplaceArithmeticOperator - -> *
   * Goal 8. Weak Mutation 1531: org.apache.commons.math.util.MathUtils.sinh(D)D:1181 - ReplaceArithmeticOperator - -> /
   * Goal 9. Weak Mutation 1536: org.apache.commons.math.util.MathUtils.sinh(D)D:1181 - ReplaceArithmeticOperator / -> +
   * Goal 10. Weak Mutation 1538: org.apache.commons.math.util.MathUtils.sinh(D)D:1181 - ReplaceArithmeticOperator / -> -
   * Goal 11. org.apache.commons.math.util.MathUtils.sinh(D)D:zero
   */

  @Test
  public void test002()  throws Throwable  {
      double double0 = MathUtils.sinh(0.0);
  }

  //Test case number: 3
  /*
   * 11 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.sinh(D)D: root-Branch
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.sinh(D)D: root-Branch in context: org.apache.commons.math.util.MathUtils:sinh(D)D
   * Goal 3. org.apache.commons.math.util.MathUtils.sinh(D)D: Line 1181
   * Goal 4. org.apache.commons.math.util.MathUtils.sinh(D)D
   * Goal 5. org.apache.commons.math.util.MathUtils.sinh(D)D
   * Goal 6. Weak Mutation 1528: org.apache.commons.math.util.MathUtils.sinh(D)D:1181 - ReplaceArithmeticOperator - -> +
   * Goal 7. Weak Mutation 1529: org.apache.commons.math.util.MathUtils.sinh(D)D:1181 - ReplaceArithmeticOperator - -> %
   * Goal 8. Weak Mutation 1530: org.apache.commons.math.util.MathUtils.sinh(D)D:1181 - ReplaceArithmeticOperator - -> *
   * Goal 9. Weak Mutation 1531: org.apache.commons.math.util.MathUtils.sinh(D)D:1181 - ReplaceArithmeticOperator - -> /
   * Goal 10. Weak Mutation 1537: org.apache.commons.math.util.MathUtils.sinh(D)D:1181 - ReplaceArithmeticOperator / -> %
   * Goal 11. org.apache.commons.math.util.MathUtils.sinh(D)D:negative
   */

  @Test
  public void test003()  throws Throwable  {
      double double0 = MathUtils.sinh((-2416L));
  }

  //Test case number: 4
  /*
   * 60 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.round(FII)F: root-Branch
   * Goal 2. org.apache.commons.math.util.MathUtils.round(FI)F: root-Branch
   * Goal 3. org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 80 IFEQ L653 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 81 IFLT L656 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I4 Branch 98 IFNE L838 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I7 Branch 99 IFEQ L838 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I17 Branch 100 IFNE L840 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I23 Branch 101 IFGE L841 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 109 TABLESWITCH L1010 Case 0 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 110 TABLESWITCH L1010 Case 1 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 111 TABLESWITCH L1010 Case 2 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 112 TABLESWITCH L1010 Case 3 - false
   * Goal 13. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 113 TABLESWITCH L1010 Case 4 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 114 TABLESWITCH L1010 Case 5 - false
   * Goal 15. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 115 TABLESWITCH L1010 Case 6 - false
   * Goal 16. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 116 TABLESWITCH L1010 Case 7 - false
   * Goal 17. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 117 TABLESWITCH L1010 Default-Case - false
   * Goal 18. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I175 Branch 124 IFLT L1058 - true
   * Goal 19. Branch org.apache.commons.math.util.MathUtils.round(FI)F: root-Branch in context: org.apache.commons.math.util.MathUtils:round(FI)F
   * Goal 20. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 112 TABLESWITCH L1010 Case 3 - false in context: 
   * Goal 21. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 110 TABLESWITCH L1010 Case 1 - false in context: 
   * Goal 22. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 116 TABLESWITCH L1010 Case 7 - false in context: 
   * Goal 23. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 114 TABLESWITCH L1010 Case 5 - false in context: 
   * Goal 24. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 115 TABLESWITCH L1010 Case 6 - false in context: 
   * Goal 25. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 109 TABLESWITCH L1010 Case 0 - false in context: 
   * Goal 26. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 113 TABLESWITCH L1010 Case 4 - true in context: 
   * Goal 27. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 111 TABLESWITCH L1010 Case 2 - false in context: 
   * Goal 28. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 117 TABLESWITCH L1010 Default-Case - false in context: 
   * Goal 29. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I175 Branch 124 IFLT L1058 - true in context: 
   * Goal 30. org.apache.commons.math.util.MathUtils.indicator(F)F: Line 653
   * Goal 31. org.apache.commons.math.util.MathUtils.indicator(F)F: Line 656
   * Goal 32. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 838
   * Goal 33. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 840
   * Goal 34. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 841
   * Goal 35. org.apache.commons.math.util.MathUtils.round(FI)F: Line 975
   * Goal 36. org.apache.commons.math.util.MathUtils.round(FII)F: Line 991
   * Goal 37. org.apache.commons.math.util.MathUtils.round(FII)F: Line 992
   * Goal 38. org.apache.commons.math.util.MathUtils.round(FII)F: Line 993
   * Goal 39. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1010
   * Goal 40. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1056
   * Goal 41. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1057
   * Goal 42. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1058
   * Goal 43. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1061
   * Goal 44. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1063
   * Goal 45. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1076
   * Goal 46. org.apache.commons.math.util.MathUtils.round(FI)F
   * Goal 47. org.apache.commons.math.util.MathUtils.round(FI)F
   * Goal 48. Weak Mutation 828: org.apache.commons.math.util.MathUtils.indicator(F)F:653 - ReplaceComparisonOperator == -> !=
   * Goal 49. Weak Mutation 838: org.apache.commons.math.util.MathUtils.indicator(F)F:656 - ReplaceComparisonOperator < -> <=
   * Goal 50. Weak Mutation 1038: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:838 - ReplaceComparisonOperator != -> ==
   * Goal 51. Weak Mutation 1040: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:838 - ReplaceComparisonOperator == -> !=
   * Goal 52. Weak Mutation 1045: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:840 - ReplaceComparisonOperator != -> -1
   * Goal 53. Weak Mutation 1052: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:841 - ReplaceComparisonOperator >= -> ==
   * Goal 54. Weak Mutation 1304: org.apache.commons.math.util.MathUtils.round(FII)F:992 - ReplaceArithmeticOperator * -> +
   * Goal 55. Weak Mutation 1306: org.apache.commons.math.util.MathUtils.round(FII)F:992 - ReplaceArithmeticOperator * -> -
   * Goal 56. Weak Mutation 1310: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator * -> +
   * Goal 57. Weak Mutation 1312: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator * -> -
   * Goal 58. Weak Mutation 1319: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator / -> +
   * Goal 59. Weak Mutation 1321: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator / -> -
   * Goal 60. org.apache.commons.math.util.MathUtils.round(FI)F:zero
   */

  @Test
  public void test004()  throws Throwable  {
      float float0 = MathUtils.round(0.0F, (-9));
  }

  //Test case number: 5
  /*
   * 7 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.round(DII)D: Line 952
   * Goal 2. org.apache.commons.math.util.MathUtils.round(DII)D: Line 953
   * Goal 3. org.apache.commons.math.util.MathUtils.round(DII)D: Line 954
   * Goal 4. org.apache.commons.math.util.MathUtils.round(DII)D: Line 955
   * Goal 5. org.apache.commons.math.util.MathUtils.round(DII)D
   * Goal 6. org.apache.commons.math.util.MathUtils.round(DII)D
   * Goal 7. org.apache.commons.math.util.MathUtils.round(DII)D:zero
   */

  @Test
  public void test005()  throws Throwable  {
      double double0 = MathUtils.round((double) (-524), (-524), 6);
  }

  //Test case number: 6
  /*
   * 7 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.round(DII)D: Line 952
   * Goal 2. org.apache.commons.math.util.MathUtils.round(DII)D: Line 953
   * Goal 3. org.apache.commons.math.util.MathUtils.round(DII)D: Line 954
   * Goal 4. org.apache.commons.math.util.MathUtils.round(DII)D: Line 955
   * Goal 5. org.apache.commons.math.util.MathUtils.round(DII)D
   * Goal 6. org.apache.commons.math.util.MathUtils.round(DII)D
   * Goal 7. org.apache.commons.math.util.MathUtils.round(DII)D:negative
   */

  @Test
  public void test006()  throws Throwable  {
      double double0 = MathUtils.round((-281.8456368), 0, 1);
  }

  //Test case number: 7
  /*
   * 10 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.round(DI)D: root-Branch
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.round(DI)D: root-Branch in context: org.apache.commons.math.util.MathUtils:round(DI)D
   * Goal 3. org.apache.commons.math.util.MathUtils.round(DI)D: Line 935
   * Goal 4. org.apache.commons.math.util.MathUtils.round(DII)D: Line 952
   * Goal 5. org.apache.commons.math.util.MathUtils.round(DII)D: Line 953
   * Goal 6. org.apache.commons.math.util.MathUtils.round(DII)D: Line 954
   * Goal 7. org.apache.commons.math.util.MathUtils.round(DII)D: Line 955
   * Goal 8. org.apache.commons.math.util.MathUtils.round(DI)D
   * Goal 9. org.apache.commons.math.util.MathUtils.round(DI)D
   * Goal 10. org.apache.commons.math.util.MathUtils.round(DI)D:zero
   */

  @Test
  public void test007()  throws Throwable  {
      double double0 = MathUtils.round(0.0, 572);
  }

  //Test case number: 8
  /*
   * 10 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.round(DI)D: root-Branch
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.round(DI)D: root-Branch in context: org.apache.commons.math.util.MathUtils:round(DI)D
   * Goal 3. org.apache.commons.math.util.MathUtils.round(DI)D: Line 935
   * Goal 4. org.apache.commons.math.util.MathUtils.round(DII)D: Line 952
   * Goal 5. org.apache.commons.math.util.MathUtils.round(DII)D: Line 953
   * Goal 6. org.apache.commons.math.util.MathUtils.round(DII)D: Line 954
   * Goal 7. org.apache.commons.math.util.MathUtils.round(DII)D: Line 955
   * Goal 8. org.apache.commons.math.util.MathUtils.round(DI)D
   * Goal 9. org.apache.commons.math.util.MathUtils.round(DI)D
   * Goal 10. org.apache.commons.math.util.MathUtils.round(DI)D:negative
   */

  @Test
  public void test008()  throws Throwable  {
      double double0 = MathUtils.round((-1.0), 0);
  }

  //Test case number: 9
  /*
   * 20 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D: root-Branch
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D: root-Branch in context: org.apache.commons.math.util.MathUtils:normalizeAngle(DD)D
   * Goal 3. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D: Line 922
   * Goal 4. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D
   * Goal 5. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D
   * Goal 6. Weak Mutation 1236: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:922 - ReplaceArithmeticOperator + -> %
   * Goal 7. Weak Mutation 1237: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:922 - ReplaceArithmeticOperator + -> -
   * Goal 8. Weak Mutation 1238: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:922 - ReplaceArithmeticOperator + -> *
   * Goal 9. Weak Mutation 1239: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:922 - ReplaceArithmeticOperator + -> /
   * Goal 10. Weak Mutation 1242: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:922 - ReplaceArithmeticOperator - -> %
   * Goal 11. Weak Mutation 1244: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:922 - ReplaceArithmeticOperator - -> /
   * Goal 12. Weak Mutation 1250: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:922 - ReplaceArithmeticOperator / -> +
   * Goal 13. Weak Mutation 1251: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:922 - ReplaceArithmeticOperator / -> %
   * Goal 14. Weak Mutation 1252: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:922 - ReplaceArithmeticOperator / -> -
   * Goal 15. Weak Mutation 1253: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:922 - ReplaceArithmeticOperator / -> *
   * Goal 16. Weak Mutation 1255: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:922 - ReplaceArithmeticOperator * -> %
   * Goal 17. Weak Mutation 1257: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:922 - ReplaceArithmeticOperator * -> /
   * Goal 18. Weak Mutation 1259: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:922 - ReplaceArithmeticOperator - -> %
   * Goal 19. Weak Mutation 1261: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:922 - ReplaceArithmeticOperator - -> /
   * Goal 20. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:zero
   */

  @Test
  public void test009()  throws Throwable  {
      double double0 = MathUtils.normalizeAngle(0.0, 0.0);
  }

  //Test case number: 10
  /*
   * 26 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D: root-Branch
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D: root-Branch in context: org.apache.commons.math.util.MathUtils:normalizeAngle(DD)D
   * Goal 3. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D: Line 922
   * Goal 4. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D
   * Goal 5. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D
   * Goal 6. Weak Mutation 1236: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:922 - ReplaceArithmeticOperator + -> %
   * Goal 7. Weak Mutation 1237: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:922 - ReplaceArithmeticOperator + -> -
   * Goal 8. Weak Mutation 1238: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:922 - ReplaceArithmeticOperator + -> *
   * Goal 9. Weak Mutation 1239: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:922 - ReplaceArithmeticOperator + -> /
   * Goal 10. Weak Mutation 1241: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:922 - ReplaceArithmeticOperator - -> +
   * Goal 11. Weak Mutation 1242: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:922 - ReplaceArithmeticOperator - -> %
   * Goal 12. Weak Mutation 1243: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:922 - ReplaceArithmeticOperator - -> *
   * Goal 13. Weak Mutation 1244: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:922 - ReplaceArithmeticOperator - -> /
   * Goal 14. Weak Mutation 1250: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:922 - ReplaceArithmeticOperator / -> +
   * Goal 15. Weak Mutation 1251: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:922 - ReplaceArithmeticOperator / -> %
   * Goal 16. Weak Mutation 1252: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:922 - ReplaceArithmeticOperator / -> -
   * Goal 17. Weak Mutation 1253: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:922 - ReplaceArithmeticOperator / -> *
   * Goal 18. Weak Mutation 1254: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:922 - ReplaceArithmeticOperator * -> +
   * Goal 19. Weak Mutation 1255: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:922 - ReplaceArithmeticOperator * -> %
   * Goal 20. Weak Mutation 1256: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:922 - ReplaceArithmeticOperator * -> -
   * Goal 21. Weak Mutation 1257: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:922 - ReplaceArithmeticOperator * -> /
   * Goal 22. Weak Mutation 1258: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:922 - ReplaceArithmeticOperator - -> +
   * Goal 23. Weak Mutation 1259: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:922 - ReplaceArithmeticOperator - -> %
   * Goal 24. Weak Mutation 1260: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:922 - ReplaceArithmeticOperator - -> *
   * Goal 25. Weak Mutation 1261: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:922 - ReplaceArithmeticOperator - -> /
   * Goal 26. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:negative
   */

  @Test
  public void test010()  throws Throwable  {
      double double0 = MathUtils.normalizeAngle((byte)0, (-954.0436476216));
  }

  //Test case number: 11
  /*
   * 14 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 88 IFLT L757 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I17 Branch 89 IFLE L757 - true
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I17 Branch 89 IFLE L757 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(II)I
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 88 IFLT L757 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(II)I
   * Goal 5. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 756
   * Goal 6. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 757
   * Goal 7. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 760
   * Goal 8. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I
   * Goal 9. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I
   * Goal 10. Weak Mutation 937: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:756 - ReplaceArithmeticOperator * -> %
   * Goal 11. Weak Mutation 939: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:756 - ReplaceArithmeticOperator * -> /
   * Goal 12. Weak Mutation 947: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:757 - ReplaceComparisonOperator < -> !=
   * Goal 13. Weak Mutation 956: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:757 - ReplaceComparisonOperator <= -> ==
   * Goal 14. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:zero
   */

  @Test
  public void test011()  throws Throwable  {
      int int0 = MathUtils.mulAndCheck((int) (byte)1, 0);
  }

  //Test case number: 12
  /*
   * 16 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 88 IFLT L757 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I17 Branch 89 IFLE L757 - true
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I17 Branch 89 IFLE L757 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(II)I
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 88 IFLT L757 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(II)I
   * Goal 5. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 756
   * Goal 6. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 757
   * Goal 7. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 760
   * Goal 8. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I
   * Goal 9. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I
   * Goal 10. Weak Mutation 936: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:756 - ReplaceArithmeticOperator * -> +
   * Goal 11. Weak Mutation 937: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:756 - ReplaceArithmeticOperator * -> %
   * Goal 12. Weak Mutation 938: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:756 - ReplaceArithmeticOperator * -> -
   * Goal 13. Weak Mutation 939: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:756 - ReplaceArithmeticOperator * -> /
   * Goal 14. Weak Mutation 947: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:757 - ReplaceComparisonOperator < -> !=
   * Goal 15. Weak Mutation 956: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:757 - ReplaceComparisonOperator <= -> ==
   * Goal 16. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:negative
   */

  @Test
  public void test012()  throws Throwable  {
      int int0 = MathUtils.mulAndCheck(1, (-1865));
  }

  //Test case number: 13
  /*
   * 9 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.log(DD)D: root-Branch
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.log(DD)D: root-Branch in context: org.apache.commons.math.util.MathUtils:log(DD)D
   * Goal 3. org.apache.commons.math.util.MathUtils.log(DD)D: Line 742
   * Goal 4. org.apache.commons.math.util.MathUtils.log(DD)D
   * Goal 5. org.apache.commons.math.util.MathUtils.log(DD)D
   * Goal 6. Weak Mutation 926: org.apache.commons.math.util.MathUtils.log(DD)D:742 - ReplaceArithmeticOperator / -> +
   * Goal 7. Weak Mutation 928: org.apache.commons.math.util.MathUtils.log(DD)D:742 - ReplaceArithmeticOperator / -> -
   * Goal 8. Weak Mutation 929: org.apache.commons.math.util.MathUtils.log(DD)D:742 - ReplaceArithmeticOperator / -> *
   * Goal 9. org.apache.commons.math.util.MathUtils.log(DD)D:zero
   */

  @Test
  public void test013()  throws Throwable  {
      double double0 = MathUtils.log(0.0, 1.0);
  }

  //Test case number: 14
  /*
   * 10 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.log(DD)D: root-Branch
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.log(DD)D: root-Branch in context: org.apache.commons.math.util.MathUtils:log(DD)D
   * Goal 3. org.apache.commons.math.util.MathUtils.log(DD)D: Line 742
   * Goal 4. org.apache.commons.math.util.MathUtils.log(DD)D
   * Goal 5. org.apache.commons.math.util.MathUtils.log(DD)D
   * Goal 6. Weak Mutation 926: org.apache.commons.math.util.MathUtils.log(DD)D:742 - ReplaceArithmeticOperator / -> +
   * Goal 7. Weak Mutation 927: org.apache.commons.math.util.MathUtils.log(DD)D:742 - ReplaceArithmeticOperator / -> %
   * Goal 8. Weak Mutation 928: org.apache.commons.math.util.MathUtils.log(DD)D:742 - ReplaceArithmeticOperator / -> -
   * Goal 9. Weak Mutation 929: org.apache.commons.math.util.MathUtils.log(DD)D:742 - ReplaceArithmeticOperator / -> *
   * Goal 10. org.apache.commons.math.util.MathUtils.log(DD)D:negative
   */

  @Test
  public void test014()  throws Throwable  {
      double double0 = MathUtils.log(1.1102230246251565E-16, 928.7489723213536);
  }

  //Test case number: 15
  /*
   * 6 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.hash([D)I: root-Branch
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.hash([D)I: root-Branch in context: org.apache.commons.math.util.MathUtils:hash([D)I
   * Goal 3. org.apache.commons.math.util.MathUtils.hash([D)I: Line 616
   * Goal 4. org.apache.commons.math.util.MathUtils.hash([D)I
   * Goal 5. org.apache.commons.math.util.MathUtils.hash([D)I
   * Goal 6. org.apache.commons.math.util.MathUtils.hash([D)I:negative
   */

  @Test
  public void test015()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) (byte)1;
      int int0 = MathUtils.hash(doubleArray0);
  }

  //Test case number: 16
  /*
   * 6 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.hash(D)I: root-Branch
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.hash(D)I: root-Branch in context: org.apache.commons.math.util.MathUtils:hash(D)I
   * Goal 3. org.apache.commons.math.util.MathUtils.hash(D)I: Line 605
   * Goal 4. org.apache.commons.math.util.MathUtils.hash(D)I
   * Goal 5. org.apache.commons.math.util.MathUtils.hash(D)I
   * Goal 6. org.apache.commons.math.util.MathUtils.hash(D)I:positive
   */

  @Test
  public void test016()  throws Throwable  {
      int int0 = MathUtils.hash(1.5430806348152437);
  }

  //Test case number: 17
  /*
   * 6 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.hash(D)I: root-Branch
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.hash(D)I: root-Branch in context: org.apache.commons.math.util.MathUtils:hash(D)I
   * Goal 3. org.apache.commons.math.util.MathUtils.hash(D)I: Line 605
   * Goal 4. org.apache.commons.math.util.MathUtils.hash(D)I
   * Goal 5. org.apache.commons.math.util.MathUtils.hash(D)I
   * Goal 6. org.apache.commons.math.util.MathUtils.hash(D)I:negative
   */

  @Test
  public void test017()  throws Throwable  {
      int int0 = MathUtils.hash(205.4761454);
  }

  //Test case number: 18
  /*
   * 19 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 63 IFEQ L542 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.gcd(II)I: I18 Branch 65 IF_ICMPNE L543 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.gcd(II)I: I43 Branch 66 IF_ICMPNE L546 - true
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 63 IFEQ L542 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I18 Branch 65 IF_ICMPNE L543 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I43 Branch 66 IF_ICMPNE L546 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 7. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 540
   * Goal 8. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 541
   * Goal 9. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 542
   * Goal 10. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 543
   * Goal 11. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 547
   * Goal 12. org.apache.commons.math.util.MathUtils.gcd(II)I
   * Goal 13. org.apache.commons.math.util.MathUtils.gcd(II)I
   * Goal 14. Weak Mutation 682: org.apache.commons.math.util.MathUtils.gcd(II)I:542 - ReplaceComparisonOperator == -> -2
   * Goal 15. Weak Mutation 700: org.apache.commons.math.util.MathUtils.gcd(II)I:543 - ReplaceComparisonOperator != -> <
   * Goal 16. Weak Mutation 715: org.apache.commons.math.util.MathUtils.gcd(II)I:546 - ReplaceComparisonOperator != -> <
   * Goal 17. Weak Mutation 724: org.apache.commons.math.util.MathUtils.gcd(II)I:547 - ReplaceArithmeticOperator + -> %
   * Goal 18. Weak Mutation 727: org.apache.commons.math.util.MathUtils.gcd(II)I:547 - ReplaceArithmeticOperator + -> /
   * Goal 19. org.apache.commons.math.util.MathUtils.gcd(II)I:zero
   */

  @Test
  public void test018()  throws Throwable  {
      int int0 = MathUtils.gcd(0, 0);
  }

  //Test case number: 19
  /*
   * 21 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J: root-Branch
   * Goal 2. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: I5 Branch 3 IFLE L114 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: I19 Branch 4 IFGE L120 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: I75 Branch 7 IFGT L137 - false
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J: root-Branch in context: org.apache.commons.math.util.MathUtils:addAndCheck(JJ)J
   * Goal 6. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J: Line 98
   * Goal 7. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: Line 114
   * Goal 8. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: Line 120
   * Goal 9. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: Line 137
   * Goal 10. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: Line 138
   * Goal 11. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: Line 144
   * Goal 12. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J
   * Goal 13. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J
   * Goal 14. Weak Mutation 38: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:114 - ReplaceComparisonOperator <= -> <
   * Goal 15. Weak Mutation 46: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:120 - ReplaceComparisonOperator >= -> >
   * Goal 16. Weak Mutation 88: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:137 - ReplaceArithmeticOperator - -> %
   * Goal 17. Weak Mutation 90: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:137 - ReplaceArithmeticOperator - -> /
   * Goal 18. Weak Mutation 92: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:137 - ReplaceComparisonOperator > -> !=
   * Goal 19. Weak Mutation 96: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:138 - ReplaceArithmeticOperator + -> %
   * Goal 20. Weak Mutation 99: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:138 - ReplaceArithmeticOperator + -> /
   * Goal 21. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J:zero
   */

  @Test
  public void test019()  throws Throwable  {
      long long0 = MathUtils.addAndCheck(0L, 0L);
  }

  //Test case number: 20
  /*
   * 16 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I13 Branch 1 IFLT L81 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I17 Branch 2 IFLE L81 - true
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I13 Branch 1 IFLT L81 - false in context: org.apache.commons.math.util.MathUtils:addAndCheck(II)I
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I17 Branch 2 IFLE L81 - true in context: org.apache.commons.math.util.MathUtils:addAndCheck(II)I
   * Goal 5. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: Line 80
   * Goal 6. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: Line 81
   * Goal 7. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: Line 84
   * Goal 8. org.apache.commons.math.util.MathUtils.addAndCheck(II)I
   * Goal 9. org.apache.commons.math.util.MathUtils.addAndCheck(II)I
   * Goal 10. Weak Mutation 6: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:80 - ReplaceArithmeticOperator + -> %
   * Goal 11. Weak Mutation 7: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:80 - ReplaceArithmeticOperator + -> -
   * Goal 12. Weak Mutation 8: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:80 - ReplaceArithmeticOperator + -> *
   * Goal 13. Weak Mutation 9: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:80 - ReplaceArithmeticOperator + -> /
   * Goal 14. Weak Mutation 17: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:81 - ReplaceComparisonOperator < -> !=
   * Goal 15. Weak Mutation 26: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:81 - ReplaceComparisonOperator <= -> ==
   * Goal 16. org.apache.commons.math.util.MathUtils.addAndCheck(II)I:positive
   */

  @Test
  public void test020()  throws Throwable  {
      int int0 = MathUtils.addAndCheck(1, 1238);
  }

  //Test case number: 21
  /*
   * 24 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D: root-Branch
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D: root-Branch in context: org.apache.commons.math.util.MathUtils:normalizeAngle(DD)D
   * Goal 3. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D: Line 922
   * Goal 4. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D
   * Goal 5. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D
   * Goal 6. Weak Mutation 1236: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:922 - ReplaceArithmeticOperator + -> %
   * Goal 7. Weak Mutation 1237: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:922 - ReplaceArithmeticOperator + -> -
   * Goal 8. Weak Mutation 1238: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:922 - ReplaceArithmeticOperator + -> *
   * Goal 9. Weak Mutation 1239: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:922 - ReplaceArithmeticOperator + -> /
   * Goal 10. Weak Mutation 1242: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:922 - ReplaceArithmeticOperator - -> %
   * Goal 11. Weak Mutation 1244: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:922 - ReplaceArithmeticOperator - -> /
   * Goal 12. Weak Mutation 1250: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:922 - ReplaceArithmeticOperator / -> +
   * Goal 13. Weak Mutation 1251: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:922 - ReplaceArithmeticOperator / -> %
   * Goal 14. Weak Mutation 1252: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:922 - ReplaceArithmeticOperator / -> -
   * Goal 15. Weak Mutation 1253: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:922 - ReplaceArithmeticOperator / -> *
   * Goal 16. Weak Mutation 1254: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:922 - ReplaceArithmeticOperator * -> +
   * Goal 17. Weak Mutation 1255: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:922 - ReplaceArithmeticOperator * -> %
   * Goal 18. Weak Mutation 1256: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:922 - ReplaceArithmeticOperator * -> -
   * Goal 19. Weak Mutation 1257: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:922 - ReplaceArithmeticOperator * -> /
   * Goal 20. Weak Mutation 1258: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:922 - ReplaceArithmeticOperator - -> +
   * Goal 21. Weak Mutation 1259: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:922 - ReplaceArithmeticOperator - -> %
   * Goal 22. Weak Mutation 1260: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:922 - ReplaceArithmeticOperator - -> *
   * Goal 23. Weak Mutation 1261: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:922 - ReplaceArithmeticOperator - -> /
   * Goal 24. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:positive
   */

  @Test
  public void test021()  throws Throwable  {
      double double0 = MathUtils.normalizeAngle((-2380), 0.0);
  }

  //Test case number: 22
  /*
   * 30 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.scalb(DI)D: I5 Branch 105 IFEQ L887 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.scalb(DI)D: I8 Branch 106 IFNE L887 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.scalb(DI)D: I11 Branch 107 IFEQ L887 - true
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I5 Branch 105 IFEQ L887 - false in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I8 Branch 106 IFNE L887 - false in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I11 Branch 107 IFEQ L887 - true in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 7. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 887
   * Goal 8. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 892
   * Goal 9. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 893
   * Goal 10. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 894
   * Goal 11. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 897
   * Goal 12. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 898
   * Goal 13. org.apache.commons.math.util.MathUtils.scalb(DI)D
   * Goal 14. org.apache.commons.math.util.MathUtils.scalb(DI)D
   * Goal 15. Weak Mutation 1182: org.apache.commons.math.util.MathUtils.scalb(DI)D:887 - ReplaceComparisonOperator == -> <=
   * Goal 16. Weak Mutation 1184: org.apache.commons.math.util.MathUtils.scalb(DI)D:887 - ReplaceComparisonOperator != -> ==
   * Goal 17. Weak Mutation 1186: org.apache.commons.math.util.MathUtils.scalb(DI)D:887 - ReplaceComparisonOperator == -> !=
   * Goal 18. Weak Mutation 1195: org.apache.commons.math.util.MathUtils.scalb(DI)D:893 - ReplaceBitwiseOperator & -> |
   * Goal 19. Weak Mutation 1196: org.apache.commons.math.util.MathUtils.scalb(DI)D:893 - ReplaceBitwiseOperator & -> ^
   * Goal 20. Weak Mutation 1203: org.apache.commons.math.util.MathUtils.scalb(DI)D:894 - ReplaceBitwiseOperator & -> |
   * Goal 21. Weak Mutation 1204: org.apache.commons.math.util.MathUtils.scalb(DI)D:894 - ReplaceBitwiseOperator & -> ^
   * Goal 22. Weak Mutation 1215: org.apache.commons.math.util.MathUtils.scalb(DI)D:897 - ReplaceBitwiseOperator << -> >>
   * Goal 23. Weak Mutation 1216: org.apache.commons.math.util.MathUtils.scalb(DI)D:897 - ReplaceBitwiseOperator << -> >>>
   * Goal 24. Weak Mutation 1217: org.apache.commons.math.util.MathUtils.scalb(DI)D:897 - ReplaceArithmeticOperator + -> %
   * Goal 25. Weak Mutation 1218: org.apache.commons.math.util.MathUtils.scalb(DI)D:897 - ReplaceArithmeticOperator + -> -
   * Goal 26. Weak Mutation 1219: org.apache.commons.math.util.MathUtils.scalb(DI)D:897 - ReplaceArithmeticOperator + -> *
   * Goal 27. Weak Mutation 1220: org.apache.commons.math.util.MathUtils.scalb(DI)D:897 - ReplaceArithmeticOperator + -> /
   * Goal 28. Weak Mutation 1221: org.apache.commons.math.util.MathUtils.scalb(DI)D:897 - ReplaceBitwiseOperator | -> ^
   * Goal 29. Weak Mutation 1222: org.apache.commons.math.util.MathUtils.scalb(DI)D:897 - ReplaceBitwiseOperator | -> &
   * Goal 30. org.apache.commons.math.util.MathUtils.scalb(DI)D:negative
   */

  @Test
  public void test022()  throws Throwable  {
      double double0 = MathUtils.scalb((-1.5844914061666202), 1638);
  }

  //Test case number: 23
  /*
   * 44 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I4 Branch 98 IFNE L838 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I7 Branch 99 IFEQ L838 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I17 Branch 100 IFNE L840 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I62 Branch 102 IFLT L852 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I68 Branch 103 IFNE L854 - true
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I7 Branch 99 IFEQ L838 - true in context: org.apache.commons.math.util.MathUtils:nextAfter(DD)D
   * Goal 7. Branch org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I4 Branch 98 IFNE L838 - false in context: org.apache.commons.math.util.MathUtils:nextAfter(DD)D
   * Goal 8. Branch org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I17 Branch 100 IFNE L840 - true in context: org.apache.commons.math.util.MathUtils:nextAfter(DD)D
   * Goal 9. Branch org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I62 Branch 102 IFLT L852 - false in context: org.apache.commons.math.util.MathUtils:nextAfter(DD)D
   * Goal 10. Branch org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I68 Branch 103 IFNE L854 - true in context: org.apache.commons.math.util.MathUtils:nextAfter(DD)D
   * Goal 11. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 838
   * Goal 12. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 840
   * Goal 13. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 847
   * Goal 14. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 848
   * Goal 15. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 849
   * Goal 16. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 850
   * Goal 17. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 852
   * Goal 18. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 854
   * Goal 19. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 858
   * Goal 20. org.apache.commons.math.util.MathUtils.nextAfter(DD)D
   * Goal 21. org.apache.commons.math.util.MathUtils.nextAfter(DD)D
   * Goal 22. Weak Mutation 1038: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:838 - ReplaceComparisonOperator != -> ==
   * Goal 23. Weak Mutation 1040: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:838 - ReplaceComparisonOperator == -> !=
   * Goal 24. Weak Mutation 1046: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:840 - ReplaceComparisonOperator != -> <
   * Goal 25. Weak Mutation 1067: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:848 - ReplaceBitwiseOperator & -> |
   * Goal 26. Weak Mutation 1068: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:848 - ReplaceBitwiseOperator & -> ^
   * Goal 27. Weak Mutation 1075: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:849 - ReplaceBitwiseOperator & -> |
   * Goal 28. Weak Mutation 1076: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:849 - ReplaceBitwiseOperator & -> ^
   * Goal 29. Weak Mutation 1083: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:850 - ReplaceBitwiseOperator & -> |
   * Goal 30. Weak Mutation 1084: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:850 - ReplaceBitwiseOperator & -> ^
   * Goal 31. Weak Mutation 1088: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:852 - ReplaceArithmeticOperator - -> +
   * Goal 32. Weak Mutation 1090: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:852 - ReplaceArithmeticOperator - -> *
   * Goal 33. Weak Mutation 1091: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:852 - ReplaceArithmeticOperator - -> /
   * Goal 34. Weak Mutation 1093: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:852 - ReplaceArithmeticOperator * -> %
   * Goal 35. Weak Mutation 1095: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:852 - ReplaceArithmeticOperator * -> /
   * Goal 36. Weak Mutation 1100: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:852 - ReplaceComparisonOperator < -> <=
   * Goal 37. Weak Mutation 1109: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:854 - ReplaceComparisonOperator != -> >
   * Goal 38. Weak Mutation 1126: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:858 - ReplaceBitwiseOperator | -> &
   * Goal 39. Weak Mutation 1131: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:858 - ReplaceArithmeticOperator + -> %
   * Goal 40. Weak Mutation 1132: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:858 - ReplaceArithmeticOperator + -> -
   * Goal 41. Weak Mutation 1133: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:858 - ReplaceArithmeticOperator + -> *
   * Goal 42. Weak Mutation 1134: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:858 - ReplaceArithmeticOperator + -> /
   * Goal 43. Weak Mutation 1136: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:858 - ReplaceBitwiseOperator | -> &
   * Goal 44. org.apache.commons.math.util.MathUtils.nextAfter(DD)D:positive
   */

  @Test
  public void test023()  throws Throwable  {
      double double0 = MathUtils.nextAfter((byte)1, (byte)1);
  }

  //Test case number: 24
  /*
   * 84 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 63 IFEQ L542 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 64 IFNE L542 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.gcd(II)I: I70 Branch 67 IFLE L554 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.gcd(II)I: I79 Branch 68 IFLE L557 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.gcd(II)I: I94 Branch 69 IFNE L562 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.gcd(II)I: I94 Branch 69 IFNE L562 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.gcd(II)I: I98 Branch 70 IFNE L562 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.gcd(II)I: I101 Branch 71 IF_ICMPGE L562 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.gcd(II)I: I122 Branch 72 IF_ICMPNE L568 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.gcd(II)I: I150 Branch 73 IF_ICMPNE L575 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.gcd(II)I: I165 Branch 74 IFNE L581 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.gcd(II)I: I176 Branch 75 IFLE L585 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.gcd(II)I: I198 Branch 76 IFNE L594 - false
   * Goal 14. org.apache.commons.math.util.MathUtils.lcm(II)I: I3 Branch 85 IFEQ L714 - false
   * Goal 15. org.apache.commons.math.util.MathUtils.lcm(II)I: I5 Branch 86 IFNE L714 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.lcm(II)I: I25 Branch 87 IF_ICMPNE L718 - true
   * Goal 17. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 88 IFLT L757 - false
   * Goal 18. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I17 Branch 89 IFLE L757 - true
   * Goal 19. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I5 Branch 86 IFNE L714 - true in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 20. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I3 Branch 85 IFEQ L714 - false in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 21. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I25 Branch 87 IF_ICMPNE L718 - true in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 22. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 540
   * Goal 23. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 541
   * Goal 24. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 542
   * Goal 25. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 554
   * Goal 26. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 555
   * Goal 27. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 557
   * Goal 28. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 558
   * Goal 29. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 561
   * Goal 30. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 562
   * Goal 31. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 564
   * Goal 32. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 565
   * Goal 33. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 566
   * Goal 34. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 568
   * Goal 35. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 575
   * Goal 36. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 581
   * Goal 37. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 585
   * Goal 38. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 588
   * Goal 39. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 591
   * Goal 40. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 594
   * Goal 41. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 595
   * Goal 42. org.apache.commons.math.util.MathUtils.lcm(II)I: Line 714
   * Goal 43. org.apache.commons.math.util.MathUtils.lcm(II)I: Line 717
   * Goal 44. org.apache.commons.math.util.MathUtils.lcm(II)I: Line 718
   * Goal 45. org.apache.commons.math.util.MathUtils.lcm(II)I: Line 722
   * Goal 46. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 756
   * Goal 47. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 757
   * Goal 48. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 760
   * Goal 49. org.apache.commons.math.util.MathUtils.lcm(II)I
   * Goal 50. org.apache.commons.math.util.MathUtils.lcm(II)I
   * Goal 51. Weak Mutation 683: org.apache.commons.math.util.MathUtils.gcd(II)I:542 - ReplaceComparisonOperator == -> >=
   * Goal 52. Weak Mutation 689: org.apache.commons.math.util.MathUtils.gcd(II)I:542 - ReplaceComparisonOperator != -> <
   * Goal 53. Weak Mutation 731: org.apache.commons.math.util.MathUtils.gcd(II)I:554 - ReplaceComparisonOperator <= -> -1
   * Goal 54. Weak Mutation 740: org.apache.commons.math.util.MathUtils.gcd(II)I:557 - ReplaceComparisonOperator <= -> -1
   * Goal 55. Weak Mutation 751: org.apache.commons.math.util.MathUtils.gcd(II)I:562 - ReplaceBitwiseOperator & -> |
   * Goal 56. Weak Mutation 752: org.apache.commons.math.util.MathUtils.gcd(II)I:562 - ReplaceBitwiseOperator & -> ^
   * Goal 57. Weak Mutation 753: org.apache.commons.math.util.MathUtils.gcd(II)I:562 - ReplaceComparisonOperator != -> -1
   * Goal 58. Weak Mutation 754: org.apache.commons.math.util.MathUtils.gcd(II)I:562 - ReplaceComparisonOperator != -> <
   * Goal 59. Weak Mutation 760: org.apache.commons.math.util.MathUtils.gcd(II)I:562 - ReplaceBitwiseOperator & -> |
   * Goal 60. Weak Mutation 761: org.apache.commons.math.util.MathUtils.gcd(II)I:562 - ReplaceBitwiseOperator & -> ^
   * Goal 61. Weak Mutation 762: org.apache.commons.math.util.MathUtils.gcd(II)I:562 - ReplaceComparisonOperator != -> -1
   * Goal 62. Weak Mutation 773: org.apache.commons.math.util.MathUtils.gcd(II)I:562 - ReplaceComparisonOperator >= -> -1
   * Goal 63. Weak Mutation 783: org.apache.commons.math.util.MathUtils.gcd(II)I:564 - ReplaceArithmeticOperator / -> +
   * Goal 64. Weak Mutation 784: org.apache.commons.math.util.MathUtils.gcd(II)I:564 - ReplaceArithmeticOperator / -> %
   * Goal 65. Weak Mutation 785: org.apache.commons.math.util.MathUtils.gcd(II)I:564 - ReplaceArithmeticOperator / -> -
   * Goal 66. Weak Mutation 786: org.apache.commons.math.util.MathUtils.gcd(II)I:564 - ReplaceArithmeticOperator / -> *
   * Goal 67. Weak Mutation 794: org.apache.commons.math.util.MathUtils.gcd(II)I:565 - ReplaceArithmeticOperator / -> +
   * Goal 68. Weak Mutation 795: org.apache.commons.math.util.MathUtils.gcd(II)I:565 - ReplaceArithmeticOperator / -> %
   * Goal 69. Weak Mutation 796: org.apache.commons.math.util.MathUtils.gcd(II)I:565 - ReplaceArithmeticOperator / -> -
   * Goal 70. Weak Mutation 797: org.apache.commons.math.util.MathUtils.gcd(II)I:565 - ReplaceArithmeticOperator / -> *
   * Goal 71. Weak Mutation 881: org.apache.commons.math.util.MathUtils.lcm(II)I:714 - ReplaceComparisonOperator == -> >=
   * Goal 72. Weak Mutation 887: org.apache.commons.math.util.MathUtils.lcm(II)I:714 - ReplaceComparisonOperator != -> <
   * Goal 73. Weak Mutation 899: org.apache.commons.math.util.MathUtils.lcm(II)I:717 - ReplaceArithmeticOperator / -> +
   * Goal 74. Weak Mutation 900: org.apache.commons.math.util.MathUtils.lcm(II)I:717 - ReplaceArithmeticOperator / -> %
   * Goal 75. Weak Mutation 901: org.apache.commons.math.util.MathUtils.lcm(II)I:717 - ReplaceArithmeticOperator / -> -
   * Goal 76. Weak Mutation 902: org.apache.commons.math.util.MathUtils.lcm(II)I:717 - ReplaceArithmeticOperator / -> *
   * Goal 77. Weak Mutation 915: org.apache.commons.math.util.MathUtils.lcm(II)I:718 - ReplaceComparisonOperator != -> <
   * Goal 78. Weak Mutation 936: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:756 - ReplaceArithmeticOperator * -> +
   * Goal 79. Weak Mutation 937: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:756 - ReplaceArithmeticOperator * -> %
   * Goal 80. Weak Mutation 938: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:756 - ReplaceArithmeticOperator * -> -
   * Goal 81. Weak Mutation 939: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:756 - ReplaceArithmeticOperator * -> /
   * Goal 82. Weak Mutation 947: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:757 - ReplaceComparisonOperator < -> !=
   * Goal 83. Weak Mutation 956: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:757 - ReplaceComparisonOperator <= -> ==
   * Goal 84. org.apache.commons.math.util.MathUtils.lcm(II)I:positive
   */

  @Test
  public void test024()  throws Throwable  {
      int int0 = MathUtils.lcm((byte)80, (byte)80);
  }

  //Test case number: 25
  /*
   * 7 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.indicator(S)S: I3 Branch 84 IFLT L687 - false
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.indicator(S)S: I3 Branch 84 IFLT L687 - false in context: org.apache.commons.math.util.MathUtils:indicator(S)S
   * Goal 3. org.apache.commons.math.util.MathUtils.indicator(S)S: Line 687
   * Goal 4. org.apache.commons.math.util.MathUtils.indicator(S)S
   * Goal 5. org.apache.commons.math.util.MathUtils.indicator(S)S
   * Goal 6. Weak Mutation 872: org.apache.commons.math.util.MathUtils.indicator(S)S:687 - ReplaceComparisonOperator < -> <=
   * Goal 7. org.apache.commons.math.util.MathUtils.indicator(S)S:positive
   */

  @Test
  public void test025()  throws Throwable  {
      short short0 = MathUtils.indicator((short)0);
  }

  //Test case number: 26
  /*
   * 7 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.indicator(J)J: I5 Branch 83 IFLT L676 - false
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.indicator(J)J: I5 Branch 83 IFLT L676 - false in context: org.apache.commons.math.util.MathUtils:indicator(J)J
   * Goal 3. org.apache.commons.math.util.MathUtils.indicator(J)J: Line 676
   * Goal 4. org.apache.commons.math.util.MathUtils.indicator(J)J
   * Goal 5. org.apache.commons.math.util.MathUtils.indicator(J)J
   * Goal 6. Weak Mutation 860: org.apache.commons.math.util.MathUtils.indicator(J)J:676 - ReplaceComparisonOperator < -> <=
   * Goal 7. org.apache.commons.math.util.MathUtils.indicator(J)J:positive
   */

  @Test
  public void test026()  throws Throwable  {
      long long0 = MathUtils.indicator(0L);
  }

  //Test case number: 27
  /*
   * 7 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.indicator(I)I: I3 Branch 82 IFLT L666 - false
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.indicator(I)I: I3 Branch 82 IFLT L666 - false in context: org.apache.commons.math.util.MathUtils:indicator(I)I
   * Goal 3. org.apache.commons.math.util.MathUtils.indicator(I)I: Line 666
   * Goal 4. org.apache.commons.math.util.MathUtils.indicator(I)I
   * Goal 5. org.apache.commons.math.util.MathUtils.indicator(I)I
   * Goal 6. Weak Mutation 849: org.apache.commons.math.util.MathUtils.indicator(I)I:666 - ReplaceComparisonOperator < -> !=
   * Goal 7. org.apache.commons.math.util.MathUtils.indicator(I)I:positive
   */

  @Test
  public void test027()  throws Throwable  {
      int int0 = MathUtils.indicator(8);
  }

  //Test case number: 28
  /*
   * 11 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.indicator(D)D: I4 Branch 78 IFEQ L639 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.indicator(D)D: I14 Branch 79 IFLT L642 - false
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.indicator(D)D: I4 Branch 78 IFEQ L639 - true in context: org.apache.commons.math.util.MathUtils:indicator(D)D
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.indicator(D)D: I14 Branch 79 IFLT L642 - false in context: org.apache.commons.math.util.MathUtils:indicator(D)D
   * Goal 5. org.apache.commons.math.util.MathUtils.indicator(D)D: Line 639
   * Goal 6. org.apache.commons.math.util.MathUtils.indicator(D)D: Line 642
   * Goal 7. org.apache.commons.math.util.MathUtils.indicator(D)D
   * Goal 8. org.apache.commons.math.util.MathUtils.indicator(D)D
   * Goal 9. Weak Mutation 810: org.apache.commons.math.util.MathUtils.indicator(D)D:639 - ReplaceComparisonOperator == -> !=
   * Goal 10. Weak Mutation 820: org.apache.commons.math.util.MathUtils.indicator(D)D:642 - ReplaceComparisonOperator < -> <=
   * Goal 11. org.apache.commons.math.util.MathUtils.indicator(D)D:positive
   */

  @Test
  public void test028()  throws Throwable  {
      double double0 = MathUtils.indicator(0.0);
  }

  //Test case number: 29
  /*
   * 7 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.indicator(B)B: I3 Branch 77 IFLT L627 - false
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.indicator(B)B: I3 Branch 77 IFLT L627 - false in context: org.apache.commons.math.util.MathUtils:indicator(B)B
   * Goal 3. org.apache.commons.math.util.MathUtils.indicator(B)B: Line 627
   * Goal 4. org.apache.commons.math.util.MathUtils.indicator(B)B
   * Goal 5. org.apache.commons.math.util.MathUtils.indicator(B)B
   * Goal 6. Weak Mutation 804: org.apache.commons.math.util.MathUtils.indicator(B)B:627 - ReplaceComparisonOperator < -> <=
   * Goal 7. org.apache.commons.math.util.MathUtils.indicator(B)B:positive
   */

  @Test
  public void test029()  throws Throwable  {
      byte byte0 = MathUtils.indicator((byte)0);
  }

  //Test case number: 30
  /*
   * 19 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.factorial(I)J: I3 Branch 56 IFGE L442 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.factorial(I)J: I28 Branch 57 IF_ICMPLE L445 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 60 IFGE L496 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I28 Branch 61 IF_ICMPGE L499 - false
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 60 IFGE L496 - true in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I28 Branch 61 IF_ICMPGE L499 - false in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 7. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 442
   * Goal 8. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 445
   * Goal 9. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 449
   * Goal 10. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 496
   * Goal 11. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 499
   * Goal 12. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 500
   * Goal 13. org.apache.commons.math.util.MathUtils.factorialLog(I)D
   * Goal 14. org.apache.commons.math.util.MathUtils.factorialLog(I)D
   * Goal 15. Weak Mutation 574: org.apache.commons.math.util.MathUtils.factorial(I)J:442 - ReplaceComparisonOperator >= -> >
   * Goal 16. Weak Mutation 587: org.apache.commons.math.util.MathUtils.factorial(I)J:445 - ReplaceComparisonOperator <= -> ==
   * Goal 17. Weak Mutation 632: org.apache.commons.math.util.MathUtils.factorialLog(I)D:496 - ReplaceComparisonOperator >= -> >
   * Goal 18. Weak Mutation 643: org.apache.commons.math.util.MathUtils.factorialLog(I)D:499 - ReplaceComparisonOperator >= -> -1
   * Goal 19. org.apache.commons.math.util.MathUtils.factorialLog(I)D:zero
   */

  @Test
  public void test030()  throws Throwable  {
      double double0 = MathUtils.factorialLog(0);
  }

  //Test case number: 31
  /*
   * 32 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I3 Branch 58 IFGE L473 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I28 Branch 59 IF_ICMPGE L476 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 60 IFGE L496 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I28 Branch 61 IF_ICMPGE L499 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I47 Branch 62 IF_ICMPGT L503 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I47 Branch 62 IF_ICMPGT L503 - false
   * Goal 7. Branch org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I3 Branch 58 IFGE L473 - true in context: org.apache.commons.math.util.MathUtils:factorialDouble(I)D
   * Goal 8. Branch org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I28 Branch 59 IF_ICMPGE L476 - true in context: org.apache.commons.math.util.MathUtils:factorialDouble(I)D
   * Goal 9. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: Line 473
   * Goal 10. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: Line 476
   * Goal 11. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: Line 479
   * Goal 12. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 496
   * Goal 13. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 499
   * Goal 14. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 502
   * Goal 15. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 503
   * Goal 16. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 504
   * Goal 17. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 506
   * Goal 18. org.apache.commons.math.util.MathUtils.factorialDouble(I)D
   * Goal 19. org.apache.commons.math.util.MathUtils.factorialDouble(I)D
   * Goal 20. Weak Mutation 597: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:473 - ReplaceComparisonOperator >= -> ==
   * Goal 21. Weak Mutation 611: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:476 - ReplaceComparisonOperator >= -> ==
   * Goal 22. Weak Mutation 623: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:479 - ReplaceArithmeticOperator + -> %
   * Goal 23. Weak Mutation 631: org.apache.commons.math.util.MathUtils.factorialLog(I)D:496 - ReplaceComparisonOperator >= -> ==
   * Goal 24. Weak Mutation 645: org.apache.commons.math.util.MathUtils.factorialLog(I)D:499 - ReplaceComparisonOperator >= -> ==
   * Goal 25. Weak Mutation 661: org.apache.commons.math.util.MathUtils.factorialLog(I)D:503 - ReplaceComparisonOperator > -> !=
   * Goal 26. Weak Mutation 662: org.apache.commons.math.util.MathUtils.factorialLog(I)D:503 - ReplaceComparisonOperator > -> -2
   * Goal 27. Weak Mutation 663: org.apache.commons.math.util.MathUtils.factorialLog(I)D:503 - ReplaceComparisonOperator > -> >=
   * Goal 28. Weak Mutation 668: org.apache.commons.math.util.MathUtils.factorialLog(I)D:504 - ReplaceArithmeticOperator + -> %
   * Goal 29. Weak Mutation 669: org.apache.commons.math.util.MathUtils.factorialLog(I)D:504 - ReplaceArithmeticOperator + -> -
   * Goal 30. Weak Mutation 670: org.apache.commons.math.util.MathUtils.factorialLog(I)D:504 - ReplaceArithmeticOperator + -> *
   * Goal 31. Weak Mutation 671: org.apache.commons.math.util.MathUtils.factorialLog(I)D:504 - ReplaceArithmeticOperator + -> /
   * Goal 32. org.apache.commons.math.util.MathUtils.factorialDouble(I)D:positive
   */

  @Test
  public void test031()  throws Throwable  {
      double double0 = MathUtils.factorialDouble(588);
  }

  //Test case number: 32
  /*
   * 15 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I3 Branch 48 IFNULL L398 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I5 Branch 49 IFNONNULL L398 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I36 Branch 53 IF_ICMPEQ L401 - false
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I5 Branch 49 IFNONNULL L398 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I3 Branch 48 IFNULL L398 - false in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I36 Branch 53 IF_ICMPEQ L401 - false in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 7. org.apache.commons.math.util.MathUtils.equals([D[D)Z: Line 398
   * Goal 8. org.apache.commons.math.util.MathUtils.equals([D[D)Z: Line 401
   * Goal 9. org.apache.commons.math.util.MathUtils.equals([D[D)Z: Line 402
   * Goal 10. org.apache.commons.math.util.MathUtils.equals([D[D)Z
   * Goal 11. org.apache.commons.math.util.MathUtils.equals([D[D)Z
   * Goal 12. Weak Mutation 534: org.apache.commons.math.util.MathUtils.equals([D[D)Z:398 - ReplaceComparisonOperator = null -> != null
   * Goal 13. Weak Mutation 535: org.apache.commons.math.util.MathUtils.equals([D[D)Z:398 - ReplaceComparisonOperator != null -> = null
   * Goal 14. Weak Mutation 551: org.apache.commons.math.util.MathUtils.equals([D[D)Z:401 - ReplaceComparisonOperator == -> <=
   * Goal 15. org.apache.commons.math.util.MathUtils.equals([D[D)Z:false
   */

  @Test
  public void test032()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      double[] doubleArray1 = new double[9];
      boolean boolean0 = MathUtils.equals(doubleArray0, doubleArray1);
  }

  //Test case number: 33
  /*
   * 20 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I5 Branch 43 IFEQ L384 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I9 Branch 44 IFGE L384 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I20 Branch 46 IFLE L384 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I26 Branch 47 IFGT L384 - false
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.equals(DDD)Z: I20 Branch 46 IFLE L384 - false in context: org.apache.commons.math.util.MathUtils:equals(DDD)Z
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.equals(DDD)Z: I26 Branch 47 IFGT L384 - false in context: org.apache.commons.math.util.MathUtils:equals(DDD)Z
   * Goal 7. Branch org.apache.commons.math.util.MathUtils.equals(DDD)Z: I5 Branch 43 IFEQ L384 - false in context: org.apache.commons.math.util.MathUtils:equals(DDD)Z
   * Goal 8. Branch org.apache.commons.math.util.MathUtils.equals(DDD)Z: I9 Branch 44 IFGE L384 - true in context: org.apache.commons.math.util.MathUtils:equals(DDD)Z
   * Goal 9. org.apache.commons.math.util.MathUtils.equals(DDD)Z: Line 384
   * Goal 10. org.apache.commons.math.util.MathUtils.equals(DDD)Z
   * Goal 11. org.apache.commons.math.util.MathUtils.equals(DDD)Z
   * Goal 12. Weak Mutation 500: org.apache.commons.math.util.MathUtils.equals(DDD)Z:384 - ReplaceComparisonOperator == -> >=
   * Goal 13. Weak Mutation 505: org.apache.commons.math.util.MathUtils.equals(DDD)Z:384 - ReplaceComparisonOperator >= -> ==
   * Goal 14. Weak Mutation 519: org.apache.commons.math.util.MathUtils.equals(DDD)Z:384 - ReplaceComparisonOperator <= -> -1
   * Goal 15. Weak Mutation 525: org.apache.commons.math.util.MathUtils.equals(DDD)Z:384 - ReplaceArithmeticOperator + -> %
   * Goal 16. Weak Mutation 526: org.apache.commons.math.util.MathUtils.equals(DDD)Z:384 - ReplaceArithmeticOperator + -> -
   * Goal 17. Weak Mutation 527: org.apache.commons.math.util.MathUtils.equals(DDD)Z:384 - ReplaceArithmeticOperator + -> *
   * Goal 18. Weak Mutation 528: org.apache.commons.math.util.MathUtils.equals(DDD)Z:384 - ReplaceArithmeticOperator + -> /
   * Goal 19. Weak Mutation 530: org.apache.commons.math.util.MathUtils.equals(DDD)Z:384 - ReplaceComparisonOperator > -> !=
   * Goal 20. org.apache.commons.math.util.MathUtils.equals(DDD)Z:true
   */

  @Test
  public void test033()  throws Throwable  {
      boolean boolean0 = MathUtils.equals(2.225073858507202E-308, (-193.08), (double) 3336);
  }

  //Test case number: 34
  /*
   * 17 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I5 Branch 43 IFEQ L384 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I9 Branch 44 IFGE L384 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I15 Branch 45 IFGE L384 - true
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.equals(DDD)Z: I9 Branch 44 IFGE L384 - false in context: org.apache.commons.math.util.MathUtils:equals(DDD)Z
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.equals(DDD)Z: I5 Branch 43 IFEQ L384 - false in context: org.apache.commons.math.util.MathUtils:equals(DDD)Z
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.equals(DDD)Z: I15 Branch 45 IFGE L384 - true in context: org.apache.commons.math.util.MathUtils:equals(DDD)Z
   * Goal 7. org.apache.commons.math.util.MathUtils.equals(DDD)Z: Line 384
   * Goal 8. org.apache.commons.math.util.MathUtils.equals(DDD)Z
   * Goal 9. org.apache.commons.math.util.MathUtils.equals(DDD)Z
   * Goal 10. Weak Mutation 501: org.apache.commons.math.util.MathUtils.equals(DDD)Z:384 - ReplaceComparisonOperator == -> <=
   * Goal 11. Weak Mutation 504: org.apache.commons.math.util.MathUtils.equals(DDD)Z:384 - ReplaceComparisonOperator >= -> -1
   * Goal 12. Weak Mutation 509: org.apache.commons.math.util.MathUtils.equals(DDD)Z:384 - ReplaceArithmeticOperator + -> %
   * Goal 13. Weak Mutation 510: org.apache.commons.math.util.MathUtils.equals(DDD)Z:384 - ReplaceArithmeticOperator + -> -
   * Goal 14. Weak Mutation 511: org.apache.commons.math.util.MathUtils.equals(DDD)Z:384 - ReplaceArithmeticOperator + -> *
   * Goal 15. Weak Mutation 512: org.apache.commons.math.util.MathUtils.equals(DDD)Z:384 - ReplaceArithmeticOperator + -> /
   * Goal 16. Weak Mutation 515: org.apache.commons.math.util.MathUtils.equals(DDD)Z:384 - ReplaceComparisonOperator >= -> ==
   * Goal 17. org.apache.commons.math.util.MathUtils.equals(DDD)Z:true
   */

  @Test
  public void test034()  throws Throwable  {
      boolean boolean0 = MathUtils.equals((double) (byte) (-72), 1.0, Double.NaN);
  }

  //Test case number: 35
  /*
   * 14 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.cosh(D)D: root-Branch
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.cosh(D)D: root-Branch in context: org.apache.commons.math.util.MathUtils:cosh(D)D
   * Goal 3. org.apache.commons.math.util.MathUtils.cosh(D)D: Line 359
   * Goal 4. org.apache.commons.math.util.MathUtils.cosh(D)D
   * Goal 5. org.apache.commons.math.util.MathUtils.cosh(D)D
   * Goal 6. Weak Mutation 474: org.apache.commons.math.util.MathUtils.cosh(D)D:359 - ReplaceArithmeticOperator + -> %
   * Goal 7. Weak Mutation 475: org.apache.commons.math.util.MathUtils.cosh(D)D:359 - ReplaceArithmeticOperator + -> -
   * Goal 8. Weak Mutation 476: org.apache.commons.math.util.MathUtils.cosh(D)D:359 - ReplaceArithmeticOperator + -> *
   * Goal 9. Weak Mutation 477: org.apache.commons.math.util.MathUtils.cosh(D)D:359 - ReplaceArithmeticOperator + -> /
   * Goal 10. Weak Mutation 482: org.apache.commons.math.util.MathUtils.cosh(D)D:359 - ReplaceArithmeticOperator / -> +
   * Goal 11. Weak Mutation 483: org.apache.commons.math.util.MathUtils.cosh(D)D:359 - ReplaceArithmeticOperator / -> %
   * Goal 12. Weak Mutation 484: org.apache.commons.math.util.MathUtils.cosh(D)D:359 - ReplaceArithmeticOperator / -> -
   * Goal 13. Weak Mutation 485: org.apache.commons.math.util.MathUtils.cosh(D)D:359 - ReplaceArithmeticOperator / -> *
   * Goal 14. org.apache.commons.math.util.MathUtils.cosh(D)D:positive
   */

  @Test
  public void test035()  throws Throwable  {
      double double0 = MathUtils.cosh((byte)1);
  }

  //Test case number: 36
  /*
   * 19 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J: root-Branch
   * Goal 2. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: I5 Branch 3 IFLE L114 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: I19 Branch 4 IFGE L120 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: I25 Branch 5 IFGE L121 - true
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J: root-Branch in context: org.apache.commons.math.util.MathUtils:addAndCheck(JJ)J
   * Goal 6. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J: Line 98
   * Goal 7. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: Line 114
   * Goal 8. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: Line 120
   * Goal 9. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: Line 121
   * Goal 10. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: Line 130
   * Goal 11. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: Line 144
   * Goal 12. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J
   * Goal 13. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J
   * Goal 14. Weak Mutation 37: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:114 - ReplaceComparisonOperator <= -> ==
   * Goal 15. Weak Mutation 44: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:120 - ReplaceComparisonOperator >= -> -1
   * Goal 16. Weak Mutation 52: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:121 - ReplaceComparisonOperator >= -> >
   * Goal 17. Weak Mutation 76: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:130 - ReplaceArithmeticOperator + -> %
   * Goal 18. Weak Mutation 79: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:130 - ReplaceArithmeticOperator + -> /
   * Goal 19. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J:negative
   */

  @Test
  public void test036()  throws Throwable  {
      long long0 = MathUtils.addAndCheck((-1L), 0L);
  }

  //Test case number: 37
  /*
   * 25 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: I5 Branch 3 IFLE L114 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: I19 Branch 4 IFGE L120 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: I75 Branch 7 IFGT L137 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: I9 Branch 142 IFNE L1215 - true
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: I9 Branch 142 IFNE L1215 - true in context: org.apache.commons.math.util.MathUtils:subAndCheck(JJ)J
   * Goal 6. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: Line 114
   * Goal 7. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: Line 120
   * Goal 8. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: Line 137
   * Goal 9. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: Line 138
   * Goal 10. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: Line 144
   * Goal 11. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: Line 1214
   * Goal 12. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: Line 1215
   * Goal 13. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: Line 1223
   * Goal 14. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: Line 1225
   * Goal 15. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J
   * Goal 16. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J
   * Goal 17. Weak Mutation 38: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:114 - ReplaceComparisonOperator <= -> <
   * Goal 18. Weak Mutation 46: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:120 - ReplaceComparisonOperator >= -> >
   * Goal 19. Weak Mutation 88: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:137 - ReplaceArithmeticOperator - -> %
   * Goal 20. Weak Mutation 90: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:137 - ReplaceArithmeticOperator - -> /
   * Goal 21. Weak Mutation 92: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:137 - ReplaceComparisonOperator > -> !=
   * Goal 22. Weak Mutation 96: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:138 - ReplaceArithmeticOperator + -> %
   * Goal 23. Weak Mutation 99: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:138 - ReplaceArithmeticOperator + -> /
   * Goal 24. Weak Mutation 1580: org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J:1215 - ReplaceComparisonOperator != -> >
   * Goal 25. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J:zero
   */

  @Test
  public void test037()  throws Throwable  {
      long long0 = MathUtils.subAndCheck(0L, 0L);
  }

  //Test case number: 38
  /*
   * 16 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I13 Branch 1 IFLT L81 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I17 Branch 2 IFLE L81 - true
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I13 Branch 1 IFLT L81 - false in context: org.apache.commons.math.util.MathUtils:addAndCheck(II)I
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I17 Branch 2 IFLE L81 - true in context: org.apache.commons.math.util.MathUtils:addAndCheck(II)I
   * Goal 5. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: Line 80
   * Goal 6. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: Line 81
   * Goal 7. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: Line 84
   * Goal 8. org.apache.commons.math.util.MathUtils.addAndCheck(II)I
   * Goal 9. org.apache.commons.math.util.MathUtils.addAndCheck(II)I
   * Goal 10. Weak Mutation 6: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:80 - ReplaceArithmeticOperator + -> %
   * Goal 11. Weak Mutation 7: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:80 - ReplaceArithmeticOperator + -> -
   * Goal 12. Weak Mutation 8: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:80 - ReplaceArithmeticOperator + -> *
   * Goal 13. Weak Mutation 9: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:80 - ReplaceArithmeticOperator + -> /
   * Goal 14. Weak Mutation 17: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:81 - ReplaceComparisonOperator < -> !=
   * Goal 15. Weak Mutation 26: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:81 - ReplaceComparisonOperator <= -> ==
   * Goal 16. org.apache.commons.math.util.MathUtils.addAndCheck(II)I:negative
   */

  @Test
  public void test038()  throws Throwable  {
      int int0 = MathUtils.addAndCheck((-5373), (-727));
  }

  //Test case number: 39
  /*
   * 5 covered goals:
   * Goal 1. round(DII)D_java.lang.IllegalArgumentException_IMPLICIT
   * Goal 2. org.apache.commons.math.util.MathUtils.round(DII)D: Line 952
   * Goal 3. org.apache.commons.math.util.MathUtils.round(DII)D: Line 953
   * Goal 4. org.apache.commons.math.util.MathUtils.round(DII)D: Line 954
   * Goal 5. org.apache.commons.math.util.MathUtils.round(DII)D
   */

  @Test
  public void test039()  throws Throwable  {
      // Undeclared exception!
      try { 
        MathUtils.round((-321.761807363625), 2292, 2292);
      } catch(IllegalArgumentException e) {
         //
         // Invalid rounding mode
         //
         assertThrownBy("java.math.BigDecimal", e);
      }
  }

  //Test case number: 40
  /*
   * 66 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 63 IFEQ L542 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 64 IFNE L542 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.gcd(II)I: I70 Branch 67 IFLE L554 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.gcd(II)I: I79 Branch 68 IFLE L557 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.gcd(II)I: I94 Branch 69 IFNE L562 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.gcd(II)I: I98 Branch 70 IFNE L562 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.gcd(II)I: I122 Branch 72 IF_ICMPNE L568 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.gcd(II)I: I150 Branch 73 IF_ICMPNE L575 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.gcd(II)I: I165 Branch 74 IFNE L581 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.gcd(II)I: I165 Branch 74 IFNE L581 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.gcd(II)I: I176 Branch 75 IFLE L585 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.gcd(II)I: I176 Branch 75 IFLE L585 - false
   * Goal 13. org.apache.commons.math.util.MathUtils.gcd(II)I: I198 Branch 76 IFNE L594 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.gcd(II)I: I198 Branch 76 IFNE L594 - false
   * Goal 15. org.apache.commons.math.util.MathUtils.lcm(II)I: I3 Branch 85 IFEQ L714 - false
   * Goal 16. org.apache.commons.math.util.MathUtils.lcm(II)I: I5 Branch 86 IFNE L714 - true
   * Goal 17. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 88 IFLT L757 - false
   * Goal 18. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I17 Branch 89 IFLE L757 - false
   * Goal 19. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I5 Branch 86 IFNE L714 - true in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 20. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I3 Branch 85 IFEQ L714 - false in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 21. lcm(II)I_java.lang.ArithmeticException_EXPLICIT
   * Goal 22. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 540
   * Goal 23. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 541
   * Goal 24. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 542
   * Goal 25. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 554
   * Goal 26. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 557
   * Goal 27. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 561
   * Goal 28. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 562
   * Goal 29. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 568
   * Goal 30. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 575
   * Goal 31. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 581
   * Goal 32. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 582
   * Goal 33. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 585
   * Goal 34. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 586
   * Goal 35. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 588
   * Goal 36. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 591
   * Goal 37. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 594
   * Goal 38. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 595
   * Goal 39. org.apache.commons.math.util.MathUtils.lcm(II)I: Line 714
   * Goal 40. org.apache.commons.math.util.MathUtils.lcm(II)I: Line 717
   * Goal 41. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 756
   * Goal 42. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 757
   * Goal 43. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 758
   * Goal 44. org.apache.commons.math.util.MathUtils.lcm(II)I
   * Goal 45. Weak Mutation 684: org.apache.commons.math.util.MathUtils.gcd(II)I:542 - ReplaceComparisonOperator == -> <=
   * Goal 46. Weak Mutation 690: org.apache.commons.math.util.MathUtils.gcd(II)I:542 - ReplaceComparisonOperator != -> >
   * Goal 47. Weak Mutation 732: org.apache.commons.math.util.MathUtils.gcd(II)I:554 - ReplaceComparisonOperator <= -> ==
   * Goal 48. Weak Mutation 741: org.apache.commons.math.util.MathUtils.gcd(II)I:557 - ReplaceComparisonOperator <= -> ==
   * Goal 49. Weak Mutation 751: org.apache.commons.math.util.MathUtils.gcd(II)I:562 - ReplaceBitwiseOperator & -> |
   * Goal 50. Weak Mutation 752: org.apache.commons.math.util.MathUtils.gcd(II)I:562 - ReplaceBitwiseOperator & -> ^
   * Goal 51. Weak Mutation 753: org.apache.commons.math.util.MathUtils.gcd(II)I:562 - ReplaceComparisonOperator != -> -1
   * Goal 52. Weak Mutation 760: org.apache.commons.math.util.MathUtils.gcd(II)I:562 - ReplaceBitwiseOperator & -> |
   * Goal 53. Weak Mutation 761: org.apache.commons.math.util.MathUtils.gcd(II)I:562 - ReplaceBitwiseOperator & -> ^
   * Goal 54. Weak Mutation 763: org.apache.commons.math.util.MathUtils.gcd(II)I:562 - ReplaceComparisonOperator != -> <
   * Goal 55. Weak Mutation 882: org.apache.commons.math.util.MathUtils.lcm(II)I:714 - ReplaceComparisonOperator == -> <=
   * Goal 56. Weak Mutation 888: org.apache.commons.math.util.MathUtils.lcm(II)I:714 - ReplaceComparisonOperator != -> >
   * Goal 57. Weak Mutation 899: org.apache.commons.math.util.MathUtils.lcm(II)I:717 - ReplaceArithmeticOperator / -> +
   * Goal 58. Weak Mutation 900: org.apache.commons.math.util.MathUtils.lcm(II)I:717 - ReplaceArithmeticOperator / -> %
   * Goal 59. Weak Mutation 901: org.apache.commons.math.util.MathUtils.lcm(II)I:717 - ReplaceArithmeticOperator / -> -
   * Goal 60. Weak Mutation 936: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:756 - ReplaceArithmeticOperator * -> +
   * Goal 61. Weak Mutation 937: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:756 - ReplaceArithmeticOperator * -> %
   * Goal 62. Weak Mutation 938: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:756 - ReplaceArithmeticOperator * -> -
   * Goal 63. Weak Mutation 939: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:756 - ReplaceArithmeticOperator * -> /
   * Goal 64. Weak Mutation 947: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:757 - ReplaceComparisonOperator < -> !=
   * Goal 65. Weak Mutation 955: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:757 - ReplaceComparisonOperator <= -> -1
   * Goal 66. Weak Mutation 959: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:758 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test040()  throws Throwable  {
      // Undeclared exception!
      try { 
        MathUtils.lcm(Integer.MIN_VALUE, (-1705));
      } catch(ArithmeticException e) {
         //
         // overflow: mul
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 41
  /*
   * 46 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I4 Branch 98 IFNE L838 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I7 Branch 99 IFEQ L838 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I17 Branch 100 IFNE L840 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I62 Branch 102 IFLT L852 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I68 Branch 103 IFNE L854 - true
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I7 Branch 99 IFEQ L838 - true in context: org.apache.commons.math.util.MathUtils:nextAfter(DD)D
   * Goal 7. Branch org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I4 Branch 98 IFNE L838 - false in context: org.apache.commons.math.util.MathUtils:nextAfter(DD)D
   * Goal 8. Branch org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I17 Branch 100 IFNE L840 - true in context: org.apache.commons.math.util.MathUtils:nextAfter(DD)D
   * Goal 9. Branch org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I62 Branch 102 IFLT L852 - false in context: org.apache.commons.math.util.MathUtils:nextAfter(DD)D
   * Goal 10. Branch org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I68 Branch 103 IFNE L854 - true in context: org.apache.commons.math.util.MathUtils:nextAfter(DD)D
   * Goal 11. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 838
   * Goal 12. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 840
   * Goal 13. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 847
   * Goal 14. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 848
   * Goal 15. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 849
   * Goal 16. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 850
   * Goal 17. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 852
   * Goal 18. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 854
   * Goal 19. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 858
   * Goal 20. org.apache.commons.math.util.MathUtils.nextAfter(DD)D
   * Goal 21. org.apache.commons.math.util.MathUtils.nextAfter(DD)D
   * Goal 22. Weak Mutation 1038: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:838 - ReplaceComparisonOperator != -> ==
   * Goal 23. Weak Mutation 1040: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:838 - ReplaceComparisonOperator == -> !=
   * Goal 24. Weak Mutation 1046: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:840 - ReplaceComparisonOperator != -> <
   * Goal 25. Weak Mutation 1067: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:848 - ReplaceBitwiseOperator & -> |
   * Goal 26. Weak Mutation 1068: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:848 - ReplaceBitwiseOperator & -> ^
   * Goal 27. Weak Mutation 1075: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:849 - ReplaceBitwiseOperator & -> |
   * Goal 28. Weak Mutation 1076: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:849 - ReplaceBitwiseOperator & -> ^
   * Goal 29. Weak Mutation 1083: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:850 - ReplaceBitwiseOperator & -> |
   * Goal 30. Weak Mutation 1084: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:850 - ReplaceBitwiseOperator & -> ^
   * Goal 31. Weak Mutation 1088: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:852 - ReplaceArithmeticOperator - -> +
   * Goal 32. Weak Mutation 1090: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:852 - ReplaceArithmeticOperator - -> *
   * Goal 33. Weak Mutation 1091: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:852 - ReplaceArithmeticOperator - -> /
   * Goal 34. Weak Mutation 1092: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:852 - ReplaceArithmeticOperator * -> +
   * Goal 35. Weak Mutation 1093: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:852 - ReplaceArithmeticOperator * -> %
   * Goal 36. Weak Mutation 1094: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:852 - ReplaceArithmeticOperator * -> -
   * Goal 37. Weak Mutation 1095: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:852 - ReplaceArithmeticOperator * -> /
   * Goal 38. Weak Mutation 1099: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:852 - ReplaceComparisonOperator < -> !=
   * Goal 39. Weak Mutation 1109: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:854 - ReplaceComparisonOperator != -> >
   * Goal 40. Weak Mutation 1126: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:858 - ReplaceBitwiseOperator | -> &
   * Goal 41. Weak Mutation 1131: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:858 - ReplaceArithmeticOperator + -> %
   * Goal 42. Weak Mutation 1132: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:858 - ReplaceArithmeticOperator + -> -
   * Goal 43. Weak Mutation 1133: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:858 - ReplaceArithmeticOperator + -> *
   * Goal 44. Weak Mutation 1134: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:858 - ReplaceArithmeticOperator + -> /
   * Goal 45. Weak Mutation 1136: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:858 - ReplaceBitwiseOperator | -> &
   * Goal 46. org.apache.commons.math.util.MathUtils.nextAfter(DD)D:positive
   */

  @Test
  public void test041()  throws Throwable  {
      double double0 = MathUtils.nextAfter(2306.6150030316207, 3347.766);
  }

  //Test case number: 42
  /*
   * 18 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I4 Branch 98 IFNE L838 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I7 Branch 99 IFEQ L838 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I17 Branch 100 IFNE L840 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I23 Branch 101 IFGE L841 - true
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I7 Branch 99 IFEQ L838 - true in context: org.apache.commons.math.util.MathUtils:nextAfter(DD)D
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I4 Branch 98 IFNE L838 - false in context: org.apache.commons.math.util.MathUtils:nextAfter(DD)D
   * Goal 7. Branch org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I17 Branch 100 IFNE L840 - false in context: org.apache.commons.math.util.MathUtils:nextAfter(DD)D
   * Goal 8. Branch org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I23 Branch 101 IFGE L841 - true in context: org.apache.commons.math.util.MathUtils:nextAfter(DD)D
   * Goal 9. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 838
   * Goal 10. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 840
   * Goal 11. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 841
   * Goal 12. org.apache.commons.math.util.MathUtils.nextAfter(DD)D
   * Goal 13. org.apache.commons.math.util.MathUtils.nextAfter(DD)D
   * Goal 14. Weak Mutation 1038: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:838 - ReplaceComparisonOperator != -> ==
   * Goal 15. Weak Mutation 1040: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:838 - ReplaceComparisonOperator == -> !=
   * Goal 16. Weak Mutation 1045: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:840 - ReplaceComparisonOperator != -> -1
   * Goal 17. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:841 - ReplaceComparisonOperator >= -> >
   * Goal 18. org.apache.commons.math.util.MathUtils.nextAfter(DD)D:positive
   */

  @Test
  public void test042()  throws Throwable  {
      double double0 = MathUtils.nextAfter(0.0F, 0.0F);
  }

  //Test case number: 43
  /*
   * 18 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I4 Branch 98 IFNE L838 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I7 Branch 99 IFEQ L838 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I17 Branch 100 IFNE L840 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I23 Branch 101 IFGE L841 - false
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I7 Branch 99 IFEQ L838 - true in context: org.apache.commons.math.util.MathUtils:nextAfter(DD)D
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I4 Branch 98 IFNE L838 - false in context: org.apache.commons.math.util.MathUtils:nextAfter(DD)D
   * Goal 7. Branch org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I17 Branch 100 IFNE L840 - false in context: org.apache.commons.math.util.MathUtils:nextAfter(DD)D
   * Goal 8. Branch org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I23 Branch 101 IFGE L841 - false in context: org.apache.commons.math.util.MathUtils:nextAfter(DD)D
   * Goal 9. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 838
   * Goal 10. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 840
   * Goal 11. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 841
   * Goal 12. org.apache.commons.math.util.MathUtils.nextAfter(DD)D
   * Goal 13. org.apache.commons.math.util.MathUtils.nextAfter(DD)D
   * Goal 14. Weak Mutation 1038: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:838 - ReplaceComparisonOperator != -> ==
   * Goal 15. Weak Mutation 1040: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:838 - ReplaceComparisonOperator == -> !=
   * Goal 16. Weak Mutation 1045: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:840 - ReplaceComparisonOperator != -> -1
   * Goal 17. Weak Mutation 1051: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:841 - ReplaceComparisonOperator >= -> -1
   * Goal 18. org.apache.commons.math.util.MathUtils.nextAfter(DD)D:negative
   */

  @Test
  public void test043()  throws Throwable  {
      double double0 = MathUtils.nextAfter(0.0, (-3258.2024));
  }

  //Test case number: 44
  /*
   * 8 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I4 Branch 98 IFNE L838 - true
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I4 Branch 98 IFNE L838 - true in context: org.apache.commons.math.util.MathUtils:nextAfter(DD)D
   * Goal 3. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 838
   * Goal 4. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 839
   * Goal 5. org.apache.commons.math.util.MathUtils.nextAfter(DD)D
   * Goal 6. org.apache.commons.math.util.MathUtils.nextAfter(DD)D
   * Goal 7. Weak Mutation 1038: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:838 - ReplaceComparisonOperator != -> ==
   * Goal 8. org.apache.commons.math.util.MathUtils.nextAfter(DD)D:positive
   */

  @Test
  public void test044()  throws Throwable  {
      double double0 = MathUtils.nextAfter(Double.NaN, 1);
  }

  //Test case number: 45
  /*
   * 18 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 90 IFLE L776 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I22 Branch 91 IFGE L780 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I115 Branch 96 IFLE L800 - true
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 90 IFLE L776 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I22 Branch 91 IFGE L780 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I115 Branch 96 IFLE L800 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 7. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 775
   * Goal 8. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 776
   * Goal 9. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 780
   * Goal 10. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 800
   * Goal 11. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 812
   * Goal 12. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 815
   * Goal 13. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 14. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 15. Weak Mutation 966: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:776 - ReplaceComparisonOperator <= -> <
   * Goal 16. Weak Mutation 974: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:780 - ReplaceComparisonOperator >= -> >
   * Goal 17. Weak Mutation 1036: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:800 - ReplaceComparisonOperator <= -> <
   * Goal 18. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:zero
   */

  @Test
  public void test045()  throws Throwable  {
      long long0 = MathUtils.mulAndCheck((long) 0, (long) 0);
  }

  //Test case number: 46
  /*
   * 34 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 90 IFLE L776 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I22 Branch 91 IFGE L780 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I28 Branch 92 IFGE L781 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I69 Branch 94 IFLE L788 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I77 Branch 95 IFGT L790 - false
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 90 IFLE L776 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 7. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I22 Branch 91 IFGE L780 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 8. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I28 Branch 92 IFGE L781 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 9. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I69 Branch 94 IFLE L788 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 10. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I77 Branch 95 IFGT L790 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 11. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 775
   * Goal 12. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 776
   * Goal 13. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 780
   * Goal 14. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 781
   * Goal 15. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 788
   * Goal 16. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 790
   * Goal 17. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 791
   * Goal 18. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 815
   * Goal 19. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 20. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 21. Weak Mutation 965: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:776 - ReplaceComparisonOperator <= -> ==
   * Goal 22. Weak Mutation 972: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:780 - ReplaceComparisonOperator >= -> -1
   * Goal 23. Weak Mutation 979: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:781 - ReplaceComparisonOperator >= -> ==
   * Goal 24. Weak Mutation 1005: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:788 - ReplaceComparisonOperator <= -> -1
   * Goal 25. Weak Mutation 1014: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:790 - ReplaceArithmeticOperator / -> +
   * Goal 26. Weak Mutation 1015: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:790 - ReplaceArithmeticOperator / -> %
   * Goal 27. Weak Mutation 1016: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:790 - ReplaceArithmeticOperator / -> -
   * Goal 28. Weak Mutation 1017: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:790 - ReplaceArithmeticOperator / -> *
   * Goal 29. Weak Mutation 1020: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:790 - ReplaceComparisonOperator > -> !=
   * Goal 30. Weak Mutation 1024: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:791 - ReplaceArithmeticOperator * -> +
   * Goal 31. Weak Mutation 1025: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:791 - ReplaceArithmeticOperator * -> %
   * Goal 32. Weak Mutation 1026: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:791 - ReplaceArithmeticOperator * -> -
   * Goal 33. Weak Mutation 1027: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:791 - ReplaceArithmeticOperator * -> /
   * Goal 34. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:negative
   */

  @Test
  public void test046()  throws Throwable  {
      long long0 = MathUtils.mulAndCheck((long) (-557415317), (long) 67);
  }

  //Test case number: 47
  /*
   * 30 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 90 IFLE L776 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I22 Branch 91 IFGE L780 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I28 Branch 92 IFGE L781 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I36 Branch 93 IFLT L783 - false
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 90 IFLE L776 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I22 Branch 91 IFGE L780 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 7. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I28 Branch 92 IFGE L781 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 8. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I36 Branch 93 IFLT L783 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 9. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 775
   * Goal 10. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 776
   * Goal 11. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 780
   * Goal 12. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 781
   * Goal 13. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 783
   * Goal 14. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 784
   * Goal 15. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 815
   * Goal 16. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 17. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 18. Weak Mutation 966: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:776 - ReplaceComparisonOperator <= -> <
   * Goal 19. Weak Mutation 972: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:780 - ReplaceComparisonOperator >= -> -1
   * Goal 20. Weak Mutation 978: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:781 - ReplaceComparisonOperator >= -> -1
   * Goal 21. Weak Mutation 988: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:783 - ReplaceArithmeticOperator / -> +
   * Goal 22. Weak Mutation 989: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:783 - ReplaceArithmeticOperator / -> %
   * Goal 23. Weak Mutation 990: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:783 - ReplaceArithmeticOperator / -> -
   * Goal 24. Weak Mutation 991: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:783 - ReplaceArithmeticOperator / -> *
   * Goal 25. Weak Mutation 993: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:783 - ReplaceComparisonOperator < -> !=
   * Goal 26. Weak Mutation 997: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:784 - ReplaceArithmeticOperator * -> +
   * Goal 27. Weak Mutation 998: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:784 - ReplaceArithmeticOperator * -> %
   * Goal 28. Weak Mutation 999: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:784 - ReplaceArithmeticOperator * -> -
   * Goal 29. Weak Mutation 1000: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:784 - ReplaceArithmeticOperator * -> /
   * Goal 30. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:positive
   */

  @Test
  public void test047()  throws Throwable  {
      long long0 = MathUtils.mulAndCheck((-1860L), (-1860L));
  }

  //Test case number: 48
  /*
   * 21 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 90 IFLE L776 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I22 Branch 91 IFGE L780 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I115 Branch 96 IFLE L800 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I123 Branch 97 IFGT L805 - false
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 90 IFLE L776 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I22 Branch 91 IFGE L780 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 7. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I115 Branch 96 IFLE L800 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 8. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I123 Branch 97 IFGT L805 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 9. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 775
   * Goal 10. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 776
   * Goal 11. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 780
   * Goal 12. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 800
   * Goal 13. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 805
   * Goal 14. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 806
   * Goal 15. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 815
   * Goal 16. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 17. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 18. Weak Mutation 965: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:776 - ReplaceComparisonOperator <= -> ==
   * Goal 19. Weak Mutation 973: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:780 - ReplaceComparisonOperator >= -> ==
   * Goal 20. Weak Mutation 1034: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:800 - ReplaceComparisonOperator <= -> -1
   * Goal 21. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:positive
   */

  @Test
  public void test048()  throws Throwable  {
      long long0 = MathUtils.mulAndCheck((long) 304, 1358L);
  }

  //Test case number: 49
  /*
   * 16 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 88 IFLT L757 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I17 Branch 89 IFLE L757 - true
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I17 Branch 89 IFLE L757 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(II)I
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 88 IFLT L757 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(II)I
   * Goal 5. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 756
   * Goal 6. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 757
   * Goal 7. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 760
   * Goal 8. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I
   * Goal 9. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I
   * Goal 10. Weak Mutation 936: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:756 - ReplaceArithmeticOperator * -> +
   * Goal 11. Weak Mutation 937: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:756 - ReplaceArithmeticOperator * -> %
   * Goal 12. Weak Mutation 938: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:756 - ReplaceArithmeticOperator * -> -
   * Goal 13. Weak Mutation 939: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:756 - ReplaceArithmeticOperator * -> /
   * Goal 14. Weak Mutation 947: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:757 - ReplaceComparisonOperator < -> !=
   * Goal 15. Weak Mutation 956: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:757 - ReplaceComparisonOperator <= -> ==
   * Goal 16. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:positive
   */

  @Test
  public void test049()  throws Throwable  {
      int int0 = MathUtils.mulAndCheck(2292, 2292);
  }

  //Test case number: 50
  /*
   * 11 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 80 IFEQ L653 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 81 IFLT L656 - true
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 80 IFEQ L653 - true in context: org.apache.commons.math.util.MathUtils:indicator(F)F
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 81 IFLT L656 - true in context: org.apache.commons.math.util.MathUtils:indicator(F)F
   * Goal 5. org.apache.commons.math.util.MathUtils.indicator(F)F: Line 653
   * Goal 6. org.apache.commons.math.util.MathUtils.indicator(F)F: Line 656
   * Goal 7. org.apache.commons.math.util.MathUtils.indicator(F)F
   * Goal 8. org.apache.commons.math.util.MathUtils.indicator(F)F
   * Goal 9. Weak Mutation 828: org.apache.commons.math.util.MathUtils.indicator(F)F:653 - ReplaceComparisonOperator == -> !=
   * Goal 10. Weak Mutation 836: org.apache.commons.math.util.MathUtils.indicator(F)F:656 - ReplaceComparisonOperator < -> -2
   * Goal 11. org.apache.commons.math.util.MathUtils.indicator(F)F:negative
   */

  @Test
  public void test050()  throws Throwable  {
      float float0 = MathUtils.indicator((-1.0F));
  }

  //Test case number: 51
  /*
   * 11 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 80 IFEQ L653 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 81 IFLT L656 - false
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 80 IFEQ L653 - true in context: org.apache.commons.math.util.MathUtils:indicator(F)F
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 81 IFLT L656 - false in context: org.apache.commons.math.util.MathUtils:indicator(F)F
   * Goal 5. org.apache.commons.math.util.MathUtils.indicator(F)F: Line 653
   * Goal 6. org.apache.commons.math.util.MathUtils.indicator(F)F: Line 656
   * Goal 7. org.apache.commons.math.util.MathUtils.indicator(F)F
   * Goal 8. org.apache.commons.math.util.MathUtils.indicator(F)F
   * Goal 9. Weak Mutation 828: org.apache.commons.math.util.MathUtils.indicator(F)F:653 - ReplaceComparisonOperator == -> !=
   * Goal 10. Weak Mutation 837: org.apache.commons.math.util.MathUtils.indicator(F)F:656 - ReplaceComparisonOperator < -> !=
   * Goal 11. org.apache.commons.math.util.MathUtils.indicator(F)F:positive
   */

  @Test
  public void test051()  throws Throwable  {
      float float0 = MathUtils.indicator(180.17198F);
  }

  //Test case number: 52
  /*
   * 69 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 63 IFEQ L542 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 64 IFNE L542 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.gcd(II)I: I70 Branch 67 IFLE L554 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.gcd(II)I: I79 Branch 68 IFLE L557 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.gcd(II)I: I94 Branch 69 IFNE L562 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.gcd(II)I: I94 Branch 69 IFNE L562 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.gcd(II)I: I98 Branch 70 IFNE L562 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.gcd(II)I: I101 Branch 71 IF_ICMPGE L562 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.gcd(II)I: I122 Branch 72 IF_ICMPNE L568 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.gcd(II)I: I150 Branch 73 IF_ICMPNE L575 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.gcd(II)I: I165 Branch 74 IFNE L581 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.gcd(II)I: I176 Branch 75 IFLE L585 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.gcd(II)I: I198 Branch 76 IFNE L594 - false
   * Goal 14. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 64 IFNE L542 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 15. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 63 IFEQ L542 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 16. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I70 Branch 67 IFLE L554 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 17. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I79 Branch 68 IFLE L557 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 18. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I94 Branch 69 IFNE L562 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 19. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I98 Branch 70 IFNE L562 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 20. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I94 Branch 69 IFNE L562 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 21. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I101 Branch 71 IF_ICMPGE L562 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 22. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I122 Branch 72 IF_ICMPNE L568 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 23. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I150 Branch 73 IF_ICMPNE L575 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 24. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I165 Branch 74 IFNE L581 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 25. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I176 Branch 75 IFLE L585 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 26. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I198 Branch 76 IFNE L594 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 27. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 540
   * Goal 28. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 541
   * Goal 29. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 542
   * Goal 30. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 554
   * Goal 31. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 555
   * Goal 32. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 557
   * Goal 33. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 558
   * Goal 34. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 561
   * Goal 35. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 562
   * Goal 36. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 564
   * Goal 37. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 565
   * Goal 38. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 566
   * Goal 39. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 568
   * Goal 40. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 575
   * Goal 41. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 581
   * Goal 42. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 585
   * Goal 43. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 588
   * Goal 44. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 591
   * Goal 45. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 594
   * Goal 46. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 595
   * Goal 47. org.apache.commons.math.util.MathUtils.gcd(II)I
   * Goal 48. org.apache.commons.math.util.MathUtils.gcd(II)I
   * Goal 49. Weak Mutation 683: org.apache.commons.math.util.MathUtils.gcd(II)I:542 - ReplaceComparisonOperator == -> >=
   * Goal 50. Weak Mutation 689: org.apache.commons.math.util.MathUtils.gcd(II)I:542 - ReplaceComparisonOperator != -> <
   * Goal 51. Weak Mutation 731: org.apache.commons.math.util.MathUtils.gcd(II)I:554 - ReplaceComparisonOperator <= -> -1
   * Goal 52. Weak Mutation 740: org.apache.commons.math.util.MathUtils.gcd(II)I:557 - ReplaceComparisonOperator <= -> -1
   * Goal 53. Weak Mutation 751: org.apache.commons.math.util.MathUtils.gcd(II)I:562 - ReplaceBitwiseOperator & -> |
   * Goal 54. Weak Mutation 752: org.apache.commons.math.util.MathUtils.gcd(II)I:562 - ReplaceBitwiseOperator & -> ^
   * Goal 55. Weak Mutation 753: org.apache.commons.math.util.MathUtils.gcd(II)I:562 - ReplaceComparisonOperator != -> -1
   * Goal 56. Weak Mutation 754: org.apache.commons.math.util.MathUtils.gcd(II)I:562 - ReplaceComparisonOperator != -> <
   * Goal 57. Weak Mutation 760: org.apache.commons.math.util.MathUtils.gcd(II)I:562 - ReplaceBitwiseOperator & -> |
   * Goal 58. Weak Mutation 761: org.apache.commons.math.util.MathUtils.gcd(II)I:562 - ReplaceBitwiseOperator & -> ^
   * Goal 59. Weak Mutation 762: org.apache.commons.math.util.MathUtils.gcd(II)I:562 - ReplaceComparisonOperator != -> -1
   * Goal 60. Weak Mutation 773: org.apache.commons.math.util.MathUtils.gcd(II)I:562 - ReplaceComparisonOperator >= -> -1
   * Goal 61. Weak Mutation 783: org.apache.commons.math.util.MathUtils.gcd(II)I:564 - ReplaceArithmeticOperator / -> +
   * Goal 62. Weak Mutation 784: org.apache.commons.math.util.MathUtils.gcd(II)I:564 - ReplaceArithmeticOperator / -> %
   * Goal 63. Weak Mutation 785: org.apache.commons.math.util.MathUtils.gcd(II)I:564 - ReplaceArithmeticOperator / -> -
   * Goal 64. Weak Mutation 786: org.apache.commons.math.util.MathUtils.gcd(II)I:564 - ReplaceArithmeticOperator / -> *
   * Goal 65. Weak Mutation 794: org.apache.commons.math.util.MathUtils.gcd(II)I:565 - ReplaceArithmeticOperator / -> +
   * Goal 66. Weak Mutation 795: org.apache.commons.math.util.MathUtils.gcd(II)I:565 - ReplaceArithmeticOperator / -> %
   * Goal 67. Weak Mutation 796: org.apache.commons.math.util.MathUtils.gcd(II)I:565 - ReplaceArithmeticOperator / -> -
   * Goal 68. Weak Mutation 797: org.apache.commons.math.util.MathUtils.gcd(II)I:565 - ReplaceArithmeticOperator / -> *
   * Goal 69. org.apache.commons.math.util.MathUtils.gcd(II)I:positive
   */

  @Test
  public void test052()  throws Throwable  {
      int int0 = MathUtils.gcd(1158, 1158);
  }

  //Test case number: 53
  /*
   * 26 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 60 IFGE L496 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I28 Branch 61 IF_ICMPGE L499 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I47 Branch 62 IF_ICMPGT L503 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I47 Branch 62 IF_ICMPGT L503 - false
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 60 IFGE L496 - true in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I28 Branch 61 IF_ICMPGE L499 - true in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 7. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I47 Branch 62 IF_ICMPGT L503 - true in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 8. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I47 Branch 62 IF_ICMPGT L503 - false in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 9. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 496
   * Goal 10. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 499
   * Goal 11. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 502
   * Goal 12. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 503
   * Goal 13. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 504
   * Goal 14. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 506
   * Goal 15. org.apache.commons.math.util.MathUtils.factorialLog(I)D
   * Goal 16. org.apache.commons.math.util.MathUtils.factorialLog(I)D
   * Goal 17. Weak Mutation 631: org.apache.commons.math.util.MathUtils.factorialLog(I)D:496 - ReplaceComparisonOperator >= -> ==
   * Goal 18. Weak Mutation 645: org.apache.commons.math.util.MathUtils.factorialLog(I)D:499 - ReplaceComparisonOperator >= -> ==
   * Goal 19. Weak Mutation 661: org.apache.commons.math.util.MathUtils.factorialLog(I)D:503 - ReplaceComparisonOperator > -> !=
   * Goal 20. Weak Mutation 662: org.apache.commons.math.util.MathUtils.factorialLog(I)D:503 - ReplaceComparisonOperator > -> -2
   * Goal 21. Weak Mutation 663: org.apache.commons.math.util.MathUtils.factorialLog(I)D:503 - ReplaceComparisonOperator > -> >=
   * Goal 22. Weak Mutation 668: org.apache.commons.math.util.MathUtils.factorialLog(I)D:504 - ReplaceArithmeticOperator + -> %
   * Goal 23. Weak Mutation 669: org.apache.commons.math.util.MathUtils.factorialLog(I)D:504 - ReplaceArithmeticOperator + -> -
   * Goal 24. Weak Mutation 670: org.apache.commons.math.util.MathUtils.factorialLog(I)D:504 - ReplaceArithmeticOperator + -> *
   * Goal 25. Weak Mutation 671: org.apache.commons.math.util.MathUtils.factorialLog(I)D:504 - ReplaceArithmeticOperator + -> /
   * Goal 26. org.apache.commons.math.util.MathUtils.factorialLog(I)D:positive
   */

  @Test
  public void test053()  throws Throwable  {
      double double0 = MathUtils.factorialLog(3353);
  }

  //Test case number: 54
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.factorial(I)J: I3 Branch 56 IFGE L442 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.factorial(I)J: I28 Branch 57 IF_ICMPLE L445 - true
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.factorial(I)J: I3 Branch 56 IFGE L442 - true in context: org.apache.commons.math.util.MathUtils:factorial(I)J
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.factorial(I)J: I28 Branch 57 IF_ICMPLE L445 - true in context: org.apache.commons.math.util.MathUtils:factorial(I)J
   * Goal 5. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 442
   * Goal 6. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 445
   * Goal 7. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 449
   * Goal 8. org.apache.commons.math.util.MathUtils.factorial(I)J
   * Goal 9. org.apache.commons.math.util.MathUtils.factorial(I)J
   * Goal 10. Weak Mutation 573: org.apache.commons.math.util.MathUtils.factorial(I)J:442 - ReplaceComparisonOperator >= -> ==
   * Goal 11. Weak Mutation 587: org.apache.commons.math.util.MathUtils.factorial(I)J:445 - ReplaceComparisonOperator <= -> ==
   * Goal 12. org.apache.commons.math.util.MathUtils.factorial(I)J:positive
   */

  @Test
  public void test054()  throws Throwable  {
      long long0 = MathUtils.factorial(11);
  }

  //Test case number: 55
  /*
   * 10 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 40 IFEQ L371 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 42 IFNE L371 - false
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 42 IFNE L371 - false in context: org.apache.commons.math.util.MathUtils:equals(DD)Z
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 40 IFEQ L371 - true in context: org.apache.commons.math.util.MathUtils:equals(DD)Z
   * Goal 5. org.apache.commons.math.util.MathUtils.equals(DD)Z: Line 371
   * Goal 6. org.apache.commons.math.util.MathUtils.equals(DD)Z
   * Goal 7. org.apache.commons.math.util.MathUtils.equals(DD)Z
   * Goal 8. Weak Mutation 487: org.apache.commons.math.util.MathUtils.equals(DD)Z:371 - ReplaceComparisonOperator == -> !=
   * Goal 9. Weak Mutation 492: org.apache.commons.math.util.MathUtils.equals(DD)Z:371 - ReplaceComparisonOperator != -> -1
   * Goal 10. org.apache.commons.math.util.MathUtils.equals(DD)Z:true
   */

  @Test
  public void test055()  throws Throwable  {
      boolean boolean0 = MathUtils.equals((-123.0), (-123.0));
  }

  //Test case number: 56
  /*
   * 16 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I13 Branch 140 IFLT L1196 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I17 Branch 141 IFLE L1196 - false
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I17 Branch 141 IFLE L1196 - false in context: org.apache.commons.math.util.MathUtils:subAndCheck(II)I
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I13 Branch 140 IFLT L1196 - false in context: org.apache.commons.math.util.MathUtils:subAndCheck(II)I
   * Goal 5. subAndCheck(II)I_java.lang.ArithmeticException_EXPLICIT
   * Goal 6. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: Line 1195
   * Goal 7. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: Line 1196
   * Goal 8. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: Line 1197
   * Goal 9. org.apache.commons.math.util.MathUtils.subAndCheck(II)I
   * Goal 10. Weak Mutation 1546: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1195 - ReplaceArithmeticOperator - -> +
   * Goal 11. Weak Mutation 1547: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1195 - ReplaceArithmeticOperator - -> %
   * Goal 12. Weak Mutation 1548: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1195 - ReplaceArithmeticOperator - -> *
   * Goal 13. Weak Mutation 1549: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1195 - ReplaceArithmeticOperator - -> /
   * Goal 14. Weak Mutation 1557: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1196 - ReplaceComparisonOperator < -> !=
   * Goal 15. Weak Mutation 1565: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1196 - ReplaceComparisonOperator <= -> -1
   * Goal 16. Weak Mutation 1569: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1197 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test056()  throws Throwable  {
      // Undeclared exception!
      try { 
        MathUtils.subAndCheck(754, Integer.MIN_VALUE);
      } catch(ArithmeticException e) {
         //
         // overflow: subtract
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 57
  /*
   * 16 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I13 Branch 140 IFLT L1196 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I17 Branch 141 IFLE L1196 - true
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I13 Branch 140 IFLT L1196 - false in context: org.apache.commons.math.util.MathUtils:subAndCheck(II)I
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I17 Branch 141 IFLE L1196 - true in context: org.apache.commons.math.util.MathUtils:subAndCheck(II)I
   * Goal 5. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: Line 1195
   * Goal 6. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: Line 1196
   * Goal 7. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: Line 1199
   * Goal 8. org.apache.commons.math.util.MathUtils.subAndCheck(II)I
   * Goal 9. org.apache.commons.math.util.MathUtils.subAndCheck(II)I
   * Goal 10. Weak Mutation 1546: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1195 - ReplaceArithmeticOperator - -> +
   * Goal 11. Weak Mutation 1547: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1195 - ReplaceArithmeticOperator - -> %
   * Goal 12. Weak Mutation 1548: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1195 - ReplaceArithmeticOperator - -> *
   * Goal 13. Weak Mutation 1549: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1195 - ReplaceArithmeticOperator - -> /
   * Goal 14. Weak Mutation 1557: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1196 - ReplaceComparisonOperator < -> !=
   * Goal 15. Weak Mutation 1566: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1196 - ReplaceComparisonOperator <= -> ==
   * Goal 16. org.apache.commons.math.util.MathUtils.subAndCheck(II)I:negative
   */

  @Test
  public void test057()  throws Throwable  {
      int int0 = MathUtils.subAndCheck((-5544), (-171));
  }

  //Test case number: 58
  /*
   * 10 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.sign(S)S: I3 Branch 138 IFNE L1170 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.sign(S)S: I8 Branch 139 IFLE L1170 - false
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.sign(S)S: I3 Branch 138 IFNE L1170 - true in context: org.apache.commons.math.util.MathUtils:sign(S)S
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.sign(S)S: I8 Branch 139 IFLE L1170 - false in context: org.apache.commons.math.util.MathUtils:sign(S)S
   * Goal 5. org.apache.commons.math.util.MathUtils.sign(S)S: Line 1170
   * Goal 6. org.apache.commons.math.util.MathUtils.sign(S)S
   * Goal 7. org.apache.commons.math.util.MathUtils.sign(S)S
   * Goal 8. Weak Mutation 1513: org.apache.commons.math.util.MathUtils.sign(S)S:1170 - ReplaceComparisonOperator != -> <
   * Goal 9. Weak Mutation 1519: org.apache.commons.math.util.MathUtils.sign(S)S:1170 - ReplaceComparisonOperator <= -> -1
   * Goal 10. org.apache.commons.math.util.MathUtils.sign(S)S:positive
   */

  @Test
  public void test058()  throws Throwable  {
      short short0 = MathUtils.sign((short)2888);
  }

  //Test case number: 59
  /*
   * 7 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.sign(S)S: I3 Branch 138 IFNE L1170 - false
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.sign(S)S: I3 Branch 138 IFNE L1170 - false in context: org.apache.commons.math.util.MathUtils:sign(S)S
   * Goal 3. org.apache.commons.math.util.MathUtils.sign(S)S: Line 1170
   * Goal 4. org.apache.commons.math.util.MathUtils.sign(S)S
   * Goal 5. org.apache.commons.math.util.MathUtils.sign(S)S
   * Goal 6. Weak Mutation 1512: org.apache.commons.math.util.MathUtils.sign(S)S:1170 - ReplaceComparisonOperator != -> -1
   * Goal 7. org.apache.commons.math.util.MathUtils.sign(S)S:zero
   */

  @Test
  public void test059()  throws Throwable  {
      short short0 = MathUtils.sign((short)0);
  }

  //Test case number: 60
  /*
   * 10 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.sign(S)S: I3 Branch 138 IFNE L1170 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.sign(S)S: I8 Branch 139 IFLE L1170 - true
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.sign(S)S: I3 Branch 138 IFNE L1170 - true in context: org.apache.commons.math.util.MathUtils:sign(S)S
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.sign(S)S: I8 Branch 139 IFLE L1170 - true in context: org.apache.commons.math.util.MathUtils:sign(S)S
   * Goal 5. org.apache.commons.math.util.MathUtils.sign(S)S: Line 1170
   * Goal 6. org.apache.commons.math.util.MathUtils.sign(S)S
   * Goal 7. org.apache.commons.math.util.MathUtils.sign(S)S
   * Goal 8. Weak Mutation 1514: org.apache.commons.math.util.MathUtils.sign(S)S:1170 - ReplaceComparisonOperator != -> >
   * Goal 9. Weak Mutation 1520: org.apache.commons.math.util.MathUtils.sign(S)S:1170 - ReplaceComparisonOperator <= -> ==
   * Goal 10. org.apache.commons.math.util.MathUtils.sign(S)S:negative
   */

  @Test
  public void test060()  throws Throwable  {
      short short0 = MathUtils.sign((short) (-229));
  }

  //Test case number: 61
  /*
   * 10 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.sign(J)J: I5 Branch 136 IFNE L1155 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.sign(J)J: I12 Branch 137 IFLE L1155 - true
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.sign(J)J: I5 Branch 136 IFNE L1155 - true in context: org.apache.commons.math.util.MathUtils:sign(J)J
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.sign(J)J: I12 Branch 137 IFLE L1155 - true in context: org.apache.commons.math.util.MathUtils:sign(J)J
   * Goal 5. org.apache.commons.math.util.MathUtils.sign(J)J: Line 1155
   * Goal 6. org.apache.commons.math.util.MathUtils.sign(J)J
   * Goal 7. org.apache.commons.math.util.MathUtils.sign(J)J
   * Goal 8. Weak Mutation 1494: org.apache.commons.math.util.MathUtils.sign(J)J:1155 - ReplaceComparisonOperator != -> >
   * Goal 9. Weak Mutation 1501: org.apache.commons.math.util.MathUtils.sign(J)J:1155 - ReplaceComparisonOperator <= -> ==
   * Goal 10. org.apache.commons.math.util.MathUtils.sign(J)J:negative
   */

  @Test
  public void test061()  throws Throwable  {
      long long0 = MathUtils.sign((long) (-2142));
  }

  //Test case number: 62
  /*
   * 7 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.sign(J)J: I5 Branch 136 IFNE L1155 - false
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.sign(J)J: I5 Branch 136 IFNE L1155 - false in context: org.apache.commons.math.util.MathUtils:sign(J)J
   * Goal 3. org.apache.commons.math.util.MathUtils.sign(J)J: Line 1155
   * Goal 4. org.apache.commons.math.util.MathUtils.sign(J)J
   * Goal 5. org.apache.commons.math.util.MathUtils.sign(J)J
   * Goal 6. Weak Mutation 1492: org.apache.commons.math.util.MathUtils.sign(J)J:1155 - ReplaceComparisonOperator != -> -1
   * Goal 7. org.apache.commons.math.util.MathUtils.sign(J)J:zero
   */

  @Test
  public void test062()  throws Throwable  {
      long long0 = MathUtils.sign(0L);
  }

  //Test case number: 63
  /*
   * 10 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.sign(J)J: I5 Branch 136 IFNE L1155 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.sign(J)J: I12 Branch 137 IFLE L1155 - false
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.sign(J)J: I5 Branch 136 IFNE L1155 - true in context: org.apache.commons.math.util.MathUtils:sign(J)J
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.sign(J)J: I12 Branch 137 IFLE L1155 - false in context: org.apache.commons.math.util.MathUtils:sign(J)J
   * Goal 5. org.apache.commons.math.util.MathUtils.sign(J)J: Line 1155
   * Goal 6. org.apache.commons.math.util.MathUtils.sign(J)J
   * Goal 7. org.apache.commons.math.util.MathUtils.sign(J)J
   * Goal 8. Weak Mutation 1493: org.apache.commons.math.util.MathUtils.sign(J)J:1155 - ReplaceComparisonOperator != -> <
   * Goal 9. Weak Mutation 1500: org.apache.commons.math.util.MathUtils.sign(J)J:1155 - ReplaceComparisonOperator <= -> -1
   * Goal 10. org.apache.commons.math.util.MathUtils.sign(J)J:positive
   */

  @Test
  public void test063()  throws Throwable  {
      long long0 = MathUtils.sign(319L);
  }

  //Test case number: 64
  /*
   * 10 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.sign(I)I: I3 Branch 134 IFNE L1141 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.sign(I)I: I8 Branch 135 IFLE L1141 - true
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.sign(I)I: I8 Branch 135 IFLE L1141 - true in context: org.apache.commons.math.util.MathUtils:sign(I)I
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.sign(I)I: I3 Branch 134 IFNE L1141 - true in context: org.apache.commons.math.util.MathUtils:sign(I)I
   * Goal 5. org.apache.commons.math.util.MathUtils.sign(I)I: Line 1141
   * Goal 6. org.apache.commons.math.util.MathUtils.sign(I)I
   * Goal 7. org.apache.commons.math.util.MathUtils.sign(I)I
   * Goal 8. Weak Mutation 1477: org.apache.commons.math.util.MathUtils.sign(I)I:1141 - ReplaceComparisonOperator != -> >
   * Goal 9. Weak Mutation 1483: org.apache.commons.math.util.MathUtils.sign(I)I:1141 - ReplaceComparisonOperator <= -> ==
   * Goal 10. org.apache.commons.math.util.MathUtils.sign(I)I:negative
   */

  @Test
  public void test064()  throws Throwable  {
      int int0 = MathUtils.sign((-2380));
  }

  //Test case number: 65
  /*
   * 7 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.sign(I)I: I3 Branch 134 IFNE L1141 - false
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.sign(I)I: I3 Branch 134 IFNE L1141 - false in context: org.apache.commons.math.util.MathUtils:sign(I)I
   * Goal 3. org.apache.commons.math.util.MathUtils.sign(I)I: Line 1141
   * Goal 4. org.apache.commons.math.util.MathUtils.sign(I)I
   * Goal 5. org.apache.commons.math.util.MathUtils.sign(I)I
   * Goal 6. Weak Mutation 1475: org.apache.commons.math.util.MathUtils.sign(I)I:1141 - ReplaceComparisonOperator != -> -1
   * Goal 7. org.apache.commons.math.util.MathUtils.sign(I)I:zero
   */

  @Test
  public void test065()  throws Throwable  {
      int int0 = MathUtils.sign(0);
  }

  //Test case number: 66
  /*
   * 10 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.sign(I)I: I3 Branch 134 IFNE L1141 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.sign(I)I: I8 Branch 135 IFLE L1141 - false
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.sign(I)I: I3 Branch 134 IFNE L1141 - true in context: org.apache.commons.math.util.MathUtils:sign(I)I
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.sign(I)I: I8 Branch 135 IFLE L1141 - false in context: org.apache.commons.math.util.MathUtils:sign(I)I
   * Goal 5. org.apache.commons.math.util.MathUtils.sign(I)I: Line 1141
   * Goal 6. org.apache.commons.math.util.MathUtils.sign(I)I
   * Goal 7. org.apache.commons.math.util.MathUtils.sign(I)I
   * Goal 8. Weak Mutation 1476: org.apache.commons.math.util.MathUtils.sign(I)I:1141 - ReplaceComparisonOperator != -> <
   * Goal 9. Weak Mutation 1482: org.apache.commons.math.util.MathUtils.sign(I)I:1141 - ReplaceComparisonOperator <= -> -1
   * Goal 10. org.apache.commons.math.util.MathUtils.sign(I)I:positive
   */

  @Test
  public void test066()  throws Throwable  {
      int int0 = MathUtils.sign(934);
  }

  //Test case number: 67
  /*
   * 14 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.sign(F)F: I4 Branch 131 IFEQ L1124 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.sign(F)F: I14 Branch 132 IFNE L1127 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.sign(F)F: I21 Branch 133 IFLE L1127 - true
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I4 Branch 131 IFEQ L1124 - true in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I14 Branch 132 IFNE L1127 - true in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I21 Branch 133 IFLE L1127 - true in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 7. org.apache.commons.math.util.MathUtils.sign(F)F: Line 1124
   * Goal 8. org.apache.commons.math.util.MathUtils.sign(F)F: Line 1127
   * Goal 9. org.apache.commons.math.util.MathUtils.sign(F)F
   * Goal 10. org.apache.commons.math.util.MathUtils.sign(F)F
   * Goal 11. Weak Mutation 1447: org.apache.commons.math.util.MathUtils.sign(F)F:1124 - ReplaceComparisonOperator == -> !=
   * Goal 12. Weak Mutation 1457: org.apache.commons.math.util.MathUtils.sign(F)F:1127 - ReplaceComparisonOperator != -> >
   * Goal 13. Weak Mutation 1464: org.apache.commons.math.util.MathUtils.sign(F)F:1127 - ReplaceComparisonOperator <= -> ==
   * Goal 14. org.apache.commons.math.util.MathUtils.sign(F)F:negative
   */

  @Test
  public void test067()  throws Throwable  {
      float float0 = MathUtils.sign((float) (-1861L));
  }

  //Test case number: 68
  /*
   * 11 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.sign(F)F: I4 Branch 131 IFEQ L1124 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.sign(F)F: I14 Branch 132 IFNE L1127 - false
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I4 Branch 131 IFEQ L1124 - true in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I14 Branch 132 IFNE L1127 - false in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 5. org.apache.commons.math.util.MathUtils.sign(F)F: Line 1124
   * Goal 6. org.apache.commons.math.util.MathUtils.sign(F)F: Line 1127
   * Goal 7. org.apache.commons.math.util.MathUtils.sign(F)F
   * Goal 8. org.apache.commons.math.util.MathUtils.sign(F)F
   * Goal 9. Weak Mutation 1447: org.apache.commons.math.util.MathUtils.sign(F)F:1124 - ReplaceComparisonOperator == -> !=
   * Goal 10. Weak Mutation 1455: org.apache.commons.math.util.MathUtils.sign(F)F:1127 - ReplaceComparisonOperator != -> -1
   * Goal 11. org.apache.commons.math.util.MathUtils.sign(F)F:zero
   */

  @Test
  public void test068()  throws Throwable  {
      float float0 = MathUtils.sign((float) 0);
  }

  //Test case number: 69
  /*
   * 8 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.sign(F)F: I4 Branch 131 IFEQ L1124 - false
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I4 Branch 131 IFEQ L1124 - false in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 3. org.apache.commons.math.util.MathUtils.sign(F)F: Line 1124
   * Goal 4. org.apache.commons.math.util.MathUtils.sign(F)F: Line 1125
   * Goal 5. org.apache.commons.math.util.MathUtils.sign(F)F
   * Goal 6. org.apache.commons.math.util.MathUtils.sign(F)F
   * Goal 7. Weak Mutation 1447: org.apache.commons.math.util.MathUtils.sign(F)F:1124 - ReplaceComparisonOperator == -> !=
   * Goal 8. org.apache.commons.math.util.MathUtils.sign(F)F:positive
   */

  @Test
  public void test069()  throws Throwable  {
      float float0 = MathUtils.sign(Float.NaN);
  }

  //Test case number: 70
  /*
   * 14 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.sign(F)F: I4 Branch 131 IFEQ L1124 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.sign(F)F: I14 Branch 132 IFNE L1127 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.sign(F)F: I21 Branch 133 IFLE L1127 - false
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I4 Branch 131 IFEQ L1124 - true in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I21 Branch 133 IFLE L1127 - false in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I14 Branch 132 IFNE L1127 - true in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 7. org.apache.commons.math.util.MathUtils.sign(F)F: Line 1124
   * Goal 8. org.apache.commons.math.util.MathUtils.sign(F)F: Line 1127
   * Goal 9. org.apache.commons.math.util.MathUtils.sign(F)F
   * Goal 10. org.apache.commons.math.util.MathUtils.sign(F)F
   * Goal 11. Weak Mutation 1447: org.apache.commons.math.util.MathUtils.sign(F)F:1124 - ReplaceComparisonOperator == -> !=
   * Goal 12. Weak Mutation 1456: org.apache.commons.math.util.MathUtils.sign(F)F:1127 - ReplaceComparisonOperator != -> <
   * Goal 13. Weak Mutation 1463: org.apache.commons.math.util.MathUtils.sign(F)F:1127 - ReplaceComparisonOperator <= -> -1
   * Goal 14. org.apache.commons.math.util.MathUtils.sign(F)F:positive
   */

  @Test
  public void test070()  throws Throwable  {
      float float0 = MathUtils.sign(4148.2393F);
  }

  //Test case number: 71
  /*
   * 14 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.sign(D)D: I4 Branch 128 IFEQ L1106 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.sign(D)D: I14 Branch 129 IFNE L1109 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.sign(D)D: I21 Branch 130 IFLE L1109 - true
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.sign(D)D: I4 Branch 128 IFEQ L1106 - true in context: org.apache.commons.math.util.MathUtils:sign(D)D
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.sign(D)D: I21 Branch 130 IFLE L1109 - true in context: org.apache.commons.math.util.MathUtils:sign(D)D
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.sign(D)D: I14 Branch 129 IFNE L1109 - true in context: org.apache.commons.math.util.MathUtils:sign(D)D
   * Goal 7. org.apache.commons.math.util.MathUtils.sign(D)D: Line 1106
   * Goal 8. org.apache.commons.math.util.MathUtils.sign(D)D: Line 1109
   * Goal 9. org.apache.commons.math.util.MathUtils.sign(D)D
   * Goal 10. org.apache.commons.math.util.MathUtils.sign(D)D
   * Goal 11. Weak Mutation 1421: org.apache.commons.math.util.MathUtils.sign(D)D:1106 - ReplaceComparisonOperator == -> !=
   * Goal 12. Weak Mutation 1431: org.apache.commons.math.util.MathUtils.sign(D)D:1109 - ReplaceComparisonOperator != -> >
   * Goal 13. Weak Mutation 1438: org.apache.commons.math.util.MathUtils.sign(D)D:1109 - ReplaceComparisonOperator <= -> ==
   * Goal 14. org.apache.commons.math.util.MathUtils.sign(D)D:negative
   */

  @Test
  public void test071()  throws Throwable  {
      double double0 = MathUtils.sign((-2558.88));
  }

  //Test case number: 72
  /*
   * 11 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.sign(D)D: I4 Branch 128 IFEQ L1106 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.sign(D)D: I14 Branch 129 IFNE L1109 - false
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.sign(D)D: I4 Branch 128 IFEQ L1106 - true in context: org.apache.commons.math.util.MathUtils:sign(D)D
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.sign(D)D: I14 Branch 129 IFNE L1109 - false in context: org.apache.commons.math.util.MathUtils:sign(D)D
   * Goal 5. org.apache.commons.math.util.MathUtils.sign(D)D: Line 1106
   * Goal 6. org.apache.commons.math.util.MathUtils.sign(D)D: Line 1109
   * Goal 7. org.apache.commons.math.util.MathUtils.sign(D)D
   * Goal 8. org.apache.commons.math.util.MathUtils.sign(D)D
   * Goal 9. Weak Mutation 1421: org.apache.commons.math.util.MathUtils.sign(D)D:1106 - ReplaceComparisonOperator == -> !=
   * Goal 10. Weak Mutation 1429: org.apache.commons.math.util.MathUtils.sign(D)D:1109 - ReplaceComparisonOperator != -> -1
   * Goal 11. org.apache.commons.math.util.MathUtils.sign(D)D:zero
   */

  @Test
  public void test072()  throws Throwable  {
      double double0 = MathUtils.sign(0.0);
  }

  //Test case number: 73
  /*
   * 14 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.sign(D)D: I4 Branch 128 IFEQ L1106 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.sign(D)D: I14 Branch 129 IFNE L1109 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.sign(D)D: I21 Branch 130 IFLE L1109 - false
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.sign(D)D: I4 Branch 128 IFEQ L1106 - true in context: org.apache.commons.math.util.MathUtils:sign(D)D
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.sign(D)D: I21 Branch 130 IFLE L1109 - false in context: org.apache.commons.math.util.MathUtils:sign(D)D
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.sign(D)D: I14 Branch 129 IFNE L1109 - true in context: org.apache.commons.math.util.MathUtils:sign(D)D
   * Goal 7. org.apache.commons.math.util.MathUtils.sign(D)D: Line 1106
   * Goal 8. org.apache.commons.math.util.MathUtils.sign(D)D: Line 1109
   * Goal 9. org.apache.commons.math.util.MathUtils.sign(D)D
   * Goal 10. org.apache.commons.math.util.MathUtils.sign(D)D
   * Goal 11. Weak Mutation 1421: org.apache.commons.math.util.MathUtils.sign(D)D:1106 - ReplaceComparisonOperator == -> !=
   * Goal 12. Weak Mutation 1430: org.apache.commons.math.util.MathUtils.sign(D)D:1109 - ReplaceComparisonOperator != -> <
   * Goal 13. Weak Mutation 1437: org.apache.commons.math.util.MathUtils.sign(D)D:1109 - ReplaceComparisonOperator <= -> -1
   * Goal 14. org.apache.commons.math.util.MathUtils.sign(D)D:positive
   */

  @Test
  public void test073()  throws Throwable  {
      double double0 = MathUtils.sign(1593.59);
  }

  //Test case number: 74
  /*
   * 10 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.sign(B)B: I3 Branch 126 IFNE L1090 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.sign(B)B: I8 Branch 127 IFLE L1090 - true
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.sign(B)B: I3 Branch 126 IFNE L1090 - true in context: org.apache.commons.math.util.MathUtils:sign(B)B
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.sign(B)B: I8 Branch 127 IFLE L1090 - true in context: org.apache.commons.math.util.MathUtils:sign(B)B
   * Goal 5. org.apache.commons.math.util.MathUtils.sign(B)B: Line 1090
   * Goal 6. org.apache.commons.math.util.MathUtils.sign(B)B
   * Goal 7. org.apache.commons.math.util.MathUtils.sign(B)B
   * Goal 8. Weak Mutation 1408: org.apache.commons.math.util.MathUtils.sign(B)B:1090 - ReplaceComparisonOperator != -> >
   * Goal 9. Weak Mutation 1414: org.apache.commons.math.util.MathUtils.sign(B)B:1090 - ReplaceComparisonOperator <= -> ==
   * Goal 10. org.apache.commons.math.util.MathUtils.sign(B)B:negative
   */

  @Test
  public void test074()  throws Throwable  {
      byte byte0 = MathUtils.sign((byte) (-1));
  }

  //Test case number: 75
  /*
   * 7 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.sign(B)B: I3 Branch 126 IFNE L1090 - false
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.sign(B)B: I3 Branch 126 IFNE L1090 - false in context: org.apache.commons.math.util.MathUtils:sign(B)B
   * Goal 3. org.apache.commons.math.util.MathUtils.sign(B)B: Line 1090
   * Goal 4. org.apache.commons.math.util.MathUtils.sign(B)B
   * Goal 5. org.apache.commons.math.util.MathUtils.sign(B)B
   * Goal 6. Weak Mutation 1406: org.apache.commons.math.util.MathUtils.sign(B)B:1090 - ReplaceComparisonOperator != -> -1
   * Goal 7. org.apache.commons.math.util.MathUtils.sign(B)B:zero
   */

  @Test
  public void test075()  throws Throwable  {
      byte byte0 = MathUtils.sign((byte)0);
  }

  //Test case number: 76
  /*
   * 10 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.sign(B)B: I3 Branch 126 IFNE L1090 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.sign(B)B: I8 Branch 127 IFLE L1090 - false
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.sign(B)B: I3 Branch 126 IFNE L1090 - true in context: org.apache.commons.math.util.MathUtils:sign(B)B
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.sign(B)B: I8 Branch 127 IFLE L1090 - false in context: org.apache.commons.math.util.MathUtils:sign(B)B
   * Goal 5. org.apache.commons.math.util.MathUtils.sign(B)B: Line 1090
   * Goal 6. org.apache.commons.math.util.MathUtils.sign(B)B
   * Goal 7. org.apache.commons.math.util.MathUtils.sign(B)B
   * Goal 8. Weak Mutation 1407: org.apache.commons.math.util.MathUtils.sign(B)B:1090 - ReplaceComparisonOperator != -> <
   * Goal 9. Weak Mutation 1413: org.apache.commons.math.util.MathUtils.sign(B)B:1090 - ReplaceComparisonOperator <= -> -1
   * Goal 10. org.apache.commons.math.util.MathUtils.sign(B)B:positive
   */

  @Test
  public void test076()  throws Throwable  {
      byte byte0 = MathUtils.sign((byte)104);
  }

  //Test case number: 77
  /*
   * 39 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.round(FII)F: root-Branch
   * Goal 2. org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 80 IFEQ L653 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 81 IFLT L656 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 109 TABLESWITCH L1010 Case 0 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 110 TABLESWITCH L1010 Case 1 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 111 TABLESWITCH L1010 Case 2 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 112 TABLESWITCH L1010 Case 3 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 113 TABLESWITCH L1010 Case 4 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 114 TABLESWITCH L1010 Case 5 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 115 TABLESWITCH L1010 Case 6 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 116 TABLESWITCH L1010 Case 7 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 117 TABLESWITCH L1010 Default-Case - true
   * Goal 13. Branch org.apache.commons.math.util.MathUtils.round(FII)F: root-Branch in context: org.apache.commons.math.util.MathUtils:round(FII)F
   * Goal 14. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 112 TABLESWITCH L1010 Case 3 - false in context: 
   * Goal 15. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 117 TABLESWITCH L1010 Default-Case - true in context: 
   * Goal 16. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 110 TABLESWITCH L1010 Case 1 - false in context: 
   * Goal 17. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 116 TABLESWITCH L1010 Case 7 - false in context: 
   * Goal 18. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 114 TABLESWITCH L1010 Case 5 - false in context: 
   * Goal 19. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 113 TABLESWITCH L1010 Case 4 - false in context: 
   * Goal 20. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 115 TABLESWITCH L1010 Case 6 - false in context: 
   * Goal 21. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 109 TABLESWITCH L1010 Case 0 - false in context: 
   * Goal 22. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 111 TABLESWITCH L1010 Case 2 - false in context: 
   * Goal 23. round(FII)F_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 24. org.apache.commons.math.util.MathUtils.indicator(F)F: Line 653
   * Goal 25. org.apache.commons.math.util.MathUtils.indicator(F)F: Line 656
   * Goal 26. org.apache.commons.math.util.MathUtils.round(FII)F: Line 991
   * Goal 27. org.apache.commons.math.util.MathUtils.round(FII)F: Line 992
   * Goal 28. org.apache.commons.math.util.MathUtils.round(FII)F: Line 993
   * Goal 29. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1010
   * Goal 30. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1074
   * Goal 31. org.apache.commons.math.util.MathUtils.round(FII)F
   * Goal 32. Weak Mutation 828: org.apache.commons.math.util.MathUtils.indicator(F)F:653 - ReplaceComparisonOperator == -> !=
   * Goal 33. Weak Mutation 836: org.apache.commons.math.util.MathUtils.indicator(F)F:656 - ReplaceComparisonOperator < -> -2
   * Goal 34. Weak Mutation 1304: org.apache.commons.math.util.MathUtils.round(FII)F:992 - ReplaceArithmeticOperator * -> +
   * Goal 35. Weak Mutation 1305: org.apache.commons.math.util.MathUtils.round(FII)F:992 - ReplaceArithmeticOperator * -> %
   * Goal 36. Weak Mutation 1306: org.apache.commons.math.util.MathUtils.round(FII)F:992 - ReplaceArithmeticOperator * -> -
   * Goal 37. Weak Mutation 1310: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator * -> +
   * Goal 38. Weak Mutation 1311: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator * -> %
   * Goal 39. Weak Mutation 1313: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator * -> /
   */

  @Test
  public void test077()  throws Throwable  {
      // Undeclared exception!
      try { 
        MathUtils.round((-846.43024F), 3074, (-825));
      } catch(IllegalArgumentException e) {
         //
         // Invalid rounding method.
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 78
  /*
   * 52 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.round(FII)F: root-Branch
   * Goal 2. org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 80 IFEQ L653 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 81 IFLT L656 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 109 TABLESWITCH L1010 Case 0 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 110 TABLESWITCH L1010 Case 1 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 111 TABLESWITCH L1010 Case 2 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 112 TABLESWITCH L1010 Case 3 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 113 TABLESWITCH L1010 Case 4 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 114 TABLESWITCH L1010 Case 5 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 115 TABLESWITCH L1010 Case 6 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 116 TABLESWITCH L1010 Case 7 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 117 TABLESWITCH L1010 Default-Case - false
   * Goal 13. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I107 Branch 121 IFLE L1040 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I119 Branch 122 IFGE L1042 - false
   * Goal 15. Branch org.apache.commons.math.util.MathUtils.round(FII)F: root-Branch in context: org.apache.commons.math.util.MathUtils:round(FII)F
   * Goal 16. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 112 TABLESWITCH L1010 Case 3 - false in context: 
   * Goal 17. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 115 TABLESWITCH L1010 Case 6 - true in context: 
   * Goal 18. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 110 TABLESWITCH L1010 Case 1 - false in context: 
   * Goal 19. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 116 TABLESWITCH L1010 Case 7 - false in context: 
   * Goal 20. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 114 TABLESWITCH L1010 Case 5 - false in context: 
   * Goal 21. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 113 TABLESWITCH L1010 Case 4 - false in context: 
   * Goal 22. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 109 TABLESWITCH L1010 Case 0 - false in context: 
   * Goal 23. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 111 TABLESWITCH L1010 Case 2 - false in context: 
   * Goal 24. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 117 TABLESWITCH L1010 Default-Case - false in context: 
   * Goal 25. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I107 Branch 121 IFLE L1040 - true in context: 
   * Goal 26. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I119 Branch 122 IFGE L1042 - false in context: 
   * Goal 27. org.apache.commons.math.util.MathUtils.indicator(F)F: Line 653
   * Goal 28. org.apache.commons.math.util.MathUtils.indicator(F)F: Line 656
   * Goal 29. org.apache.commons.math.util.MathUtils.round(FII)F: Line 991
   * Goal 30. org.apache.commons.math.util.MathUtils.round(FII)F: Line 992
   * Goal 31. org.apache.commons.math.util.MathUtils.round(FII)F: Line 993
   * Goal 32. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1010
   * Goal 33. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1039
   * Goal 34. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1040
   * Goal 35. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1042
   * Goal 36. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1043
   * Goal 37. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1076
   * Goal 38. org.apache.commons.math.util.MathUtils.round(FII)F
   * Goal 39. org.apache.commons.math.util.MathUtils.round(FII)F
   * Goal 40. Weak Mutation 828: org.apache.commons.math.util.MathUtils.indicator(F)F:653 - ReplaceComparisonOperator == -> !=
   * Goal 41. Weak Mutation 836: org.apache.commons.math.util.MathUtils.indicator(F)F:656 - ReplaceComparisonOperator < -> -2
   * Goal 42. Weak Mutation 1304: org.apache.commons.math.util.MathUtils.round(FII)F:992 - ReplaceArithmeticOperator * -> +
   * Goal 43. Weak Mutation 1306: org.apache.commons.math.util.MathUtils.round(FII)F:992 - ReplaceArithmeticOperator * -> -
   * Goal 44. Weak Mutation 1311: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator * -> %
   * Goal 45. Weak Mutation 1313: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator * -> /
   * Goal 46. Weak Mutation 1319: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator / -> +
   * Goal 47. Weak Mutation 1321: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator / -> -
   * Goal 48. Weak Mutation 1322: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator / -> *
   * Goal 49. Weak Mutation 1390: org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D:1039 - ReplaceArithmeticOperator - -> %
   * Goal 50. Weak Mutation 1392: org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D:1039 - ReplaceArithmeticOperator - -> /
   * Goal 51. Weak Mutation 1400: org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D:1040 - ReplaceComparisonOperator <= -> ==
   * Goal 52. org.apache.commons.math.util.MathUtils.round(FII)F:positive
   */

  @Test
  public void test078()  throws Throwable  {
      float float0 = MathUtils.round((-698.4453F), (-150), 6);
  }

  //Test case number: 79
  /*
   * 90 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.round(FII)F: root-Branch
   * Goal 2. org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 80 IFEQ L653 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 81 IFLT L656 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I4 Branch 98 IFNE L838 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I7 Branch 99 IFEQ L838 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I17 Branch 100 IFNE L840 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I62 Branch 102 IFLT L852 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I94 Branch 104 IFNE L863 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 109 TABLESWITCH L1010 Case 0 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 110 TABLESWITCH L1010 Case 1 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 111 TABLESWITCH L1010 Case 2 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 112 TABLESWITCH L1010 Case 3 - false
   * Goal 13. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 113 TABLESWITCH L1010 Case 4 - false
   * Goal 14. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 114 TABLESWITCH L1010 Case 5 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 115 TABLESWITCH L1010 Case 6 - false
   * Goal 16. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 116 TABLESWITCH L1010 Case 7 - false
   * Goal 17. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 117 TABLESWITCH L1010 Default-Case - false
   * Goal 18. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I80 Branch 120 IFLE L1031 - false
   * Goal 19. Branch org.apache.commons.math.util.MathUtils.round(FII)F: root-Branch in context: org.apache.commons.math.util.MathUtils:round(FII)F
   * Goal 20. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 112 TABLESWITCH L1010 Case 3 - false in context: 
   * Goal 21. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 110 TABLESWITCH L1010 Case 1 - false in context: 
   * Goal 22. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 116 TABLESWITCH L1010 Case 7 - false in context: 
   * Goal 23. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 113 TABLESWITCH L1010 Case 4 - false in context: 
   * Goal 24. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 114 TABLESWITCH L1010 Case 5 - true in context: 
   * Goal 25. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 115 TABLESWITCH L1010 Case 6 - false in context: 
   * Goal 26. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 109 TABLESWITCH L1010 Case 0 - false in context: 
   * Goal 27. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 111 TABLESWITCH L1010 Case 2 - false in context: 
   * Goal 28. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 117 TABLESWITCH L1010 Default-Case - false in context: 
   * Goal 29. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I80 Branch 120 IFLE L1031 - false in context: 
   * Goal 30. org.apache.commons.math.util.MathUtils.indicator(F)F: Line 653
   * Goal 31. org.apache.commons.math.util.MathUtils.indicator(F)F: Line 656
   * Goal 32. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 838
   * Goal 33. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 840
   * Goal 34. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 847
   * Goal 35. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 848
   * Goal 36. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 849
   * Goal 37. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 850
   * Goal 38. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 852
   * Goal 39. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 863
   * Goal 40. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 868
   * Goal 41. org.apache.commons.math.util.MathUtils.round(FII)F: Line 991
   * Goal 42. org.apache.commons.math.util.MathUtils.round(FII)F: Line 992
   * Goal 43. org.apache.commons.math.util.MathUtils.round(FII)F: Line 993
   * Goal 44. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1010
   * Goal 45. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1029
   * Goal 46. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1030
   * Goal 47. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1031
   * Goal 48. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1032
   * Goal 49. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1076
   * Goal 50. org.apache.commons.math.util.MathUtils.round(FII)F
   * Goal 51. org.apache.commons.math.util.MathUtils.round(FII)F
   * Goal 52. Weak Mutation 828: org.apache.commons.math.util.MathUtils.indicator(F)F:653 - ReplaceComparisonOperator == -> !=
   * Goal 53. Weak Mutation 837: org.apache.commons.math.util.MathUtils.indicator(F)F:656 - ReplaceComparisonOperator < -> !=
   * Goal 54. Weak Mutation 1038: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:838 - ReplaceComparisonOperator != -> ==
   * Goal 55. Weak Mutation 1040: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:838 - ReplaceComparisonOperator == -> !=
   * Goal 56. Weak Mutation 1046: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:840 - ReplaceComparisonOperator != -> <
   * Goal 57. Weak Mutation 1067: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:848 - ReplaceBitwiseOperator & -> |
   * Goal 58. Weak Mutation 1068: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:848 - ReplaceBitwiseOperator & -> ^
   * Goal 59. Weak Mutation 1075: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:849 - ReplaceBitwiseOperator & -> |
   * Goal 60. Weak Mutation 1076: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:849 - ReplaceBitwiseOperator & -> ^
   * Goal 61. Weak Mutation 1083: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:850 - ReplaceBitwiseOperator & -> |
   * Goal 62. Weak Mutation 1084: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:850 - ReplaceBitwiseOperator & -> ^
   * Goal 63. Weak Mutation 1089: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:852 - ReplaceArithmeticOperator - -> %
   * Goal 64. Weak Mutation 1093: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:852 - ReplaceArithmeticOperator * -> %
   * Goal 65. Weak Mutation 1094: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:852 - ReplaceArithmeticOperator * -> -
   * Goal 66. Weak Mutation 1095: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:852 - ReplaceArithmeticOperator * -> /
   * Goal 67. Weak Mutation 1098: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:852 - ReplaceComparisonOperator < -> -2
   * Goal 68. Weak Mutation 1141: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:863 - ReplaceComparisonOperator != -> <
   * Goal 69. Weak Mutation 1166: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:868 - ReplaceBitwiseOperator | -> &
   * Goal 70. Weak Mutation 1171: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:868 - ReplaceArithmeticOperator - -> +
   * Goal 71. Weak Mutation 1172: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:868 - ReplaceArithmeticOperator - -> %
   * Goal 72. Weak Mutation 1173: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:868 - ReplaceArithmeticOperator - -> *
   * Goal 73. Weak Mutation 1174: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:868 - ReplaceArithmeticOperator - -> /
   * Goal 74. Weak Mutation 1176: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:868 - ReplaceBitwiseOperator | -> &
   * Goal 75. Weak Mutation 1304: org.apache.commons.math.util.MathUtils.round(FII)F:992 - ReplaceArithmeticOperator * -> +
   * Goal 76. Weak Mutation 1305: org.apache.commons.math.util.MathUtils.round(FII)F:992 - ReplaceArithmeticOperator * -> %
   * Goal 77. Weak Mutation 1306: org.apache.commons.math.util.MathUtils.round(FII)F:992 - ReplaceArithmeticOperator * -> -
   * Goal 78. Weak Mutation 1310: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator * -> +
   * Goal 79. Weak Mutation 1311: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator * -> %
   * Goal 80. Weak Mutation 1312: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator * -> -
   * Goal 81. Weak Mutation 1313: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator * -> /
   * Goal 82. Weak Mutation 1319: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator / -> +
   * Goal 83. Weak Mutation 1320: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator / -> %
   * Goal 84. Weak Mutation 1321: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator / -> -
   * Goal 85. Weak Mutation 1322: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator / -> *
   * Goal 86. Weak Mutation 1372: org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D:1030 - ReplaceArithmeticOperator - -> +
   * Goal 87. Weak Mutation 1374: org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D:1030 - ReplaceArithmeticOperator - -> *
   * Goal 88. Weak Mutation 1375: org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D:1030 - ReplaceArithmeticOperator - -> /
   * Goal 89. Weak Mutation 1382: org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D:1031 - ReplaceComparisonOperator <= -> -1
   * Goal 90. org.apache.commons.math.util.MathUtils.round(FII)F:positive
   */

  @Test
  public void test079()  throws Throwable  {
      float float0 = MathUtils.round((float) 5, 5, 5);
  }

  //Test case number: 80
  /*
   * 86 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.round(FII)F: root-Branch
   * Goal 2. org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 80 IFEQ L653 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 81 IFLT L656 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I4 Branch 98 IFNE L838 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I7 Branch 99 IFEQ L838 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I17 Branch 100 IFNE L840 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I62 Branch 102 IFLT L852 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I68 Branch 103 IFNE L854 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 109 TABLESWITCH L1010 Case 0 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 110 TABLESWITCH L1010 Case 1 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 111 TABLESWITCH L1010 Case 2 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 112 TABLESWITCH L1010 Case 3 - false
   * Goal 13. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 113 TABLESWITCH L1010 Case 4 - false
   * Goal 14. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 114 TABLESWITCH L1010 Case 5 - false
   * Goal 15. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 115 TABLESWITCH L1010 Case 6 - false
   * Goal 16. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 116 TABLESWITCH L1010 Case 7 - false
   * Goal 17. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 117 TABLESWITCH L1010 Default-Case - false
   * Goal 18. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I9 Branch 118 IFNE L1012 - true
   * Goal 19. Branch org.apache.commons.math.util.MathUtils.round(FII)F: root-Branch in context: org.apache.commons.math.util.MathUtils:round(FII)F
   * Goal 20. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 112 TABLESWITCH L1010 Case 3 - false in context: 
   * Goal 21. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 110 TABLESWITCH L1010 Case 1 - false in context: 
   * Goal 22. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 116 TABLESWITCH L1010 Case 7 - false in context: 
   * Goal 23. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 111 TABLESWITCH L1010 Case 2 - true in context: 
   * Goal 24. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 114 TABLESWITCH L1010 Case 5 - false in context: 
   * Goal 25. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 113 TABLESWITCH L1010 Case 4 - false in context: 
   * Goal 26. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 115 TABLESWITCH L1010 Case 6 - false in context: 
   * Goal 27. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 109 TABLESWITCH L1010 Case 0 - false in context: 
   * Goal 28. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 117 TABLESWITCH L1010 Default-Case - false in context: 
   * Goal 29. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I9 Branch 118 IFNE L1012 - true in context: 
   * Goal 30. org.apache.commons.math.util.MathUtils.indicator(F)F: Line 653
   * Goal 31. org.apache.commons.math.util.MathUtils.indicator(F)F: Line 656
   * Goal 32. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 838
   * Goal 33. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 840
   * Goal 34. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 847
   * Goal 35. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 848
   * Goal 36. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 849
   * Goal 37. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 850
   * Goal 38. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 852
   * Goal 39. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 854
   * Goal 40. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 858
   * Goal 41. org.apache.commons.math.util.MathUtils.round(FII)F: Line 991
   * Goal 42. org.apache.commons.math.util.MathUtils.round(FII)F: Line 992
   * Goal 43. org.apache.commons.math.util.MathUtils.round(FII)F: Line 993
   * Goal 44. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1010
   * Goal 45. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1012
   * Goal 46. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1015
   * Goal 47. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1017
   * Goal 48. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1076
   * Goal 49. org.apache.commons.math.util.MathUtils.round(FII)F
   * Goal 50. org.apache.commons.math.util.MathUtils.round(FII)F
   * Goal 51. Weak Mutation 828: org.apache.commons.math.util.MathUtils.indicator(F)F:653 - ReplaceComparisonOperator == -> !=
   * Goal 52. Weak Mutation 837: org.apache.commons.math.util.MathUtils.indicator(F)F:656 - ReplaceComparisonOperator < -> !=
   * Goal 53. Weak Mutation 1038: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:838 - ReplaceComparisonOperator != -> ==
   * Goal 54. Weak Mutation 1040: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:838 - ReplaceComparisonOperator == -> !=
   * Goal 55. Weak Mutation 1046: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:840 - ReplaceComparisonOperator != -> <
   * Goal 56. Weak Mutation 1067: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:848 - ReplaceBitwiseOperator & -> |
   * Goal 57. Weak Mutation 1068: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:848 - ReplaceBitwiseOperator & -> ^
   * Goal 58. Weak Mutation 1075: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:849 - ReplaceBitwiseOperator & -> |
   * Goal 59. Weak Mutation 1076: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:849 - ReplaceBitwiseOperator & -> ^
   * Goal 60. Weak Mutation 1083: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:850 - ReplaceBitwiseOperator & -> |
   * Goal 61. Weak Mutation 1084: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:850 - ReplaceBitwiseOperator & -> ^
   * Goal 62. Weak Mutation 1089: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:852 - ReplaceArithmeticOperator - -> %
   * Goal 63. Weak Mutation 1093: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:852 - ReplaceArithmeticOperator * -> %
   * Goal 64. Weak Mutation 1094: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:852 - ReplaceArithmeticOperator * -> -
   * Goal 65. Weak Mutation 1095: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:852 - ReplaceArithmeticOperator * -> /
   * Goal 66. Weak Mutation 1099: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:852 - ReplaceComparisonOperator < -> !=
   * Goal 67. Weak Mutation 1109: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:854 - ReplaceComparisonOperator != -> >
   * Goal 68. Weak Mutation 1126: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:858 - ReplaceBitwiseOperator | -> &
   * Goal 69. Weak Mutation 1131: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:858 - ReplaceArithmeticOperator + -> %
   * Goal 70. Weak Mutation 1132: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:858 - ReplaceArithmeticOperator + -> -
   * Goal 71. Weak Mutation 1133: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:858 - ReplaceArithmeticOperator + -> *
   * Goal 72. Weak Mutation 1134: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:858 - ReplaceArithmeticOperator + -> /
   * Goal 73. Weak Mutation 1136: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:858 - ReplaceBitwiseOperator | -> &
   * Goal 74. Weak Mutation 1304: org.apache.commons.math.util.MathUtils.round(FII)F:992 - ReplaceArithmeticOperator * -> +
   * Goal 75. Weak Mutation 1305: org.apache.commons.math.util.MathUtils.round(FII)F:992 - ReplaceArithmeticOperator * -> %
   * Goal 76. Weak Mutation 1306: org.apache.commons.math.util.MathUtils.round(FII)F:992 - ReplaceArithmeticOperator * -> -
   * Goal 77. Weak Mutation 1310: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator * -> +
   * Goal 78. Weak Mutation 1311: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator * -> %
   * Goal 79. Weak Mutation 1312: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator * -> -
   * Goal 80. Weak Mutation 1313: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator * -> /
   * Goal 81. Weak Mutation 1319: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator / -> +
   * Goal 82. Weak Mutation 1320: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator / -> %
   * Goal 83. Weak Mutation 1321: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator / -> -
   * Goal 84. Weak Mutation 1322: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator / -> *
   * Goal 85. Weak Mutation 1331: org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D:1012 - ReplaceComparisonOperator != -> <
   * Goal 86. org.apache.commons.math.util.MathUtils.round(FII)F:positive
   */

  @Test
  public void test080()  throws Throwable  {
      float float0 = MathUtils.round(893.3F, 6, 2);
  }

  //Test case number: 81
  /*
   * 80 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.round(FII)F: root-Branch
   * Goal 2. org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 80 IFEQ L653 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 81 IFLT L656 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I4 Branch 98 IFNE L838 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I7 Branch 99 IFEQ L838 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I17 Branch 100 IFNE L840 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I62 Branch 102 IFLT L852 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I68 Branch 103 IFNE L854 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 109 TABLESWITCH L1010 Case 0 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 110 TABLESWITCH L1010 Case 1 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 111 TABLESWITCH L1010 Case 2 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 112 TABLESWITCH L1010 Case 3 - false
   * Goal 13. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 113 TABLESWITCH L1010 Case 4 - false
   * Goal 14. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 114 TABLESWITCH L1010 Case 5 - false
   * Goal 15. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 115 TABLESWITCH L1010 Case 6 - false
   * Goal 16. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 116 TABLESWITCH L1010 Case 7 - false
   * Goal 17. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 117 TABLESWITCH L1010 Default-Case - false
   * Goal 18. Branch org.apache.commons.math.util.MathUtils.round(FII)F: root-Branch in context: org.apache.commons.math.util.MathUtils:round(FII)F
   * Goal 19. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 112 TABLESWITCH L1010 Case 3 - false in context: 
   * Goal 20. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 110 TABLESWITCH L1010 Case 1 - false in context: 
   * Goal 21. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 116 TABLESWITCH L1010 Case 7 - false in context: 
   * Goal 22. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 109 TABLESWITCH L1010 Case 0 - true in context: 
   * Goal 23. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 114 TABLESWITCH L1010 Case 5 - false in context: 
   * Goal 24. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 113 TABLESWITCH L1010 Case 4 - false in context: 
   * Goal 25. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 115 TABLESWITCH L1010 Case 6 - false in context: 
   * Goal 26. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 111 TABLESWITCH L1010 Case 2 - false in context: 
   * Goal 27. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 117 TABLESWITCH L1010 Default-Case - false in context: 
   * Goal 28. org.apache.commons.math.util.MathUtils.indicator(F)F: Line 653
   * Goal 29. org.apache.commons.math.util.MathUtils.indicator(F)F: Line 656
   * Goal 30. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 838
   * Goal 31. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 840
   * Goal 32. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 847
   * Goal 33. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 848
   * Goal 34. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 849
   * Goal 35. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 850
   * Goal 36. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 852
   * Goal 37. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 854
   * Goal 38. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 858
   * Goal 39. org.apache.commons.math.util.MathUtils.round(FII)F: Line 991
   * Goal 40. org.apache.commons.math.util.MathUtils.round(FII)F: Line 992
   * Goal 41. org.apache.commons.math.util.MathUtils.round(FII)F: Line 993
   * Goal 42. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1010
   * Goal 43. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1071
   * Goal 44. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1072
   * Goal 45. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1076
   * Goal 46. org.apache.commons.math.util.MathUtils.round(FII)F
   * Goal 47. org.apache.commons.math.util.MathUtils.round(FII)F
   * Goal 48. Weak Mutation 828: org.apache.commons.math.util.MathUtils.indicator(F)F:653 - ReplaceComparisonOperator == -> !=
   * Goal 49. Weak Mutation 837: org.apache.commons.math.util.MathUtils.indicator(F)F:656 - ReplaceComparisonOperator < -> !=
   * Goal 50. Weak Mutation 1038: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:838 - ReplaceComparisonOperator != -> ==
   * Goal 51. Weak Mutation 1040: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:838 - ReplaceComparisonOperator == -> !=
   * Goal 52. Weak Mutation 1046: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:840 - ReplaceComparisonOperator != -> <
   * Goal 53. Weak Mutation 1067: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:848 - ReplaceBitwiseOperator & -> |
   * Goal 54. Weak Mutation 1068: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:848 - ReplaceBitwiseOperator & -> ^
   * Goal 55. Weak Mutation 1075: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:849 - ReplaceBitwiseOperator & -> |
   * Goal 56. Weak Mutation 1076: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:849 - ReplaceBitwiseOperator & -> ^
   * Goal 57. Weak Mutation 1083: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:850 - ReplaceBitwiseOperator & -> |
   * Goal 58. Weak Mutation 1084: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:850 - ReplaceBitwiseOperator & -> ^
   * Goal 59. Weak Mutation 1089: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:852 - ReplaceArithmeticOperator - -> %
   * Goal 60. Weak Mutation 1093: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:852 - ReplaceArithmeticOperator * -> %
   * Goal 61. Weak Mutation 1094: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:852 - ReplaceArithmeticOperator * -> -
   * Goal 62. Weak Mutation 1095: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:852 - ReplaceArithmeticOperator * -> /
   * Goal 63. Weak Mutation 1099: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:852 - ReplaceComparisonOperator < -> !=
   * Goal 64. Weak Mutation 1109: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:854 - ReplaceComparisonOperator != -> >
   * Goal 65. Weak Mutation 1126: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:858 - ReplaceBitwiseOperator | -> &
   * Goal 66. Weak Mutation 1131: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:858 - ReplaceArithmeticOperator + -> %
   * Goal 67. Weak Mutation 1132: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:858 - ReplaceArithmeticOperator + -> -
   * Goal 68. Weak Mutation 1133: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:858 - ReplaceArithmeticOperator + -> *
   * Goal 69. Weak Mutation 1134: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:858 - ReplaceArithmeticOperator + -> /
   * Goal 70. Weak Mutation 1136: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:858 - ReplaceBitwiseOperator | -> &
   * Goal 71. Weak Mutation 1304: org.apache.commons.math.util.MathUtils.round(FII)F:992 - ReplaceArithmeticOperator * -> +
   * Goal 72. Weak Mutation 1305: org.apache.commons.math.util.MathUtils.round(FII)F:992 - ReplaceArithmeticOperator * -> %
   * Goal 73. Weak Mutation 1306: org.apache.commons.math.util.MathUtils.round(FII)F:992 - ReplaceArithmeticOperator * -> -
   * Goal 74. Weak Mutation 1310: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator * -> +
   * Goal 75. Weak Mutation 1311: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator * -> %
   * Goal 76. Weak Mutation 1312: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator * -> -
   * Goal 77. Weak Mutation 1319: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator / -> +
   * Goal 78. Weak Mutation 1320: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator / -> %
   * Goal 79. Weak Mutation 1321: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator / -> -
   * Goal 80. org.apache.commons.math.util.MathUtils.round(FII)F:positive
   */

  @Test
  public void test081()  throws Throwable  {
      float float0 = MathUtils.round(2106.94F, 0, 0);
  }

  //Test case number: 82
  /*
   * 11 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.round(DII)D: I27 Branch 108 IFEQ L957 - true
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.round(DII)D: I27 Branch 108 IFEQ L957 - true in context: org.apache.commons.math.util.MathUtils:round(DII)D
   * Goal 3. org.apache.commons.math.util.MathUtils.round(DII)D: Line 952
   * Goal 4. org.apache.commons.math.util.MathUtils.round(DII)D: Line 953
   * Goal 5. org.apache.commons.math.util.MathUtils.round(DII)D: Line 956
   * Goal 6. org.apache.commons.math.util.MathUtils.round(DII)D: Line 957
   * Goal 7. org.apache.commons.math.util.MathUtils.round(DII)D: Line 960
   * Goal 8. org.apache.commons.math.util.MathUtils.round(DII)D
   * Goal 9. org.apache.commons.math.util.MathUtils.round(DII)D
   * Goal 10. Weak Mutation 1279: org.apache.commons.math.util.MathUtils.round(DII)D:957 - ReplaceComparisonOperator == -> !=
   * Goal 11. org.apache.commons.math.util.MathUtils.round(DII)D:positive
   */

  @Test
  public void test082()  throws Throwable  {
      double double0 = MathUtils.round(Double.NaN, 0, 0);
  }

  //Test case number: 83
  /*
   * 11 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.scalb(DI)D: I5 Branch 105 IFEQ L887 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.scalb(DI)D: I8 Branch 106 IFNE L887 - true
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I8 Branch 106 IFNE L887 - true in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I5 Branch 105 IFEQ L887 - false in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 5. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 887
   * Goal 6. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 888
   * Goal 7. org.apache.commons.math.util.MathUtils.scalb(DI)D
   * Goal 8. org.apache.commons.math.util.MathUtils.scalb(DI)D
   * Goal 9. Weak Mutation 1181: org.apache.commons.math.util.MathUtils.scalb(DI)D:887 - ReplaceComparisonOperator == -> >=
   * Goal 10. Weak Mutation 1184: org.apache.commons.math.util.MathUtils.scalb(DI)D:887 - ReplaceComparisonOperator != -> ==
   * Goal 11. org.apache.commons.math.util.MathUtils.scalb(DI)D:positive
   */

  @Test
  public void test083()  throws Throwable  {
      double double0 = MathUtils.scalb(Double.NaN, (-738));
  }

  //Test case number: 84
  /*
   * 8 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.scalb(DI)D: I5 Branch 105 IFEQ L887 - true
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I5 Branch 105 IFEQ L887 - true in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 3. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 887
   * Goal 4. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 888
   * Goal 5. org.apache.commons.math.util.MathUtils.scalb(DI)D
   * Goal 6. org.apache.commons.math.util.MathUtils.scalb(DI)D
   * Goal 7. Weak Mutation 1180: org.apache.commons.math.util.MathUtils.scalb(DI)D:887 - ReplaceComparisonOperator == -> -2
   * Goal 8. org.apache.commons.math.util.MathUtils.scalb(DI)D:zero
   */

  @Test
  public void test084()  throws Throwable  {
      double double0 = MathUtils.scalb(0.0, 8);
  }

  //Test case number: 85
  /*
   * 47 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I4 Branch 98 IFNE L838 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I7 Branch 99 IFEQ L838 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I17 Branch 100 IFNE L840 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I62 Branch 102 IFLT L852 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I94 Branch 104 IFNE L863 - true
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I7 Branch 99 IFEQ L838 - true in context: org.apache.commons.math.util.MathUtils:nextAfter(DD)D
   * Goal 7. Branch org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I4 Branch 98 IFNE L838 - false in context: org.apache.commons.math.util.MathUtils:nextAfter(DD)D
   * Goal 8. Branch org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I17 Branch 100 IFNE L840 - true in context: org.apache.commons.math.util.MathUtils:nextAfter(DD)D
   * Goal 9. Branch org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I62 Branch 102 IFLT L852 - true in context: org.apache.commons.math.util.MathUtils:nextAfter(DD)D
   * Goal 10. Branch org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I94 Branch 104 IFNE L863 - true in context: org.apache.commons.math.util.MathUtils:nextAfter(DD)D
   * Goal 11. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 838
   * Goal 12. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 840
   * Goal 13. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 847
   * Goal 14. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 848
   * Goal 15. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 849
   * Goal 16. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 850
   * Goal 17. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 852
   * Goal 18. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 863
   * Goal 19. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 868
   * Goal 20. org.apache.commons.math.util.MathUtils.nextAfter(DD)D
   * Goal 21. org.apache.commons.math.util.MathUtils.nextAfter(DD)D
   * Goal 22. Weak Mutation 1038: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:838 - ReplaceComparisonOperator != -> ==
   * Goal 23. Weak Mutation 1040: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:838 - ReplaceComparisonOperator == -> !=
   * Goal 24. Weak Mutation 1047: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:840 - ReplaceComparisonOperator != -> >
   * Goal 25. Weak Mutation 1067: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:848 - ReplaceBitwiseOperator & -> |
   * Goal 26. Weak Mutation 1068: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:848 - ReplaceBitwiseOperator & -> ^
   * Goal 27. Weak Mutation 1075: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:849 - ReplaceBitwiseOperator & -> |
   * Goal 28. Weak Mutation 1076: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:849 - ReplaceBitwiseOperator & -> ^
   * Goal 29. Weak Mutation 1083: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:850 - ReplaceBitwiseOperator & -> |
   * Goal 30. Weak Mutation 1084: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:850 - ReplaceBitwiseOperator & -> ^
   * Goal 31. Weak Mutation 1088: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:852 - ReplaceArithmeticOperator - -> +
   * Goal 32. Weak Mutation 1089: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:852 - ReplaceArithmeticOperator - -> %
   * Goal 33. Weak Mutation 1090: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:852 - ReplaceArithmeticOperator - -> *
   * Goal 34. Weak Mutation 1091: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:852 - ReplaceArithmeticOperator - -> /
   * Goal 35. Weak Mutation 1092: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:852 - ReplaceArithmeticOperator * -> +
   * Goal 36. Weak Mutation 1093: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:852 - ReplaceArithmeticOperator * -> %
   * Goal 37. Weak Mutation 1094: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:852 - ReplaceArithmeticOperator * -> -
   * Goal 38. Weak Mutation 1095: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:852 - ReplaceArithmeticOperator * -> /
   * Goal 39. Weak Mutation 1098: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:852 - ReplaceComparisonOperator < -> -2
   * Goal 40. Weak Mutation 1141: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:863 - ReplaceComparisonOperator != -> <
   * Goal 41. Weak Mutation 1166: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:868 - ReplaceBitwiseOperator | -> &
   * Goal 42. Weak Mutation 1171: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:868 - ReplaceArithmeticOperator - -> +
   * Goal 43. Weak Mutation 1172: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:868 - ReplaceArithmeticOperator - -> %
   * Goal 44. Weak Mutation 1173: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:868 - ReplaceArithmeticOperator - -> *
   * Goal 45. Weak Mutation 1174: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:868 - ReplaceArithmeticOperator - -> /
   * Goal 46. Weak Mutation 1176: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:868 - ReplaceBitwiseOperator | -> &
   * Goal 47. org.apache.commons.math.util.MathUtils.nextAfter(DD)D:negative
   */

  @Test
  public void test085()  throws Throwable  {
      double double0 = MathUtils.nextAfter((-954.0436476216), (byte)0);
  }

  //Test case number: 86
  /*
   * 46 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I4 Branch 98 IFNE L838 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I7 Branch 99 IFEQ L838 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I17 Branch 100 IFNE L840 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I62 Branch 102 IFLT L852 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I94 Branch 104 IFNE L863 - false
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I7 Branch 99 IFEQ L838 - true in context: org.apache.commons.math.util.MathUtils:nextAfter(DD)D
   * Goal 7. Branch org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I4 Branch 98 IFNE L838 - false in context: org.apache.commons.math.util.MathUtils:nextAfter(DD)D
   * Goal 8. Branch org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I17 Branch 100 IFNE L840 - true in context: org.apache.commons.math.util.MathUtils:nextAfter(DD)D
   * Goal 9. Branch org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I62 Branch 102 IFLT L852 - true in context: org.apache.commons.math.util.MathUtils:nextAfter(DD)D
   * Goal 10. Branch org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I94 Branch 104 IFNE L863 - false in context: org.apache.commons.math.util.MathUtils:nextAfter(DD)D
   * Goal 11. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 838
   * Goal 12. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 840
   * Goal 13. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 847
   * Goal 14. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 848
   * Goal 15. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 849
   * Goal 16. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 850
   * Goal 17. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 852
   * Goal 18. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 863
   * Goal 19. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 864
   * Goal 20. org.apache.commons.math.util.MathUtils.nextAfter(DD)D
   * Goal 21. org.apache.commons.math.util.MathUtils.nextAfter(DD)D
   * Goal 22. Weak Mutation 1038: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:838 - ReplaceComparisonOperator != -> ==
   * Goal 23. Weak Mutation 1040: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:838 - ReplaceComparisonOperator == -> !=
   * Goal 24. Weak Mutation 1047: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:840 - ReplaceComparisonOperator != -> >
   * Goal 25. Weak Mutation 1067: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:848 - ReplaceBitwiseOperator & -> |
   * Goal 26. Weak Mutation 1068: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:848 - ReplaceBitwiseOperator & -> ^
   * Goal 27. Weak Mutation 1075: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:849 - ReplaceBitwiseOperator & -> |
   * Goal 28. Weak Mutation 1076: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:849 - ReplaceBitwiseOperator & -> ^
   * Goal 29. Weak Mutation 1083: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:850 - ReplaceBitwiseOperator & -> |
   * Goal 30. Weak Mutation 1084: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:850 - ReplaceBitwiseOperator & -> ^
   * Goal 31. Weak Mutation 1088: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:852 - ReplaceArithmeticOperator - -> +
   * Goal 32. Weak Mutation 1089: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:852 - ReplaceArithmeticOperator - -> %
   * Goal 33. Weak Mutation 1090: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:852 - ReplaceArithmeticOperator - -> *
   * Goal 34. Weak Mutation 1091: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:852 - ReplaceArithmeticOperator - -> /
   * Goal 35. Weak Mutation 1092: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:852 - ReplaceArithmeticOperator * -> +
   * Goal 36. Weak Mutation 1093: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:852 - ReplaceArithmeticOperator * -> %
   * Goal 37. Weak Mutation 1094: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:852 - ReplaceArithmeticOperator * -> -
   * Goal 38. Weak Mutation 1098: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:852 - ReplaceComparisonOperator < -> -2
   * Goal 39. Weak Mutation 1140: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:863 - ReplaceComparisonOperator != -> -1
   * Goal 40. Weak Mutation 1150: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:864 - ReplaceArithmeticOperator - -> +
   * Goal 41. Weak Mutation 1151: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:864 - ReplaceArithmeticOperator - -> %
   * Goal 42. Weak Mutation 1152: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:864 - ReplaceArithmeticOperator - -> *
   * Goal 43. Weak Mutation 1153: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:864 - ReplaceArithmeticOperator - -> /
   * Goal 44. Weak Mutation 1155: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:864 - ReplaceBitwiseOperator | -> &
   * Goal 45. Weak Mutation 1162: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:864 - ReplaceBitwiseOperator | -> &
   * Goal 46. org.apache.commons.math.util.MathUtils.nextAfter(DD)D:negative
   */

  @Test
  public void test086()  throws Throwable  {
      double double0 = MathUtils.nextAfter((-1.0), 0.0);
  }

  //Test case number: 87
  /*
   * 61 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.round(FII)F: root-Branch
   * Goal 2. org.apache.commons.math.util.MathUtils.round(FI)F: root-Branch
   * Goal 3. org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 80 IFEQ L653 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 81 IFLT L656 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I4 Branch 98 IFNE L838 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I7 Branch 99 IFEQ L838 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I17 Branch 100 IFNE L840 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I23 Branch 101 IFGE L841 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 109 TABLESWITCH L1010 Case 0 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 110 TABLESWITCH L1010 Case 1 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 111 TABLESWITCH L1010 Case 2 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 112 TABLESWITCH L1010 Case 3 - false
   * Goal 13. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 113 TABLESWITCH L1010 Case 4 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 114 TABLESWITCH L1010 Case 5 - false
   * Goal 15. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 115 TABLESWITCH L1010 Case 6 - false
   * Goal 16. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 116 TABLESWITCH L1010 Case 7 - false
   * Goal 17. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 117 TABLESWITCH L1010 Default-Case - false
   * Goal 18. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I175 Branch 124 IFLT L1058 - true
   * Goal 19. Branch org.apache.commons.math.util.MathUtils.round(FI)F: root-Branch in context: org.apache.commons.math.util.MathUtils:round(FI)F
   * Goal 20. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 112 TABLESWITCH L1010 Case 3 - false in context: 
   * Goal 21. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 110 TABLESWITCH L1010 Case 1 - false in context: 
   * Goal 22. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 116 TABLESWITCH L1010 Case 7 - false in context: 
   * Goal 23. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 114 TABLESWITCH L1010 Case 5 - false in context: 
   * Goal 24. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 115 TABLESWITCH L1010 Case 6 - false in context: 
   * Goal 25. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 109 TABLESWITCH L1010 Case 0 - false in context: 
   * Goal 26. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 113 TABLESWITCH L1010 Case 4 - true in context: 
   * Goal 27. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 111 TABLESWITCH L1010 Case 2 - false in context: 
   * Goal 28. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 117 TABLESWITCH L1010 Default-Case - false in context: 
   * Goal 29. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I175 Branch 124 IFLT L1058 - true in context: 
   * Goal 30. org.apache.commons.math.util.MathUtils.indicator(F)F: Line 653
   * Goal 31. org.apache.commons.math.util.MathUtils.indicator(F)F: Line 656
   * Goal 32. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 838
   * Goal 33. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 840
   * Goal 34. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 841
   * Goal 35. org.apache.commons.math.util.MathUtils.round(FI)F: Line 975
   * Goal 36. org.apache.commons.math.util.MathUtils.round(FII)F: Line 991
   * Goal 37. org.apache.commons.math.util.MathUtils.round(FII)F: Line 992
   * Goal 38. org.apache.commons.math.util.MathUtils.round(FII)F: Line 993
   * Goal 39. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1010
   * Goal 40. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1056
   * Goal 41. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1057
   * Goal 42. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1058
   * Goal 43. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1061
   * Goal 44. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1063
   * Goal 45. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1076
   * Goal 46. org.apache.commons.math.util.MathUtils.round(FI)F
   * Goal 47. org.apache.commons.math.util.MathUtils.round(FI)F
   * Goal 48. Weak Mutation 828: org.apache.commons.math.util.MathUtils.indicator(F)F:653 - ReplaceComparisonOperator == -> !=
   * Goal 49. Weak Mutation 836: org.apache.commons.math.util.MathUtils.indicator(F)F:656 - ReplaceComparisonOperator < -> -2
   * Goal 50. Weak Mutation 1038: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:838 - ReplaceComparisonOperator != -> ==
   * Goal 51. Weak Mutation 1040: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:838 - ReplaceComparisonOperator == -> !=
   * Goal 52. Weak Mutation 1045: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:840 - ReplaceComparisonOperator != -> -1
   * Goal 53. Weak Mutation 1052: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:841 - ReplaceComparisonOperator >= -> ==
   * Goal 54. Weak Mutation 1304: org.apache.commons.math.util.MathUtils.round(FII)F:992 - ReplaceArithmeticOperator * -> +
   * Goal 55. Weak Mutation 1306: org.apache.commons.math.util.MathUtils.round(FII)F:992 - ReplaceArithmeticOperator * -> -
   * Goal 56. Weak Mutation 1311: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator * -> %
   * Goal 57. Weak Mutation 1313: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator * -> /
   * Goal 58. Weak Mutation 1319: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator / -> +
   * Goal 59. Weak Mutation 1321: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator / -> -
   * Goal 60. Weak Mutation 1322: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator / -> *
   * Goal 61. org.apache.commons.math.util.MathUtils.round(FI)F:positive
   */

  @Test
  public void test087()  throws Throwable  {
      float float0 = MathUtils.round((float) (byte) (-72), (int) (byte) (-72));
  }

  //Test case number: 88
  /*
   * 19 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 90 IFLE L776 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 90 IFLE L776 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I22 Branch 91 IFGE L780 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I115 Branch 96 IFLE L800 - true
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 90 IFLE L776 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 6. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 775
   * Goal 7. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 776
   * Goal 8. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 778
   * Goal 9. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 780
   * Goal 10. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 800
   * Goal 11. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 812
   * Goal 12. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 815
   * Goal 13. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 14. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 15. Weak Mutation 964: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:776 - ReplaceComparisonOperator <= -> -1
   * Goal 16. Weak Mutation 965: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:776 - ReplaceComparisonOperator <= -> ==
   * Goal 17. Weak Mutation 974: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:780 - ReplaceComparisonOperator >= -> >
   * Goal 18. Weak Mutation 1036: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:800 - ReplaceComparisonOperator <= -> <
   * Goal 19. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:zero
   */

  @Test
  public void test088()  throws Throwable  {
      long long0 = MathUtils.mulAndCheck(1L, 0L);
  }

  //Test case number: 89
  /*
   * 22 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 90 IFLE L776 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I22 Branch 91 IFGE L780 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I28 Branch 92 IFGE L781 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I69 Branch 94 IFLE L788 - true
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 90 IFLE L776 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I22 Branch 91 IFGE L780 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 7. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I28 Branch 92 IFGE L781 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 8. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I69 Branch 94 IFLE L788 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 9. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 775
   * Goal 10. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 776
   * Goal 11. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 780
   * Goal 12. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 781
   * Goal 13. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 788
   * Goal 14. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 798
   * Goal 15. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 815
   * Goal 16. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 17. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 18. Weak Mutation 965: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:776 - ReplaceComparisonOperator <= -> ==
   * Goal 19. Weak Mutation 972: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:780 - ReplaceComparisonOperator >= -> -1
   * Goal 20. Weak Mutation 980: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:781 - ReplaceComparisonOperator >= -> >
   * Goal 21. Weak Mutation 1007: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:788 - ReplaceComparisonOperator <= -> <
   * Goal 22. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:zero
   */

  @Test
  public void test089()  throws Throwable  {
      long long0 = MathUtils.mulAndCheck((long) (-6464), 0L);
  }

  //Test case number: 90
  /*
   * 16 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 88 IFLT L757 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I17 Branch 89 IFLE L757 - false
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I17 Branch 89 IFLE L757 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(II)I
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 88 IFLT L757 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(II)I
   * Goal 5. mulAndCheck(II)I_java.lang.ArithmeticException_EXPLICIT
   * Goal 6. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 756
   * Goal 7. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 757
   * Goal 8. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 758
   * Goal 9. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I
   * Goal 10. Weak Mutation 936: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:756 - ReplaceArithmeticOperator * -> +
   * Goal 11. Weak Mutation 937: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:756 - ReplaceArithmeticOperator * -> %
   * Goal 12. Weak Mutation 938: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:756 - ReplaceArithmeticOperator * -> -
   * Goal 13. Weak Mutation 939: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:756 - ReplaceArithmeticOperator * -> /
   * Goal 14. Weak Mutation 947: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:757 - ReplaceComparisonOperator < -> !=
   * Goal 15. Weak Mutation 955: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:757 - ReplaceComparisonOperator <= -> -1
   * Goal 16. Weak Mutation 959: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:758 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test090()  throws Throwable  {
      // Undeclared exception!
      try { 
        MathUtils.mulAndCheck(Integer.MIN_VALUE, Integer.MIN_VALUE);
      } catch(ArithmeticException e) {
         //
         // overflow: mul
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 91
  /*
   * 11 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.lcm(II)I: I3 Branch 85 IFEQ L714 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.lcm(II)I: I5 Branch 86 IFNE L714 - false
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I3 Branch 85 IFEQ L714 - false in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I5 Branch 86 IFNE L714 - false in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 5. org.apache.commons.math.util.MathUtils.lcm(II)I: Line 714
   * Goal 6. org.apache.commons.math.util.MathUtils.lcm(II)I: Line 715
   * Goal 7. org.apache.commons.math.util.MathUtils.lcm(II)I
   * Goal 8. org.apache.commons.math.util.MathUtils.lcm(II)I
   * Goal 9. Weak Mutation 881: org.apache.commons.math.util.MathUtils.lcm(II)I:714 - ReplaceComparisonOperator == -> >=
   * Goal 10. Weak Mutation 886: org.apache.commons.math.util.MathUtils.lcm(II)I:714 - ReplaceComparisonOperator != -> -1
   * Goal 11. org.apache.commons.math.util.MathUtils.lcm(II)I:zero
   */

  @Test
  public void test091()  throws Throwable  {
      int int0 = MathUtils.lcm(431, 0);
  }

  //Test case number: 92
  /*
   * 8 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.lcm(II)I: I3 Branch 85 IFEQ L714 - true
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I3 Branch 85 IFEQ L714 - true in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 3. org.apache.commons.math.util.MathUtils.lcm(II)I: Line 714
   * Goal 4. org.apache.commons.math.util.MathUtils.lcm(II)I: Line 715
   * Goal 5. org.apache.commons.math.util.MathUtils.lcm(II)I
   * Goal 6. org.apache.commons.math.util.MathUtils.lcm(II)I
   * Goal 7. Weak Mutation 880: org.apache.commons.math.util.MathUtils.lcm(II)I:714 - ReplaceComparisonOperator == -> -2
   * Goal 8. org.apache.commons.math.util.MathUtils.lcm(II)I:zero
   */

  @Test
  public void test092()  throws Throwable  {
      int int0 = MathUtils.lcm(0, 0);
  }

  //Test case number: 93
  /*
   * 7 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.indicator(S)S: I3 Branch 84 IFLT L687 - false
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.indicator(S)S: I3 Branch 84 IFLT L687 - false in context: org.apache.commons.math.util.MathUtils:indicator(S)S
   * Goal 3. org.apache.commons.math.util.MathUtils.indicator(S)S: Line 687
   * Goal 4. org.apache.commons.math.util.MathUtils.indicator(S)S
   * Goal 5. org.apache.commons.math.util.MathUtils.indicator(S)S
   * Goal 6. Weak Mutation 871: org.apache.commons.math.util.MathUtils.indicator(S)S:687 - ReplaceComparisonOperator < -> !=
   * Goal 7. org.apache.commons.math.util.MathUtils.indicator(S)S:positive
   */

  @Test
  public void test093()  throws Throwable  {
      short short0 = MathUtils.indicator((short)32705);
  }

  //Test case number: 94
  /*
   * 7 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.indicator(S)S: I3 Branch 84 IFLT L687 - true
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.indicator(S)S: I3 Branch 84 IFLT L687 - true in context: org.apache.commons.math.util.MathUtils:indicator(S)S
   * Goal 3. org.apache.commons.math.util.MathUtils.indicator(S)S: Line 687
   * Goal 4. org.apache.commons.math.util.MathUtils.indicator(S)S
   * Goal 5. org.apache.commons.math.util.MathUtils.indicator(S)S
   * Goal 6. Weak Mutation 870: org.apache.commons.math.util.MathUtils.indicator(S)S:687 - ReplaceComparisonOperator < -> -2
   * Goal 7. org.apache.commons.math.util.MathUtils.indicator(S)S:negative
   */

  @Test
  public void test094()  throws Throwable  {
      short short0 = MathUtils.indicator((short) (-1987));
  }

  //Test case number: 95
  /*
   * 7 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.indicator(J)J: I5 Branch 83 IFLT L676 - false
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.indicator(J)J: I5 Branch 83 IFLT L676 - false in context: org.apache.commons.math.util.MathUtils:indicator(J)J
   * Goal 3. org.apache.commons.math.util.MathUtils.indicator(J)J: Line 676
   * Goal 4. org.apache.commons.math.util.MathUtils.indicator(J)J
   * Goal 5. org.apache.commons.math.util.MathUtils.indicator(J)J
   * Goal 6. Weak Mutation 859: org.apache.commons.math.util.MathUtils.indicator(J)J:676 - ReplaceComparisonOperator < -> !=
   * Goal 7. org.apache.commons.math.util.MathUtils.indicator(J)J:positive
   */

  @Test
  public void test095()  throws Throwable  {
      long long0 = MathUtils.indicator((long) (byte)1);
  }

  //Test case number: 96
  /*
   * 7 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.indicator(J)J: I5 Branch 83 IFLT L676 - true
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.indicator(J)J: I5 Branch 83 IFLT L676 - true in context: org.apache.commons.math.util.MathUtils:indicator(J)J
   * Goal 3. org.apache.commons.math.util.MathUtils.indicator(J)J: Line 676
   * Goal 4. org.apache.commons.math.util.MathUtils.indicator(J)J
   * Goal 5. org.apache.commons.math.util.MathUtils.indicator(J)J
   * Goal 6. Weak Mutation 858: org.apache.commons.math.util.MathUtils.indicator(J)J:676 - ReplaceComparisonOperator < -> -2
   * Goal 7. org.apache.commons.math.util.MathUtils.indicator(J)J:negative
   */

  @Test
  public void test096()  throws Throwable  {
      long long0 = MathUtils.indicator((-2416L));
  }

  //Test case number: 97
  /*
   * 7 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.indicator(I)I: I3 Branch 82 IFLT L666 - false
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.indicator(I)I: I3 Branch 82 IFLT L666 - false in context: org.apache.commons.math.util.MathUtils:indicator(I)I
   * Goal 3. org.apache.commons.math.util.MathUtils.indicator(I)I: Line 666
   * Goal 4. org.apache.commons.math.util.MathUtils.indicator(I)I
   * Goal 5. org.apache.commons.math.util.MathUtils.indicator(I)I
   * Goal 6. Weak Mutation 850: org.apache.commons.math.util.MathUtils.indicator(I)I:666 - ReplaceComparisonOperator < -> <=
   * Goal 7. org.apache.commons.math.util.MathUtils.indicator(I)I:positive
   */

  @Test
  public void test097()  throws Throwable  {
      int int0 = MathUtils.indicator(0);
  }

  //Test case number: 98
  /*
   * 7 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.indicator(I)I: I3 Branch 82 IFLT L666 - true
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.indicator(I)I: I3 Branch 82 IFLT L666 - true in context: org.apache.commons.math.util.MathUtils:indicator(I)I
   * Goal 3. org.apache.commons.math.util.MathUtils.indicator(I)I: Line 666
   * Goal 4. org.apache.commons.math.util.MathUtils.indicator(I)I
   * Goal 5. org.apache.commons.math.util.MathUtils.indicator(I)I
   * Goal 6. Weak Mutation 848: org.apache.commons.math.util.MathUtils.indicator(I)I:666 - ReplaceComparisonOperator < -> -2
   * Goal 7. org.apache.commons.math.util.MathUtils.indicator(I)I:negative
   */

  @Test
  public void test098()  throws Throwable  {
      int int0 = MathUtils.indicator((-61));
  }

  //Test case number: 99
  /*
   * 87 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.round(FII)F: root-Branch
   * Goal 2. org.apache.commons.math.util.MathUtils.round(FI)F: root-Branch
   * Goal 3. org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 80 IFEQ L653 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 81 IFLT L656 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I4 Branch 98 IFNE L838 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I7 Branch 99 IFEQ L838 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I17 Branch 100 IFNE L840 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I62 Branch 102 IFLT L852 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I68 Branch 103 IFNE L854 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 109 TABLESWITCH L1010 Case 0 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 110 TABLESWITCH L1010 Case 1 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 111 TABLESWITCH L1010 Case 2 - false
   * Goal 13. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 112 TABLESWITCH L1010 Case 3 - false
   * Goal 14. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 113 TABLESWITCH L1010 Case 4 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 114 TABLESWITCH L1010 Case 5 - false
   * Goal 16. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 115 TABLESWITCH L1010 Case 6 - false
   * Goal 17. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 116 TABLESWITCH L1010 Case 7 - false
   * Goal 18. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 117 TABLESWITCH L1010 Default-Case - false
   * Goal 19. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I175 Branch 124 IFLT L1058 - true
   * Goal 20. Branch org.apache.commons.math.util.MathUtils.round(FI)F: root-Branch in context: org.apache.commons.math.util.MathUtils:round(FI)F
   * Goal 21. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 112 TABLESWITCH L1010 Case 3 - false in context: 
   * Goal 22. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 110 TABLESWITCH L1010 Case 1 - false in context: 
   * Goal 23. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 116 TABLESWITCH L1010 Case 7 - false in context: 
   * Goal 24. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 114 TABLESWITCH L1010 Case 5 - false in context: 
   * Goal 25. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 115 TABLESWITCH L1010 Case 6 - false in context: 
   * Goal 26. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 109 TABLESWITCH L1010 Case 0 - false in context: 
   * Goal 27. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 113 TABLESWITCH L1010 Case 4 - true in context: 
   * Goal 28. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 111 TABLESWITCH L1010 Case 2 - false in context: 
   * Goal 29. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 117 TABLESWITCH L1010 Default-Case - false in context: 
   * Goal 30. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I175 Branch 124 IFLT L1058 - true in context: 
   * Goal 31. org.apache.commons.math.util.MathUtils.indicator(F)F: Line 653
   * Goal 32. org.apache.commons.math.util.MathUtils.indicator(F)F: Line 656
   * Goal 33. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 838
   * Goal 34. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 840
   * Goal 35. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 847
   * Goal 36. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 848
   * Goal 37. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 849
   * Goal 38. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 850
   * Goal 39. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 852
   * Goal 40. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 854
   * Goal 41. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 858
   * Goal 42. org.apache.commons.math.util.MathUtils.round(FI)F: Line 975
   * Goal 43. org.apache.commons.math.util.MathUtils.round(FII)F: Line 991
   * Goal 44. org.apache.commons.math.util.MathUtils.round(FII)F: Line 992
   * Goal 45. org.apache.commons.math.util.MathUtils.round(FII)F: Line 993
   * Goal 46. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1010
   * Goal 47. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1056
   * Goal 48. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1057
   * Goal 49. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1058
   * Goal 50. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1061
   * Goal 51. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1063
   * Goal 52. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1076
   * Goal 53. org.apache.commons.math.util.MathUtils.round(FI)F
   * Goal 54. org.apache.commons.math.util.MathUtils.round(FI)F
   * Goal 55. Weak Mutation 828: org.apache.commons.math.util.MathUtils.indicator(F)F:653 - ReplaceComparisonOperator == -> !=
   * Goal 56. Weak Mutation 836: org.apache.commons.math.util.MathUtils.indicator(F)F:656 - ReplaceComparisonOperator < -> -2
   * Goal 57. Weak Mutation 1038: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:838 - ReplaceComparisonOperator != -> ==
   * Goal 58. Weak Mutation 1040: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:838 - ReplaceComparisonOperator == -> !=
   * Goal 59. Weak Mutation 1046: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:840 - ReplaceComparisonOperator != -> <
   * Goal 60. Weak Mutation 1067: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:848 - ReplaceBitwiseOperator & -> |
   * Goal 61. Weak Mutation 1068: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:848 - ReplaceBitwiseOperator & -> ^
   * Goal 62. Weak Mutation 1075: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:849 - ReplaceBitwiseOperator & -> |
   * Goal 63. Weak Mutation 1076: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:849 - ReplaceBitwiseOperator & -> ^
   * Goal 64. Weak Mutation 1083: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:850 - ReplaceBitwiseOperator & -> |
   * Goal 65. Weak Mutation 1084: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:850 - ReplaceBitwiseOperator & -> ^
   * Goal 66. Weak Mutation 1089: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:852 - ReplaceArithmeticOperator - -> %
   * Goal 67. Weak Mutation 1093: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:852 - ReplaceArithmeticOperator * -> %
   * Goal 68. Weak Mutation 1094: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:852 - ReplaceArithmeticOperator * -> -
   * Goal 69. Weak Mutation 1095: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:852 - ReplaceArithmeticOperator * -> /
   * Goal 70. Weak Mutation 1099: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:852 - ReplaceComparisonOperator < -> !=
   * Goal 71. Weak Mutation 1109: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:854 - ReplaceComparisonOperator != -> >
   * Goal 72. Weak Mutation 1126: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:858 - ReplaceBitwiseOperator | -> &
   * Goal 73. Weak Mutation 1131: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:858 - ReplaceArithmeticOperator + -> %
   * Goal 74. Weak Mutation 1132: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:858 - ReplaceArithmeticOperator + -> -
   * Goal 75. Weak Mutation 1133: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:858 - ReplaceArithmeticOperator + -> *
   * Goal 76. Weak Mutation 1134: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:858 - ReplaceArithmeticOperator + -> /
   * Goal 77. Weak Mutation 1136: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:858 - ReplaceBitwiseOperator | -> &
   * Goal 78. Weak Mutation 1304: org.apache.commons.math.util.MathUtils.round(FII)F:992 - ReplaceArithmeticOperator * -> +
   * Goal 79. Weak Mutation 1305: org.apache.commons.math.util.MathUtils.round(FII)F:992 - ReplaceArithmeticOperator * -> %
   * Goal 80. Weak Mutation 1306: org.apache.commons.math.util.MathUtils.round(FII)F:992 - ReplaceArithmeticOperator * -> -
   * Goal 81. Weak Mutation 1310: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator * -> +
   * Goal 82. Weak Mutation 1311: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator * -> %
   * Goal 83. Weak Mutation 1312: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator * -> -
   * Goal 84. Weak Mutation 1319: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator / -> +
   * Goal 85. Weak Mutation 1320: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator / -> %
   * Goal 86. Weak Mutation 1321: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator / -> -
   * Goal 87. org.apache.commons.math.util.MathUtils.round(FI)F:negative
   */

  @Test
  public void test099()  throws Throwable  {
      float float0 = MathUtils.round((-2250.1F), (int) (byte)0);
  }

  //Test case number: 100
  /*
   * 56 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.round(FII)F: root-Branch
   * Goal 2. org.apache.commons.math.util.MathUtils.round(FI)F: root-Branch
   * Goal 3. org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 80 IFEQ L653 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I4 Branch 98 IFNE L838 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 109 TABLESWITCH L1010 Case 0 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 110 TABLESWITCH L1010 Case 1 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 111 TABLESWITCH L1010 Case 2 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 112 TABLESWITCH L1010 Case 3 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 113 TABLESWITCH L1010 Case 4 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 114 TABLESWITCH L1010 Case 5 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 115 TABLESWITCH L1010 Case 6 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 116 TABLESWITCH L1010 Case 7 - false
   * Goal 13. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 117 TABLESWITCH L1010 Default-Case - false
   * Goal 14. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I175 Branch 124 IFLT L1058 - false
   * Goal 15. Branch org.apache.commons.math.util.MathUtils.round(FI)F: root-Branch in context: org.apache.commons.math.util.MathUtils:round(FI)F
   * Goal 16. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 112 TABLESWITCH L1010 Case 3 - false in context: 
   * Goal 17. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 110 TABLESWITCH L1010 Case 1 - false in context: 
   * Goal 18. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 116 TABLESWITCH L1010 Case 7 - false in context: 
   * Goal 19. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 114 TABLESWITCH L1010 Case 5 - false in context: 
   * Goal 20. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 115 TABLESWITCH L1010 Case 6 - false in context: 
   * Goal 21. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 109 TABLESWITCH L1010 Case 0 - false in context: 
   * Goal 22. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 113 TABLESWITCH L1010 Case 4 - true in context: 
   * Goal 23. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 111 TABLESWITCH L1010 Case 2 - false in context: 
   * Goal 24. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 117 TABLESWITCH L1010 Default-Case - false in context: 
   * Goal 25. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I175 Branch 124 IFLT L1058 - false in context: 
   * Goal 26. org.apache.commons.math.util.MathUtils.indicator(F)F: Line 653
   * Goal 27. org.apache.commons.math.util.MathUtils.indicator(F)F: Line 654
   * Goal 28. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 838
   * Goal 29. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 839
   * Goal 30. org.apache.commons.math.util.MathUtils.round(FI)F: Line 975
   * Goal 31. org.apache.commons.math.util.MathUtils.round(FII)F: Line 991
   * Goal 32. org.apache.commons.math.util.MathUtils.round(FII)F: Line 992
   * Goal 33. org.apache.commons.math.util.MathUtils.round(FII)F: Line 993
   * Goal 34. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1010
   * Goal 35. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1056
   * Goal 36. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1057
   * Goal 37. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1058
   * Goal 38. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1059
   * Goal 39. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1076
   * Goal 40. org.apache.commons.math.util.MathUtils.round(FI)F
   * Goal 41. org.apache.commons.math.util.MathUtils.round(FI)F
   * Goal 42. Weak Mutation 828: org.apache.commons.math.util.MathUtils.indicator(F)F:653 - ReplaceComparisonOperator == -> !=
   * Goal 43. Weak Mutation 1038: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:838 - ReplaceComparisonOperator != -> ==
   * Goal 44. Weak Mutation 1304: org.apache.commons.math.util.MathUtils.round(FII)F:992 - ReplaceArithmeticOperator * -> +
   * Goal 45. Weak Mutation 1305: org.apache.commons.math.util.MathUtils.round(FII)F:992 - ReplaceArithmeticOperator * -> %
   * Goal 46. Weak Mutation 1306: org.apache.commons.math.util.MathUtils.round(FII)F:992 - ReplaceArithmeticOperator * -> -
   * Goal 47. Weak Mutation 1307: org.apache.commons.math.util.MathUtils.round(FII)F:992 - ReplaceArithmeticOperator * -> /
   * Goal 48. Weak Mutation 1310: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator * -> +
   * Goal 49. Weak Mutation 1311: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator * -> %
   * Goal 50. Weak Mutation 1312: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator * -> -
   * Goal 51. Weak Mutation 1313: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator * -> /
   * Goal 52. Weak Mutation 1319: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator / -> +
   * Goal 53. Weak Mutation 1320: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator / -> %
   * Goal 54. Weak Mutation 1321: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator / -> -
   * Goal 55. Weak Mutation 1322: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator / -> *
   * Goal 56. org.apache.commons.math.util.MathUtils.round(FI)F:positive
   */

  @Test
  public void test100()  throws Throwable  {
      float float0 = MathUtils.round(Float.NaN, 324);
  }

  //Test case number: 101
  /*
   * 11 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.indicator(D)D: I4 Branch 78 IFEQ L639 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.indicator(D)D: I14 Branch 79 IFLT L642 - true
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.indicator(D)D: I4 Branch 78 IFEQ L639 - true in context: org.apache.commons.math.util.MathUtils:indicator(D)D
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.indicator(D)D: I14 Branch 79 IFLT L642 - true in context: org.apache.commons.math.util.MathUtils:indicator(D)D
   * Goal 5. org.apache.commons.math.util.MathUtils.indicator(D)D: Line 639
   * Goal 6. org.apache.commons.math.util.MathUtils.indicator(D)D: Line 642
   * Goal 7. org.apache.commons.math.util.MathUtils.indicator(D)D
   * Goal 8. org.apache.commons.math.util.MathUtils.indicator(D)D
   * Goal 9. Weak Mutation 810: org.apache.commons.math.util.MathUtils.indicator(D)D:639 - ReplaceComparisonOperator == -> !=
   * Goal 10. Weak Mutation 818: org.apache.commons.math.util.MathUtils.indicator(D)D:642 - ReplaceComparisonOperator < -> -2
   * Goal 11. org.apache.commons.math.util.MathUtils.indicator(D)D:negative
   */

  @Test
  public void test101()  throws Throwable  {
      double double0 = MathUtils.indicator((-1451.267392));
  }

  //Test case number: 102
  /*
   * 8 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.indicator(D)D: I4 Branch 78 IFEQ L639 - false
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.indicator(D)D: I4 Branch 78 IFEQ L639 - false in context: org.apache.commons.math.util.MathUtils:indicator(D)D
   * Goal 3. org.apache.commons.math.util.MathUtils.indicator(D)D: Line 639
   * Goal 4. org.apache.commons.math.util.MathUtils.indicator(D)D: Line 640
   * Goal 5. org.apache.commons.math.util.MathUtils.indicator(D)D
   * Goal 6. org.apache.commons.math.util.MathUtils.indicator(D)D
   * Goal 7. Weak Mutation 810: org.apache.commons.math.util.MathUtils.indicator(D)D:639 - ReplaceComparisonOperator == -> !=
   * Goal 8. org.apache.commons.math.util.MathUtils.indicator(D)D:positive
   */

  @Test
  public void test102()  throws Throwable  {
      double double0 = MathUtils.indicator(Double.NaN);
  }

  //Test case number: 103
  /*
   * 11 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.indicator(D)D: I4 Branch 78 IFEQ L639 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.indicator(D)D: I14 Branch 79 IFLT L642 - false
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.indicator(D)D: I4 Branch 78 IFEQ L639 - true in context: org.apache.commons.math.util.MathUtils:indicator(D)D
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.indicator(D)D: I14 Branch 79 IFLT L642 - false in context: org.apache.commons.math.util.MathUtils:indicator(D)D
   * Goal 5. org.apache.commons.math.util.MathUtils.indicator(D)D: Line 639
   * Goal 6. org.apache.commons.math.util.MathUtils.indicator(D)D: Line 642
   * Goal 7. org.apache.commons.math.util.MathUtils.indicator(D)D
   * Goal 8. org.apache.commons.math.util.MathUtils.indicator(D)D
   * Goal 9. Weak Mutation 810: org.apache.commons.math.util.MathUtils.indicator(D)D:639 - ReplaceComparisonOperator == -> !=
   * Goal 10. Weak Mutation 819: org.apache.commons.math.util.MathUtils.indicator(D)D:642 - ReplaceComparisonOperator < -> !=
   * Goal 11. org.apache.commons.math.util.MathUtils.indicator(D)D:positive
   */

  @Test
  public void test103()  throws Throwable  {
      double double0 = MathUtils.indicator(1.0);
  }

  //Test case number: 104
  /*
   * 7 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.indicator(B)B: I3 Branch 77 IFLT L627 - false
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.indicator(B)B: I3 Branch 77 IFLT L627 - false in context: org.apache.commons.math.util.MathUtils:indicator(B)B
   * Goal 3. org.apache.commons.math.util.MathUtils.indicator(B)B: Line 627
   * Goal 4. org.apache.commons.math.util.MathUtils.indicator(B)B
   * Goal 5. org.apache.commons.math.util.MathUtils.indicator(B)B
   * Goal 6. Weak Mutation 803: org.apache.commons.math.util.MathUtils.indicator(B)B:627 - ReplaceComparisonOperator < -> !=
   * Goal 7. org.apache.commons.math.util.MathUtils.indicator(B)B:positive
   */

  @Test
  public void test104()  throws Throwable  {
      byte byte0 = MathUtils.indicator((byte)89);
  }

  //Test case number: 105
  /*
   * 7 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.indicator(B)B: I3 Branch 77 IFLT L627 - true
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.indicator(B)B: I3 Branch 77 IFLT L627 - true in context: org.apache.commons.math.util.MathUtils:indicator(B)B
   * Goal 3. org.apache.commons.math.util.MathUtils.indicator(B)B: Line 627
   * Goal 4. org.apache.commons.math.util.MathUtils.indicator(B)B
   * Goal 5. org.apache.commons.math.util.MathUtils.indicator(B)B
   * Goal 6. Weak Mutation 802: org.apache.commons.math.util.MathUtils.indicator(B)B:627 - ReplaceComparisonOperator < -> -2
   * Goal 7. org.apache.commons.math.util.MathUtils.indicator(B)B:negative
   */

  @Test
  public void test105()  throws Throwable  {
      byte byte0 = MathUtils.indicator((byte) (-72));
  }

  //Test case number: 106
  /*
   * 51 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 63 IFEQ L542 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 64 IFNE L542 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.gcd(II)I: I70 Branch 67 IFLE L554 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.gcd(II)I: I79 Branch 68 IFLE L557 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.gcd(II)I: I94 Branch 69 IFNE L562 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.gcd(II)I: I122 Branch 72 IF_ICMPNE L568 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.gcd(II)I: I150 Branch 73 IF_ICMPNE L575 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.gcd(II)I: I165 Branch 74 IFNE L581 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.gcd(II)I: I165 Branch 74 IFNE L581 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.gcd(II)I: I176 Branch 75 IFLE L585 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.gcd(II)I: I198 Branch 76 IFNE L594 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.gcd(II)I: I198 Branch 76 IFNE L594 - false
   * Goal 13. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 64 IFNE L542 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 14. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 63 IFEQ L542 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 15. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I70 Branch 67 IFLE L554 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 16. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I79 Branch 68 IFLE L557 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 17. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I94 Branch 69 IFNE L562 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 18. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I122 Branch 72 IF_ICMPNE L568 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 19. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I150 Branch 73 IF_ICMPNE L575 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 20. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I165 Branch 74 IFNE L581 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 21. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I165 Branch 74 IFNE L581 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 22. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I176 Branch 75 IFLE L585 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 23. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I198 Branch 76 IFNE L594 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 24. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I198 Branch 76 IFNE L594 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 25. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 540
   * Goal 26. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 541
   * Goal 27. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 542
   * Goal 28. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 554
   * Goal 29. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 555
   * Goal 30. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 557
   * Goal 31. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 561
   * Goal 32. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 562
   * Goal 33. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 568
   * Goal 34. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 575
   * Goal 35. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 581
   * Goal 36. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 582
   * Goal 37. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 585
   * Goal 38. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 588
   * Goal 39. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 591
   * Goal 40. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 594
   * Goal 41. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 595
   * Goal 42. org.apache.commons.math.util.MathUtils.gcd(II)I
   * Goal 43. org.apache.commons.math.util.MathUtils.gcd(II)I
   * Goal 44. Weak Mutation 683: org.apache.commons.math.util.MathUtils.gcd(II)I:542 - ReplaceComparisonOperator == -> >=
   * Goal 45. Weak Mutation 690: org.apache.commons.math.util.MathUtils.gcd(II)I:542 - ReplaceComparisonOperator != -> >
   * Goal 46. Weak Mutation 731: org.apache.commons.math.util.MathUtils.gcd(II)I:554 - ReplaceComparisonOperator <= -> -1
   * Goal 47. Weak Mutation 741: org.apache.commons.math.util.MathUtils.gcd(II)I:557 - ReplaceComparisonOperator <= -> ==
   * Goal 48. Weak Mutation 751: org.apache.commons.math.util.MathUtils.gcd(II)I:562 - ReplaceBitwiseOperator & -> |
   * Goal 49. Weak Mutation 752: org.apache.commons.math.util.MathUtils.gcd(II)I:562 - ReplaceBitwiseOperator & -> ^
   * Goal 50. Weak Mutation 754: org.apache.commons.math.util.MathUtils.gcd(II)I:562 - ReplaceComparisonOperator != -> <
   * Goal 51. org.apache.commons.math.util.MathUtils.gcd(II)I:positive
   */

  @Test
  public void test106()  throws Throwable  {
      int int0 = MathUtils.gcd(1, (-2300));
  }

  //Test case number: 107
  /*
   * 56 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 63 IFEQ L542 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 64 IFNE L542 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.gcd(II)I: I70 Branch 67 IFLE L554 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.gcd(II)I: I79 Branch 68 IFLE L557 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.gcd(II)I: I94 Branch 69 IFNE L562 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.gcd(II)I: I98 Branch 70 IFNE L562 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.gcd(II)I: I122 Branch 72 IF_ICMPNE L568 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.gcd(II)I: I150 Branch 73 IF_ICMPNE L575 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.gcd(II)I: I165 Branch 74 IFNE L581 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.gcd(II)I: I165 Branch 74 IFNE L581 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.gcd(II)I: I176 Branch 75 IFLE L585 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.gcd(II)I: I198 Branch 76 IFNE L594 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.gcd(II)I: I198 Branch 76 IFNE L594 - false
   * Goal 14. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 64 IFNE L542 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 15. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 63 IFEQ L542 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 16. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I70 Branch 67 IFLE L554 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 17. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I79 Branch 68 IFLE L557 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 18. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I94 Branch 69 IFNE L562 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 19. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I98 Branch 70 IFNE L562 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 20. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I122 Branch 72 IF_ICMPNE L568 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 21. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I150 Branch 73 IF_ICMPNE L575 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 22. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I165 Branch 74 IFNE L581 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 23. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I165 Branch 74 IFNE L581 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 24. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I176 Branch 75 IFLE L585 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 25. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I198 Branch 76 IFNE L594 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 26. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I198 Branch 76 IFNE L594 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 27. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 540
   * Goal 28. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 541
   * Goal 29. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 542
   * Goal 30. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 554
   * Goal 31. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 557
   * Goal 32. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 558
   * Goal 33. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 561
   * Goal 34. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 562
   * Goal 35. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 568
   * Goal 36. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 575
   * Goal 37. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 581
   * Goal 38. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 582
   * Goal 39. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 585
   * Goal 40. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 586
   * Goal 41. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 591
   * Goal 42. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 594
   * Goal 43. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 595
   * Goal 44. org.apache.commons.math.util.MathUtils.gcd(II)I
   * Goal 45. org.apache.commons.math.util.MathUtils.gcd(II)I
   * Goal 46. Weak Mutation 684: org.apache.commons.math.util.MathUtils.gcd(II)I:542 - ReplaceComparisonOperator == -> <=
   * Goal 47. Weak Mutation 689: org.apache.commons.math.util.MathUtils.gcd(II)I:542 - ReplaceComparisonOperator != -> <
   * Goal 48. Weak Mutation 732: org.apache.commons.math.util.MathUtils.gcd(II)I:554 - ReplaceComparisonOperator <= -> ==
   * Goal 49. Weak Mutation 740: org.apache.commons.math.util.MathUtils.gcd(II)I:557 - ReplaceComparisonOperator <= -> -1
   * Goal 50. Weak Mutation 751: org.apache.commons.math.util.MathUtils.gcd(II)I:562 - ReplaceBitwiseOperator & -> |
   * Goal 51. Weak Mutation 752: org.apache.commons.math.util.MathUtils.gcd(II)I:562 - ReplaceBitwiseOperator & -> ^
   * Goal 52. Weak Mutation 753: org.apache.commons.math.util.MathUtils.gcd(II)I:562 - ReplaceComparisonOperator != -> -1
   * Goal 53. Weak Mutation 760: org.apache.commons.math.util.MathUtils.gcd(II)I:562 - ReplaceBitwiseOperator & -> |
   * Goal 54. Weak Mutation 761: org.apache.commons.math.util.MathUtils.gcd(II)I:562 - ReplaceBitwiseOperator & -> ^
   * Goal 55. Weak Mutation 763: org.apache.commons.math.util.MathUtils.gcd(II)I:562 - ReplaceComparisonOperator != -> <
   * Goal 56. org.apache.commons.math.util.MathUtils.gcd(II)I:positive
   */

  @Test
  public void test107()  throws Throwable  {
      int int0 = MathUtils.gcd((-2380), 1);
  }

  //Test case number: 108
  /*
   * 22 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 63 IFEQ L542 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 64 IFNE L542 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.gcd(II)I: I18 Branch 65 IF_ICMPNE L543 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.gcd(II)I: I43 Branch 66 IF_ICMPNE L546 - true
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 63 IFEQ L542 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 64 IFNE L542 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 7. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I18 Branch 65 IF_ICMPNE L543 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 8. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I43 Branch 66 IF_ICMPNE L546 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 9. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 540
   * Goal 10. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 541
   * Goal 11. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 542
   * Goal 12. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 543
   * Goal 13. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 547
   * Goal 14. org.apache.commons.math.util.MathUtils.gcd(II)I
   * Goal 15. org.apache.commons.math.util.MathUtils.gcd(II)I
   * Goal 16. Weak Mutation 683: org.apache.commons.math.util.MathUtils.gcd(II)I:542 - ReplaceComparisonOperator == -> >=
   * Goal 17. Weak Mutation 688: org.apache.commons.math.util.MathUtils.gcd(II)I:542 - ReplaceComparisonOperator != -> -1
   * Goal 18. Weak Mutation 700: org.apache.commons.math.util.MathUtils.gcd(II)I:543 - ReplaceComparisonOperator != -> <
   * Goal 19. Weak Mutation 715: org.apache.commons.math.util.MathUtils.gcd(II)I:546 - ReplaceComparisonOperator != -> <
   * Goal 20. Weak Mutation 724: org.apache.commons.math.util.MathUtils.gcd(II)I:547 - ReplaceArithmeticOperator + -> %
   * Goal 21. Weak Mutation 727: org.apache.commons.math.util.MathUtils.gcd(II)I:547 - ReplaceArithmeticOperator + -> /
   * Goal 22. org.apache.commons.math.util.MathUtils.gcd(II)I:positive
   */

  @Test
  public void test108()  throws Throwable  {
      int int0 = MathUtils.gcd(3353, 0);
  }

  //Test case number: 109
  /*
   * 21 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 63 IFEQ L542 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.gcd(II)I: I18 Branch 65 IF_ICMPNE L543 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.gcd(II)I: I43 Branch 66 IF_ICMPNE L546 - true
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 63 IFEQ L542 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I18 Branch 65 IF_ICMPNE L543 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I43 Branch 66 IF_ICMPNE L546 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 7. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 540
   * Goal 8. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 541
   * Goal 9. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 542
   * Goal 10. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 543
   * Goal 11. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 547
   * Goal 12. org.apache.commons.math.util.MathUtils.gcd(II)I
   * Goal 13. org.apache.commons.math.util.MathUtils.gcd(II)I
   * Goal 14. Weak Mutation 682: org.apache.commons.math.util.MathUtils.gcd(II)I:542 - ReplaceComparisonOperator == -> -2
   * Goal 15. Weak Mutation 700: org.apache.commons.math.util.MathUtils.gcd(II)I:543 - ReplaceComparisonOperator != -> <
   * Goal 16. Weak Mutation 715: org.apache.commons.math.util.MathUtils.gcd(II)I:546 - ReplaceComparisonOperator != -> <
   * Goal 17. Weak Mutation 724: org.apache.commons.math.util.MathUtils.gcd(II)I:547 - ReplaceArithmeticOperator + -> %
   * Goal 18. Weak Mutation 725: org.apache.commons.math.util.MathUtils.gcd(II)I:547 - ReplaceArithmeticOperator + -> -
   * Goal 19. Weak Mutation 726: org.apache.commons.math.util.MathUtils.gcd(II)I:547 - ReplaceArithmeticOperator + -> *
   * Goal 20. Weak Mutation 727: org.apache.commons.math.util.MathUtils.gcd(II)I:547 - ReplaceArithmeticOperator + -> /
   * Goal 21. org.apache.commons.math.util.MathUtils.gcd(II)I:positive
   */

  @Test
  public void test109()  throws Throwable  {
      int int0 = MathUtils.gcd(0, 2);
  }

  //Test case number: 110
  /*
   * 8 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 60 IFGE L496 - false
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 60 IFGE L496 - false in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 3. factorialLog(I)D_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 4. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 496
   * Goal 5. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 497
   * Goal 6. org.apache.commons.math.util.MathUtils.factorialLog(I)D
   * Goal 7. Weak Mutation 630: org.apache.commons.math.util.MathUtils.factorialLog(I)D:496 - ReplaceComparisonOperator >= -> -1
   * Goal 8. Weak Mutation 634: org.apache.commons.math.util.MathUtils.factorialLog(I)D:497 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test110()  throws Throwable  {
      // Undeclared exception!
      try { 
        MathUtils.factorialLog((-5077));
      } catch(IllegalArgumentException e) {
         //
         // must have n > 0 for n!
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 111
  /*
   * 19 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.factorial(I)J: I3 Branch 56 IFGE L442 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.factorial(I)J: I28 Branch 57 IF_ICMPLE L445 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I3 Branch 58 IFGE L473 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I28 Branch 59 IF_ICMPGE L476 - false
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I3 Branch 58 IFGE L473 - true in context: org.apache.commons.math.util.MathUtils:factorialDouble(I)D
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I28 Branch 59 IF_ICMPGE L476 - false in context: org.apache.commons.math.util.MathUtils:factorialDouble(I)D
   * Goal 7. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 442
   * Goal 8. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 445
   * Goal 9. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 449
   * Goal 10. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: Line 473
   * Goal 11. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: Line 476
   * Goal 12. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: Line 477
   * Goal 13. org.apache.commons.math.util.MathUtils.factorialDouble(I)D
   * Goal 14. org.apache.commons.math.util.MathUtils.factorialDouble(I)D
   * Goal 15. Weak Mutation 574: org.apache.commons.math.util.MathUtils.factorial(I)J:442 - ReplaceComparisonOperator >= -> >
   * Goal 16. Weak Mutation 587: org.apache.commons.math.util.MathUtils.factorial(I)J:445 - ReplaceComparisonOperator <= -> ==
   * Goal 17. Weak Mutation 598: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:473 - ReplaceComparisonOperator >= -> >
   * Goal 18. Weak Mutation 609: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:476 - ReplaceComparisonOperator >= -> -1
   * Goal 19. org.apache.commons.math.util.MathUtils.factorialDouble(I)D:positive
   */

  @Test
  public void test111()  throws Throwable  {
      double double0 = MathUtils.factorialDouble(0);
  }

  //Test case number: 112
  /*
   * 8 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I3 Branch 58 IFGE L473 - false
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I3 Branch 58 IFGE L473 - false in context: org.apache.commons.math.util.MathUtils:factorialDouble(I)D
   * Goal 3. factorialDouble(I)D_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 4. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: Line 473
   * Goal 5. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: Line 474
   * Goal 6. org.apache.commons.math.util.MathUtils.factorialDouble(I)D
   * Goal 7. Weak Mutation 596: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:473 - ReplaceComparisonOperator >= -> -1
   * Goal 8. Weak Mutation 600: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:474 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test112()  throws Throwable  {
      // Undeclared exception!
      try { 
        MathUtils.factorialDouble((byte) (-95));
      } catch(IllegalArgumentException e) {
         //
         // must have n >= 0 for n!
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 113
  /*
   * 34 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I3 Branch 58 IFGE L473 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I28 Branch 59 IF_ICMPGE L476 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 60 IFGE L496 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I28 Branch 61 IF_ICMPGE L499 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I47 Branch 62 IF_ICMPGT L503 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I47 Branch 62 IF_ICMPGT L503 - false
   * Goal 7. Branch org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I3 Branch 58 IFGE L473 - true in context: org.apache.commons.math.util.MathUtils:factorialDouble(I)D
   * Goal 8. Branch org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I28 Branch 59 IF_ICMPGE L476 - true in context: org.apache.commons.math.util.MathUtils:factorialDouble(I)D
   * Goal 9. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: Line 473
   * Goal 10. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: Line 476
   * Goal 11. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: Line 479
   * Goal 12. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 496
   * Goal 13. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 499
   * Goal 14. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 502
   * Goal 15. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 503
   * Goal 16. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 504
   * Goal 17. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 506
   * Goal 18. org.apache.commons.math.util.MathUtils.factorialDouble(I)D
   * Goal 19. org.apache.commons.math.util.MathUtils.factorialDouble(I)D
   * Goal 20. Weak Mutation 597: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:473 - ReplaceComparisonOperator >= -> ==
   * Goal 21. Weak Mutation 610: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:476 - ReplaceComparisonOperator >= -> >
   * Goal 22. Weak Mutation 623: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:479 - ReplaceArithmeticOperator + -> %
   * Goal 23. Weak Mutation 625: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:479 - ReplaceArithmeticOperator + -> *
   * Goal 24. Weak Mutation 626: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:479 - ReplaceArithmeticOperator + -> /
   * Goal 25. Weak Mutation 631: org.apache.commons.math.util.MathUtils.factorialLog(I)D:496 - ReplaceComparisonOperator >= -> ==
   * Goal 26. Weak Mutation 644: org.apache.commons.math.util.MathUtils.factorialLog(I)D:499 - ReplaceComparisonOperator >= -> >
   * Goal 27. Weak Mutation 661: org.apache.commons.math.util.MathUtils.factorialLog(I)D:503 - ReplaceComparisonOperator > -> !=
   * Goal 28. Weak Mutation 662: org.apache.commons.math.util.MathUtils.factorialLog(I)D:503 - ReplaceComparisonOperator > -> -2
   * Goal 29. Weak Mutation 663: org.apache.commons.math.util.MathUtils.factorialLog(I)D:503 - ReplaceComparisonOperator > -> >=
   * Goal 30. Weak Mutation 668: org.apache.commons.math.util.MathUtils.factorialLog(I)D:504 - ReplaceArithmeticOperator + -> %
   * Goal 31. Weak Mutation 669: org.apache.commons.math.util.MathUtils.factorialLog(I)D:504 - ReplaceArithmeticOperator + -> -
   * Goal 32. Weak Mutation 670: org.apache.commons.math.util.MathUtils.factorialLog(I)D:504 - ReplaceArithmeticOperator + -> *
   * Goal 33. Weak Mutation 671: org.apache.commons.math.util.MathUtils.factorialLog(I)D:504 - ReplaceArithmeticOperator + -> /
   * Goal 34. org.apache.commons.math.util.MathUtils.factorialDouble(I)D:positive
   */

  @Test
  public void test113()  throws Throwable  {
      double double0 = MathUtils.factorialDouble(21);
  }

  //Test case number: 114
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.factorial(I)J: I3 Branch 56 IFGE L442 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.factorial(I)J: I28 Branch 57 IF_ICMPLE L445 - false
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.factorial(I)J: I3 Branch 56 IFGE L442 - true in context: org.apache.commons.math.util.MathUtils:factorial(I)J
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.factorial(I)J: I28 Branch 57 IF_ICMPLE L445 - false in context: org.apache.commons.math.util.MathUtils:factorial(I)J
   * Goal 5. factorial(I)J_java.lang.ArithmeticException_EXPLICIT
   * Goal 6. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 442
   * Goal 7. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 445
   * Goal 8. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 446
   * Goal 9. org.apache.commons.math.util.MathUtils.factorial(I)J
   * Goal 10. Weak Mutation 573: org.apache.commons.math.util.MathUtils.factorial(I)J:442 - ReplaceComparisonOperator >= -> ==
   * Goal 11. Weak Mutation 585: org.apache.commons.math.util.MathUtils.factorial(I)J:445 - ReplaceComparisonOperator <= -> -1
   * Goal 12. Weak Mutation 589: org.apache.commons.math.util.MathUtils.factorial(I)J:446 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test114()  throws Throwable  {
      // Undeclared exception!
      try { 
        MathUtils.factorial(584);
      } catch(ArithmeticException e) {
         //
         // factorial value is too large to fit in a long
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 115
  /*
   * 8 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.factorial(I)J: I3 Branch 56 IFGE L442 - false
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.factorial(I)J: I3 Branch 56 IFGE L442 - false in context: org.apache.commons.math.util.MathUtils:factorial(I)J
   * Goal 3. factorial(I)J_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 4. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 442
   * Goal 5. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 443
   * Goal 6. org.apache.commons.math.util.MathUtils.factorial(I)J
   * Goal 7. Weak Mutation 572: org.apache.commons.math.util.MathUtils.factorial(I)J:442 - ReplaceComparisonOperator >= -> -1
   * Goal 8. Weak Mutation 576: org.apache.commons.math.util.MathUtils.factorial(I)J:443 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test115()  throws Throwable  {
      // Undeclared exception!
      try { 
        MathUtils.factorial((byte) (-1));
      } catch(IllegalArgumentException e) {
         //
         // must have n >= 0 for n!
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 116
  /*
   * 15 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I3 Branch 48 IFNULL L398 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I5 Branch 49 IFNONNULL L398 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I36 Branch 53 IF_ICMPEQ L401 - false
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I5 Branch 49 IFNONNULL L398 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I3 Branch 48 IFNULL L398 - false in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I36 Branch 53 IF_ICMPEQ L401 - false in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 7. org.apache.commons.math.util.MathUtils.equals([D[D)Z: Line 398
   * Goal 8. org.apache.commons.math.util.MathUtils.equals([D[D)Z: Line 401
   * Goal 9. org.apache.commons.math.util.MathUtils.equals([D[D)Z: Line 402
   * Goal 10. org.apache.commons.math.util.MathUtils.equals([D[D)Z
   * Goal 11. org.apache.commons.math.util.MathUtils.equals([D[D)Z
   * Goal 12. Weak Mutation 534: org.apache.commons.math.util.MathUtils.equals([D[D)Z:398 - ReplaceComparisonOperator = null -> != null
   * Goal 13. Weak Mutation 535: org.apache.commons.math.util.MathUtils.equals([D[D)Z:398 - ReplaceComparisonOperator != null -> = null
   * Goal 14. Weak Mutation 550: org.apache.commons.math.util.MathUtils.equals([D[D)Z:401 - ReplaceComparisonOperator == -> >=
   * Goal 15. org.apache.commons.math.util.MathUtils.equals([D[D)Z:false
   */

  @Test
  public void test116()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      double[] doubleArray1 = new double[1];
      boolean boolean0 = MathUtils.equals(doubleArray0, doubleArray1);
  }

  //Test case number: 117
  /*
   * 20 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I5 Branch 43 IFEQ L384 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I9 Branch 44 IFGE L384 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I20 Branch 46 IFLE L384 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I26 Branch 47 IFGT L384 - false
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.equals(DDD)Z: I20 Branch 46 IFLE L384 - false in context: org.apache.commons.math.util.MathUtils:equals(DDD)Z
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.equals(DDD)Z: I26 Branch 47 IFGT L384 - false in context: org.apache.commons.math.util.MathUtils:equals(DDD)Z
   * Goal 7. Branch org.apache.commons.math.util.MathUtils.equals(DDD)Z: I5 Branch 43 IFEQ L384 - false in context: org.apache.commons.math.util.MathUtils:equals(DDD)Z
   * Goal 8. Branch org.apache.commons.math.util.MathUtils.equals(DDD)Z: I9 Branch 44 IFGE L384 - true in context: org.apache.commons.math.util.MathUtils:equals(DDD)Z
   * Goal 9. org.apache.commons.math.util.MathUtils.equals(DDD)Z: Line 384
   * Goal 10. org.apache.commons.math.util.MathUtils.equals(DDD)Z
   * Goal 11. org.apache.commons.math.util.MathUtils.equals(DDD)Z
   * Goal 12. Weak Mutation 500: org.apache.commons.math.util.MathUtils.equals(DDD)Z:384 - ReplaceComparisonOperator == -> >=
   * Goal 13. Weak Mutation 505: org.apache.commons.math.util.MathUtils.equals(DDD)Z:384 - ReplaceComparisonOperator >= -> ==
   * Goal 14. Weak Mutation 519: org.apache.commons.math.util.MathUtils.equals(DDD)Z:384 - ReplaceComparisonOperator <= -> -1
   * Goal 15. Weak Mutation 525: org.apache.commons.math.util.MathUtils.equals(DDD)Z:384 - ReplaceArithmeticOperator + -> %
   * Goal 16. Weak Mutation 526: org.apache.commons.math.util.MathUtils.equals(DDD)Z:384 - ReplaceArithmeticOperator + -> -
   * Goal 17. Weak Mutation 527: org.apache.commons.math.util.MathUtils.equals(DDD)Z:384 - ReplaceArithmeticOperator + -> *
   * Goal 18. Weak Mutation 528: org.apache.commons.math.util.MathUtils.equals(DDD)Z:384 - ReplaceArithmeticOperator + -> /
   * Goal 19. Weak Mutation 531: org.apache.commons.math.util.MathUtils.equals(DDD)Z:384 - ReplaceComparisonOperator > -> >=
   * Goal 20. org.apache.commons.math.util.MathUtils.equals(DDD)Z:true
   */

  @Test
  public void test117()  throws Throwable  {
      boolean boolean0 = MathUtils.equals(728.486042, 0.0, 728.486042);
  }

  //Test case number: 118
  /*
   * 17 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I5 Branch 43 IFEQ L384 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I9 Branch 44 IFGE L384 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I15 Branch 45 IFGE L384 - true
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.equals(DDD)Z: I9 Branch 44 IFGE L384 - false in context: org.apache.commons.math.util.MathUtils:equals(DDD)Z
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.equals(DDD)Z: I5 Branch 43 IFEQ L384 - false in context: org.apache.commons.math.util.MathUtils:equals(DDD)Z
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.equals(DDD)Z: I15 Branch 45 IFGE L384 - true in context: org.apache.commons.math.util.MathUtils:equals(DDD)Z
   * Goal 7. org.apache.commons.math.util.MathUtils.equals(DDD)Z: Line 384
   * Goal 8. org.apache.commons.math.util.MathUtils.equals(DDD)Z
   * Goal 9. org.apache.commons.math.util.MathUtils.equals(DDD)Z
   * Goal 10. Weak Mutation 501: org.apache.commons.math.util.MathUtils.equals(DDD)Z:384 - ReplaceComparisonOperator == -> <=
   * Goal 11. Weak Mutation 504: org.apache.commons.math.util.MathUtils.equals(DDD)Z:384 - ReplaceComparisonOperator >= -> -1
   * Goal 12. Weak Mutation 509: org.apache.commons.math.util.MathUtils.equals(DDD)Z:384 - ReplaceArithmeticOperator + -> %
   * Goal 13. Weak Mutation 510: org.apache.commons.math.util.MathUtils.equals(DDD)Z:384 - ReplaceArithmeticOperator + -> -
   * Goal 14. Weak Mutation 511: org.apache.commons.math.util.MathUtils.equals(DDD)Z:384 - ReplaceArithmeticOperator + -> *
   * Goal 15. Weak Mutation 512: org.apache.commons.math.util.MathUtils.equals(DDD)Z:384 - ReplaceArithmeticOperator + -> /
   * Goal 16. Weak Mutation 516: org.apache.commons.math.util.MathUtils.equals(DDD)Z:384 - ReplaceComparisonOperator >= -> >
   * Goal 17. org.apache.commons.math.util.MathUtils.equals(DDD)Z:true
   */

  @Test
  public void test118()  throws Throwable  {
      boolean boolean0 = MathUtils.equals(0.0, 368.59, 368.59);
  }

  //Test case number: 119
  /*
   * 20 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I5 Branch 43 IFEQ L384 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I9 Branch 44 IFGE L384 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I20 Branch 46 IFLE L384 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I26 Branch 47 IFGT L384 - true
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.equals(DDD)Z: I20 Branch 46 IFLE L384 - false in context: org.apache.commons.math.util.MathUtils:equals(DDD)Z
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.equals(DDD)Z: I5 Branch 43 IFEQ L384 - false in context: org.apache.commons.math.util.MathUtils:equals(DDD)Z
   * Goal 7. Branch org.apache.commons.math.util.MathUtils.equals(DDD)Z: I9 Branch 44 IFGE L384 - true in context: org.apache.commons.math.util.MathUtils:equals(DDD)Z
   * Goal 8. Branch org.apache.commons.math.util.MathUtils.equals(DDD)Z: I26 Branch 47 IFGT L384 - true in context: org.apache.commons.math.util.MathUtils:equals(DDD)Z
   * Goal 9. org.apache.commons.math.util.MathUtils.equals(DDD)Z: Line 384
   * Goal 10. org.apache.commons.math.util.MathUtils.equals(DDD)Z
   * Goal 11. org.apache.commons.math.util.MathUtils.equals(DDD)Z
   * Goal 12. Weak Mutation 500: org.apache.commons.math.util.MathUtils.equals(DDD)Z:384 - ReplaceComparisonOperator == -> >=
   * Goal 13. Weak Mutation 505: org.apache.commons.math.util.MathUtils.equals(DDD)Z:384 - ReplaceComparisonOperator >= -> ==
   * Goal 14. Weak Mutation 519: org.apache.commons.math.util.MathUtils.equals(DDD)Z:384 - ReplaceComparisonOperator <= -> -1
   * Goal 15. Weak Mutation 525: org.apache.commons.math.util.MathUtils.equals(DDD)Z:384 - ReplaceArithmeticOperator + -> %
   * Goal 16. Weak Mutation 526: org.apache.commons.math.util.MathUtils.equals(DDD)Z:384 - ReplaceArithmeticOperator + -> -
   * Goal 17. Weak Mutation 527: org.apache.commons.math.util.MathUtils.equals(DDD)Z:384 - ReplaceArithmeticOperator + -> *
   * Goal 18. Weak Mutation 528: org.apache.commons.math.util.MathUtils.equals(DDD)Z:384 - ReplaceArithmeticOperator + -> /
   * Goal 19. Weak Mutation 529: org.apache.commons.math.util.MathUtils.equals(DDD)Z:384 - ReplaceComparisonOperator > -> -2
   * Goal 20. org.apache.commons.math.util.MathUtils.equals(DDD)Z:false
   */

  @Test
  public void test119()  throws Throwable  {
      boolean boolean0 = MathUtils.equals(6.283185307179586, (double) 0, (double) 1L);
  }

  //Test case number: 120
  /*
   * 20 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I5 Branch 43 IFEQ L384 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I9 Branch 44 IFGE L384 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I15 Branch 45 IFGE L384 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I20 Branch 46 IFLE L384 - true
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.equals(DDD)Z: I9 Branch 44 IFGE L384 - false in context: org.apache.commons.math.util.MathUtils:equals(DDD)Z
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.equals(DDD)Z: I15 Branch 45 IFGE L384 - false in context: org.apache.commons.math.util.MathUtils:equals(DDD)Z
   * Goal 7. Branch org.apache.commons.math.util.MathUtils.equals(DDD)Z: I5 Branch 43 IFEQ L384 - false in context: org.apache.commons.math.util.MathUtils:equals(DDD)Z
   * Goal 8. Branch org.apache.commons.math.util.MathUtils.equals(DDD)Z: I20 Branch 46 IFLE L384 - true in context: org.apache.commons.math.util.MathUtils:equals(DDD)Z
   * Goal 9. org.apache.commons.math.util.MathUtils.equals(DDD)Z: Line 384
   * Goal 10. org.apache.commons.math.util.MathUtils.equals(DDD)Z
   * Goal 11. org.apache.commons.math.util.MathUtils.equals(DDD)Z
   * Goal 12. Weak Mutation 501: org.apache.commons.math.util.MathUtils.equals(DDD)Z:384 - ReplaceComparisonOperator == -> <=
   * Goal 13. Weak Mutation 504: org.apache.commons.math.util.MathUtils.equals(DDD)Z:384 - ReplaceComparisonOperator >= -> -1
   * Goal 14. Weak Mutation 509: org.apache.commons.math.util.MathUtils.equals(DDD)Z:384 - ReplaceArithmeticOperator + -> %
   * Goal 15. Weak Mutation 510: org.apache.commons.math.util.MathUtils.equals(DDD)Z:384 - ReplaceArithmeticOperator + -> -
   * Goal 16. Weak Mutation 511: org.apache.commons.math.util.MathUtils.equals(DDD)Z:384 - ReplaceArithmeticOperator + -> *
   * Goal 17. Weak Mutation 512: org.apache.commons.math.util.MathUtils.equals(DDD)Z:384 - ReplaceArithmeticOperator + -> /
   * Goal 18. Weak Mutation 514: org.apache.commons.math.util.MathUtils.equals(DDD)Z:384 - ReplaceComparisonOperator >= -> -1
   * Goal 19. Weak Mutation 520: org.apache.commons.math.util.MathUtils.equals(DDD)Z:384 - ReplaceComparisonOperator <= -> ==
   * Goal 20. org.apache.commons.math.util.MathUtils.equals(DDD)Z:false
   */

  @Test
  public void test120()  throws Throwable  {
      boolean boolean0 = MathUtils.equals((-745.750587099), 1.0, (-883.9622696));
  }

  //Test case number: 121
  /*
   * 7 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I5 Branch 43 IFEQ L384 - true
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.equals(DDD)Z: I5 Branch 43 IFEQ L384 - true in context: org.apache.commons.math.util.MathUtils:equals(DDD)Z
   * Goal 3. org.apache.commons.math.util.MathUtils.equals(DDD)Z: Line 384
   * Goal 4. org.apache.commons.math.util.MathUtils.equals(DDD)Z
   * Goal 5. org.apache.commons.math.util.MathUtils.equals(DDD)Z
   * Goal 6. Weak Mutation 499: org.apache.commons.math.util.MathUtils.equals(DDD)Z:384 - ReplaceComparisonOperator == -> -2
   * Goal 7. org.apache.commons.math.util.MathUtils.equals(DDD)Z:true
   */

  @Test
  public void test121()  throws Throwable  {
      boolean boolean0 = MathUtils.equals(0.0, 0.0, (-2207.0));
  }

  //Test case number: 122
  /*
   * 34 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 40 IFEQ L371 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 40 IFEQ L371 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.equals(DD)Z: I7 Branch 41 IFNE L371 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 42 IFNE L371 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I3 Branch 48 IFNULL L398 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I5 Branch 49 IFNONNULL L398 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I36 Branch 53 IF_ICMPEQ L401 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I49 Branch 54 IF_ICMPGE L404 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I49 Branch 54 IF_ICMPGE L404 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I59 Branch 55 IFNE L405 - true
   * Goal 11. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I5 Branch 49 IFNONNULL L398 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 12. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I3 Branch 48 IFNULL L398 - false in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 13. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I36 Branch 53 IF_ICMPEQ L401 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 14. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I49 Branch 54 IF_ICMPGE L404 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 15. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I49 Branch 54 IF_ICMPGE L404 - false in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 16. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I59 Branch 55 IFNE L405 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 17. org.apache.commons.math.util.MathUtils.equals(DD)Z: Line 371
   * Goal 18. org.apache.commons.math.util.MathUtils.equals([D[D)Z: Line 398
   * Goal 19. org.apache.commons.math.util.MathUtils.equals([D[D)Z: Line 401
   * Goal 20. org.apache.commons.math.util.MathUtils.equals([D[D)Z: Line 404
   * Goal 21. org.apache.commons.math.util.MathUtils.equals([D[D)Z: Line 405
   * Goal 22. org.apache.commons.math.util.MathUtils.equals([D[D)Z: Line 409
   * Goal 23. org.apache.commons.math.util.MathUtils.equals([D[D)Z
   * Goal 24. org.apache.commons.math.util.MathUtils.equals([D[D)Z
   * Goal 25. Weak Mutation 487: org.apache.commons.math.util.MathUtils.equals(DD)Z:371 - ReplaceComparisonOperator == -> !=
   * Goal 26. Weak Mutation 489: org.apache.commons.math.util.MathUtils.equals(DD)Z:371 - ReplaceComparisonOperator != -> ==
   * Goal 27. Weak Mutation 492: org.apache.commons.math.util.MathUtils.equals(DD)Z:371 - ReplaceComparisonOperator != -> -1
   * Goal 28. Weak Mutation 534: org.apache.commons.math.util.MathUtils.equals([D[D)Z:398 - ReplaceComparisonOperator = null -> != null
   * Goal 29. Weak Mutation 535: org.apache.commons.math.util.MathUtils.equals([D[D)Z:398 - ReplaceComparisonOperator != null -> = null
   * Goal 30. Weak Mutation 549: org.apache.commons.math.util.MathUtils.equals([D[D)Z:401 - ReplaceComparisonOperator == -> -2
   * Goal 31. Weak Mutation 557: org.apache.commons.math.util.MathUtils.equals([D[D)Z:404 - ReplaceComparisonOperator >= -> -1
   * Goal 32. Weak Mutation 558: org.apache.commons.math.util.MathUtils.equals([D[D)Z:404 - ReplaceComparisonOperator >= -> >
   * Goal 33. Weak Mutation 566: org.apache.commons.math.util.MathUtils.equals([D[D)Z:405 - ReplaceComparisonOperator != -> ==
   * Goal 34. org.apache.commons.math.util.MathUtils.equals([D[D)Z:true
   */

  @Test
  public void test122()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[3] = (double) Float.NaN;
      boolean boolean0 = MathUtils.equals(doubleArray0, doubleArray0);
  }

  //Test case number: 123
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 40 IFEQ L371 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.equals(DD)Z: I7 Branch 41 IFNE L371 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 42 IFNE L371 - true
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 40 IFEQ L371 - false in context: org.apache.commons.math.util.MathUtils:equals(DD)Z
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.equals(DD)Z: I7 Branch 41 IFNE L371 - false in context: org.apache.commons.math.util.MathUtils:equals(DD)Z
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 42 IFNE L371 - true in context: org.apache.commons.math.util.MathUtils:equals(DD)Z
   * Goal 7. org.apache.commons.math.util.MathUtils.equals(DD)Z: Line 371
   * Goal 8. org.apache.commons.math.util.MathUtils.equals(DD)Z
   * Goal 9. org.apache.commons.math.util.MathUtils.equals(DD)Z
   * Goal 10. Weak Mutation 487: org.apache.commons.math.util.MathUtils.equals(DD)Z:371 - ReplaceComparisonOperator == -> !=
   * Goal 11. Weak Mutation 489: org.apache.commons.math.util.MathUtils.equals(DD)Z:371 - ReplaceComparisonOperator != -> ==
   * Goal 12. Weak Mutation 493: org.apache.commons.math.util.MathUtils.equals(DD)Z:371 - ReplaceComparisonOperator != -> <
   * Goal 13. org.apache.commons.math.util.MathUtils.equals(DD)Z:false
   */

  @Test
  public void test123()  throws Throwable  {
      boolean boolean0 = MathUtils.equals(Double.NaN, 0.0);
  }

  //Test case number: 124
  /*
   * 10 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 40 IFEQ L371 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 42 IFNE L371 - true
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 42 IFNE L371 - true in context: org.apache.commons.math.util.MathUtils:equals(DD)Z
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 40 IFEQ L371 - true in context: org.apache.commons.math.util.MathUtils:equals(DD)Z
   * Goal 5. org.apache.commons.math.util.MathUtils.equals(DD)Z: Line 371
   * Goal 6. org.apache.commons.math.util.MathUtils.equals(DD)Z
   * Goal 7. org.apache.commons.math.util.MathUtils.equals(DD)Z
   * Goal 8. Weak Mutation 487: org.apache.commons.math.util.MathUtils.equals(DD)Z:371 - ReplaceComparisonOperator == -> !=
   * Goal 9. Weak Mutation 494: org.apache.commons.math.util.MathUtils.equals(DD)Z:371 - ReplaceComparisonOperator != -> >
   * Goal 10. org.apache.commons.math.util.MathUtils.equals(DD)Z:false
   */

  @Test
  public void test124()  throws Throwable  {
      boolean boolean0 = MathUtils.equals(0.0, 423.43);
  }

  //Test case number: 125
  /*
   * 77 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I4 Branch 20 IF_ICMPGE L250 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I28 Branch 21 IFGE L254 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I53 Branch 22 IF_ICMPEQ L258 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I55 Branch 23 IFNE L258 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I64 Branch 24 IF_ICMPEQ L261 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I69 Branch 25 IF_ICMPNE L261 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I81 Branch 26 IF_ICMPLE L264 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I94 Branch 27 IF_ICMPGE L267 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I113 Branch 28 IF_ICMPGT L272 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I113 Branch 28 IF_ICMPGT L272 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I4 Branch 29 IF_ICMPGE L298 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I28 Branch 30 IFGE L302 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I53 Branch 31 IF_ICMPEQ L306 - false
   * Goal 14. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I55 Branch 32 IFNE L306 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I64 Branch 33 IF_ICMPEQ L309 - false
   * Goal 16. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I69 Branch 34 IF_ICMPNE L309 - true
   * Goal 17. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I80 Branch 35 IF_ICMPGE L317 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I93 Branch 36 IF_ICMPGE L325 - false
   * Goal 19. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I4 Branch 29 IF_ICMPGE L298 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 20. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I28 Branch 30 IFGE L302 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 21. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I53 Branch 31 IF_ICMPEQ L306 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 22. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I55 Branch 32 IFNE L306 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 23. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I64 Branch 33 IF_ICMPEQ L309 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 24. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I69 Branch 34 IF_ICMPNE L309 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 25. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I80 Branch 35 IF_ICMPGE L317 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 26. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I93 Branch 36 IF_ICMPGE L325 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 27. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 250
   * Goal 28. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 254
   * Goal 29. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 258
   * Goal 30. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 261
   * Goal 31. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 264
   * Goal 32. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 267
   * Goal 33. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 271
   * Goal 34. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 272
   * Goal 35. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 273
   * Goal 36. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 276
   * Goal 37. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 298
   * Goal 38. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 302
   * Goal 39. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 306
   * Goal 40. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 309
   * Goal 41. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 317
   * Goal 42. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 325
   * Goal 43. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 326
   * Goal 44. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D
   * Goal 45. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D
   * Goal 46. Weak Mutation 239: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:250 - ReplaceComparisonOperator >= -> ==
   * Goal 47. Weak Mutation 246: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:254 - ReplaceComparisonOperator >= -> ==
   * Goal 48. Weak Mutation 257: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:258 - ReplaceComparisonOperator == -> >=
   * Goal 49. Weak Mutation 263: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:258 - ReplaceComparisonOperator != -> <
   * Goal 50. Weak Mutation 272: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:261 - ReplaceComparisonOperator == -> !=
   * Goal 51. Weak Mutation 280: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:261 - ReplaceArithmeticOperator - -> +
   * Goal 52. Weak Mutation 281: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:261 - ReplaceArithmeticOperator - -> %
   * Goal 53. Weak Mutation 282: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:261 - ReplaceArithmeticOperator - -> *
   * Goal 54. Weak Mutation 283: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:261 - ReplaceArithmeticOperator - -> /
   * Goal 55. Weak Mutation 286: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:261 - ReplaceComparisonOperator != -> >
   * Goal 56. Weak Mutation 300: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:264 - ReplaceArithmeticOperator / -> +
   * Goal 57. Weak Mutation 301: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:264 - ReplaceArithmeticOperator / -> %
   * Goal 58. Weak Mutation 302: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:264 - ReplaceArithmeticOperator / -> -
   * Goal 59. Weak Mutation 303: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:264 - ReplaceArithmeticOperator / -> *
   * Goal 60. Weak Mutation 306: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:264 - ReplaceComparisonOperator <= -> ==
   * Goal 61. Weak Mutation 330: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:267 - ReplaceComparisonOperator >= -> ==
   * Goal 62. Weak Mutation 347: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:272 - ReplaceComparisonOperator > -> !=
   * Goal 63. Weak Mutation 348: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:272 - ReplaceComparisonOperator > -> -2
   * Goal 64. Weak Mutation 349: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:272 - ReplaceComparisonOperator > -> >=
   * Goal 65. Weak Mutation 358: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:298 - ReplaceComparisonOperator >= -> ==
   * Goal 66. Weak Mutation 365: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:302 - ReplaceComparisonOperator >= -> ==
   * Goal 67. Weak Mutation 376: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:306 - ReplaceComparisonOperator == -> >=
   * Goal 68. Weak Mutation 382: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:306 - ReplaceComparisonOperator != -> <
   * Goal 69. Weak Mutation 390: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:309 - ReplaceComparisonOperator == -> !=
   * Goal 70. Weak Mutation 398: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:309 - ReplaceArithmeticOperator - -> +
   * Goal 71. Weak Mutation 399: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:309 - ReplaceArithmeticOperator - -> %
   * Goal 72. Weak Mutation 400: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:309 - ReplaceArithmeticOperator - -> *
   * Goal 73. Weak Mutation 401: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:309 - ReplaceArithmeticOperator - -> /
   * Goal 74. Weak Mutation 404: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:309 - ReplaceComparisonOperator != -> >
   * Goal 75. Weak Mutation 418: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:317 - ReplaceComparisonOperator >= -> ==
   * Goal 76. Weak Mutation 433: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:325 - ReplaceComparisonOperator >= -> -1
   * Goal 77. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:positive
   */

  @Test
  public void test125()  throws Throwable  {
      double double0 = MathUtils.binomialCoefficientLog(651, 237);
  }

  //Test case number: 126
  /*
   * 75 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I4 Branch 8 IF_ICMPGE L173 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I28 Branch 9 IFGE L177 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I53 Branch 10 IF_ICMPEQ L181 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I55 Branch 11 IFNE L181 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I64 Branch 12 IF_ICMPEQ L184 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I69 Branch 13 IF_ICMPNE L184 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I81 Branch 14 IF_ICMPLE L188 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I98 Branch 15 IF_ICMPGT L197 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I112 Branch 16 IF_ICMPGT L199 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I4 Branch 29 IF_ICMPGE L298 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I28 Branch 30 IFGE L302 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I53 Branch 31 IF_ICMPEQ L306 - false
   * Goal 13. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I55 Branch 32 IFNE L306 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I64 Branch 33 IF_ICMPEQ L309 - false
   * Goal 15. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I69 Branch 34 IF_ICMPNE L309 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I80 Branch 35 IF_ICMPGE L317 - false
   * Goal 17. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I4 Branch 29 IF_ICMPGE L298 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 18. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I28 Branch 30 IFGE L302 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 19. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I53 Branch 31 IF_ICMPEQ L306 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 20. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I55 Branch 32 IFNE L306 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 21. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I64 Branch 33 IF_ICMPEQ L309 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 22. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I69 Branch 34 IF_ICMPNE L309 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 23. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I80 Branch 35 IF_ICMPGE L317 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 24. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 173
   * Goal 25. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 177
   * Goal 26. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 181
   * Goal 27. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 184
   * Goal 28. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 188
   * Goal 29. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 196
   * Goal 30. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 197
   * Goal 31. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 199
   * Goal 32. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 224
   * Goal 33. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 298
   * Goal 34. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 302
   * Goal 35. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 306
   * Goal 36. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 309
   * Goal 37. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 317
   * Goal 38. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 318
   * Goal 39. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D
   * Goal 40. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D
   * Goal 41. Weak Mutation 110: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:173 - ReplaceComparisonOperator >= -> ==
   * Goal 42. Weak Mutation 117: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:177 - ReplaceComparisonOperator >= -> ==
   * Goal 43. Weak Mutation 128: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:181 - ReplaceComparisonOperator == -> >=
   * Goal 44. Weak Mutation 135: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:181 - ReplaceComparisonOperator != -> >
   * Goal 45. Weak Mutation 143: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:184 - ReplaceComparisonOperator == -> !=
   * Goal 46. Weak Mutation 151: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:184 - ReplaceArithmeticOperator - -> +
   * Goal 47. Weak Mutation 153: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:184 - ReplaceArithmeticOperator - -> *
   * Goal 48. Weak Mutation 154: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:184 - ReplaceArithmeticOperator - -> /
   * Goal 49. Weak Mutation 157: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:184 - ReplaceComparisonOperator != -> >
   * Goal 50. Weak Mutation 171: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:188 - ReplaceArithmeticOperator / -> +
   * Goal 51. Weak Mutation 172: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:188 - ReplaceArithmeticOperator / -> %
   * Goal 52. Weak Mutation 173: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:188 - ReplaceArithmeticOperator / -> -
   * Goal 53. Weak Mutation 174: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:188 - ReplaceArithmeticOperator / -> *
   * Goal 54. Weak Mutation 177: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:188 - ReplaceComparisonOperator <= -> ==
   * Goal 55. Weak Mutation 202: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:197 - ReplaceComparisonOperator > -> !=
   * Goal 56. Weak Mutation 212: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> +
   * Goal 57. Weak Mutation 213: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> %
   * Goal 58. Weak Mutation 214: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> *
   * Goal 59. Weak Mutation 215: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> /
   * Goal 60. Weak Mutation 217: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator + -> %
   * Goal 61. Weak Mutation 218: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator + -> -
   * Goal 62. Weak Mutation 219: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator + -> *
   * Goal 63. Weak Mutation 220: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator + -> /
   * Goal 64. Weak Mutation 228: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceComparisonOperator > -> -2
   * Goal 65. Weak Mutation 358: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:298 - ReplaceComparisonOperator >= -> ==
   * Goal 66. Weak Mutation 365: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:302 - ReplaceComparisonOperator >= -> ==
   * Goal 67. Weak Mutation 376: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:306 - ReplaceComparisonOperator == -> >=
   * Goal 68. Weak Mutation 383: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:306 - ReplaceComparisonOperator != -> >
   * Goal 69. Weak Mutation 390: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:309 - ReplaceComparisonOperator == -> !=
   * Goal 70. Weak Mutation 398: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:309 - ReplaceArithmeticOperator - -> +
   * Goal 71. Weak Mutation 400: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:309 - ReplaceArithmeticOperator - -> *
   * Goal 72. Weak Mutation 401: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:309 - ReplaceArithmeticOperator - -> /
   * Goal 73. Weak Mutation 404: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:309 - ReplaceComparisonOperator != -> >
   * Goal 74. Weak Mutation 416: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:317 - ReplaceComparisonOperator >= -> -1
   * Goal 75. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:zero
   */

  @Test
  public void test126()  throws Throwable  {
      double double0 = MathUtils.binomialCoefficientLog((byte)1, (-2493));
  }

  //Test case number: 127
  /*
   * 23 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I4 Branch 29 IF_ICMPGE L298 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I28 Branch 30 IFGE L302 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I53 Branch 31 IF_ICMPEQ L306 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I55 Branch 32 IFNE L306 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I64 Branch 33 IF_ICMPEQ L309 - true
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I4 Branch 29 IF_ICMPGE L298 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 7. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I28 Branch 30 IFGE L302 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 8. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I53 Branch 31 IF_ICMPEQ L306 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 9. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I55 Branch 32 IFNE L306 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 10. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I64 Branch 33 IF_ICMPEQ L309 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 11. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 298
   * Goal 12. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 302
   * Goal 13. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 306
   * Goal 14. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 309
   * Goal 15. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 310
   * Goal 16. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D
   * Goal 17. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D
   * Goal 18. Weak Mutation 358: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:298 - ReplaceComparisonOperator >= -> ==
   * Goal 19. Weak Mutation 365: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:302 - ReplaceComparisonOperator >= -> ==
   * Goal 20. Weak Mutation 376: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:306 - ReplaceComparisonOperator == -> >=
   * Goal 21. Weak Mutation 382: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:306 - ReplaceComparisonOperator != -> <
   * Goal 22. Weak Mutation 390: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:309 - ReplaceComparisonOperator == -> !=
   * Goal 23. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:positive
   */

  @Test
  public void test127()  throws Throwable  {
      double double0 = MathUtils.binomialCoefficientLog((byte)32, (byte)1);
  }

  //Test case number: 128
  /*
   * 19 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I4 Branch 29 IF_ICMPGE L298 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I28 Branch 30 IFGE L302 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I53 Branch 31 IF_ICMPEQ L306 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I55 Branch 32 IFNE L306 - false
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I4 Branch 29 IF_ICMPGE L298 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I28 Branch 30 IFGE L302 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 7. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I53 Branch 31 IF_ICMPEQ L306 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 8. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I55 Branch 32 IFNE L306 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 9. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 298
   * Goal 10. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 302
   * Goal 11. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 306
   * Goal 12. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 307
   * Goal 13. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D
   * Goal 14. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D
   * Goal 15. Weak Mutation 358: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:298 - ReplaceComparisonOperator >= -> ==
   * Goal 16. Weak Mutation 365: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:302 - ReplaceComparisonOperator >= -> ==
   * Goal 17. Weak Mutation 376: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:306 - ReplaceComparisonOperator == -> >=
   * Goal 18. Weak Mutation 381: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:306 - ReplaceComparisonOperator != -> -1
   * Goal 19. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:zero
   */

  @Test
  public void test128()  throws Throwable  {
      double double0 = MathUtils.binomialCoefficientLog(3336, (byte)0);
  }

  //Test case number: 129
  /*
   * 16 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I4 Branch 29 IF_ICMPGE L298 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I28 Branch 30 IFGE L302 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I53 Branch 31 IF_ICMPEQ L306 - true
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I4 Branch 29 IF_ICMPGE L298 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I28 Branch 30 IFGE L302 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I53 Branch 31 IF_ICMPEQ L306 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 7. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 298
   * Goal 8. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 302
   * Goal 9. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 306
   * Goal 10. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 307
   * Goal 11. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D
   * Goal 12. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D
   * Goal 13. Weak Mutation 357: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:298 - ReplaceComparisonOperator >= -> >
   * Goal 14. Weak Mutation 366: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:302 - ReplaceComparisonOperator >= -> >
   * Goal 15. Weak Mutation 375: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:306 - ReplaceComparisonOperator == -> -2
   * Goal 16. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:zero
   */

  @Test
  public void test129()  throws Throwable  {
      double double0 = MathUtils.binomialCoefficientLog(0, 0);
  }

  //Test case number: 130
  /*
   * 59 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I4 Branch 29 IF_ICMPGE L298 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I28 Branch 30 IFGE L302 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I53 Branch 31 IF_ICMPEQ L306 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I55 Branch 32 IFNE L306 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I64 Branch 33 IF_ICMPEQ L309 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I69 Branch 34 IF_ICMPNE L309 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I80 Branch 35 IF_ICMPGE L317 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I93 Branch 36 IF_ICMPGE L325 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I107 Branch 37 IF_ICMPLE L329 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I131 Branch 38 IF_ICMPGT L339 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I131 Branch 38 IF_ICMPGT L339 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I151 Branch 39 IF_ICMPGT L344 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I151 Branch 39 IF_ICMPGT L344 - false
   * Goal 14. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I4 Branch 29 IF_ICMPGE L298 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 15. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I28 Branch 30 IFGE L302 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 16. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I53 Branch 31 IF_ICMPEQ L306 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 17. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I55 Branch 32 IFNE L306 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 18. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I64 Branch 33 IF_ICMPEQ L309 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 19. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I69 Branch 34 IF_ICMPNE L309 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 20. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I80 Branch 35 IF_ICMPGE L317 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 21. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I93 Branch 36 IF_ICMPGE L325 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 22. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I107 Branch 37 IF_ICMPLE L329 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 23. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I131 Branch 38 IF_ICMPGT L339 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 24. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I131 Branch 38 IF_ICMPGT L339 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 25. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I151 Branch 39 IF_ICMPGT L344 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 26. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I151 Branch 39 IF_ICMPGT L344 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 27. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 298
   * Goal 28. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 302
   * Goal 29. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 306
   * Goal 30. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 309
   * Goal 31. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 317
   * Goal 32. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 325
   * Goal 33. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 329
   * Goal 34. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 336
   * Goal 35. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 339
   * Goal 36. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 340
   * Goal 37. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 344
   * Goal 38. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 345
   * Goal 39. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 348
   * Goal 40. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D
   * Goal 41. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D
   * Goal 42. Weak Mutation 358: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:298 - ReplaceComparisonOperator >= -> ==
   * Goal 43. Weak Mutation 365: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:302 - ReplaceComparisonOperator >= -> ==
   * Goal 44. Weak Mutation 376: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:306 - ReplaceComparisonOperator == -> >=
   * Goal 45. Weak Mutation 382: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:306 - ReplaceComparisonOperator != -> <
   * Goal 46. Weak Mutation 390: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:309 - ReplaceComparisonOperator == -> !=
   * Goal 47. Weak Mutation 398: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:309 - ReplaceArithmeticOperator - -> +
   * Goal 48. Weak Mutation 399: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:309 - ReplaceArithmeticOperator - -> %
   * Goal 49. Weak Mutation 400: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:309 - ReplaceArithmeticOperator - -> *
   * Goal 50. Weak Mutation 401: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:309 - ReplaceArithmeticOperator - -> /
   * Goal 51. Weak Mutation 404: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:309 - ReplaceComparisonOperator != -> >
   * Goal 52. Weak Mutation 418: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:317 - ReplaceComparisonOperator >= -> ==
   * Goal 53. Weak Mutation 435: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:325 - ReplaceComparisonOperator >= -> ==
   * Goal 54. Weak Mutation 452: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:329 - ReplaceArithmeticOperator / -> +
   * Goal 55. Weak Mutation 453: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:329 - ReplaceArithmeticOperator / -> %
   * Goal 56. Weak Mutation 454: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:329 - ReplaceArithmeticOperator / -> -
   * Goal 57. Weak Mutation 455: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:329 - ReplaceArithmeticOperator / -> *
   * Goal 58. Weak Mutation 458: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:329 - ReplaceComparisonOperator <= -> ==
   * Goal 59. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:positive
   */

  @Test
  public void test130()  throws Throwable  {
      double double0 = MathUtils.binomialCoefficientLog(5253264, 5);
  }

  //Test case number: 131
  /*
   * 8 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I4 Branch 29 IF_ICMPGE L298 - false
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I4 Branch 29 IF_ICMPGE L298 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 3. binomialCoefficientLog(II)D_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 4. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 298
   * Goal 5. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 299
   * Goal 6. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D
   * Goal 7. Weak Mutation 356: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:298 - ReplaceComparisonOperator >= -> -1
   * Goal 8. Weak Mutation 360: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:299 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test131()  throws Throwable  {
      // Undeclared exception!
      try { 
        MathUtils.binomialCoefficientLog((byte)1, 1101322399);
      } catch(IllegalArgumentException e) {
         //
         // must have n >= k for binomial coefficient (n,k)
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 132
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I4 Branch 29 IF_ICMPGE L298 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I28 Branch 30 IFGE L302 - false
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I4 Branch 29 IF_ICMPGE L298 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I28 Branch 30 IFGE L302 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 5. binomialCoefficientLog(II)D_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 6. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 298
   * Goal 7. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 302
   * Goal 8. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 303
   * Goal 9. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D
   * Goal 10. Weak Mutation 357: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:298 - ReplaceComparisonOperator >= -> >
   * Goal 11. Weak Mutation 364: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:302 - ReplaceComparisonOperator >= -> -1
   * Goal 12. Weak Mutation 368: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:303 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test132()  throws Throwable  {
      // Undeclared exception!
      try { 
        MathUtils.binomialCoefficientLog((-124), (-124));
      } catch(IllegalArgumentException e) {
         //
         // must have n >= 0 for binomial coefficient (n,k)
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 133
  /*
   * 85 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I4 Branch 8 IF_ICMPGE L173 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I28 Branch 9 IFGE L177 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I53 Branch 10 IF_ICMPEQ L181 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I55 Branch 11 IFNE L181 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I64 Branch 12 IF_ICMPEQ L184 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I69 Branch 13 IF_ICMPNE L184 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I81 Branch 14 IF_ICMPLE L188 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I98 Branch 15 IF_ICMPGT L197 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I112 Branch 16 IF_ICMPGT L199 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I4 Branch 20 IF_ICMPGE L250 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I28 Branch 21 IFGE L254 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I53 Branch 22 IF_ICMPEQ L258 - false
   * Goal 13. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I55 Branch 23 IFNE L258 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I64 Branch 24 IF_ICMPEQ L261 - false
   * Goal 15. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I69 Branch 25 IF_ICMPNE L261 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I81 Branch 26 IF_ICMPLE L264 - true
   * Goal 17. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I94 Branch 27 IF_ICMPGE L267 - false
   * Goal 18. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I4 Branch 20 IF_ICMPGE L250 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 19. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I28 Branch 21 IFGE L254 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 20. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I55 Branch 23 IFNE L258 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 21. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I53 Branch 22 IF_ICMPEQ L258 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 22. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I64 Branch 24 IF_ICMPEQ L261 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 23. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I69 Branch 25 IF_ICMPNE L261 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 24. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I81 Branch 26 IF_ICMPLE L264 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 25. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I94 Branch 27 IF_ICMPGE L267 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 26. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 173
   * Goal 27. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 177
   * Goal 28. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 181
   * Goal 29. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 184
   * Goal 30. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 188
   * Goal 31. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 196
   * Goal 32. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 197
   * Goal 33. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 199
   * Goal 34. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 224
   * Goal 35. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 250
   * Goal 36. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 254
   * Goal 37. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 258
   * Goal 38. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 261
   * Goal 39. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 264
   * Goal 40. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 267
   * Goal 41. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 268
   * Goal 42. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D
   * Goal 43. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D
   * Goal 44. Weak Mutation 110: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:173 - ReplaceComparisonOperator >= -> ==
   * Goal 45. Weak Mutation 117: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:177 - ReplaceComparisonOperator >= -> ==
   * Goal 46. Weak Mutation 128: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:181 - ReplaceComparisonOperator == -> >=
   * Goal 47. Weak Mutation 135: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:181 - ReplaceComparisonOperator != -> >
   * Goal 48. Weak Mutation 143: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:184 - ReplaceComparisonOperator == -> !=
   * Goal 49. Weak Mutation 151: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:184 - ReplaceArithmeticOperator - -> +
   * Goal 50. Weak Mutation 152: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:184 - ReplaceArithmeticOperator - -> %
   * Goal 51. Weak Mutation 153: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:184 - ReplaceArithmeticOperator - -> *
   * Goal 52. Weak Mutation 154: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:184 - ReplaceArithmeticOperator - -> /
   * Goal 53. Weak Mutation 157: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:184 - ReplaceComparisonOperator != -> >
   * Goal 54. Weak Mutation 171: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:188 - ReplaceArithmeticOperator / -> +
   * Goal 55. Weak Mutation 172: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:188 - ReplaceArithmeticOperator / -> %
   * Goal 56. Weak Mutation 173: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:188 - ReplaceArithmeticOperator / -> -
   * Goal 57. Weak Mutation 174: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:188 - ReplaceArithmeticOperator / -> *
   * Goal 58. Weak Mutation 177: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:188 - ReplaceComparisonOperator <= -> ==
   * Goal 59. Weak Mutation 202: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:197 - ReplaceComparisonOperator > -> !=
   * Goal 60. Weak Mutation 212: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> +
   * Goal 61. Weak Mutation 213: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> %
   * Goal 62. Weak Mutation 214: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> *
   * Goal 63. Weak Mutation 215: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> /
   * Goal 64. Weak Mutation 217: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator + -> %
   * Goal 65. Weak Mutation 218: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator + -> -
   * Goal 66. Weak Mutation 219: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator + -> *
   * Goal 67. Weak Mutation 220: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator + -> /
   * Goal 68. Weak Mutation 228: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceComparisonOperator > -> -2
   * Goal 69. Weak Mutation 239: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:250 - ReplaceComparisonOperator >= -> ==
   * Goal 70. Weak Mutation 246: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:254 - ReplaceComparisonOperator >= -> ==
   * Goal 71. Weak Mutation 257: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:258 - ReplaceComparisonOperator == -> >=
   * Goal 72. Weak Mutation 264: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:258 - ReplaceComparisonOperator != -> >
   * Goal 73. Weak Mutation 272: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:261 - ReplaceComparisonOperator == -> !=
   * Goal 74. Weak Mutation 280: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:261 - ReplaceArithmeticOperator - -> +
   * Goal 75. Weak Mutation 281: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:261 - ReplaceArithmeticOperator - -> %
   * Goal 76. Weak Mutation 282: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:261 - ReplaceArithmeticOperator - -> *
   * Goal 77. Weak Mutation 283: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:261 - ReplaceArithmeticOperator - -> /
   * Goal 78. Weak Mutation 286: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:261 - ReplaceComparisonOperator != -> >
   * Goal 79. Weak Mutation 300: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:264 - ReplaceArithmeticOperator / -> +
   * Goal 80. Weak Mutation 301: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:264 - ReplaceArithmeticOperator / -> %
   * Goal 81. Weak Mutation 302: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:264 - ReplaceArithmeticOperator / -> -
   * Goal 82. Weak Mutation 303: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:264 - ReplaceArithmeticOperator / -> *
   * Goal 83. Weak Mutation 306: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:264 - ReplaceComparisonOperator <= -> ==
   * Goal 84. Weak Mutation 328: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:267 - ReplaceComparisonOperator >= -> -1
   * Goal 85. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:positive
   */

  @Test
  public void test133()  throws Throwable  {
      double double0 = MathUtils.binomialCoefficientDouble(14, (-2274));
  }

  //Test case number: 134
  /*
   * 30 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I4 Branch 20 IF_ICMPGE L250 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I28 Branch 21 IFGE L254 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I53 Branch 22 IF_ICMPEQ L258 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I55 Branch 23 IFNE L258 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I64 Branch 24 IF_ICMPEQ L261 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I69 Branch 25 IF_ICMPNE L261 - false
   * Goal 7. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I4 Branch 20 IF_ICMPGE L250 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 8. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I28 Branch 21 IFGE L254 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 9. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I55 Branch 23 IFNE L258 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 10. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I53 Branch 22 IF_ICMPEQ L258 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 11. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I64 Branch 24 IF_ICMPEQ L261 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 12. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I69 Branch 25 IF_ICMPNE L261 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 13. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 250
   * Goal 14. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 254
   * Goal 15. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 258
   * Goal 16. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 261
   * Goal 17. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 262
   * Goal 18. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D
   * Goal 19. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D
   * Goal 20. Weak Mutation 239: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:250 - ReplaceComparisonOperator >= -> ==
   * Goal 21. Weak Mutation 247: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:254 - ReplaceComparisonOperator >= -> >
   * Goal 22. Weak Mutation 257: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:258 - ReplaceComparisonOperator == -> >=
   * Goal 23. Weak Mutation 264: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:258 - ReplaceComparisonOperator != -> >
   * Goal 24. Weak Mutation 272: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:261 - ReplaceComparisonOperator == -> !=
   * Goal 25. Weak Mutation 280: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:261 - ReplaceArithmeticOperator - -> +
   * Goal 26. Weak Mutation 281: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:261 - ReplaceArithmeticOperator - -> %
   * Goal 27. Weak Mutation 282: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:261 - ReplaceArithmeticOperator - -> *
   * Goal 28. Weak Mutation 283: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:261 - ReplaceArithmeticOperator - -> /
   * Goal 29. Weak Mutation 284: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:261 - ReplaceComparisonOperator != -> -1
   * Goal 30. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:zero
   */

  @Test
  public void test134()  throws Throwable  {
      double double0 = MathUtils.binomialCoefficientDouble(0, (-1));
  }

  //Test case number: 135
  /*
   * 23 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I4 Branch 20 IF_ICMPGE L250 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I28 Branch 21 IFGE L254 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I53 Branch 22 IF_ICMPEQ L258 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I55 Branch 23 IFNE L258 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I64 Branch 24 IF_ICMPEQ L261 - true
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I4 Branch 20 IF_ICMPGE L250 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 7. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I28 Branch 21 IFGE L254 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 8. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I55 Branch 23 IFNE L258 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 9. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I53 Branch 22 IF_ICMPEQ L258 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 10. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I64 Branch 24 IF_ICMPEQ L261 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 11. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 250
   * Goal 12. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 254
   * Goal 13. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 258
   * Goal 14. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 261
   * Goal 15. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 262
   * Goal 16. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D
   * Goal 17. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D
   * Goal 18. Weak Mutation 239: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:250 - ReplaceComparisonOperator >= -> ==
   * Goal 19. Weak Mutation 246: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:254 - ReplaceComparisonOperator >= -> ==
   * Goal 20. Weak Mutation 257: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:258 - ReplaceComparisonOperator == -> >=
   * Goal 21. Weak Mutation 263: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:258 - ReplaceComparisonOperator != -> <
   * Goal 22. Weak Mutation 272: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:261 - ReplaceComparisonOperator == -> !=
   * Goal 23. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:positive
   */

  @Test
  public void test135()  throws Throwable  {
      double double0 = MathUtils.binomialCoefficientDouble(12, 1);
  }

  //Test case number: 136
  /*
   * 19 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I4 Branch 20 IF_ICMPGE L250 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I28 Branch 21 IFGE L254 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I53 Branch 22 IF_ICMPEQ L258 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I55 Branch 23 IFNE L258 - false
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I4 Branch 20 IF_ICMPGE L250 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I28 Branch 21 IFGE L254 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 7. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I53 Branch 22 IF_ICMPEQ L258 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 8. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I55 Branch 23 IFNE L258 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 9. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 250
   * Goal 10. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 254
   * Goal 11. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 258
   * Goal 12. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 259
   * Goal 13. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D
   * Goal 14. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D
   * Goal 15. Weak Mutation 239: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:250 - ReplaceComparisonOperator >= -> ==
   * Goal 16. Weak Mutation 246: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:254 - ReplaceComparisonOperator >= -> ==
   * Goal 17. Weak Mutation 257: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:258 - ReplaceComparisonOperator == -> >=
   * Goal 18. Weak Mutation 262: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:258 - ReplaceComparisonOperator != -> -1
   * Goal 19. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:positive
   */

  @Test
  public void test136()  throws Throwable  {
      double double0 = MathUtils.binomialCoefficientDouble(21, 0);
  }

  //Test case number: 137
  /*
   * 16 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I4 Branch 20 IF_ICMPGE L250 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I28 Branch 21 IFGE L254 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I53 Branch 22 IF_ICMPEQ L258 - true
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I4 Branch 20 IF_ICMPGE L250 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I28 Branch 21 IFGE L254 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I53 Branch 22 IF_ICMPEQ L258 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 7. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 250
   * Goal 8. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 254
   * Goal 9. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 258
   * Goal 10. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 259
   * Goal 11. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D
   * Goal 12. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D
   * Goal 13. Weak Mutation 238: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:250 - ReplaceComparisonOperator >= -> >
   * Goal 14. Weak Mutation 246: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:254 - ReplaceComparisonOperator >= -> ==
   * Goal 15. Weak Mutation 256: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:258 - ReplaceComparisonOperator == -> -2
   * Goal 16. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:positive
   */

  @Test
  public void test137()  throws Throwable  {
      double double0 = MathUtils.binomialCoefficientDouble(119, 119);
  }

  //Test case number: 138
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I4 Branch 20 IF_ICMPGE L250 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I28 Branch 21 IFGE L254 - false
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I4 Branch 20 IF_ICMPGE L250 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I28 Branch 21 IFGE L254 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 5. binomialCoefficientDouble(II)D_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 6. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 250
   * Goal 7. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 254
   * Goal 8. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 255
   * Goal 9. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D
   * Goal 10. Weak Mutation 238: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:250 - ReplaceComparisonOperator >= -> >
   * Goal 11. Weak Mutation 245: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:254 - ReplaceComparisonOperator >= -> -1
   * Goal 12. Weak Mutation 249: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:255 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test138()  throws Throwable  {
      // Undeclared exception!
      try { 
        MathUtils.binomialCoefficientDouble((-1), (-1));
      } catch(IllegalArgumentException e) {
         //
         // must have n >= 0 for binomial coefficient (n,k)
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 139
  /*
   * 8 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I4 Branch 20 IF_ICMPGE L250 - false
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I4 Branch 20 IF_ICMPGE L250 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 3. binomialCoefficientDouble(II)D_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 4. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 250
   * Goal 5. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 251
   * Goal 6. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D
   * Goal 7. Weak Mutation 237: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:250 - ReplaceComparisonOperator >= -> -1
   * Goal 8. Weak Mutation 241: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:251 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test139()  throws Throwable  {
      // Undeclared exception!
      try { 
        MathUtils.binomialCoefficientDouble((byte)32, 66);
      } catch(IllegalArgumentException e) {
         //
         // must have n >= k for binomial coefficient (n,k)
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 140
  /*
   * 52 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I4 Branch 20 IF_ICMPGE L250 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I28 Branch 21 IFGE L254 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I53 Branch 22 IF_ICMPEQ L258 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I55 Branch 23 IFNE L258 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I64 Branch 24 IF_ICMPEQ L261 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I69 Branch 25 IF_ICMPNE L261 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I81 Branch 26 IF_ICMPLE L264 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I94 Branch 27 IF_ICMPGE L267 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I113 Branch 28 IF_ICMPGT L272 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I113 Branch 28 IF_ICMPGT L272 - false
   * Goal 11. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I4 Branch 20 IF_ICMPGE L250 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 12. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I28 Branch 21 IFGE L254 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 13. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I55 Branch 23 IFNE L258 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 14. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I53 Branch 22 IF_ICMPEQ L258 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 15. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I64 Branch 24 IF_ICMPEQ L261 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 16. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I69 Branch 25 IF_ICMPNE L261 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 17. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I81 Branch 26 IF_ICMPLE L264 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 18. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I94 Branch 27 IF_ICMPGE L267 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 19. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I113 Branch 28 IF_ICMPGT L272 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 20. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I113 Branch 28 IF_ICMPGT L272 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 21. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 250
   * Goal 22. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 254
   * Goal 23. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 258
   * Goal 24. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 261
   * Goal 25. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 264
   * Goal 26. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 267
   * Goal 27. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 271
   * Goal 28. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 272
   * Goal 29. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 273
   * Goal 30. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 276
   * Goal 31. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D
   * Goal 32. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D
   * Goal 33. Weak Mutation 239: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:250 - ReplaceComparisonOperator >= -> ==
   * Goal 34. Weak Mutation 246: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:254 - ReplaceComparisonOperator >= -> ==
   * Goal 35. Weak Mutation 257: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:258 - ReplaceComparisonOperator == -> >=
   * Goal 36. Weak Mutation 263: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:258 - ReplaceComparisonOperator != -> <
   * Goal 37. Weak Mutation 272: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:261 - ReplaceComparisonOperator == -> !=
   * Goal 38. Weak Mutation 280: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:261 - ReplaceArithmeticOperator - -> +
   * Goal 39. Weak Mutation 281: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:261 - ReplaceArithmeticOperator - -> %
   * Goal 40. Weak Mutation 282: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:261 - ReplaceArithmeticOperator - -> *
   * Goal 41. Weak Mutation 283: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:261 - ReplaceArithmeticOperator - -> /
   * Goal 42. Weak Mutation 286: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:261 - ReplaceComparisonOperator != -> >
   * Goal 43. Weak Mutation 300: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:264 - ReplaceArithmeticOperator / -> +
   * Goal 44. Weak Mutation 301: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:264 - ReplaceArithmeticOperator / -> %
   * Goal 45. Weak Mutation 302: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:264 - ReplaceArithmeticOperator / -> -
   * Goal 46. Weak Mutation 303: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:264 - ReplaceArithmeticOperator / -> *
   * Goal 47. Weak Mutation 306: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:264 - ReplaceComparisonOperator <= -> ==
   * Goal 48. Weak Mutation 330: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:267 - ReplaceComparisonOperator >= -> ==
   * Goal 49. Weak Mutation 347: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:272 - ReplaceComparisonOperator > -> !=
   * Goal 50. Weak Mutation 348: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:272 - ReplaceComparisonOperator > -> -2
   * Goal 51. Weak Mutation 349: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:272 - ReplaceComparisonOperator > -> >=
   * Goal 52. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:positive
   */

  @Test
  public void test140()  throws Throwable  {
      double double0 = MathUtils.binomialCoefficientDouble((short)32705, 314);
  }

  //Test case number: 141
  /*
   * 129 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I4 Branch 8 IF_ICMPGE L173 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I28 Branch 9 IFGE L177 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I53 Branch 10 IF_ICMPEQ L181 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I55 Branch 11 IFNE L181 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I64 Branch 12 IF_ICMPEQ L184 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I69 Branch 13 IF_ICMPNE L184 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I81 Branch 14 IF_ICMPLE L188 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I98 Branch 15 IF_ICMPGT L197 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I134 Branch 17 IF_ICMPGT L202 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I190 Branch 19 IF_ICMPGT L219 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 63 IFEQ L542 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 64 IFNE L542 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.gcd(II)I: I70 Branch 67 IFLE L554 - false
   * Goal 14. org.apache.commons.math.util.MathUtils.gcd(II)I: I79 Branch 68 IFLE L557 - false
   * Goal 15. org.apache.commons.math.util.MathUtils.gcd(II)I: I94 Branch 69 IFNE L562 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.gcd(II)I: I94 Branch 69 IFNE L562 - false
   * Goal 17. org.apache.commons.math.util.MathUtils.gcd(II)I: I98 Branch 70 IFNE L562 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.gcd(II)I: I98 Branch 70 IFNE L562 - false
   * Goal 19. org.apache.commons.math.util.MathUtils.gcd(II)I: I101 Branch 71 IF_ICMPGE L562 - false
   * Goal 20. org.apache.commons.math.util.MathUtils.gcd(II)I: I122 Branch 72 IF_ICMPNE L568 - true
   * Goal 21. org.apache.commons.math.util.MathUtils.gcd(II)I: I150 Branch 73 IF_ICMPNE L575 - true
   * Goal 22. org.apache.commons.math.util.MathUtils.gcd(II)I: I150 Branch 73 IF_ICMPNE L575 - false
   * Goal 23. org.apache.commons.math.util.MathUtils.gcd(II)I: I165 Branch 74 IFNE L581 - true
   * Goal 24. org.apache.commons.math.util.MathUtils.gcd(II)I: I165 Branch 74 IFNE L581 - false
   * Goal 25. org.apache.commons.math.util.MathUtils.gcd(II)I: I176 Branch 75 IFLE L585 - true
   * Goal 26. org.apache.commons.math.util.MathUtils.gcd(II)I: I176 Branch 75 IFLE L585 - false
   * Goal 27. org.apache.commons.math.util.MathUtils.gcd(II)I: I198 Branch 76 IFNE L594 - true
   * Goal 28. org.apache.commons.math.util.MathUtils.gcd(II)I: I198 Branch 76 IFNE L594 - false
   * Goal 29. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 90 IFLE L776 - true
   * Goal 30. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 90 IFLE L776 - false
   * Goal 31. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I22 Branch 91 IFGE L780 - true
   * Goal 32. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I115 Branch 96 IFLE L800 - false
   * Goal 33. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I123 Branch 97 IFGT L805 - true
   * Goal 34. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I123 Branch 97 IFGT L805 - false
   * Goal 35. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I4 Branch 8 IF_ICMPGE L173 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 36. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I28 Branch 9 IFGE L177 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 37. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I53 Branch 10 IF_ICMPEQ L181 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 38. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I55 Branch 11 IFNE L181 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 39. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I69 Branch 13 IF_ICMPNE L184 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 40. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I64 Branch 12 IF_ICMPEQ L184 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 41. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I81 Branch 14 IF_ICMPLE L188 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 42. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I98 Branch 15 IF_ICMPGT L197 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 43. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I134 Branch 17 IF_ICMPGT L202 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 44. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I190 Branch 19 IF_ICMPGT L219 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 45. binomialCoefficient(II)J_java.lang.ArithmeticException_EXPLICIT
   * Goal 46. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 173
   * Goal 47. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 177
   * Goal 48. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 181
   * Goal 49. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 184
   * Goal 50. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 188
   * Goal 51. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 196
   * Goal 52. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 197
   * Goal 53. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 202
   * Goal 54. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 219
   * Goal 55. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 220
   * Goal 56. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 221
   * Goal 57. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 540
   * Goal 58. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 541
   * Goal 59. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 542
   * Goal 60. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 554
   * Goal 61. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 555
   * Goal 62. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 557
   * Goal 63. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 558
   * Goal 64. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 561
   * Goal 65. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 562
   * Goal 66. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 564
   * Goal 67. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 565
   * Goal 68. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 566
   * Goal 69. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 568
   * Goal 70. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 575
   * Goal 71. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 581
   * Goal 72. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 582
   * Goal 73. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 585
   * Goal 74. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 586
   * Goal 75. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 588
   * Goal 76. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 591
   * Goal 77. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 594
   * Goal 78. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 595
   * Goal 79. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 775
   * Goal 80. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 776
   * Goal 81. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 778
   * Goal 82. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 780
   * Goal 83. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 800
   * Goal 84. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 805
   * Goal 85. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 806
   * Goal 86. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 808
   * Goal 87. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 815
   * Goal 88. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J
   * Goal 89. Weak Mutation 110: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:173 - ReplaceComparisonOperator >= -> ==
   * Goal 90. Weak Mutation 117: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:177 - ReplaceComparisonOperator >= -> ==
   * Goal 91. Weak Mutation 128: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:181 - ReplaceComparisonOperator == -> >=
   * Goal 92. Weak Mutation 134: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:181 - ReplaceComparisonOperator != -> <
   * Goal 93. Weak Mutation 143: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:184 - ReplaceComparisonOperator == -> !=
   * Goal 94. Weak Mutation 151: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:184 - ReplaceArithmeticOperator - -> +
   * Goal 95. Weak Mutation 152: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:184 - ReplaceArithmeticOperator - -> %
   * Goal 96. Weak Mutation 153: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:184 - ReplaceArithmeticOperator - -> *
   * Goal 97. Weak Mutation 154: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:184 - ReplaceArithmeticOperator - -> /
   * Goal 98. Weak Mutation 157: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:184 - ReplaceComparisonOperator != -> >
   * Goal 99. Weak Mutation 171: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:188 - ReplaceArithmeticOperator / -> +
   * Goal 100. Weak Mutation 172: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:188 - ReplaceArithmeticOperator / -> %
   * Goal 101. Weak Mutation 173: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:188 - ReplaceArithmeticOperator / -> -
   * Goal 102. Weak Mutation 174: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:188 - ReplaceArithmeticOperator / -> *
   * Goal 103. Weak Mutation 177: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:188 - ReplaceComparisonOperator <= -> ==
   * Goal 104. Weak Mutation 203: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:197 - ReplaceComparisonOperator > -> -2
   * Goal 105. Weak Mutation 683: org.apache.commons.math.util.MathUtils.gcd(II)I:542 - ReplaceComparisonOperator == -> >=
   * Goal 106. Weak Mutation 689: org.apache.commons.math.util.MathUtils.gcd(II)I:542 - ReplaceComparisonOperator != -> <
   * Goal 107. Weak Mutation 731: org.apache.commons.math.util.MathUtils.gcd(II)I:554 - ReplaceComparisonOperator <= -> -1
   * Goal 108. Weak Mutation 740: org.apache.commons.math.util.MathUtils.gcd(II)I:557 - ReplaceComparisonOperator <= -> -1
   * Goal 109. Weak Mutation 751: org.apache.commons.math.util.MathUtils.gcd(II)I:562 - ReplaceBitwiseOperator & -> |
   * Goal 110. Weak Mutation 752: org.apache.commons.math.util.MathUtils.gcd(II)I:562 - ReplaceBitwiseOperator & -> ^
   * Goal 111. Weak Mutation 753: org.apache.commons.math.util.MathUtils.gcd(II)I:562 - ReplaceComparisonOperator != -> -1
   * Goal 112. Weak Mutation 754: org.apache.commons.math.util.MathUtils.gcd(II)I:562 - ReplaceComparisonOperator != -> <
   * Goal 113. Weak Mutation 760: org.apache.commons.math.util.MathUtils.gcd(II)I:562 - ReplaceBitwiseOperator & -> |
   * Goal 114. Weak Mutation 761: org.apache.commons.math.util.MathUtils.gcd(II)I:562 - ReplaceBitwiseOperator & -> ^
   * Goal 115. Weak Mutation 762: org.apache.commons.math.util.MathUtils.gcd(II)I:562 - ReplaceComparisonOperator != -> -1
   * Goal 116. Weak Mutation 763: org.apache.commons.math.util.MathUtils.gcd(II)I:562 - ReplaceComparisonOperator != -> <
   * Goal 117. Weak Mutation 773: org.apache.commons.math.util.MathUtils.gcd(II)I:562 - ReplaceComparisonOperator >= -> -1
   * Goal 118. Weak Mutation 783: org.apache.commons.math.util.MathUtils.gcd(II)I:564 - ReplaceArithmeticOperator / -> +
   * Goal 119. Weak Mutation 784: org.apache.commons.math.util.MathUtils.gcd(II)I:564 - ReplaceArithmeticOperator / -> %
   * Goal 120. Weak Mutation 785: org.apache.commons.math.util.MathUtils.gcd(II)I:564 - ReplaceArithmeticOperator / -> -
   * Goal 121. Weak Mutation 786: org.apache.commons.math.util.MathUtils.gcd(II)I:564 - ReplaceArithmeticOperator / -> *
   * Goal 122. Weak Mutation 794: org.apache.commons.math.util.MathUtils.gcd(II)I:565 - ReplaceArithmeticOperator / -> +
   * Goal 123. Weak Mutation 795: org.apache.commons.math.util.MathUtils.gcd(II)I:565 - ReplaceArithmeticOperator / -> %
   * Goal 124. Weak Mutation 796: org.apache.commons.math.util.MathUtils.gcd(II)I:565 - ReplaceArithmeticOperator / -> -
   * Goal 125. Weak Mutation 797: org.apache.commons.math.util.MathUtils.gcd(II)I:565 - ReplaceArithmeticOperator / -> *
   * Goal 126. Weak Mutation 964: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:776 - ReplaceComparisonOperator <= -> -1
   * Goal 127. Weak Mutation 965: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:776 - ReplaceComparisonOperator <= -> ==
   * Goal 128. Weak Mutation 973: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:780 - ReplaceComparisonOperator >= -> ==
   * Goal 129. Weak Mutation 1034: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:800 - ReplaceComparisonOperator <= -> -1
   */

  @Test
  public void test141()  throws Throwable  {
      // Undeclared exception!
      try { 
        MathUtils.binomialCoefficient(2980, 1478);
      } catch(ArithmeticException e) {
         //
         // overflow: multiply
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 142
  /*
   * 19 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I4 Branch 8 IF_ICMPGE L173 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I28 Branch 9 IFGE L177 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I53 Branch 10 IF_ICMPEQ L181 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I55 Branch 11 IFNE L181 - false
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I4 Branch 8 IF_ICMPGE L173 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I28 Branch 9 IFGE L177 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 7. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I53 Branch 10 IF_ICMPEQ L181 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 8. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I55 Branch 11 IFNE L181 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 9. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 173
   * Goal 10. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 177
   * Goal 11. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 181
   * Goal 12. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 182
   * Goal 13. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J
   * Goal 14. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J
   * Goal 15. Weak Mutation 110: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:173 - ReplaceComparisonOperator >= -> ==
   * Goal 16. Weak Mutation 117: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:177 - ReplaceComparisonOperator >= -> ==
   * Goal 17. Weak Mutation 128: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:181 - ReplaceComparisonOperator == -> >=
   * Goal 18. Weak Mutation 133: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:181 - ReplaceComparisonOperator != -> -1
   * Goal 19. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:positive
   */

  @Test
  public void test142()  throws Throwable  {
      long long0 = MathUtils.binomialCoefficient(2251, 0);
  }

  //Test case number: 143
  /*
   * 16 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I4 Branch 8 IF_ICMPGE L173 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I28 Branch 9 IFGE L177 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I53 Branch 10 IF_ICMPEQ L181 - true
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I4 Branch 8 IF_ICMPGE L173 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I28 Branch 9 IFGE L177 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I53 Branch 10 IF_ICMPEQ L181 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 7. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 173
   * Goal 8. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 177
   * Goal 9. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 181
   * Goal 10. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 182
   * Goal 11. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J
   * Goal 12. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J
   * Goal 13. Weak Mutation 109: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:173 - ReplaceComparisonOperator >= -> >
   * Goal 14. Weak Mutation 118: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:177 - ReplaceComparisonOperator >= -> >
   * Goal 15. Weak Mutation 127: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:181 - ReplaceComparisonOperator == -> -2
   * Goal 16. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:positive
   */

  @Test
  public void test143()  throws Throwable  {
      long long0 = MathUtils.binomialCoefficient(0, 0);
  }

  //Test case number: 144
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I4 Branch 8 IF_ICMPGE L173 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I28 Branch 9 IFGE L177 - false
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I4 Branch 8 IF_ICMPGE L173 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I28 Branch 9 IFGE L177 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 5. binomialCoefficient(II)J_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 6. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 173
   * Goal 7. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 177
   * Goal 8. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 178
   * Goal 9. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J
   * Goal 10. Weak Mutation 110: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:173 - ReplaceComparisonOperator >= -> ==
   * Goal 11. Weak Mutation 116: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:177 - ReplaceComparisonOperator >= -> -1
   * Goal 12. Weak Mutation 120: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:178 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test144()  throws Throwable  {
      // Undeclared exception!
      try { 
        MathUtils.binomialCoefficient((-1), (-2));
      } catch(IllegalArgumentException e) {
         //
         // must have n >= 0 for binomial coefficient (n,k)
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 145
  /*
   * 8 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I4 Branch 8 IF_ICMPGE L173 - false
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I4 Branch 8 IF_ICMPGE L173 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 3. binomialCoefficient(II)J_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 4. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 173
   * Goal 5. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 174
   * Goal 6. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J
   * Goal 7. Weak Mutation 108: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:173 - ReplaceComparisonOperator >= -> -1
   * Goal 8. Weak Mutation 112: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:174 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test145()  throws Throwable  {
      // Undeclared exception!
      try { 
        MathUtils.binomialCoefficient(9, 1532);
      } catch(IllegalArgumentException e) {
         //
         // must have n >= k for binomial coefficient (n,k)
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 146
  /*
   * 53 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I4 Branch 8 IF_ICMPGE L173 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I28 Branch 9 IFGE L177 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I53 Branch 10 IF_ICMPEQ L181 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I55 Branch 11 IFNE L181 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I64 Branch 12 IF_ICMPEQ L184 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I69 Branch 13 IF_ICMPNE L184 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I81 Branch 14 IF_ICMPLE L188 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I98 Branch 15 IF_ICMPGT L197 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I112 Branch 16 IF_ICMPGT L199 - true
   * Goal 10. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I4 Branch 8 IF_ICMPGE L173 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 11. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I28 Branch 9 IFGE L177 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 12. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I53 Branch 10 IF_ICMPEQ L181 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 13. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I55 Branch 11 IFNE L181 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 14. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I69 Branch 13 IF_ICMPNE L184 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 15. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I64 Branch 12 IF_ICMPEQ L184 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 16. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I81 Branch 14 IF_ICMPLE L188 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 17. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I98 Branch 15 IF_ICMPGT L197 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 18. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I112 Branch 16 IF_ICMPGT L199 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 19. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 173
   * Goal 20. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 177
   * Goal 21. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 181
   * Goal 22. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 184
   * Goal 23. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 188
   * Goal 24. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 196
   * Goal 25. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 197
   * Goal 26. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 199
   * Goal 27. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 224
   * Goal 28. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J
   * Goal 29. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J
   * Goal 30. Weak Mutation 110: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:173 - ReplaceComparisonOperator >= -> ==
   * Goal 31. Weak Mutation 118: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:177 - ReplaceComparisonOperator >= -> >
   * Goal 32. Weak Mutation 128: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:181 - ReplaceComparisonOperator == -> >=
   * Goal 33. Weak Mutation 135: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:181 - ReplaceComparisonOperator != -> >
   * Goal 34. Weak Mutation 143: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:184 - ReplaceComparisonOperator == -> !=
   * Goal 35. Weak Mutation 151: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:184 - ReplaceArithmeticOperator - -> +
   * Goal 36. Weak Mutation 152: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:184 - ReplaceArithmeticOperator - -> %
   * Goal 37. Weak Mutation 153: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:184 - ReplaceArithmeticOperator - -> *
   * Goal 38. Weak Mutation 154: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:184 - ReplaceArithmeticOperator - -> /
   * Goal 39. Weak Mutation 157: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:184 - ReplaceComparisonOperator != -> >
   * Goal 40. Weak Mutation 171: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:188 - ReplaceArithmeticOperator / -> +
   * Goal 41. Weak Mutation 173: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:188 - ReplaceArithmeticOperator / -> -
   * Goal 42. Weak Mutation 177: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:188 - ReplaceComparisonOperator <= -> ==
   * Goal 43. Weak Mutation 202: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:197 - ReplaceComparisonOperator > -> !=
   * Goal 44. Weak Mutation 212: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> +
   * Goal 45. Weak Mutation 213: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> %
   * Goal 46. Weak Mutation 214: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> *
   * Goal 47. Weak Mutation 215: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> /
   * Goal 48. Weak Mutation 217: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator + -> %
   * Goal 49. Weak Mutation 218: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator + -> -
   * Goal 50. Weak Mutation 219: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator + -> *
   * Goal 51. Weak Mutation 220: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator + -> /
   * Goal 52. Weak Mutation 228: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceComparisonOperator > -> -2
   * Goal 53. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:positive
   */

  @Test
  public void test146()  throws Throwable  {
      long long0 = MathUtils.binomialCoefficient(0, (-2964));
  }

  //Test case number: 147
  /*
   * 23 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: I5 Branch 3 IFLE L114 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: I19 Branch 4 IFGE L120 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: I75 Branch 7 IFGT L137 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: I9 Branch 142 IFNE L1215 - true
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: I9 Branch 142 IFNE L1215 - true in context: org.apache.commons.math.util.MathUtils:subAndCheck(JJ)J
   * Goal 6. subAndCheck(JJ)J_java.lang.ArithmeticException_EXPLICIT
   * Goal 7. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: Line 114
   * Goal 8. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: Line 120
   * Goal 9. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: Line 137
   * Goal 10. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: Line 140
   * Goal 11. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: Line 1214
   * Goal 12. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: Line 1215
   * Goal 13. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: Line 1223
   * Goal 14. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J
   * Goal 15. Weak Mutation 37: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:114 - ReplaceComparisonOperator <= -> ==
   * Goal 16. Weak Mutation 45: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:120 - ReplaceComparisonOperator >= -> ==
   * Goal 17. Weak Mutation 87: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:137 - ReplaceArithmeticOperator - -> +
   * Goal 18. Weak Mutation 88: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:137 - ReplaceArithmeticOperator - -> %
   * Goal 19. Weak Mutation 89: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:137 - ReplaceArithmeticOperator - -> *
   * Goal 20. Weak Mutation 90: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:137 - ReplaceArithmeticOperator - -> /
   * Goal 21. Weak Mutation 91: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:137 - ReplaceComparisonOperator > -> -2
   * Goal 22. Weak Mutation 100: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:140 - ReplaceComparisonOperator == -> !=
   * Goal 23. Weak Mutation 1580: org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J:1215 - ReplaceComparisonOperator != -> >
   */

  @Test
  public void test147()  throws Throwable  {
      // Undeclared exception!
      try { 
        MathUtils.subAndCheck(1247L, 9223372036854775807L);
      } catch(ArithmeticException e) {
         //
         // overflow: subtract
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 148
  /*
   * 32 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: I5 Branch 3 IFLE L114 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: I19 Branch 4 IFGE L120 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: I25 Branch 5 IFGE L121 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: I33 Branch 6 IFGT L123 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: I9 Branch 142 IFNE L1215 - true
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: I9 Branch 142 IFNE L1215 - true in context: org.apache.commons.math.util.MathUtils:subAndCheck(JJ)J
   * Goal 7. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: Line 114
   * Goal 8. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: Line 120
   * Goal 9. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: Line 121
   * Goal 10. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: Line 123
   * Goal 11. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: Line 124
   * Goal 12. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: Line 144
   * Goal 13. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: Line 1214
   * Goal 14. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: Line 1215
   * Goal 15. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: Line 1223
   * Goal 16. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: Line 1225
   * Goal 17. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J
   * Goal 18. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J
   * Goal 19. Weak Mutation 37: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:114 - ReplaceComparisonOperator <= -> ==
   * Goal 20. Weak Mutation 44: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:120 - ReplaceComparisonOperator >= -> -1
   * Goal 21. Weak Mutation 50: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:121 - ReplaceComparisonOperator >= -> -1
   * Goal 22. Weak Mutation 59: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:123 - ReplaceArithmeticOperator - -> +
   * Goal 23. Weak Mutation 60: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:123 - ReplaceArithmeticOperator - -> %
   * Goal 24. Weak Mutation 61: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:123 - ReplaceArithmeticOperator - -> *
   * Goal 25. Weak Mutation 62: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:123 - ReplaceArithmeticOperator - -> /
   * Goal 26. Weak Mutation 65: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:123 - ReplaceComparisonOperator > -> !=
   * Goal 27. Weak Mutation 69: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:124 - ReplaceArithmeticOperator + -> %
   * Goal 28. Weak Mutation 70: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:124 - ReplaceArithmeticOperator + -> -
   * Goal 29. Weak Mutation 71: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:124 - ReplaceArithmeticOperator + -> *
   * Goal 30. Weak Mutation 72: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:124 - ReplaceArithmeticOperator + -> /
   * Goal 31. Weak Mutation 1580: org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J:1215 - ReplaceComparisonOperator != -> >
   * Goal 32. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J:negative
   */

  @Test
  public void test148()  throws Throwable  {
      long long0 = MathUtils.subAndCheck((-1861L), (long) 1);
  }

  //Test case number: 149
  /*
   * 32 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: I5 Branch 3 IFLE L114 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: I5 Branch 3 IFLE L114 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: I19 Branch 4 IFGE L120 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: I75 Branch 7 IFGT L137 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: I9 Branch 142 IFNE L1215 - true
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: I9 Branch 142 IFNE L1215 - true in context: org.apache.commons.math.util.MathUtils:subAndCheck(JJ)J
   * Goal 7. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: Line 114
   * Goal 8. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: Line 116
   * Goal 9. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: Line 120
   * Goal 10. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: Line 137
   * Goal 11. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: Line 138
   * Goal 12. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: Line 144
   * Goal 13. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: Line 1214
   * Goal 14. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: Line 1215
   * Goal 15. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: Line 1223
   * Goal 16. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: Line 1225
   * Goal 17. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J
   * Goal 18. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J
   * Goal 19. Weak Mutation 36: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:114 - ReplaceComparisonOperator <= -> -1
   * Goal 20. Weak Mutation 37: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:114 - ReplaceComparisonOperator <= -> ==
   * Goal 21. Weak Mutation 45: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:120 - ReplaceComparisonOperator >= -> ==
   * Goal 22. Weak Mutation 87: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:137 - ReplaceArithmeticOperator - -> +
   * Goal 23. Weak Mutation 88: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:137 - ReplaceArithmeticOperator - -> %
   * Goal 24. Weak Mutation 89: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:137 - ReplaceArithmeticOperator - -> *
   * Goal 25. Weak Mutation 90: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:137 - ReplaceArithmeticOperator - -> /
   * Goal 26. Weak Mutation 92: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:137 - ReplaceComparisonOperator > -> !=
   * Goal 27. Weak Mutation 96: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:138 - ReplaceArithmeticOperator + -> %
   * Goal 28. Weak Mutation 97: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:138 - ReplaceArithmeticOperator + -> -
   * Goal 29. Weak Mutation 98: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:138 - ReplaceArithmeticOperator + -> *
   * Goal 30. Weak Mutation 99: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:138 - ReplaceArithmeticOperator + -> /
   * Goal 31. Weak Mutation 1579: org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J:1215 - ReplaceComparisonOperator != -> <
   * Goal 32. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J:positive
   */

  @Test
  public void test149()  throws Throwable  {
      long long0 = MathUtils.subAndCheck(1979L, (long) (byte) (-1));
  }

  //Test case number: 150
  /*
   * 27 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: I5 Branch 3 IFLE L114 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: I5 Branch 3 IFLE L114 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: I19 Branch 4 IFGE L120 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: I25 Branch 5 IFGE L121 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: I9 Branch 142 IFNE L1215 - true
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: I9 Branch 142 IFNE L1215 - true in context: org.apache.commons.math.util.MathUtils:subAndCheck(JJ)J
   * Goal 7. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: Line 114
   * Goal 8. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: Line 116
   * Goal 9. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: Line 120
   * Goal 10. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: Line 121
   * Goal 11. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: Line 130
   * Goal 12. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: Line 144
   * Goal 13. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: Line 1214
   * Goal 14. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: Line 1215
   * Goal 15. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: Line 1223
   * Goal 16. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: Line 1225
   * Goal 17. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J
   * Goal 18. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J
   * Goal 19. Weak Mutation 36: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:114 - ReplaceComparisonOperator <= -> -1
   * Goal 20. Weak Mutation 37: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:114 - ReplaceComparisonOperator <= -> ==
   * Goal 21. Weak Mutation 44: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:120 - ReplaceComparisonOperator >= -> -1
   * Goal 22. Weak Mutation 51: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:121 - ReplaceComparisonOperator >= -> ==
   * Goal 23. Weak Mutation 77: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:130 - ReplaceArithmeticOperator + -> -
   * Goal 24. Weak Mutation 78: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:130 - ReplaceArithmeticOperator + -> *
   * Goal 25. Weak Mutation 79: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:130 - ReplaceArithmeticOperator + -> /
   * Goal 26. Weak Mutation 1580: org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J:1215 - ReplaceComparisonOperator != -> >
   * Goal 27. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J:zero
   */

  @Test
  public void test150()  throws Throwable  {
      long long0 = MathUtils.subAndCheck((long) 67, (long) 67);
  }

  //Test case number: 151
  /*
   * 14 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I13 Branch 1 IFLT L81 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I17 Branch 2 IFLE L81 - true
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I13 Branch 1 IFLT L81 - false in context: org.apache.commons.math.util.MathUtils:addAndCheck(II)I
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I17 Branch 2 IFLE L81 - true in context: org.apache.commons.math.util.MathUtils:addAndCheck(II)I
   * Goal 5. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: Line 80
   * Goal 6. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: Line 81
   * Goal 7. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: Line 84
   * Goal 8. org.apache.commons.math.util.MathUtils.addAndCheck(II)I
   * Goal 9. org.apache.commons.math.util.MathUtils.addAndCheck(II)I
   * Goal 10. Weak Mutation 6: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:80 - ReplaceArithmeticOperator + -> %
   * Goal 11. Weak Mutation 9: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:80 - ReplaceArithmeticOperator + -> /
   * Goal 12. Weak Mutation 17: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:81 - ReplaceComparisonOperator < -> !=
   * Goal 13. Weak Mutation 26: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:81 - ReplaceComparisonOperator <= -> ==
   * Goal 14. org.apache.commons.math.util.MathUtils.addAndCheck(II)I:zero
   */

  @Test
  public void test151()  throws Throwable  {
      int int0 = MathUtils.addAndCheck(0, 0);
  }

  //Test case number: 152
  /*
   * 10 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.log(DD)D: root-Branch
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.log(DD)D: root-Branch in context: org.apache.commons.math.util.MathUtils:log(DD)D
   * Goal 3. org.apache.commons.math.util.MathUtils.log(DD)D: Line 742
   * Goal 4. org.apache.commons.math.util.MathUtils.log(DD)D
   * Goal 5. org.apache.commons.math.util.MathUtils.log(DD)D
   * Goal 6. Weak Mutation 926: org.apache.commons.math.util.MathUtils.log(DD)D:742 - ReplaceArithmeticOperator / -> +
   * Goal 7. Weak Mutation 927: org.apache.commons.math.util.MathUtils.log(DD)D:742 - ReplaceArithmeticOperator / -> %
   * Goal 8. Weak Mutation 928: org.apache.commons.math.util.MathUtils.log(DD)D:742 - ReplaceArithmeticOperator / -> -
   * Goal 9. Weak Mutation 929: org.apache.commons.math.util.MathUtils.log(DD)D:742 - ReplaceArithmeticOperator / -> *
   * Goal 10. org.apache.commons.math.util.MathUtils.log(DD)D:positive
   */

  @Test
  public void test152()  throws Throwable  {
      double double0 = MathUtils.log(0.0, 0);
  }

  //Test case number: 153
  /*
   * 10 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.round(DI)D: root-Branch
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.round(DI)D: root-Branch in context: org.apache.commons.math.util.MathUtils:round(DI)D
   * Goal 3. org.apache.commons.math.util.MathUtils.round(DI)D: Line 935
   * Goal 4. org.apache.commons.math.util.MathUtils.round(DII)D: Line 952
   * Goal 5. org.apache.commons.math.util.MathUtils.round(DII)D: Line 953
   * Goal 6. org.apache.commons.math.util.MathUtils.round(DII)D: Line 954
   * Goal 7. org.apache.commons.math.util.MathUtils.round(DII)D: Line 955
   * Goal 8. org.apache.commons.math.util.MathUtils.round(DI)D
   * Goal 9. org.apache.commons.math.util.MathUtils.round(DI)D
   * Goal 10. org.apache.commons.math.util.MathUtils.round(DI)D:positive
   */

  @Test
  public void test153()  throws Throwable  {
      double double0 = MathUtils.round(1681.1892359990172, 0);
  }

  //Test case number: 154
  /*
   * 56 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.round(FII)F: root-Branch
   * Goal 2. org.apache.commons.math.util.MathUtils.round(FI)F: root-Branch
   * Goal 3. org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 80 IFEQ L653 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 81 IFLT L656 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I4 Branch 98 IFNE L838 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I7 Branch 99 IFEQ L838 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 109 TABLESWITCH L1010 Case 0 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 110 TABLESWITCH L1010 Case 1 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 111 TABLESWITCH L1010 Case 2 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 112 TABLESWITCH L1010 Case 3 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 113 TABLESWITCH L1010 Case 4 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 114 TABLESWITCH L1010 Case 5 - false
   * Goal 13. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 115 TABLESWITCH L1010 Case 6 - false
   * Goal 14. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 116 TABLESWITCH L1010 Case 7 - false
   * Goal 15. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 117 TABLESWITCH L1010 Default-Case - false
   * Goal 16. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I175 Branch 124 IFLT L1058 - false
   * Goal 17. Branch org.apache.commons.math.util.MathUtils.round(FI)F: root-Branch in context: org.apache.commons.math.util.MathUtils:round(FI)F
   * Goal 18. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 112 TABLESWITCH L1010 Case 3 - false in context: 
   * Goal 19. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 110 TABLESWITCH L1010 Case 1 - false in context: 
   * Goal 20. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 116 TABLESWITCH L1010 Case 7 - false in context: 
   * Goal 21. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 114 TABLESWITCH L1010 Case 5 - false in context: 
   * Goal 22. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 115 TABLESWITCH L1010 Case 6 - false in context: 
   * Goal 23. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 109 TABLESWITCH L1010 Case 0 - false in context: 
   * Goal 24. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 113 TABLESWITCH L1010 Case 4 - true in context: 
   * Goal 25. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 111 TABLESWITCH L1010 Case 2 - false in context: 
   * Goal 26. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 117 TABLESWITCH L1010 Default-Case - false in context: 
   * Goal 27. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I175 Branch 124 IFLT L1058 - false in context: 
   * Goal 28. org.apache.commons.math.util.MathUtils.indicator(F)F: Line 653
   * Goal 29. org.apache.commons.math.util.MathUtils.indicator(F)F: Line 656
   * Goal 30. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 838
   * Goal 31. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 839
   * Goal 32. org.apache.commons.math.util.MathUtils.round(FI)F: Line 975
   * Goal 33. org.apache.commons.math.util.MathUtils.round(FII)F: Line 991
   * Goal 34. org.apache.commons.math.util.MathUtils.round(FII)F: Line 992
   * Goal 35. org.apache.commons.math.util.MathUtils.round(FII)F: Line 993
   * Goal 36. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1010
   * Goal 37. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1056
   * Goal 38. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1057
   * Goal 39. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1058
   * Goal 40. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1059
   * Goal 41. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1076
   * Goal 42. org.apache.commons.math.util.MathUtils.round(FI)F
   * Goal 43. org.apache.commons.math.util.MathUtils.round(FI)F
   * Goal 44. Weak Mutation 828: org.apache.commons.math.util.MathUtils.indicator(F)F:653 - ReplaceComparisonOperator == -> !=
   * Goal 45. Weak Mutation 837: org.apache.commons.math.util.MathUtils.indicator(F)F:656 - ReplaceComparisonOperator < -> !=
   * Goal 46. Weak Mutation 1038: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:838 - ReplaceComparisonOperator != -> ==
   * Goal 47. Weak Mutation 1040: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:838 - ReplaceComparisonOperator == -> !=
   * Goal 48. Weak Mutation 1305: org.apache.commons.math.util.MathUtils.round(FII)F:992 - ReplaceArithmeticOperator * -> %
   * Goal 49. Weak Mutation 1311: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator * -> %
   * Goal 50. Weak Mutation 1312: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator * -> -
   * Goal 51. Weak Mutation 1313: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator * -> /
   * Goal 52. Weak Mutation 1319: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator / -> +
   * Goal 53. Weak Mutation 1320: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator / -> %
   * Goal 54. Weak Mutation 1321: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator / -> -
   * Goal 55. Weak Mutation 1322: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator / -> *
   * Goal 56. org.apache.commons.math.util.MathUtils.round(FI)F:positive
   */

  @Test
  public void test154()  throws Throwable  {
      float float0 = MathUtils.round(798.59F, 3336);
  }

  //Test case number: 155
  /*
   * 14 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.sinh(D)D: root-Branch
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.sinh(D)D: root-Branch in context: org.apache.commons.math.util.MathUtils:sinh(D)D
   * Goal 3. org.apache.commons.math.util.MathUtils.sinh(D)D: Line 1181
   * Goal 4. org.apache.commons.math.util.MathUtils.sinh(D)D
   * Goal 5. org.apache.commons.math.util.MathUtils.sinh(D)D
   * Goal 6. Weak Mutation 1528: org.apache.commons.math.util.MathUtils.sinh(D)D:1181 - ReplaceArithmeticOperator - -> +
   * Goal 7. Weak Mutation 1529: org.apache.commons.math.util.MathUtils.sinh(D)D:1181 - ReplaceArithmeticOperator - -> %
   * Goal 8. Weak Mutation 1530: org.apache.commons.math.util.MathUtils.sinh(D)D:1181 - ReplaceArithmeticOperator - -> *
   * Goal 9. Weak Mutation 1531: org.apache.commons.math.util.MathUtils.sinh(D)D:1181 - ReplaceArithmeticOperator - -> /
   * Goal 10. Weak Mutation 1536: org.apache.commons.math.util.MathUtils.sinh(D)D:1181 - ReplaceArithmeticOperator / -> +
   * Goal 11. Weak Mutation 1537: org.apache.commons.math.util.MathUtils.sinh(D)D:1181 - ReplaceArithmeticOperator / -> %
   * Goal 12. Weak Mutation 1538: org.apache.commons.math.util.MathUtils.sinh(D)D:1181 - ReplaceArithmeticOperator / -> -
   * Goal 13. Weak Mutation 1539: org.apache.commons.math.util.MathUtils.sinh(D)D:1181 - ReplaceArithmeticOperator / -> *
   * Goal 14. org.apache.commons.math.util.MathUtils.sinh(D)D:positive
   */

  @Test
  public void test155()  throws Throwable  {
      double double0 = MathUtils.sinh(1L);
  }

  //Test case number: 156
  /*
   * 21 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J: root-Branch
   * Goal 2. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: I5 Branch 3 IFLE L114 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: I19 Branch 4 IFGE L120 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: I25 Branch 5 IFGE L121 - true
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J: root-Branch in context: org.apache.commons.math.util.MathUtils:addAndCheck(JJ)J
   * Goal 6. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J: Line 98
   * Goal 7. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: Line 114
   * Goal 8. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: Line 120
   * Goal 9. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: Line 121
   * Goal 10. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: Line 130
   * Goal 11. org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J: Line 144
   * Goal 12. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J
   * Goal 13. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J
   * Goal 14. Weak Mutation 37: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:114 - ReplaceComparisonOperator <= -> ==
   * Goal 15. Weak Mutation 44: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:120 - ReplaceComparisonOperator >= -> -1
   * Goal 16. Weak Mutation 51: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:121 - ReplaceComparisonOperator >= -> ==
   * Goal 17. Weak Mutation 76: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:130 - ReplaceArithmeticOperator + -> %
   * Goal 18. Weak Mutation 77: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:130 - ReplaceArithmeticOperator + -> -
   * Goal 19. Weak Mutation 78: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:130 - ReplaceArithmeticOperator + -> *
   * Goal 20. Weak Mutation 79: org.apache.commons.math.util.MathUtils.addAndCheck(JJLjava/lang/String;)J:130 - ReplaceArithmeticOperator + -> /
   * Goal 21. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J:positive
   */

  @Test
  public void test156()  throws Throwable  {
      long long0 = MathUtils.addAndCheck((-1012L), 4808L);
  }

  //Test case number: 157
  /*
   * 55 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.round(FII)F: root-Branch
   * Goal 2. org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 80 IFEQ L653 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 81 IFLT L656 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I4 Branch 98 IFNE L838 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I7 Branch 99 IFEQ L838 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I17 Branch 100 IFNE L840 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: I23 Branch 101 IFGE L841 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 109 TABLESWITCH L1010 Case 0 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 110 TABLESWITCH L1010 Case 1 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 111 TABLESWITCH L1010 Case 2 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 112 TABLESWITCH L1010 Case 3 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 113 TABLESWITCH L1010 Case 4 - false
   * Goal 13. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 114 TABLESWITCH L1010 Case 5 - false
   * Goal 14. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 115 TABLESWITCH L1010 Case 6 - false
   * Goal 15. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 116 TABLESWITCH L1010 Case 7 - false
   * Goal 16. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 117 TABLESWITCH L1010 Default-Case - false
   * Goal 17. Branch org.apache.commons.math.util.MathUtils.round(FII)F: root-Branch in context: org.apache.commons.math.util.MathUtils:round(FII)F
   * Goal 18. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 112 TABLESWITCH L1010 Case 3 - false in context: 
   * Goal 19. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 116 TABLESWITCH L1010 Case 7 - false in context: 
   * Goal 20. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 110 TABLESWITCH L1010 Case 1 - true in context: 
   * Goal 21. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 114 TABLESWITCH L1010 Case 5 - false in context: 
   * Goal 22. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 113 TABLESWITCH L1010 Case 4 - false in context: 
   * Goal 23. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 115 TABLESWITCH L1010 Case 6 - false in context: 
   * Goal 24. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 109 TABLESWITCH L1010 Case 0 - false in context: 
   * Goal 25. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 111 TABLESWITCH L1010 Case 2 - false in context: 
   * Goal 26. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 117 TABLESWITCH L1010 Default-Case - false in context: 
   * Goal 27. org.apache.commons.math.util.MathUtils.indicator(F)F: Line 653
   * Goal 28. org.apache.commons.math.util.MathUtils.indicator(F)F: Line 656
   * Goal 29. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 838
   * Goal 30. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 840
   * Goal 31. org.apache.commons.math.util.MathUtils.nextAfter(DD)D: Line 841
   * Goal 32. org.apache.commons.math.util.MathUtils.round(FII)F: Line 991
   * Goal 33. org.apache.commons.math.util.MathUtils.round(FII)F: Line 992
   * Goal 34. org.apache.commons.math.util.MathUtils.round(FII)F: Line 993
   * Goal 35. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1010
   * Goal 36. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1019
   * Goal 37. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1020
   * Goal 38. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1076
   * Goal 39. org.apache.commons.math.util.MathUtils.round(FII)F
   * Goal 40. org.apache.commons.math.util.MathUtils.round(FII)F
   * Goal 41. Weak Mutation 828: org.apache.commons.math.util.MathUtils.indicator(F)F:653 - ReplaceComparisonOperator == -> !=
   * Goal 42. Weak Mutation 838: org.apache.commons.math.util.MathUtils.indicator(F)F:656 - ReplaceComparisonOperator < -> <=
   * Goal 43. Weak Mutation 1038: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:838 - ReplaceComparisonOperator != -> ==
   * Goal 44. Weak Mutation 1040: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:838 - ReplaceComparisonOperator == -> !=
   * Goal 45. Weak Mutation 1045: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:840 - ReplaceComparisonOperator != -> -1
   * Goal 46. Weak Mutation 1051: org.apache.commons.math.util.MathUtils.nextAfter(DD)D:841 - ReplaceComparisonOperator >= -> -1
   * Goal 47. Weak Mutation 1304: org.apache.commons.math.util.MathUtils.round(FII)F:992 - ReplaceArithmeticOperator * -> +
   * Goal 48. Weak Mutation 1305: org.apache.commons.math.util.MathUtils.round(FII)F:992 - ReplaceArithmeticOperator * -> %
   * Goal 49. Weak Mutation 1306: org.apache.commons.math.util.MathUtils.round(FII)F:992 - ReplaceArithmeticOperator * -> -
   * Goal 50. Weak Mutation 1310: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator * -> +
   * Goal 51. Weak Mutation 1312: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator * -> -
   * Goal 52. Weak Mutation 1319: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator / -> +
   * Goal 53. Weak Mutation 1320: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator / -> %
   * Goal 54. Weak Mutation 1321: org.apache.commons.math.util.MathUtils.round(FII)F:993 - ReplaceArithmeticOperator / -> -
   * Goal 55. org.apache.commons.math.util.MathUtils.round(FII)F:negative
   */

  @Test
  public void test157()  throws Throwable  {
      float float0 = MathUtils.round((float) 0, 0, 1);
  }

  //Test case number: 158
  /*
   * 6 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.hash([D)I: root-Branch
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.hash([D)I: root-Branch in context: org.apache.commons.math.util.MathUtils:hash([D)I
   * Goal 3. org.apache.commons.math.util.MathUtils.hash([D)I: Line 616
   * Goal 4. org.apache.commons.math.util.MathUtils.hash([D)I
   * Goal 5. org.apache.commons.math.util.MathUtils.hash([D)I
   * Goal 6. org.apache.commons.math.util.MathUtils.hash([D)I:positive
   */

  @Test
  public void test158()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      int int0 = MathUtils.hash(doubleArray0);
  }

  //Test case number: 159
  /*
   * 6 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.hash(D)I: root-Branch
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.hash(D)I: root-Branch in context: org.apache.commons.math.util.MathUtils:hash(D)I
   * Goal 3. org.apache.commons.math.util.MathUtils.hash(D)I: Line 605
   * Goal 4. org.apache.commons.math.util.MathUtils.hash(D)I
   * Goal 5. org.apache.commons.math.util.MathUtils.hash(D)I
   * Goal 6. org.apache.commons.math.util.MathUtils.hash(D)I:zero
   */

  @Test
  public void test159()  throws Throwable  {
      int int0 = MathUtils.hash(0.0);
  }
}
