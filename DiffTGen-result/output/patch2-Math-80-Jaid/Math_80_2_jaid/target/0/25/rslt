* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.math.linear.EigenDecompositionImpl
* Starting client
* Connecting to master process on port 17321
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/patch2-Math-80-Jaid/Math_80_2_jaid/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math.linear.EigenDecompositionImpl
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 852
  - Branch 428
  - Exception 0
  - MutationFactory 212
  - Output 28
  - Method 17
  - MethodNoException 17
  - CBranchFitnessFactory 428
* Using seed 1585484773257
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%][Progress:=>                            5%] [Cov:>                                  0%][Progress:=>                            5%] [Cov:====>                              12%][Progress:=>                            5%] [Cov:====>                              13%][Progress:=>                            5%] [Cov:====>                              14%][Progress:=>                            6%] [Cov:>                                  0%][Progress:=>                            6%] [Cov:>                                  1%][Progress:=>                            6%] [Cov:====>                              13%][Progress:==>                           8%] [Cov:====>                              13%][Progress:==>                           8%] [Cov:====>                              14%][Progress:===>                          10%] [Cov:>                                  0%][Progress:===>                          10%] [Cov:>                                  1%][Progress:===>                          10%] [Cov:====>                              13%][Progress:===>                          10%] [Cov:====>                              14%][Progress:===>                          10%] [Cov:=====>                             16%][Progress:===>                          10%] [Cov:=====>                             17%][Progress:===>                          11%] [Cov:>                                  1%][Progress:===>                          11%] [Cov:>                                  2%][Progress:===>                          11%] [Cov:=====>                             15%][Progress:===>                          11%] [Cov:=====>                             17%][Progress:===>                          11%] [Cov:======>                            18%][Progress:===>                          13%] [Cov:======>                            19%][Progress:====>                         16%] [Cov:=>                                 3%][Progress:====>                         16%] [Cov:==>                                6%][Progress:====>                         16%] [Cov:======>                            19%][Progress:====>                         16%] [Cov:=======>                           22%][Progress:====>                         16%] [Cov:========>                          23%][Progress:====>                         16%] [Cov:========>                          25%][Progress:=====>                        18%] [Cov:>                                  0%][Progress:=====>                        18%] [Cov:>                                  1%][Progress:=====>                        18%] [Cov:====>                              13%][Progress:======>                       20%] [Cov:>                                  0%][Progress:======>                       20%] [Cov:>                                  1%][Progress:======>                       20%] [Cov:====>                              13%][Progress:======>                       20%] [Cov:====>                              14%][Progress:======>                       21%] [Cov:>                                  0%][Progress:======>                       21%] [Cov:====>                              12%][Progress:======>                       21%] [Cov:====>                              13%][Progress:======>                       21%] [Cov:====>                              14%][Progress:======>                       23%] [Cov:====>                              12%][Progress:======>                       23%] [Cov:====>                              13%][Progress:=======>                      26%] [Cov:>                                  0%][Progress:=======>                      26%] [Cov:>                                  1%][Progress:=======>                      26%] [Cov:====>                              13%][Progress:=======>                      26%] [Cov:====>                              14%][Progress:========>                     28%] [Cov:>                                  0%][Progress:========>                     28%] [Cov:>                                  1%][Progress:========>                     28%] [Cov:====>                              13%][Progress:========>                     28%] [Cov:====>                              14%][Progress:========>                     28%] [Cov:=====>                             16%][Progress:=========>                    30%] [Cov:>                                  0%][Progress:=========>                    30%] [Cov:>                                  1%][Progress:=========>                    30%] [Cov:====>                              13%][Progress:=========>                    30%] [Cov:====>                              14%][Progress:=========>                    31%] [Cov:>                                  1%][Progress:=========>                    31%] [Cov:====>                              13%][Progress:=========>                    31%] [Cov:====>                              14%][Progress:=========>                    31%] [Cov:=====>                             15%][Progress:=========>                    33%] [Cov:>                                  0%][Progress:=========>                    33%] [Cov:>                                  1%][Progress:=========>                    33%] [Cov:====>                              13%][Progress:=========>                    33%] [Cov:====>                              14%][Progress:==========>                   35%] [Cov:>                                  0%][Progress:==========>                   35%] [Cov:>                                  1%][Progress:==========>                   35%] [Cov:====>                              13%][Progress:==========>                   36%] [Cov:====>                              13%][Progress:==========>                   36%] [Cov:====>                              14%][Progress:==========>                   36%] [Cov:========>                          25%][Progress:===========>                  38%] [Cov:=====>                             15%][Progress:===========>                  38%] [Cov:=====>                             16%][Progress:============>                 40%] [Cov:=====>                             15%][Progress:============>                 40%] [Cov:=====>                             16%][Progress:============>                 40%] [Cov:=====>                             17%][Progress:============>                 41%] [Cov:====>                              13%][Progress:============>                 41%] [Cov:====>                              14%][Progress:============>                 43%] [Cov:===>                               11%][Progress:============>                 43%] [Cov:====>                              13%][Progress:============>                 43%] [Cov:========>                          25%][Progress:=============>                45%] [Cov:========>                          25%][Progress:=============>                46%] [Cov:===========>                       32%][Progress:==============>               48%] [Cov:==========>                        29%][Progress:==============>               48%] [Cov:==========>                        30%][Progress:==============>               48%] [Cov:===========>                       32%][Progress:===============>              50%] [Cov:==========>                        29%][Progress:===============>              50%] [Cov:==========>                        30%][Progress:===============>              50%] [Cov:===========>                       32%][Progress:===============>              53%] [Cov:===========>                       32%][Progress:================>             55%] [Cov:==========>                        29%][Progress:================>             55%] [Cov:===========>                       32%][Progress:================>             56%] [Cov:==========>                        29%][Progress:================>             56%] [Cov:===========>                       32%][Progress:=================>            58%] [Cov:==========>                        30%][Progress:=================>            58%] [Cov:===========>                       32%][Progress:==================>           60%] [Cov:==========>                        29%][Progress:==================>           60%] [Cov:==========>                        30%][Progress:==================>           63%] [Cov:===========>                       32%][Progress:===================>          65%] [Cov:==========>                        30%][Progress:===================>          65%] [Cov:===========>                       32%][Progress:===================>          66%] [Cov:===========>                       32%][Progress:====================>         68%] [Cov:===========>                       32%][Progress:=====================>        71%] [Cov:===========>                       32%][Progress:=====================>        73%] [Cov:===========>                       32%][Progress:=====================>        73%] [Cov:===========>                       33%][Progress:======================>       75%] [Cov:===========>                       34%][Progress:======================>       75%] [Cov:============>                      36%][Progress:======================>       75%] [Cov:=============>                     39%][Progress:======================>       75%] [Cov:==============>                    41%][Progress:======================>       76%] [Cov:===========>                       32%][Progress:=======================>      78%] [Cov:===========>                       32%][Progress:=======================>      78%] [Cov:===========>                       33%][Progress:========================>     80%] [Cov:===============>                   45%][Progress:========================>     83%] [Cov:===============>                   43%][Progress:========================>     83%] [Cov:===============>                   44%][Progress:=========================>    85%] [Cov:===============>                   45%][Progress:=========================>    86%] [Cov:===============>                   43%][Progress:=========================>    86%] [Cov:===============>                   45%][Progress:=========================>    86%] [Cov:================>                  46%][Progress:==========================>   88%] [Cov:===============>                   43%][Progress:==========================>   88%] [Cov:===============>                   45%][Progress:===========================>  90%] [Cov:===============>                   43%][Progress:===========================>  90%] [Cov:===============>                   45%][Progress:===========================>  91%] [Cov:================>                  48%][Progress:===========================>  93%] [Cov:================>                  46%][Progress:===========================>  93%] [Cov:================>                  48%][Progress:===========================>  93%] [Cov:================>                  48%][Progress:============================> 95%] [Cov:================>                  48%][Progress:============================> 96%] [Cov:================>                  46%][Progress:============================> 96%] [Cov:================>                  48%][Progress:============================> 96%] [Cov:=================>                 49%][Progress:============================> 96%] [Cov:=================>                 50%][Progress:============================> 96%] [Cov:=================>                 51%][Progress:=============================>98%] [Cov:================>                  48%][Progress:=============================>98%] [Cov:==================>                52%][Progress:==============================100%] [Cov:=================>                 51%][Progress:==============================100%] [Cov:==================>                52%][Progress:==============================100%] [Cov:==================>                52%][Progress:==============================100%] [Cov:==================>                53%]
* Search finished after 63s and 10 generations, 7919 statements, best individual has fitness: 1357.420177377128
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 72%
* Total number of goals: 852
* Number of covered goals: 610
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 59%
* Total number of goals: 428
* Number of covered goals: 252
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 10
* Number of covered goals: 10
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 50%
* Total number of goals: 212
* Number of covered goals: 105
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 11%
* Total number of goals: 28
* Number of covered goals: 3
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 47%
* Total number of goals: 17
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 35%
* Total number of goals: 17
* Number of covered goals: 6
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 59%
* Total number of goals: 428
* Number of covered goals: 252
* Generated 23 tests with total length 117
* Resulting test suite's coverage: 54% (average coverage for all fitness functions)
* Compiling and checking tests
* Writing JUnit test case 'EigenDecompositionImpl_ESTest' to evosuite-tests
* Done!

* Computation finished
