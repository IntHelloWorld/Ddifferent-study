/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 29 12:23:21 GMT 2020
 */

package org.apache.commons.math.linear;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.linear.Array2DRowRealMatrix;
import org.apache.commons.math.linear.ArrayRealVector;
import org.apache.commons.math.linear.BlockRealMatrix;
import org.apache.commons.math.linear.DecompositionSolver;
import org.apache.commons.math.linear.EigenDecompositionImpl;
import org.apache.commons.math.linear.OpenMapRealMatrix;
import org.apache.commons.math.linear.OpenMapRealVector;
import org.apache.commons.math.linear.RealMatrix;
import org.apache.commons.math.linear.RealVector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EigenDecompositionImpl_ESTest extends EigenDecompositionImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, 322.57);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 883.14755;
      doubleArray0[1] = 0.0;
      doubleArray0[3] = 2477.08027139;
      doubleArray0[4] = 3228.17;
      doubleArray0[5] = 883.14755;
      doubleArray0[6] = 2477.08027139;
      doubleArray0[7] = (-17.68672165418338);
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = 0.0;
      doubleArray1[1] = 2477.08027139;
      doubleArray1[2] = 883.14755;
      doubleArray1[3] = 3228.17;
      doubleArray1[4] = 883.14755;
      doubleArray1[5] = 883.14755;
      doubleArray1[6] = 0.0;
      doubleArray1[7] = 3228.17;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      try { 
        eigenDecompositionImpl0.getEigenvector(2147182827);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2147182827
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[1] = 0.0;
      doubleArray0[3] = 2496.02251861585;
      doubleArray0[4] = 0.0;
      doubleArray0[5] = 1.232595164407831E-28;
      doubleArray0[6] = 4537.645027032356;
      doubleArray0[7] = (-17.68672165418338);
      doubleArray0[8] = 0.0;
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = 4537.645027032356;
      doubleArray1[1] = 1.232595164407831E-28;
      doubleArray1[3] = 4537.645027032356;
      doubleArray1[4] = 2496.02251861585;
      doubleArray1[5] = 0.0;
      doubleArray1[6] = 0.0;
      doubleArray1[7] = 4537.645027032356;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getD();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getV();
      RealVector realVector0 = eigenDecompositionImpl0.getEigenvector(0);
      double double0 = eigenDecompositionImpl0.getDeterminant();
      try { 
        eigenDecompositionImpl0.getRealEigenvalue(1157);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1157
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 883.14755;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 2507.36114;
      doubleArray0[3] = 2477.08027139;
      doubleArray0[4] = 3228.17;
      doubleArray0[5] = 0.0;
      doubleArray0[6] = 4537.645027032356;
      doubleArray0[7] = 2.2250738585072014E-308;
      doubleArray0[8] = 2122.9294045704282;
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = 4537.645027032356;
      doubleArray1[1] = 883.14755;
      doubleArray1[2] = 4537.645027032356;
      doubleArray1[3] = 4537.645027032356;
      doubleArray1[4] = 2477.08027139;
      doubleArray1[5] = 2507.36114;
      doubleArray1[6] = 2477.08027139;
      doubleArray1[7] = 4537.645027032356;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getVT();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getVT();
      RealMatrix realMatrix2 = eigenDecompositionImpl0.getD();
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      double[] doubleArray2 = eigenDecompositionImpl0.getImagEigenvalues();
      DecompositionSolver decompositionSolver1 = eigenDecompositionImpl0.getSolver();
      try { 
        eigenDecompositionImpl0.getRealEigenvalue(1157);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1157
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 2507.36114;
      doubleArray0[3] = 2477.08027139;
      doubleArray0[4] = 3228.17;
      doubleArray0[5] = 1.232595164407831E-28;
      doubleArray0[6] = 4537.645027032356;
      doubleArray0[7] = 2.2250738585072014E-308;
      doubleArray0[8] = 2122.9294045704282;
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = 4537.645027032356;
      doubleArray1[1] = 1.232595164407831E-28;
      doubleArray1[2] = 4537.645027032356;
      doubleArray1[3] = 4537.645027032356;
      doubleArray1[4] = 2477.08027139;
      doubleArray1[5] = 2507.36114;
      doubleArray1[6] = 2477.08027139;
      doubleArray1[7] = 4537.645027032356;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getVT();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getD();
      double[] doubleArray2 = eigenDecompositionImpl0.getImagEigenvalues();
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      try { 
        eigenDecompositionImpl0.getRealEigenvalue(1157);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1157
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(28, 28);
      OpenMapRealMatrix openMapRealMatrix1 = new OpenMapRealMatrix(openMapRealMatrix0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(openMapRealMatrix1, 3983.0);
      // Undeclared exception!
      eigenDecompositionImpl0.getVT();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(2, 2);
      OpenMapRealMatrix openMapRealMatrix1 = new OpenMapRealMatrix(openMapRealMatrix0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(openMapRealMatrix1, Double.NEGATIVE_INFINITY);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getVT();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getD();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = Double.NaN;
      doubleArray0[1] = 3921.153831828341;
      doubleArray0[2] = 624.9761;
      doubleArray0[3] = (-1823.218809);
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, Double.NaN);
      RealMatrix realMatrix0 = openMapRealVector0.outerProduct(doubleArray0);
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 1978.3334963502468);
      } catch(RuntimeException e) {
         //
         // 
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 883.14755;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 2507.36114;
      doubleArray0[3] = 2507.36114;
      doubleArray0[4] = 3228.17;
      doubleArray0[5] = 1.232595164407831E-28;
      doubleArray0[6] = 4537.645027032356;
      doubleArray0[7] = 1.232595164407831E-28;
      doubleArray0[8] = 2153.744453542045;
      double[] doubleArray1 = new double[8];
      doubleArray0[7] = 4537.645027032356;
      doubleArray1[1] = 1.232595164407831E-28;
      doubleArray1[2] = 4537.645027032356;
      doubleArray1[3] = 4537.645027032356;
      doubleArray1[4] = 883.14755;
      doubleArray1[6] = 0.0;
      doubleArray1[7] = 4537.645027032356;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getVT();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getD();
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      Double double0 = new Double(2507.36114);
      double double1 = eigenDecompositionImpl0.getDeterminant();
      RealMatrix realMatrix2 = eigenDecompositionImpl0.getVT();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 906.8802221287663;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 906.8802221287663;
      doubleArray0[3] = 2477.5072012135947;
      doubleArray0[4] = 3228.17;
      doubleArray0[5] = 1.232595164407831E-28;
      doubleArray0[6] = 2477.5072012135947;
      doubleArray0[7] = (-17.68672165418338);
      doubleArray0[0] = 906.8802221287663;
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = 0.0;
      doubleArray1[1] = 1.232595164407831E-28;
      doubleArray1[2] = 906.8802221287663;
      doubleArray1[3] = 3228.17;
      doubleArray1[4] = 1.232595164407831E-28;
      doubleArray1[5] = 906.8802221287663;
      doubleArray1[6] = 0.0;
      doubleArray1[0] = 3228.17;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getVT();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getD();
      try { 
        eigenDecompositionImpl0.getEigenvector((-1308));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1308
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 883.14755;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 883.14755;
      doubleArray0[3] = 2495.183067588658;
      doubleArray0[4] = 3228.17;
      doubleArray0[5] = 1539.10576;
      doubleArray0[6] = 4537.645027032356;
      doubleArray0[7] = (-17.68672165418338);
      doubleArray0[8] = 883.14755;
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = 4537.645027032356;
      doubleArray1[1] = 1539.10576;
      doubleArray1[2] = 4537.645027032356;
      doubleArray1[3] = 4537.645027032356;
      doubleArray1[4] = 2495.183067588658;
      doubleArray1[5] = 883.14755;
      doubleArray1[6] = 0.0;
      doubleArray1[7] = 4537.645027032356;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      try { 
        eigenDecompositionImpl0.getRealEigenvalue(1157);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1157
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 883.14755;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 2507.36114;
      doubleArray0[3] = 2477.08027139;
      doubleArray0[4] = 3228.17;
      doubleArray0[5] = 1.232595164407831E-28;
      doubleArray0[6] = 4537.645027032356;
      doubleArray0[7] = 2.2250738585072014E-308;
      doubleArray0[8] = 2153.744453542045;
      double[] doubleArray1 = new double[8];
      doubleArray0[7] = 4537.645027032356;
      doubleArray1[1] = 1.232595164407831E-28;
      doubleArray1[2] = 4537.645027032356;
      doubleArray1[3] = 4537.645027032356;
      doubleArray1[4] = 2477.08027139;
      doubleArray1[5] = 2507.36114;
      doubleArray1[6] = 0.0;
      doubleArray1[7] = 4537.645027032356;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getVT();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getD();
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      Double double0 = new Double(2507.36114);
      double double1 = eigenDecompositionImpl0.getDeterminant();
      RealMatrix realMatrix2 = eigenDecompositionImpl0.getVT();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 883.14755;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 2507.36114;
      doubleArray0[3] = 2477.08027139;
      doubleArray0[4] = 3228.17;
      doubleArray0[5] = 1.232595164407831E-28;
      doubleArray0[6] = 4537.645027032356;
      doubleArray0[7] = 2.2250738585072014E-308;
      doubleArray0[8] = 2153.744453542045;
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = 4537.645027032356;
      doubleArray1[1] = 1.232595164407831E-28;
      doubleArray1[2] = 4537.645027032356;
      doubleArray1[3] = 4537.645027032356;
      doubleArray1[4] = 2477.08027139;
      doubleArray1[5] = 2507.36114;
      doubleArray1[6] = 0.0;
      doubleArray1[7] = 4537.645027032356;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getV();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getV();
      try { 
        eigenDecompositionImpl0.getRealEigenvalue(1157);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1157
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int int0 = 20;
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(20, 20);
      RealMatrix realMatrix0 = array2DRowRealMatrix0.transpose();
      RealMatrix realMatrix1 = array2DRowRealMatrix0.subtract(realMatrix0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 20);
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      RealMatrix realMatrix2 = eigenDecompositionImpl0.getV();
      DecompositionSolver decompositionSolver1 = eigenDecompositionImpl0.getSolver();
      RealMatrix realMatrix3 = eigenDecompositionImpl0.getV();
      RealMatrix realMatrix4 = eigenDecompositionImpl0.getVT();
      DecompositionSolver decompositionSolver2 = eigenDecompositionImpl0.getSolver();
      try { 
        eigenDecompositionImpl0.getRealEigenvalue((-12));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -12
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 883.14755;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 2507.36114;
      doubleArray0[3] = 2477.08027139;
      doubleArray0[4] = 3228.17;
      doubleArray0[5] = 1.232595164407831E-28;
      doubleArray0[7] = 4537.645027032356;
      doubleArray0[7] = 2.2250738585072014E-308;
      doubleArray0[8] = 2153.744453542045;
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = 4537.645027032356;
      doubleArray1[1] = 1.232595164407831E-28;
      doubleArray1[2] = 4537.645027032356;
      doubleArray1[3] = 4537.645027032356;
      doubleArray1[4] = 2477.08027139;
      doubleArray1[5] = 2507.36114;
      doubleArray1[6] = 0.0;
      doubleArray1[7] = 4537.645027032356;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      try { 
        eigenDecompositionImpl0.getEigenvector((-2288));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2288
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 883.14755;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 883.14755;
      doubleArray0[3] = 2477.08027139;
      doubleArray0[4] = 3228.17;
      doubleArray0[5] = 1.232595164407831E-28;
      doubleArray0[6] = 4537.645027032356;
      doubleArray0[7] = 4537.645027032356;
      doubleArray0[8] = 2153.744453542045;
      double[] doubleArray1 = new double[8];
      doubleArray0[7] = 4537.645027032356;
      doubleArray1[1] = 1.232595164407831E-28;
      doubleArray1[2] = 4537.645027032356;
      doubleArray1[3] = 4537.645027032356;
      doubleArray1[4] = 2477.08027139;
      doubleArray1[5] = 0.0;
      doubleArray1[6] = 0.0;
      doubleArray1[7] = 4537.645027032356;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getVT();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getD();
      Double double0 = new Double(0.0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 883.14755;
      doubleArray0[2] = 2507.36114;
      doubleArray0[3] = 2477.08027139;
      doubleArray0[4] = 3228.17;
      doubleArray0[5] = 1.232595164407831E-28;
      doubleArray0[6] = 4537.645027032356;
      doubleArray0[7] = 2.2250738585072014E-308;
      doubleArray0[8] = 2153.744453542045;
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = 4537.645027032356;
      doubleArray1[1] = 1.232595164407831E-28;
      doubleArray1[2] = 4537.645027032356;
      doubleArray1[3] = 4537.645027032356;
      doubleArray1[4] = 2477.08027139;
      doubleArray1[5] = 2507.36114;
      doubleArray1[6] = 0.0;
      doubleArray1[7] = 4537.645027032356;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 2477.08027139);
      try { 
        eigenDecompositionImpl0.getRealEigenvalue(1157);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1157
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 883.14755;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 883.14755;
      doubleArray0[3] = 2477.08027139;
      doubleArray0[4] = 3228.17;
      doubleArray0[5] = 1.232595164407831E-28;
      doubleArray0[6] = 4537.645027032356;
      doubleArray0[7] = (-17.68672165418338);
      doubleArray0[8] = 883.14755;
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = 4537.645027032356;
      doubleArray1[1] = 1.232595164407831E-28;
      doubleArray1[2] = 4537.645027032356;
      doubleArray1[3] = 4537.645027032356;
      doubleArray1[4] = 2477.08027139;
      doubleArray1[5] = 883.14755;
      doubleArray1[6] = 0.0;
      doubleArray1[7] = 4537.645027032356;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      try { 
        eigenDecompositionImpl0.getRealEigenvalue(1157);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1157
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 883.14755;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 2507.36114;
      doubleArray0[3] = 2477.08027139;
      doubleArray0[4] = 3228.17;
      doubleArray0[5] = 3228.17;
      doubleArray0[6] = 4537.645027032356;
      doubleArray0[7] = 2.2250738585072014E-308;
      doubleArray0[8] = 2153.744453542045;
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = 4537.645027032356;
      doubleArray1[1] = 2507.36114;
      doubleArray1[2] = 4537.645027032356;
      doubleArray1[3] = 4537.645027032356;
      doubleArray1[4] = 2477.08027139;
      doubleArray1[5] = 2507.36114;
      doubleArray1[6] = 0.0;
      doubleArray1[7] = 4537.645027032356;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      int int0 = 2147347385;
      try { 
        eigenDecompositionImpl0.getImagEigenvalue(2147347385);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2147347385
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 883.14755;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 2507.36114;
      doubleArray0[3] = 2477.08027139;
      doubleArray0[4] = 3228.17;
      doubleArray0[5] = 1.232595164407831E-28;
      doubleArray0[6] = 4537.645027032356;
      doubleArray0[7] = 2.2250738585072014E-308;
      doubleArray0[8] = 2153.744453542045;
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = 4537.645027032356;
      doubleArray1[1] = 1.232595164407831E-28;
      doubleArray1[2] = 4537.645027032356;
      doubleArray1[3] = 4537.645027032356;
      doubleArray1[4] = 2477.08027139;
      doubleArray1[5] = 2507.36114;
      doubleArray1[6] = 0.0;
      doubleArray1[7] = 4537.645027032356;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getV();
      try { 
        eigenDecompositionImpl0.getRealEigenvalue(1157);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1157
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 883.14755;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 2507.36114;
      doubleArray0[3] = 2477.08027139;
      doubleArray0[4] = 3228.17;
      doubleArray0[5] = 3228.17;
      doubleArray0[6] = 4537.645027032356;
      doubleArray0[7] = 2.2250738585072014E-308;
      doubleArray0[8] = 2153.744453542045;
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = 4537.645027032356;
      doubleArray1[1] = 3228.17;
      doubleArray1[2] = 4537.645027032356;
      doubleArray1[3] = 4537.645027032356;
      doubleArray1[4] = 2477.08027139;
      doubleArray1[5] = 2507.36114;
      doubleArray1[6] = 0.0;
      doubleArray1[7] = 4537.645027032356;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      try { 
        eigenDecompositionImpl0.getRealEigenvalue(1157);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1157
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 883.14755;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 2507.36114;
      doubleArray0[3] = 2477.08027139;
      doubleArray0[4] = 3228.17;
      doubleArray0[5] = 1.232595164407831E-28;
      doubleArray0[6] = 4537.645027032356;
      doubleArray0[7] = 2.2250738585072014E-308;
      doubleArray0[8] = 2153.744453542045;
      double[] doubleArray1 = new double[8];
      doubleArray0[7] = 4537.645027032356;
      doubleArray1[1] = 1.232595164407831E-28;
      doubleArray1[2] = 4537.645027032356;
      doubleArray1[3] = 4537.645027032356;
      doubleArray1[4] = 2477.08027139;
      doubleArray1[5] = 2507.36114;
      doubleArray1[6] = 0.0;
      doubleArray1[7] = 4537.645027032356;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getVT();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getD();
      double double0 = new Double(2507.36114);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(30, 30);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, 30);
      // Undeclared exception!
      eigenDecompositionImpl0.getSolver();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(2, 2);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(openMapRealMatrix0, (-376));
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getVT();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 883.14755;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 2507.36114;
      doubleArray0[3] = 2477.08027139;
      doubleArray0[4] = 3228.17;
      doubleArray0[5] = 1.232595164407831E-28;
      doubleArray0[6] = 4537.645027032356;
      doubleArray0[7] = 2.2250738585072014E-308;
      doubleArray0[8] = 2153.744453542045;
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = 4537.645027032356;
      doubleArray1[1] = 1.232595164407831E-28;
      doubleArray1[2] = 4537.645027032356;
      doubleArray1[3] = 4537.645027032356;
      doubleArray1[4] = 2477.08027139;
      doubleArray1[5] = 2507.36114;
      doubleArray1[6] = 0.0;
      doubleArray1[7] = 4537.645027032356;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      try { 
        eigenDecompositionImpl0.getRealEigenvalue(1157);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1157
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 54.0;
      doubleArray0[2] = 1114.867;
      doubleArray0[3] = 0.0;
      double[] doubleArray1 = new double[3];
      doubleArray1[0] = 0.0;
      doubleArray1[1] = 0.0;
      doubleArray1[2] = 1114.867;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getVT();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getVT();
      RealMatrix realMatrix2 = eigenDecompositionImpl0.getVT();
      RealMatrix realMatrix3 = eigenDecompositionImpl0.getD();
      RealMatrix realMatrix4 = eigenDecompositionImpl0.getV();
      DecompositionSolver decompositionSolver1 = eigenDecompositionImpl0.getSolver();
      try { 
        eigenDecompositionImpl0.getEigenvector(1451);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1451
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (-33.01326082754578);
      doubleArray0[1] = (-154.51318);
      doubleArray0[2] = -0.0;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = 1.232595164407831E-28;
      doubleArray0[5] = (-1306.1905751);
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, true);
      RealMatrix realMatrix0 = arrayRealVector0.outerProduct(doubleArray0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (-154.51318));
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix();
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, 896.52422);
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.linear.TriDiagonalTransformer", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      double[][] doubleArray0 = new double[1][5];
      double[] doubleArray1 = new double[6];
      doubleArray1[0] = (-419.1160624267257);
      doubleArray1[1] = Double.NEGATIVE_INFINITY;
      doubleArray1[2] = 2760.19327738746;
      doubleArray1[3] = Double.POSITIVE_INFINITY;
      doubleArray1[4] = 0.0;
      doubleArray1[5] = (-1065.459947);
      doubleArray0[0] = doubleArray1;
      BlockRealMatrix blockRealMatrix0 = new BlockRealMatrix(doubleArray0);
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(blockRealMatrix0, 1177.531);
      } catch(RuntimeException e) {
         //
         // no entry at indices (1, 0) in a 1x6 matrix
         //
         verifyException("org.apache.commons.math.linear.BlockRealMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (-4720.74154);
      doubleArray0[1] = 0.333;
      doubleArray0[2] = 1462.47;
      doubleArray0[3] = (-1275.817618);
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
      RealMatrix realMatrix0 = array2DRowRealMatrix0.scalarMultiply(4257.87);
      array2DRowRealMatrix0.setColumn(0, doubleArray0);
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 1462.47);
      } catch(RuntimeException e) {
         //
         // a 4x1 matrix was provided instead of a square matrix
         //
         verifyException("org.apache.commons.math.linear.TriDiagonalTransformer", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      int int0 = 367;
      OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(367, 367);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(openMapRealMatrix0, 367);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(4876, 4876);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(openMapRealMatrix0, (-335.4236));
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl((double[]) null, (double[]) null, 1697.2538);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (-946.53371);
      doubleArray0[1] = 1160.043;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = 2294.077355823;
      doubleArray0[5] = 1054.9457464571;
      doubleArray0[6] = Double.NEGATIVE_INFINITY;
      double[] doubleArray1 = new double[6];
      doubleArray1[0] = 0.0;
      doubleArray1[1] = (-946.53371);
      doubleArray1[2] = 1160.043;
      doubleArray1[3] = (-946.53371);
      doubleArray1[4] = 0.0;
      doubleArray1[5] = 1160.043;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 1.232595164407831E-28);
      RealVector realVector0 = eigenDecompositionImpl0.getEigenvector(0);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getD();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getD();
      RealMatrix realMatrix2 = eigenDecompositionImpl0.getD();
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      double[] doubleArray2 = eigenDecompositionImpl0.getImagEigenvalues();
      double[] doubleArray3 = eigenDecompositionImpl0.getRealEigenvalues();
      DecompositionSolver decompositionSolver1 = eigenDecompositionImpl0.getSolver();
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = (-3294.074796781812);
      doubleArray0[2] = 5949.18389295088;
      doubleArray0[3] = (-760.61584);
      doubleArray0[4] = (-3458.488977196);
      double[] doubleArray1 = new double[4];
      doubleArray1[0] = (-760.61584);
      doubleArray1[1] = 0.0;
      doubleArray1[2] = 0.0;
      doubleArray1[3] = 0.0;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getD();
      try { 
        eigenDecompositionImpl0.getRealEigenvalue(3229);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3229
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (-5090.0);
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-5090.0));
      RealMatrix realMatrix0 = openMapRealVector0.outerProduct(doubleArray0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (-1.0));
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getVT();
      RealMatrix realMatrix2 = openMapRealVector0.outerProduct(doubleArray0);
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      RealMatrix realMatrix3 = eigenDecompositionImpl0.getVT();
      try { 
        eigenDecompositionImpl0.getRealEigenvalue((-6));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -6
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl((RealMatrix) null, 2.2250738585072014E-308);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 2366.718632963379;
      doubleArray0[1] = (-1737.35075214359);
      doubleArray0[2] = 508.5;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = 0.0;
      doubleArray0[5] = 4229.5679639096;
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, 1902.0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl((RealMatrix) null, (-3611.484));
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (-532.893222954078);
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 0.0;
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, (-532.893222954078));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (-167.2);
      doubleArray0[1] = 0.0;
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, (-167.2));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = 2.2250738585072014E-308;
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, 1008.6850134797);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, 262.778746093);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 883.14755;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 883.14755;
      doubleArray0[3] = 2477.08027139;
      doubleArray0[4] = 3228.17;
      doubleArray0[5] = 1.232595164407831E-28;
      doubleArray0[6] = 2477.08027139;
      doubleArray0[7] = (-17.68672165418338);
      doubleArray0[8] = 883.14755;
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = 0.0;
      doubleArray1[1] = 1.232595164407831E-28;
      doubleArray1[2] = 883.14755;
      doubleArray1[3] = 3228.17;
      doubleArray1[4] = 1.232595164407831E-28;
      doubleArray1[5] = 883.14755;
      doubleArray1[6] = 0.0;
      doubleArray1[7] = 3228.17;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      try { 
        eigenDecompositionImpl0.getRealEigenvalue(1133);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1133
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[1] = 0.0;
      doubleArray0[3] = 2496.02251861585;
      doubleArray0[4] = 0.0;
      doubleArray0[5] = 1.232595164407831E-28;
      doubleArray0[6] = 4537.645027032356;
      doubleArray0[7] = (-17.68672165418338);
      doubleArray0[8] = 0.0;
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = 4537.645027032356;
      doubleArray1[1] = 1.232595164407831E-28;
      doubleArray1[3] = 4537.645027032356;
      doubleArray1[4] = 2496.02251861585;
      doubleArray0[6] = 0.0;
      doubleArray1[6] = 0.0;
      doubleArray1[7] = 4537.645027032356;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getD();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getV();
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(15);
      double double0 = eigenDecompositionImpl0.getDeterminant();
      try { 
        eigenDecompositionImpl0.getRealEigenvalue(1157);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1157
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Double[] doubleArray0 = new Double[3];
      Double double0 = new Double(2287.69889105895);
      doubleArray0[0] = double0;
      Double double1 = new Double(1.0);
      doubleArray0[1] = double1;
      Double double2 = new Double(78.5477960863);
      doubleArray0[2] = double2;
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
      OpenMapRealVector openMapRealVector1 = new OpenMapRealVector((RealVector) openMapRealVector0);
      RealMatrix realMatrix0 = openMapRealVector1.outerProduct((RealVector) openMapRealVector0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 4007.6);
      try { 
        eigenDecompositionImpl0.getEigenvector(2147482494);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2147482494
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 3886.08029444246;
      doubleArray0[1] = Double.NaN;
      doubleArray0[2] = (-955.33732074492);
      doubleArray0[3] = 3278.657321;
      doubleArray0[4] = 1.232595164407831E-28;
      doubleArray0[5] = (-3619.0377982459);
      doubleArray0[6] = 1735.70423;
      doubleArray0[7] = 1.1102230246251565E-16;
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, (-1051.645424449));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      int int0 = 11;
      int int1 = (-1050);
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(11, (-1050));
      int int2 = 9;
      OpenMapRealVector openMapRealVector1 = new OpenMapRealVector(openMapRealVector0);
      OpenMapRealMatrix openMapRealMatrix0 = openMapRealVector0.outerproduct(openMapRealVector1);
      int[] intArray0 = new int[9];
      intArray0[0] = (-1050);
      OpenMapRealVector openMapRealVector2 = openMapRealVector1.mapLog1pToSelf();
      intArray0[1] = 11;
      intArray0[2] = 9;
      intArray0[3] = 9;
      // Undeclared exception!
      try { 
        openMapRealMatrix0.preMultiply((double[]) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.linear.AbstractRealMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 883.14755;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 2507.36114;
      doubleArray0[3] = 2477.08027139;
      doubleArray0[4] = 3228.17;
      doubleArray0[5] = 1.232595164407831E-28;
      doubleArray0[6] = 4537.645027032356;
      doubleArray0[7] = 2.2250738585072014E-308;
      doubleArray0[8] = 2122.9294045704282;
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = 4537.645027032356;
      doubleArray1[1] = 1.232595164407831E-28;
      doubleArray1[2] = 4537.645027032356;
      doubleArray1[3] = 4537.645027032356;
      doubleArray1[4] = 2477.08027139;
      doubleArray1[5] = 2507.36114;
      doubleArray1[6] = 2477.08027139;
      doubleArray1[7] = 4537.645027032356;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getVT();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getD();
      double[] doubleArray2 = eigenDecompositionImpl0.getImagEigenvalues();
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      try { 
        eigenDecompositionImpl0.getRealEigenvalue(1157);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1157
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }
}
