* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.math.linear.EigenDecompositionImpl
* Starting client
* Connecting to master process on port 4073
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/patch2-Math-80-Jaid/Math_80_2_jaid/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math.linear.EigenDecompositionImpl
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 852
  - Branch 428
  - Exception 0
  - MutationFactory 212
  - Output 28
  - Method 17
  - MethodNoException 17
  - CBranchFitnessFactory 428
* Using seed 1585484773541
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%][Progress:==>                           8%] [Cov:==>                                6%][Progress:==>                           8%] [Cov:====>                              12%][Progress:==>                           8%] [Cov:========>                          24%][Progress:==>                           8%] [Cov:==========>                        30%][Progress:==>                           8%] [Cov:==========>                        31%][Progress:==>                           8%] [Cov:============>                      35%][Progress:==>                           8%] [Cov:=============>                     38%][Progress:==>                           8%] [Cov:==============>                    42%][Progress:====>                         15%] [Cov:>                                  0%][Progress:====>                         15%] [Cov:>                                  1%][Progress:====>                         15%] [Cov:====>                              13%][Progress:====>                         15%] [Cov:====>                              14%][Progress:====>                         16%] [Cov:>                                  0%][Progress:====>                         16%] [Cov:>                                  1%][Progress:====>                         16%] [Cov:====>                              13%][Progress:====>                         16%] [Cov:====>                              14%][Progress:====>                         16%] [Cov:=====>                             16%][Progress:=====>                        18%] [Cov:=====>                             17%][Progress:=====>                        18%] [Cov:======>                            18%][Progress:=====>                        18%] [Cov:=======>                           21%][Progress:=====>                        18%] [Cov:========>                          23%][Progress:=====>                        18%] [Cov:========>                          24%][Progress:======>                       20%] [Cov:>                                  0%][Progress:======>                       20%] [Cov:>                                  1%][Progress:======>                       20%] [Cov:====>                              13%][Progress:======>                       21%] [Cov:>                                  0%][Progress:======>                       21%] [Cov:>                                  1%][Progress:======>                       21%] [Cov:====>                              13%][Progress:======>                       21%] [Cov:====>                              14%][Progress:======>                       21%] [Cov:=====>                             15%][Progress:======>                       21%] [Cov:=====>                             16%][Progress:======>                       21%] [Cov:=====>                             17%][Progress:======>                       23%] [Cov:====>                              12%][Progress:======>                       23%] [Cov:====>                              13%][Progress:======>                       23%] [Cov:====>                              14%][Progress:=======>                      25%] [Cov:====>                              14%][Progress:=======>                      25%] [Cov:=====>                             16%][Progress:=======>                      25%] [Cov:=====>                             17%][Progress:=======>                      25%] [Cov:======>                            19%][Progress:=======>                      25%] [Cov:=======>                           20%][Progress:=========>                    33%] [Cov:>                                  0%][Progress:=========>                    33%] [Cov:>                                  1%][Progress:=========>                    33%] [Cov:====>                              13%][Progress:==========>                   35%] [Cov:====>                              12%][Progress:==========>                   35%] [Cov:====>                              14%][Progress:==========>                   36%] [Cov:>                                  2%][Progress:==========>                   36%] [Cov:=>                                 4%][Progress:==========>                   36%] [Cov:=====>                             16%][Progress:==========>                   36%] [Cov:======>                            18%][Progress:==========>                   36%] [Cov:======>                            19%][Progress:==========>                   36%] [Cov:========>                          24%][Progress:==========>                   36%] [Cov:=========>                         27%][Progress:==========>                   36%] [Cov:=========>                         28%][Progress:===========>                  38%] [Cov:>                                  2%][Progress:===========>                  38%] [Cov:=>                                 3%][Progress:===========>                  38%] [Cov:=====>                             16%][Progress:===========>                  38%] [Cov:=====>                             17%][Progress:===========>                  38%] [Cov:=======>                           20%][Progress:===========>                  38%] [Cov:=======>                           21%][Progress:===========>                  38%] [Cov:=======>                           22%][Progress:============>                 41%] [Cov:>                                  0%][Progress:============>                 41%] [Cov:====>                              12%][Progress:============>                 41%] [Cov:====>                              13%][Progress:============>                 41%] [Cov:====>                              14%][Progress:============>                 41%] [Cov:=====>                             16%][Progress:============>                 43%] [Cov:=====>                             16%][Progress:============>                 43%] [Cov:=====>                             17%][Progress:============>                 43%] [Cov:==============>                    42%][Progress:=============>                45%] [Cov:====>                              14%][Progress:=============>                45%] [Cov:======>                            18%][Progress:=============>                45%] [Cov:======>                            19%][Progress:=============>                45%] [Cov:=======>                           20%][Progress:=============>                45%] [Cov:==============>                    42%][Progress:=============>                46%] [Cov:====>                              13%][Progress:=============>                46%] [Cov:====>                              14%][Progress:=============>                46%] [Cov:=========>                         28%][Progress:==============>               48%] [Cov:===================>               55%][Progress:===============>              50%] [Cov:=================>                 51%][Progress:===============>              50%] [Cov:===================>               55%][Progress:===============>              51%] [Cov:===================>               55%][Progress:===============>              53%] [Cov:===================>               55%][Progress:================>             55%] [Cov:=================>                 51%][Progress:================>             55%] [Cov:==================>                52%][Progress:================>             56%] [Cov:==================>                52%][Progress:================>             56%] [Cov:===================>               55%][Progress:=================>            58%] [Cov:===================>               55%][Progress:=================>            58%] [Cov:===================>               55%][Progress:==================>           60%] [Cov:==================>                52%][Progress:==================>           60%] [Cov:===================>               55%][Progress:==================>           60%] [Cov:===================>               56%][Progress:==================>           61%] [Cov:===================>               55%][Progress:==================>           61%] [Cov:===================>               56%][Progress:==================>           63%] [Cov:====================>              58%][Progress:===================>          65%] [Cov:==================>                54%][Progress:===================>          65%] [Cov:===================>               57%][Progress:===================>          65%] [Cov:====================>              58%][Progress:===================>          66%] [Cov:==================>                53%][Progress:===================>          66%] [Cov:==================>                54%][Progress:===================>          66%] [Cov:===================>               57%][Progress:===================>          66%] [Cov:====================>              58%][Progress:====================>         68%] [Cov:====================>              58%][Progress:=====================>        70%] [Cov:====================>              58%][Progress:=====================>        71%] [Cov:====================>              58%][Progress:=====================>        71%] [Cov:====================>              59%][Progress:=====================>        73%] [Cov:====================>              58%][Progress:======================>       75%] [Cov:=====================>             60%][Progress:======================>       76%] [Cov:====================>              59%][Progress:=======================>      78%] [Cov:===================>               55%][Progress:=======================>      78%] [Cov:====================>              59%][Progress:=======================>      78%] [Cov:=====================>             60%][Progress:========================>     80%] [Cov:====================>              59%][Progress:========================>     80%] [Cov:=====================>             60%][Progress:========================>     80%] [Cov:=====================>             60%][Progress:========================>     81%] [Cov:=====================>             60%][Progress:========================>     83%] [Cov:====================>              59%][Progress:========================>     83%] [Cov:=====================>             60%][Progress:=========================>    86%] [Cov:=====================>             60%][Progress:=========================>    86%] [Cov:=====================>             61%][Progress:==========================>   88%] [Cov:=====================>             60%][Progress:==========================>   88%] [Cov:=====================>             61%][Progress:===========================>  90%] [Cov:=====================>             60%][Progress:===========================>  90%] [Cov:=====================>             61%][Progress:===========================>  91%] [Cov:=====================>             60%][Progress:===========================>  91%] [Cov:=====================>             61%][Progress:===========================>  93%] [Cov:=====================>             60%][Progress:===========================>  93%] [Cov:=====================>             61%][Progress:============================> 95%] [Cov:=====================>             60%][Progress:============================> 95%] [Cov:=====================>             61%][Progress:============================> 96%] [Cov:=====================>             60%][Progress:============================> 96%] [Cov:=====================>             61%][Progress:=============================>98%] [Cov:=====================>             60%][Progress:=============================>98%] [Cov:=====================>             61%][Progress:=============================>98%] [Cov:=====================>             60%][Progress:=============================>98%] [Cov:=====================>             61%][Progress:==============================100%] [Cov:=====================>             61%][Progress:==============================100%] [Cov:=====================>             61%][Progress:==============================100%] [Cov:=====================>             61%][Progress:==============================100%] [Cov:=====================>             62%]
* Search finished after 62s and 12 generations, 8826 statements, best individual has fitness: 1375.6302732107324
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 72%
* Total number of goals: 852
* Number of covered goals: 613
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 59%
* Total number of goals: 428
* Number of covered goals: 253
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 10
* Number of covered goals: 10
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 51%
* Total number of goals: 212
* Number of covered goals: 109
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 32%
* Total number of goals: 28
* Number of covered goals: 9
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 71%
* Total number of goals: 17
* Number of covered goals: 12
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 65%
* Total number of goals: 17
* Number of covered goals: 11
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 59%
* Total number of goals: 428
* Number of covered goals: 253
* Generated 29 tests with total length 152
* Resulting test suite's coverage: 63% (average coverage for all fitness functions)
* Compiling and checking tests
* Writing JUnit test case 'EigenDecompositionImpl_ESTest' to evosuite-tests
* Done!

* Computation finished
