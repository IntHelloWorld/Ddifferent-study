/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 29 12:26:09 GMT 2020
 */

package org.apache.commons.math.linear;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.linear.Array2DRowRealMatrix;
import org.apache.commons.math.linear.ArrayRealVector;
import org.apache.commons.math.linear.BlockRealMatrix;
import org.apache.commons.math.linear.DecompositionSolver;
import org.apache.commons.math.linear.EigenDecompositionImpl;
import org.apache.commons.math.linear.OpenMapRealVector;
import org.apache.commons.math.linear.RealMatrix;
import org.apache.commons.math.linear.RealVector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EigenDecompositionImpl_ESTest extends EigenDecompositionImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BlockRealMatrix blockRealMatrix0 = new BlockRealMatrix(2, 2859);
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 2859;
      doubleArray0[1] = 2.0;
      doubleArray0[3] = (double) 2;
      doubleArray0[4] = (double) 2;
      doubleArray0[5] = (double) 52;
      doubleArray0[6] = (double) 2859;
      doubleArray0[7] = (double) 52;
      double[] doubleArray1 = new double[7];
      doubleArray1[1] = 2.0;
      doubleArray1[2] = (double) 52;
      doubleArray1[3] = (double) 52;
      doubleArray1[4] = (double) 52;
      doubleArray1[5] = 2.0;
      doubleArray1[6] = (-4006.224001393579);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 2.0);
      double[] doubleArray2 = eigenDecompositionImpl0.getRealEigenvalues();
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getVT();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (-1.0);
      doubleArray0[1] = 656.76;
      doubleArray0[2] = (-2431.46955);
      doubleArray0[3] = -0.0;
      doubleArray0[4] = (-1534.0);
      doubleArray0[5] = 0.0;
      doubleArray0[6] = 1425.1;
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = -0.0;
      doubleArray1[1] = (-2006.77682);
      doubleArray1[2] = -0.0;
      doubleArray1[3] = -0.0;
      doubleArray1[4] = 0.0;
      doubleArray1[5] = (-1.0);
      doubleArray1[6] = 1425.1;
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray1);
      OpenMapRealVector openMapRealVector1 = new OpenMapRealVector(openMapRealVector0);
      RealMatrix realMatrix0 = openMapRealVector1.outerProduct((RealVector) openMapRealVector0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (-2006.77682));
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getV();
      double double0 = openMapRealVector0.getDistance(doubleArray0);
      RealMatrix realMatrix2 = eigenDecompositionImpl0.getVT();
      RealMatrix realMatrix3 = eigenDecompositionImpl0.getVT();
      double double1 = eigenDecompositionImpl0.getDeterminant();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 1.0E-12;
      doubleArray0[1] = (-1915.0);
      doubleArray0[2] = 1132.5300195333;
      doubleArray0[3] = (-512.37027451);
      doubleArray0[4] = 1886.120678340511;
      doubleArray0[5] = (-2.794784236500988);
      double[] doubleArray1 = new double[0];
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, doubleArray1);
      ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0);
      ArrayRealVector arrayRealVector2 = arrayRealVector1.ebeMultiply(arrayRealVector0);
      RealMatrix realMatrix0 = arrayRealVector0.outerProduct(arrayRealVector1);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (-1915.0));
      RealVector realVector0 = arrayRealVector0.mapCeil();
      int int0 = 0;
      RealVector realVector1 = arrayRealVector1.mapFloor();
      RealVector realVector2 = eigenDecompositionImpl0.getEigenvector(0);
      RealVector realVector3 = eigenDecompositionImpl0.getEigenvector(0);
      RealVector realVector4 = eigenDecompositionImpl0.getEigenvector(0);
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getVT();
      Array2DRowRealMatrix array2DRowRealMatrix0 = null;
      try {
        array2DRowRealMatrix0 = new Array2DRowRealMatrix(0, 0);
      } catch(IllegalArgumentException e) {
         //
         // invalid row dimension 0 (must be positive)
         //
         verifyException("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BlockRealMatrix blockRealMatrix0 = new BlockRealMatrix(2, 2859);
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 2859;
      doubleArray0[1] = 2.0;
      doubleArray0[3] = (double) 2;
      doubleArray0[4] = (double) 2;
      doubleArray0[5] = (double) 52;
      doubleArray0[6] = (double) 2859;
      doubleArray0[7] = (double) 52;
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (double) 2;
      doubleArray1[1] = 2.0;
      doubleArray1[2] = 1.5;
      doubleArray1[3] = (double) 52;
      doubleArray1[4] = (double) 2859;
      doubleArray1[5] = 2.0;
      doubleArray1[6] = (-4006.224001393579);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 2.0);
      double[] doubleArray2 = eigenDecompositionImpl0.getRealEigenvalues();
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getVT();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 1.0E-12;
      doubleArray0[1] = (-1915.0);
      doubleArray0[2] = 0.0;
      doubleArray0[3] = (-529.7289830121777);
      doubleArray0[4] = 1886.120678340511;
      doubleArray0[5] = 0.333;
      double[] doubleArray1 = new double[0];
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, doubleArray1);
      ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0);
      ArrayRealVector arrayRealVector2 = arrayRealVector1.ebeMultiply(arrayRealVector0);
      RealMatrix realMatrix0 = arrayRealVector0.outerProduct(arrayRealVector1);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (-1915.0));
      ArrayRealVector arrayRealVector3 = (ArrayRealVector)arrayRealVector0.mapCeil();
      int int0 = 0;
      ArrayRealVector arrayRealVector4 = (ArrayRealVector)arrayRealVector0.mapFloor();
      ArrayRealVector arrayRealVector5 = new ArrayRealVector(arrayRealVector3, arrayRealVector4);
      ArrayRealVector arrayRealVector6 = (ArrayRealVector)eigenDecompositionImpl0.getEigenvector(0);
      ArrayRealVector arrayRealVector7 = (ArrayRealVector)eigenDecompositionImpl0.getEigenvector(0);
      Array2DRowRealMatrix array2DRowRealMatrix0 = (Array2DRowRealMatrix)eigenDecompositionImpl0.getVT();
      Array2DRowRealMatrix array2DRowRealMatrix1 = (Array2DRowRealMatrix)eigenDecompositionImpl0.getV();
      int int1 = (-944);
      try { 
        eigenDecompositionImpl0.getRealEigenvalue((-944));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -944
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 0.0;
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, true);
      RealMatrix realMatrix0 = arrayRealVector0.outerProduct(doubleArray0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
      RealVector realVector0 = eigenDecompositionImpl0.getEigenvector(0);
      RealVector realVector1 = eigenDecompositionImpl0.getEigenvector(0);
      RealVector realVector2 = realMatrix0.operate(realVector0);
      double double0 = eigenDecompositionImpl0.getRealEigenvalue(0);
      try { 
        eigenDecompositionImpl0.getImagEigenvalue(2178);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2178
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 29;
      doubleArray0[1] = 2.0;
      doubleArray0[3] = (double) 29;
      doubleArray0[4] = (double) 29;
      doubleArray0[6] = (double) 2859;
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (double) 29;
      doubleArray1[1] = 2.0;
      doubleArray1[2] = 1.5;
      doubleArray1[5] = 2.0;
      doubleArray1[6] = (-4006.224001393579);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 2.0);
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      double[] doubleArray2 = eigenDecompositionImpl0.getRealEigenvalues();
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getVT();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 1.0E-12;
      doubleArray0[1] = (-1915.0);
      doubleArray0[2] = (-1915.0);
      doubleArray0[3] = (-512.37027451);
      doubleArray0[4] = 1886.120678340511;
      doubleArray0[5] = 0.333;
      double[] doubleArray1 = new double[0];
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, doubleArray1);
      ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0);
      ArrayRealVector arrayRealVector2 = arrayRealVector1.ebeMultiply(arrayRealVector0);
      RealMatrix realMatrix0 = arrayRealVector0.outerProduct(arrayRealVector1);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (-1915.0));
      RealVector realVector0 = arrayRealVector0.mapCeil();
      int int0 = 0;
      RealVector realVector1 = arrayRealVector0.mapFloor();
      RealVector realVector2 = eigenDecompositionImpl0.getEigenvector(0);
      RealVector realVector3 = eigenDecompositionImpl0.getEigenvector(0);
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getVT();
      RealMatrix realMatrix2 = eigenDecompositionImpl0.getV();
      int int1 = (-944);
      try { 
        eigenDecompositionImpl0.getRealEigenvalue((-944));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -944
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BlockRealMatrix blockRealMatrix0 = new BlockRealMatrix(2, 2859);
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 2859;
      doubleArray0[1] = 2.0;
      doubleArray0[2] = 2.0;
      doubleArray0[3] = (double) 2;
      doubleArray0[4] = (double) 2;
      doubleArray0[5] = (double) 52;
      doubleArray0[6] = (double) 2859;
      doubleArray0[7] = (double) 52;
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (double) 2;
      doubleArray1[1] = 2.0;
      doubleArray1[2] = 1.5;
      doubleArray1[3] = (double) 52;
      doubleArray1[4] = (double) 52;
      doubleArray1[5] = 2.0;
      doubleArray1[6] = (-4006.224001393579);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 2.0);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getV();
      double[] doubleArray2 = eigenDecompositionImpl0.getRealEigenvalues();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getVT();
      RealMatrix realMatrix2 = eigenDecompositionImpl0.getV();
      double[] doubleArray3 = eigenDecompositionImpl0.getImagEigenvalues();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[1] = (-1915.0);
      doubleArray0[2] = 0.0;
      doubleArray0[3] = (-512.37027451);
      doubleArray0[5] = 0.333;
      double[] doubleArray1 = new double[0];
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, doubleArray1);
      ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0);
      RealMatrix realMatrix0 = arrayRealVector0.outerProduct(arrayRealVector1);
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (-1915.0));
      } catch(RuntimeException e) {
         //
         // 
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 30.478869754215573;
      doubleArray0[1] = (-1915.0);
      doubleArray0[2] = 0.0;
      doubleArray0[3] = (-513.1351249380147);
      doubleArray0[3] = 1886.120678340511;
      double[] doubleArray1 = new double[0];
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, doubleArray1);
      ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0);
      ArrayRealVector arrayRealVector2 = arrayRealVector1.ebeMultiply(arrayRealVector0);
      RealMatrix realMatrix0 = arrayRealVector0.outerProduct(arrayRealVector1);
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (-1915.0));
      } catch(RuntimeException e) {
         //
         // cannot solve degree 3 equation
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[1] = 1806.856992141;
      doubleArray0[1] = Double.NEGATIVE_INFINITY;
      doubleArray0[2] = (-130.71);
      double[] doubleArray1 = new double[2];
      doubleArray1[0] = (-130.71);
      doubleArray1[1] = (-130.71);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 2017.075178);
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      int int0 = (-2716);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getV();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getD();
      try { 
        eigenDecompositionImpl0.getEigenvector((-2716));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2716
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BlockRealMatrix blockRealMatrix0 = new BlockRealMatrix(2, 2859);
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 2859;
      doubleArray0[1] = 2.0;
      doubleArray0[2] = 2.0;
      doubleArray0[3] = (double) 2;
      doubleArray0[4] = (double) 2;
      doubleArray0[5] = (double) 52;
      doubleArray0[6] = (double) 2859;
      doubleArray0[7] = (double) 52;
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (double) 2;
      doubleArray1[1] = 2.0;
      doubleArray1[2] = 1.5;
      doubleArray1[3] = (double) 52;
      doubleArray1[4] = (double) 52;
      doubleArray1[5] = 2.0;
      doubleArray1[6] = (-4006.224001393579);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 2.0);
      double[] doubleArray2 = eigenDecompositionImpl0.getRealEigenvalues();
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getVT();
      double double0 = eigenDecompositionImpl0.getDeterminant();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 1.0E-12;
      doubleArray0[1] = (-1915.0);
      doubleArray0[2] = 0.0;
      doubleArray0[3] = (-512.37027451);
      doubleArray0[4] = 1886.120678340511;
      doubleArray0[5] = 0.333;
      double[] doubleArray1 = new double[0];
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, doubleArray1);
      ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0);
      ArrayRealVector arrayRealVector2 = arrayRealVector1.ebeMultiply(arrayRealVector0);
      RealMatrix realMatrix0 = arrayRealVector0.outerProduct(arrayRealVector1);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (-1915.0));
      RealVector realVector0 = arrayRealVector0.mapCeil();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getVT();
      RealVector realVector1 = arrayRealVector0.mapFloor();
      RealVector realVector2 = eigenDecompositionImpl0.getEigenvector(0);
      RealVector realVector3 = eigenDecompositionImpl0.getEigenvector(2);
      RealVector realVector4 = eigenDecompositionImpl0.getEigenvector(0);
      RealMatrix realMatrix2 = eigenDecompositionImpl0.getVT();
      RealMatrix realMatrix3 = eigenDecompositionImpl0.getV();
      RealMatrix realMatrix4 = eigenDecompositionImpl0.getD();
      Double double0 = new Double(2);
      RealMatrix realMatrix5 = eigenDecompositionImpl0.getD();
      RealMatrix realMatrix6 = eigenDecompositionImpl0.getVT();
      try { 
        eigenDecompositionImpl0.getRealEigenvalue((-944));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -944
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 1806.856992141;
      doubleArray0[1] = Double.NEGATIVE_INFINITY;
      doubleArray0[2] = (-130.71);
      double[] doubleArray1 = new double[2];
      doubleArray1[0] = (-130.71);
      doubleArray1[1] = (-130.71);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 2017.075178);
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      DecompositionSolver decompositionSolver1 = eigenDecompositionImpl0.getSolver();
      int int0 = (-2716);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getV();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getD();
      try { 
        eigenDecompositionImpl0.getEigenvector((-2716));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2716
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 1806.856992141;
      doubleArray0[1] = Double.NEGATIVE_INFINITY;
      double[] doubleArray1 = new double[2];
      doubleArray1[0] = Double.NEGATIVE_INFINITY;
      doubleArray1[1] = 1806.856992141;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 2017.075178);
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getV();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getD();
      DecompositionSolver decompositionSolver1 = eigenDecompositionImpl0.getSolver();
      try { 
        eigenDecompositionImpl0.getRealEigenvalue((-2716));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2716
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 30.478869754215573;
      doubleArray0[1] = (-1915.0);
      doubleArray0[2] = 0.0;
      doubleArray0[3] = (-513.1351249380147);
      doubleArray0[3] = 1886.120678340511;
      doubleArray0[5] = 0.333;
      double[] doubleArray1 = new double[0];
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, doubleArray1);
      ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0);
      ArrayRealVector arrayRealVector2 = arrayRealVector1.ebeMultiply(arrayRealVector0);
      RealMatrix realMatrix0 = arrayRealVector0.outerProduct(arrayRealVector1);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (-1915.0));
      RealVector realVector0 = arrayRealVector0.mapCeil();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getVT();
      RealVector realVector1 = arrayRealVector0.mapFloor();
      RealVector realVector2 = eigenDecompositionImpl0.getEigenvector(0);
      int int0 = 2;
      RealVector realVector3 = eigenDecompositionImpl0.getEigenvector(2);
      RealVector realVector4 = eigenDecompositionImpl0.getEigenvector(0);
      RealMatrix realMatrix2 = eigenDecompositionImpl0.getVT();
      RealMatrix realMatrix3 = eigenDecompositionImpl0.getV();
      int int1 = (-944);
      try { 
        eigenDecompositionImpl0.getRealEigenvalue((-944));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -944
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[1] = (-1915.0);
      doubleArray0[2] = 0.0;
      doubleArray0[3] = (-512.37027451);
      doubleArray0[4] = (-1915.0);
      doubleArray0[5] = 0.333;
      double[] doubleArray1 = new double[1];
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, doubleArray1);
      ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0);
      ArrayRealVector arrayRealVector2 = arrayRealVector1.ebeMultiply(arrayRealVector0);
      RealMatrix realMatrix0 = arrayRealVector0.outerProduct(arrayRealVector1);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (-1915.0));
      RealVector realVector0 = arrayRealVector0.mapCeil();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getVT();
      RealVector realVector1 = arrayRealVector0.mapFloor();
      int int0 = 2;
      RealVector realVector2 = eigenDecompositionImpl0.getEigenvector(2);
      RealMatrix realMatrix2 = eigenDecompositionImpl0.getVT();
      RealMatrix realMatrix3 = eigenDecompositionImpl0.getV();
      int int1 = (-944);
      try { 
        eigenDecompositionImpl0.getRealEigenvalue((-944));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -944
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 1.0E-12;
      doubleArray0[1] = (-1915.0);
      doubleArray0[2] = 0.0;
      doubleArray0[3] = (-512.37027451);
      doubleArray0[4] = 1.0E-12;
      doubleArray0[5] = 0.333;
      double[] doubleArray1 = new double[0];
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, doubleArray1);
      ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0);
      ArrayRealVector arrayRealVector2 = arrayRealVector1.ebeMultiply(arrayRealVector0);
      RealMatrix realMatrix0 = arrayRealVector0.outerProduct(arrayRealVector1);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (-1915.0));
      RealVector realVector0 = arrayRealVector0.mapCeil();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getVT();
      RealVector realVector1 = arrayRealVector0.mapFloor();
      RealVector realVector2 = eigenDecompositionImpl0.getEigenvector(0);
      int int0 = 2;
      RealVector realVector3 = eigenDecompositionImpl0.getEigenvector(2);
      RealVector realVector4 = eigenDecompositionImpl0.getEigenvector(0);
      RealMatrix realMatrix2 = eigenDecompositionImpl0.getVT();
      RealMatrix realMatrix3 = eigenDecompositionImpl0.getV();
      int int1 = (-944);
      try { 
        eigenDecompositionImpl0.getRealEigenvalue((-944));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -944
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (-1.0);
      doubleArray0[1] = 656.76;
      doubleArray0[2] = (-2431.46955);
      doubleArray0[3] = -0.0;
      doubleArray0[4] = (-1534.0);
      doubleArray0[5] = 0.0;
      doubleArray0[6] = 1425.1;
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = -0.0;
      doubleArray1[1] = (-2006.77682);
      doubleArray1[2] = -0.0;
      doubleArray1[3] = -0.0;
      doubleArray1[4] = 0.0;
      doubleArray1[5] = (-1.0);
      doubleArray1[6] = 1425.1;
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray1);
      OpenMapRealVector openMapRealVector1 = new OpenMapRealVector(openMapRealVector0);
      RealMatrix realMatrix0 = openMapRealVector1.outerProduct((RealVector) openMapRealVector0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (-2006.77682));
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getVT();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = 27.0;
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, 0.0);
      try { 
        eigenDecompositionImpl0.getEigenvector(2);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = 27.0;
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, 27.0);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getVT();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 1806.856992141;
      doubleArray0[1] = Double.NEGATIVE_INFINITY;
      doubleArray0[2] = (-130.71);
      double[] doubleArray1 = new double[2];
      doubleArray1[0] = (-130.71);
      doubleArray1[1] = (-130.71);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 2017.075178);
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      int int0 = (-2716);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getV();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getD();
      try { 
        eigenDecompositionImpl0.getEigenvector((-2716));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2716
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      BlockRealMatrix blockRealMatrix0 = new BlockRealMatrix(1601, 1601);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(blockRealMatrix0, 52);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (-241.48328610211);
      doubleArray0[1] = (-229.69274862855);
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = 0.0;
      doubleArray0[5] = 27.0;
      doubleArray0[6] = 3522.251;
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
      RealMatrix realMatrix0 = openMapRealVector0.outerProduct(doubleArray0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl((RealMatrix) null, 661.385257702);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix();
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, 1.0);
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.linear.TriDiagonalTransformer", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (-33.0);
      doubleArray0[1] = 0.5;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = (-1427.9986);
      doubleArray0[4] = 0.0;
      doubleArray0[5] = 0.0;
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
      RealMatrix realMatrix0 = array2DRowRealMatrix0.scalarMultiply((-1427.9986));
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 527.4600485);
      } catch(RuntimeException e) {
         //
         // a 6x1 matrix was provided instead of a square matrix
         //
         verifyException("org.apache.commons.math.linear.TriDiagonalTransformer", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix();
      int int0 = 2010;
      RealMatrix realMatrix0 = array2DRowRealMatrix0.createMatrix(31, 2010);
      double[][] doubleArray0 = new double[2][5];
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = 0.0;
      doubleArray1[1] = (double) 31;
      doubleArray1[2] = (double) 2010;
      doubleArray1[3] = (double) 31;
      doubleArray1[4] = (double) 2010;
      doubleArray1[5] = (double) 2010;
      doubleArray1[6] = (double) 2010;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[3];
      doubleArray2[0] = 0.0;
      doubleArray2[1] = (double) 2010;
      doubleArray2[2] = 0.0;
      doubleArray0[1] = doubleArray2;
      array2DRowRealMatrix0.data = doubleArray0;
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 2010);
      } catch(RuntimeException e) {
         //
         // no entry at indices (31, 0) in a 31x2,010 matrix
         //
         verifyException("org.apache.commons.math.linear.Array2DRowRealMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 2.2250738585072014E-308;
      doubleArray0[1] = 1.0;
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, 1.05);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl((double[]) null, (double[]) null, 3995.344531158);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = Double.NEGATIVE_INFINITY;
      doubleArray0[1] = (-661.4099911249208);
      doubleArray0[2] = (-1824.177764897203);
      doubleArray0[3] = (-158.6083324);
      double[] doubleArray1 = new double[3];
      doubleArray1[0] = (-1824.177764897203);
      doubleArray1[1] = (-1824.177764897203);
      doubleArray1[2] = Double.NEGATIVE_INFINITY;
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      } catch(RuntimeException e) {
         //
         // 
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (-2061.154810159156);
      doubleArray0[1] = 0.0;
      doubleArray0[2] = (-800.733);
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, 1.0E-12);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (-507.6493431);
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, (-80.4802377056));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, (-4668.81158716162));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl((double[]) null, (double[]) null, 716.2);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      double double0 = 1.0E-12;
      doubleArray0[0] = 1.0E-12;
      doubleArray0[1] = (-1915.0);
      doubleArray0[2] = 0.0;
      doubleArray0[3] = (-512.37027451);
      doubleArray0[5] = 0.333;
      double[] doubleArray1 = new double[0];
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, doubleArray1);
      ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0);
      ArrayRealVector arrayRealVector2 = new ArrayRealVector();
      RealMatrix realMatrix0 = arrayRealVector0.outerProduct(arrayRealVector1);
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (-1915.0));
      } catch(RuntimeException e) {
         //
         // 
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 1.0E-12;
      doubleArray0[1] = (-1915.0);
      doubleArray0[2] = 0.0;
      doubleArray0[3] = (-512.37027451);
      doubleArray0[4] = (-1915.0);
      doubleArray0[5] = 0.333;
      double[] doubleArray1 = new double[1];
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, doubleArray1);
      ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0);
      ArrayRealVector arrayRealVector2 = arrayRealVector1.ebeMultiply(arrayRealVector0);
      RealMatrix realMatrix0 = arrayRealVector0.outerProduct(arrayRealVector1);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (-1915.0));
      RealVector realVector0 = arrayRealVector0.mapCeil();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getVT();
      RealVector realVector1 = arrayRealVector0.mapFloor();
      RealVector realVector2 = eigenDecompositionImpl0.getEigenvector(0);
      int int0 = 2;
      RealVector realVector3 = eigenDecompositionImpl0.getEigenvector(2);
      RealVector realVector4 = eigenDecompositionImpl0.getEigenvector(0);
      RealMatrix realMatrix2 = eigenDecompositionImpl0.getVT();
      RealMatrix realMatrix3 = eigenDecompositionImpl0.getV();
      int int1 = (-944);
      try { 
        eigenDecompositionImpl0.getRealEigenvalue((-944));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -944
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 1.0E-12;
      doubleArray0[1] = (-1915.0);
      doubleArray0[2] = 0.0;
      doubleArray0[3] = (-512.37027451);
      doubleArray0[4] = 1886.120678340511;
      doubleArray0[5] = 0.333;
      double[] doubleArray1 = new double[0];
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, doubleArray1);
      ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0);
      ArrayRealVector arrayRealVector2 = arrayRealVector1.ebeMultiply(arrayRealVector0);
      RealMatrix realMatrix0 = arrayRealVector0.outerProduct(arrayRealVector1);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (-1915.0));
      RealVector realVector0 = arrayRealVector0.mapCeil();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getVT();
      RealVector realVector1 = arrayRealVector0.mapFloor();
      RealVector realVector2 = eigenDecompositionImpl0.getEigenvector(0);
      int int0 = 2;
      RealVector realVector3 = eigenDecompositionImpl0.getEigenvector(2);
      RealVector realVector4 = eigenDecompositionImpl0.getEigenvector(0);
      RealMatrix realMatrix2 = eigenDecompositionImpl0.getVT();
      RealMatrix realMatrix3 = eigenDecompositionImpl0.getV();
      int int1 = (-944);
      try { 
        eigenDecompositionImpl0.getRealEigenvalue((-944));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -944
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      int int0 = (-1009);
      int int1 = (-1218);
      Array2DRowRealMatrix array2DRowRealMatrix0 = null;
      try {
        array2DRowRealMatrix0 = new Array2DRowRealMatrix((-1009), (-1218));
      } catch(IllegalArgumentException e) {
         //
         // invalid row dimension -1,009 (must be positive)
         //
         verifyException("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 0.0;
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, true);
      RealMatrix realMatrix0 = arrayRealVector0.outerProduct(doubleArray0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
      RealVector realVector0 = eigenDecompositionImpl0.getEigenvector(0);
      RealVector realVector1 = eigenDecompositionImpl0.getEigenvector(0);
      try { 
        eigenDecompositionImpl0.getImagEigenvalue(2178);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2178
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 12.566370614359172;
      doubleArray0[2] = (-1854.770288);
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
      RealMatrix realMatrix0 = array2DRowRealMatrix0.scalarAdd(2.2250738585072014E-308);
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (-2219.256495711));
      } catch(RuntimeException e) {
         //
         // a 3x1 matrix was provided instead of a square matrix
         //
         verifyException("org.apache.commons.math.linear.TriDiagonalTransformer", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (-2722.3827556471);
      doubleArray0[1] = 2.0;
      doubleArray0[2] = 9.0;
      doubleArray0[3] = 12.566370614359172;
      doubleArray0[4] = 2.2250738585072014E-308;
      doubleArray0[5] = 55.06045647844851;
      doubleArray0[6] = 0.0;
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, 12.566370614359172);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }
}
