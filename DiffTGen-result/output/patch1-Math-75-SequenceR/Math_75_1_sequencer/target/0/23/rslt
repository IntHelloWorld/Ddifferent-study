* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.math.stat.Frequency
* Starting client
* Connecting to master process on port 9998
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/patch1-Math-75-SequenceR/Math_75_1_sequencer/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math.stat.Frequency
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 134
  - Branch 73
  - Exception 0
  - MutationFactory 179
  - Output 70
  - Method 35
  - MethodNoException 35
  - CBranchFitnessFactory 73
[Progress:>                             0%] [Cov:>                                  0%]* Using seed 1585462360095
* Starting evolution
[Progress:====>                         16%] [Cov:=>                                 5%][Progress:====>                         16%] [Cov:===>                               10%][Progress:====>                         16%] [Cov:=======>                           22%][Progress:====>                         16%] [Cov:=========>                         28%][Progress:====>                         16%] [Cov:===========>                       32%][Progress:====>                         16%] [Cov:============>                      35%][Progress:====>                         16%] [Cov:============>                      37%][Progress:====>                         16%] [Cov:=============>                     39%][Progress:====>                         16%] [Cov:==============>                    42%][Progress:====>                         16%] [Cov:=================>                 50%][Progress:=====>                        18%] [Cov:====================>              59%][Progress:=====>                        18%] [Cov:=====================>             62%][Progress:======>                       20%] [Cov:==>                                7%][Progress:======>                       20%] [Cov:====>                              14%][Progress:======>                       20%] [Cov:=========>                         26%][Progress:======>                       20%] [Cov:============>                      36%][Progress:======>                       20%] [Cov:=============>                     38%][Progress:======>                       20%] [Cov:===============>                   44%][Progress:======>                       20%] [Cov:=================>                 49%][Progress:======>                       20%] [Cov:==================>                52%][Progress:======>                       20%] [Cov:===================>               57%][Progress:======>                       20%] [Cov:======================>            65%][Progress:======>                       20%] [Cov:========================>          70%][Progress:======>                       21%] [Cov:==>                                7%][Progress:======>                       21%] [Cov:=====>                             15%][Progress:======>                       21%] [Cov:=========>                         27%][Progress:======>                       21%] [Cov:=============>                     38%][Progress:======>                       21%] [Cov:==============>                    40%][Progress:======>                       21%] [Cov:================>                  47%][Progress:======>                       21%] [Cov:==================>                53%][Progress:======>                       21%] [Cov:===================>               56%][Progress:======>                       21%] [Cov:======================>            63%][Progress:======>                       21%] [Cov:=======================>           66%][Progress:======>                       23%] [Cov:==>                                8%][Progress:======>                       23%] [Cov:====>                              14%][Progress:======>                       23%] [Cov:=========>                         26%][Progress:======>                       23%] [Cov:=============>                     38%][Progress:======>                       23%] [Cov:=============>                     39%][Progress:======>                       23%] [Cov:===============>                   45%][Progress:======>                       23%] [Cov:=================>                 50%][Progress:======>                       23%] [Cov:==================>                53%][Progress:======>                       23%] [Cov:===================>               55%][Progress:======>                       23%] [Cov:=====================>             60%][Progress:=======>                      25%] [Cov:========>                          24%][Progress:=======>                      25%] [Cov:===========>                       32%][Progress:=======>                      25%] [Cov:===========>                       33%][Progress:=======>                      25%] [Cov:==============>                    40%][Progress:=======>                      25%] [Cov:================>                  46%][Progress:=======>                      25%] [Cov:=================>                 49%][Progress:=======>                      25%] [Cov:==================>                52%][Progress:=======>                      25%] [Cov:====================>              58%][Progress:=======>                      25%] [Cov:=====================>             62%][Progress:=======>                      26%] [Cov:===========>                       32%][Progress:=======>                      26%] [Cov:===========>                       33%][Progress:=======>                      26%] [Cov:===========>                       34%][Progress:=======>                      26%] [Cov:============>                      36%][Progress:=======>                      26%] [Cov:==============>                    42%][Progress:=======>                      26%] [Cov:================>                  48%][Progress:=======>                      26%] [Cov:=================>                 50%][Progress:=======>                      26%] [Cov:====================>              58%][Progress:=======>                      26%] [Cov:=====================>             61%][Progress:========>                     28%] [Cov:===>                               9%][Progress:========>                     28%] [Cov:=====>                             17%][Progress:========>                     28%] [Cov:==========>                        29%][Progress:========>                     28%] [Cov:==============>                    41%][Progress:========>                     28%] [Cov:===============>                   44%][Progress:========>                     28%] [Cov:==================>                52%][Progress:========>                     28%] [Cov:=====================>             60%][Progress:=========>                    30%] [Cov:======================>            64%]#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (mmap) failed to map 65536 bytes for committing reserved memory.
# An error report file with more information is saved as:
# /home/hewitt/work/DiffTGen-master/output/patch1-Math-75-SequenceR/Math_75_1_sequencer/target/0/23/hs_err_pid125035.log
#
# Compiler replay data is saved as:
# /home/hewitt/work/DiffTGen-master/output/patch1-Math-75-SequenceR/Math_75_1_sequencer/target/0/23/replay_pid125035.log
