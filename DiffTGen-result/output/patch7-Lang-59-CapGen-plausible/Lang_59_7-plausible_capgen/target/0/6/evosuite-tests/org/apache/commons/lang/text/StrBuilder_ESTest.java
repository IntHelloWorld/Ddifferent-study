/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 28 18:25:03 GMT 2020
 */

package org.apache.commons.lang.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.Writer;
import java.nio.BufferUnderflowException;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.NoSuchElementException;
import java.util.function.Consumer;
import java.util.function.UnaryOperator;
import org.apache.commons.lang.text.StrBuilder;
import org.apache.commons.lang.text.StrMatcher;
import org.apache.commons.lang.text.StrTokenizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StrBuilder_ESTest extends StrBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.lastIndexOf("", 0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[8];
      charArray0[0] = '}';
      charArray0[1] = '&';
      charArray0[2] = 'r';
      charArray0[3] = 'X';
      charArray0[4] = 'm';
      charArray0[5] = 'o';
      charArray0[6] = '!';
      charArray0[7] = '~';
      strBuilder_StrBuilderWriter0.write(charArray0);
      StrBuilder strBuilder1 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      boolean boolean0 = strBuilder0.equals(strBuilder1);
      StringBuffer stringBuffer0 = new StringBuffer("Invalid offset: ");
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 39, 3181);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("");
      int int0 = strBuilder0.lastIndexOf('-');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrBuilder strBuilder2 = strBuilder1.append(true);
      strBuilder_StrBuilderWriter0.flush();
      Writer writer0 = strBuilder0.asWriter();
      String string0 = strBuilder0.getNewLineText();
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('-');
      boolean boolean0 = strBuilder1.contains(strMatcher0);
      StringBuffer stringBuffer0 = new StringBuffer("");
      StrBuilder strBuilder3 = strBuilder1.append(stringBuffer0);
      StrBuilder strBuilder4 = strBuilder2.insert(0, (String) null);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(", '");
      char[] charArray0 = new char[2];
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder0.setNullText("");
      String string0 = strBuilder2.rightString(0);
      int int0 = strBuilder2.lastIndexOf("");
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('\u0000');
      StrBuilder strBuilder3 = strBuilder2.replaceAll((StrMatcher) strMatcher_CharMatcher0, "");
      String string1 = strBuilder3.substring(0);
      StrBuilder strBuilder4 = strBuilder0.append(false);
      StrBuilder strBuilder5 = strBuilder1.append("");
      boolean boolean0 = strBuilder1.contains("]~ i):e$TDHWqp");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder5.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(586);
      int int1 = strBuilder1.lastIndexOf("sld)j4Yg5jd#p");
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = '/';
      charArray0[1] = '/';
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.insert(0, charArray0, (-841), (-841));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: -841
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("F@kxsmQq");
      StrBuilder strBuilder1 = strBuilder0.append(48);
      String string0 = strBuilder0.leftString(1715);
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      int int0 = strBuilder1.lastIndexOf((StrMatcher) strMatcher_NoMatcher0, 3);
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((Object) strBuilder1, 1715, '(');
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = '/';
      charArray0[1] = '/';
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.replaceAll((String) null, (String) null);
      // Undeclared exception!
      try { 
        strBuilder0.replace(86, 86, "7t,m1A}KJtOu3");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("', has a length less than 2");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(0L);
      strBuilder_StrBuilderReader0.mark((-803));
      strBuilder_StrBuilderReader0.mark(0);
      int int0 = strBuilder0.lastIndexOf("=qJf/Vx", 1424);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[8];
      charArray0[0] = 'H';
      charArray0[1] = '(';
      charArray0[2] = ',';
      strBuilder_StrBuilderWriter0.write(charArray0, 0, 0);
      strBuilder_StrBuilderWriter0.close();
      boolean boolean0 = strBuilder0.equals((Object) strBuilder_StrBuilderReader0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      strBuilder0.size = 1779;
      // Undeclared exception!
      try { 
        strBuilder0.leftString(102);
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder("}mb?EF~:g?@TF");
      StrBuilder strBuilder2 = strBuilder1.setNullText("Invalid offset: ");
      StrBuilder strBuilder3 = strBuilder1.deleteAll('y');
      int int0 = 2;
      StrBuilder strBuilder4 = strBuilder3.insert(2, 'y');
      int int1 = 1504;
      // Undeclared exception!
      try { 
        strBuilder3.substring((-1073));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1073
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(48);
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher((char[]) null);
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 48);
      StrBuilder strBuilder1 = strBuilder0.append(true);
      StrBuilder strBuilder2 = strBuilder0.setNewLineText("Invalid startIndex: ");
      String string0 = strBuilder1.rightString(432);
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadRight((Object) "Invalid startIndex: ", (-324), '&');
      StrBuilder strBuilder4 = strBuilder3.insert(3, 106);
      boolean boolean0 = strBuilder1.isEmpty();
      StrBuilder strBuilder5 = strBuilder2.append((char[]) null);
      StrBuilder strBuilder6 = strBuilder2.insert(3, (char[]) null, 294, (-1));
      int int1 = 48;
      char[] charArray0 = new char[8];
      charArray0[0] = '&';
      charArray0[1] = '&';
      charArray0[2] = '&';
      charArray0[3] = '&';
      charArray0[4] = 'e';
      charArray0[5] = '&';
      charArray0[6] = '&';
      charArray0[7] = '4';
      // Undeclared exception!
      try { 
        strBuilder6.append(charArray0, 3077, 115);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 115
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.vm.version");
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity((-1060));
      int int0 = (-2927);
      StrBuilder strBuilder2 = strBuilder0.delete(0, 0);
      StrBuilder strBuilder3 = strBuilder2.replaceFirst("/y", "/y");
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("java.vm.version", 0, 0);
      int int1 = strBuilder3.indexOf(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder1.insert((-2927), (Object) "java.vm.version");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2927
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = "-: ";
      boolean boolean0 = strBuilder0.endsWith("-: ");
      char[] charArray0 = new char[1];
      charArray0[0] = 'g';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StrBuilder strBuilder2 = strBuilder1.append("-: ");
      char char0 = '@';
      char[] charArray1 = new char[1];
      charArray1[0] = '@';
      StrBuilder strBuilder3 = strBuilder2.insert(0, charArray1, 0, 0);
      StrBuilder strBuilder4 = strBuilder2.appendFixedWidthPadLeft(0, 0, '@');
      char[] charArray2 = new char[5];
      charArray2[0] = 'g';
      charArray2[1] = 'g';
      StrBuilder strBuilder5 = strBuilder4.trim();
      charArray2[2] = 'g';
      charArray2[3] = 'g';
      charArray2[4] = 'g';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray2, (-2192), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      int int0 = (-249);
      StrBuilder strBuilder0 = new StrBuilder((-249));
      String string0 = strBuilder0.leftString((-792));
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("");
      StrBuilder strBuilder2 = strBuilder0.append((long) (-249));
      StrBuilder strBuilder3 = strBuilder0.append((Object) "");
      String string1 = strBuilder0.rightString(0);
      String string2 = strBuilder0.getNewLineText();
      char char0 = '+';
      StrBuilder strBuilder4 = strBuilder2.appendFixedWidthPadLeft(0, (-792), '6');
      StrBuilder strBuilder5 = strBuilder2.appendFixedWidthPadLeft((-792), 0, 'n');
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder4.getChars(4, 779, charArray0, 4);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 779
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder(0);
      Writer writer0 = strBuilder1.asWriter();
      String string0 = strBuilder1.leftString((-1518));
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      char[] charArray0 = new char[5];
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(809);
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceAll((StrMatcher) strMatcher_NoMatcher0, "");
      String string0 = strBuilder1.midString(809, 27);
      int int0 = strBuilder0.capacity();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
      Writer writer0 = strBuilder2.asWriter();
      StrBuilder strBuilder3 = strBuilder0.replaceAll('k', 'k');
      int int1 = strBuilder0.indexOf((StrMatcher) strMatcher_NoMatcher0, 5);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrBuilder strBuilder2 = strBuilder1.minimizeCapacity();
      StrBuilder strBuilder3 = strBuilder1.replaceAll("$BVfk9\u0004", "");
      StrBuilder strBuilder4 = strBuilder2.append((-3703L));
      char[] charArray0 = new char[3];
      charArray0[0] = 'H';
      charArray0[1] = 'H';
      charArray0[2] = 'H';
      StrBuilder strBuilder5 = strBuilder1.insert(3, charArray0);
      StrBuilder strBuilder6 = strBuilder5.deleteCharAt(3);
      StrBuilder strBuilder7 = strBuilder1.replaceFirst('\'', 'H');
      char[] charArray1 = new char[1];
      charArray1[0] = '\'';
      char[] charArray2 = strBuilder0.getChars(charArray1);
      // Undeclared exception!
      try { 
        strBuilder2.insert(17, 17);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 17
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.lastIndexOf("ovoLf8>w/#", 0);
      StrBuilder strBuilder1 = strBuilder0.appendPadding(147, '5');
      StrBuilder strBuilder2 = new StrBuilder(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("");
      StrBuilder strBuilder3 = strBuilder2.deleteFirst(strMatcher0);
      int int1 = strBuilder0.length();
      int int2 = strBuilder0.lastIndexOf('<');
      char[] charArray0 = null;
      strBuilder0.buffer = null;
      boolean boolean0 = strBuilder0.isEmpty();
      // Undeclared exception!
      try { 
        strBuilder0.toString();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("end < start");
      Consumer<Integer> consumer0 = (Consumer<Integer>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.lastIndexOf('@', 0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      String string0 = "Index: ";
      StrBuilder strBuilder0 = new StrBuilder("Index: ");
      String string1 = strBuilder0.toString();
      char char0 = '.';
      int int0 = 1015;
      int int1 = strBuilder0.indexOf('.', 1015);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity((-1));
      long long0 = strBuilder_StrBuilderReader0.skip(1015);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrBuilder strBuilder2 = strBuilder0.deleteFirst(strMatcher0);
      StrBuilder strBuilder3 = strBuilder2.replaceAll("Index: ", "Index: ");
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterMatcher(strMatcher0);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        strBuilder3.insert((-1), object0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = 7;
      StringBuffer stringBuffer0 = new StringBuffer(7);
      char[] charArray0 = new char[4];
      charArray0[0] = '<';
      charArray0[1] = '=';
      charArray0[2] = 'R';
      charArray0[3] = '(';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StrBuilder strBuilder2 = strBuilder0.append(stringBuffer0);
      boolean boolean0 = strBuilder0.contains("");
      // Undeclared exception!
      try { 
        strBuilder1.insert(7, 7);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 7
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder1.append((-157L));
      char[] charArray0 = new char[4];
      charArray0[0] = 'J';
      charArray0[1] = 'E';
      charArray0[2] = '%';
      charArray0[3] = 'V';
      int int0 = 786;
      // Undeclared exception!
      try { 
        strBuilder1.append(charArray0, 32, 786);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 786
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((Object) strBuilder1, 1, 'S');
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      StrBuilder strBuilder3 = strBuilder0.appendWithSeparators((Collection) linkedList0, "java.vendor.url");
      StrBuilder strBuilder4 = strBuilder0.append('?');
      StrBuilder strBuilder5 = strBuilder2.deleteAll((String) null);
      StrBuilder strBuilder6 = strBuilder2.append((StringBuffer) null, 1, (-753));
      StrBuilder strBuilder7 = strBuilder6.deleteFirst('S');
      StrBuilder strBuilder8 = strBuilder3.clear();
      int int0 = strBuilder0.capacity();
      // Undeclared exception!
      try { 
        strBuilder6.replace(5, (-753), "java.vendor.url");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("`4k?->D2KS42}");
      int int0 = 1;
      String string0 = strBuilder0.rightString((-2037));
      StrBuilder strBuilder1 = strBuilder0.append((Object) strBuilder0);
      StrBuilder strBuilder2 = strBuilder1.append(false);
      StrBuilder strBuilder3 = strBuilder0.setCharAt(1, 'M');
      StrTokenizer strTokenizer0 = strBuilder3.asTokenizer();
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder4 = strBuilder3.append(stringBuffer0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      int int1 = strBuilder0.lastIndexOf("4.1", 0);
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[7];
      charArray0[0] = 'M';
      charArray0[1] = 'M';
      charArray0[2] = 'M';
      charArray0[3] = 'M';
      charArray0[4] = 'M';
      charArray0[5] = 'M';
      charArray0[6] = 'M';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 1, (-70));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: -70
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst((String) null);
      StringBuffer stringBuffer0 = strBuilder1.toStringBuffer();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StringBuffer stringBuffer1 = null;
      try {
        stringBuffer1 = new StringBuffer((CharSequence) null);
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.insert(0, 'B');
      StrBuilder strBuilder2 = strBuilder1.insert(0, "");
      StrBuilder strBuilder3 = strBuilder0.appendWithSeparators((Iterator) null, "");
      int int0 = (-1853);
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadRight(2181, (-1853), 'B');
      String string0 = "";
      // Undeclared exception!
      try { 
        strBuilder4.validateIndex((-1853));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1853
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('2');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[8];
      charArray0[0] = '2';
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight(3, (-537), '9');
      charArray0[1] = '2';
      charArray0[2] = '2';
      charArray0[3] = '2';
      charArray0[4] = '2';
      charArray0[5] = '2';
      charArray0[6] = '2';
      charArray0[7] = '2';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 2023, (-4239));
      StrBuilder strBuilder3 = strBuilder0.appendWithSeparators((Iterator) strBuilder_StrBuilderTokenizer0, "set() is unsupported");
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = null;
      StrBuilder strBuilder1 = strBuilder0.setNullText((String) null);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        strBuilder0.insert((-39), object0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -39
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("E=O8>`{FA~@X");
      String string0 = strBuilder0.toString();
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("E=O8>`{FA~@X");
      // Undeclared exception!
      try { 
        strBuilder1.delete(2847, 2847);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0, 0);
      int int1 = 1206;
      StrBuilder strBuilder1 = strBuilder0.append((StrBuilder) null, (-784), 1206);
      StrBuilder strBuilder2 = strBuilder1.insert(0, (double) 0);
      StrBuilder strBuilder3 = strBuilder2.appendNewLine();
      StrBuilder strBuilder4 = strBuilder3.deleteFirst(strMatcher0);
      StringBuffer stringBuffer0 = new StringBuffer(1206);
      StrMatcher strMatcher1 = StrMatcher.noneMatcher();
      StrBuilder strBuilder5 = strBuilder0.deleteFirst(strMatcher1);
      StrBuilder strBuilder6 = strBuilder5.appendFixedWidthPadLeft((Object) strBuilder1, 0, '=');
      StrMatcher strMatcher2 = StrMatcher.charMatcher(';');
      StringBuffer stringBuffer1 = stringBuffer0.append(1064L);
      int int2 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, (-784), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0, 0);
      int int1 = 1206;
      StrBuilder strBuilder1 = strBuilder0.append((StrBuilder) null, (-784), 1206);
      StrBuilder strBuilder2 = strBuilder1.insert(0, (double) 0);
      StrBuilder strBuilder3 = strBuilder2.appendNewLine();
      StrBuilder strBuilder4 = strBuilder3.deleteFirst(strMatcher0);
      StringBuffer stringBuffer0 = new StringBuffer(1206);
      StrMatcher strMatcher1 = StrMatcher.noneMatcher();
      StrBuilder strBuilder5 = strBuilder0.deleteFirst(strMatcher1);
      StrMatcher strMatcher2 = StrMatcher.charMatcher(';');
      StringBuffer stringBuffer1 = stringBuffer0.append(1064L);
      int int2 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, (-784), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = null;
      StrBuilder strBuilder1 = strBuilder0.setNullText((String) null);
      Object object0 = new Object();
      int int0 = (-722);
      // Undeclared exception!
      try { 
        strBuilder1.replace(3112, (-722), (String) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((StrBuilder) null, 39, 32);
      StrBuilder strBuilder2 = strBuilder0.deleteAll("}mb?EF~:g?@TF");
      StrBuilder strBuilder3 = strBuilder2.setNullText("Invalid offset: ");
      StrBuilder strBuilder4 = strBuilder2.deleteAll('y');
      int int0 = 2;
      // Undeclared exception!
      try { 
        strBuilder4.insert(2, 'y');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1);
      int int0 = strBuilder0.indexOf('Y');
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.runtime.name");
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadLeft((Object) null, 34, 'B');
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(0, 3, '\\');
      Reader reader0 = strBuilder1.asReader();
      int int0 = strBuilder0.lastIndexOf("8{T}0k");
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      char[] charArray0 = new char[8];
      charArray0[0] = '\\';
      charArray0[1] = '\\';
      charArray0[2] = 'd';
      charArray0[3] = '\\';
      charArray0[4] = '\\';
      charArray0[5] = '\\';
      charArray0[6] = 'p';
      charArray0[7] = '5';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      int int1 = strBuilder0.indexOf((StrMatcher) strMatcher_TrimMatcher0, 44);
      StrBuilder strBuilder2 = strBuilder0.append((double) 3);
      StrBuilder strBuilder3 = strBuilder0.appendNewLine();
      StrBuilder strBuilder4 = strBuilder2.reverse();
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(true);
      int int0 = strBuilder1.lastIndexOf(";+9g|x>9[b<j", 34);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = strBuilder0.lastIndexOf("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[5];
      charArray0[0] = '{';
      charArray0[1] = 'E';
      charArray0[2] = 'd';
      char char0 = 'V';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 9, (-1));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      int int0 = 51;
      StrBuilder strBuilder0 = new StrBuilder(51);
      String string0 = "Z^7B&gUN[\"OPGGGzi+";
      boolean boolean0 = strBuilder0.endsWith("Z^7B&gUN[\"OPGGGzi+");
      int int1 = 0;
      StrBuilder strBuilder1 = strBuilder0.insert(0, true);
      // Undeclared exception!
      try { 
        strBuilder1.insert(51, '/');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 51
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2987));
      int int0 = strBuilder0.indexOf("", (-2987));
      Writer writer0 = strBuilder0.asWriter();
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.insert(0, (float) 0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[6];
      charArray0[0] = '6';
      charArray0[1] = '.';
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.previousToken();
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) null);
      charArray0[2] = 'H';
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer1 = strBuilder1.new StrBuilderTokenizer();
      String string1 = strBuilder_StrBuilderTokenizer1.nextToken();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "0.0null");
      Writer writer1 = strBuilder_StrBuilderWriter0.append((CharSequence) charBuffer0);
      charArray0[3] = 'O';
      charArray0[4] = 'J';
      charArray0[5] = 'g';
      strBuilder_StrBuilderWriter0.write(charArray0, 0, 0);
      strBuilder_StrBuilderWriter0.close();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      strBuilder_StrBuilderWriter0.flush();
      StrBuilder strBuilder2 = strBuilder0.insert(0, "");
      List list0 = strBuilder_StrBuilderTokenizer1.tokenize(charArray0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("`4k?->D2KS42}");
      String string0 = strBuilder0.rightString((-2037));
      StrBuilder strBuilder1 = new StrBuilder(0);
      StrBuilder strBuilder2 = strBuilder0.append((Object) strBuilder1);
      StrBuilder strBuilder3 = strBuilder2.append(false);
      StrBuilder strBuilder4 = strBuilder0.setCharAt(1, 'M');
      StrTokenizer strTokenizer0 = strBuilder4.asTokenizer();
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder5 = strBuilder4.append(stringBuffer0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      int int0 = strBuilder0.lastIndexOf("4.1", 0);
      Writer writer0 = strBuilder1.asWriter();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((char[]) null);
      int int1 = strBuilder2.indexOf("java.awt.fonts", (-1));
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.deleteAll("");
      int int0 = 116;
      int int1 = (-264);
      strBuilder0.size = (-264);
      char char0 = '#';
      // Undeclared exception!
      try { 
        strBuilder1.appendFixedWidthPadLeft(116, 116, '#');
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      String string0 = "user.dir";
      StrBuilder strBuilder0 = new StrBuilder("user.dir");
      int int0 = 2;
      char[] charArray0 = new char[6];
      charArray0[0] = '.';
      charArray0[1] = 'H';
      char char0 = '\'';
      charArray0[2] = '\'';
      StrBuilder strBuilder1 = strBuilder0.trim();
      char[] charArray1 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder1.append(charArray1, 0, 2);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 2
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder("");
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.length();
      // Undeclared exception!
      try { 
        strBuilder0.charAt((-4151));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -4151
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = new StrBuilder("UV~C~p]PiTov(yE|");
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1684));
      StrBuilder strBuilder1 = strBuilder0.append((StringBuffer) null);
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrBuilder strBuilder2 = strBuilder0.deleteFirst(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder2.charAt((-680));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -680
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1039);
      boolean boolean0 = strBuilder0.contains("#El4azE-NlCTdr2");
      Object[] objectArray0 = new Object[9];
      StrBuilder strBuilder1 = strBuilder0.deleteAll('(');
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('A');
      boolean boolean1 = strBuilder0.contains(strMatcher0);
      Object object0 = new Object();
      objectArray0[0] = object0;
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) strBuilder0;
      objectArray0[3] = (Object) "#El4azE-NlCTdr2";
      objectArray0[4] = (Object) strBuilder0;
      objectArray0[5] = (Object) strBuilder0;
      objectArray0[6] = (Object) "#El4azE-NlCTdr2";
      objectArray0[7] = (Object) strBuilder0;
      objectArray0[8] = (Object) strBuilder0;
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators(objectArray0, ")$pe!;|rLz\"@RZk4(7");
      StrBuilder strBuilder3 = strBuilder1.replace(0, 0, "Z7oWD&K0=#");
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "bp$\"My6");
      StrBuilder strBuilder2 = strBuilder0.replaceAll(strMatcher0, "");
      int int0 = strBuilder0.size();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      char[] charArray0 = new char[7];
      charArray0[0] = '5';
      charArray0[1] = ')';
      charArray0[2] = 'f';
      charArray0[3] = 'p';
      charArray0[4] = '[';
      charArray0[5] = '(';
      charArray0[6] = ']';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 1334, 0);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(108);
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      boolean boolean0 = strBuilder1.contains(strMatcher0);
      char[] charArray0 = new char[8];
      charArray0[0] = '2';
      charArray0[1] = 'G';
      charArray0[2] = 'x';
      charArray0[3] = 'r';
      charArray0[4] = 'F';
      charArray0[5] = '%';
      charArray0[6] = 'Q';
      charArray0[7] = '>';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder2 = strBuilder0.appendPadding((-3582), ' ');
      int int0 = strBuilder0.indexOf("Wf!M>Z#XO:WdaVlw|");
      StrBuilder strBuilder3 = new StrBuilder("");
      int int1 = strBuilder3.indexOf(strMatcher0, 108);
      StrBuilder strBuilder4 = strBuilder0.append(strBuilder3);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder0.equals((StrBuilder) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-323));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[8];
      charArray0[0] = '[';
      charArray0[1] = 'K';
      charArray0[2] = 'k';
      charArray0[3] = '5';
      charArray0[4] = 'p';
      charArray0[5] = '[';
      strBuilder_StrBuilderReader0.mark((-635));
      charArray0[6] = '\"';
      charArray0[7] = '\'';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 1277, 0);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = strBuilder0.midString(0, 0);
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('z', 'z');
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      int int0 = strBuilder1.indexOf((StrMatcher) strMatcher_TrimMatcher0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[0];
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset(charArray0);
      Consumer<Integer> consumer0 = (Consumer<Integer>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      strBuilder_StrBuilderTokenizer0.forEachRemaining(consumer0);
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight(0, 0, 'z');
      StrTokenizer strTokenizer1 = strBuilder_StrBuilderTokenizer0.setIgnoreEmptyTokens(true);
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize((char[]) null, 0, 0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      String string1 = strBuilder1.substring(0, 0);
      StrBuilder strBuilder3 = strBuilder1.appendFixedWidthPadRight((Object) list0, 0, 'C');
      StrBuilder strBuilder4 = new StrBuilder("");
      StrBuilder strBuilder5 = strBuilder1.append((Object) strBuilder4);
      String string2 = strBuilder3.substring(0);
      // Undeclared exception!
      try { 
        strBuilder0.append("", (-1), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("|x(r%&gA");
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      int int0 = strBuilder0.indexOf((StrMatcher) strMatcher_NoMatcher0);
      StrBuilder strBuilder1 = strBuilder0.appendPadding(1, '>');
      char[] charArray0 = new char[4];
      charArray0[0] = '>';
      charArray0[1] = '>';
      charArray0[2] = '>';
      charArray0[3] = '9';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder2 = strBuilder0.replaceFirst('>', '>');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip((-1));
      char[] charArray1 = new char[8];
      charArray1[0] = '>';
      charArray1[1] = '>';
      charArray1[2] = '>';
      charArray1[3] = '>';
      charArray1[4] = '>';
      charArray1[5] = '>';
      charArray1[6] = '>';
      charArray1[7] = '>';
      StrBuilder strBuilder3 = strBuilder0.append(charArray1);
      boolean boolean0 = strBuilder0.equals((Object) strBuilder2);
      StrBuilder strBuilder4 = strBuilder2.replaceFirst("|x(r%&gA", "|x(r%&gA");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      String string0 = "{<\\<,3JT";
      StrBuilder strBuilder5 = strBuilder2.appendWithSeparators((Collection) linkedList0, "{<<,3JT");
      int int1 = 4;
      int int2 = 0;
      // Undeclared exception!
      try { 
        strBuilder2.substring(4, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-869));
      StrBuilder strBuilder1 = strBuilder0.append((long) (-869));
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      StrBuilder strBuilder3 = strBuilder2.deleteAll('Z');
      char[] charArray0 = strBuilder0.getChars((char[]) null);
      StrBuilder strBuilder4 = strBuilder0.reverse();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      linkedList0.replaceAll(unaryOperator0);
      LinkedList<Object> linkedList1 = new LinkedList<Object>(linkedList0);
      StrBuilder strBuilder5 = strBuilder1.appendWithSeparators((Collection) linkedList1, (String) null);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("sex )6v");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoredMatcher(strMatcher0);
      char[] charArray0 = new char[7];
      charArray0[0] = 'H';
      charArray0[1] = 'T';
      charArray0[2] = 'd';
      charArray0[3] = ';';
      charArray0[4] = '{';
      charArray0[5] = 'q';
      charArray0[6] = '9';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 1553, 115);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "#8kpR");
      StrBuilder strBuilder2 = strBuilder1.replaceAll("sQa", (String) null);
      StrBuilder strBuilder3 = strBuilder0.replaceFirst('1', '1');
      // Undeclared exception!
      try { 
        strBuilder1.insert(1553, 9);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1553
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.reverse();
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      char char0 = 'n';
      StrMatcher strMatcher0 = StrMatcher.charMatcher('n');
      int int0 = 2323;
      // Undeclared exception!
      try { 
        strBuilder1.replace((StrMatcher) strMatcher_NoMatcher0, "org.apache.commons.lang.ArrayUtils", 4, 4, 2323);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.trim();
      int int0 = strBuilder1.indexOf((StrMatcher) null, (-2204));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance();
      StrTokenizer strTokenizer1 = StrTokenizer.getCSVInstance("");
      StrBuilder strBuilder2 = strBuilder0.replaceFirst(strMatcher0, "o6.d~LhIE=8bH!JE)aK");
      String string0 = strBuilder0.rightString((-3429));
      StrBuilder strBuilder3 = strBuilder0.append((double) (-3429));
      String string1 = strBuilder1.getNewLineText();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder3.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      // Undeclared exception!
      try { 
        strBuilder2.validateRange((-3429), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3429
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Object[]) null, "The Array must not be null");
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrMatcher");
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      StringBuffer stringBuffer0 = new StringBuffer("org.apache.commons.lang.text.StrMatcher");
      StrBuilder strBuilder2 = strBuilder1.append(stringBuffer0);
      StrBuilder strBuilder3 = strBuilder1.replaceAll("org.apache.commons.lang.text.StrMatcher", "NVbR#fHf.pU");
      String string0 = strBuilder1.leftString(0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
      char[] charArray0 = new char[9];
      charArray0[0] = '';
      charArray0[1] = 'L';
      charArray0[2] = 'R';
      charArray0[3] = 'h';
      charArray0[4] = 'S';
      charArray0[5] = 'y';
      charArray0[6] = 'b';
      charArray0[7] = 'C';
      charArray0[8] = 'V';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder4 = strBuilder0.replace(strMatcher0, "", 0, 0, (-2856));
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[5];
      charArray0[0] = '^';
      StrBuilder strBuilder1 = strBuilder0.replaceAll("", (String) null);
      charArray0[1] = '3';
      charArray0[2] = 'Y';
      charArray0[3] = 'n';
      charArray0[4] = '$';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);
      StringBuffer stringBuffer1 = stringBuffer0.append(1140.595F);
      int int0 = 57;
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 57, 57);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.indexOf("!/E@TRlj!eHG_1j");
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      String string0 = "t";
      StrBuilder strBuilder0 = new StrBuilder("t");
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("t");
      strBuilder0.size = 1908;
      String string1 = "b;`HPQmaiXBF]tk3vn";
      // Undeclared exception!
      try { 
        strBuilder0.replaceAll("b;`HPQmaiXBF]tk3vn", "set() is unsupported");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 33
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = new StrBuilder();
      char char0 = '^';
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((Object) strBuilder1, 3, '^');
      StrBuilder strBuilder3 = new StrBuilder(3);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder3.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      int int1 = strBuilder0.hashCode();
      StrMatcher strMatcher0 = null;
      int int2 = 0;
      int int3 = strBuilder3.lastIndexOf((StrMatcher) null, 0);
      StrBuilder strBuilder4 = strBuilder0.replaceFirst((StrMatcher) null, (String) null);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1), 1857.64F);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("P3G3*B_");
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      char char0 = 'R';
      String string0 = "Index: ";
      // Undeclared exception!
      try { 
        strBuilder0.insert(53, 53);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 53
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = new StrBuilder();
      char char0 = '^';
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((Object) strBuilder1, (-21), '^');
      StrBuilder strBuilder3 = new StrBuilder((-21));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder3.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      StrMatcher strMatcher0 = null;
      int int1 = 0;
      int int2 = strBuilder3.lastIndexOf((StrMatcher) null, 0);
      StrBuilder strBuilder4 = strBuilder0.replaceFirst((StrMatcher) null, (String) null);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1), 1857.64F);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      int int0 = 5;
      StrBuilder strBuilder0 = new StrBuilder(5);
      Object[] objectArray0 = new Object[6];
      Object object0 = new Object();
      objectArray0[0] = object0;
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) strBuilder0;
      objectArray0[3] = (Object) strBuilder0;
      objectArray0[4] = (Object) strBuilder0;
      objectArray0[5] = (Object) strBuilder0;
      String string0 = "java.class.path";
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "java.class.path");
      // Undeclared exception!
      try { 
        strBuilder1.append("~SiEOFxHR", 5, 5);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 3;
      // Undeclared exception!
      try { 
        strBuilder0.insert(3, (float) 3);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.insert(1042, 1042);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1042
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      String string0 = "AIX";
      StrBuilder strBuilder0 = new StrBuilder("AIX");
      int int0 = 75;
      int int1 = strBuilder0.indexOf('\\', 75);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("AIX");
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      int int2 = strBuilder0.indexOf(strMatcher0);
      StrMatcher strMatcher1 = StrMatcher.charMatcher('\\');
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1), 977.5975989784);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("");
      char[] charArray0 = new char[5];
      charArray0[0] = ')';
      charArray0[1] = 'I';
      charArray0[2] = 'm';
      charArray0[3] = '~';
      charArray0[4] = ',';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 1, 9);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 9
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2779));
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder0;
      Object object0 = new Object();
      objectArray0[2] = object0;
      objectArray0[3] = (Object) strBuilder0;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrBuilder strBuilder2 = strBuilder1.append((float) (-2779));
      StrBuilder strBuilder3 = strBuilder2.append(0L);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      int int0 = strBuilder1.lastIndexOf('o', 1);
      char[] charArray0 = new char[2];
      charArray0[0] = 'o';
      charArray0[1] = 'o';
      strBuilder1.buffer = charArray0;
      char char0 = 'x';
      // Undeclared exception!
      try { 
        strBuilder0.indexOf('x', (-2779));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      int int1 = 116;
      // Undeclared exception!
      try { 
        strBuilder0.insert(116, false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 116
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = 4;
      int int1 = 1;
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(4, 1, ']');
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) strBuilder_StrBuilderReader0;
      String string0 = null;
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators(objectArray0, (String) null);
      String string1 = strBuilder1.substring(1, 1);
      StrBuilder strBuilder3 = strBuilder1.deleteFirst('l');
      StrBuilder strBuilder4 = strBuilder1.append((double) 4);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder4.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      // Undeclared exception!
      try { 
        strBuilder3.appendFixedWidthPadRight(object0, 4, ']');
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      String string0 = null;
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      // Undeclared exception!
      try { 
        strBuilder0.charAt(4);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 4
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrMatcher strMatcher0 = StrMatcher.charMatcher('X');
      char[] charArray0 = new char[3];
      StrMatcher strMatcher1 = StrMatcher.charMatcher('R');
      StrBuilder strBuilder1 = strBuilder0.appendPadding(3755, 'X');
      charArray0[0] = 'X';
      charArray0[1] = 'X';
      charArray0[2] = 'X';
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher(charArray0);
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.insert(5, true);
      char char0 = strBuilder2.charAt(3);
      int int0 = strBuilder0.hashCode();
      char[] charArray1 = new char[3];
      charArray1[0] = 'X';
      charArray1[1] = 'X';
      charArray1[2] = 'X';
      StrBuilder strBuilder3 = strBuilder0.insert(0, charArray1);
      int int1 = strBuilder2.lastIndexOf('X');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      String string0 = "org.apache.commons.lang.text.StrMatcher$CharMatcher";
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrMatcher$CharMatcher");
      char[] charArray0 = strBuilder0.toCharArray();
      int int0 = strBuilder0.capacity();
      int int1 = 2117;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string1 = "StrTokenizer[not tokenized yet]";
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strBuilder_StrBuilderTokenizer0, "StrTokenizer[not tokenized yet]");
      String string2 = strBuilder0.midString(2117, (-269));
      StrBuilder strBuilder2 = strBuilder0.ensureCapacity(2117);
      String string3 = "pWnh*9 S\\}<;(sXtn3C";
      int int2 = 412;
      // Undeclared exception!
      try { 
        strBuilder2.insert(412, 'D');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 412
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.indexOf((String) null, 1141);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[5];
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("");
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterMatcher(strMatcher_StringMatcher0);
      charArray0[0] = '5';
      charArray0[1] = 'r';
      charArray0[2] = 'L';
      charArray0[3] = 'U';
      charArray0[4] = '9';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, (-1), 1141);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(2494L);
      int int1 = strBuilder_StrBuilderReader0.read(charArray0);
      strBuilder_StrBuilderReader0.mark(1141);
      StrTokenizer strTokenizer1 = strBuilder0.asTokenizer();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("", (-1), 1141);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(833);
      int int0 = 0;
      String string0 = strBuilder0.midString((-332), 833);
      StrBuilder strBuilder1 = strBuilder0.replace(0, 833, (String) null);
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      int int1 = strBuilder1.indexOf(strMatcher0, 0);
      StrBuilder strBuilder2 = strBuilder0.appendNull();
      StrBuilder strBuilder3 = new StrBuilder("(3E>Qf%Ch/AT");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder3.new StrBuilderWriter();
      char[] charArray0 = new char[4];
      charArray0[0] = 'L';
      charArray0[1] = '>';
      charArray0[3] = '$';
      // Undeclared exception!
      try { 
        strBuilder3.append(strBuilder2, 0, (-175));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.insert(0, "java.library.path");
      char[] charArray0 = new char[1];
      charArray0[0] = '+';
      StrBuilder strBuilder2 = strBuilder1.append(charArray0);
      StrBuilder strBuilder3 = strBuilder0.replaceAll("java.library.path", (String) null);
      String string0 = strBuilder1.getNewLineText();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder3.new StrBuilderWriter();
      char[] charArray1 = new char[8];
      charArray1[0] = '2';
      charArray1[1] = 'C';
      charArray1[2] = 'w';
      charArray1[3] = 'R';
      charArray1[4] = 'j';
      charArray1[5] = '|';
      charArray1[6] = 'u';
      charArray1[7] = '0';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray1, (-2658), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      int int0 = 5;
      StrBuilder strBuilder0 = new StrBuilder(5);
      StrBuilder strBuilder1 = strBuilder0.append("$%w|q>op%k");
      boolean boolean0 = strBuilder0.contains('H');
      StrBuilder strBuilder2 = new StrBuilder("bw[>");
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("r)U");
      int int1 = strBuilder2.indexOf((StrMatcher) strMatcher_StringMatcher0, 5);
      boolean boolean1 = strBuilder0.equalsIgnoreCase(strBuilder2);
      // Undeclared exception!
      try { 
        strBuilder2.insert((-2778), "bw[>");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2778
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('_');
      StrBuilder strBuilder2 = strBuilder0.insert(0, "K:$)(\u0005%uI");
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      int int0 = strBuilder0.capacity();
      StrBuilder strBuilder3 = strBuilder0.deleteAll("K:$)(\u0005%uI");
      // Undeclared exception!
      try { 
        strBuilder3.setCharAt((-224), '[');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -224
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-3290));
      char[] charArray0 = new char[9];
      charArray0[0] = '\"';
      charArray0[1] = '$';
      charArray0[2] = '?';
      charArray0[3] = ' ';
      charArray0[4] = 'D';
      charArray0[5] = 'Z';
      charArray0[6] = '1';
      charArray0[7] = '';
      charArray0[8] = 'G';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0, 0, 0);
      // Undeclared exception!
      try { 
        strBuilder0.append("aReyd}r1]g]Nc#|G1iz", (-711), 667);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("[h\"b>O\"S2;");
      int int0 = 48;
      String string0 = strBuilder0.leftString(48);
      char[] charArray0 = new char[5];
      charArray0[0] = '1';
      charArray0[1] = '[';
      charArray0[2] = '*';
      charArray0[3] = 'v';
      charArray0[4] = 'r';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, (-3188), (-3188));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -3188
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.indexOf('5');
      // Undeclared exception!
      try { 
        strBuilder0.append("", (-1), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("[h\"b>O\"S2;");
      int int0 = 48;
      String string0 = strBuilder0.leftString(48);
      char[] charArray0 = new char[5];
      charArray0[0] = '1';
      charArray0[1] = '[';
      charArray0[2] = '*';
      charArray0[3] = '[';
      charArray0[4] = 'r';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, (-3188), (-3188));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -3188
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      String string0 = strBuilder0.substring(0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[6];
      charArray0[0] = 'C';
      charArray0[1] = 'Y';
      charArray0[2] = '?';
      char char0 = 'w';
      charArray0[3] = 'w';
      charArray0[4] = 'd';
      charArray0[5] = 'b';
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance(charArray0);
      String string0 = "";
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "");
      String string1 = strBuilder1.rightString(1);
      int int0 = (-1477);
      // Undeclared exception!
      try { 
        strBuilder1.setLength((-1477));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1477
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.contains('q');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setQuoteMatcher(strMatcher0);
      char[] charArray0 = new char[7];
      charArray0[0] = 'q';
      charArray0[1] = 'q';
      charArray0[2] = 'X';
      charArray0[3] = 'q';
      charArray0[4] = 'q';
      charArray0[5] = 'q';
      charArray0[6] = 'q';
      int int0 = strMatcher0.isMatch(charArray0, 0, 0, 0);
      int int1 = strBuilder0.lastIndexOf(strMatcher0, 0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("3VvS?qo (A\"D");
      int int0 = strBuilder0.capacity();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      int int1 = strBuilder0.lastIndexOf(strMatcher0);
      StrBuilder strBuilder1 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, (-366), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(380);
      Writer writer0 = strBuilder0.asWriter();
      String string0 = strBuilder0.toString();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
      StrBuilder strBuilder1 = strBuilder0.setNullText("-tLxb]q 5mF");
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      String string0 = "y4uu-R+?}K?V4dw";
      StrBuilder strBuilder0 = new StrBuilder("y4uu-R+?}K?V4dw");
      StrBuilder strBuilder1 = new StrBuilder();
      int int0 = 0;
      StrBuilder strBuilder2 = strBuilder1.ensureCapacity(0);
      int int1 = 0;
      int int2 = (-1203);
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, 0, (-1203));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.delete(0, 0);
      StringBuffer stringBuffer0 = new StringBuffer("(\"@r'*p");
      // Undeclared exception!
      try { 
        strBuilder1.append(stringBuffer0, 1013, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.setLength(0);
      char char0 = '/';
      StrBuilder strBuilder2 = strBuilder1.deleteAll("");
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadRight((Object) strBuilder1, 0, '/');
      int int1 = 0;
      StrBuilder strBuilder4 = strBuilder3.insert(0, (Object) "end < start");
      char char1 = '?';
      StrBuilder strBuilder5 = strBuilder0.append(0);
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("");
      // Undeclared exception!
      try { 
        strBuilder5.validateIndex((-2963));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2963
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((-1308), (-469), '+');
      StrBuilder strBuilder2 = strBuilder0.append((-924.1867F));
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setLength(0);
      StrBuilder strBuilder2 = new StrBuilder();
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder2);
      int int0 = 1983;
      // Undeclared exception!
      try { 
        strBuilder0.substring(1);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1288));
      boolean boolean0 = strBuilder0.contains('q');
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(809);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceAll((StrMatcher) strMatcher_NoMatcher0, "");
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      int int0 = strBuilder0.capacity();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
      Writer writer0 = strBuilder2.asWriter();
      StrBuilder strBuilder3 = strBuilder0.replaceAll('k', 'k');
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      String string0 = strBuilder0.leftString(102);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("', has a length less than 2");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(0);
      int int0 = strBuilder0.lastIndexOf("=qJf/Vx", 1424);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[3];
      charArray0[0] = 'H';
      charArray0[1] = '(';
      charArray0[2] = ',';
      strBuilder_StrBuilderWriter0.write(charArray0, 0, 0);
      strBuilder_StrBuilderWriter0.close();
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1);
      char[] charArray0 = new char[5];
      StrBuilder strBuilder1 = strBuilder0.append(charArray0, 1, 0);
      charArray0[0] = 'G';
      charArray0[1] = '-';
      charArray0[2] = '`';
      charArray0[3] = ',';
      charArray0[4] = '\'';
      char[] charArray1 = strBuilder0.getChars(charArray0);
      Reader reader0 = strBuilder0.asReader();
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoreEmptyTokens(true);
      StrBuilder strBuilder1 = strBuilder0.append('[');
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      String string0 = strBuilder0.substring(0, 0);
      int int0 = strBuilder0.indexOf(strMatcher0, (-1580));
      int int1 = 271;
      char char0 = 'y';
      char[] charArray0 = new char[4];
      charArray0[0] = '[';
      charArray0[1] = 'y';
      charArray0[2] = '[';
      charArray0[3] = 'y';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(787, (-2760), charArray0, 2);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2760
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[0];
      StrBuilder strBuilder1 = strBuilder0.insert(0, "");
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("");
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("c6K':,{r0");
      StrMatcher strMatcher2 = StrMatcher.stringMatcher("");
      StrMatcher strMatcher3 = StrMatcher.charSetMatcher("c6K':,{r0");
      int int1 = strBuilder1.lastIndexOf(strMatcher0, (-1497));
      // Undeclared exception!
      try { 
        strBuilder0.getChars(0, 0, charArray0, (-1497));
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "@,)`w%w5In]u?h{{6/";
      StrBuilder strBuilder1 = strBuilder0.setNullText("@,)`w%w5In]u?h{{6/");
      StrBuilder strBuilder2 = strBuilder0.appendNewLine();
      StrBuilder strBuilder3 = strBuilder2.ensureCapacity(0);
      StrBuilder strBuilder4 = strBuilder2.appendFixedWidthPadLeft((Object) strBuilder3, 1, '#');
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder2, (-1589), (-1589));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[3];
      charArray0[0] = '';
      charArray0[1] = '=';
      strBuilder0.size = 1489;
      charArray0[2] = 'I';
      StrBuilder strBuilder1 = strBuilder0.setCharAt(4, 'B');
      // Undeclared exception!
      try { 
        strBuilder0.insert(4, charArray0, 32, 4);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("UbE?9e>e");
      // Undeclared exception!
      try { 
        strBuilder0.replace(994, 994, "UbE?9e>e");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.append(0.0);
      Object object0 = null;
      String string1 = "Solaris";
      StrBuilder strBuilder2 = strBuilder1.deleteFirst("Solaris");
      char char0 = 'r';
      // Undeclared exception!
      try { 
        strBuilder1.appendFixedWidthPadRight((Object) null, 108, 'r');
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1975);
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 1975, 1975);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      String string0 = "set() is unsupported";
      StrBuilder strBuilder0 = new StrBuilder("set() is unsupported");
      int int0 = 1658;
      strBuilder0.size = 1658;
      // Undeclared exception!
      try { 
        strBuilder0.insert(1658, (Object) "set() is unsupported");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("/@cI");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[4];
      strBuilder_StrBuilderReader0.reset();
      charArray0[0] = 'x';
      charArray0[1] = '\'';
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      int int0 = strBuilder_StrBuilderReader0.read(charBuffer0);
      charArray0[2] = 'Y';
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("/@cI", "\"#>jz?Wca;-H");
      char char0 = 't';
      // Undeclared exception!
      try { 
        charBuffer0.get();
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.vm.version");
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity((-1060));
      int int0 = (-2927);
      StrBuilder strBuilder2 = strBuilder0.delete(0, 0);
      StrBuilder strBuilder3 = strBuilder2.replaceFirst("/y", "/y");
      // Undeclared exception!
      try { 
        strBuilder1.insert((-2927), (Object) "java.vm.version");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2927
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = new StrBuilder("1.2");
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1, 0, 0);
      StrBuilder strBuilder3 = strBuilder2.insert(0, (Object) "1.2");
      String string0 = strBuilder0.getNewLineText();
      int int0 = strBuilder1.indexOf('j', 0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      int int0 = (-12);
      StrBuilder strBuilder0 = new StrBuilder((-12));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int1 = strBuilder_StrBuilderReader0.read();
      int int2 = strBuilder_StrBuilderReader0.read();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char char0 = '%';
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterChar('%');
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      int int3 = (-3664);
      // Undeclared exception!
      try { 
        strBuilder0.delete(0, (-3664));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      int int0 = 3;
      StrBuilder strBuilder0 = new StrBuilder(3);
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(3);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(809);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
      StrBuilder strBuilder2 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      StrBuilder strBuilder3 = strBuilder1.replaceAll('e', 'P');
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = 9;
      char[] charArray0 = new char[2];
      charArray0[0] = '&';
      charArray0[1] = '\"';
      int int1 = (-1813);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, (-1813), 779);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("F`[6Q|h&FA1QZ4!qK");
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      Writer writer1 = strBuilder_StrBuilderWriter0.append((CharSequence) "F`[6Q|h&FA1QZ4!qK", 0, 0);
      strBuilder_StrBuilderWriter0.write((-271));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      strBuilder_StrBuilderReader0.reset();
      boolean boolean0 = strBuilder0.startsWith("F`[6Q|h&FA1QZ4!qK");
      int int0 = strBuilder0.length();
      StrBuilder strBuilder1 = strBuilder0.append('$');
      char[] charArray0 = new char[5];
      charArray0[0] = 'D';
      charArray0[1] = '(';
      charArray0[2] = 'x';
      charArray0[3] = '5';
      charArray0[4] = '-';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, (-271), (-271));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('\'');
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0, 0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      char[] charArray0 = new char[6];
      charArray0[0] = '\'';
      charArray0[1] = '\'';
      charArray0[2] = '*';
      charArray0[3] = 'p';
      charArray0[4] = '\'';
      charArray0[5] = '\'';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 0, 2185);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      int int0 = 57;
      StrMatcher strMatcher0 = StrMatcher.stringMatcher((String) null);
      String string0 = "1t~1dy J9xZi8L1JSC";
      StrBuilder strBuilder1 = strBuilder0.append("1t~1dy J9xZi8L1JSC");
      int int1 = 683;
      char[] charArray0 = new char[2];
      charArray0[0] = 'N';
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight(57, 57, 'N');
      charArray0[1] = 'M';
      // Undeclared exception!
      try { 
        strBuilder1.getChars(683, 57, charArray0, 57);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.charAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      Object[] objectArray0 = new Object[0];
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      int int0 = 0;
      char char0 = 'e';
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft(0, 0, 'e');
      StringBuffer stringBuffer0 = null;
      try {
        stringBuffer0 = new StringBuffer((-2665));
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("StrTokenizer");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst((StrMatcher) strMatcher_NoMatcher0);
      Reader reader0 = strBuilder1.asReader();
      StrBuilder strBuilder2 = strBuilder0.appendPadding(918, 'S');
      StrBuilder strBuilder3 = strBuilder2.deleteAll('S');
      int int0 = strBuilder0.indexOf('L', 0);
      StrBuilder strBuilder4 = strBuilder2.appendFixedWidthPadLeft(918, (-1), 'G');
      StrBuilder strBuilder5 = strBuilder2.replaceAll('-', 'G');
      StrBuilder strBuilder6 = strBuilder2.setNewLineText("StrTokenizer");
      StrBuilder strBuilder7 = strBuilder4.replaceAll((StrMatcher) strMatcher_NoMatcher0, "StrTokenizer");
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid startIndex: ");
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      strBuilder0.validateIndex(0);
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder strBuilder2 = strBuilder0.setCharAt(0, 'L');
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadLeft(0, 0, 'M');
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.next();
      boolean boolean0 = linkedList0.add((Object) "Lnvalid");
      boolean boolean1 = linkedList0.add((Object) strBuilder3);
      StrBuilder strBuilder4 = strBuilder0.appendWithSeparators((Collection) linkedList0, "n;");
      String string0 = strBuilder2.getNullText();
      StrBuilder strBuilder5 = strBuilder0.deleteFirst((StrMatcher) null);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.append("", 117, 117);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = '}';
      String string0 = "java.specification.vendor";
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) "java.specification.vendor", 101, '{');
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((Object) null, (-3695), '}');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      StrBuilder strBuilder3 = strBuilder0.replaceFirst('r', '}');
      // Undeclared exception!
      try { 
        strBuilder3.validateIndex((-3695));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3695
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(true);
      StrBuilder strBuilder2 = strBuilder0.deleteFirst((StrMatcher) null);
      StrBuilder strBuilder3 = strBuilder0.append("org.apache.commons.lang.text.StrMatcher$CharSetMatcher", 2, 2);
      StrBuilder strBuilder4 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder4.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer", 686, (-1129));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      int int0 = 688;
      // Undeclared exception!
      try { 
        strBuilder1.insert(688, (-1L));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 688
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1945));
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('', '*');
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(102);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('S');
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) strBuilder1;
      objectArray0[1] = (Object) strBuilder1;
      objectArray0[2] = (Object) strBuilder0;
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators(objectArray0, "V$tG9xY*\"j1\"SI9mN63");
      String string0 = strBuilder0.rightString(2946);
      char[] charArray0 = strBuilder1.toCharArray();
      // Undeclared exception!
      try { 
        strBuilder1.substring(2946);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("}F");
      StrBuilder strBuilder1 = strBuilder0.replace((StrMatcher) strMatcher_StringMatcher0, "C[ayve@", 0, 0, 2068);
      StrBuilder strBuilder2 = new StrBuilder();
      StrBuilder strBuilder3 = strBuilder2.append((Object) null);
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder4 = strBuilder3.setNewLineText(".");
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      int int0 = 117;
      StrBuilder strBuilder0 = new StrBuilder(117);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      String string0 = "u^R=tpd(kZ4n5-/Pd";
      StrBuilder strBuilder1 = strBuilder0.deleteAll("u^R=tpd(kZ4n5-/Pd");
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Collection) null, "u^R=tpd(kZ4n5-/Pd");
      StrBuilder strBuilder3 = strBuilder0.append((StrBuilder) null);
      LinkedList<StrBuilder> linkedList0 = new LinkedList<StrBuilder>();
      StrBuilder strBuilder4 = strBuilder3.appendWithSeparators((Collection) linkedList0, "u^R=tpd(kZ4n5-/Pd");
      Writer writer0 = strBuilder3.asWriter();
      // Undeclared exception!
      try { 
        strBuilder4.insert(117, "u^R=tpd(kZ4n5-/Pd");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 117
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      String string0 = "HP-UX";
      StrBuilder strBuilder0 = new StrBuilder("HP-UX");
      StrBuilder strBuilder1 = strBuilder0.setNullText("HP-UX");
      StrBuilder strBuilder2 = strBuilder1.setLength(102);
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      char[] charArray0 = new char[6];
      charArray0[0] = '6';
      charArray0[1] = 'K';
      charArray0[2] = 'm';
      charArray0[3] = '>';
      charArray0[4] = '[';
      charArray0[5] = '<';
      strBuilder2.getChars(102, 102, charArray0, 2);
      StrBuilder strBuilder3 = strBuilder2.deleteFirst(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder2.insert(298, (long) 102);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 298
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(", '");
      char[] charArray0 = new char[2];
      charArray0[0] = 'n';
      charArray0[1] = 'R';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StrBuilder strBuilder2 = strBuilder0.setNullText("");
      String string0 = strBuilder2.rightString(0);
      int int0 = strBuilder2.lastIndexOf("");
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('D');
      StrBuilder strBuilder3 = strBuilder2.replaceAll((StrMatcher) strMatcher_CharMatcher0, "");
      StrBuilder strBuilder4 = strBuilder0.append(false);
      StrBuilder strBuilder5 = strBuilder1.append("");
      StrBuilder strBuilder6 = strBuilder2.reverse();
      boolean boolean0 = strBuilder1.contains("]~ i):e$TDHWqp");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder5.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(586);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1710);
      StrBuilder strBuilder1 = strBuilder0.insert(0, 't');
      // Undeclared exception!
      try { 
        strBuilder1.substring((-3893));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3893
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1675);
      char[] charArray0 = new char[4];
      charArray0[0] = 'u';
      charArray0[1] = '\'';
      charArray0[2] = '*';
      charArray0[3] = 'p';
      // Undeclared exception!
      try { 
        strBuilder0.insert(1675, charArray0, 1675, 1675);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1675
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.ext.dirs");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[5];
      charArray0[0] = ',';
      charArray0[1] = 'E';
      charArray0[2] = '-';
      charArray0[3] = 'V';
      charArray0[4] = '_';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0);
      strBuilder_StrBuilderReader0.reset();
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      int int0 = strBuilder0.capacity();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[2];
      charArray0[0] = '~';
      Writer writer0 = strBuilder_StrBuilderWriter0.append('~');
      charArray0[1] = '}';
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('E');
      strBuilder_StrBuilderWriter0.write(charArray0);
      StrBuilder strBuilder2 = strBuilder0.append((-5454));
      strBuilder_StrBuilderWriter0.close();
      boolean boolean0 = strBuilder0.isEmpty();
      StrBuilder strBuilder3 = strBuilder0.append(false);
      char[] charArray1 = strBuilder2.toCharArray();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterString("");
      StrTokenizer strTokenizer1 = strBuilder_StrBuilderTokenizer0.reset("");
      StrBuilder strBuilder4 = strBuilder2.appendWithSeparators((Iterator) strTokenizer1, "Cv V1IG{F>");
      strBuilder_StrBuilderWriter0.close();
      StrBuilder strBuilder5 = strBuilder3.append(0.0F);
      StrBuilder strBuilder6 = strBuilder5.clear();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      // Undeclared exception!
      try { 
        strBuilder3.appendFixedWidthPadRight(object0, 32, '}');
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("rE&&:6(-,n<p");
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("AIX");
      char[] charArray0 = new char[5];
      charArray0[0] = 'y';
      charArray0[1] = '\"';
      charArray0[2] = '[';
      charArray0[3] = 'G';
      charArray0[4] = 'S';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      int int0 = strBuilder0.indexOf(strMatcher0, 0);
      // Undeclared exception!
      try { 
        strBuilder1.setLength((-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.lastIndexOf("", 0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[8];
      charArray0[0] = '}';
      charArray0[1] = '&';
      charArray0[2] = 'r';
      charArray0[3] = 'X';
      charArray0[4] = 'o';
      charArray0[5] = 'o';
      charArray0[6] = '!';
      charArray0[7] = '~';
      strBuilder_StrBuilderWriter0.write(charArray0);
      int int1 = strBuilder0.size();
      boolean boolean0 = strBuilder0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      long long0 = 1180L;
      StrBuilder strBuilder1 = strBuilder0.append(1180L);
      int int0 = 434;
      // Undeclared exception!
      try { 
        strBuilder0.insert(434, (double) 1180L);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 434
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      int int1 = 102;
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      char char0 = 'H';
      StrBuilder strBuilder2 = strBuilder1.deleteFirst('H');
      int int2 = (-2552);
      // Undeclared exception!
      try { 
        strBuilder2.replace((-2552), 261, "Joo2SY qJ_");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2552
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('L');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(0L);
      int int0 = strBuilder1.length();
      StringBuffer stringBuffer0 = new StringBuffer(0);
      StrBuilder strBuilder2 = strBuilder1.append(stringBuffer0);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      Object object0 = new Object();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(object0, 2, '.');
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2163));
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrBuilder strBuilder2 = strBuilder0.appendNewLine();
      StrBuilder strBuilder3 = strBuilder1.trim();
      String string0 = strBuilder0.rightString((-2163));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder3.new StrBuilderTokenizer();
      char char0 = ',';
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoredChar(',');
      StrBuilder strBuilder4 = strBuilder3.appendWithSeparators((Iterator) strTokenizer0, "");
      // Undeclared exception!
      try { 
        strBuilder0.validateRange((-2163), (-2163));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2163
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("d;V3)I>'hW3?u2noXh");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip((-524L));
      strBuilder_StrBuilderReader0.close();
      StrBuilder strBuilder1 = strBuilder0.append(0.0F);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("3?K_$AJ,iMtN");
      StrBuilder strBuilder1 = strBuilder0.append(1175);
      LinkedList<StrBuilder> linkedList0 = new LinkedList<StrBuilder>();
      String string0 = "?Xb!O#\"S*%f,1?^Xl";
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Collection) linkedList0, "?Xb!O#\"S*%f,1?^Xl");
      StrBuilder strBuilder3 = strBuilder2.append(strBuilder0);
      StrBuilder strBuilder4 = strBuilder0.appendPadding(1767, 'V');
      char[] charArray0 = strBuilder0.toCharArray(347, 347);
      StrBuilder strBuilder5 = strBuilder4.append((long) 1175);
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      // Undeclared exception!
      try { 
        strBuilder5.replaceAll(strMatcher0, "?Xb!O#\"S*%f,1?^Xl");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-60));
      // Undeclared exception!
      try { 
        strBuilder0.setLength((-60));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -60
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("zhK%vP1,PIhWd)pe3");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(114);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrBuilder strBuilder2 = strBuilder1.replaceFirst(strMatcher0, "");
      StrBuilder strBuilder3 = strBuilder0.minimizeCapacity();
      // Undeclared exception!
      try { 
        strBuilder0.validateRange(116, 116);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.append(false);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.deleteAll("");
      int int1 = 4;
      // Undeclared exception!
      try { 
        strBuilder1.delete(4, (-1843));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 1082;
      // Undeclared exception!
      try { 
        strBuilder0.insert(1082, (String) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1082
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.isEmpty();
      StrBuilder strBuilder1 = strBuilder0.trim();
      int int0 = (-812);
      // Undeclared exception!
      try { 
        strBuilder1.deleteCharAt((-812));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -812
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) strBuilder0, 1, 'S');
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      StrBuilder strBuilder2 = strBuilder0.append('?');
      StrBuilder strBuilder3 = strBuilder1.deleteAll((String) null);
      StrBuilder strBuilder4 = strBuilder1.append((StringBuffer) null, 1, (-753));
      StrBuilder strBuilder5 = strBuilder4.deleteFirst('S');
      int int0 = strBuilder0.capacity();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder4.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setEmptyTokenAsNull(true);
      int int1 = (-1072);
      // Undeclared exception!
      try { 
        strBuilder5.insert((-1072), (Object) strBuilder1);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1072
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 110;
      StrBuilder strBuilder1 = strBuilder0.append(true);
      // Undeclared exception!
      try { 
        strBuilder1.deleteCharAt((-769));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -769
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrBuilder strBuilder2 = strBuilder1.ensureCapacity(0);
      Writer writer0 = strBuilder1.asWriter();
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, 0, (-2282));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-2908);
      StrBuilder strBuilder1 = strBuilder0.append((StringBuffer) null, 102, 2225);
      StrBuilder strBuilder2 = strBuilder0.append("#q");
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('K');
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher("#q");
      StrMatcher strMatcher3 = StrMatcher.stringMatcher((String) null);
      // Undeclared exception!
      try { 
        strBuilder2.replace(strMatcher0, "#q", 116, (-2908), (-3798));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 0, 3);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      int int0 = 375;
      StrBuilder strBuilder0 = new StrBuilder(375);
      StrBuilder strBuilder1 = strBuilder0.append((char[]) null);
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex(375);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 375
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceAll("org.apache.commons.lang.text.StrBuilder", (String) null);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      char[] charArray0 = new char[4];
      charArray0[0] = 'p';
      charArray0[1] = '(';
      charArray0[2] = ']';
      charArray0[3] = 't';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 1152, 1152);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 1152
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(141);
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0, (-291));
      int int1 = strBuilder0.lastIndexOf('o');
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      String string0 = null;
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrBuilder strBuilder2 = strBuilder0.replaceFirst((String) null, (String) null);
      // Undeclared exception!
      try { 
        strBuilder0.replace(819, 819, (String) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrBuilder strBuilder1 = strBuilder0.append((-2077.261134394));
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft(32, 32, 'W');
      StrBuilder strBuilder3 = strBuilder0.trim();
      StrBuilder strBuilder4 = strBuilder1.deleteFirst((StrMatcher) null);
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Writer writer0 = strBuilder0.asWriter();
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendPadding((-700), 'Y');
      boolean boolean0 = strBuilder0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      int int0 = 44;
      StrBuilder strBuilder0 = new StrBuilder(44);
      StrBuilder strBuilder1 = strBuilder0.setNullText("JCp|'v)");
      char[] charArray0 = strBuilder0.toCharArray();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        CharBuffer.allocate((-428));
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      int int0 = 56;
      StrBuilder strBuilder0 = new StrBuilder(56);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('Y');
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "startIndex must be valid");
      char[] charArray0 = new char[8];
      charArray0[0] = 'Y';
      charArray0[1] = 'Y';
      charArray0[2] = 'Y';
      charArray0[3] = '0';
      charArray0[4] = 'Y';
      charArray0[5] = 'Y';
      charArray0[6] = 'Y';
      charArray0[7] = 'Y';
      // Undeclared exception!
      try { 
        strBuilder1.insert(2, charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(433);
      StrBuilder strBuilder1 = strBuilder0.deleteAll('L');
      StrBuilder strBuilder2 = strBuilder0.append("|5");
      Reader reader0 = strBuilder2.asReader();
      boolean boolean0 = strBuilder0.endsWith("");
      String string0 = strBuilder0.getNewLineText();
      int int0 = 1839;
      // Undeclared exception!
      try { 
        strBuilder1.insert(1839, (Object) "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1839
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, (String) null);
      // Undeclared exception!
      try { 
        strBuilder0.insert(1724, (char[]) null, 1724, 1724);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1724
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.append(true);
      StrBuilder strBuilder2 = strBuilder0.append(833L);
      char[] charArray0 = new char[4];
      charArray0[0] = 'i';
      charArray0[1] = '>';
      charArray0[2] = 'r';
      charArray0[3] = 'N';
      StrBuilder strBuilder3 = strBuilder0.append(charArray0);
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      int int0 = strBuilder2.lastIndexOf((StrMatcher) strMatcher_CharSetMatcher0, 1646);
      boolean boolean0 = strBuilder2.endsWith("");
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteAll("}mb?EF~:g?@TF");
      StrBuilder strBuilder2 = strBuilder1.setNullText("Invalid offset: ");
      StrBuilder strBuilder3 = strBuilder0.deleteAll('y');
      int int0 = 2;
      // Undeclared exception!
      try { 
        strBuilder3.insert(2, 'y');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("{}");
      // Undeclared exception!
      try { 
        strBuilder0.insert(1075, (Object) "{}");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1075
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(0, 'n');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("]dNe}DCY+Fq<jPmy=");
      int int0 = 2;
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray(2, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(164);
      String string0 = "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter";
      StrBuilder strBuilder1 = strBuilder0.append("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      // Undeclared exception!
      try { 
        strBuilder0.insert(164, 0L);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 164
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1503);
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex((-277));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -277
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(32);
      int int0 = 57;
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      int int1 = strBuilder0.indexOf(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(57, 32, 'c');
      int int2 = strBuilder1.indexOf(strMatcher0, (-2525));
      int int3 = 826;
      char[] charArray0 = new char[2];
      charArray0[0] = 'c';
      charArray0[1] = 'c';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(57, 622, charArray0, 47);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 622
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("UF]h?;sE8GA");
      char[] charArray0 = new char[1];
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 57);
      charArray0[0] = '-';
      char[] charArray1 = strBuilder0.getChars(charArray0);
      String string0 = strBuilder0.toString();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1), charArray1, 2, 9);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.contains("startIndex must be valid");
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(31, 'L');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 31
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      int int0 = 108;
      StrBuilder strBuilder0 = new StrBuilder(108);
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      char char0 = 'X';
      StrBuilder strBuilder1 = strBuilder0.appendPadding(108, 'X');
      int int1 = strBuilder0.indexOf(strMatcher0, 108);
      boolean boolean0 = strBuilder0.contains("#8 s");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher1 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      StrBuilder strBuilder2 = strBuilder1.minimizeCapacity();
      StrBuilder strBuilder3 = strBuilder2.insert(0, (char[]) null);
      // Undeclared exception!
      try { 
        strBuilder0.replace(strMatcher1, "Y_Ki/!6`5${`h\"", (-2921), (-1), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2921
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.append(true);
      StrBuilder strBuilder2 = strBuilder1.append(strBuilder0, 0, 0);
      String string0 = null;
      StrBuilder strBuilder3 = strBuilder1.replaceFirst((String) null, "startIndex must be valid");
      int int0 = 0;
      Object object0 = null;
      StrBuilder strBuilder4 = strBuilder1.insert(0, (Object) null);
      StrBuilder strBuilder5 = strBuilder1.appendPadding(0, 'Y');
      // Undeclared exception!
      try { 
        strBuilder3.delete(3, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendPadding(3743, '\'');
      String string0 = strBuilder0.toString();
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(7);
      String string0 = strBuilder0.rightString(Integer.MAX_VALUE);
      StrBuilder strBuilder1 = new StrBuilder("");
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, Integer.MAX_VALUE, 210);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("1.6");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[2];
      charArray0[0] = 'O';
      charArray0[1] = ';';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 2003, 0);
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "1.6");
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer1 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder strBuilder2 = strBuilder0.clear();
      // Undeclared exception!
      try { 
        strBuilder2.substring(4291, 4291);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      // Undeclared exception!
      try { 
        strBuilder0.validateRange(793, 793);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("Urm`3sy");
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "");
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("");
      int int0 = strBuilder0.lastIndexOf('-');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrBuilder strBuilder2 = strBuilder1.append(true);
      strBuilder_StrBuilderWriter0.flush();
      Writer writer0 = strBuilder0.asWriter();
      String string0 = strBuilder0.getNewLineText();
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('-');
      boolean boolean0 = strBuilder1.contains(strMatcher0);
      StringBuffer stringBuffer0 = new StringBuffer(0);
      StrBuilder strBuilder3 = strBuilder1.append(stringBuffer0);
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      int int0 = 2520;
      char[] charArray0 = new char[0];
      strBuilder_StrBuilderWriter0.write(charArray0);
      // Undeclared exception!
      try { 
        strBuilder0.getChars(2520, (-1289), charArray0, (-1108));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1289
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder();
      int int0 = 0;
      char[] charArray0 = new char[1];
      charArray0[0] = '>';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(0, 0, charArray0, (-2863));
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.insert(0, (-3385L));
      char[] charArray0 = new char[2];
      charArray0[0] = '/';
      charArray0[1] = ')';
      StrBuilder strBuilder2 = strBuilder0.insert(0, charArray0);
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-3100));
      Reader reader0 = strBuilder0.asReader();
      boolean boolean0 = strBuilder0.contains((String) null);
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1555));
      Reader reader0 = strBuilder0.asReader();
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("");
      int int0 = strBuilder0.lastIndexOf('-');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrBuilder strBuilder2 = strBuilder1.append(true);
      StrBuilder strBuilder3 = strBuilder2.appendNewLine();
      strBuilder_StrBuilderWriter0.flush();
      Writer writer0 = strBuilder0.asWriter();
      String string0 = strBuilder0.getNewLineText();
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('-');
      boolean boolean0 = strBuilder1.contains(strMatcher0);
      StringBuffer stringBuffer0 = new StringBuffer(0);
      StrBuilder strBuilder4 = strBuilder1.append(stringBuffer0);
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("startIndex must be valid");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(32, 32, 'm');
      StrBuilder strBuilder2 = strBuilder1.append(strBuilder0);
      StrBuilder strBuilder3 = new StrBuilder("startIndex must be valid");
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrBuilder strBuilder4 = strBuilder3.deleteAll(strMatcher0);
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder3);
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("startIndex must be valid");
      int int0 = strBuilder1.lastIndexOf(strMatcher1, 32);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      StrBuilder strBuilder5 = new StrBuilder();
      boolean boolean1 = linkedList0.remove((Object) strBuilder5);
      StrBuilder strBuilder6 = strBuilder1.appendWithSeparators((Collection) linkedList0, "startIndex must be valid");
      StrBuilder strBuilder7 = strBuilder6.insert(0, 0.0);
      int int1 = strBuilder1.indexOf("");
      StrBuilder strBuilder8 = strBuilder0.deleteFirst(strMatcher1);
      StrBuilder strBuilder9 = strBuilder8.insert(32, "startIndex must be valid");
      boolean boolean2 = strBuilder0.contains(strMatcher1);
      char[] charArray0 = strBuilder6.toCharArray();
      // Undeclared exception!
      try { 
        strBuilder9.append(strBuilder8, (-3387), 1828);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = '=';
      charArray0[1] = '=';
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(", '");
      char[] charArray0 = new char[2];
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      String string0 = strBuilder1.midString(2477, (-3627));
      StrBuilder strBuilder2 = strBuilder0.setNullText("");
      String string1 = strBuilder2.rightString(0);
      int int0 = strBuilder2.lastIndexOf("");
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('\u0000');
      StrBuilder strBuilder3 = strBuilder2.replaceAll((StrMatcher) strMatcher_CharMatcher0, "");
      StrBuilder strBuilder4 = strBuilder0.append(false);
      StrBuilder strBuilder5 = strBuilder1.append("");
      StrBuilder strBuilder6 = strBuilder2.reverse();
      boolean boolean0 = strBuilder1.contains("]~ i):e$TDHWqp");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder5.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(586);
      int int1 = strBuilder4.lastIndexOf((StrMatcher) strMatcher_CharMatcher0);
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(4);
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      StrBuilder strBuilder2 = strBuilder0.append("_");
      int int0 = (-2197);
      int int1 = 1276;
      char[] charArray0 = null;
      // Undeclared exception!
      try { 
        strBuilder0.insert(1276, (char[]) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1276
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      String string0 = "F`[6Q|h&FA1QZ4!qK";
      StrBuilder strBuilder0 = new StrBuilder("F`[6Q|h&FA1QZ4!qK");
      // Undeclared exception!
      try { 
        strBuilder0.substring((-769));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -769
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      String string0 = strBuilder0.getNullText();
      int int0 = 1648;
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft(1648, 1648, 'K');
      String string1 = "";
      StrBuilder strBuilder3 = strBuilder2.deleteFirst("");
      StrBuilder strBuilder4 = strBuilder1.ensureCapacity(1750);
      StrBuilder strBuilder5 = strBuilder1.setLength(1750);
      StrBuilder strBuilder6 = strBuilder5.insert(1648, ' ');
      int int1 = strBuilder2.capacity();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      String string2 = "%:{4L[cS/5Zbya6c ";
      StrBuilder strBuilder7 = strBuilder0.replaceFirst("", "%:{4L[cS/5Zbya6c ");
      StrBuilder strBuilder8 = strBuilder0.appendWithSeparators((Collection) linkedList0, (String) null);
      StrBuilder strBuilder9 = strBuilder8.replaceAll("", "!?@5'jN&:b:]ka");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder8.new StrBuilderReader();
      int int2 = strBuilder_StrBuilderReader0.read();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder3.new StrBuilderTokenizer();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.previous();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("RcI(B0Q|]99E,{}a;6]");
      StrBuilder strBuilder1 = strBuilder0.append("RcI(B0Q|]99E,{}a;6]", 0, 0);
      StrBuilder strBuilder2 = strBuilder0.replaceAll("", "RcI(B0Q|]99E,{}a;6]");
      String string0 = strBuilder2.toString();
      StrBuilder strBuilder3 = strBuilder2.append(strBuilder0);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("RcI(B0Q|]99E,{}a;6]");
      int int0 = strBuilder3.indexOf(strMatcher0);
      Reader reader0 = strBuilder2.asReader();
      int int1 = 1654;
      int int2 = strBuilder2.indexOf('T', 1654);
      int int3 = strBuilder3.indexOf(strMatcher0, 1263);
      StrBuilder strBuilder4 = strBuilder3.appendPadding(0, ']');
      StrBuilder strBuilder5 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder6 = strBuilder3.append((double) (-1));
      String string1 = strBuilder6.leftString(0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[4];
      charArray0[0] = 'T';
      charArray0[1] = 'x';
      charArray0[2] = ']';
      charArray0[3] = ']';
      strBuilder_StrBuilderWriter0.write(charArray0);
      int int4 = strBuilder0.validateRange(0, 0);
      // Undeclared exception!
      try { 
        strBuilder2.toCharArray(281, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Object object0 = new Object();
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = object0;
      objectArray0[2] = (Object) strBuilder0;
      objectArray0[3] = (Object) strBuilder0;
      objectArray0[4] = (Object) strBuilder0;
      objectArray0[5] = (Object) strBuilder0;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "Qc<~w:c*,w)");
      StrBuilder strBuilder2 = strBuilder0.replaceFirst('|', '2');
      StringBuffer stringBuffer0 = strBuilder2.toStringBuffer();
      int int0 = strBuilder2.lastIndexOf('2', 3);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      char[] charArray0 = new char[5];
      charArray0[0] = '2';
      charArray0[1] = 'R';
      charArray0[2] = '2';
      charArray0[3] = 'R';
      charArray0[4] = '2';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 4, (-111));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: -111
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }
}
