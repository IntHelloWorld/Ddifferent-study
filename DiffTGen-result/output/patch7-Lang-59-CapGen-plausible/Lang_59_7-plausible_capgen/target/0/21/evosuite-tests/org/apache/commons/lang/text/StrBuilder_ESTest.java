/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 28 18:31:45 GMT 2020
 */

package org.apache.commons.lang.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.Writer;
import java.nio.CharBuffer;
import java.nio.ReadOnlyBufferException;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.ListIterator;
import java.util.NoSuchElementException;
import java.util.stream.IntStream;
import org.apache.commons.lang.text.StrBuilder;
import org.apache.commons.lang.text.StrMatcher;
import org.apache.commons.lang.text.StrTokenizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StrBuilder_ESTest extends StrBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("BLR>");
      StrBuilder strBuilder1 = new StrBuilder("BLR>");
      StrBuilder strBuilder2 = strBuilder0.append(1276L);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators((Collection) linkedList0, "Index: ");
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      boolean boolean0 = strBuilder3.contains(strMatcher0);
      StrBuilder strBuilder4 = strBuilder0.append((-1L));
      StrBuilder strBuilder5 = strBuilder4.trim();
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      StrBuilder strBuilder6 = strBuilder5.appendWithSeparators((Collection) linkedList1, "(G6X'UkF,W");
      StrBuilder strBuilder7 = strBuilder1.replaceAll("BLR>", "|g!gYe");
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('L');
      boolean boolean1 = strBuilder6.contains((StrMatcher) strMatcher_CharMatcher0);
      int int0 = strBuilder6.capacity();
      int int1 = strBuilder6.indexOf('Y');
      StrBuilder strBuilder8 = strBuilder0.replaceAll("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter", "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      // Undeclared exception!
      try { 
        strBuilder7.insert(97, (-894.429F));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 97
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      char[] charArray0 = new char[1];
      charArray0[0] = 'w';
      int int0 = strMatcher0.isMatch(charArray0, 0, 0, 0);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer", 0, 'w');
      StrBuilder strBuilder2 = new StrBuilder(0);
      StrBuilder strBuilder3 = strBuilder0.replace(strMatcher0, "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer", 0, 0, 0);
      StrBuilder strBuilder4 = strBuilder3.append(false);
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      IntStream intStream0 = stringBuffer0.codePoints();
      StrBuilder strBuilder5 = strBuilder1.append(stringBuffer0);
      boolean boolean0 = strBuilder2.equals(strBuilder1);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) "", 5, 'Y');
      StrBuilder strBuilder2 = strBuilder1.ensureCapacity(32);
      StringBuffer stringBuffer0 = strBuilder1.toStringBuffer();
      StrBuilder strBuilder3 = strBuilder0.append('1');
      boolean boolean0 = strBuilder0.equals((Object) strBuilder1);
      char char0 = strBuilder3.charAt(5);
      StrBuilder strBuilder4 = strBuilder0.ensureCapacity(5);
      int int0 = strBuilder4.lastIndexOf((String) null);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[7];
      charArray0[0] = '1';
      charArray0[1] = '1';
      charArray0[2] = '1';
      charArray0[3] = '1';
      charArray0[4] = '1';
      charArray0[5] = '1';
      StrBuilder strBuilder5 = strBuilder4.insert(5, (double) 5);
      charArray0[6] = '1';
      int int1 = strBuilder_StrBuilderReader0.read(charArray0);
      strBuilder_StrBuilderReader0.mark(3525);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher((String) null);
      StrMatcher strMatcher1 = StrMatcher.stringMatcher((String) null);
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher(charArray0);
      StrMatcher strMatcher3 = StrMatcher.charSetMatcher("");
      int int2 = strBuilder0.lastIndexOf(strMatcher0, (-1));
      StrBuilder strBuilder6 = strBuilder3.setNewLineText((String) null);
      int int3 = strBuilder3.indexOf((String) null, 5);
      String string0 = strBuilder6.leftString(2213);
      StrBuilder strBuilder7 = strBuilder5.replaceFirst('a', '.');
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(209);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      StrBuilder strBuilder1 = strBuilder0.replaceAll("org.apache.commons.lang.text.StrBuilder", "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      StrBuilder strBuilder2 = strBuilder0.ensureCapacity((-53));
      StrBuilder strBuilder3 = strBuilder2.ensureCapacity(2742);
      strBuilder_StrBuilderWriter0.write(2742);
      StrBuilder strBuilder4 = strBuilder2.trim();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      char[] charArray0 = new char[8];
      charArray0[0] = 'i';
      charArray0[1] = 'i';
      charArray0[2] = 'C';
      charArray0[3] = 'x';
      charArray0[4] = 'N';
      charArray0[5] = 'B';
      charArray0[6] = ':';
      charArray0[7] = 'E';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder5 = strBuilder0.replaceAll(strMatcher0, "org.apache.commons.lang.text.StrBuilder");
      // Undeclared exception!
      try { 
        strBuilder5.insert((-2693), charArray0, 393, (-53));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2693
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteAll((String) null);
      StrBuilder strBuilder2 = strBuilder1.append(strBuilder0);
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadRight((Object) strBuilder1, 394, '!');
      StrBuilder strBuilder4 = strBuilder1.insert(394, 0L);
      StrMatcher strMatcher0 = StrMatcher.stringMatcher((String) null);
      StrBuilder strBuilder5 = strBuilder1.deleteAll(strMatcher0);
      StrBuilder strBuilder6 = strBuilder1.appendWithSeparators((Object[]) null, (String) null);
      StrBuilder strBuilder7 = strBuilder0.deleteCharAt(388);
      String string0 = strBuilder4.leftString(394);
      StrBuilder strBuilder8 = strBuilder7.deleteFirst((String) null);
      boolean boolean0 = strBuilder0.equals(strBuilder7);
      String string1 = strBuilder4.getNullText();
      char[] charArray0 = new char[4];
      charArray0[0] = 'c';
      charArray0[1] = '!';
      charArray0[2] = '!';
      charArray0[3] = '!';
      char[] charArray1 = strBuilder0.getChars(charArray0);
      StrBuilder strBuilder9 = strBuilder3.append((String) null);
      StrBuilder strBuilder10 = strBuilder2.setNullText((String) null);
      Writer writer0 = strBuilder0.asWriter();
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      char[] charArray0 = new char[2];
      charArray0[0] = 'J';
      charArray0[1] = 'J';
      int int0 = strMatcher0.isMatch(charArray0, (-508), (-1206), 0);
      int int1 = strBuilder1.indexOf(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.deleteAll('J');
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      char[] charArray1 = new char[8];
      charArray1[0] = 't';
      charArray1[1] = 'J';
      charArray1[2] = 'J';
      charArray1[3] = 'J';
      charArray1[4] = 'B';
      charArray1[5] = 'J';
      charArray1[6] = 'i';
      charArray1[7] = 'J';
      int int2 = strMatcher0.isMatch(charArray1, (-508), 0, (-1));
      StrBuilder strBuilder3 = strBuilder0.appendWithSeparators((Collection) linkedList0, "Index: ");
      StrBuilder strBuilder4 = strBuilder0.setNewLineText("Index: ");
      StrBuilder strBuilder5 = strBuilder4.append(strBuilder0);
      StrBuilder strBuilder6 = strBuilder2.append((-508));
      int int3 = (-3659);
      StringBuffer stringBuffer0 = new StringBuffer("java.vm.version");
      // Undeclared exception!
      try { 
        strBuilder1.append(stringBuffer0, 57, (-508));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(32L);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("nvali ytartIndex: ", 0, 34);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-4064));
      int int0 = strBuilder0.length();
      int int1 = strBuilder0.capacity();
      String string0 = strBuilder0.leftString((-4064));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(2328);
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      int int2 = strBuilder0.lastIndexOf(strMatcher0);
      strBuilder_StrBuilderReader0.mark(7);
      char[] charArray0 = new char[0];
      int int3 = strBuilder_StrBuilderReader0.read(charArray0, 0, 0);
      StrBuilder strBuilder1 = strBuilder0.deleteAll(':');
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("length must be valid");
      // Undeclared exception!
      try { 
        strBuilder1.replace(strMatcher0, "", 2328, 0, 57);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(object0, 2330, 'U');
      char[] charArray0 = new char[6];
      charArray0[0] = 'U';
      charArray0[1] = 'U';
      charArray0[2] = 'U';
      charArray0[3] = 'U';
      charArray0[4] = 'U';
      charArray0[5] = 'U';
      StrBuilder strBuilder2 = strBuilder1.append(charArray0);
      char char0 = strBuilder2.charAt(48);
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrBuilder strBuilder3 = strBuilder0.insert(610, false);
      StrBuilder strBuilder4 = strBuilder0.replaceAll(strMatcher0, "");
      boolean boolean0 = strBuilder0.contains('r');
      StrBuilder strBuilder5 = strBuilder4.append('s');
      StrBuilder strBuilder6 = strBuilder0.append(strBuilder5, 1, 2330);
      boolean boolean1 = strBuilder0.contains(strMatcher0);
      StringBuffer stringBuffer0 = new StringBuffer(116);
      StrBuilder strBuilder7 = strBuilder0.append(stringBuffer0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("=7I|7$;a5h?");
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceAll((StrMatcher) strMatcher_TrimMatcher0, "length must be valid");
      int int0 = new Integer(57);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder strBuilder2 = new StrBuilder("Y1'Yu@[ G");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      int int1 = strBuilder2.indexOf("");
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(4);
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight(4, 946, ';');
      int int0 = 31;
      StrBuilder strBuilder3 = strBuilder1.setCharAt(31, ';');
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("Invalid length: ");
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher((char[]) null);
      int int1 = strBuilder1.lastIndexOf(strMatcher0, 4);
      int int2 = 2165;
      int int3 = strBuilder0.lastIndexOf(';', 2165);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-2226), 8);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2226
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer", (String) null);
      int int0 = strBuilder1.lastIndexOf('Q', 0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      strBuilder0.validateIndex(0);
      StrBuilder strBuilder1 = strBuilder0.append((float) 0);
      StrBuilder strBuilder2 = strBuilder0.delete(0, 0);
      StrBuilder strBuilder3 = strBuilder2.append((char[]) null, (-5042), 3056);
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadLeft((-6016), 0, 'z');
      Writer writer0 = strBuilder2.asWriter();
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(4);
      StrBuilder strBuilder2 = strBuilder1.append(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Reader reader0 = strBuilder0.asReader();
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      boolean boolean0 = strBuilder0.contains((StrMatcher) strMatcher_TrimMatcher0);
      int int0 = 108;
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadRight(108, 0, 'h');
      int int1 = strBuilder0.lastIndexOf("H^0sd&=Rv", 4);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      char[] charArray0 = new char[0];
      int int2 = strBuilder_StrBuilderReader0.read(charArray0);
      strBuilder_StrBuilderReader0.mark(102);
      // Undeclared exception!
      try { 
        strBuilder2.validateRange(97, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.append(strBuilder0);
      int int0 = 0;
      char char0 = 'j';
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft(0, 0, 'j');
      // Undeclared exception!
      try { 
        strBuilder0.charAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[6];
      int int0 = strBuilder_StrBuilderReader0.read();
      int int1 = strBuilder_StrBuilderReader0.read(charArray0);
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "org.apache.commons.lang.text.StrBuilder");
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      int int2 = strBuilder0.indexOf(strMatcher0);
      strBuilder_StrBuilderReader0.reset();
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder2 = strBuilder0.append((Object) "m^Y*$SMcEI4|!x*bN1");
      StrBuilder strBuilder3 = strBuilder0.deleteAll('\"');
      StrBuilder strBuilder4 = strBuilder1.append(strBuilder0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", (-1791), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("8|\"VqM>PK%%ba");
      String string0 = strBuilder0.toString();
      char[] charArray0 = strBuilder0.toCharArray();
      int int0 = strBuilder0.lastIndexOf("", 50);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      String string0 = "{l120ck?";
      int int0 = 97;
      int int1 = strBuilder0.lastIndexOf(strMatcher0, 97);
      StrBuilder strBuilder2 = strBuilder0.replaceFirst(strMatcher0, "{l120ck?");
      String string1 = "En0Ir3  W7EuoE+";
      StringBuffer stringBuffer0 = new StringBuffer("En0Ir3  W7EuoE+");
      int int2 = (-634);
      // Undeclared exception!
      try { 
        stringBuffer0.insert(97, (-289));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 97
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      String string0 = ".H^sCF>MtJ+p<,`|ac";
      StrBuilder strBuilder0 = new StrBuilder(".H^sCF>MtJ+p<,`|ac");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      long long0 = strBuilder_StrBuilderReader0.skip((-1L));
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) ".H^sCF>MtJ+p<,`|ac");
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charBuffer0);
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.StringCharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(".H^sCF>MtJ+p<,`|ac");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(0);
      StrBuilder strBuilder1 = strBuilder0.deleteCharAt(4);
      StrBuilder strBuilder2 = strBuilder1.insert(0, "");
      StrBuilder strBuilder3 = strBuilder1.append(1.0F);
      StrMatcher strMatcher0 = StrMatcher.charMatcher('p');
      StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher0, ".H^sCF>MtJ+p<,`|ac");
      char[] charArray0 = new char[8];
      charArray0[0] = 'p';
      charArray0[1] = 'p';
      charArray0[2] = 'p';
      charArray0[3] = 'p';
      charArray0[4] = 'p';
      charArray0[5] = 'p';
      charArray0[6] = 'p';
      charArray0[7] = 'p';
      char[] charArray1 = strBuilder2.getChars(charArray0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      Reader reader0 = strBuilder1.asReader();
      StrBuilder strBuilder2 = strBuilder0.trim();
      StrBuilder strBuilder3 = strBuilder1.append((-1037.0032F));
      StrBuilder strBuilder4 = strBuilder0.setCharAt(0, '`');
      StrBuilder strBuilder5 = strBuilder4.trim();
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("=7I|7$;a5h?");
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceAll((StrMatcher) strMatcher_TrimMatcher0, "org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      int int0 = strBuilder0.lastIndexOf("=7I|7$;a5h?");
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder strBuilder2 = new StrBuilder("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      char[] charArray0 = new char[6];
      StrBuilder strBuilder0 = new StrBuilder(2206);
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StrBuilder strBuilder2 = new StrBuilder();
      StrBuilder strBuilder3 = strBuilder2.reverse();
      charArray0[0] = 'R';
      charArray0[1] = '`';
      charArray0[2] = '.';
      charArray0[3] = '\'';
      charArray0[4] = 'X';
      charArray0[5] = 'T';
      // Undeclared exception!
      try { 
        CharBuffer.wrap(charArray0, (-1401), 46);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.contains('o');
      StringBuffer stringBuffer0 = new StringBuffer("");
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder0.insert((-199), charArray0, (-199), 51);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -199
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = new StrBuilder(0);
      StrBuilder strBuilder2 = strBuilder1.deleteFirst("");
      StrBuilder strBuilder3 = strBuilder2.insert(0, (long) 0);
      char char0 = 'd';
      StrBuilder strBuilder4 = strBuilder1.append('d');
      StrBuilder strBuilder5 = strBuilder0.append(strBuilder1, 0, 0);
      StrBuilder strBuilder6 = strBuilder1.deleteAll('d');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(" 0?guC!NR:+G<D|F", 32, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      Reader reader0 = strBuilder0.asReader();
      String string0 = strBuilder0.leftString(1);
      StrBuilder strBuilder1 = strBuilder0.insert(0, (Object) "");
      String string1 = strBuilder1.leftString(1);
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      char[] charArray0 = new char[1];
      charArray0[0] = 'M';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0);
      char[] charArray1 = new char[5];
      charArray1[0] = 'o';
      charArray1[1] = ',';
      String string2 = strBuilder0.midString(0, 1);
      charArray1[2] = 'A';
      charArray1[3] = 'Q';
      strBuilder1.validateIndex(1);
      charArray1[4] = 'p';
      int int1 = strBuilder_StrBuilderReader0.read(charArray1, 0, 0);
      boolean boolean1 = strBuilder_StrBuilderReader0.markSupported();
      StrTokenizer strTokenizer0 = strBuilder1.asTokenizer();
      boolean boolean2 = strBuilder0.contains("");
      StrBuilder strBuilder2 = strBuilder1.replace((StrMatcher) null, "", 1, 1, 1);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2);
      StrBuilder strBuilder1 = strBuilder0.setNewLineText(":Qj2Oi82XZ?m");
      String string0 = strBuilder0.substring(0);
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher(":Qj2Oi82XZ?m");
      int int0 = strBuilder0.indexOf(strMatcher0, 2);
      int int1 = strBuilder0.capacity();
      char[] charArray0 = new char[8];
      charArray0[0] = 'I';
      charArray0[1] = 'o';
      charArray0[2] = 'I';
      charArray0[3] = 'X';
      charArray0[4] = '~';
      charArray0[5] = '#';
      charArray0[6] = '`';
      StrBuilder strBuilder2 = strBuilder1.appendPadding(2, 'l');
      charArray0[0] = '!';
      StrBuilder strBuilder3 = strBuilder1.append(charArray0);
      String string1 = strBuilder3.getNullText();
      StrBuilder strBuilder4 = strBuilder0.insert(2, 'z');
      StrBuilder strBuilder5 = new StrBuilder(":Qj2Oi82XZ?m");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder5.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
      StrBuilder strBuilder6 = strBuilder3.trim();
      StrBuilder strBuilder7 = strBuilder0.appendFixedWidthPadLeft(0, 0, '`');
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("startIndex must be valid");
      char[] charArray0 = new char[4];
      charArray0[0] = '-';
      charArray0[1] = 'n';
      charArray0[2] = '4';
      charArray0[3] = '[';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      boolean boolean0 = strBuilder0.contains("startIndex must be valid");
      StrBuilder strBuilder2 = strBuilder0.setNewLineText("");
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[7];
      String string0 = strBuilder0.substring(0, 12);
      charArray0[0] = '[';
      charArray0[2] = '~';
      charArray0[3] = 'C';
      charArray0[4] = 'p';
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('\u0000');
      charArray0[6] = 'Z';
      StrBuilder strBuilder2 = strBuilder0.append(charArray0, 0, (int) '\u0000');
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      int int0 = strBuilder1.lastIndexOf(strMatcher0, (-2522));
      String string1 = strBuilder2.midString((-1), (-1));
      String string2 = "";
      int int1 = strBuilder1.indexOf("");
      // Undeclared exception!
      try { 
        strBuilder2.insert((-1), charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.appendPadding(0, '-');
      StrBuilder strBuilder2 = strBuilder1.replace(0, 0, "");
      int int0 = strBuilder0.indexOf('1');
      StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
      char[] charArray0 = strBuilder2.getChars((char[]) null);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Z{M=,sdCu`Uq");
      String string0 = null;
      int int0 = 0;
      char[] charArray0 = new char[9];
      charArray0[0] = '';
      charArray0[1] = 'o';
      charArray0[2] = 'E';
      charArray0[3] = 'J';
      charArray0[4] = 'j';
      charArray0[5] = 'h';
      charArray0[6] = '3';
      charArray0[7] = 'c';
      charArray0[8] = '.';
      // Undeclared exception!
      try { 
        strBuilder0.insert(0, charArray0, 0, 463);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 463
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("wISwZ/iH>fcD2q^Q");
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StringBuffer stringBuffer1 = stringBuffer0.insert(0, 0L);
      boolean boolean0 = strBuilder0.equals((Object) "wISwZ/iH>fcD2q^Q");
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      int int0 = (-3526);
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft((Object) "wISwZ/iH>fcD2q^Q", (-3526), '@');
      StrBuilder strBuilder3 = strBuilder2.append(false);
      boolean boolean1 = strBuilder0.isEmpty();
      StringBuffer stringBuffer2 = stringBuffer0.reverse();
      String string0 = "i'EkgI";
      StrBuilder strBuilder4 = strBuilder0.replaceAll("i'EkgI", "wISwZ/iH>fcD2q^Q");
      int int1 = 115;
      // Undeclared exception!
      try { 
        strBuilder4.insert((-954), "i'EkgI");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -954
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(4);
      StrBuilder strBuilder2 = strBuilder1.append(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Reader reader0 = strBuilder0.asReader();
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      boolean boolean0 = strBuilder0.contains((StrMatcher) strMatcher_TrimMatcher0);
      int int0 = 108;
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadRight(108, 0, 'h');
      int int1 = strBuilder0.lastIndexOf("H^0sd&=Rv", 4);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(102);
      // Undeclared exception!
      try { 
        strBuilder2.validateRange(97, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = 'J';
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      char[] charArray0 = new char[2];
      charArray0[0] = 'J';
      charArray0[1] = 'J';
      int int0 = (-1206);
      int int1 = strMatcher0.isMatch(charArray0, (-508), (-1206), 0);
      int int2 = strBuilder1.indexOf(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.deleteAll('J');
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      char[] charArray1 = new char[8];
      charArray1[0] = 't';
      charArray1[1] = 'J';
      charArray1[2] = 'J';
      charArray1[3] = 'J';
      charArray1[4] = 'B';
      charArray1[5] = 'J';
      charArray1[6] = 'i';
      charArray1[7] = 'J';
      int int3 = strMatcher0.isMatch(charArray1, (-508), 0, (-1));
      StrBuilder strBuilder3 = strBuilder0.appendWithSeparators((Collection) linkedList0, "Index: ");
      StrBuilder strBuilder4 = strBuilder0.setNewLineText("Index: ");
      StrBuilder strBuilder5 = strBuilder2.append((-508));
      // Undeclared exception!
      try { 
        strBuilder5.append(charArray0, (-3659), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("o{&T");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("o{&T");
      StrBuilder strBuilder2 = strBuilder1.setNewLineText("o{&T");
      Reader reader0 = strBuilder0.asReader();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      strBuilder_StrBuilderReader0.mark(0);
      int int0 = strBuilder_StrBuilderReader0.read();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      char[] charArray0 = new char[9];
      charArray0[0] = 'q';
      charArray0[1] = '4';
      charArray0[2] = 'A';
      charArray0[3] = ')';
      charArray0[4] = 't';
      charArray0[5] = 'O';
      charArray0[6] = 'H';
      charArray0[7] = '+';
      charArray0[8] = '+';
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance(charArray0);
      StrTokenizer strTokenizer1 = strBuilder_StrBuilderTokenizer0.setQuoteChar('=');
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      String string1 = strBuilder1.toString();
      // Undeclared exception!
      try { 
        strBuilder0.insert((-921), false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -921
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      int int0 = strBuilder0.indexOf("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter", 5);
      char[] charArray0 = new char[4];
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      charArray0[0] = 'r';
      charArray0[1] = 'r';
      charArray0[2] = 'y';
      charArray0[3] = '\"';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      Integer integer0 = new Integer(5);
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft((Object) integer0, 5, 'r');
      // Undeclared exception!
      try { 
        strBuilder0.insert(101, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 101
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 1359;
      char[] charArray0 = new char[7];
      charArray0[0] = 'P';
      charArray0[1] = '[';
      charArray0[2] = '';
      charArray0[3] = 'z';
      charArray0[4] = 'k';
      charArray0[5] = 'O';
      charArray0[6] = '$';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(1359, 1359, charArray0, 1359);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1359
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher((char[]) null);
      int int0 = strBuilder0.indexOf(strMatcher0, (-3137));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
      Writer writer0 = strBuilder0.asWriter();
      String string0 = strBuilder0.getNullText();
      int int1 = strBuilder0.lastIndexOf('a', (-3137));
      StrBuilder strBuilder1 = strBuilder0.replaceAll('R', '$');
      int int2 = strBuilder0.size();
      StrBuilder strBuilder2 = strBuilder1.append(0L);
      StrBuilder strBuilder3 = strBuilder1.append((-1.0F));
      StrBuilder strBuilder4 = strBuilder0.append((String) null);
      Reader reader0 = strBuilder3.asReader();
      char char0 = strBuilder3.charAt(0);
      StrBuilder strBuilder5 = strBuilder0.append(strBuilder2);
      Integer integer0 = new Integer((-1));
      StrBuilder strBuilder6 = strBuilder5.appendFixedWidthPadLeft((Object) integer0, 426, '0');
      StrBuilder strBuilder7 = strBuilder5.setNullText((String) null);
      int int3 = strBuilder0.capacity();
      StrBuilder strBuilder8 = strBuilder3.append((String) null);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[5];
      charArray0[0] = '/';
      charArray0[1] = 'Z';
      charArray0[2] = '>';
      charArray0[3] = 'Q';
      charArray0[4] = '&';
      strBuilder_StrBuilderWriter0.write(charArray0);
      strBuilder_StrBuilderWriter0.write("-p(IJ`.zM|cM]q");
      StrBuilder strBuilder2 = strBuilder0.deleteAll("");
      // Undeclared exception!
      try { 
        strBuilder2.substring(2347, 2416);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1911);
      StrBuilder strBuilder1 = strBuilder0.setLength(0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      char[] charArray0 = new char[7];
      charArray0[0] = 'b';
      charArray0[1] = 'E';
      charArray0[2] = 'e';
      charArray0[3] = 'M';
      charArray0[4] = ')';
      charArray0[5] = 'Y';
      charArray0[6] = '.';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 0, 1228);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.leftString(108);
      int int0 = 2386;
      long long0 = 1120L;
      StrBuilder strBuilder1 = strBuilder0.setNullText("");
      // Undeclared exception!
      try { 
        strBuilder0.insert(2386, 1120L);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2386
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      int int0 = (-1);
      StrBuilder strBuilder0 = new StrBuilder((-1));
      char[] charArray0 = new char[7];
      charArray0[0] = ']';
      charArray0[1] = 'c';
      charArray0[2] = 'Q';
      charArray0[3] = 'g';
      charArray0[4] = '<';
      charArray0[5] = '`';
      charArray0[6] = '1';
      // Undeclared exception!
      try { 
        strBuilder0.insert(0, charArray0, 114, 44);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: 114
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.append(0.0);
      StrBuilder strBuilder2 = strBuilder0.append('i');
      StrBuilder strBuilder3 = strBuilder1.append(strBuilder0);
      int int0 = 0;
      char char0 = 'j';
      StrBuilder strBuilder4 = strBuilder1.appendFixedWidthPadLeft(0, 0, 'j');
      char char1 = strBuilder1.charAt(0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      String string0 = "')7;M^TC3CQ/Q=}?U+w";
      int int1 = 1927;
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("')7;M^TC3CQ/Q=}?U+w", 1927, 1927);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2063);
      StrBuilder strBuilder1 = strBuilder0.replaceAll((StrMatcher) null, "'\"");
      Integer integer0 = new Integer(0);
      StrBuilder strBuilder2 = strBuilder0.replaceAll("r", (String) null);
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadRight((Object) integer0, 2143, '');
      StrBuilder strBuilder4 = strBuilder3.appendWithSeparators((Iterator) null, "r");
      char[] charArray0 = new char[9];
      charArray0[0] = '';
      charArray0[1] = '';
      charArray0[2] = '';
      charArray0[3] = '';
      charArray0[4] = '';
      charArray0[5] = '';
      charArray0[6] = '';
      charArray0[7] = '';
      Reader reader0 = strBuilder0.asReader();
      charArray0[8] = '';
      char[] charArray1 = strBuilder0.getChars(charArray0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(108);
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher(":v:L1c( %");
      StrBuilder strBuilder1 = strBuilder0.replaceAll((StrMatcher) strMatcher_StringMatcher0, ":v:L1c( %");
      StrBuilder strBuilder2 = strBuilder1.append(108);
      int int0 = strBuilder2.indexOf((StrMatcher) strMatcher_StringMatcher0, 108);
      StrBuilder strBuilder3 = strBuilder1.replaceFirst(":v:L1c( %", ":v:L1c( %");
      boolean boolean0 = strBuilder0.contains('L');
      int int1 = (-3720);
      int int2 = 0;
      char[] charArray0 = new char[3];
      charArray0[0] = 'L';
      charArray0[1] = 'L';
      charArray0[2] = 'L';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 108, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      int int1 = 0;
      StrBuilder strBuilder1 = strBuilder0.insert(0, false);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      char[] charArray0 = new char[5];
      charArray0[0] = 'e';
      StrBuilder strBuilder2 = strBuilder0.append("");
      charArray0[1] = '.';
      charArray0[2] = 'D';
      charArray0[3] = '[';
      charArray0[4] = 'b';
      strBuilder_StrBuilderWriter0.write(charArray0, 1, 0);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 0, (-970));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: -970
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      int int0 = (-4423);
      StrBuilder strBuilder0 = new StrBuilder((-4423));
      char char0 = '%';
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('%');
      StringBuffer stringBuffer0 = strBuilder1.toStringBuffer();
      StrBuilder strBuilder2 = strBuilder0.deleteFirst('%');
      String string0 = "ezA[PTELiQ*";
      // Undeclared exception!
      try { 
        strBuilder2.append("ezA[PTELiQ*", (-4423), 2322);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "org.apache.commons.lang.text.StrBuilder");
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      int int1 = strBuilder0.indexOf(strMatcher0);
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder2 = strBuilder0.append((Object) "m^Y*$SMcEI4|!x*bN1");
      StrBuilder strBuilder3 = strBuilder0.deleteAll('\"');
      StrBuilder strBuilder4 = strBuilder1.append(strBuilder0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", (-1791), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      int int0 = 0;
      StrBuilder strBuilder1 = new StrBuilder(0);
      boolean boolean0 = strBuilder0.equals(strBuilder1);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      Integer integer0 = new Integer(117);
      boolean boolean1 = linkedList1.add((Object) integer0);
      boolean boolean2 = linkedList0.offerLast((Object) null);
      boolean boolean3 = strBuilder0.contains((StrMatcher) strMatcher_TrimMatcher0);
      boolean boolean4 = linkedList0.addAll(0, (Collection<?>) linkedList1);
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Collection) linkedList0, "startIndex must be valid");
      StrBuilder strBuilder3 = strBuilder1.replaceAll((String) null, "java.class.version");
      int int1 = 44;
      // Undeclared exception!
      try { 
        strBuilder1.replace(44, 44, "org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.midString(0, 0);
      strBuilder0.validateIndex(0);
      String string1 = strBuilder0.toString();
      char[] charArray0 = new char[5];
      charArray0[0] = '`';
      charArray0[1] = 'r';
      charArray0[2] = '1';
      charArray0[3] = 'm';
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      charArray0[4] = '~';
      StrBuilder strBuilder2 = strBuilder0.append(charArray0);
      StrBuilder strBuilder3 = strBuilder0.setNewLineText("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      String string2 = strBuilder3.toString();
      boolean boolean0 = strBuilder0.contains(":VuSy%vWwioTl2X-g]");
      StrBuilder strBuilder4 = strBuilder1.append(strBuilder2);
      StrBuilder strBuilder5 = strBuilder0.insert(0, 572.6223);
      StrBuilder strBuilder6 = strBuilder4.append(43.49F);
      StrBuilder strBuilder7 = strBuilder6.appendNewLine();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("", 3628, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(31);
      StrBuilder strBuilder1 = strBuilder0.setLength(31);
      StrBuilder strBuilder2 = strBuilder1.append((double) 31);
      int int0 = strBuilder0.validateRange(31, 31);
      StrBuilder strBuilder3 = strBuilder1.ensureCapacity(31);
      StrBuilder strBuilder4 = strBuilder0.setNewLineText("");
      int int1 = (-1227);
      // Undeclared exception!
      try { 
        strBuilder4.deleteCharAt((-1227));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1227
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.midString(0, 3658);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("+ba- dW3=");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      String string0 = "user.language";
      StringBuffer stringBuffer0 = new StringBuffer();
      int int0 = 57;
      int int1 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 57, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[9];
      charArray0[0] = 'q';
      charArray0[1] = 'q';
      charArray0[2] = 'q';
      charArray0[3] = 'q';
      charArray0[4] = 'q';
      charArray0[5] = 'q';
      charArray0[6] = 'q';
      charArray0[7] = 'q';
      charArray0[8] = 'q';
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance(charArray0);
      StrTokenizer strTokenizer1 = strBuilder_StrBuilderTokenizer0.setDelimiterString("Q$~w?pY^j;p");
      StrTokenizer strTokenizer2 = strBuilder_StrBuilderTokenizer0.setQuoteChar('q');
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer2, "");
      int int0 = strBuilder0.lastIndexOf('#');
      StrBuilder strBuilder2 = strBuilder0.append("");
      int int1 = strBuilder1.lastIndexOf('{', (-364));
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.insert(0, "`=?w");
      StrBuilder strBuilder2 = strBuilder1.append(1428.6508F);
      StrBuilder strBuilder3 = strBuilder0.appendNewLine();
      char[] charArray0 = new char[5];
      charArray0[0] = 'b';
      charArray0[1] = '';
      charArray0[2] = 'k';
      charArray0[3] = '!';
      charArray0[4] = 'z';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder4 = strBuilder0.replaceAll(strMatcher0, "");
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      int int0 = 2400;
      StrBuilder strBuilder0 = new StrBuilder(2400);
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(2);
      int int1 = strBuilder0.lastIndexOf('r', 2400);
      Reader reader0 = strBuilder1.asReader();
      StrBuilder strBuilder2 = strBuilder1.append(strBuilder0);
      String string0 = strBuilder2.leftString(2400);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      char[] charArray0 = new char[4];
      charArray0[0] = 'r';
      charArray0[1] = 'T';
      charArray0[2] = 'r';
      charArray0[3] = 'r';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 2400, 1);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      StrBuilder strBuilder2 = strBuilder0.replaceFirst(strMatcher0, "");
      StrBuilder strBuilder3 = strBuilder2.append('y');
      StrBuilder strBuilder4 = strBuilder2.appendFixedWidthPadLeft((Object) "", 0, '}');
      char[] charArray0 = new char[6];
      charArray0[0] = '}';
      charArray0[1] = '4';
      charArray0[2] = '}';
      charArray0[3] = '}';
      charArray0[4] = '}';
      charArray0[5] = '}';
      int int0 = strMatcher0.isMatch(charArray0, 0, 0, 0);
      StrMatcher strMatcher1 = StrMatcher.trimMatcher();
      StrBuilder strBuilder5 = strBuilder2.replaceAll("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer", "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      int int1 = strBuilder0.indexOf(strMatcher1, 0);
      StrBuilder strBuilder6 = strBuilder1.setNewLineText("");
      StrBuilder strBuilder7 = strBuilder4.appendFixedWidthPadRight(0, 0, '}');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("@[%");
      StrBuilder strBuilder8 = strBuilder0.replace(strMatcher0, "J{", 0, 456, 0);
      StrBuilder strBuilder9 = strBuilder0.deleteFirst('}');
      String string0 = strBuilder9.toString();
      StrBuilder strBuilder10 = strBuilder0.deleteFirst('a');
      StrBuilder strBuilder11 = strBuilder10.setNewLineText("O5{");
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.toString();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[6];
      charArray0[0] = '+';
      charArray0[1] = '9';
      charArray0[2] = 'f';
      charArray0[3] = '`';
      charArray0[4] = '-';
      charArray0[5] = '1';
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset(charArray0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "");
      int int0 = strBuilder0.lastIndexOf('>');
      StrBuilder strBuilder2 = strBuilder0.append((long) (-1));
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      String string0 = strBuilder0.rightString((-454));
      StrBuilder strBuilder1 = strBuilder0.append((-964L));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      StrBuilder strBuilder2 = strBuilder0.deleteAll(strMatcher0);
      boolean boolean0 = strBuilder0.contains((String) null);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.append((String) null, (-773), 0);
      Object[] objectArray0 = new Object[6];
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      objectArray0[0] = object0;
      objectArray0[1] = (Object) strBuilder0;
      Object object1 = strBuilder_StrBuilderTokenizer0.cloneReset();
      objectArray0[2] = object1;
      objectArray0[3] = (Object) strBuilder1;
      objectArray0[4] = (Object) null;
      objectArray0[5] = (Object) null;
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators(objectArray0, "");
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder3 = strBuilder0.insert(0, false);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[6];
      charArray0[0] = 'A';
      charArray0[1] = 'K';
      charArray0[2] = 'd';
      charArray0[3] = 'K';
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) 'd';
      objectArray0[1] = (Object) strBuilder_StrBuilderWriter0;
      objectArray0[2] = (Object) 'K';
      objectArray0[3] = (Object) strBuilder_StrBuilderWriter0;
      char[] charArray1 = new char[3];
      charArray1[0] = 'K';
      charArray1[1] = 'A';
      charArray1[2] = '+';
      strBuilder_StrBuilderWriter0.write(charArray1);
      objectArray0[4] = (Object) 'K';
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators(objectArray0, "Invalid offset: ");
      charArray0[4] = '+';
      strBuilder_StrBuilderWriter0.write("Invalid offset: ");
      charArray0[5] = 'l';
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) "Invalid offset: ");
      int int0 = (-1987);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, (-1987), 4);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 4
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      int int0 = 1;
      StrBuilder strBuilder0 = new StrBuilder(1);
      int int1 = 0;
      String string0 = "Invalid startIndex: ";
      StrBuilder strBuilder1 = strBuilder0.insert(0, "Invalid startIndex: ");
      Collection<String> collection0 = null;
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Collection) null, "Invalid startIndex: ");
      char char0 = 'W';
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      // Undeclared exception!
      try { 
        strBuilder2.setCharAt(1341, 'W');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1341
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.version");
      char[] charArray0 = new char[6];
      charArray0[0] = 'J';
      charArray0[1] = '0';
      charArray0[2] = 'I';
      charArray0[3] = 'U';
      charArray0[4] = 't';
      charArray0[5] = 't';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, (-1230), 32);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = strBuilder0.getNewLineText();
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.append(true);
      int int0 = strBuilder0.lastIndexOf("P7&%uJ!M", (-1709));
      StrBuilder strBuilder3 = new StrBuilder(116);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder3.new StrBuilderTokenizer();
      String string1 = strBuilder_StrBuilderTokenizer0.getContent();
      String string2 = strBuilder0.midString((-1), 116);
      StrBuilder strBuilder4 = strBuilder2.append((long) (-1709));
      char[] charArray0 = new char[0];
      char[] charArray1 = strBuilder2.getChars(charArray0);
      String string3 = strBuilder1.midString(97, 116);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Object[]) null, "");
      char[] charArray0 = new char[8];
      charArray0[0] = '.';
      charArray0[1] = '\\';
      charArray0[2] = '>';
      charArray0[3] = 'J';
      charArray0[4] = 'z';
      charArray0[5] = '\'';
      charArray0[6] = '5';
      charArray0[7] = 'f';
      // Undeclared exception!
      try { 
        strBuilder1.insert(5, charArray0, 2755, 2755);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 5
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("ezy_7dY?6^o_u");
      StrBuilder strBuilder1 = new StrBuilder(0);
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1, 0, 0);
      char[] charArray0 = new char[4];
      charArray0[0] = 'U';
      charArray0[1] = ')';
      charArray0[2] = 'E';
      charArray0[3] = '<';
      char[] charArray1 = strBuilder1.getChars(charArray0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[0];
      strBuilder0.buffer = charArray0;
      int int0 = strBuilder0.indexOf("", 0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.toString();
      boolean boolean0 = strBuilder0.contains("WyESr>NrGJDBLuf");
      char[] charArray0 = strBuilder0.toCharArray();
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("WyESr>NrGJDBLuf");
      char char0 = 'L';
      StrMatcher strMatcher1 = StrMatcher.charMatcher('L');
      // Undeclared exception!
      try { 
        strBuilder0.replace(strMatcher0, "", 1047, (-1132), 32);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity((-1208));
      int int0 = (-339);
      StrBuilder strBuilder2 = strBuilder0.append(2920.58);
      StrBuilder strBuilder3 = strBuilder2.deleteAll('@');
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt((-339), '5');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -339
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      LinkedList<StrBuilder> linkedList0 = new LinkedList<StrBuilder>();
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      char[] charArray0 = new char[4];
      charArray0[0] = 'N';
      charArray0[1] = '?';
      charArray0[2] = 's';
      charArray0[3] = 'j';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.replace((StrMatcher) strMatcher_NoMatcher0, "", 0, 0, (-1426));
      // Undeclared exception!
      try { 
        strBuilder1.append(strBuilder0, 423, 5);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      String string0 = "Invalid offset: ";
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      int int0 = 3;
      StrBuilder strBuilder1 = strBuilder0.append(0.0);
      StrBuilder strBuilder2 = strBuilder1.append(strBuilder0, 3, 3);
      char char0 = 'U';
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight(3, 3, 'U');
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.replaceAll("", "5.1");
      String string1 = strBuilder1.midString(2, 0);
      StrBuilder strBuilder2 = strBuilder0.append(0.0F);
      StrBuilder strBuilder3 = strBuilder1.insert(2, (-908L));
      LinkedList<String> linkedList0 = new LinkedList<String>();
      ListIterator<String> listIterator0 = linkedList0.listIterator();
      StrBuilder strBuilder4 = strBuilder0.appendWithSeparators((Iterator) listIterator0, "");
      String string2 = "%/bA:nO$P{CnF+pi>";
      // Undeclared exception!
      try { 
        strBuilder4.append("%/bA:nO$P{CnF+pi>", 2789, (-1448));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder("PBqO#XW");
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      int int0 = strBuilder1.lastIndexOf(strMatcher0);
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      // Undeclared exception!
      try { 
        strBuilder1.append(strBuilder0, 32, 306);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      String string0 = strBuilder0.midString((-3499), (-3499));
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = 0;
      Writer writer0 = strBuilder0.asWriter();
      char[] charArray0 = new char[4];
      charArray0[0] = 'J';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) writer0, 0, '}');
      charArray0[1] = 'F';
      charArray0[2] = 'R';
      charArray0[3] = 'V';
      StrBuilder strBuilder2 = strBuilder0.deleteAll('l');
      StrBuilder strBuilder3 = strBuilder0.insert(0, charArray0);
      StrBuilder strBuilder4 = strBuilder0.reverse();
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, (-2890), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt((-321));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -321
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.insert(0, (long) 0);
      int int0 = strBuilder0.length();
      int int1 = 0;
      StrBuilder strBuilder2 = strBuilder1.append("");
      Reader reader0 = strBuilder2.asReader();
      int int2 = strBuilder0.indexOf((StrMatcher) null, 0);
      String string0 = strBuilder0.leftString(57);
      String string1 = null;
      StrBuilder strBuilder3 = strBuilder1.setNullText((String) null);
      char[] charArray0 = new char[7];
      charArray0[0] = '[';
      charArray0[1] = 'X';
      charArray0[2] = 'V';
      charArray0[3] = 'C';
      charArray0[4] = 'T';
      charArray0[5] = '`';
      charArray0[6] = '(';
      // Undeclared exception!
      try { 
        strBuilder1.append(charArray0, 57, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("0ZA&/sRc_(*tZA)'");
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      Integer integer0 = new Integer(0);
      StrBuilder strBuilder1 = strBuilder0.append((Object) integer0);
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      StrBuilder strBuilder2 = strBuilder1.deleteFirst(strMatcher0);
      int int0 = strBuilder0.length();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      char[] charArray0 = new char[8];
      charArray0[0] = '*';
      charArray0[1] = 'U';
      charArray0[2] = 'q';
      charArray0[3] = 'J';
      charArray0[4] = '9';
      charArray0[5] = 'M';
      charArray0[6] = 'v';
      charArray0[7] = ',';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 44, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(647);
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(647);
      String string0 = "1I(O>l2.q";
      char char0 = '#';
      StrBuilder strBuilder2 = strBuilder0.appendPadding(48, '#');
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      boolean boolean1 = strBuilder0.contains("1I(O>l2.q");
      char[] charArray0 = new char[1];
      charArray0[0] = 'd';
      // Undeclared exception!
      try { 
        strMatcher0.isMatch(charArray0, 647, 647, 647);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      int int0 = 534;
      StrBuilder strBuilder0 = new StrBuilder(534);
      String string0 = "";
      StrBuilder strBuilder1 = strBuilder0.replaceAll("<6@KwggU,Vxq7H}2y", "");
      int int1 = strBuilder1.indexOf("");
      // Undeclared exception!
      try { 
        strBuilder0.insert(534, 534);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 534
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      int int0 = 14;
      StrBuilder strBuilder0 = new StrBuilder(14);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setTrimmerMatcher(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, (String) null);
      StrBuilder strBuilder2 = new StrBuilder("");
      char char0 = ']';
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadLeft((Object) strBuilder2, 14, ']');
      String string0 = strBuilder0.midString(14, 2716);
      boolean boolean0 = strBuilder2.equalsIgnoreCase(strBuilder0);
      StrBuilder strBuilder4 = strBuilder0.deleteFirst("");
      StrBuilder strBuilder5 = strBuilder2.replaceAll("", "");
      // Undeclared exception!
      try { 
        strBuilder3.insert((-3020), (-2831.764));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3020
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt((-3343), 't');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3343
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("z48NDbye");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize((char[]) null, (-178), (-178));
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) "z48NDbye";
      Object object0 = new Object();
      objectArray0[1] = object0;
      objectArray0[2] = (Object) strBuilder0;
      objectArray0[3] = (Object) "z48NDbye";
      objectArray0[4] = (Object) strBuilder_StrBuilderTokenizer0;
      objectArray0[5] = (Object) strBuilder0;
      objectArray0[6] = (Object) strBuilder_StrBuilderTokenizer0;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "z48NDbye");
      StrBuilder strBuilder2 = strBuilder1.append(objectArray0[0]);
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrBuilder strBuilder3 = strBuilder1.replace(strMatcher0, "z48NDbye", 2, 2, (-178));
      StrBuilder strBuilder4 = strBuilder3.appendPadding((-178), 'Y');
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("z48NDbye");
      int int0 = strBuilder1.lastIndexOf(strMatcher0, (-178));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("V");
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1), (float) (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer1 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer1.getQuoteMatcher();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoredMatcher(strMatcher0);
      StrMatcher strMatcher1 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher1);
      char[] charArray0 = new char[9];
      charArray0[0] = '1';
      charArray0[1] = 'g';
      charArray0[2] = 'n';
      charArray0[3] = ']';
      charArray0[4] = ':';
      charArray0[5] = 'Z';
      charArray0[6] = '0';
      charArray0[7] = 'H';
      charArray0[8] = ':';
      // Undeclared exception!
      try { 
        strBuilder1.append(charArray0, 0, (-1928));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: -1928
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) "", 5, 'Y');
      StrBuilder strBuilder2 = strBuilder1.ensureCapacity(32);
      StringBuffer stringBuffer0 = strBuilder1.toStringBuffer();
      StrBuilder strBuilder3 = strBuilder0.append('1');
      boolean boolean0 = strBuilder0.equals((Object) strBuilder1);
      char char0 = strBuilder3.charAt(5);
      StrBuilder strBuilder4 = strBuilder0.ensureCapacity(5);
      int int0 = strBuilder4.lastIndexOf((String) null);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[7];
      charArray0[0] = '1';
      charArray0[1] = '1';
      charArray0[2] = '1';
      charArray0[3] = '1';
      charArray0[4] = '1';
      charArray0[5] = '1';
      StrBuilder strBuilder5 = strBuilder4.insert(5, (double) 5);
      charArray0[6] = '1';
      int int1 = strBuilder_StrBuilderReader0.read(charArray0);
      strBuilder_StrBuilderReader0.mark(3525);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher((String) null);
      StrMatcher strMatcher1 = StrMatcher.stringMatcher((String) null);
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher("");
      int int2 = strBuilder0.lastIndexOf(strMatcher0, (-1));
      StrBuilder strBuilder6 = strBuilder3.setNewLineText((String) null);
      int int3 = strBuilder3.indexOf((String) null, 5);
      String string0 = strBuilder6.leftString(2213);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("K");
      int int0 = strBuilder0.indexOf((StrMatcher) strMatcher_TrimMatcher0);
      boolean boolean0 = strBuilder0.equals((Object) strMatcher_TrimMatcher0);
      StrBuilder strBuilder1 = new StrBuilder((-3268));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      char[] charArray0 = new char[8];
      charArray0[0] = 'K';
      charArray0[1] = 'K';
      charArray0[2] = 'K';
      charArray0[3] = 'K';
      charArray0[4] = 'K';
      charArray0[5] = 'K';
      charArray0[6] = 'K';
      charArray0[7] = 'K';
      strBuilder_StrBuilderWriter0.write(charArray0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(101);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(101, 101, '?');
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrBuilder strBuilder2 = strBuilder0.deleteFirst(strMatcher0);
      int int0 = strBuilder0.lastIndexOf((String) null);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1));
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 391);
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(1962);
      // Undeclared exception!
      try { 
        strBuilder0.charAt(31);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 31
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.appendPadding(0, '-');
      int int0 = strBuilder0.indexOf('1');
      StrBuilder strBuilder2 = strBuilder0.replaceFirst("", "");
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[7];
      charArray0[0] = '[';
      charArray0[1] = 'C';
      charArray0[2] = '~';
      charArray0[3] = 'C';
      charArray0[4] = 'p';
      charArray0[5] = 'b';
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('b');
      charArray0[6] = 'Z';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 0, 936);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 936
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      char[] charArray0 = new char[9];
      charArray0[0] = 'a';
      charArray0[1] = 'a';
      charArray0[2] = 'a';
      charArray0[3] = 'a';
      charArray0[4] = 'a';
      charArray0[5] = 'a';
      charArray0[6] = 'a';
      charArray0[7] = 'a';
      charArray0[8] = 'a';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0, 0, 0);
      StrMatcher strMatcher1 = StrMatcher.charMatcher('a');
      int int0 = strBuilder0.indexOf(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher((char[]) null);
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher((char[]) null);
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.deleteAll("");
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder strBuilder2 = strBuilder0.append((char[]) null);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.append('1');
      char[] charArray0 = new char[4];
      charArray0[0] = '1';
      charArray0[1] = '1';
      charArray0[2] = '1';
      charArray0[3] = '1';
      strBuilder0.getChars(0, 0, charArray0, 1);
      StrBuilder strBuilder2 = strBuilder0.insert(0, 1090);
      StrBuilder strBuilder3 = strBuilder0.insert(0, 'D');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      StrBuilder strBuilder4 = strBuilder3.replaceFirst(strMatcher0, "");
      Object object0 = new Object();
      StrBuilder strBuilder5 = strBuilder3.append(object0);
      StrBuilder strBuilder6 = strBuilder3.append(0);
      StrTokenizer strTokenizer0 = strBuilder2.asTokenizer();
      StrBuilder strBuilder7 = strBuilder2.replaceFirst("", "");
      strBuilder2.getChars(0, 0, charArray0, 0);
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder8 = strBuilder7.append(stringBuffer0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder7.new StrBuilderWriter();
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) stringBuffer0);
      strBuilder_StrBuilderWriter0.flush();
      StrBuilder strBuilder9 = strBuilder5.appendFixedWidthPadLeft(5, 1, 'x');
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = 97;
      int int1 = 0;
      char[] charArray0 = new char[4];
      charArray0[0] = '(';
      charArray0[1] = '8';
      charArray0[2] = 'q';
      charArray0[3] = 'O';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(97, 0, charArray0, 97);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = new StringBuffer();
      StringBuffer stringBuffer1 = stringBuffer0.insert(0, 2150);
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0, 0, 0);
      StrBuilder strBuilder2 = strBuilder1.insert(0, (Object) null);
      StrBuilder strBuilder3 = strBuilder2.append("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(2584);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer0 = new Integer(0);
      boolean boolean0 = linkedList0.add(integer0);
      Integer integer1 = new Integer(0);
      boolean boolean1 = linkedList0.add(integer1);
      Integer integer2 = new Integer(0);
      boolean boolean2 = linkedList0.add(integer2);
      String string0 = "L'|EM'B=5Dnpg]}#*";
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "L'|EM'B=5Dnpg]}#*");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      int int0 = strBuilder1.lastIndexOf(strMatcher0);
      int int1 = strBuilder0.indexOf('q', 0);
      StrBuilder strBuilder2 = strBuilder0.deleteFirst('q');
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder strBuilder3 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder3.new StrBuilderReader();
      // Undeclared exception!
      try { 
        CharBuffer.wrap((CharSequence) "L'|EM'B=5Dnpg]}#*", (-1), 0);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0, 1046);
      StrBuilder strBuilder1 = strBuilder0.replaceAll('u', 'u');
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("7PM|pfT?IHadg");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[8];
      charArray0[0] = '0';
      charArray0[1] = 'v';
      charArray0[2] = '\\';
      charArray0[3] = 'q';
      charArray0[4] = 'l';
      charArray0[5] = '9';
      charArray0[6] = '8';
      charArray0[7] = '*';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, (-17), 1697);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      String string0 = "=7I|7$;a5h?";
      StrBuilder strBuilder0 = new StrBuilder("=7I|7$;a5h?");
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray(2199, 57);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("7PM|pfT?IHadg");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[8];
      charArray0[0] = '0';
      charArray0[1] = 'v';
      charArray0[2] = '\\';
      charArray0[4] = 'l';
      charArray0[5] = '0';
      charArray0[6] = '8';
      charArray0[7] = '*';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, (-41), 1697);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("RB1L@=GaIIFN W_");
      StrBuilder strBuilder1 = strBuilder0.insert(0, 0);
      StrBuilder strBuilder2 = strBuilder0.append((char[]) null, 0, 0);
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      int int0 = strBuilder2.indexOf(strMatcher0, (-990));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(209);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      StrBuilder strBuilder1 = strBuilder0.replaceAll("org.apache.commons.lang.text.StrBuilder", "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      StrBuilder strBuilder2 = strBuilder0.ensureCapacity((-53));
      strBuilder_StrBuilderWriter0.write(2742);
      StrBuilder strBuilder3 = strBuilder2.trim();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      StrBuilder strBuilder4 = strBuilder2.clear();
      char[] charArray0 = new char[8];
      charArray0[0] = 'i';
      charArray0[1] = 'i';
      charArray0[2] = 'C';
      charArray0[3] = 'x';
      charArray0[4] = 'N';
      charArray0[5] = 'B';
      charArray0[6] = ':';
      charArray0[7] = 'E';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder5 = strBuilder0.replaceAll(strMatcher0, "org.apache.commons.lang.text.StrBuilder");
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      String string0 = ".H^sCF>MtJ+p<,`|ac";
      StrBuilder strBuilder0 = new StrBuilder(".H^sCF>MtJ+p<,`|ac");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(0);
      long long0 = strBuilder_StrBuilderReader0.skip(416L);
      StrBuilder strBuilder1 = strBuilder0.deleteCharAt(4);
      // Undeclared exception!
      try { 
        strBuilder1.insert(2726, "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2726
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      String string0 = "MV@L{ dCO\\F1]L";
      StrBuilder strBuilder0 = new StrBuilder("MV@L{ dCOF1]L");
      int int0 = (-2591);
      // Undeclared exception!
      try { 
        strBuilder0.charAt((-2591));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2591
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      String string0 = null;
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.insert(0, false);
      int int0 = (-37);
      // Undeclared exception!
      try { 
        strBuilder0.substring((-37), (-37));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -37
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      StrBuilder strBuilder1 = strBuilder0.insert(0, object0);
      char[] charArray0 = strBuilder0.toCharArray(0, 0);
      StrBuilder strBuilder2 = strBuilder0.insert(0, false);
      int int0 = strBuilder2.validateRange(0, 0);
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      int int1 = strBuilder0.indexOf(strMatcher0, 0);
      char[] charArray1 = new char[2];
      charArray1[0] = '{';
      charArray1[1] = 'T';
      char[] charArray2 = strBuilder1.getChars(charArray1);
      StrBuilder strBuilder3 = strBuilder1.append((double) 0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      String string0 = "Invalid startIndex: ";
      StrBuilder strBuilder0 = new StrBuilder("Invalid startIndex: ");
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.insert(0, (Object) "Invalid startIndex: ");
      StrBuilder strBuilder2 = strBuilder0.trim();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      char[] charArray0 = new char[2];
      charArray0[0] = 'y';
      charArray0[1] = '6';
      StrBuilder strBuilder3 = strBuilder2.insert(0, (double) 0);
      int int1 = 434;
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadLeft((Object) strBuilder2, 434, '6');
      StrBuilder strBuilder5 = strBuilder4.append((-1.0F));
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      StrBuilder strBuilder6 = strBuilder4.deleteFirst(strMatcher0);
      strBuilder_StrBuilderWriter0.write(charArray0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder7 = strBuilder2.appendWithSeparators((Collection) linkedList0, "Invalid startIndex: ");
      // Undeclared exception!
      try { 
        strBuilder4.replace(strMatcher0, "Invalid startIndex: ", 2, 0, 1365);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(253);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("");
      Object object0 = new Object();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(object0, 253, 'l');
      StrMatcher strMatcher0 = StrMatcher.charMatcher('v');
      StrBuilder strBuilder2 = strBuilder0.replaceFirst(strMatcher0, "");
      // Undeclared exception!
      try { 
        strBuilder1.replace(3465, 720, "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('N');
      int int0 = strBuilder0.indexOf((StrMatcher) strMatcher_CharMatcher0, 756);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(4);
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('(');
      int int0 = strBuilder0.indexOf((StrMatcher) strMatcher_CharMatcher0, 4);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrBuilder strBuilder2 = strBuilder1.minimizeCapacity();
      StrBuilder strBuilder3 = strBuilder1.deleteFirst(".<]U>Y9dtu");
      int int0 = (-1549);
      String string0 = "tm1B?";
      // Undeclared exception!
      try { 
        strBuilder0.charAt((-1549));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1549
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1047));
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('M', 'j');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[3];
      charArray0[0] = 'j';
      charArray0[1] = 'M';
      charArray0[2] = 'j';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 34, (-1047));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      String string0 = "java.runtime.name";
      StrBuilder strBuilder0 = new StrBuilder("java.runtime.name");
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("java.runtime.name");
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(34);
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_StringMatcher0, 34);
      StrBuilder strBuilder2 = strBuilder0.replaceAll('|', '|');
      StrBuilder strBuilder3 = strBuilder0.reverse();
      StrBuilder strBuilder4 = strBuilder0.append((-2891.3228051904));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder4.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("java.runtime.name");
      char[] charArray0 = new char[4];
      charArray0[0] = 'O';
      charArray0[1] = '|';
      charArray0[2] = '~';
      charArray0[3] = '|';
      StrBuilder strBuilder5 = strBuilder0.append((long) 34);
      // Undeclared exception!
      try { 
        strBuilder0.getChars(0, 34, charArray0, 0);
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("P4q:@12iza3w7{");
      int int0 = strBuilder0.hashCode();
      int int1 = strBuilder0.size();
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1);
      char char0 = 'i';
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('i');
      StrBuilder strBuilder1 = strBuilder0.replaceAll((StrMatcher) strMatcher_CharMatcher0, "EH%1DSuiy2b");
      StrBuilder strBuilder2 = strBuilder1.append(955.43550392);
      String string0 = "Ug1^z-e?f40{MS3~M";
      StrBuilder strBuilder3 = strBuilder0.replaceFirst("Ug1^z-e?f40{MS3~M", "^'pEnTtJ");
      // Undeclared exception!
      try { 
        strBuilder3.validateIndex(661);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 661
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      int int0 = (-333);
      StrBuilder strBuilder0 = new StrBuilder((-333));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      LinkedList<StrBuilder> linkedList0 = new LinkedList<StrBuilder>();
      String string0 = "U [gw*";
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "U [gw*");
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoredChar('U');
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "\">p");
      StrBuilder strBuilder3 = strBuilder1.appendFixedWidthPadLeft((Object) strBuilder0, (-333), 'U');
      // Undeclared exception!
      try { 
        strBuilder2.insert((-333), false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -333
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(116);
      int int0 = 1709;
      char[] charArray0 = new char[3];
      charArray0[0] = 'U';
      charArray0[1] = '\\';
      charArray0[2] = '|';
      int int1 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.insert(1709, charArray0, 116, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1709
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      int int0 = 1691;
      StrBuilder strBuilder0 = new StrBuilder(1691);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst((String) null);
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      char[] charArray0 = new char[0];
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder3 = strBuilder2.replaceAll(strMatcher0, "|R&/I/]");
      // Undeclared exception!
      try { 
        strBuilder2.insert(1691, (long) 1691);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1691
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(0, 0, '?');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      StrBuilder strBuilder2 = strBuilder1.append(true);
      long long0 = strBuilder_StrBuilderReader0.skip(0);
      strBuilder_StrBuilderReader0.mark(1038);
      StrBuilder strBuilder3 = strBuilder0.append(false);
      StrBuilder strBuilder4 = strBuilder3.setNewLineText("The Array must not be null");
      StrBuilder strBuilder5 = strBuilder1.replaceAll('?', '?');
      strBuilder_StrBuilderReader0.reset();
      StrBuilder strBuilder6 = strBuilder0.reverse();
      StrBuilder strBuilder7 = strBuilder3.append(863L);
      StringBuffer stringBuffer0 = new StringBuffer(0);
      StrBuilder strBuilder8 = strBuilder4.append(stringBuffer0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrMatcher strMatcher1 = StrMatcher.charMatcher('E');
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      StrBuilder strBuilder2 = strBuilder1.reverse();
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      char char0 = '$';
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      char[] charArray0 = new char[5];
      charArray0[0] = '$';
      charArray0[1] = '$';
      charArray0[2] = '$';
      charArray0[3] = '$';
      charArray0[4] = '$';
      // Undeclared exception!
      try { 
        strMatcher0.isMatch(charArray0, Integer.MAX_VALUE, (-2948), (-1201));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      String string0 = "java.compiler";
      StrBuilder strBuilder0 = new StrBuilder("java.compiler");
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder0.insert(102, charArray0, 748, 102);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 102
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      int int0 = 758;
      StrBuilder strBuilder0 = new StrBuilder(758);
      StrBuilder strBuilder1 = strBuilder0.append(758);
      StrBuilder strBuilder2 = strBuilder1.trim();
      StringBuffer stringBuffer0 = new StringBuffer();
      float float0 = (-1.0F);
      // Undeclared exception!
      try { 
        stringBuffer0.insert(31, (Object) strBuilder2);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 31
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("1.6");
      StringBuffer stringBuffer0 = new StringBuffer("1.6");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('p');
      StrBuilder strBuilder2 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder3 = strBuilder1.append(3233L);
      StrBuilder strBuilder4 = strBuilder0.replaceAll('p', 'S');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 3331;
      // Undeclared exception!
      try { 
        strBuilder0.charAt(3331);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3331
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder strBuilder1 = strBuilder0.append(object0);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "R4U?0L':W2B-[j^F~";
      StrBuilder strBuilder1 = strBuilder0.append((Object) "R4U?0L':W2B-[j^F~");
      StrBuilder strBuilder2 = strBuilder1.append((-526.079F));
      StrBuilder strBuilder3 = strBuilder1.trim();
      int int0 = 3148;
      StrBuilder strBuilder4 = new StrBuilder("R4U?0L':W2B-[j^F~");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder4.new StrBuilderTokenizer();
      StrBuilder strBuilder5 = strBuilder4.deleteFirst('>');
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      String[] stringArray0 = strBuilder_StrBuilderTokenizer0.getTokenArray();
      // Undeclared exception!
      try { 
        strBuilder0.insert(3148, object0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3148
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = 3221;
      // Undeclared exception!
      try { 
        strBuilder0.insert(3221, "Windows 9");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3221
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      int int0 = 102;
      StrBuilder strBuilder0 = new StrBuilder(102);
      StrBuilder strBuilder1 = new StrBuilder();
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("");
      char char0 = 'h';
      StrBuilder strBuilder2 = strBuilder1.append('h');
      char char1 = '<';
      // Undeclared exception!
      try { 
        strBuilder2.insert(3, '<');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setNullText((String) null);
      boolean boolean0 = strBuilder0.endsWith("");
      int int0 = 108;
      int int1 = 5;
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Iterator) null, "+`9a");
      StrBuilder strBuilder3 = strBuilder2.appendNewLine();
      char[] charArray0 = new char[6];
      charArray0[0] = '*';
      charArray0[1] = '2';
      charArray0[2] = '~';
      charArray0[3] = '-';
      charArray0[4] = '^';
      charArray0[5] = 'e';
      StrBuilder strBuilder4 = strBuilder2.append(charArray0);
      StrBuilder strBuilder5 = strBuilder2.deleteFirst('n');
      // Undeclared exception!
      try { 
        strBuilder5.validateIndex(108);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 108
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(1.0F);
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      int int0 = strBuilder1.lastIndexOf(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.append('j');
      StrBuilder strBuilder3 = strBuilder2.replaceAll("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer", "");
      boolean boolean0 = strBuilder0.endsWith("|gO{8Ys:AszA|M{:");
      StrBuilder strBuilder4 = strBuilder2.appendFixedWidthPadLeft((-1), (-1), 'f');
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('n');
      StrBuilder strBuilder2 = new StrBuilder(0);
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder2);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("N7ou");
      StrBuilder strBuilder1 = strBuilder0.insert(0, '|');
      String string0 = strBuilder0.toString();
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("'; the SystemUtils property value will default to null.");
      StrBuilder strBuilder1 = strBuilder0.trim();
      String string0 = "(,";
      int int0 = 1952;
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(1952);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1952
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      int int0 = (-1077);
      StrBuilder strBuilder0 = new StrBuilder((-1077));
      int int1 = 4426;
      StrBuilder strBuilder1 = strBuilder0.clear();
      char char0 = '.';
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight((-1077), 4426, '.');
      StrBuilder strBuilder3 = strBuilder1.deleteFirst('.');
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder4 = new StrBuilder((String) null);
      StrBuilder strBuilder5 = strBuilder4.replaceAll((StrMatcher) null, "");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder4.new StrBuilderTokenizer();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.next();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      int int0 = strMatcher0.isMatch((char[]) null, 2951, 472, 2951);
      StrBuilder strBuilder2 = strBuilder1.replaceAll(strMatcher0, "org.apache.commons.lang.text.StrBuilder");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      int int1 = strBuilder_StrBuilderReader0.read();
      int int2 = strBuilder1.capacity();
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) "org.apache.commons.lang.text.StrBuilder";
      objectArray0[1] = (Object) strBuilder2;
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators(objectArray0, "<.");
      String string0 = strBuilder0.substring(0);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('\'');
      Object[] objectArray0 = new Object[0];
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators(objectArray0, "");
      Reader reader0 = strBuilder0.asReader();
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Tj*qpe <w>{LM!<");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[5];
      charArray0[0] = '(';
      charArray0[1] = 'c';
      charArray0[2] = 'q';
      Object object0 = strBuilder_StrBuilderTokenizer0.next();
      charArray0[3] = ':';
      charArray0[4] = 'L';
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('q');
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterMatcher(strMatcher_CharMatcher0);
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, (-2255), (-2255));
      int int0 = strBuilder0.indexOf('0');
      StrBuilder strBuilder1 = strBuilder0.append('q');
      String string0 = strBuilder1.leftString((-1));
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(")gf;");
      String string0 = strBuilder0.leftString(0);
      StrBuilder strBuilder1 = strBuilder0.insert(0, 829L);
      StringBuffer stringBuffer0 = new StringBuffer();
      stringBuffer0.trimToSize();
      StrBuilder strBuilder2 = strBuilder1.append(stringBuffer0);
      StrBuilder strBuilder3 = strBuilder1.replace(0, 0, "");
      String string1 = strBuilder3.rightString(1);
      StrBuilder strBuilder4 = strBuilder3.append(strBuilder2);
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      boolean boolean0 = strBuilder1.contains(strMatcher0);
      StrBuilder strBuilder5 = strBuilder2.clear();
      // Undeclared exception!
      try { 
        strBuilder5.substring(0, (-403));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid length: ");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("Invalid length: ");
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrBuilder strBuilder2 = strBuilder1.deleteFirst(strMatcher0);
      int int0 = strBuilder0.indexOf('G', (-888));
      StrBuilder strBuilder3 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder3.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip((-1L));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder3.new StrBuilderTokenizer();
      char[] charArray0 = new char[5];
      charArray0[0] = 'G';
      charArray0[1] = 'G';
      charArray0[2] = 'G';
      charArray0[3] = 'G';
      charArray0[4] = 'G';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, (-2338), (-888));
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = new StrBuilder(0);
      StrBuilder strBuilder2 = strBuilder1.deleteFirst("");
      StrBuilder strBuilder3 = strBuilder2.insert(0, (long) 0);
      char char0 = 'd';
      StrBuilder strBuilder4 = strBuilder1.append('d');
      StrBuilder strBuilder5 = strBuilder0.append(strBuilder1, 0, 0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(" 0?guC!NR:+G<D|F", 32, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setNullText((String) null);
      char[] charArray0 = new char[9];
      charArray0[0] = '+';
      charArray0[1] = 't';
      charArray0[2] = 'M';
      charArray0[3] = 'Q';
      charArray0[4] = '+';
      charArray0[5] = '\'';
      charArray0[6] = 'B';
      charArray0[7] = '^';
      charArray0[8] = 'w';
      strBuilder1.buffer = charArray0;
      StrBuilder strBuilder2 = strBuilder0.setLength(1319);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(34);
      strBuilder0.validateIndex(0);
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(34);
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("';7N{DA'");
      String string0 = "";
      StrMatcher strMatcher2 = StrMatcher.stringMatcher("");
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.deleteAll(strMatcher0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("");
      String string1 = strBuilder1.rightString(4);
      strBuilder_StrBuilderWriter0.flush();
      // Undeclared exception!
      try { 
        strBuilder0.insert(34, (char[]) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 34
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      String string0 = "D%(,tm2f1QK*";
      StrBuilder strBuilder0 = new StrBuilder("D%(,tm2f1QK*");
      int int0 = 32;
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex(32);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder("tT{HRE`f/!'uAR\"jY;:");
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, 0, (-495));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      String string0 = "j?>}xS43+";
      StrBuilder strBuilder0 = new StrBuilder("j?>}xS43+");
      char[] charArray0 = new char[4];
      // Undeclared exception!
      try { 
        strBuilder0.delete((-1005), (-2793));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1005
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setLength(4);
      String string0 = strBuilder0.rightString((-1640));
      StrBuilder strBuilder2 = strBuilder1.deleteAll("f[0\"meY");
      StrBuilder strBuilder3 = strBuilder2.append('Y');
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadRight((Object) "f[0\"meY", (-1640), 'm');
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("The Array must not be null", "<*5_");
      StrBuilder strBuilder2 = strBuilder0.setLength(0);
      StrBuilder strBuilder3 = new StrBuilder(0);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Y-3P*y");
      // Undeclared exception!
      try { 
        strBuilder0.setLength((-396));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -396
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("EAQCMB,iPKC)?");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('R', '>');
      String string0 = strBuilder1.getNullText();
      StrBuilder strBuilder2 = strBuilder1.deleteFirst('&');
      boolean boolean0 = strBuilder0.contains(" oe_Q)6m>f0");
      boolean boolean1 = strBuilder1.contains((String) null);
      int int0 = 1326;
      // Undeclared exception!
      try { 
        strBuilder1.insert(1326, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1326
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("The Array must not be null", "<*5_");
      // Undeclared exception!
      try { 
        strBuilder1.validateRange(3209, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = null;
      int int0 = 101;
      StrBuilder strBuilder1 = strBuilder0.append((StringBuffer) null, 101, (-2751));
      char[] charArray0 = new char[1];
      char char0 = 'N';
      charArray0[0] = 'N';
      // Undeclared exception!
      try { 
        strBuilder0.getChars((-2751), (-2751), charArray0, 101);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2751
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 57;
      // Undeclared exception!
      try { 
        strBuilder0.substring(57);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[1];
      charArray0[0] = 'p';
      strBuilder0.buffer = charArray0;
      boolean boolean0 = strBuilder0.startsWith("fnG4}DSS|rnZ9h2xtw`");
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      int int1 = strBuilder_StrBuilderTokenizer0.size();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      StrBuilder strBuilder2 = strBuilder1.insert(0, object0);
      StrTokenizer strTokenizer0 = strBuilder1.asTokenizer();
      StrBuilder strBuilder3 = strBuilder1.insert(3, 0);
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      int int2 = 1201;
      // Undeclared exception!
      try { 
        strBuilder3.replace(strMatcher0, "fnG4}DSS|rnZ9h2xtw`", (-503), (-503), 1201);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -503
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(";y Dm_o>l");
      boolean boolean0 = strBuilder0.startsWith(";y Dm_o>l");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("IU+9LjQtgP;/iBDHD");
      StrBuilder strBuilder1 = strBuilder0.append('%');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      char[] charArray0 = new char[4];
      charArray0[0] = '^';
      charArray0[1] = '%';
      charArray0[2] = '%';
      charArray0[3] = '%';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharBuffer charBuffer1 = charBuffer0.duplicate();
      int int0 = strBuilder_StrBuilderReader0.read(charBuffer0);
      char[] charArray1 = new char[3];
      charArray1[0] = '6';
      charArray1[1] = '%';
      charArray1[2] = '%';
      int int1 = 1038;
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray1, 1038, 1038);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(191);
      // Undeclared exception!
      try { 
        strBuilder0.insert(3072, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3072
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[3];
      charArray0[0] = 'G';
      StrBuilder strBuilder1 = new StrBuilder((String) null);
      StrBuilder strBuilder2 = strBuilder0.insert(0, (Object) strBuilder1);
      charArray0[1] = '=';
      charArray0[2] = '^';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder0.indexOf(strMatcher0);
      int int1 = strBuilder0.hashCode();
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.rightString(941);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("]s", "]s");
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.rightString(941);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("", "");
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Integer integer0 = new Integer(5);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) integer0, 5, 'e');
      StrBuilder strBuilder2 = strBuilder0.ensureCapacity(5);
      int int0 = (-1);
      StringBuffer stringBuffer0 = null;
      int int1 = 1586;
      StrBuilder strBuilder3 = strBuilder0.append((StringBuffer) null, 5, 1586);
      StrBuilder strBuilder4 = strBuilder3.append("]W>>M (_lb1@qj2`HJ");
      // Undeclared exception!
      try { 
        strBuilder4.insert((-3391), (-1L));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3391
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      int int0 = 32;
      StrBuilder strBuilder0 = new StrBuilder(32);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst((StrMatcher) null);
      StrBuilder strBuilder2 = strBuilder1.appendNewLine();
      String string0 = strBuilder0.leftString(32);
      StrBuilder strBuilder3 = strBuilder0.append((float) 32);
      StringBuffer stringBuffer0 = new StringBuffer(32);
      // Undeclared exception!
      try { 
        strBuilder3.append(stringBuffer0, 32, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("0");
      char[] charArray0 = new char[3];
      charArray0[0] = 'X';
      charArray0[1] = 'U';
      charArray0[2] = '~';
      // Undeclared exception!
      try { 
        strBuilder0.getChars((-1241), (-1241), charArray0, (-1241));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1241
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      String string0 = "=W>f9GrUC$";
      StrBuilder strBuilder0 = new StrBuilder("=W>f9GrUC$");
      String string1 = strBuilder0.substring(0);
      int int0 = 1532;
      // Undeclared exception!
      try { 
        strBuilder0.replace((-1288), 1532, "=W>f9GrUC$");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1288
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder strBuilder1 = new StrBuilder((-811));
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      StrBuilder strBuilder3 = strBuilder0.append('J');
      StrBuilder strBuilder4 = strBuilder1.appendFixedWidthPadRight((Object) writer0, 0, 'J');
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = false;
      StrBuilder strBuilder1 = strBuilder0.append(false);
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder1;
      objectArray0[2] = (Object) strBuilder1;
      objectArray0[3] = (Object) strBuilder0;
      objectArray0[4] = (Object) strBuilder1;
      int int0 = (-376);
      // Undeclared exception!
      try { 
        strBuilder1.insert((-376), (double) (-376));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -376
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      int int0 = (-1603);
      StrBuilder strBuilder0 = new StrBuilder((-1603));
      Reader reader0 = strBuilder0.asReader();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("(ph4");
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "(ph4");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("end < start");
      StrBuilder strBuilder2 = strBuilder0.clear();
      char char0 = 'c';
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadLeft((Object) strBuilder1, (-1603), 'c');
      StrBuilder strBuilder4 = strBuilder3.append(925.5684F);
      // Undeclared exception!
      try { 
        strBuilder1.setCharAt(85, 'c');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 85
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex((-103));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -103
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      char[] charArray0 = new char[0];
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(32, (-1791), '0');
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      int int0 = 44;
      StrBuilder strBuilder0 = new StrBuilder(44);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("KGq]fj9QMeK(#ZZ");
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setQuoteMatcher(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "PAv{AVPrtyfjlT");
      StrBuilder strBuilder2 = strBuilder0.deleteAll('h');
      StrMatcher strMatcher1 = StrMatcher.commaMatcher();
      StrMatcher strMatcher2 = StrMatcher.stringMatcher("PAv{AVPrtyfjlT");
      StrMatcher strMatcher3 = StrMatcher.charSetMatcher("fJ@&L,]mZKbKxBTfe.-");
      int int1 = strBuilder2.indexOf(strMatcher1);
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(44);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 44
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.util.prefs.PreferencesFactory");
      char[] charArray0 = new char[9];
      charArray0[0] = '^';
      charArray0[1] = ';';
      charArray0[2] = '$';
      charArray0[3] = 'P';
      charArray0[4] = '-';
      charArray0[5] = 'c';
      charArray0[6] = '=';
      charArray0[7] = 'V';
      charArray0[8] = 'm';
      strBuilder0.buffer = charArray0;
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      // Undeclared exception!
      try { 
        strBuilder0.deleteAll('Q');
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("Njo)w$gB~.\"E");
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrBuilder strBuilder2 = strBuilder1.setNullText("Njo)w$gB~.\"E");
      StrBuilder strBuilder3 = strBuilder0.deleteAll(strMatcher0);
      char[] charArray0 = new char[3];
      charArray0[0] = '.';
      charArray0[1] = '|';
      charArray0[2] = '<';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder4 = strBuilder3.replaceFirst(strMatcher0, "");
      boolean boolean0 = strBuilder0.isEmpty();
      // Undeclared exception!
      try { 
        strBuilder4.insert(44, (-1.0F));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 44
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1, 0, 0);
      StrBuilder strBuilder3 = strBuilder2.replace(0, 0, "");
      StrBuilder strBuilder4 = strBuilder3.setNullText("f");
      strBuilder0.validateIndex(0);
      StrBuilder strBuilder5 = strBuilder0.append("");
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      int int0 = 3;
      StrBuilder strBuilder0 = new StrBuilder(3);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      // Undeclared exception!
      try { 
        strBuilder0.insert(3, 0.0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(0);
      StrBuilder strBuilder2 = strBuilder0.append(1457.994);
      Reader reader0 = strBuilder2.asReader();
      StrBuilder strBuilder3 = strBuilder0.append(false);
      StrBuilder strBuilder4 = strBuilder1.insert(0, 953.6123F);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[3];
      charArray0[0] = 'T';
      charArray0[1] = 'r';
      charArray0[2] = 'B';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0);
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      char[] charArray0 = new char[1];
      charArray0[0] = 'w';
      int int0 = strMatcher0.isMatch(charArray0, 0, 0, 0);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer", 0, 'w');
      StrBuilder strBuilder2 = strBuilder0.insert(0, true);
      StrBuilder strBuilder3 = strBuilder0.replace(strMatcher0, "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer", 0, 0, 0);
      StrBuilder strBuilder4 = strBuilder3.append(true);
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      IntStream intStream0 = stringBuffer0.codePoints();
      StrBuilder strBuilder5 = strBuilder1.append(stringBuffer0);
      boolean boolean0 = strBuilder2.equals(strBuilder1);
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip((-1L));
      StrBuilder strBuilder1 = strBuilder0.replaceAll("add() is unsupported", "add() is unsupported");
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight(1584, 22, 'l');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("add() is unsupported");
      String string0 = strBuilder2.rightString(1584);
      char[] charArray0 = new char[0];
      int int0 = strBuilder_StrBuilderReader0.read(charArray0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(980);
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('(');
      StrBuilder strBuilder2 = strBuilder0.replaceAll(strMatcher0, "v:vR{*.NK+)8<L[*");
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid startIndex: ");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) "Invalid startIndex: ", 552, ',');
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher((char[]) null);
      int int0 = strBuilder1.lastIndexOf(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.append((-1816.0F));
      StrBuilder strBuilder3 = strBuilder0.insert(552, (char[]) null);
      StrBuilder strBuilder4 = new StrBuilder("Invalid startIndex: ");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder4.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      StrBuilder strBuilder2 = strBuilder0.trim();
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(0, '`');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset("V;vb-cRo66Sutw%p{p");
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "");
      StrBuilder strBuilder2 = strBuilder1.append("V;vb-cRo66Sutw%p{p");
      StrBuilder strBuilder3 = strBuilder1.append((String) null, (-649), (-649));
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = strBuilder0.substring(0, 2);
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      int int0 = (-1077);
      StrBuilder strBuilder0 = new StrBuilder((-1077));
      int int1 = 4426;
      StrBuilder strBuilder1 = strBuilder0.clear();
      char char0 = '.';
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight((-1077), 4426, '.');
      StrBuilder strBuilder3 = strBuilder1.deleteFirst('.');
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder4 = new StrBuilder((String) null);
      StrBuilder strBuilder5 = strBuilder4.replaceAll((StrMatcher) null, "");
      StrBuilder strBuilder6 = strBuilder4.appendWithSeparators((Iterator) strTokenizer0, "");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder4.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.next();
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      int int2 = strBuilder5.lastIndexOf(strMatcher0, (-1077));
      StrBuilder strBuilder7 = strBuilder2.appendFixedWidthPadRight((Object) "java.lang.String@0000000006", (-1077), ']');
      strBuilder3.size = 4426;
      StrBuilder strBuilder8 = strBuilder3.replaceAll('.', '.');
      StrBuilder strBuilder9 = strBuilder0.append(strBuilder8);
      int int3 = (-2351);
      // Undeclared exception!
      try { 
        strBuilder8.substring((-2351));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2351
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      int int0 = 97;
      StrBuilder strBuilder0 = new StrBuilder(97);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[8];
      charArray0[0] = 'O';
      charArray0[1] = '0';
      charArray0[2] = 'r';
      charArray0[3] = 'z';
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      StrTokenizer strTokenizer0 = strBuilder1.asTokenizer();
      StrBuilder strBuilder2 = strBuilder1.appendNull();
      StrBuilder strBuilder3 = strBuilder1.appendWithSeparators((Iterator) strTokenizer0, "");
      charArray0[4] = 'q';
      charArray0[5] = '[';
      charArray0[6] = '2';
      charArray0[7] = 'J';
      strBuilder_StrBuilderWriter0.write(charArray0);
      int int1 = 2324;
      strBuilder_StrBuilderWriter0.write((String) null, 97, 2324);
      String string0 = strBuilder0.toString();
      // Undeclared exception!
      try { 
        strBuilder3.validateIndex(2324);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2324
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher((char[]) null);
      int int0 = strBuilder0.indexOf(strMatcher0, (-3137));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
      Writer writer0 = strBuilder0.asWriter();
      String string0 = strBuilder0.getNullText();
      int int1 = strBuilder0.lastIndexOf('a', (-3137));
      StrBuilder strBuilder1 = strBuilder0.replaceAll('R', '$');
      int int2 = strBuilder0.size();
      StrBuilder strBuilder2 = strBuilder1.append(0L);
      StrBuilder strBuilder3 = strBuilder1.append((-1.0F));
      StrBuilder strBuilder4 = strBuilder0.append((String) null);
      Reader reader0 = strBuilder3.asReader();
      char char0 = strBuilder3.charAt(0);
      StrBuilder strBuilder5 = strBuilder0.append(strBuilder2);
      Integer integer0 = new Integer((-1));
      StrBuilder strBuilder6 = strBuilder5.appendFixedWidthPadLeft((Object) integer0, 426, '0');
      StrBuilder strBuilder7 = strBuilder5.setNullText((String) null);
      StrBuilder strBuilder8 = strBuilder3.append((String) null);
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.delete(0, 0);
      StrBuilder strBuilder2 = strBuilder0.append("ZYy", 0, 0);
      int int0 = 102;
      // Undeclared exception!
      try { 
        strBuilder0.delete(102, 102);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "uvI3qcslTW,");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark((-2161));
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(0L);
      // Undeclared exception!
      try { 
        strBuilder1.insert(809, 0.0F);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 809
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("BLR>");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(1727, 1, 'L');
      StrBuilder strBuilder2 = strBuilder0.append(1276L);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators((Collection) linkedList0, "Index: ");
      StrBuilder strBuilder4 = strBuilder0.append((-1L));
      StrBuilder strBuilder5 = strBuilder4.trim();
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      StrBuilder strBuilder6 = strBuilder5.appendWithSeparators((Collection) linkedList1, "(G6X'UkF,W");
      StrBuilder strBuilder7 = strBuilder1.replaceAll("BLR>", "|g!gYe");
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      boolean boolean0 = strBuilder6.contains(strMatcher0);
      int int0 = strBuilder6.capacity();
      int int1 = strBuilder6.indexOf('Y');
      // Undeclared exception!
      try { 
        strBuilder7.insert(97, (-894.429F));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 97
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-198));
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      char[] charArray0 = new char[3];
      charArray0[0] = '4';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      StrMatcher strMatcher2 = StrMatcher.charMatcher('4');
      charArray0[1] = '\'';
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("RM5smYh]uYws2uqBu", "");
      charArray0[2] = '\"';
      StrMatcher strMatcher3 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight((-198), 48, 'N');
      int int0 = strBuilder2.lastIndexOf(strMatcher0);
      StrBuilder strBuilder3 = strBuilder0.replaceFirst(strMatcher0, "0(r");
      boolean boolean0 = strBuilder3.contains("0(r");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int1 = strBuilder_StrBuilderReader0.read(charArray0);
      strBuilder_StrBuilderReader0.reset();
      strBuilder_StrBuilderReader0.reset();
      char[] charArray1 = strBuilder0.getChars(charArray0);
      StrBuilder strBuilder4 = strBuilder1.deleteFirst("RM5smYh]uYws2uqBu");
      // Undeclared exception!
      try { 
        strBuilder4.setCharAt((-198), 'H');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -198
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }
}
