/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 28 18:31:40 GMT 2020
 */

package org.apache.commons.lang.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.Writer;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.Comparator;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.NoSuchElementException;
import org.apache.commons.lang.text.StrBuilder;
import org.apache.commons.lang.text.StrMatcher;
import org.apache.commons.lang.text.StrTokenizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StrBuilder_ESTest extends StrBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(1L);
      char[] charArray0 = new char[1];
      charArray0[0] = 'G';
      StrBuilder strBuilder2 = strBuilder0.insert(0, charArray0);
      StrBuilder strBuilder3 = strBuilder2.deleteFirst("");
      StrBuilder strBuilder4 = strBuilder0.reverse();
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      StrBuilder strBuilder5 = strBuilder4.append(charArray0, 0, 0);
      char[] charArray1 = strBuilder0.toCharArray(0, 0);
      StrBuilder strBuilder6 = strBuilder1.trim();
      StrBuilder strBuilder7 = strBuilder1.clear();
      StrBuilder strBuilder8 = strBuilder4.appendPadding(1364, 'G');
      StrBuilder strBuilder9 = strBuilder3.appendFixedWidthPadLeft((Object) strBuilder3, 0, 'G');
      StrBuilder strBuilder10 = strBuilder5.setNewLineText((String) null);
      boolean boolean0 = strBuilder2.contains("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      boolean boolean1 = strBuilder0.contains('G');
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = null;
      StrBuilder strBuilder1 = strBuilder0.appendPadding(14, '');
      String string1 = strBuilder1.midString(14, 2797);
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = null;
      try {
        strMatcher_StringMatcher0 = new StrMatcher.StringMatcher((String) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrMatcher$StringMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("t6qL8@Ml{U+yR");
      boolean boolean0 = strBuilder0.isEmpty();
      String string0 = "z";
      boolean boolean1 = strBuilder0.startsWith("z");
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder1.append(1.5);
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder1);
      StrBuilder strBuilder4 = strBuilder0.append(0.0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      // Undeclared exception!
      try { 
        strBuilder4.insert(97, (-1502.43F));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 97
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(201);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("f2m$");
      int int0 = strBuilder0.length();
      String string0 = strBuilder0.getNullText();
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrBuilder strBuilder2 = strBuilder1.deleteFirst(strMatcher0);
      StrBuilder strBuilder3 = strBuilder0.append((double) 201);
      StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher0, "");
      StrBuilder strBuilder5 = strBuilder4.deleteFirst('*');
      StrBuilder strBuilder6 = strBuilder2.appendNewLine();
      int int1 = strBuilder3.lastIndexOf(strMatcher0);
      StrBuilder strBuilder7 = strBuilder2.minimizeCapacity();
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder5.getChars(0, (-1), charArray0, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.toString();
      StrBuilder strBuilder1 = strBuilder0.setNullText("\"yaW6HVPU");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[6];
      charArray0[0] = 'j';
      charArray0[1] = 'j';
      charArray0[2] = '5';
      charArray0[3] = '3';
      charArray0[4] = 'l';
      charArray0[5] = 'I';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 0, (int) '5');
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft(114, 114, '+');
      StrBuilder strBuilder3 = strBuilder0.append(false);
      String string0 = "Irix";
      StringBuffer stringBuffer0 = new StringBuffer("Irix");
      StrBuilder strBuilder4 = strBuilder3.appendNull();
      StrBuilder strBuilder5 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder6 = strBuilder5.clear();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("Irix");
      StrBuilder strBuilder7 = strBuilder1.replaceFirst(strMatcher0, "Irix");
      StrBuilder strBuilder8 = strBuilder1.append(51);
      boolean boolean0 = strBuilder8.isEmpty();
      StrBuilder strBuilder9 = strBuilder0.clear();
      // Undeclared exception!
      try { 
        strBuilder5.insert(101, (double) 114);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 101
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("t6qL8@Ml{U+yR");
      boolean boolean0 = strBuilder0.isEmpty();
      boolean boolean1 = strBuilder0.startsWith("");
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder1.append(1.5);
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder1);
      StrBuilder strBuilder4 = strBuilder0.append(0.0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) strBuilder4;
      objectArray0[1] = (Object) strBuilder2;
      objectArray0[2] = (Object) strBuilder1;
      objectArray0[3] = (Object) strBuilder1;
      objectArray0[4] = (Object) "";
      objectArray0[5] = (Object) strBuilder2;
      objectArray0[6] = (Object) strBuilder1;
      objectArray0[7] = (Object) strBuilder_StrBuilderTokenizer0;
      objectArray0[8] = (Object) strBuilder2;
      StrBuilder strBuilder5 = strBuilder3.appendWithSeparators(objectArray0, " -YRNBh$#<AZx^wkW\"");
      StrBuilder strBuilder6 = strBuilder5.delete(34, 1441);
      StrBuilder strBuilder7 = strBuilder1.append(1522L);
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrBuilder strBuilder8 = strBuilder3.replaceFirst(strMatcher0, "Linux");
      String string0 = strBuilder3.toString();
      StrBuilder strBuilder9 = strBuilder1.append(strBuilder3);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("startIndex must be valid");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("startIndex must be valid");
      strBuilder_StrBuilderWriter0.write(0);
      StrBuilder strBuilder1 = new StrBuilder(0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
      StrMatcher strMatcher0 = StrMatcher.stringMatcher(",");
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      StrBuilder strBuilder3 = strBuilder1.setLength(1449);
      boolean boolean1 = strBuilder0.equals(strBuilder1);
      StrBuilder strBuilder4 = strBuilder0.append(true);
      StrBuilder strBuilder5 = strBuilder1.append((Object) strBuilder_StrBuilderWriter0);
      StrBuilder strBuilder6 = strBuilder1.appendWithSeparators((Iterator) null, "startIndex must be valid");
      StrBuilder strBuilder7 = strBuilder3.insert(0, 'C');
      StrBuilder strBuilder8 = strBuilder7.insert(0, (double) 0);
      StrTokenizer strTokenizer0 = strBuilder7.asTokenizer();
      Reader reader0 = strBuilder5.asReader();
      int int0 = strBuilder4.lastIndexOf(",");
      String string0 = strBuilder3.leftString(1449);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder();
      char[] charArray0 = new char[1];
      charArray0[0] = 'G';
      StrBuilder strBuilder2 = strBuilder0.insert(0, charArray0);
      StrBuilder strBuilder3 = strBuilder2.deleteFirst("");
      StrBuilder strBuilder4 = new StrBuilder("");
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      StrBuilder strBuilder5 = strBuilder4.replaceAll(strMatcher0, (String) null);
      StrBuilder strBuilder6 = strBuilder4.append(charArray0, 0, 0);
      char[] charArray1 = strBuilder0.toCharArray(0, 0);
      StrBuilder strBuilder7 = strBuilder1.trim();
      Reader reader0 = strBuilder7.asReader();
      StrBuilder strBuilder8 = strBuilder6.setNullText("");
      StrBuilder strBuilder9 = strBuilder5.clear();
      StrBuilder strBuilder10 = strBuilder8.appendPadding(1364, 'G');
      StrBuilder strBuilder11 = strBuilder5.appendFixedWidthPadLeft((Object) strBuilder3, 0, 'G');
      StrBuilder strBuilder12 = strBuilder6.setNewLineText((String) null);
      boolean boolean0 = strBuilder2.contains("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      boolean boolean1 = strBuilder0.contains('F');
      int int0 = strBuilder9.indexOf((String) null, 39);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((-1), (-1), 'C');
      String string0 = strBuilder1.midString((-1), 0);
      StrBuilder strBuilder2 = strBuilder1.insert(0, true);
      String string1 = strBuilder1.getNullText();
      boolean boolean0 = strBuilder0.startsWith("?49+m]:'3o^<LarWdQ");
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("startIndex must be valid");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("startIndex must be valid");
      strBuilder_StrBuilderWriter0.write(0);
      StrBuilder strBuilder1 = new StrBuilder(0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("");
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      StrBuilder strBuilder3 = strBuilder1.setLength(1449);
      boolean boolean1 = strBuilder0.equals(strBuilder1);
      StrBuilder strBuilder4 = strBuilder0.append(true);
      StrBuilder strBuilder5 = strBuilder1.append((Object) strBuilder_StrBuilderWriter0);
      StrBuilder strBuilder6 = strBuilder1.appendWithSeparators((Iterator) null, "startIndex must be valid");
      StrBuilder strBuilder7 = strBuilder3.insert(0, 'C');
      StrBuilder strBuilder8 = strBuilder7.insert(0, (double) 0);
      int int0 = strBuilder8.lastIndexOf(strMatcher0, 1582);
      StrTokenizer strTokenizer0 = strBuilder7.asTokenizer();
      Reader reader0 = strBuilder5.asReader();
      int int1 = strBuilder4.lastIndexOf("");
      String string0 = strBuilder3.leftString(1449);
      String string1 = strBuilder1.toString();
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.append(1L);
      char[] charArray0 = new char[1];
      charArray0[0] = 'V';
      StrBuilder strBuilder2 = strBuilder0.insert(0, charArray0);
      StrBuilder strBuilder3 = strBuilder2.deleteFirst("");
      StrBuilder strBuilder4 = strBuilder0.reverse();
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      StrBuilder strBuilder5 = strBuilder1.appendNewLine();
      String string0 = null;
      char[] charArray1 = strBuilder0.toCharArray(0, 0);
      StrBuilder strBuilder6 = strBuilder1.trim();
      StrBuilder strBuilder7 = new StrBuilder('V');
      StrBuilder strBuilder8 = strBuilder2.clear();
      StrBuilder strBuilder9 = strBuilder7.appendPadding(1364, 'V');
      // Undeclared exception!
      try { 
        strBuilder0.substring((-2833));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2833
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-853));
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('_');
      StrBuilder strBuilder1 = strBuilder0.replaceAll((StrMatcher) strMatcher_CharMatcher0, "_u4rT");
      String string0 = strBuilder0.rightString((-4584));
      String string1 = strBuilder0.toString();
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrBuilder strBuilder2 = strBuilder1.append((-1493.0));
      StrBuilder strBuilder3 = strBuilder2.deleteAll(">lBrUwN(rF");
      StrBuilder strBuilder4 = strBuilder0.replaceFirst('l', '`');
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      String string0 = "";
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("");
      StrBuilder strBuilder2 = new StrBuilder(129);
      StrBuilder strBuilder3 = strBuilder0.deleteAll("");
      StrBuilder strBuilder4 = strBuilder2.append(true);
      char[] charArray0 = new char[3];
      charArray0[0] = 'd';
      charArray0[1] = 'M';
      charArray0[2] = 'B';
      // Undeclared exception!
      try { 
        strBuilder4.append(charArray0, (-844), 129);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 129
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrBuilder strBuilder2 = strBuilder0.append("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadRight(object0, 0, '`');
      StrBuilder strBuilder4 = strBuilder1.setNewLineText("");
      int int0 = strBuilder0.lastIndexOf("", 114);
      String string0 = strBuilder0.getNullText();
      StrBuilder strBuilder5 = strBuilder0.deleteFirst('@');
      StrBuilder strBuilder6 = strBuilder4.setNewLineText("Invalid offset: ");
      StrBuilder strBuilder7 = strBuilder1.trim();
      StrTokenizer strTokenizer0 = strBuilder7.asTokenizer();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((-1));
      StrBuilder strBuilder8 = strBuilder4.insert(0, 0.0);
      int int1 = strBuilder1.lastIndexOf("java.util.prefs.PreferencesFactory", 0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("bn=? }eijc,/ljY.");
      StrBuilder strBuilder2 = strBuilder0.deleteFirst(strMatcher0);
      StrMatcher strMatcher2 = StrMatcher.charMatcher(' ');
      int int0 = strBuilder1.lastIndexOf(strMatcher0, (-1));
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      StrBuilder strBuilder3 = strBuilder1.append('I');
      StrBuilder strBuilder4 = strBuilder3.append((Object) "bn=? }eijc,/ljY.");
      StrBuilder strBuilder5 = strBuilder2.deleteFirst('I');
      int int1 = strBuilder1.size();
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(1L);
      char[] charArray0 = new char[1];
      charArray0[0] = 'G';
      StrBuilder strBuilder2 = strBuilder0.insert(0, charArray0);
      StrBuilder strBuilder3 = strBuilder2.deleteFirst("");
      StrBuilder strBuilder4 = strBuilder0.reverse();
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      StrBuilder strBuilder5 = strBuilder4.replaceAll(strMatcher0, (String) null);
      StrBuilder strBuilder6 = strBuilder4.append(charArray0, 0, 0);
      char[] charArray1 = strBuilder0.toCharArray(0, 0);
      StrBuilder strBuilder7 = strBuilder1.trim();
      StrBuilder strBuilder8 = strBuilder6.setNullText("");
      StrBuilder strBuilder9 = strBuilder5.clear();
      StrBuilder strBuilder10 = strBuilder8.appendPadding(1364, 'G');
      StrBuilder strBuilder11 = strBuilder5.appendFixedWidthPadLeft((Object) strBuilder3, 0, 'G');
      StrBuilder strBuilder12 = new StrBuilder();
      boolean boolean0 = strBuilder2.contains("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      boolean boolean1 = strBuilder0.contains('F');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder3.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("", 0, 0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-674));
      StrBuilder strBuilder1 = new StrBuilder(814);
      StrBuilder strBuilder2 = strBuilder1.minimizeCapacity();
      StrBuilder strBuilder3 = strBuilder1.appendNull();
      char[] charArray0 = new char[4];
      charArray0[0] = '#';
      charArray0[1] = '&';
      charArray0[2] = ':';
      charArray0[3] = 'S';
      StrBuilder strBuilder4 = strBuilder2.append(charArray0);
      // Undeclared exception!
      try { 
        strBuilder0.validateRange(814, (-674));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      String string0 = "1.6";
      StrBuilder strBuilder0 = new StrBuilder("1.6");
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrBuilder strBuilder2 = strBuilder1.minimizeCapacity();
      int int0 = 10;
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("@Dqk6=nHENXSfSx 6");
      StrBuilder strBuilder3 = strBuilder0.append("k H<V}6jbW<dM");
      StrBuilder strBuilder4 = strBuilder0.replaceFirst(strMatcher0, "1.6");
      strBuilder4.validateIndex(10);
      String string1 = strBuilder0.substring(10);
      char char0 = strBuilder0.charAt(10);
      char[] charArray0 = new char[4];
      charArray0[0] = '}';
      charArray0[1] = '}';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      charArray0[2] = 'n';
      charArray0[3] = '}';
      StrBuilder strBuilder5 = strBuilder0.append(charArray0);
      String string2 = "";
      StrBuilder strBuilder6 = strBuilder4.appendWithSeparators((Iterator) null, "");
      String string3 = strBuilder6.midString(574, 10);
      StrBuilder strBuilder7 = strBuilder6.insert(10, 'g');
      // Undeclared exception!
      try { 
        strBuilder7.delete(3173, 3173);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = 'W';
      charArray0[1] = '%';
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0, 2515);
      Object[] objectArray0 = new Object[2];
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2334));
      char[] charArray0 = new char[4];
      charArray0[0] = 'u';
      charArray0[1] = 'N';
      charArray0[2] = '6';
      charArray0[3] = '3';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0, 2, 2);
      StrBuilder strBuilder2 = strBuilder0.append((double) (-2334));
      StrBuilder strBuilder3 = strBuilder2.clear();
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) 'N';
      objectArray0[1] = (Object) '3';
      objectArray0[2] = (Object) '3';
      StrBuilder strBuilder4 = strBuilder2.appendWithSeparators(objectArray0, "length must be valid");
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1031));
      StrBuilder strBuilder1 = new StrBuilder(2262);
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((Object) strBuilder1, 0, ';');
      String string0 = "";
      StrBuilder strBuilder3 = strBuilder1.replaceFirst("", "");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      int int0 = strBuilder3.indexOf(strMatcher0);
      String string1 = strBuilder3.leftString((-1031));
      StrBuilder strBuilder4 = strBuilder0.append((float) 2262);
      StrMatcher strMatcher1 = StrMatcher.charMatcher(';');
      int int1 = strBuilder0.capacity();
      char[] charArray0 = strBuilder1.toCharArray();
      StrBuilder strBuilder5 = strBuilder2.append(charArray0);
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoredMatcher(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 0, 44);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      String string0 = "I?8";
      int int0 = 19;
      char char0 = 'Z';
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadLeft((Object) null, 19, 'Z');
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("t6qL8@Ml{U+yR");
      boolean boolean0 = strBuilder0.isEmpty();
      boolean boolean1 = strBuilder0.startsWith("");
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder1.append(1.5);
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder1);
      StrBuilder strBuilder4 = strBuilder0.append(0.0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) strBuilder4;
      objectArray0[1] = (Object) strBuilder2;
      objectArray0[2] = (Object) strBuilder1;
      objectArray0[3] = (Object) strBuilder1;
      objectArray0[4] = (Object) "";
      objectArray0[5] = (Object) strBuilder2;
      objectArray0[6] = (Object) strBuilder1;
      objectArray0[7] = (Object) strBuilder_StrBuilderTokenizer0;
      objectArray0[8] = (Object) strBuilder2;
      StrBuilder strBuilder5 = strBuilder3.appendWithSeparators(objectArray0, " -YRNBh$#<AZx^wkW\"");
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher0, "Linux");
      String string0 = strBuilder3.toString();
      StrBuilder strBuilder7 = strBuilder1.append(strBuilder3);
      String string1 = strBuilder7.rightString(115);
      StrBuilder strBuilder8 = strBuilder6.replaceFirst(" -YRNBh$#<AZx^wkW\"", "t6qL8@Ml{U+yR");
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder("D?A[{,XG");
      // Undeclared exception!
      try { 
        strBuilder0.append("| wGi&FMrkMXeSZH", (-179), 34);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = '!';
      StrBuilder strBuilder1 = strBuilder0.insert(0, '!');
      StrBuilder strBuilder2 = strBuilder1.delete(0, 39);
      char[] charArray0 = new char[7];
      charArray0[0] = '!';
      charArray0[1] = '!';
      charArray0[2] = '!';
      charArray0[3] = '!';
      charArray0[4] = '!';
      charArray0[5] = '!';
      charArray0[6] = '!';
      // Undeclared exception!
      try { 
        strBuilder2.append(charArray0, 0, 39);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 39
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-853));
      char char0 = '%';
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt((-853), '%');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -853
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1));
      int int0 = 0;
      String string0 = strBuilder0.midString((-1), 0);
      StrBuilder strBuilder1 = new StrBuilder((-1));
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      int int1 = 1077;
      String string1 = strBuilder1.substring(0, 0);
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "");
      StrBuilder strBuilder3 = strBuilder2.append(stringBuffer0);
      StrBuilder strBuilder4 = strBuilder3.deleteFirst("");
      StrBuilder strBuilder5 = strBuilder4.trim();
      // Undeclared exception!
      try { 
        strBuilder1.charAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("^cce4");
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(57);
      StrBuilder strBuilder2 = strBuilder0.deleteAll((String) null);
      boolean boolean0 = strBuilder0.equals((Object) "^cce4");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.previous();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("UYf_R>;sz<!n");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      char[] charArray0 = new char[5];
      charArray0[0] = '<';
      charArray0[1] = 'S';
      charArray0[2] = '\'';
      charArray0[3] = 'v';
      charArray0[4] = 'V';
      int int0 = strMatcher0.isMatch(charArray0, 0, 9, 0);
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setTrimmerMatcher(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.replace(strMatcher0, "", 0, 0, 0);
      StrMatcher strMatcher1 = StrMatcher.charMatcher('S');
      StrBuilder strBuilder2 = strBuilder0.append("UYf_R>;sz<!n", 0, 0);
      StrBuilder strBuilder3 = strBuilder2.append(0);
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder strBuilder4 = strBuilder1.insert(0, object0);
      StrBuilder strBuilder5 = strBuilder4.replace(0, 0, "UYf_R>;sz<!n");
      int int1 = strBuilder0.indexOf(strMatcher1, 0);
      StrBuilder strBuilder6 = strBuilder3.append(charArray0);
      int int2 = strBuilder5.indexOf(strMatcher0);
      int int3 = strBuilder2.length();
      StrBuilder strBuilder7 = strBuilder2.deleteFirst("");
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = null;
      StrBuilder strBuilder1 = strBuilder0.replace(0, 0, (String) null);
      StrBuilder strBuilder2 = strBuilder1.minimizeCapacity();
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrBuilder strBuilder3 = strBuilder1.deleteFirst(strMatcher0);
      int int1 = 3905;
      // Undeclared exception!
      try { 
        strBuilder0.insert(3905, (Object) "r3t&^\"'df(1V");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3905
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[3];
      charArray0[0] = 'e';
      charArray0[1] = 'G';
      charArray0[2] = 'l';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0);
      strBuilder_StrBuilderReader0.reset();
      char[] charArray1 = new char[5];
      charArray1[0] = '4';
      charArray1[1] = 'D';
      charArray1[2] = '=';
      charArray1[3] = '!';
      charArray1[4] = 's';
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.sort((Comparator<? super String>) null);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, (String) null);
      StrBuilder strBuilder2 = strBuilder0.append(charArray1);
      int int1 = strBuilder0.hashCode();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(1921);
      StrBuilder strBuilder3 = strBuilder2.deleteFirst('D');
      Writer writer0 = strBuilder2.asWriter();
      StrBuilder strBuilder4 = strBuilder0.replaceAll('D', '!');
      boolean boolean0 = strBuilder2.equals(strBuilder4);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      String string0 = "Invalid offset: ";
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      char[] charArray0 = new char[5];
      charArray0[0] = '~';
      charArray0[1] = 'n';
      charArray0[2] = '\\';
      charArray0[3] = 'n';
      charArray0[4] = '*';
      char[] charArray1 = strBuilder0.getChars(charArray0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoreEmptyTokens(false);
      StrTokenizer strTokenizer1 = strBuilder_StrBuilderTokenizer0.reset(charArray1);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.add((Object) null);
      } catch(UnsupportedOperationException e) {
         //
         // add() is unsupported
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 2;
      StrBuilder strBuilder1 = new StrBuilder(2);
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      StrBuilder strBuilder3 = strBuilder1.append("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      strBuilder1.validateIndex(2);
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("path.separator");
      int int1 = strBuilder1.indexOf(strMatcher0, 2);
      String string0 = strBuilder0.getNewLineText();
      char char0 = 'e';
      int int2 = (-1160);
      int int3 = strBuilder0.lastIndexOf('e', (-1160));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      char[] charArray0 = new char[4];
      long long0 = strBuilder_StrBuilderReader0.skip((-1160));
      charArray0[0] = 'e';
      charArray0[1] = 'e';
      charArray0[2] = 'e';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 2, (-1160));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      int int0 = strBuilder0.indexOf("");
      char char0 = 'f';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) "", (-1), 'f');
      int int1 = 39;
      // Undeclared exception!
      try { 
        strBuilder0.insert(39, (float) 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 39
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = "0F#_y";
      StrBuilder strBuilder1 = new StrBuilder((-2368));
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      StrBuilder strBuilder3 = strBuilder0.insert(0, "0F#_y");
      StrTokenizer strTokenizer0 = strBuilder3.asTokenizer();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder3.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(32);
      String string1 = "";
      strBuilder_StrBuilderWriter0.write("");
      StrBuilder strBuilder4 = strBuilder3.append(0L);
      StrBuilder strBuilder5 = strBuilder4.trim();
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrBuilder strBuilder6 = strBuilder4.deleteAll(strMatcher0);
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("");
      // Undeclared exception!
      try { 
        strBuilder6.delete((-4371), (-803));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -4371
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      boolean boolean0 = strBuilder0.contains('E');
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.replaceAll(strMatcher0, "', is neither of type Map.Entry nor an Array");
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-4161));
      StrBuilder strBuilder1 = strBuilder0.append(false);
      StrBuilder strBuilder2 = new StrBuilder((-4161));
      // Undeclared exception!
      try { 
        strBuilder1.insert((-4161), (Object) strBuilder2);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -4161
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      String string0 = "java.vendor";
      StrBuilder strBuilder0 = new StrBuilder("java.vendor");
      char char0 = 'e';
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('e');
      char char1 = '7';
      StrMatcher strMatcher0 = StrMatcher.charMatcher('7');
      StrBuilder strBuilder1 = strBuilder0.deleteFirst((StrMatcher) strMatcher_CharMatcher0);
      StrBuilder strBuilder2 = strBuilder0.append((StrBuilder) null);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      StrBuilder strBuilder3 = strBuilder2.replaceFirst((StrMatcher) strMatcher_CharMatcher0, "java.vendor");
      char[] charArray0 = new char[6];
      charArray0[0] = 'e';
      StrBuilder strBuilder4 = strBuilder1.deleteAll("java.vendor");
      charArray0[1] = 'S';
      charArray0[2] = 'e';
      charArray0[3] = '7';
      // Undeclared exception!
      try { 
        strBuilder1.insert(108, 0L);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 108
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = 'r';
      int int0 = strBuilder0.indexOf('r');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("/M Gd");
      StrMatcher strMatcher2 = StrMatcher.charMatcher('r');
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      StrMatcher strMatcher3 = StrMatcher.stringMatcher("");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "#P^~$:");
      int int1 = 117;
      String string1 = strBuilder0.rightString(117);
      int int2 = 2989;
      // Undeclared exception!
      try { 
        strBuilder1.replace(2989, 117, "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = strBuilder0.indexOf("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer", 0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      String string0 = "n1KWu";
      StrBuilder strBuilder0 = new StrBuilder("n1KWu");
      char[] charArray0 = new char[5];
      StrBuilder strBuilder1 = strBuilder0.deleteAll('$');
      charArray0[0] = ':';
      charArray0[1] = 'w';
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder1;
      objectArray0[2] = (Object) ':';
      objectArray0[3] = (Object) strBuilder1;
      objectArray0[4] = (Object) 'w';
      objectArray0[5] = (Object) strBuilder1;
      objectArray0[6] = (Object) strBuilder1;
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators(objectArray0, "");
      charArray0[2] = 'u';
      charArray0[3] = 'd';
      charArray0[4] = 'W';
      strBuilder0.buffer = charArray0;
      // Undeclared exception!
      try { 
        strBuilder0.lastIndexOf('K');
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 314
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-5024));
      int int0 = strBuilder0.lastIndexOf("", (-5024));
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrMatcher strMatcher0 = StrMatcher.charMatcher('=');
      char[] charArray0 = new char[4];
      charArray0[0] = '=';
      charArray0[1] = '=';
      charArray0[2] = '=';
      charArray0[3] = '=';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.replace(strMatcher0, "", 0, 0, 2);
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder2 = strBuilder0.deleteFirst('[');
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('!');
      int int0 = strBuilder0.indexOf((StrMatcher) null, 0);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("");
      StrMatcher strMatcher1 = StrMatcher.charMatcher('*');
      boolean boolean0 = strBuilder0.contains((StrMatcher) strMatcher_CharMatcher0);
      // Undeclared exception!
      try { 
        strBuilder0.substring(115);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 918;
      String string0 = strBuilder0.leftString(603);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(918, 918, '\'');
      StrBuilder strBuilder2 = strBuilder1.deleteAll("Invalid length: ");
      char[] charArray0 = new char[9];
      charArray0[0] = '\'';
      charArray0[1] = '\'';
      charArray0[2] = '\'';
      charArray0[3] = '\'';
      charArray0[4] = '\'';
      charArray0[5] = '\'';
      charArray0[6] = '\'';
      charArray0[7] = '\'';
      charArray0[8] = '\'';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder3 = strBuilder2.replaceAll(strMatcher0, "");
      // Undeclared exception!
      try { 
        strMatcher0.isMatch(charArray0, 918, 918, 932);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("&!CY''S,#C.JN2V_x%%");
      Reader reader0 = strBuilder0.asReader();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 0);
      int int1 = strBuilder0.capacity();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("&!CY''S,#C.JN2V_x%%");
      int int2 = 0;
      int int3 = strBuilder1.indexOf(strMatcher0, 0);
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Iterator) strBuilder_StrBuilderTokenizer0, "&!CY''S,#C.JN2V_x%%");
      StrBuilder strBuilder3 = strBuilder2.replaceFirst(strMatcher0, "&!CY''S,#C.JN2V_x%%");
      StrBuilder strBuilder4 = strBuilder0.insert(0, (-509L));
      // Undeclared exception!
      try { 
        strBuilder2.charAt(51);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 51
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("X>PcO");
      // Undeclared exception!
      try { 
        strBuilder0.charAt(1223);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1223
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("!yRU,>8Q");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("!yRU,>8Q");
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) "!yRU,>8Q");
      strBuilder_StrBuilderWriter0.close();
      char[] charArray0 = new char[8];
      charArray0[0] = 'G';
      charArray0[1] = 'G';
      charArray0[2] = 'G';
      charArray0[3] = 'L';
      charArray0[4] = 'G';
      charArray0[5] = 'G';
      charArray0[6] = 'G';
      charArray0[7] = 'G';
      strBuilder0.buffer = charArray0;
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('G', 'l');
      String string0 = strBuilder1.midString(0, 0);
      StrBuilder strBuilder2 = new StrBuilder(0);
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadRight(0, (-1), 'G');
      StrBuilder strBuilder4 = strBuilder3.append((-2587.8706F));
      StrBuilder strBuilder5 = strBuilder2.deleteFirst("Av|ucr8v7]w^jM5");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      strBuilder_StrBuilderReader0.close();
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid startIndex: ");
      // Undeclared exception!
      try { 
        strBuilder0.charAt((-3557));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3557
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      String string0 = "";
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("");
      int int0 = 101;
      // Undeclared exception!
      try { 
        strBuilder1.insert(101, 2813.814103);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 101
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append('F');
      StrBuilder strBuilder2 = strBuilder0.trim();
      StrBuilder strBuilder3 = strBuilder2.insert(0, (long) 0);
      StrBuilder strBuilder4 = strBuilder2.setNewLineText((String) null);
      Object object0 = new Object();
      StrBuilder strBuilder5 = strBuilder0.appendFixedWidthPadRight(object0, 48, 'V');
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      int int0 = strBuilder5.lastIndexOf(strMatcher0, 1);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("'v.0rs3`cF");
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(0);
      StrBuilder strBuilder2 = strBuilder0.append((-1258.8784F));
      StrBuilder strBuilder3 = strBuilder2.insert(0, (long) 0);
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder4 = strBuilder2.deleteFirst((StrMatcher) strMatcher_TrimMatcher0);
      StrBuilder strBuilder5 = strBuilder4.replace((StrMatcher) strMatcher_TrimMatcher0, "'v.0rs3`cF", 0, 0, 0);
      StrBuilder strBuilder6 = strBuilder0.replaceFirst("'v.0rs3`cF", "'v.0rs3`cF");
      StrBuilder strBuilder7 = strBuilder0.append((-2075L));
      StrBuilder strBuilder8 = strBuilder3.append((char[]) null, 0, (-5447));
      StrBuilder strBuilder9 = strBuilder6.setCharAt(0, 'u');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder3.new StrBuilderWriter();
      StrBuilder strBuilder10 = strBuilder5.insert(0, (double) 0);
      strBuilder_StrBuilderWriter0.flush();
      StrBuilder strBuilder11 = strBuilder2.insert(0, "org.apache.commons.lang.text.StrMatcher$CharMatcher");
      int int0 = strBuilder5.length();
      StrBuilder strBuilder12 = strBuilder9.append('u');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder10.new StrBuilderReader();
      int int1 = strBuilder_StrBuilderReader0.read();
      int int2 = strBuilder1.hashCode();
      strBuilder_StrBuilderReader0.mark(5051);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      String string0 = "K-4d$C; FX_nmsK-0";
      StrBuilder strBuilder0 = new StrBuilder("K-4d$C; FX_nmsK-0");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("java.home", "K-4d$C; FX_nmsK-0");
      StrBuilder strBuilder2 = strBuilder0.setNullText("K-4d$C; FX_nmsK-0");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(1522L);
      strBuilder_StrBuilderReader0.reset();
      StrBuilder strBuilder3 = strBuilder0.deleteCharAt(0);
      int int0 = 32;
      int int1 = 1308;
      StrBuilder strBuilder4 = strBuilder1.appendFixedWidthPadLeft(1308, 4, '~');
      // Undeclared exception!
      try { 
        strBuilder4.insert(2837, (long) 1308);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2837
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("', has a length less than 2");
      String string0 = strBuilder0.toString();
      int int0 = 117;
      StrBuilder strBuilder1 = strBuilder0.deleteAll("', has a length less than 2");
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("', has a length less than 2");
      String string1 = null;
      StrBuilder strBuilder2 = strBuilder1.replaceAll((StrMatcher) strMatcher_StringMatcher0, (String) null);
      StrBuilder strBuilder3 = new StrBuilder(117);
      boolean boolean0 = strBuilder0.equals(strBuilder3);
      StrBuilder strBuilder4 = strBuilder3.append((-1L));
      char[] charArray0 = new char[3];
      charArray0[0] = '$';
      charArray0[1] = 'g';
      charArray0[2] = 'L';
      // Undeclared exception!
      try { 
        strBuilder4.insert(117, charArray0, 117, 117);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 117
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      boolean boolean0 = linkedList0.addAll((Collection<? extends String>) linkedList1);
      boolean boolean1 = linkedList0.offer("a*}>.S~0;j");
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "1.5");
      StrBuilder strBuilder2 = strBuilder0.setNewLineText("user.home");
      StrBuilder strBuilder3 = strBuilder2.append(653.5F);
      int int0 = 44;
      // Undeclared exception!
      try { 
        strBuilder3.deleteCharAt(44);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 44
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceAll('W', 'B');
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset();
      char[] charArray0 = new char[9];
      charArray0[0] = '[';
      charArray0[1] = '}';
      charArray0[2] = '0';
      charArray0[3] = ' ';
      charArray0[4] = 'E';
      charArray0[5] = 'T';
      charArray0[6] = '(';
      charArray0[7] = 'f';
      charArray0[8] = 'n';
      StrTokenizer strTokenizer1 = StrTokenizer.getTSVInstance(charArray0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      String string0 = strBuilder0.midString(0, 0);
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      int int1 = 0;
      char char0 = '#';
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft((Object) "", 0, '#');
      boolean boolean0 = strBuilder0.contains((StrMatcher) strMatcher_TrimMatcher0);
      StrBuilder strBuilder3 = strBuilder1.insert(0, (double) 0);
      StrBuilder strBuilder4 = strBuilder0.insert(0, "");
      String string1 = strBuilder1.leftString(0);
      String string2 = strBuilder2.toString();
      String string3 = strBuilder0.substring(0);
      // Undeclared exception!
      try { 
        strBuilder4.insert((-4358), "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -4358
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      String string0 = null;
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.replaceAll(":", "org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrBuilder strBuilder2 = strBuilder1.append(false);
      StrBuilder strBuilder3 = strBuilder2.append("");
      StrBuilder strBuilder4 = strBuilder0.replaceFirst((String) null, "x]<E");
      // Undeclared exception!
      try { 
        strBuilder4.deleteCharAt((-889));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -889
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[8];
      charArray0[0] = '[';
      charArray0[1] = '2';
      StrBuilder strBuilder1 = strBuilder0.append("{,PB=Yhr;x9`v", 0, 0);
      charArray0[2] = 'q';
      charArray0[3] = 'z';
      charArray0[4] = 'l';
      charArray0[5] = '%';
      charArray0[6] = '_';
      charArray0[7] = 'c';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.insert(0, (long) 0);
      StrBuilder strBuilder3 = strBuilder1.appendPadding(0, 'g');
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst((StrMatcher) null);
      StrBuilder strBuilder2 = strBuilder1.appendPadding(114, '[');
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators((Object[]) null, "2dktBri*s[~");
      // Undeclared exception!
      try { 
        strBuilder0.append("", 0, (-1752));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      int int0 = 2;
      StrBuilder strBuilder0 = new StrBuilder(2);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      char char0 = 'I';
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight(object0, 2, 'I');
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      int int0 = (-4771);
      char[] charArray0 = new char[1];
      charArray0[0] = '$';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(9, 9, charArray0, (-4771));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 9
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[6];
      charArray0[0] = '<';
      charArray0[1] = '7';
      charArray0[2] = '\"';
      StrBuilder strBuilder1 = strBuilder0.append((-1.0F));
      StringBuffer stringBuffer0 = strBuilder1.toStringBuffer();
      StrBuilder strBuilder2 = strBuilder1.ensureCapacity(0);
      charArray0[3] = 'f';
      StrBuilder strBuilder3 = strBuilder0.deleteFirst("62)+>Ul@o]p<");
      charArray0[4] = 's';
      StrBuilder strBuilder4 = strBuilder0.insert(0, 369.4868F);
      charArray0[5] = 'V';
      StrBuilder strBuilder5 = strBuilder0.insert(0, charArray0, 0, 0);
      StrBuilder strBuilder6 = strBuilder5.appendPadding(0, 'f');
      StrBuilder strBuilder7 = strBuilder0.append(0.0);
      StrBuilder strBuilder8 = strBuilder7.deleteAll("*fSj4>K$0wB!5");
      StrBuilder strBuilder9 = strBuilder3.replaceAll("Invalid offset: ", "");
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("");
      StrBuilder strBuilder10 = strBuilder9.replaceAll(strMatcher0, "Invalid offset: ");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      int int0 = strBuilder_StrBuilderReader0.read();
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String[] stringArray0 = strBuilder_StrBuilderTokenizer0.getTokenArray();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder strBuilder1 = strBuilder0.deleteAll("");
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance();
      StrBuilder strBuilder2 = strBuilder0.deleteFirst((String) null);
      char[] charArray0 = new char[3];
      charArray0[0] = '3';
      charArray0[1] = '!';
      charArray0[2] = '/';
      StrBuilder strBuilder3 = strBuilder0.append(charArray0);
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadRight(object0, 0, 'G');
      StrBuilder strBuilder5 = strBuilder2.appendFixedWidthPadRight(0, 0, 'G');
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      int int0 = (-2688);
      StrBuilder strBuilder0 = new StrBuilder((-2688));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      String string0 = strBuilder0.midString((-2688), (-2688));
      String string1 = "";
      StrBuilder strBuilder1 = strBuilder0.append("");
      int int1 = (-2156);
      // Undeclared exception!
      try { 
        strBuilder1.toCharArray((-2688), (-2156));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2688
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("MvKv");
      StrBuilder strBuilder1 = strBuilder0.insert(0, (long) 0);
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance("9lgjPL");
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Iterator) strTokenizer0, (String) null);
      char[] charArray0 = new char[7];
      charArray0[0] = '+';
      charArray0[1] = ']';
      charArray0[2] = '.';
      charArray0[4] = '+';
      charArray0[6] = ' ';
      strBuilder2.buffer = charArray0;
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadLeft((Object) "MvKv", 0, '+');
      int int0 = strBuilder0.size();
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('+');
      StrBuilder strBuilder4 = strBuilder1.replace((StrMatcher) strMatcher_CharMatcher0, ")C&I?iR.9u#2{4QU(c", 32, 32, (-1));
      StrTokenizer strTokenizer1 = strBuilder4.asTokenizer();
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      String string0 = null;
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      char[] charArray0 = new char[0];
      strBuilder0.buffer = charArray0;
      int int0 = 51;
      int int1 = strBuilder0.lastIndexOf('\\', 51);
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder2 = strBuilder0.deleteFirst('N');
      StrBuilder strBuilder3 = strBuilder1.deleteFirst((String) null);
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      // Undeclared exception!
      try { 
        strBuilder3.replace((StrMatcher) strMatcher_TrimMatcher0, (String) null, (-1), (-1), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((-1), (-1), 'R');
      StrBuilder strBuilder2 = strBuilder0.append('s');
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) strBuilder2;
      objectArray0[3] = (Object) "";
      StrBuilder strBuilder3 = strBuilder0.appendWithSeparators(objectArray0, (String) null);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      char[] charArray0 = new char[9];
      charArray0[0] = 's';
      charArray0[1] = 'R';
      charArray0[2] = 'R';
      charArray0[3] = 's';
      charArray0[4] = 's';
      charArray0[5] = 's';
      charArray0[6] = 'R';
      charArray0[7] = 'R';
      charArray0[8] = 'R';
      strBuilder_StrBuilderWriter0.write(charArray0);
      int int0 = strBuilder3.capacity();
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = null;
      try {
        strMatcher_StringMatcher0 = new StrMatcher.StringMatcher((String) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrMatcher$StringMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(691);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((-610), (-610), '\\');
      String string0 = strBuilder0.getNewLineText();
      int int0 = strBuilder0.size();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      char[] charArray0 = new char[1];
      charArray0[0] = '\\';
      strBuilder_StrBuilderWriter0.write(charArray0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.isEmpty();
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      String string0 = strBuilder0.rightString(0);
      StrBuilder strBuilder2 = strBuilder0.deleteAll("");
      StrBuilder strBuilder3 = strBuilder2.append((char[]) null);
      StrBuilder strBuilder4 = strBuilder3.setLength(117);
      StrBuilder strBuilder5 = strBuilder2.setCharAt(0, '&');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize((char[]) null, 1749, 1749);
      // Undeclared exception!
      try { 
        strBuilder0.append("w=UuT=M!f+[", 1480, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      int int0 = (-2989);
      StrBuilder strBuilder0 = new StrBuilder((-2989));
      String string0 = "g`q&t&\"\\,c4?M";
      StrBuilder strBuilder1 = strBuilder0.setNullText("g`q&t&\",c4?M");
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      // Undeclared exception!
      try { 
        strBuilder2.validateIndex((-2989));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2989
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      StrBuilder strBuilder1 = strBuilder0.append(object0);
      StrBuilder strBuilder2 = strBuilder0.replaceFirst(strMatcher0, "TW[Jv>H");
      boolean boolean0 = strBuilder0.startsWith("end < start");
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Object[] objectArray0 = new Object[2];
      StrBuilder strBuilder1 = new StrBuilder("s):86%Y\">$U");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      objectArray0[0] = object0;
      objectArray0[1] = (Object) strBuilder0;
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators(objectArray0, "s):86%Y\">$U");
      Writer writer0 = strBuilder0.asWriter();
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("\"j@aEW~ISn+s,");
      StrBuilder strBuilder1 = strBuilder0.append((StringBuffer) null);
      char char0 = '&';
      StrBuilder strBuilder2 = strBuilder0.insert(0, '&');
      StrBuilder strBuilder3 = strBuilder1.appendNull();
      // Undeclared exception!
      try { 
        strBuilder0.validateRange(0, (-2137));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-280);
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity((-280));
      int int1 = 0;
      int int2 = 0;
      String string0 = strBuilder0.midString(0, 0);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-280), (Object) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -280
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "B<";
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      int int0 = strBuilder0.indexOf("B<");
      int int1 = strBuilder0.lastIndexOf((StrMatcher) null);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1), (-1.0));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendPadding((-566), 'L');
      StrBuilder strBuilder2 = strBuilder0.replace(0, 0, "o\"");
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((-1241.6792F));
      StrBuilder strBuilder2 = new StrBuilder((String) null);
      char[] charArray0 = new char[2];
      // Undeclared exception!
      try { 
        strBuilder2.insert((-2942), (Object) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2942
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("F");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[0];
      int int0 = strBuilder_StrBuilderReader0.read(charArray0);
      StrBuilder strBuilder1 = strBuilder0.clear();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      StrBuilder strBuilder2 = new StrBuilder();
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder2);
      long long0 = strBuilder_StrBuilderReader0.skip(0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrMatcher strMatcher0 = null;
      StrBuilder strBuilder1 = strBuilder0.append('-');
      String string0 = strBuilder1.substring(0, 895);
      String string1 = strBuilder1.toString();
      // Undeclared exception!
      try { 
        strBuilder1.setCharAt(1709, '-');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1709
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder1 = strBuilder0.append(814L);
      StrBuilder strBuilder2 = strBuilder1.insert(0, 2370L);
      StrBuilder strBuilder3 = strBuilder0.append(1);
      StrBuilder strBuilder4 = strBuilder0.appendWithSeparators((Collection) linkedList0, "#_Ub");
      StrBuilder strBuilder5 = strBuilder0.insert(1, '\\');
      String string0 = strBuilder2.toString();
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[8];
      charArray0[0] = 'E';
      charArray0[1] = 'w';
      charArray0[2] = '0';
      charArray0[3] = '+';
      charArray0[4] = '\\';
      charArray0[5] = 'g';
      charArray0[6] = 'R';
      charArray0[7] = 'J';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0, 0, 0);
      StrBuilder strBuilder2 = strBuilder0.deleteFirst((StrMatcher) null);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.append(585);
      char[] charArray0 = new char[6];
      charArray0[0] = '0';
      charArray0[1] = 'B';
      charArray0[2] = '>';
      StrBuilder strBuilder2 = strBuilder0.appendPadding(346, 'B');
      charArray0[3] = 'c';
      charArray0[4] = 'L';
      charArray0[5] = 'q';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder0.indexOf(strMatcher0, 0);
      StrBuilder strBuilder3 = strBuilder0.replaceAll('3', '3');
      int int1 = strBuilder1.hashCode();
      String string0 = strBuilder3.leftString((-2544));
      StrBuilder strBuilder4 = strBuilder3.deleteAll('!');
      StrBuilder strBuilder5 = strBuilder4.minimizeCapacity();
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(1L);
      char[] charArray0 = new char[1];
      charArray0[0] = 'G';
      StrBuilder strBuilder2 = strBuilder0.insert(0, charArray0);
      StrBuilder strBuilder3 = strBuilder2.deleteFirst("");
      StrBuilder strBuilder4 = strBuilder0.reverse();
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      StrBuilder strBuilder5 = strBuilder4.replaceAll(strMatcher0, (String) null);
      StrBuilder strBuilder6 = strBuilder4.append(charArray0, 0, 0);
      char[] charArray1 = strBuilder0.toCharArray(0, 0);
      StrBuilder strBuilder7 = strBuilder1.trim();
      StrBuilder strBuilder8 = strBuilder6.setNullText("");
      StrBuilder strBuilder9 = strBuilder5.clear();
      StrBuilder strBuilder10 = strBuilder8.appendPadding(1364, 'G');
      StrBuilder strBuilder11 = strBuilder5.appendFixedWidthPadLeft((Object) strBuilder3, 0, 'G');
      StrBuilder strBuilder12 = strBuilder6.setNewLineText((String) null);
      boolean boolean0 = strBuilder2.contains("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      boolean boolean1 = strBuilder0.contains('F');
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2132));
      StrBuilder strBuilder1 = strBuilder0.appendPadding(3, 'B');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      StrBuilder strBuilder2 = strBuilder1.deleteFirst('B');
      char[] charArray0 = new char[8];
      charArray0[0] = 'B';
      charArray0[1] = '\"';
      charArray0[2] = 'B';
      charArray0[3] = 'M';
      charArray0[4] = 'B';
      charArray0[5] = 'r';
      charArray0[6] = 'B';
      charArray0[7] = 'B';
      StrBuilder strBuilder3 = strBuilder0.append(charArray0, 3, 3);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = strBuilder0.toCharArray(0, 0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrBuilder strBuilder2 = strBuilder0.replaceFirst("", "java.vm.vendor");
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      char[] charArray0 = new char[7];
      charArray0[0] = '~';
      charArray0[1] = ',';
      charArray0[2] = 'B';
      charArray0[3] = 'f';
      charArray0[4] = '5';
      charArray0[5] = 'i';
      charArray0[6] = 'u';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder3 = strBuilder2.replaceAll(strMatcher0, "oj9?<KCU\"K!l9!/%");
      boolean boolean0 = strBuilder0.contains("");
      String string0 = strBuilder0.rightString(1647);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      int int0 = 1894;
      StrBuilder strBuilder0 = new StrBuilder(1894);
      char char0 = 'p';
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder1 = strBuilder0.append((float) 1894);
      int int1 = 0;
      // Undeclared exception!
      try { 
        strBuilder1.setCharAt(52, '.');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 52
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1974);
      // Undeclared exception!
      try { 
        strBuilder0.substring((-872), 1974);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -872
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      int int0 = 73;
      StrBuilder strBuilder0 = new StrBuilder(73);
      String string0 = "org.apache.commons.lang.text.StrBuilder$StrBuilderReader";
      StrBuilder strBuilder1 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, 73, 73);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, (String) null);
      StrMatcher strMatcher1 = StrMatcher.noneMatcher();
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher((String) null);
      StrBuilder strBuilder2 = strBuilder0.replaceFirst(strMatcher1, (String) null);
      String string0 = "java.runtime.name";
      // Undeclared exception!
      try { 
        strBuilder2.append(strBuilder0, (-914), (-1000));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrBuilder strBuilder2 = strBuilder0.append("Invalid startIndex: ");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadRight(object0, 0, '`');
      StrBuilder strBuilder4 = strBuilder1.setNewLineText("");
      int int0 = strBuilder0.lastIndexOf("", 114);
      String string0 = strBuilder0.getNullText();
      StrBuilder strBuilder5 = strBuilder0.deleteFirst('@');
      StrBuilder strBuilder6 = strBuilder4.setNewLineText("Invalid offset: ");
      StrBuilder strBuilder7 = strBuilder1.trim();
      StrTokenizer strTokenizer0 = strBuilder7.asTokenizer();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(19);
      StrBuilder strBuilder8 = strBuilder4.insert(0, 0.0);
      int int1 = strBuilder1.lastIndexOf("java.util.prefs.PreferencesFactory", 0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      String string0 = strBuilder0.leftString(0);
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('=');
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.deleteAll("");
      StrBuilder strBuilder3 = strBuilder0.replaceFirst(strMatcher0, "a7Hp");
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("a7Hp");
      int int0 = strBuilder0.indexOf((StrMatcher) strMatcher_CharMatcher0, 0);
      StrBuilder strBuilder4 = strBuilder0.insert(0, '=');
      StrBuilder strBuilder5 = strBuilder1.deleteFirst('=');
      StringBuffer stringBuffer0 = null;
      try {
        stringBuffer0 = new StringBuffer((String) null);
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(115);
      StrBuilder strBuilder1 = strBuilder0.appendPadding(0, 'b');
      StrBuilder strBuilder2 = strBuilder0.setNewLineText("<");
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      String string0 = "sq})~*ke<.";
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "sq})~*ke<.");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[1];
      charArray0[0] = 'L';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0);
      char[] charArray1 = new char[0];
      int int1 = strBuilder_StrBuilderReader0.read(charArray1);
      strBuilder_StrBuilderReader0.close();
      // Undeclared exception!
      try { 
        strBuilder1.insert(1215, (-2413.54));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1215
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("<,r");
      StrBuilder strBuilder1 = new StrBuilder("^0fOrUK,IS");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4MP>*(bto");
      StrBuilder strBuilder1 = strBuilder0.setNullText("`Yqye{n8jF");
      int int0 = strBuilder0.size();
      int int1 = strBuilder0.lastIndexOf('V');
      String string0 = strBuilder1.rightString(9);
      int int2 = strBuilder0.indexOf("4MP>*(bto");
      StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
      StringBuffer stringBuffer0 = new StringBuffer(533);
      // Undeclared exception!
      try { 
        strBuilder1.append(stringBuffer0, 639, 116);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.leftString(2476);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(0, '<');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.insert(0, (float) 0);
      StrBuilder strBuilder2 = strBuilder0.insert(0, 1099L);
      StrBuilder strBuilder3 = strBuilder1.clear();
      char[] charArray0 = new char[2];
      char char0 = 'j';
      charArray0[0] = 'j';
      char char1 = '8';
      charArray0[1] = '8';
      // Undeclared exception!
      try { 
        strBuilder1.insert(0, charArray0, 743, 743);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: 743
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[7];
      charArray0[0] = 'Y';
      charArray0[1] = '2';
      charArray0[2] = 'V';
      charArray0[3] = 'A';
      charArray0[4] = 'O';
      charArray0[5] = 'N';
      charArray0[6] = '5';
      // Undeclared exception!
      try { 
        strBuilder0.insert(2361, charArray0, 2361, 2361);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2361
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(" LDEmzyPt_8p{QCy");
      StringBuffer stringBuffer0 = new StringBuffer(589);
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      int int0 = strBuilder0.validateRange(0, 0);
      // Undeclared exception!
      try { 
        strBuilder1.replace((StrMatcher) null, " LDEmzyPt_8p{QCy", 463, 589, 463);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = strBuilder0.capacity();
      StrBuilder strBuilder1 = strBuilder0.deleteAll('/');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      int int1 = 32;
      char[] charArray0 = new char[5];
      charArray0[0] = '/';
      charArray0[1] = '/';
      charArray0[2] = '/';
      charArray0[3] = '/';
      charArray0[4] = '/';
      // Undeclared exception!
      try { 
        strBuilder1.insert(32, charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = 'j';
      StrBuilder strBuilder1 = strBuilder0.append(1165.7F);
      // Undeclared exception!
      try { 
        strBuilder1.substring((-2414));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2414
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Mb-&EV h!u` ~v>J");
      int int0 = 1725;
      // Undeclared exception!
      try { 
        strBuilder0.append("~+JB)9a]_j:Qzq*{7", 101, 1725);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("B6");
      int int0 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.validateRange(0, (-1672));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid length: ");
      char[] charArray0 = new char[3];
      StrBuilder strBuilder1 = strBuilder0.trim();
      charArray0[0] = 'i';
      charArray0[1] = '^';
      charArray0[2] = 'd';
      StrBuilder strBuilder2 = strBuilder0.insert(0, charArray0);
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(2773);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2773
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.append('6');
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight(0, 0, '$');
      StrBuilder strBuilder3 = strBuilder2.append((Object) strBuilder1);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      StrBuilder strBuilder4 = strBuilder3.deleteAll(strMatcher0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer1 = strBuilder2.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer1.getContent();
      int int0 = strBuilder2.capacity();
      // Undeclared exception!
      try { 
        strBuilder1.insert((-2550), 3049L);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2550
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2896));
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray((-2896), (-2896));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2896
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.append("");
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      int int0 = strBuilder1.indexOf((StrMatcher) strMatcher_NoMatcher0, 0);
      String string0 = "";
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("");
      boolean boolean0 = true;
      StrBuilder strBuilder2 = strBuilder1.append(true);
      int int1 = 0;
      StrBuilder strBuilder3 = strBuilder2.setLength(0);
      StrBuilder strBuilder4 = strBuilder0.append((long) 0);
      StrBuilder strBuilder5 = strBuilder2.append((-1));
      StrBuilder strBuilder6 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder6.new StrBuilderWriter();
      int int2 = 32;
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("", 32, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("1zK8K0");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.previous();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray(572, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder();
      int int0 = 0;
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1, 0, 0);
      StrBuilder strBuilder3 = strBuilder2.replaceAll("", "");
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      String string0 = "W[g59erR?EA%|,BS+";
      char char0 = '`';
      StrMatcher strMatcher1 = StrMatcher.charMatcher('`');
      // Undeclared exception!
      try { 
        strBuilder1.replace(strMatcher0, "W[g59erR?EA%|,BS+", 57, 0, 537);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('l');
      StrBuilder strBuilder2 = strBuilder0.replaceAll("", "CX_");
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.append(2842.466);
      StrBuilder strBuilder2 = strBuilder1.append(strBuilder0, 0, 0);
      StringBuffer stringBuffer0 = strBuilder2.toStringBuffer();
      int int0 = 0;
      char[] charArray0 = new char[2];
      charArray0[0] = '+';
      charArray0[1] = 'p';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      // Undeclared exception!
      try { 
        strBuilder0.replace((StrMatcher) strMatcher_CharSetMatcher0, "M#m_t^k+$ha-|?", 884, 0, 48);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      String string0 = "awt.toolkit";
      StrBuilder strBuilder0 = new StrBuilder("awt.toolkit");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("awt.toolkit");
      int int0 = 0;
      // Undeclared exception!
      try { 
        strBuilder1.deleteCharAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("PF)\"A[");
      StrBuilder strBuilder1 = strBuilder0.replaceAll("PF)\"A[", "OmYW");
      StrBuilder strBuilder2 = strBuilder1.deleteAll("OmYW");
      char[] charArray0 = new char[9];
      charArray0[0] = 'S';
      charArray0[1] = 'x';
      charArray0[2] = '+';
      charArray0[3] = '8';
      charArray0[4] = 'b';
      charArray0[5] = ';';
      charArray0[6] = '&';
      charArray0[7] = 'w';
      charArray0[8] = '<';
      // Undeclared exception!
      try { 
        strBuilder2.append(charArray0, 0, (-2602));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: -2602
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) "", 0, '[');
      StrBuilder strBuilder2 = strBuilder1.deleteAll("");
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity((-2462));
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      StrBuilder strBuilder2 = strBuilder1.append(1878.0098F);
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadRight(0, 0, ';');
      int int0 = (-676);
      int int1 = 0;
      StrBuilder strBuilder4 = strBuilder2.deleteAll(';');
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrBuilder strBuilder5 = strBuilder4.deleteFirst(strMatcher0);
      char[] charArray0 = new char[4];
      charArray0[0] = 'A';
      charArray0[1] = ';';
      charArray0[2] = ';';
      charArray0[3] = ';';
      // Undeclared exception!
      try { 
        strBuilder5.insert((-676), charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -676
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      String string0 = "q@;-";
      StrBuilder strBuilder0 = new StrBuilder("q@;-");
      Writer writer0 = strBuilder0.asWriter();
      // Undeclared exception!
      try { 
        strBuilder0.insert((-444), 108);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -444
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      char[] charArray0 = new char[2];
      charArray0[0] = 'L';
      charArray0[1] = 'N';
      // Undeclared exception!
      try { 
        strBuilder0.insert((-5076), charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -5076
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("s^G~@}9/&JFB");
      StrBuilder strBuilder1 = strBuilder0.appendPadding(1589, 'y');
      StrBuilder strBuilder2 = strBuilder0.appendPadding(5, 'y');
      StrBuilder strBuilder3 = strBuilder0.trim();
      StrBuilder strBuilder4 = strBuilder2.insert(0, (float) 1589);
      boolean boolean0 = strBuilder3.equalsIgnoreCase(strBuilder0);
      StrBuilder strBuilder5 = strBuilder3.appendNewLine();
      StrBuilder strBuilder6 = strBuilder3.append(strBuilder2, 5, 5);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      // Undeclared exception!
      try { 
        strBuilder0.insert(1098, (-38));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1098
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.insert(170, 1184.5);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 170
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      StringBuffer stringBuffer0 = new StringBuffer();
      int int0 = 3879;
      // Undeclared exception!
      try { 
        strBuilder0.insert(3879, "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3879
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[9];
      charArray0[0] = '(';
      charArray0[1] = 'g';
      charArray0[2] = 'A';
      charArray0[3] = '~';
      charArray0[4] = 'b';
      charArray0[5] = 'u';
      charArray0[6] = 'N';
      charArray0[7] = 'F';
      charArray0[8] = '\"';
      // Undeclared exception!
      try { 
        strBuilder0.getChars((-3440), (-3440), charArray0, (-3440));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3440
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1));
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      StringBuffer stringBuffer0 = new StringBuffer(4);
      StrBuilder strBuilder3 = strBuilder1.append(stringBuffer0);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = new StringBuffer(0);
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(154);
      StrBuilder strBuilder1 = new StrBuilder("");
      StrBuilder strBuilder2 = strBuilder1.setNullText("");
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadLeft((Object) strBuilder1, 39, '\"');
      StrBuilder strBuilder4 = strBuilder1.trim();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder3.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(101);
      StrBuilder strBuilder1 = strBuilder0.insert(0, (double) 101);
      StrBuilder strBuilder2 = strBuilder0.setNullText("");
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("|,\"j1@SIHkkbo");
      // Undeclared exception!
      try { 
        strBuilder0.insert(837, (long) 837);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 837
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[1];
      charArray0[0] = 'u';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      char[] charArray1 = new char[3];
      charArray1[0] = 'k';
      charArray1[1] = '2';
      int int0 = (-2057);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-2057), 'u');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2057
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip((-147L));
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('.', '.');
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[6];
      charArray0[0] = 'Z';
      charArray0[1] = '-';
      charArray0[2] = 'G';
      charArray0[3] = '3';
      charArray0[4] = '2';
      charArray0[5] = 'Q';
      char[] charArray1 = strBuilder0.getChars(charArray0);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.append((float) 0);
      StrBuilder strBuilder2 = strBuilder0.append((Object) null);
      char char0 = 'Y';
      StrBuilder strBuilder3 = strBuilder0.insert(0, 'Y');
      int int1 = 0;
      int int2 = 922;
      // Undeclared exception!
      try { 
        strBuilder0.delete((-3508), 922);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3508
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      int int0 = 4;
      StrBuilder strBuilder0 = new StrBuilder(4);
      int int1 = strBuilder0.indexOf((StrMatcher) null);
      char char0 = '`';
      StrBuilder strBuilder1 = strBuilder0.deleteAll('`');
      String string0 = "YLnUj9hDCrx~xD[3";
      StrBuilder strBuilder2 = new StrBuilder("YLnUj9hDCrx~xD[3");
      int int2 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.replace((-1), 0, "YLnUj9hDCrx~xD[3");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.append("");
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      char char0 = '~';
      StrMatcher strMatcher0 = StrMatcher.charMatcher('~');
      StrBuilder strBuilder2 = strBuilder1.append('Z');
      int int0 = strBuilder1.indexOf((StrMatcher) strMatcher_NoMatcher0, (-743));
      char char1 = 's';
      StrBuilder strBuilder3 = strBuilder1.deleteAll('s');
      StrMatcher strMatcher1 = StrMatcher.doubleQuoteMatcher();
      int int1 = strBuilder3.lastIndexOf(strMatcher1, (-743));
      // Undeclared exception!
      try { 
        strBuilder3.setLength((-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = strBuilder0.lastIndexOf('0', 798);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((-2428.6F));
      // Undeclared exception!
      try { 
        strBuilder0.delete(1365, 1365);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[1];
      StrBuilder strBuilder1 = strBuilder0.append((Object) null);
      StrBuilder strBuilder2 = strBuilder1.trim();
      charArray0[0] = ':';
      // Undeclared exception!
      try { 
        strBuilder0.getChars((-1616), (-1), charArray0, 1762);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1616
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("4.1");
      StrMatcher strMatcher0 = StrMatcher.charMatcher('R');
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_StringMatcher0);
      int int1 = strBuilder0.length();
      boolean boolean0 = strBuilder0.isEmpty();
      int int2 = strBuilder0.size();
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("D?A[{,XG");
      // Undeclared exception!
      try { 
        strBuilder0.setLength((-3041));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3041
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1076);
      Object object0 = new Object();
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("v");
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      char[] charArray0 = new char[3];
      charArray0[0] = '8';
      charArray0[1] = '.';
      charArray0[2] = '}';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.append(object0);
      StrBuilder strBuilder2 = strBuilder0.append(true);
      int int0 = strBuilder0.indexOf("v");
      int int1 = strBuilder2.lastIndexOf(strMatcher0);
      char[] charArray1 = new char[9];
      charArray1[0] = 'R';
      charArray1[1] = 'P';
      charArray1[2] = '?';
      charArray1[3] = ' ';
      charArray1[4] = '!';
      charArray1[5] = '8';
      charArray1[6] = 'g';
      charArray1[7] = 'Z';
      charArray1[8] = 'z';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray1);
      StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);
      // Undeclared exception!
      try { 
        strBuilder2.append(stringBuffer0, 1076, 2);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("vh._t^)J,3RlO");
      int int0 = 2028;
      Reader reader0 = strBuilder0.asReader();
      int int1 = strBuilder0.indexOf(':', 2028);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[7];
      charArray0[0] = '2';
      charArray0[1] = ':';
      charArray0[2] = ':';
      charArray0[3] = ':';
      charArray0[4] = ':';
      charArray0[5] = ':';
      charArray0[6] = ':';
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("Invalid offset: ");
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 2028, 102);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, (-686), (-686));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1140));
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "(");
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder strBuilder2 = strBuilder1.replaceFirst((StrMatcher) null, "}[`CZ");
      // Undeclared exception!
      try { 
        strBuilder1.insert((-1140), true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1140
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.appendPadding(0, 's');
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      char[] charArray0 = new char[0];
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      // Undeclared exception!
      try { 
        strBuilder1.replace(strMatcher0, "2pHa&EY&", (-3674), 0, (-3674));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3674
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrBuilder strBuilder2 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder3 = strBuilder1.deleteFirst("Invalid offset: ");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      StrBuilder strBuilder4 = strBuilder1.appendFixedWidthPadLeft(object0, 577, ';');
      StrBuilder strBuilder5 = strBuilder2.insert(577, (double) 577);
      int int0 = strBuilder1.indexOf((StrMatcher) null);
      StrBuilder strBuilder6 = strBuilder2.replaceAll((StrMatcher) null, "Invalid offset: ");
      Reader reader0 = strBuilder0.asReader();
      String string0 = strBuilder0.leftString(577);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[2];
      charArray0[0] = 'd';
      charArray0[1] = '4';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StrBuilder strBuilder2 = strBuilder1.appendNull();
      StrBuilder strBuilder3 = strBuilder2.deleteAll('d');
      StrBuilder strBuilder4 = strBuilder3.appendNull();
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder5 = strBuilder4.replace((StrMatcher) strMatcher_TrimMatcher0, "", 0, 0, 0);
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder6 = strBuilder0.append(charArray0);
      char char0 = strBuilder1.charAt(1);
      StrBuilder strBuilder7 = strBuilder1.append(0);
      StrBuilder strBuilder8 = strBuilder3.insert(1, true);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.lastIndexOf('}');
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("[y\"KoB],{");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[9];
      charArray0[0] = '\"';
      charArray0[1] = 'c';
      charArray0[2] = '5';
      charArray0[3] = ':';
      charArray0[4] = '[';
      charArray0[5] = '\"';
      charArray0[6] = ':';
      charArray0[7] = '.';
      charArray0[8] = 'c';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, (-2739), (-2739));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -2739
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[1];
      charArray0[0] = 'v';
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterMatcher(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.append(0.0);
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 102, 102);
      StrBuilder strBuilder2 = strBuilder0.setNullText("S0L%Lba/{8cGIg(|3/{");
      // Undeclared exception!
      try { 
        strBuilder1.replace(strMatcher0, "java.awt.headless", 965, 102, 102);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      String string0 = "org.apache.commons.lang.text.StrMatcher$CharSetMatcher";
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrMatcher$CharSetMatcher");
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("org.apache.commons.lang.text.StrMatcher$CharSetMatcher");
      StrBuilder strBuilder2 = strBuilder0.append((Object) "org.apache.commons.lang.text.StrMatcher$CharSetMatcher");
      char[] charArray0 = new char[2];
      charArray0[0] = 'W';
      charArray0[1] = '%';
      // Undeclared exception!
      try { 
        strBuilder2.append(charArray0, (-409), (-409));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -409
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(2348.4154927);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      char[] charArray0 = new char[4];
      charArray0[0] = '\'';
      charArray0[1] = '6';
      charArray0[2] = 'g';
      charArray0[3] = 'C';
      // Undeclared exception!
      try { 
        strBuilder1.append(charArray0, 2177, 2177);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 2177
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(987);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((char[]) null, 2161, (-2116));
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      String string0 = "\\#GdY?w6_o}51i";
      StrBuilder strBuilder0 = new StrBuilder("#GdY?w6_o}51i");
      char char0 = 'w';
      char[] charArray0 = new char[7];
      charArray0[0] = 'w';
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("z;uS <", "/Lj)VS[");
      StrBuilder strBuilder2 = new StrBuilder("#GdY?w6_o}51i");
      // Undeclared exception!
      try { 
        strBuilder2.toCharArray(1441, 1441);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.toString();
      StrBuilder strBuilder1 = strBuilder0.setNullText("\"yaW6HVPU");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[6];
      charArray0[0] = 'j';
      charArray0[1] = '2';
      charArray0[2] = '5';
      charArray0[3] = '3';
      charArray0[4] = 'l';
      charArray0[5] = 'I';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0, 0, 0);
      StrBuilder strBuilder2 = strBuilder0.ensureCapacity(249);
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Writer writer0 = strBuilder0.asWriter();
      String string0 = strBuilder0.toString();
      int int0 = 0;
      String string1 = strBuilder0.midString(4051, 0);
      char[] charArray0 = new char[9];
      StrBuilder strBuilder1 = strBuilder0.clear();
      charArray0[0] = ')';
      charArray0[1] = 'i';
      charArray0[2] = 'b';
      charArray0[3] = 'd';
      // Undeclared exception!
      try { 
        strBuilder1.deleteCharAt(3173);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3173
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = 258;
      char char0 = 'i';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) "", 258, 'i');
      String string1 = strBuilder1.substring(258);
      strBuilder1.validateIndex(258);
      StrBuilder strBuilder2 = strBuilder1.deleteFirst("tQ%8~dM3.0Sx0");
      char[] charArray0 = strBuilder0.toCharArray();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      int int1 = 0;
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance("");
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 0, (-253));
      StrBuilder strBuilder3 = strBuilder1.append(strBuilder2);
      StrBuilder strBuilder4 = strBuilder1.insert(258, (double) 258);
      StrBuilder strBuilder5 = new StrBuilder(258);
      StrBuilder strBuilder6 = strBuilder0.appendFixedWidthPadRight((Object) strBuilder5, 258, 'i');
      // Undeclared exception!
      try { 
        strBuilder5.delete(48, 258);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("startIndex must be valid");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("startIndex must be valid");
      strBuilder_StrBuilderWriter0.write(0);
      StrBuilder strBuilder1 = new StrBuilder(0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("");
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      StrBuilder strBuilder3 = strBuilder1.setLength(1449);
      boolean boolean1 = strBuilder0.equals(strBuilder1);
      StrBuilder strBuilder4 = strBuilder0.append(true);
      StrBuilder strBuilder5 = strBuilder1.append((Object) strBuilder_StrBuilderWriter0);
      StrBuilder strBuilder6 = strBuilder1.appendWithSeparators((Iterator) null, "startIndex must be valid");
      StrBuilder strBuilder7 = strBuilder3.insert(0, 'C');
      StrBuilder strBuilder8 = strBuilder7.insert(0, (double) 0);
      StrTokenizer strTokenizer0 = strBuilder7.asTokenizer();
      Reader reader0 = strBuilder5.asReader();
      int int0 = strBuilder4.lastIndexOf("");
      String string0 = strBuilder3.leftString(1449);
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2094));
      int int0 = strBuilder0.hashCode();
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.replace(0, 0, "length must be valid");
      char[] charArray0 = new char[4];
      String string0 = strBuilder0.midString(115, 93);
      charArray0[0] = 'm';
      charArray0[1] = '_';
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      StrBuilder strBuilder2 = strBuilder0.deleteFirst(strMatcher0);
      charArray0[2] = '8';
      charArray0[3] = '`';
      strBuilder0.getChars(0, 0, charArray0, 0);
      int int1 = strBuilder0.hashCode();
      int int2 = strBuilder0.lastIndexOf('8');
      // Undeclared exception!
      try { 
        strBuilder2.insert(2062, (double) 2062);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2062
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("t6qL8@Ml{U+yR");
      boolean boolean0 = strBuilder0.isEmpty();
      boolean boolean1 = strBuilder0.startsWith("");
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder1.append(1.5);
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder1);
      StrBuilder strBuilder4 = strBuilder0.append(0.0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      Object[] objectArray0 = new Object[9];
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      int int0 = strBuilder2.lastIndexOf(strMatcher0);
      objectArray0[0] = (Object) strBuilder4;
      objectArray0[1] = (Object) strBuilder2;
      objectArray0[2] = (Object) strBuilder1;
      objectArray0[3] = (Object) strBuilder1;
      objectArray0[4] = (Object) "";
      objectArray0[5] = (Object) strBuilder2;
      objectArray0[6] = (Object) strBuilder1;
      objectArray0[7] = (Object) strBuilder_StrBuilderTokenizer0;
      objectArray0[8] = (Object) strBuilder2;
      StrBuilder strBuilder5 = strBuilder3.appendWithSeparators(objectArray0, " -YRNBh$#<AZx^wkW\"");
      StrMatcher strMatcher1 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher1, "Linux");
      String string0 = strBuilder3.toString();
      StrBuilder strBuilder7 = strBuilder1.append(strBuilder3);
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.append(1L);
      char[] charArray0 = new char[1];
      charArray0[0] = 'G';
      StrBuilder strBuilder2 = strBuilder0.insert(0, charArray0);
      StrBuilder strBuilder3 = strBuilder2.deleteFirst("");
      StrBuilder strBuilder4 = strBuilder0.reverse();
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      String string0 = null;
      StrBuilder strBuilder5 = strBuilder4.replaceAll(strMatcher0, (String) null);
      StrBuilder strBuilder6 = strBuilder4.append(charArray0, 0, 0);
      char[] charArray1 = strBuilder0.toCharArray(0, 0);
      StrBuilder strBuilder7 = strBuilder1.trim();
      StrBuilder strBuilder8 = new StrBuilder('G');
      StrBuilder strBuilder9 = strBuilder5.clear();
      StrBuilder strBuilder10 = strBuilder8.appendPadding(1364, 'G');
      // Undeclared exception!
      try { 
        strBuilder0.substring((-2827));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2827
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }
}
