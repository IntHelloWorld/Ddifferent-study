/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 28 18:28:27 GMT 2020
 */

package org.apache.commons.lang.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.Writer;
import java.nio.Buffer;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.NoSuchElementException;
import java.util.stream.Stream;
import org.apache.commons.lang.text.StrBuilder;
import org.apache.commons.lang.text.StrMatcher;
import org.apache.commons.lang.text.StrTokenizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StrBuilder_ESTest extends StrBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(", '");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(1964, 1964, 'I');
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(", '");
      int int0 = strBuilder1.lastIndexOf(strMatcher0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(", '");
      int int1 = strBuilder1.indexOf('I');
      int int2 = (-806);
      String string0 = strBuilder0.midString((-806), (-806));
      StrBuilder strBuilder2 = strBuilder1.append((float) 1964);
      // Undeclared exception!
      try { 
        strBuilder2.replaceAll(strMatcher0, ", '");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.toString();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("", "");
      char[] charArray0 = strBuilder0.toCharArray();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      int int0 = (-1396);
      int int1 = 426;
      // Undeclared exception!
      try { 
        strBuilder1.append("org.apache.commons.lang.text.StrMatcher$StringMatcher", (-1396), 426);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-2583);
      strBuilder0.size = (-2583);
      StrBuilder strBuilder1 = new StrBuilder((String) null);
      char char0 = '=';
      StrBuilder strBuilder2 = strBuilder1.deleteFirst('=');
      StrBuilder strBuilder3 = strBuilder2.trim();
      StrTokenizer strTokenizer0 = strBuilder3.asTokenizer();
      int int1 = (-2209);
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight((-2583), 1540, '=');
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(34);
      String string0 = strBuilder1.midString(34, (-409));
      StrBuilder strBuilder2 = strBuilder0.setLength(44);
      StrBuilder strBuilder3 = new StrBuilder((-409));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder3.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset("end < start");
      StrBuilder strBuilder4 = strBuilder1.appendWithSeparators((Iterator) strTokenizer0, (String) null);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setLength(3337);
      char[] charArray0 = new char[5];
      String string0 = strBuilder1.toString();
      charArray0[2] = 'u';
      charArray0[3] = '/';
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder2 = strBuilder0.deleteFirst((StrMatcher) strMatcher_TrimMatcher0);
      charArray0[4] = ' ';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      char[] charArray1 = new char[1];
      charArray1[0] = '/';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray1);
      StrBuilder strBuilder3 = strBuilder1.replaceFirst((StrMatcher) strMatcher_CharSetMatcher0, "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      String string1 = strBuilder0.toString();
      StrBuilder strBuilder4 = strBuilder1.setCharAt(34, '<');
      int int0 = strBuilder2.lastIndexOf('W', 34);
      int int1 = strBuilder1.indexOf("dW3Wc\"Nn&-Z4h-v");
      StrBuilder strBuilder5 = strBuilder1.insert(34, true);
      boolean boolean0 = strBuilder5.equals((Object) strBuilder4);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setLength(3337);
      char[] charArray0 = new char[5];
      charArray0[0] = 'W';
      charArray0[1] = 'o';
      charArray0[2] = 'u';
      charArray0[3] = '/';
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder2 = strBuilder0.deleteFirst((StrMatcher) strMatcher_TrimMatcher0);
      charArray0[4] = ' ';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      char[] charArray1 = new char[1];
      charArray1[0] = '/';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray1);
      StrBuilder strBuilder3 = strBuilder1.replaceFirst((StrMatcher) strMatcher_CharSetMatcher0, "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      StrBuilder strBuilder4 = strBuilder3.append(strBuilder2, 1265, 1265);
      String string0 = strBuilder0.toString();
      StrBuilder strBuilder5 = strBuilder1.setCharAt(34, '<');
      int int0 = strBuilder2.lastIndexOf('W', 34);
      int int1 = StrBuilder.CAPACITY;
      StrBuilder strBuilder6 = strBuilder1.insert(34, true);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.append(true);
      Writer writer0 = strBuilder1.asWriter();
      Writer writer1 = strBuilder1.asWriter();
      int int0 = 34;
      String string0 = strBuilder0.toString();
      char char0 = 'H';
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight((Object) null, 34, 'H');
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
      StrBuilder strBuilder2 = strBuilder0.append(false);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      int int1 = strBuilder2.capacity();
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight((Object) strBuilder2, 32, 'j');
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("ID{b");
      StrBuilder strBuilder1 = strBuilder0.deleteAll('I');
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance("ZY&=A\"+- &R9r");
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "");
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.toString();
      String string1 = "";
      int int0 = 101;
      strBuilder0.size = 101;
      StrBuilder strBuilder1 = strBuilder0.deleteAll("");
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      char[] charArray0 = new char[0];
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      String string2 = "[mYo=!Z=L$@yK";
      // Undeclared exception!
      try { 
        strBuilder1.deleteAll("[mYo=!Z=L$@yK");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      Reader reader0 = strBuilder0.asReader();
      strBuilder0.validateIndex(0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[2];
      charArray0[0] = 'T';
      charArray0[1] = 'S';
      // Undeclared exception!
      try { 
        reader0.read(charArray0, 117, 0);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3468);
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) null;
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) strBuilder0;
      objectArray0[3] = (Object) null;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, (String) null);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("^OV^f\"x>");
      StrBuilder strBuilder1 = strBuilder0.append((float) 0);
      char char0 = 'h';
      StrBuilder strBuilder2 = strBuilder1.append('h');
      StrBuilder strBuilder3 = strBuilder0.append("^OV^f\"x>", 0, 0);
      char char1 = '[';
      StrBuilder strBuilder4 = strBuilder3.appendFixedWidthPadRight(0, 101, '[');
      String string0 = strBuilder0.toString();
      char[] charArray0 = new char[0];
      StrBuilder strBuilder5 = strBuilder0.append(charArray0, 0, 0);
      StrBuilder strBuilder6 = strBuilder4.replaceFirst('[', '[');
      int int0 = strBuilder4.validateRange(0, 0);
      StrMatcher strMatcher0 = StrMatcher.charMatcher('}');
      int int1 = strBuilder6.lastIndexOf(strMatcher0, 101);
      // Undeclared exception!
      try { 
        strBuilder6.replace(strMatcher0, "^OV^f\"x>0.0hjava.lang.String@0000000002[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[", (-3239), 0, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3239
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(4);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Object[]) null, "!v{!RtQ");
      StrBuilder strBuilder2 = new StrBuilder("!v{!RtQ");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.next();
      StrBuilder strBuilder3 = strBuilder1.append((Object) "!v{!RtQ");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder3.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = new Object();
      StringBuffer stringBuffer0 = new StringBuffer(3093);
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight(object0, (-637), 'q');
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("ptO,@ET446J<<n*");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterString("java.classp.path");
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "java.classp.path");
      int int0 = 0;
      // Undeclared exception!
      try { 
        strBuilder2.deleteCharAt(3093);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3093
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrBuilder strBuilder1 = strBuilder0.append(0.0F);
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("N%>8NW[vn>f");
      StrBuilder strBuilder2 = strBuilder0.append("N%>8NW[vn>f");
      boolean boolean0 = strBuilder2.equalsIgnoreCase(strBuilder0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      int int0 = 4;
      StrBuilder strBuilder0 = new StrBuilder(4);
      char char0 = 'v';
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('v');
      String string0 = "D@>";
      StrBuilder strBuilder1 = strBuilder0.replace((StrMatcher) strMatcher_CharMatcher0, "D@>", 0, 4, 0);
      strBuilder1.validateIndex(0);
      // Undeclared exception!
      try { 
        strBuilder1.append("D@>", 0, 1494);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      int int0 = 1592;
      StrBuilder strBuilder0 = new StrBuilder(1592);
      StrBuilder strBuilder1 = new StrBuilder("");
      char[] charArray0 = new char[2];
      charArray0[0] = 'q';
      charArray0[1] = 'r';
      strBuilder1.buffer = charArray0;
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      StrBuilder strBuilder3 = strBuilder2.append(strBuilder0);
      int int1 = strBuilder1.indexOf('n');
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      int int2 = (-1382);
      StrBuilder strBuilder4 = strBuilder3.ensureCapacity((-1574));
      StrBuilder strBuilder5 = strBuilder3.append((-1382));
      // Undeclared exception!
      try { 
        strBuilder2.append(strBuilder1, (-2926), 2);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      int int0 = 912;
      StrBuilder strBuilder0 = new StrBuilder(912);
      String string0 = strBuilder0.leftString(912);
      StrBuilder strBuilder1 = strBuilder0.replaceFirst((String) null, (String) null);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder2 = strBuilder1.appendNewLine();
      String string1 = "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer";
      boolean boolean0 = linkedList0.add("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      StrBuilder strBuilder3 = strBuilder1.appendWithSeparators((Collection) linkedList0, "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      StrBuilder strBuilder4 = strBuilder3.trim();
      StrBuilder strBuilder5 = strBuilder4.append((float) 912);
      char char0 = 'd';
      int int1 = 2690;
      int int2 = (-985);
      // Undeclared exception!
      try { 
        strBuilder1.toCharArray(2690, (-985));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(2035L);
      StringBuffer stringBuffer0 = strBuilder1.toStringBuffer();
      StrBuilder strBuilder2 = strBuilder1.append('q');
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      int int0 = strBuilder1.indexOf(strMatcher0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
      int int1 = strBuilder0.validateRange(0, 0);
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadLeft((-1), 5, 'W');
      StrBuilder strBuilder4 = strBuilder0.replaceAll((StrMatcher) strMatcher_NoMatcher0, "");
      StrBuilder strBuilder5 = strBuilder4.append((-1.0));
      int int2 = strBuilder4.lastIndexOf((StrMatcher) strMatcher_NoMatcher0, 0);
      int int3 = strBuilder4.length();
      int int4 = strBuilder1.capacity();
      StrBuilder strBuilder6 = strBuilder2.replaceFirst("", "s!3p>n2f}91b^izT)");
      strBuilder2.validateIndex(0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      char[] charArray0 = new char[0];
      char[] charArray1 = strBuilder0.getChars(charArray0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[4];
      charArray0[0] = '4';
      char char0 = 't';
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadLeft((Object) null, 1323, '4');
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      int int0 = (-1005);
      StrBuilder strBuilder0 = new StrBuilder((-1005));
      StrBuilder strBuilder1 = new StrBuilder();
      String string0 = null;
      StrBuilder strBuilder2 = strBuilder0.deleteAll((String) null);
      char[] charArray0 = new char[1];
      charArray0[0] = 'f';
      // Undeclared exception!
      try { 
        strBuilder0.getChars((-1005), (-1005), charArray0, (-262));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1005
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[9];
      charArray0[0] = 'g';
      charArray0[1] = '$';
      charArray0[2] = '}';
      charArray0[3] = 'v';
      charArray0[4] = '%';
      charArray0[5] = '<';
      charArray0[6] = 'w';
      charArray0[7] = '+';
      charArray0[8] = 'n';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0, 0, 0);
      long long0 = strBuilder_StrBuilderReader0.skip((-2832L));
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.addLast("Invalid startIndex: ");
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "Invalid startIndex: ");
      String string0 = strBuilder1.midString(0, 0);
      char[] charArray1 = new char[8];
      charArray1[0] = '4';
      charArray1[1] = '3';
      charArray1[2] = '3';
      charArray1[3] = ']';
      charArray1[4] = 'b';
      charArray1[5] = '$';
      charArray1[6] = 'o';
      charArray1[7] = '1';
      StrBuilder strBuilder2 = strBuilder0.append(charArray1);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("org.apache.commons.lang.text.StrMatcher$CharSetMatcher", "OS/2");
      String string0 = strBuilder1.toString();
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((-1), (-1), 'l');
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      int int0 = strBuilder2.lastIndexOf(strMatcher0);
      StrBuilder strBuilder3 = strBuilder1.append(314.0);
      StrBuilder strBuilder4 = strBuilder3.deleteFirst(strMatcher0);
      StrBuilder strBuilder5 = strBuilder3.deleteAll(strMatcher0);
      char[] charArray0 = new char[4];
      charArray0[0] = 'l';
      charArray0[1] = 'l';
      charArray0[2] = 'l';
      charArray0[3] = 'l';
      char[] charArray1 = strBuilder1.getChars(charArray0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      int int0 = (-274);
      StrBuilder strBuilder1 = strBuilder0.append("");
      // Undeclared exception!
      try { 
        strBuilder1.validateIndex((-274));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -274
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      String string0 = "eQ0/}X4QXO";
      StrBuilder strBuilder0 = new StrBuilder("eQ0/}X4QXO");
      int int0 = strBuilder0.size();
      int int1 = strBuilder0.validateRange(10, 10);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char char0 = 'V';
      Writer writer0 = strBuilder_StrBuilderWriter0.append('V');
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.append((CharSequence) "eQ0/}X4QXO", 10, 4);
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid length: ");
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("Invalid length: ");
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0, (-1752));
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-1);
      // Undeclared exception!
      try { 
        strBuilder0.substring((-1), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip((-1433L));
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      int int0 = 2020;
      StrBuilder strBuilder0 = new StrBuilder(2020);
      StrBuilder strBuilder1 = strBuilder0.replaceFirst((String) null, "[el|Ga}DJHGBf;");
      String string0 = strBuilder1.substring(0);
      String string1 = strBuilder0.getNullText();
      String string2 = strBuilder0.getNullText();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[3];
      charArray0[0] = '_';
      charArray0[1] = 'Z';
      charArray0[2] = 'A';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      char char0 = charBuffer0.get();
      Buffer buffer0 = charBuffer0.clear();
      int int1 = 1187;
      // Undeclared exception!
      try { 
        charBuffer0.limit(2020);
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Iterator<String> iterator0 = null;
      String string0 = "";
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) null, "");
      char char0 = 'k';
      StrBuilder strBuilder2 = strBuilder0.appendPadding((-3044), 'k');
      String string1 = "XdDAP'^vY6#=Qdjou";
      strBuilder2.validateIndex(0);
      // Undeclared exception!
      try { 
        strBuilder2.setCharAt((-3044), 'o');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3044
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("<=");
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "A! nsVTbauEc%CZ>e(f");
      StrBuilder strBuilder2 = strBuilder1.ensureCapacity(1651);
      StrBuilder strBuilder3 = strBuilder0.append("9/~");
      // Undeclared exception!
      try { 
        strBuilder0.insert(1126, 1267L);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1126
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("_Oon)0X(");
      int int0 = 0;
      char char0 = 'A';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) "_Oon)0X(", 0, 'A');
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("_Oon)0X(");
      int int1 = strBuilder0.indexOf((StrMatcher) strMatcher_StringMatcher0, 0);
      char char1 = '1';
      StrBuilder strBuilder2 = strBuilder1.deleteAll('1');
      StrBuilder strBuilder3 = strBuilder0.insert(0, (Object) strBuilder1);
      String string0 = strBuilder1.substring(0);
      StrBuilder strBuilder4 = strBuilder3.minimizeCapacity();
      // Undeclared exception!
      try { 
        strBuilder2.replace((-639), 0, ";KJ~ya8T.Y");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -639
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(39);
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      int int0 = strMatcher0.isMatch((char[]) null, 39, 0, 3051);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(4);
      // Undeclared exception!
      try { 
        strBuilder0.charAt((-3301));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3301
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceAll((StrMatcher) null, "");
      char[] charArray0 = new char[8];
      charArray0[0] = 'K';
      charArray0[1] = '9';
      charArray0[2] = 'F';
      charArray0[3] = 'd';
      charArray0[4] = 'P';
      charArray0[5] = '?';
      charArray0[6] = 'P';
      charArray0[7] = ':';
      char[] charArray1 = strBuilder0.getChars(charArray0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher((String) null);
      StrMatcher strMatcher2 = StrMatcher.stringMatcher("(5WPg?)Tvd9q");
      int int0 = strBuilder0.indexOf(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "end < start");
      int int1 = strBuilder0.indexOf("end < start");
      StrBuilder strBuilder2 = strBuilder0.insert(0, (Object) strBuilder1);
      String string0 = strBuilder2.substring(0, 32);
      StrBuilder strBuilder3 = strBuilder2.setLength(459);
      int int2 = strBuilder0.lastIndexOf('o');
      StrBuilder strBuilder4 = new StrBuilder((-1));
      StrBuilder strBuilder5 = strBuilder4.appendFixedWidthPadLeft(15, (-79), 'o');
      StrBuilder strBuilder6 = strBuilder0.insert(15, (Object) strBuilder4);
      String string1 = "[33hWf\\ATm4$";
      // Undeclared exception!
      try { 
        strBuilder6.replace(0, (-1), "[33hWfATm4$");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setLength(3337);
      char[] charArray0 = new char[5];
      charArray0[0] = 'W';
      charArray0[1] = 'o';
      charArray0[2] = 'u';
      charArray0[3] = '/';
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder2 = strBuilder0.deleteFirst((StrMatcher) strMatcher_TrimMatcher0);
      charArray0[4] = ' ';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      char[] charArray1 = new char[1];
      charArray1[0] = '/';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray1);
      StrBuilder strBuilder3 = strBuilder1.replaceFirst((StrMatcher) strMatcher_CharSetMatcher0, "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      String string0 = strBuilder0.toString();
      StrBuilder strBuilder4 = strBuilder1.setCharAt(34, '<');
      int int0 = strBuilder2.lastIndexOf('W', 34);
      int int1 = strBuilder1.indexOf("dW3Wc\"Nn&-Z4h-v");
      StrBuilder strBuilder5 = strBuilder1.insert(34, true);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("Windows");
      char[] charArray0 = new char[5];
      charArray0[0] = 'Q';
      charArray0[1] = '\"';
      charArray0[2] = 'u';
      charArray0[3] = 'U';
      charArray0[4] = 'J';
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      int int0 = strMatcher0.isMatch(charArray0, 47, 47, 101);
      int int1 = strBuilder0.lastIndexOf(strMatcher0, 2256);
      int int2 = strBuilder0.indexOf("Windows");
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      String string0 = "N%>8NW[vn>f";
      StrBuilder strBuilder2 = strBuilder1.append(0.0F);
      // Undeclared exception!
      try { 
        strBuilder1.delete(0, (-1500));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrTokenizer");
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder0.setNullText("org.apache.commons.lang.text.StrTokenizer");
      String string0 = strBuilder2.substring(0);
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, 75, 75);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(115);
      StrBuilder strBuilder1 = strBuilder0.clear();
      String string0 = strBuilder0.rightString(115);
      StrBuilder strBuilder2 = strBuilder1.replaceAll((String) null, "");
      StrBuilder strBuilder3 = strBuilder1.replaceAll("", "6");
      int int0 = strBuilder1.lastIndexOf("");
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher((String) null);
      StrBuilder strBuilder4 = strBuilder0.replaceFirst(strMatcher0, "startIndex must be valid");
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      int int0 = 30;
      StrBuilder strBuilder0 = new StrBuilder(30);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      String string0 = "Invalid length: ";
      boolean boolean0 = strBuilder0.startsWith("Invalid length: ");
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('h');
      StrBuilder strBuilder1 = strBuilder0.replaceAll((StrMatcher) strMatcher_CharMatcher0, "\u0006t1nq*nufi;}");
      // Undeclared exception!
      try { 
        strBuilder1.append("Invalid length: ", (-1283), 3);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "");
      char char0 = ' ';
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher(' ');
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("");
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_CharMatcher0, (-1372));
      StringBuffer stringBuffer1 = stringBuffer0.append(108);
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      // Undeclared exception!
      try { 
        strBuilder1.insert(108, (Object) strBuilder0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 108
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2399);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[9];
      charArray0[0] = 'T';
      charArray0[1] = 'n';
      charArray0[2] = '<';
      charArray0[3] = 'z';
      charArray0[4] = 'K';
      charArray0[5] = '@';
      charArray0[6] = 'd';
      charArray0[7] = '?';
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      char char0 = 'V';
      charArray0[8] = 'V';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 2399, (-1133));
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strBuilder_StrBuilderTokenizer0, "dJ7");
      StrBuilder strBuilder2 = strBuilder1.deleteAll("dJ7");
      // Undeclared exception!
      try { 
        strBuilder2.getChars(2399, 0, charArray0, 1966);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4Ht(WlgsV>CMZ");
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.append((float) 0);
      char[] charArray0 = strBuilder0.toCharArray(0, 0);
      StrBuilder strBuilder2 = new StrBuilder();
      boolean boolean0 = strBuilder0.equals(strBuilder2);
      StrBuilder strBuilder3 = strBuilder2.insert(0, (long) 0);
      strBuilder0.buffer = charArray0;
      String string0 = strBuilder1.substring(0, 0);
      // Undeclared exception!
      try { 
        strBuilder1.append((long) 0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setNullText("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      Object[] objectArray0 = new Object[0];
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators(objectArray0, "org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      int int0 = strBuilder0.length();
      StrBuilder strBuilder3 = strBuilder0.setLength(0);
      char[] charArray0 = new char[9];
      charArray0[0] = '_';
      charArray0[1] = '%';
      charArray0[2] = '.';
      charArray0[3] = '=';
      charArray0[4] = 'i';
      charArray0[5] = '[';
      charArray0[6] = '`';
      charArray0[7] = 't';
      charArray0[8] = 'S';
      StrBuilder strBuilder4 = strBuilder0.insert(0, charArray0);
      StrBuilder strBuilder5 = strBuilder3.reverse();
      StrBuilder strBuilder6 = strBuilder2.insert(0, (float) 0);
      StrBuilder strBuilder7 = strBuilder3.trim();
      String string0 = strBuilder6.rightString(0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, (-58), (-58));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(",be${.>^y)p");
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      char char0 = 'W';
      StrMatcher strMatcher1 = StrMatcher.charMatcher('W');
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.append(false);
      int int0 = strBuilder0.length();
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight(16, 0, 'Y');
      StrBuilder strBuilder3 = new StrBuilder(1411);
      char[] charArray0 = new char[1];
      // Undeclared exception!
      try { 
        strBuilder1.insert(1411, true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1411
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = new StrBuilder();
      Writer writer0 = strBuilder1.asWriter();
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, (-58), (-58));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.append((float) 0);
      String string0 = strBuilder1.toString();
      StrBuilder strBuilder2 = strBuilder0.replaceAll('t', 't');
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadRight((Object) "0.0", 0, '(');
      StrBuilder strBuilder4 = strBuilder0.deleteAll('t');
      char char0 = strBuilder2.charAt(0);
      char[] charArray0 = new char[7];
      charArray0[0] = '0';
      charArray0[1] = 't';
      charArray0[2] = '0';
      charArray0[3] = 't';
      charArray0[4] = 's';
      charArray0[5] = 't';
      charArray0[6] = '0';
      StrBuilder strBuilder5 = strBuilder0.insert(0, charArray0, 0, 0);
      int int0 = strBuilder1.lastIndexOf("\"})krl47DESG`}AH");
      StrBuilder strBuilder6 = strBuilder1.appendFixedWidthPadRight(0, (-1742), '4');
      char[] charArray1 = strBuilder1.toCharArray();
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder(116);
      StrBuilder strBuilder2 = strBuilder0.append(4109);
      StrBuilder strBuilder3 = strBuilder0.append((float) 4109);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("java.specification.name");
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      int int0 = strBuilder3.indexOf(strMatcher0, 477);
      StrBuilder strBuilder4 = strBuilder3.append((StringBuffer) null);
      StrBuilder strBuilder5 = strBuilder0.deleteFirst('9');
      StrBuilder strBuilder6 = strBuilder0.appendFixedWidthPadLeft((Object) strBuilder1, 3, 'H');
      Reader reader0 = strBuilder1.asReader();
      Reader reader1 = strBuilder2.asReader();
      StrBuilder strBuilder7 = strBuilder2.append((StringBuffer) null);
      StrBuilder strBuilder8 = strBuilder7.append(false);
      StrBuilder strBuilder9 = strBuilder5.appendNull();
      String string0 = strBuilder5.leftString((-3667));
      StrBuilder strBuilder10 = strBuilder8.clear();
      StrBuilder strBuilder11 = strBuilder7.appendFixedWidthPadLeft(0, 116, '9');
      StrBuilder strBuilder12 = strBuilder7.setNewLineText("java.specification.name");
      // Undeclared exception!
      try { 
        strBuilder3.validateRange(0, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      boolean boolean0 = strBuilder0.endsWith("^=k/VGw");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      boolean boolean1 = strBuilder_StrBuilderTokenizer0.hasNext();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[5];
      charArray0[0] = '3';
      charArray0[1] = ')';
      strBuilder_StrBuilderWriter0.write(charArray0);
      charArray0[2] = 'G';
      strBuilder_StrBuilderWriter0.write("", 0, 0);
      charArray0[3] = 'v';
      charArray0[4] = '_';
      strBuilder_StrBuilderWriter0.write(charArray0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      strBuilder_StrBuilderReader0.close();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      String string1 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "");
      StrBuilder strBuilder2 = strBuilder1.replaceFirst('_', 'r');
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("user.dir");
      StrBuilder strBuilder1 = strBuilder0.deleteAll("user.dir");
      char[] charArray0 = new char[4];
      charArray0[0] = '7';
      charArray0[1] = 'L';
      charArray0[2] = 'm';
      charArray0[3] = '=';
      // Undeclared exception!
      try { 
        strBuilder1.append(charArray0, (-1023), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst((StrMatcher) strMatcher_NoMatcher0);
      StrMatcher strMatcher0 = StrMatcher.charMatcher(' ');
      StrBuilder strBuilder2 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder3 = strBuilder2.deleteAll('b');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((-278));
      StrBuilder strBuilder4 = strBuilder0.reverse();
      int int0 = strBuilder4.lastIndexOf("-]2V>", 0);
      StrBuilder strBuilder5 = strBuilder1.append((double) (-278));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder3.new StrBuilderTokenizer();
      char[] charArray0 = new char[8];
      charArray0[0] = ' ';
      charArray0[1] = ' ';
      charArray0[2] = ' ';
      charArray0[3] = ' ';
      charArray0[4] = 'Q';
      charArray0[5] = ' ';
      charArray0[6] = 'b';
      charArray0[7] = ' ';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 484, 39);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(32);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setEmptyTokenAsNull(false);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "java.io.tmpdir");
      StrBuilder strBuilder2 = strBuilder0.reverse();
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(", '");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(1964, 1964, 'I');
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(", '");
      int int0 = strBuilder1.lastIndexOf(strMatcher0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(", '");
      int int1 = strBuilder1.indexOf('I');
      String string0 = strBuilder0.midString((-806), (-806));
      StrBuilder strBuilder2 = strBuilder1.append((float) 1964);
      StringBuffer stringBuffer0 = new StringBuffer("Invalid startIndex: ");
      // Undeclared exception!
      try { 
        strBuilder1.append(stringBuffer0, (-806), 30);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("OW&<x\"*{X,\"hJ)Ao$a|");
      StrBuilder strBuilder1 = strBuilder0.insert(0, true);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.charAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("=<0");
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("=<0");
      StrBuilder strBuilder2 = strBuilder0.append(false);
      String string0 = strBuilder0.leftString(0);
      StrBuilder strBuilder3 = strBuilder2.setLength(3435);
      char char0 = strBuilder0.charAt(0);
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadLeft((-2576), (-1), '{');
      StrBuilder strBuilder5 = strBuilder4.replaceFirst("=<0", "=<0");
      StrBuilder strBuilder6 = strBuilder4.appendNewLine();
      StrBuilder strBuilder7 = strBuilder1.append(strBuilder4);
      StrBuilder strBuilder8 = strBuilder4.appendFixedWidthPadLeft((Object) strBuilder3, 3435, '=');
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("1U8kivY");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[4];
      charArray0[0] = 'Q';
      strBuilder_StrBuilderWriter0.write("1.4");
      strBuilder_StrBuilderWriter0.write(0);
      charArray0[1] = '^';
      charArray0[2] = 'Y';
      charArray0[3] = '|';
      strBuilder_StrBuilderWriter0.write(charArray0);
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("1.4");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst((StrMatcher) strMatcher_StringMatcher0, "Wt<tPa)>w");
      StrBuilder strBuilder2 = strBuilder0.append((-103.2838305059));
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(32);
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("OK$B<(=GdE'Dndn", (String) null);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder1.midString(0, 1);
      String string1 = strBuilder_StrBuilderTokenizer0.getContent();
      int int0 = 0;
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight((-3038), 0, '\'');
      StrBuilder strBuilder3 = strBuilder2.ensureCapacity((-3038));
      StrBuilder strBuilder4 = strBuilder0.insert(0, "o_8 |w?n");
      StringBuffer stringBuffer0 = null;
      try {
        stringBuffer0 = new StringBuffer((CharSequence) null);
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1958));
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(',', 'a');
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("java.compiler");
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight((-1958), (-1958), 'j');
      StrTokenizer strTokenizer0 = strBuilder1.asTokenizer();
      int int0 = strBuilder1.indexOf(strMatcher0, 101);
      StrBuilder strBuilder3 = new StrBuilder("o0k");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder3.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("o0k");
      String string0 = strBuilder3.getNullText();
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.version");
      StrBuilder strBuilder1 = new StrBuilder(0);
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight(0, 0, '$');
      StrBuilder strBuilder3 = strBuilder1.deleteAll('Q');
      StrBuilder strBuilder4 = strBuilder1.insert(0, '^');
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      int int0 = strBuilder0.lastIndexOf("java.version");
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("set() is unsupported");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1, 0, 0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      String string0 = "HrI!qi#\\3WH08Q*t";
      StrBuilder strBuilder0 = new StrBuilder("HrI!qi#\u0003WH08Q*t");
      int int0 = 0;
      char char0 = '\"';
      StrBuilder strBuilder1 = strBuilder0.appendPadding(0, '\"');
      StrBuilder strBuilder2 = strBuilder0.minimizeCapacity();
      char[] charArray0 = new char[0];
      strBuilder2.buffer = charArray0;
      // Undeclared exception!
      try { 
        strBuilder0.append(1348.0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = 'm';
      int int0 = strBuilder0.indexOf('m', 115);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[4];
      charArray0[0] = 'm';
      charArray0[1] = 'm';
      charArray0[2] = 'm';
      charArray0[3] = 'm';
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset(charArray0);
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "");
      StrBuilder strBuilder2 = strBuilder0.deleteAll("");
      StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
      StrBuilder strBuilder4 = strBuilder2.deleteFirst("{EVaj8");
      int int1 = strBuilder2.indexOf('m', 115);
      // Undeclared exception!
      try { 
        strBuilder4.insert((-1), 87);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, (String) null);
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher((String) null);
      int int0 = strBuilder0.length();
      StrBuilder strBuilder2 = strBuilder0.append(true);
      // Undeclared exception!
      try { 
        strBuilder0.delete(5503, 5503);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = strBuilder0.indexOf('M', 155);
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity((-1));
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('M');
      StrBuilder strBuilder2 = strBuilder0.deleteFirst((StrMatcher) strMatcher_CharMatcher0);
      String string0 = strBuilder0.midString((-5656), 155);
      boolean boolean0 = strBuilder0.contains((StrMatcher) strMatcher_CharMatcher0);
      char[] charArray0 = new char[6];
      charArray0[0] = 'M';
      charArray0[1] = 'M';
      charArray0[2] = 'M';
      charArray0[3] = 'M';
      charArray0[4] = 'M';
      charArray0[5] = 'M';
      // Undeclared exception!
      try { 
        strBuilder0.insert((-5656), charArray0, (-5656), 1971);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -5656
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("%nMy*");
      StrBuilder strBuilder1 = strBuilder0.append(true);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      String string0 = "org.apache.commons.lang.text.StrBuilder$StrBuilderReader";
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      int int0 = 2454;
      float float0 = 840.0F;
      StrBuilder strBuilder1 = strBuilder0.append(840.0F);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Collection) linkedList0, "I<]r 4`pxnL?W1EBw");
      StringBuffer stringBuffer0 = strBuilder2.toStringBuffer();
      // Undeclared exception!
      try { 
        strBuilder1.insert(2454, (Object) strBuilder0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2454
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      String string0 = "set() is unsupported";
      StrBuilder strBuilder0 = new StrBuilder("set() is unsupported");
      StrBuilder strBuilder1 = new StrBuilder();
      char char0 = ' ';
      // Undeclared exception!
      try { 
        strBuilder1.setCharAt(31, ' ');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 31
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      String string0 = "org.apache.commons.lang.text.StrBuilder";
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder");
      int int0 = 32;
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 32, 108);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(0, 'k');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder0.validateIndex(0);
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      char[] charArray0 = new char[1];
      charArray0[0] = 'U';
      int int0 = strMatcher0.isMatch(charArray0, 0, Integer.MAX_VALUE, 0);
      int int1 = strBuilder0.lastIndexOf(strMatcher0, 0);
      StringBuffer stringBuffer0 = new StringBuffer("");
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) stringBuffer0);
      strBuilder_StrBuilderWriter0.write("", 0, 0);
      strBuilder_StrBuilderWriter0.write(169);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt((-1428), 'b');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1428
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.substring((-1967));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1967
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      char[] charArray0 = new char[4];
      charArray0[0] = 'z';
      charArray0[1] = 'u';
      charArray0[2] = '3';
      charArray0[3] = 'K';
      // Undeclared exception!
      try { 
        strBuilder0.insert(44, charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 44
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[8];
      charArray0[0] = '`';
      charArray0[1] = '&';
      charArray0[2] = '+';
      charArray0[3] = '&';
      charArray0[4] = 'Y';
      charArray0[5] = 'q';
      charArray0[6] = 'P';
      charArray0[7] = 'E';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 0, 228);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.midString((-1), (-1));
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      int int0 = (-1601);
      StrBuilder strBuilder0 = new StrBuilder((-1601));
      String string0 = "W~";
      boolean boolean0 = strBuilder0.contains("W~");
      String string1 = "$Y-.ELP,b";
      boolean boolean1 = strBuilder0.endsWith("$Y-.ELP,b");
      int int1 = (-978);
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray((-1601), (-978));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1601
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      int int0 = (-37);
      StrBuilder strBuilder0 = new StrBuilder((-37));
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) strBuilder0;
      StrBuilder strBuilder1 = strBuilder0.append('L');
      objectArray0[1] = (Object) strBuilder0;
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators(objectArray0, "q8l8ti;a3");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      int int1 = strBuilder_StrBuilderTokenizer0.size();
      int int2 = strBuilder_StrBuilderTokenizer0.size();
      StrBuilder strBuilder3 = strBuilder1.setNullText("dm9,7IZ4w=l\"BPQ");
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      int int3 = strBuilder2.lastIndexOf(strMatcher0);
      int int4 = strBuilder1.indexOf("", 0);
      // Undeclared exception!
      try { 
        strBuilder2.insert((-3254), "q8l8ti;a3");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3254
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1370);
      StrBuilder strBuilder1 = strBuilder0.append(3250);
      StrBuilder strBuilder2 = strBuilder1.setLength(1370);
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("startIndex must be valid");
      StrBuilder strBuilder3 = strBuilder2.replaceAll((StrMatcher) strMatcher_StringMatcher0, "startIndex must be valid");
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder strBuilder4 = strBuilder1.trim();
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) strBuilder1;
      objectArray0[1] = (Object) strBuilder2;
      objectArray0[2] = (Object) writer0;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      objectArray0[3] = object0;
      StrBuilder strBuilder5 = strBuilder0.appendWithSeparators(objectArray0, "startIndex must be valid");
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      boolean boolean0 = strBuilder0.contains('_');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(78);
      StrBuilder strBuilder1 = strBuilder0.setNullText("");
      char[] charArray0 = new char[4];
      charArray0[0] = '_';
      charArray0[1] = '_';
      charArray0[2] = '_';
      charArray0[3] = '_';
      // Undeclared exception!
      try { 
        strBuilder1.append(charArray0, 78, 78);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 78
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('F');
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_CharMatcher0, (-513));
      boolean boolean0 = strBuilder0.endsWith("Linux");
      StrBuilder strBuilder1 = strBuilder0.append(0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
      StrBuilder strBuilder2 = new StrBuilder();
      StrBuilder strBuilder3 = strBuilder0.append((float) (-1));
      boolean boolean1 = strBuilder1.equals(strBuilder2);
      boolean boolean2 = strBuilder2.isEmpty();
      StrBuilder strBuilder4 = strBuilder1.append(strBuilder2);
      StrBuilder strBuilder5 = strBuilder4.insert(0, 2274);
      StrBuilder strBuilder6 = strBuilder5.replaceFirst("Z4xE5@a>Z6AT", "Linux");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder5.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = (-3053);
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray((-171), (-171));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -171
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("");
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      StrBuilder strBuilder2 = new StrBuilder("");
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder2);
      StrBuilder strBuilder3 = strBuilder2.append(0.0);
      String string0 = strBuilder3.rightString((-387));
      StrBuilder strBuilder4 = new StrBuilder("");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder5 = strBuilder4.appendWithSeparators((Collection) linkedList0, "");
      boolean boolean1 = strBuilder2.equals((Object) strBuilder4);
      Reader reader0 = strBuilder2.asReader();
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('C');
      int int0 = strBuilder1.lastIndexOf((StrMatcher) strMatcher_CharMatcher0);
      boolean boolean2 = strBuilder0.equals((Object) strBuilder4);
      int int1 = strBuilder4.validateRange(0, 0);
      boolean boolean3 = strBuilder2.contains('C');
      int int2 = strBuilder2.indexOf("pKhtl:0L<+A<aC3GTd;", (-1));
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(183);
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(183);
      StringBuffer stringBuffer0 = new StringBuffer(0);
      StringBuffer stringBuffer1 = stringBuffer0.reverse();
      StrBuilder strBuilder2 = strBuilder1.append(stringBuffer0);
      StrBuilder strBuilder3 = strBuilder1.setNewLineText("c");
      Reader reader0 = strBuilder3.asReader();
      StrMatcher strMatcher0 = StrMatcher.charMatcher('p');
      int int0 = strBuilder3.indexOf(strMatcher0);
      StrMatcher strMatcher1 = null;
      int int1 = strBuilder0.indexOf((StrMatcher) null);
      int int2 = 0;
      // Undeclared exception!
      try { 
        stringBuffer0.insert(183, 't');
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(".?");
      int int0 = 5;
      // Undeclared exception!
      try { 
        strBuilder0.charAt(5);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 5
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1610);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher((String) null);
      String string0 = "[";
      // Undeclared exception!
      try { 
        strBuilder0.replace(strMatcher0, "[", 1610, 1610, 2195);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(32);
      StrBuilder strBuilder1 = strBuilder0.append('`');
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("=g_;iO8hBfRczGM");
      int int0 = strBuilder1.indexOf(strMatcher0, 32);
      // Undeclared exception!
      try { 
        strBuilder0.charAt(1567);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1567
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("end < start");
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0, (-3073));
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      int int0 = (-649);
      StrBuilder strBuilder0 = new StrBuilder((-649));
      int int1 = (-1554);
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      StrBuilder strBuilder2 = strBuilder0.append(94);
      String string0 = strBuilder2.rightString((-1554));
      // Undeclared exception!
      try { 
        strBuilder2.insert(57, 910.55F);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 57
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder0.getNullText();
      char char0 = '^';
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('^', 'X');
      StrBuilder strBuilder2 = strBuilder1.insert(0, 0.0F);
      // Undeclared exception!
      try { 
        strBuilder1.replace(6051, 6051, "', has a length less than 2");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      String string0 = "jC?n^.8HN";
      char char0 = '.';
      StrBuilder strBuilder1 = strBuilder0.deleteAll('.');
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Collection) linkedList0, "jC?n^.8HN");
      // Undeclared exception!
      try { 
        strBuilder1.insert(944, 0.0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 944
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(5);
      float float0 = 562.0F;
      // Undeclared exception!
      try { 
        strBuilder0.validateRange((-4823), (-4823));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -4823
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append('$');
      StrBuilder strBuilder2 = strBuilder1.deleteAll('$');
      StrBuilder strBuilder3 = strBuilder0.deleteFirst((String) null);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('J');
      int int1 = 0;
      StrBuilder strBuilder2 = strBuilder0.append((long) 0);
      String string0 = strBuilder0.substring(0, 0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      boolean boolean0 = linkedList0.add("");
      Stream<String> stream0 = linkedList0.parallelStream();
      StrBuilder strBuilder3 = strBuilder1.appendWithSeparators((Collection) linkedList0, "");
      StrBuilder strBuilder4 = strBuilder2.append((long) 0);
      int int2 = 883;
      // Undeclared exception!
      try { 
        strBuilder3.validateIndex(883);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 883
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((-1L));
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.trim();
      int int0 = 3709;
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex(3709);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3709
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.insert(0, (double) 0);
      int int1 = 1680;
      // Undeclared exception!
      try { 
        strBuilder0.insert(1680, 275L);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1680
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("*Jxq>:WX");
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 608);
      String string0 = strBuilder0.getNewLineText();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[1];
      String string1 = "q2IOuY={C*q(a";
      strBuilder_StrBuilderWriter0.write("q2IOuY={C*q(a");
      int int1 = (-551);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(0, (-551), '*');
      char char0 = '2';
      charArray0[0] = '2';
      strBuilder_StrBuilderWriter0.write(charArray0, 0, 0);
      strBuilder_StrBuilderWriter0.close();
      strBuilder_StrBuilderWriter0.write(charArray0);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1599), '2');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1599
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.replace(0, 0, "org.apache.commons.lang.text.StrMatcher$NoMatcher");
      StrBuilder strBuilder2 = strBuilder1.append(1.0);
      String string0 = strBuilder2.midString(0, 0);
      StrBuilder strBuilder3 = strBuilder1.appendFixedWidthPadLeft(2, 0, '^');
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('A');
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher((String) null);
      int int0 = strBuilder3.lastIndexOf((StrMatcher) strMatcher_CharMatcher0);
      boolean boolean0 = strBuilder0.contains('y');
      boolean boolean1 = strBuilder1.contains("end < start");
      int int1 = strBuilder2.indexOf('y');
      StrBuilder strBuilder4 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder4.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("5~@0Ucqg");
      StrBuilder strBuilder1 = strBuilder0.insert(0, 'P');
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.vm.info");
      char[] charArray0 = new char[8];
      charArray0[0] = ':';
      charArray0[1] = 't';
      charArray0[2] = '8';
      charArray0[3] = 'b';
      charArray0[4] = '[';
      charArray0[5] = '4';
      charArray0[6] = 'Y';
      charArray0[7] = '3';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 4, (-212));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: -212
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1338);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setQuoteChar('U');
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "");
      StrBuilder strBuilder2 = strBuilder1.minimizeCapacity();
      Reader reader0 = strBuilder2.asReader();
      StrBuilder strBuilder3 = strBuilder0.ensureCapacity(2043);
      StrBuilder strBuilder4 = strBuilder3.ensureCapacity(2043);
      StrBuilder strBuilder5 = strBuilder3.appendNull();
      StrBuilder strBuilder6 = strBuilder0.append(653);
      StrBuilder strBuilder7 = strBuilder3.minimizeCapacity();
      String string0 = strBuilder3.getNewLineText();
      StrBuilder strBuilder8 = strBuilder4.deleteFirst("4b3@4 E{T2-");
      int int0 = strBuilder0.lastIndexOf("1.3", 2043);
      String string1 = strBuilder7.toString();
      StrBuilder strBuilder9 = strBuilder1.minimizeCapacity();
      StringBuffer stringBuffer0 = new StringBuffer(1338);
      // Undeclared exception!
      try { 
        strBuilder7.append(stringBuffer0, (-1), 48);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Ew|)(pE`w");
      int int0 = strBuilder0.lastIndexOf("Ew|)(pE`w", 0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[2];
      strBuilder_StrBuilderWriter0.write((-1));
      char char0 = 't';
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1), 1012.58232);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.hashCode();
      StrBuilder strBuilder1 = strBuilder0.insert(0, (long) 0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("GW~MkHq}[");
      StrBuilder strBuilder1 = new StrBuilder(5);
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("java.awt.graphicsenv");
      boolean boolean0 = strBuilder1.contains(strMatcher0);
      boolean boolean1 = strBuilder0.equals(strBuilder1);
      StrBuilder strBuilder2 = strBuilder1.append('K');
      boolean boolean2 = strBuilder1.equals((Object) null);
      char[] charArray0 = new char[3];
      charArray0[0] = 'K';
      charArray0[1] = '8';
      charArray0[2] = 'K';
      // Undeclared exception!
      try { 
        strBuilder1.insert(5, charArray0, 5, 5);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 5
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(115);
      StrBuilder strBuilder1 = new StrBuilder("");
      boolean boolean0 = strBuilder0.equals(strBuilder1);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      int int0 = (-538);
      StrBuilder strBuilder0 = new StrBuilder((-538));
      char[] charArray0 = new char[2];
      charArray0[0] = 'E';
      charArray0[1] = '+';
      // Undeclared exception!
      try { 
        strBuilder0.insert((-473), charArray0, (-538), (-255));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -473
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder((-1595));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoredChar('K');
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "ADrFM$S]@");
      StrBuilder strBuilder3 = strBuilder2.append((float) 0);
      StrBuilder strBuilder4 = strBuilder3.append((char[]) null);
      StrBuilder strBuilder5 = strBuilder3.replace(0, 0, "ADrFM$S]@");
      StringBuffer stringBuffer0 = strBuilder2.toStringBuffer();
      String string0 = strBuilder1.rightString(0);
      StrBuilder strBuilder6 = strBuilder2.appendNewLine();
      StrBuilder strBuilder7 = strBuilder0.replace(0, 1, "");
      int int0 = strBuilder2.indexOf('K', (-1595));
      int int1 = strBuilder2.length();
      int int2 = (-480);
      String string1 = strBuilder3.midString(5, 0);
      // Undeclared exception!
      try { 
        strBuilder1.setLength((-480));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -480
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(31);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setTrimmerMatcher(strMatcher_TrimMatcher0);
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      String string0 = strBuilder0.rightString(0);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("");
      StrBuilder strBuilder2 = strBuilder1.appendNewLine();
      boolean boolean1 = strBuilder0.startsWith("");
      String string1 = strBuilder1.leftString(31);
      StrBuilder strBuilder3 = strBuilder0.clear();
      int int0 = strBuilder3.capacity();
      boolean boolean2 = strBuilder1.equals((Object) "");
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      String string0 = "8O5p!|V3Gx";
      StrBuilder strBuilder0 = new StrBuilder("8O5p!|V3Gx");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('n');
      StrBuilder strBuilder2 = strBuilder0.append(0.0F);
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      char[] charArray0 = new char[1];
      charArray0[0] = '|';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder3 = strBuilder2.replaceFirst(strMatcher0, "8O5p!|V3Gx");
      int int0 = (-500);
      // Undeclared exception!
      try { 
        strBuilder0.replace((-500), (-500), "8O5p!|V3Gx");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -500
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[5];
      charArray0[0] = '-';
      charArray0[1] = 'X';
      charArray0[2] = 'h';
      charArray0[3] = 'b';
      charArray0[4] = 'h';
      strBuilder_StrBuilderWriter0.write(charArray0);
      char[] charArray1 = new char[0];
      strBuilder_StrBuilderWriter0.write(charArray1);
      int int0 = 2454;
      // Undeclared exception!
      try { 
        CharBuffer.wrap((char[]) null, 2454, 2454);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.HeapCharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = strBuilder0.lastIndexOf((StrMatcher) null);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int1 = strBuilder_StrBuilderReader0.read();
      int int2 = 0;
      StrBuilder strBuilder1 = new StrBuilder(0);
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      strBuilder_StrBuilderReader0.mark((-1));
      int int3 = strBuilder_StrBuilderReader0.read();
      int int4 = strBuilder0.lastIndexOf((StrMatcher) null);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      String string0 = linkedList0.pollFirst();
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators((Collection) linkedList0, "");
      boolean boolean0 = strBuilder3.contains((StrMatcher) null);
      StrBuilder strBuilder4 = strBuilder0.append("java.class.path");
      // Undeclared exception!
      try { 
        strBuilder4.append("o@<?f", 108, (-3759));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2355);
      // Undeclared exception!
      try { 
        strBuilder0.replace(2355, 0, "startIndex must be valid");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("kT*IzZn2<S2t");
      boolean boolean0 = strBuilder0.endsWith("kT*IzZn2<S2t");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[5];
      char char0 = 'd';
      charArray0[0] = 'd';
      charArray0[1] = 'X';
      charArray0[2] = '7';
      charArray0[3] = '%';
      charArray0[4] = 's';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0);
      boolean boolean1 = strBuilder_StrBuilderReader0.ready();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoredChar(':');
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "kT*IzZn2<S2t");
      StrBuilder strBuilder2 = strBuilder0.deleteFirst(";zM@o");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      StrTokenizer strTokenizer1 = StrTokenizer.getTSVInstance("M;m>");
      StrBuilder strBuilder3 = strBuilder2.insert(5, 5);
      StrBuilder strBuilder4 = strBuilder3.replaceFirst(strMatcher0, "");
      int int1 = (-3053);
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, (-3053), (-3053));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -3053
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(4);
      char char0 = 'v';
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('v');
      StrBuilder strBuilder1 = strBuilder0.replace((StrMatcher) strMatcher_CharMatcher0, "D@>", 0, 4, 0);
      strBuilder1.validateIndex(0);
      char[] charArray0 = new char[0];
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      strBuilder1.size = 4;
      boolean boolean0 = strBuilder0.endsWith("D@>");
      int int0 = (-1153);
      // Undeclared exception!
      try { 
        strBuilder1.validateRange((-518), (-1153));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -518
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder1.replaceFirst((String) null, "EH");
      StrBuilder strBuilder3 = strBuilder2.insert(0, 0);
      StrBuilder strBuilder4 = strBuilder0.append(strBuilder1);
      strBuilder4.size = 0;
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrBuilder strBuilder5 = strBuilder1.deleteAll((StrMatcher) strMatcher_NoMatcher0);
      int int0 = strBuilder1.indexOf((StrMatcher) strMatcher_NoMatcher0, 0);
      StrBuilder strBuilder6 = strBuilder4.replaceAll((String) null, (String) null);
      int int1 = strBuilder1.hashCode();
      // Undeclared exception!
      try { 
        strBuilder5.substring((-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.lastIndexOf('M', 7);
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "1SNIr)nk`%_U");
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      StrBuilder strBuilder2 = strBuilder1.append((Object) strBuilder0);
      StrBuilder strBuilder3 = new StrBuilder(3072);
      StrBuilder strBuilder4 = strBuilder3.deleteFirst("&:#8*ouV>3Umm'");
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder3);
      StrBuilder strBuilder5 = strBuilder0.setNewLineText("startIndex must be valid");
      StrBuilder strBuilder6 = new StrBuilder();
      StrBuilder strBuilder7 = strBuilder5.appendFixedWidthPadLeft((Object) strBuilder6, 82, 'e');
      String string0 = strBuilder4.toString();
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      int int0 = (-4419);
      StrBuilder strBuilder0 = new StrBuilder((-4419));
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("");
      // Undeclared exception!
      try { 
        strBuilder0.insert(Integer.MAX_VALUE, Integer.MAX_VALUE);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2147483647
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.lastIndexOf('R');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[3];
      charArray0[0] = 'R';
      charArray0[1] = 'R';
      charArray0[2] = 'R';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 1955, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      StrBuilder strBuilder1 = strBuilder0.insert(0, true);
      char[] charArray0 = new char[4];
      charArray0[0] = 'C';
      charArray0[1] = 't';
      charArray0[2] = 'C';
      charArray0[3] = '4';
      strBuilder1.getChars(0, 0, charArray0, 0);
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      int int0 = strBuilder1.lastIndexOf(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.setNewLineText("Invalid offset: ");
      String string0 = strBuilder0.rightString(2713);
      StrBuilder strBuilder3 = strBuilder0.setLength(0);
      String string1 = strBuilder3.midString(1089, 114);
      StrBuilder strBuilder4 = strBuilder3.appendNewLine();
      // Undeclared exception!
      try { 
        strBuilder0.replace(strMatcher0, "", 3722, 0, 1752);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      String string0 = "/]2LL$Lk+CQuT6c";
      StrBuilder strBuilder0 = new StrBuilder("/]2LL$Lk+CQuT6c");
      char[] charArray0 = new char[4];
      charArray0[0] = '0';
      charArray0[1] = '\"';
      charArray0[2] = '/';
      charArray0[3] = 'j';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(4, 0, charArray0, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("&'U0/P_s0XHI]$");
      StrBuilder strBuilder1 = strBuilder0.append((String) null);
      int int0 = 3421;
      boolean boolean0 = true;
      StrBuilder strBuilder2 = new StrBuilder(3421);
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder2, 1122, 108);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.append((Object) null);
      // Undeclared exception!
      try { 
        strBuilder1.validateIndex(4);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 4
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3934);
      char[] charArray0 = new char[3];
      charArray0[0] = 'D';
      charArray0[1] = '<';
      charArray0[2] = 'Z';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(3934, 2, charArray0, 3934);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[3];
      charArray0[0] = 'k';
      charArray0[1] = 'E';
      charArray0[2] = 'q';
      // Undeclared exception!
      try { 
        strBuilder0.getChars((-1486), (-1486), charArray0, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1486
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(';');
      StrBuilder strBuilder2 = strBuilder1.replaceAll("+~4", "+~4");
      int int0 = strBuilder1.capacity();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      char[] charArray0 = new char[9];
      charArray0[0] = ';';
      charArray0[1] = ';';
      charArray0[2] = ';';
      charArray0[3] = ';';
      charArray0[4] = ';';
      charArray0[5] = ';';
      charArray0[6] = ';';
      charArray0[7] = ';';
      charArray0[8] = ';';
      strBuilder_StrBuilderWriter0.write(charArray0);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      String string0 = "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer";
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      char[] charArray0 = new char[3];
      charArray0[0] = 'T';
      charArray0[1] = 'S';
      charArray0[2] = 'z';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      // Undeclared exception!
      try { 
        strBuilder1.validateIndex(Integer.MAX_VALUE);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2147483647
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1368);
      StrMatcher strMatcher0 = StrMatcher.charMatcher(' ');
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 1368);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(5);
      StrBuilder strBuilder1 = strBuilder0.append(false);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[4];
      charArray0[0] = 'g';
      charArray0[1] = 'O';
      charArray0[2] = 'X';
      charArray0[3] = 'i';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0);
      int int1 = strBuilder_StrBuilderReader0.read();
      strBuilder_StrBuilderReader0.reset();
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(false);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrBuilder strBuilder2 = strBuilder1.deleteFirst('!');
      int int0 = strBuilder_StrBuilderReader0.read();
      int int1 = strBuilder1.capacity();
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) null, (String) null);
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      int int0 = strBuilder1.lastIndexOf(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft((-985), (-985), 'i');
      StrBuilder strBuilder3 = strBuilder0.trim();
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[6];
      charArray0[0] = 'k';
      charArray0[1] = '~';
      charArray0[2] = '1';
      charArray0[3] = 'B';
      charArray0[4] = '-';
      charArray0[5] = '+';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      boolean boolean0 = strBuilder0.contains(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.next();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder strBuilder1 = strBuilder0.append(0);
      int int0 = strBuilder1.indexOf("2J58V!#D$Ky", 0);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1272));
      int int0 = strBuilder0.size();
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setLength(3337);
      char[] charArray0 = new char[5];
      charArray0[0] = 'W';
      charArray0[1] = 'o';
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder2 = strBuilder0.deleteFirst((StrMatcher) strMatcher_TrimMatcher0);
      charArray0[4] = ' ';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      char[] charArray1 = new char[1];
      charArray1[0] = '/';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray1);
      StrBuilder strBuilder3 = strBuilder1.replaceFirst((StrMatcher) strMatcher_CharSetMatcher0, "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      String string0 = strBuilder0.toString();
      StrBuilder strBuilder4 = strBuilder1.setCharAt(34, '<');
      int int0 = strBuilder2.lastIndexOf('W', 34);
      int int1 = strBuilder1.indexOf("dW3Wc\"Nn&-Z4h-v");
      StrBuilder strBuilder5 = strBuilder1.insert(34, true);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.append(2343.1746F);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      String string0 = "QB+1`o/eHtjD";
      StrBuilder strBuilder0 = new StrBuilder("QB+1`o/eHtjD");
      StrBuilder strBuilder1 = strBuilder0.appendPadding(868, '}');
      int int0 = strBuilder0.lastIndexOf("QB+1`o/eHtjD", 1631);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      char[] charArray0 = new char[0];
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      int int1 = strMatcher0.isMatch(charArray0, 32, 868, 1371);
      int int2 = strBuilder0.indexOf(strMatcher0);
      int int3 = 468;
      // Undeclared exception!
      try { 
        strBuilder1.append("java.lang.Object", 468, (-5994));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder(31);
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight(4, 31, 'M');
      String string0 = "";
      StrBuilder strBuilder3 = strBuilder2.deleteFirst("");
      StrBuilder strBuilder4 = strBuilder1.append("");
      StrBuilder strBuilder5 = strBuilder0.append(strBuilder1);
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      char[] charArray0 = new char[6];
      charArray0[0] = 'M';
      charArray0[1] = 'p';
      charArray0[2] = 'M';
      charArray0[3] = 'M';
      charArray0[4] = 'M';
      charArray0[5] = 'M';
      // Undeclared exception!
      try { 
        strMatcher0.isMatch(charArray0, 31, 4, 2);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      String string0 = null;
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      int int0 = (-760);
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt((-760));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -760
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = '0';
      charArray0[1] = '\"';
      charArray0[2] = '/';
      charArray0[3] = 'j';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("/]2LL$Lk+CQuT6c");
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder0 = new StrBuilder(4);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(1883, 0, 'j');
      StrBuilder strBuilder2 = new StrBuilder((-1023));
      int int0 = strBuilder2.indexOf('j');
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      int int0 = (-2583);
      strBuilder0.size = (-2583);
      // Undeclared exception!
      try { 
        strBuilder0.append(0.0);
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(579);
      String string0 = strBuilder0.toString();
      boolean boolean0 = strBuilder1.endsWith("");
      int int0 = 101;
      strBuilder0.size = 101;
      StrBuilder strBuilder2 = strBuilder0.deleteAll("");
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      char[] charArray0 = new char[0];
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      int int1 = strBuilder1.indexOf(strMatcher0, 579);
      StrBuilder strBuilder3 = strBuilder2.deleteAll("[mYo=!Z=L$@yK");
      StrBuilder strBuilder4 = strBuilder2.deleteAll("");
      Object object0 = new Object();
      StrBuilder strBuilder5 = strBuilder4.insert(0, object0);
      StringBuffer stringBuffer0 = new StringBuffer("length must be valid");
      int int2 = 5;
      StrBuilder strBuilder6 = strBuilder4.append(stringBuffer0, 5, 0);
      Reader reader0 = strBuilder2.asReader();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("length must be valid", 1212, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.replace(0, 0, "org.apache.commons.lang.text.StrMatcher$NoMatcher");
      StrBuilder strBuilder2 = strBuilder1.append(1.0);
      String string0 = strBuilder2.midString(0, 0);
      StrBuilder strBuilder3 = strBuilder1.appendFixedWidthPadLeft(2, 0, '^');
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('A');
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher((String) null);
      int int0 = strBuilder3.lastIndexOf((StrMatcher) strMatcher_CharMatcher0);
      boolean boolean0 = strBuilder0.contains('y');
      boolean boolean1 = strBuilder1.contains("end < start");
      int int1 = strBuilder2.indexOf('y');
      StrBuilder strBuilder4 = new StrBuilder();
      int int2 = strBuilder4.indexOf((StrMatcher) strMatcher_CharMatcher0, (-1));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder4.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip((-1));
  }
}
