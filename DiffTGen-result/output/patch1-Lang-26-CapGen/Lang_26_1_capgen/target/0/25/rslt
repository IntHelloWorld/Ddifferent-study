* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.lang3.time.FastDateFormat
* Starting client
* Connecting to master process on port 6513
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/patch1-Lang-26-CapGen/Lang_26_1_capgen/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.lang3.time.FastDateFormat
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 456
  - Branch 444
  - Exception 0
  - MutationFactory 846
  - Output 163
  - Method 78
  - MethodNoException 78
[Progress:>                             0%] [Cov:>                                  0%]  - CBranchFitnessFactory 444
* Using seed 1585460810481
* Starting evolution
[Progress:===>                          10%] [Cov:=>                                 4%][Progress:===>                          10%] [Cov:==>                                8%][Progress:===>                          10%] [Cov:=======>                           21%][Progress:===>                          10%] [Cov:========>                          24%][Progress:===>                          10%] [Cov:========>                          25%][Progress:===>                          10%] [Cov:=========>                         26%][Progress:===>                          10%] [Cov:==========>                        29%][Progress:=====>                        18%] [Cov:=>                                 4%][Progress:======>                       20%] [Cov:===>                               9%][Progress:======>                       20%] [Cov:=======>                           21%][Progress:======>                       20%] [Cov:========>                          25%][Progress:======>                       20%] [Cov:=========>                         26%][Progress:======>                       21%] [Cov:==========>                        29%][Progress:======>                       21%] [Cov:===========>                       32%][Progress:======>                       23%] [Cov:=>                                 5%][Progress:======>                       23%] [Cov:===>                               10%][Progress:======>                       23%] [Cov:=======>                           22%][Progress:======>                       23%] [Cov:=========>                         27%][Progress:======>                       23%] [Cov:=========>                         28%][Progress:======>                       23%] [Cov:==========>                        31%][Progress:=======>                      25%] [Cov:=======>                           21%][Progress:=======>                      25%] [Cov:========>                          25%][Progress:=======>                      25%] [Cov:==========>                        29%][Progress:=======>                      26%] [Cov:=>                                 4%][Progress:=======>                      26%] [Cov:===>                               9%][Progress:=======>                      26%] [Cov:=======>                           21%][Progress:========>                     28%] [Cov:========>                          25%][Progress:========>                     28%] [Cov:=========>                         26%][Progress:========>                     28%] [Cov:=========>                         27%][Progress:========>                     28%] [Cov:==========>                        31%][Progress:=========>                    30%] [Cov:==>                                6%][Progress:=========>                    30%] [Cov:====>                              12%][Progress:=========>                    30%] [Cov:========>                          24%][Progress:=========>                    30%] [Cov:==========>                        30%][Progress:=========>                    30%] [Cov:==========>                        31%][Progress:=========>                    30%] [Cov:===========>                       32%][Progress:=========>                    30%] [Cov:============>                      36%][Progress:=========>                    31%] [Cov:=>                                 4%][Progress:=========>                    31%] [Cov:===>                               9%][Progress:=========>                    31%] [Cov:=======>                           22%][Progress:=========>                    31%] [Cov:=========>                         26%][Progress:=========>                    31%] [Cov:=========>                         28%][Progress:=========>                    31%] [Cov:==========>                        29%][Progress:=========>                    31%] [Cov:===========>                       32%][Progress:=========>                    33%] [Cov:=========>                         26%][Progress:=========>                    33%] [Cov:==========>                        30%][Progress:=========>                    33%] [Cov:===========>                       32%][Progress:==========>                   35%] [Cov:==========>                        30%][Progress:==========>                   35%] [Cov:===========>                       34%][Progress:==========>                   36%] [Cov:========>                          25%][Progress:==========>                   36%] [Cov:=========>                         26%][Progress:==========>                   36%] [Cov:==========>                        29%][Progress:==========>                   36%] [Cov:==========>                        30%][Progress:==========>                   36%] [Cov:===========>                       34%][Progress:===========>                  38%] [Cov:==>                                6%][Progress:===========>                  38%] [Cov:====>                              12%][Progress:===========>                  38%] [Cov:========>                          25%][Progress:===========>                  38%] [Cov:===========>                       32%][Progress:===========>                  38%] [Cov:===========>                       33%][Progress:===========>                  38%] [Cov:===========>                       34%][Progress:===========>                  38%] [Cov:=============>                     38%][Progress:============>                 40%] [Cov:=>                                 3%][Progress:============>                 40%] [Cov:==>                                8%][Progress:============>                 40%] [Cov:=======>                           20%][Progress:============>                 40%] [Cov:========>                          23%][Progress:============>                 40%] [Cov:========>                          24%][Progress:============>                 40%] [Cov:========>                          25%][Progress:============>                 40%] [Cov:==========>                        29%][Progress:============>                 40%] [Cov:===========>                       32%][Progress:============>                 41%] [Cov:==>                                7%][Progress:============>                 41%] [Cov:====>                              14%][Progress:============>                 41%] [Cov:=========>                         26%][Progress:============>                 41%] [Cov:===========>                       33%][Progress:============>                 41%] [Cov:===========>                       34%][Progress:============>                 41%] [Cov:============>                      36%][Progress:============>                 41%] [Cov:============>                      37%][Progress:============>                 41%] [Cov:==============>                    42%][Progress:============>                 43%] [Cov:==>                                6%][Progress:============>                 43%] [Cov:====>                              12%][Progress:============>                 43%] [Cov:========>                          24%][Progress:============>                 43%] [Cov:==========>                        31%][Progress:============>                 43%] [Cov:===========>                       32%][Progress:============>                 43%] [Cov:===========>                       33%][Progress:============>                 43%] [Cov:===========>                       34%][Progress:============>                 43%] [Cov:=============>                     38%][Progress:=============>                45%] [Cov:>                                  0%][Progress:=============>                45%] [Cov:>                                  1%][Progress:=============>                45%] [Cov:====>                              13%][Progress:=============>                45%] [Cov:========>                          23%][Progress:=============>                45%] [Cov:=========>                         28%][Progress:=============>                45%] [Cov:==========>                        29%][Progress:=============>                45%] [Cov:==========>                        30%][Progress:=============>                45%] [Cov:==========>                        31%][Progress:=============>                45%] [Cov:============>                      35%][Progress:=============>                46%] [Cov:=====>                             16%][Progress:=============>                46%] [Cov:========>                          24%][Progress:=============>                46%] [Cov:==========>                        29%][Progress:=============>                46%] [Cov:==========>                        31%][Progress:=============>                46%] [Cov:===========>                       32%][Progress:=============>                46%] [Cov:============>                      36%][Progress:=============>                46%] [Cov:==============>                    42%][Progress:==============>               48%] [Cov:============>                      35%][Progress:===============>              53%] [Cov:===========>                       34%][Progress:===============>              53%] [Cov:============>                      35%][Progress:================>             55%] [Cov:============>                      35%][Progress:================>             55%] [Cov:==============>                    42%][Progress:================>             56%] [Cov:======>                            18%][Progress:================>             56%] [Cov:==========>                        31%][Progress:================>             56%] [Cov:===========>                       32%][Progress:================>             56%] [Cov:===========>                       33%][Progress:================>             56%] [Cov:===========>                       34%][Progress:================>             56%] [Cov:============>                      37%][Progress:=================>            58%] [Cov:=========>                         27%][Progress:=================>            58%] [Cov:=========>                         28%][Progress:=================>            58%] [Cov:==========>                        29%][Progress:=================>            58%] [Cov:==========>                        30%][Progress:=================>            58%] [Cov:=============>                     39%][Progress:=================>            58%] [Cov:==============>                    42%][Progress:==================>           60%] [Cov:==========>                        31%][Progress:==================>           60%] [Cov:==============>                    42%][Progress:==================>           61%] [Cov:===========>                       32%][Progress:==================>           61%] [Cov:============>                      36%][Progress:==================>           61%] [Cov:============>                      37%][Progress:==================>           63%] [Cov:=====================>             61%][Progress:===================>          65%] [Cov:=====================>             60%][Progress:===================>          65%] [Cov:=====================>             61%][Progress:===================>          66%] [Cov:=====================>             61%][Progress:====================>         68%] [Cov:=====================>             60%][Progress:====================>         68%] [Cov:=====================>             61%][Progress:=====================>        70%] [Cov:=====================>             60%][Progress:=====================>        70%] [Cov:=====================>             61%][Progress:=====================>        73%] [Cov:=====================>             62%][Progress:======================>       75%] [Cov:=====================>             62%][Progress:======================>       76%] [Cov:=====================>             61%][Progress:======================>       76%] [Cov:=====================>             62%][Progress:========================>     80%] [Cov:======================>            63%][Progress:========================>     81%] [Cov:======================>            63%][Progress:========================>     83%] [Cov:=====================>             62%][Progress:========================>     83%] [Cov:======================>            63%][Progress:=========================>    86%] [Cov:======================>            63%][Progress:==========================>   88%] [Cov:=====================>             62%][Progress:==========================>   88%] [Cov:======================>            63%][Progress:===========================>  90%] [Cov:======================>            63%][Progress:===========================>  91%] [Cov:======================>            63%][Progress:===========================>  93%] [Cov:=====================>             62%][Progress:===========================>  93%] [Cov:======================>            63%][Progress:============================> 95%] [Cov:======================>            64%][Progress:============================> 96%] [Cov:======================>            63%][Progress:============================> 96%] [Cov:======================>            64%][Progress:=============================>98%] [Cov:======================>            63%][Progress:=============================>98%] [Cov:======================>            64%][Progress:==============================100%] [Cov:======================>            64%][Progress:==============================100%] [Cov:======================>            64%][Progress:==============================100%] [Cov:======================>            64%][Progress:==============================100%] [Cov:======================>            65%]
* Search finished after 62s and 8 generations, 3298 statements, best individual has fitness: 952.3676829604094
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 82%
* Total number of goals: 456
* Number of covered goals: 372
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 75%
* Total number of goals: 444
* Number of covered goals: 334
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 27
* Number of covered goals: 27
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 63%
* Total number of goals: 846
* Number of covered goals: 533
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 37%
* Total number of goals: 163
* Number of covered goals: 60
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 49%
* Total number of goals: 78
* Number of covered goals: 38
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 47%
* Total number of goals: 78
* Number of covered goals: 37
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 72%
* Total number of goals: 444
* Number of covered goals: 321
* Generated 79 tests with total length 296
* Resulting test suite's coverage: 65% (average coverage for all fitness functions)
* Compiling and checking tests
* Writing JUnit test case 'FastDateFormat_ESTest' to evosuite-tests
* Done!

* Computation finished
