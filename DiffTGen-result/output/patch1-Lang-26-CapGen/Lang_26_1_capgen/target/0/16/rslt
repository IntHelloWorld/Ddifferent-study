* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.lang3.time.FastDateFormat
* Starting client
* Connecting to master process on port 19951
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/patch1-Lang-26-CapGen/Lang_26_1_capgen/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.lang3.time.FastDateFormat
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 456
  - Branch 444
  - Exception 0
  - MutationFactory 846
  - Output 163
  - Method 78
  - MethodNoException 78
  - CBranchFitnessFactory 444
* Using seed 1585460642765
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%][Progress:===>                          13%] [Cov:>                                  0%][Progress:===>                          13%] [Cov:>                                  1%][Progress:===>                          13%] [Cov:====>                              13%][Progress:====>                         15%] [Cov:==>                                6%][Progress:====>                         15%] [Cov:===>                               11%][Progress:====>                         15%] [Cov:========>                          24%][Progress:====>                         16%] [Cov:==========>                        29%][Progress:====>                         16%] [Cov:==========>                        30%][Progress:======>                       20%] [Cov:==========>                        30%][Progress:======>                       20%] [Cov:==========>                        31%][Progress:======>                       21%] [Cov:============>                      35%][Progress:======>                       23%] [Cov:==>                                7%][Progress:======>                       23%] [Cov:====>                              14%][Progress:======>                       23%] [Cov:=========>                         26%][Progress:======>                       23%] [Cov:===========>                       34%][Progress:======>                       23%] [Cov:============>                      35%][Progress:======>                       23%] [Cov:============>                      37%][Progress:======>                       23%] [Cov:=============>                     38%][Progress:=======>                      25%] [Cov:===============>                   43%][Progress:=========>                    30%] [Cov:==>                                6%][Progress:=========>                    30%] [Cov:====>                              12%][Progress:=========>                    30%] [Cov:========>                          24%][Progress:=========>                    30%] [Cov:==========>                        31%][Progress:=========>                    30%] [Cov:===========>                       32%][Progress:=========>                    30%] [Cov:============>                      36%][Progress:=========>                    31%] [Cov:====>                              12%][Progress:=========>                    31%] [Cov:====>                              13%][Progress:=========>                    31%] [Cov:========>                          23%][Progress:=========>                    33%] [Cov:=========>                         27%][Progress:=========>                    33%] [Cov:=========>                         28%][Progress:=========>                    33%] [Cov:==========>                        29%][Progress:=========>                    33%] [Cov:===========>                       32%][Progress:=========>                    33%] [Cov:===========>                       34%][Progress:===========>                  38%] [Cov:=>                                 5%][Progress:===========>                  38%] [Cov:===>                               11%][Progress:===========>                  38%] [Cov:========>                          23%][Progress:===========>                  38%] [Cov:=========>                         28%][Progress:===========>                  38%] [Cov:==========>                        29%][Progress:===========>                  38%] [Cov:==========>                        30%][Progress:===========>                  38%] [Cov:===========>                       34%][Progress:============>                 40%] [Cov:=>                                 5%][Progress:============>                 40%] [Cov:===>                               11%][Progress:============>                 40%] [Cov:========>                          23%][Progress:============>                 40%] [Cov:=========>                         28%][Progress:============>                 40%] [Cov:==========>                        29%][Progress:============>                 40%] [Cov:==========>                        30%][Progress:============>                 40%] [Cov:===========>                       34%][Progress:============>                 41%] [Cov:=>                                 4%][Progress:============>                 41%] [Cov:===>                               9%][Progress:============>                 41%] [Cov:=======>                           21%][Progress:============>                 41%] [Cov:========>                          25%][Progress:============>                 41%] [Cov:=========>                         26%][Progress:============>                 41%] [Cov:==========>                        30%][Progress:============>                 43%] [Cov:=========>                         27%][Progress:============>                 43%] [Cov:=========>                         28%][Progress:============>                 43%] [Cov:==========>                        30%][Progress:============>                 43%] [Cov:==========>                        31%][Progress:============>                 43%] [Cov:============>                      35%][Progress:=============>                45%] [Cov:==>                                7%][Progress:=============>                45%] [Cov:====>                              13%][Progress:=============>                45%] [Cov:=========>                         26%][Progress:=============>                45%] [Cov:===========>                       33%][Progress:=============>                45%] [Cov:============>                      35%][Progress:=============>                45%] [Cov:============>                      37%][Progress:=============>                45%] [Cov:=============>                     39%][Progress:=============>                45%] [Cov:===============>                   43%][Progress:=============>                46%] [Cov:=>                                 5%][Progress:=============>                46%] [Cov:===>                               10%][Progress:=============>                46%] [Cov:=======>                           22%][Progress:=============>                46%] [Cov:=========>                         26%][Progress:=============>                46%] [Cov:=========>                         27%][Progress:=============>                46%] [Cov:==========>                        31%][Progress:=============>                46%] [Cov:============>                      35%][Progress:=============>                46%] [Cov:============>                      36%][Progress:=============>                46%] [Cov:==============>                    40%][Progress:==============>               48%] [Cov:=>                                 5%][Progress:==============>               48%] [Cov:===>                               10%][Progress:==============>               48%] [Cov:========>                          23%][Progress:==============>               48%] [Cov:=========>                         27%][Progress:==============>               48%] [Cov:=========>                         28%][Progress:==============>               48%] [Cov:==========>                        29%][Progress:==============>               48%] [Cov:===========>                       32%][Progress:==============>               48%] [Cov:===========>                       33%][Progress:===============>              50%] [Cov:=>                                 3%][Progress:===============>              50%] [Cov:==>                                8%][Progress:===============>              50%] [Cov:=======>                           20%][Progress:===============>              50%] [Cov:========>                          24%][Progress:===============>              50%] [Cov:========>                          25%][Progress:===============>              50%] [Cov:==========>                        29%][Progress:===============>              50%] [Cov:==========>                        30%][Progress:===============>              50%] [Cov:===========>                       34%][Progress:===============>              50%] [Cov:============>                      35%][Progress:===============>              50%] [Cov:=============>                     38%][Progress:===============>              50%] [Cov:==============>                    40%][Progress:===============>              50%] [Cov:===============>                   44%][Progress:===============>              51%] [Cov:=>                                 5%][Progress:===============>              51%] [Cov:===>                               10%][Progress:===============>              51%] [Cov:=======>                           22%][Progress:===============>              51%] [Cov:=========>                         27%][Progress:===============>              51%] [Cov:=========>                         28%][Progress:===============>              51%] [Cov:===========>                       32%][Progress:===============>              51%] [Cov:===========>                       33%][Progress:===============>              51%] [Cov:===========>                       34%][Progress:===============>              51%] [Cov:============>                      35%][Progress:===============>              51%] [Cov:==============>                    40%][Progress:===============>              51%] [Cov:===============>                   43%][Progress:===============>              53%] [Cov:============>                      35%][Progress:===============>              53%] [Cov:============>                      36%][Progress:===============>              53%] [Cov:============>                      37%][Progress:================>             55%] [Cov:============>                      35%][Progress:================>             55%] [Cov:=============>                     38%][Progress:================>             56%] [Cov:============>                      37%][Progress:=================>            58%] [Cov:============>                      35%][Progress:=================>            58%] [Cov:==============>                    42%][Progress:==================>           60%] [Cov:==========>                        29%][Progress:==================>           60%] [Cov:===========>                       33%][Progress:==================>           60%] [Cov:===========>                       34%][Progress:==================>           60%] [Cov:============>                      35%][Progress:==================>           61%] [Cov:===========>                       34%][Progress:==================>           61%] [Cov:===============>                   43%][Progress:==================>           63%] [Cov:======================>            63%][Progress:===================>          65%] [Cov:======================>            63%][Progress:===================>          66%] [Cov:=====================>             62%][Progress:===================>          66%] [Cov:======================>            63%][Progress:====================>         68%] [Cov:======================>            63%][Progress:=====================>        70%] [Cov:======================>            63%][Progress:=====================>        71%] [Cov:=====================>             62%][Progress:=====================>        71%] [Cov:======================>            63%][Progress:=====================>        73%] [Cov:=====================>             62%][Progress:=====================>        73%] [Cov:======================>            63%][Progress:======================>       75%] [Cov:======================>            63%][Progress:=======================>      78%] [Cov:======================>            63%][Progress:========================>     80%] [Cov:======================>            63%][Progress:========================>     81%] [Cov:=====================>             62%][Progress:========================>     81%] [Cov:======================>            63%][Progress:========================>     83%] [Cov:======================>            63%][Progress:=========================>    85%] [Cov:=====================>             62%][Progress:=========================>    85%] [Cov:======================>            63%][Progress:==========================>   88%] [Cov:======================>            63%][Progress:===========================>  90%] [Cov:======================>            63%][Progress:===========================>  91%] [Cov:======================>            63%][Progress:===========================>  93%] [Cov:======================>            63%][Progress:===========================>  93%] [Cov:======================>            64%][Progress:============================> 95%] [Cov:======================>            63%][Progress:============================> 95%] [Cov:======================>            64%][Progress:============================> 96%] [Cov:======================>            64%][Progress:=============================>98%] [Cov:======================>            63%][Progress:=============================>98%] [Cov:======================>            64%][Progress:==============================100%] [Cov:======================>            63%][Progress:==============================100%] [Cov:======================>            64%][Progress:==============================100%] [Cov:======================>            63%][Progress:==============================100%] [Cov:======================>            64%][Progress:==============================100%] [Cov:======================>            64%][Progress:==============================100%] [Cov:======================>            65%]
* Search finished after 63s and 6 generations, 3184 statements, best individual has fitness: 993.5527296157413
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 80%
* Total number of goals: 456
* Number of covered goals: 367
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 74%
* Total number of goals: 444
* Number of covered goals: 328
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 24
* Number of covered goals: 24
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 59%
* Total number of goals: 846
* Number of covered goals: 503
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 39%
* Total number of goals: 163
* Number of covered goals: 64
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 49%
* Total number of goals: 78
* Number of covered goals: 38
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 49%
* Total number of goals: 78
* Number of covered goals: 38
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 71%
* Total number of goals: 444
* Number of covered goals: 316
* Generated 78 tests with total length 281
* Resulting test suite's coverage: 65% (average coverage for all fitness functions)
* Compiling and checking tests
* Writing JUnit test case 'FastDateFormat_ESTest' to evosuite-tests
* Done!

* Computation finished
