* EvoSuite 1.0.2
* Going to generate test cases for class: org.apache.commons.lang.text.StrBuilder
* Starting client
* Connecting to master process on port 9727
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/Lang_59_tbar/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.lang.text.StrBuilder
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 648
  - Branch 517
  - Exception 0
  - MutationFactory 584
  - Output 1029
  - Method 107
  - MethodNoException 107
  - CBranchFitnessFactory 517
* Using seed 1585042718370
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%][Progress:==>                           8%] [Cov:>                                  0%][Progress:==>                           8%] [Cov:====>                              12%][Progress:===>                          10%] [Cov:>                                  0%][Progress:===>                          10%] [Cov:====>                              13%][Progress:===>                          10%] [Cov:====>                              14%][Progress:===>                          11%] [Cov:>                                  0%][Progress:===>                          11%] [Cov:====>                              13%][Progress:====>                         15%] [Cov:>                                  2%][Progress:====>                         15%] [Cov:=>                                 4%][Progress:====>                         16%] [Cov:=====>                             17%][Progress:====>                         16%] [Cov:======>                            18%][Progress:=====>                        18%] [Cov:====>                              12%][Progress:=====>                        18%] [Cov:====>                              13%][Progress:======>                       20%] [Cov:====>                              12%][Progress:======>                       20%] [Cov:====>                              13%][Progress:======>                       21%] [Cov:>                                  0%][Progress:======>                       21%] [Cov:====>                              13%][Progress:======>                       21%] [Cov:====>                              14%][Progress:=======>                      25%] [Cov:>                                  0%][Progress:=======>                      25%] [Cov:====>                              12%][Progress:=======>                      25%] [Cov:====>                              14%][Progress:=======>                      26%] [Cov:>                                  0%][Progress:=======>                      26%] [Cov:====>                              12%][Progress:=======>                      26%] [Cov:====>                              13%][Progress:=======>                      26%] [Cov:====>                              14%][Progress:========>                     28%] [Cov:>                                  0%][Progress:========>                     28%] [Cov:====>                              13%][Progress:=========>                    30%] [Cov:====>                              13%][Progress:=========>                    30%] [Cov:====>                              14%][Progress:=========>                    30%] [Cov:=====>                             15%][Progress:=========>                    30%] [Cov:====>                              14%][Progress:=========>                    31%] [Cov:====>                              13%][Progress:=========>                    31%] [Cov:====>                              14%][Progress:=========>                    31%] [Cov:=====>                             15%][Progress:=========>                    31%] [Cov:=====>                             16%][Progress:=========>                    31%] [Cov:======>                            19%][Progress:=========>                    31%] [Cov:=======>                           20%][Progress:=========>                    33%] [Cov:===>                               11%][Progress:=========>                    33%] [Cov:====>                              13%][Progress:=========>                    33%] [Cov:====>                              14%][Progress:=========>                    33%] [Cov:=====>                             17%][Progress:=========>                    33%] [Cov:======>                            18%][Progress:=========>                    33%] [Cov:============>                      36%][Progress:==========>                   35%] [Cov:============>                      36%][Progress:==========>                   35%] [Cov:============>                      37%][Progress:============>                 40%] [Cov:============>                      35%][Progress:============>                 41%] [Cov:============>                      35%][Progress:============>                 43%] [Cov:============>                      35%][Progress:============>                 43%] [Cov:============>                      36%][Progress:============>                 43%] [Cov:============>                      37%][Progress:=============>                45%] [Cov:============>                      36%][Progress:=============>                45%] [Cov:============>                      36%][Progress:=============>                45%] [Cov:============>                      37%][Progress:==============>               48%] [Cov:=============>                     38%][Progress:===============>              50%] [Cov:============>                      36%][Progress:===============>              50%] [Cov:============>                      37%][Progress:===============>              50%] [Cov:=============>                     38%][Progress:===============>              50%] [Cov:============>                      37%][Progress:===============>              50%] [Cov:=============>                     38%][Progress:===============>              51%] [Cov:============>                      37%][Progress:===============>              51%] [Cov:=============>                     38%][Progress:===============>              53%] [Cov:============>                      37%][Progress:===============>              53%] [Cov:=============>                     38%][Progress:===============>              53%] [Cov:=============>                     39%][Progress:===============>              53%] [Cov:==============>                    40%][Progress:================>             55%] [Cov:============>                      37%][Progress:================>             55%] [Cov:==============>                    41%][Progress:================>             55%] [Cov:==============>                    42%][Progress:================>             56%] [Cov:==============>                    42%][Progress:================>             56%] [Cov:==============>                    42%][Progress:================>             56%] [Cov:===============>                   43%][Progress:=================>            58%] [Cov:==============>                    42%][Progress:=================>            58%] [Cov:===============>                   43%][Progress:=================>            58%] [Cov:===============>                   44%][Progress:==================>           60%] [Cov:===============>                   43%][Progress:==================>           61%] [Cov:===============>                   43%][Progress:==================>           61%] [Cov:===============>                   45%][Progress:==================>           63%] [Cov:===============>                   44%][Progress:==================>           63%] [Cov:================>                  46%][Progress:===================>          65%] [Cov:================>                  46%][Progress:===================>          65%] [Cov:================>                  47%][Progress:===================>          66%] [Cov:================>                  47%][Progress:===================>          66%] [Cov:================>                  48%][Progress:====================>         68%] [Cov:================>                  47%][Progress:====================>         68%] [Cov:================>                  48%][Progress:====================>         68%] [Cov:================>                  48%][Progress:=====================>        70%] [Cov:================>                  48%][Progress:=====================>        71%] [Cov:================>                  47%][Progress:=====================>        71%] [Cov:================>                  48%][Progress:=====================>        71%] [Cov:=================>                 49%][Progress:=====================>        73%] [Cov:================>                  48%][Progress:=====================>        73%] [Cov:=================>                 49%][Progress:======================>       76%] [Cov:================>                  48%][Progress:======================>       76%] [Cov:=================>                 49%][Progress:=======================>      78%] [Cov:================>                  48%][Progress:=======================>      78%] [Cov:=================>                 49%][Progress:========================>     80%] [Cov:================>                  48%][Progress:========================>     80%] [Cov:=================>                 50%][Progress:========================>     81%] [Cov:=================>                 49%][Progress:========================>     81%] [Cov:=================>                 50%][Progress:========================>     81%] [Cov:=================>                 51%][Progress:========================>     83%] [Cov:=================>                 51%][Progress:=========================>    85%] [Cov:=================>                 51%][Progress:=========================>    86%] [Cov:==================>                52%][Progress:==========================>   88%] [Cov:=================>                 51%][Progress:==========================>   88%] [Cov:==================>                52%][Progress:===========================>  90%] [Cov:==================>                52%][Progress:===========================>  91%] [Cov:=================>                 51%][Progress:===========================>  91%] [Cov:==================>                52%][Progress:===========================>  91%] [Cov:==================>                54%][Progress:===========================>  93%] [Cov:==================>                53%][Progress:===========================>  93%] [Cov:==================>                54%][Progress:============================> 95%] [Cov:==================>                53%][Progress:============================> 95%] [Cov:==================>                54%][Progress:============================> 95%] [Cov:==================>                54%][Progress:============================> 96%] [Cov:==================>                54%][Progress:=============================>98%] [Cov:==================>                54%][Progress:==============================100%] [Cov:==================>                54%][Progress:==============================100%] [Cov:==================>                54%][Progress:==============================100%] [Cov:===================>               55%][Progress:==============================100%] [Cov:=====================>             60%]
* Search finished after 65s and 17 generations, 8966 statements, best individual has fitness: 3279.559476909074
* Minimizing test suite
[MASTER] 17:41:00.885 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 69%
* Total number of goals: 648
* Number of covered goals: 444
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 62%
* Total number of goals: 517
* Number of covered goals: 319
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 27
* Number of covered goals: 27
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 49%
* Total number of goals: 584
* Number of covered goals: 288
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 4%
* Total number of goals: 1029
* Number of covered goals: 37
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 93%
* Total number of goals: 107
* Number of covered goals: 99
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 80%
* Total number of goals: 107
* Number of covered goals: 86
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 52%
* Total number of goals: 517
* Number of covered goals: 271
* Generated 92 tests with total length 923
* Resulting test suite's coverage: 60% (average coverage for all fitness functions)
* Compiling and checking tests
* Writing JUnit test case 'StrBuilder_ESTest' to evosuite-tests
* Done!

* Computation finished
