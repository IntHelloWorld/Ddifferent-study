* EvoSuite 1.0.2
* Going to generate test cases for class: org.apache.commons.lang.text.StrBuilder
* Starting client
* Connecting to master process on port 8143
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/Lang_59_tbar/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.lang.text.StrBuilder
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 648
  - Branch 517
  - Exception 0
  - MutationFactory 584
  - Output 1029
  - Method 107
  - MethodNoException 107
  - CBranchFitnessFactory 517
* Using seed 1585042497809
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%][Progress:=====>                        18%] [Cov:>                                  1%][Progress:=====>                        18%] [Cov:>                                  2%][Progress:======>                       20%] [Cov:====>                              14%][Progress:======>                       21%] [Cov:>                                  0%][Progress:======>                       21%] [Cov:====>                              13%][Progress:======>                       23%] [Cov:>                                  0%][Progress:======>                       23%] [Cov:====>                              12%][Progress:=======>                      26%] [Cov:>                                  1%][Progress:=======>                      26%] [Cov:>                                  2%][Progress:=======>                      26%] [Cov:====>                              14%][Progress:=======>                      26%] [Cov:=====>                             15%][Progress:=======>                      26%] [Cov:=====>                             16%][Progress:========>                     28%] [Cov:>                                  1%][Progress:========>                     28%] [Cov:====>                              14%][Progress:========>                     28%] [Cov:=====>                             15%][Progress:=========>                    33%] [Cov:>                                  0%][Progress:=========>                    33%] [Cov:====>                              13%][Progress:==========>                   35%] [Cov:>                                  0%][Progress:==========>                   35%] [Cov:>                                  1%][Progress:==========>                   35%] [Cov:====>                              14%][Progress:==========>                   36%] [Cov:====>                              13%][Progress:==========>                   36%] [Cov:=====>                             15%][Progress:==========>                   36%] [Cov:=====>                             16%][Progress:===========>                  38%] [Cov:>                                  0%][Progress:===========>                  38%] [Cov:====>                              12%][Progress:============>                 43%] [Cov:>                                  0%][Progress:============>                 43%] [Cov:>                                  1%][Progress:============>                 43%] [Cov:====>                              14%][Progress:=============>                45%] [Cov:>                                  0%][Progress:=============>                45%] [Cov:====>                              12%][Progress:=============>                45%] [Cov:====>                              14%][Progress:=============>                45%] [Cov:=====>                             15%][Progress:=============>                46%] [Cov:>                                  0%][Progress:=============>                46%] [Cov:====>                              12%][Progress:=============>                46%] [Cov:=====>                             16%][Progress:===============>              51%] [Cov:====>                              12%][Progress:===============>              51%] [Cov:====>                              13%][Progress:===============>              51%] [Cov:====>                              14%][Progress:================>             55%] [Cov:====>                              12%][Progress:=================>            58%] [Cov:====>                              12%][Progress:=================>            58%] [Cov:====>                              13%][Progress:=================>            58%] [Cov:====>                              14%][Progress:=================>            58%] [Cov:=====>                             15%][Progress:=================>            58%] [Cov:===========>                       32%][Progress:==================>           60%] [Cov:===========>                       32%][Progress:==================>           63%] [Cov:===========>                       32%][Progress:====================>         68%] [Cov:===========>                       32%][Progress:====================>         68%] [Cov:===========>                       33%][Progress:=====================>        73%] [Cov:===========>                       33%][Progress:======================>       75%] [Cov:===========>                       32%][Progress:======================>       75%] [Cov:===========>                       33%][Progress:======================>       75%] [Cov:===========>                       33%][Progress:======================>       75%] [Cov:===========>                       34%][Progress:=======================>      78%] [Cov:===========>                       33%][Progress:========================>     80%] [Cov:===========>                       33%][Progress:========================>     80%] [Cov:===========>                       34%][Progress:========================>     80%] [Cov:============>                      35%][Progress:========================>     81%] [Cov:============>                      36%][Progress:========================>     83%] [Cov:============>                      35%][Progress:========================>     83%] [Cov:============>                      36%][Progress:=========================>    86%] [Cov:============>                      35%][Progress:=========================>    86%] [Cov:============>                      36%][Progress:==========================>   88%] [Cov:============>                      35%][Progress:==========================>   88%] [Cov:============>                      36%][Progress:==========================>   88%] [Cov:============>                      37%][Progress:===========================>  91%] [Cov:============>                      36%][Progress:===========================>  91%] [Cov:============>                      37%][Progress:===========================>  93%] [Cov:============>                      36%][Progress:===========================>  93%] [Cov:============>                      37%][Progress:============================> 95%] [Cov:============>                      36%][Progress:============================> 95%] [Cov:============>                      37%][Progress:============================> 96%] [Cov:============>                      37%][Progress:============================> 96%] [Cov:=============>                     38%][Progress:=============================>98%] [Cov:=============>                     38%][Progress:=============================>98%] [Cov:=============>                     39%][Progress:==============================100%] [Cov:=============>                     38%][Progress:==============================100%] [Cov:=============>                     39%][Progress:==============================100%] [Cov:=============>                     39%][Progress:==============================100%] [Cov:==============>                    40%][Progress:==============================100%] [Cov:==============>                    40%][Progress:==============================100%] [Cov:==============>                    40%][Progress:==============================100%] [Cov:===============>                   45%][MASTER] 17:36:35.090 [logback-1] WARN  TimeController - Operation 'update from archive' took too long: 8708ms

* Search finished after 71s and 8 generations, 3441 statements, best individual has fitness: 5492.110764443578
[MASTER] 17:36:35.315 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 10 seconds more than allowed.
* Minimizing test suite
[MASTER] 17:37:44.828 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 54%
* Total number of goals: 648
* Number of covered goals: 351
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 43%
* Total number of goals: 517
* Number of covered goals: 221
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 17
* Number of covered goals: 17
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 36%
* Total number of goals: 584
* Number of covered goals: 211
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 2%
* Total number of goals: 1029
* Number of covered goals: 20
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 63%
* Total number of goals: 107
* Number of covered goals: 67
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 55%
* Total number of goals: 107
* Number of covered goals: 59
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 38%
* Total number of goals: 517
* Number of covered goals: 197
* Generated 62 tests with total length 536
* Resulting test suite's coverage: 45% (average coverage for all fitness functions)
* Compiling and checking tests
[MASTER] 17:38:04.539 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Requested array size exceeds VM limit
[MASTER] 17:38:04.540 [logback-1] WARN  JUnitAnalyzer - Failing test: StrBuilder strBuilder0 = new StrBuilder();
StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(2860, 2860, 'n');
StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((Object) strBuilder0, 2860, '0');
StrBuilder strBuilder3 = strBuilder1.deleteFirst("jIq");
StrBuilder strBuilder4 = strBuilder1.setLength(333);
StrMatcher.CharMatcher strMatcher_CharMatcher0 = (StrMatcher.CharMatcher)StrMatcher.tabMatcher();
boolean boolean0 = strBuilder2.contains((StrMatcher) strMatcher_CharMatcher0);
int int0 = Integer.MAX_VALUE;
StrBuilder strBuilder5 = new StrBuilder(int0);

* Writing JUnit test case 'StrBuilder_ESTest' to evosuite-tests
* Done!

* Computation finished
