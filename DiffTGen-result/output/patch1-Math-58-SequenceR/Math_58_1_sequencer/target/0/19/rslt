* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.math.optimization.fitting.GaussianFitter
* Starting client
* Connecting to master process on port 10414
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/patch1-Math-58-SequenceR/Math_58_1_sequencer/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math.optimization.fitting.GaussianFitter
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 92
  - Branch 67
  - Exception 0
  - MutationFactory 402
  - Output 6
  - Method 5
  - MethodNoException 5
  - CBranchFitnessFactory 67
* Using seed 1585462876387
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%][Progress:=========>                    33%] [Cov:>                                  2%][Progress:=========>                    33%] [Cov:====>                              14%][Progress:=========>                    33%] [Cov:=======>                           21%][Progress:=========>                    33%] [Cov:========>                          23%][Progress:=========>                    33%] [Cov:========>                          24%][Progress:==========>                   35%] [Cov:==>                                7%][Progress:==========>                   35%] [Cov:====>                              13%][Progress:==========>                   35%] [Cov:=========>                         26%][Progress:==========>                   35%] [Cov:===========>                       34%][Progress:==========>                   35%] [Cov:===============>                   43%][Progress:==========>                   35%] [Cov:=================>                 50%][Progress:==========>                   35%] [Cov:===================>               55%][Progress:==========>                   36%] [Cov:>                                  1%][Progress:==========>                   36%] [Cov:>                                  2%][Progress:==========>                   36%] [Cov:====>                              14%][Progress:==========>                   36%] [Cov:=======>                           20%][Progress:==========>                   36%] [Cov:=======>                           22%][Progress:==========>                   36%] [Cov:========>                          23%][Progress:==========>                   36%] [Cov:=========>                         26%][Progress:==========>                   36%] [Cov:============>                      36%][Progress:==========>                   36%] [Cov:================>                  47%][Progress:==========>                   36%] [Cov:==================>                54%][Progress:==========>                   36%] [Cov:====================>              59%][Progress:===========>                  38%] [Cov:==>                                7%][Progress:===========>                  38%] [Cov:=====>                             15%][Progress:===========>                  38%] [Cov:=========>                         27%][Progress:===========>                  38%] [Cov:=============>                     38%][Progress:===========>                  38%] [Cov:===============>                   45%][Progress:===========>                  38%] [Cov:==================>                52%][Progress:===========>                  38%] [Cov:====================>              58%][Progress:===========>                  38%] [Cov:=====================>             60%][Progress:============>                 40%] [Cov:==>                                8%][Progress:============>                 40%] [Cov:=====>                             15%][Progress:============>                 40%] [Cov:=========>                         27%][Progress:============>                 40%] [Cov:=============>                     38%][Progress:============>                 40%] [Cov:================>                  46%][Progress:============>                 40%] [Cov:==================>                53%][Progress:============>                 40%] [Cov:====================>              58%][Progress:============>                 40%] [Cov:=====================>             60%][Progress:============>                 41%] [Cov:>                                  1%][Progress:============>                 41%] [Cov:>                                  2%][Progress:============>                 41%] [Cov:====>                              14%][Progress:============>                 41%] [Cov:=======>                           21%][Progress:============>                 41%] [Cov:========>                          25%][Progress:============>                 41%] [Cov:=========>                         26%][Progress:============>                 41%] [Cov:==========>                        30%][Progress:============>                 41%] [Cov:===============>                   44%][Progress:============>                 41%] [Cov:=================>                 50%][Progress:============>                 41%] [Cov:===================>               57%][Progress:============>                 41%] [Cov:======================>            64%][Progress:============>                 43%] [Cov:====>                              14%][Progress:============>                 43%] [Cov:=======>                           20%][Progress:============>                 43%] [Cov:========>                          25%][Progress:============>                 43%] [Cov:==========>                        29%][Progress:============>                 43%] [Cov:==============>                    41%][Progress:============>                 43%] [Cov:=================>                 50%][Progress:============>                 43%] [Cov:===================>               57%][Progress:============>                 43%] [Cov:======================>            63%][Progress:=============>                45%] [Cov:>                                  1%][Progress:=============>                45%] [Cov:>                                  2%][Progress:=============>                45%] [Cov:=====>                             15%][Progress:=============>                45%] [Cov:========>                          24%][Progress:=============>                45%] [Cov:=========>                         28%][Progress:=============>                45%] [Cov:==========>                        29%][Progress:=============>                45%] [Cov:============>                      37%][Progress:=============>                45%] [Cov:================>                  46%][Progress:=============>                45%] [Cov:==================>                53%][Progress:=============>                45%] [Cov:====================>              58%][Progress:=============>                46%] [Cov:>                                  0%][Progress:=============>                46%] [Cov:====>                              12%][Progress:=============>                46%] [Cov:====>                              13%][Progress:=============>                46%] [Cov:=====>                             16%][Progress:=============>                46%] [Cov:=======>                           21%][Progress:=============>                46%] [Cov:========>                          25%][Progress:=============>                46%] [Cov:=========>                         26%][Progress:=============>                46%] [Cov:==========>                        30%][Progress:=============>                46%] [Cov:===============>                   43%][Progress:=============>                46%] [Cov:================>                  48%][Progress:=============>                46%] [Cov:==================>                52%][Progress:=============>                46%] [Cov:====================>              59%][Progress:=============>                46%] [Cov:======================>            63%][Progress:==============>               48%] [Cov:>                                  1%][Progress:==============>               48%] [Cov:>                                  2%][Progress:==============>               48%] [Cov:====>                              14%][Progress:==============>               48%] [Cov:========>                          23%][Progress:==============>               48%] [Cov:========>                          25%][Progress:==============>               48%] [Cov:=========>                         26%][Progress:==============>               48%] [Cov:===========>                       34%][Progress:==============>               48%] [Cov:=============>                     39%][Progress:==============>               48%] [Cov:===============>                   43%][Progress:==============>               48%] [Cov:================>                  46%][Progress:==============>               48%] [Cov:==================>                54%][Progress:==============>               48%] [Cov:=====================>             60%][Progress:==============>               48%] [Cov:=======================>           67%][Progress:===============>              50%] [Cov:>                                  1%][Progress:===============>              50%] [Cov:>                                  2%][Progress:===============>              50%] [Cov:====>                              14%][Progress:===============>              50%] [Cov:=======>                           20%][Progress:===============>              50%] [Cov:=======>                           22%][Progress:===============>              50%] [Cov:========>                          23%][Progress:===============>              50%] [Cov:=========>                         26%][Progress:===============>              50%] [Cov:===========>                       33%][Progress:===============>              50%] [Cov:==============>                    42%][Progress:===============>              50%] [Cov:=================>                 49%][Progress:===============>              50%] [Cov:==================>                53%][Progress:===============>              50%] [Cov:=======================>           67%][Progress:===============>              51%] [Cov:==============>                    40%][Progress:===============>              51%] [Cov:====================>              59%][Progress:===============>              51%] [Cov:=====================>             62%][Progress:===============>              51%] [Cov:======================>            65%][Progress:===============>              51%] [Cov:=======================>           68%][Progress:===============>              53%] [Cov:=====================>             60%][Progress:===============>              53%] [Cov:=====================>             61%][Progress:===============>              53%] [Cov:=====================>             62%][Progress:===============>              53%] [Cov:=======================>           67%][Progress:================>             55%] [Cov:=====================>             60%][Progress:================>             55%] [Cov:=======================>           67%][Progress:================>             55%] [Cov:=======================>           68%][Progress:================>             55%] [Cov:==========================>        77%][Progress:================>             56%] [Cov:==========================>        75%][Progress:================>             56%] [Cov:==========================>        76%][Progress:================>             56%] [Cov:===========================>       79%][Progress:==================>           60%] [Cov:==========================>        76%][Progress:==================>           60%] [Cov:==========================>        77%][Progress:==================>           60%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      80%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      82%][Progress:====================>         68%] [Cov:============================>      82%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      82%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      82%][Progress:=====================>        71%] [Cov:============================>      82%][Progress:=====================>        73%] [Cov:============================>      81%][Progress:=====================>        73%] [Cov:============================>      82%][Progress:=====================>        73%] [Cov:============================>      82%][Progress:======================>       75%] [Cov:============================>      82%][Progress:======================>       75%] [Cov:============================>      82%][Progress:======================>       76%] [Cov:============================>      82%][Progress:======================>       76%] [Cov:============================>      82%][Progress:=======================>      78%] [Cov:============================>      82%][Progress:=======================>      78%] [Cov:============================>      82%][Progress:========================>     80%] [Cov:============================>      82%][Progress:========================>     80%] [Cov:============================>      82%][Progress:========================>     81%] [Cov:============================>      82%][Progress:========================>     83%] [Cov:============================>      82%][Progress:========================>     83%] [Cov:=============================>     83%][Progress:========================>     83%] [Cov:=============================>     83%][Progress:=========================>    85%] [Cov:============================>      82%][Progress:=========================>    85%] [Cov:=============================>     83%][Progress:=========================>    86%] [Cov:============================>      82%][Progress:=========================>    86%] [Cov:=============================>     83%][Progress:=========================>    86%] [Cov:=============================>     83%][Progress:==========================>   88%] [Cov:============================>      82%][Progress:==========================>   88%] [Cov:=============================>     83%][Progress:===========================>  90%] [Cov:============================>      82%][Progress:===========================>  90%] [Cov:=============================>     83%][Progress:===========================>  91%] [Cov:=============================>     83%][Progress:===========================>  93%] [Cov:=============================>     83%][Progress:===========================>  93%] [Cov:=============================>     83%][Progress:============================> 95%] [Cov:============================>      82%][Progress:============================> 95%] [Cov:=============================>     83%][Progress:============================> 96%] [Cov:============================>      82%][Progress:============================> 96%] [Cov:=============================>     83%][Progress:============================> 96%] [Cov:=============================>     83%][Progress:=============================>98%] [Cov:=============================>     83%][Progress:=============================>98%] [Cov:=============================>     83%][Progress:==============================100%] [Cov:=============================>     83%][Progress:==============================100%] [Cov:=============================>     83%][Progress:==============================100%] [Cov:============================>      82%][Progress:==============================100%] [Cov:=============================>     83%][Progress:==============================100%] [Cov:=============================>     83%]
* Search finished after 61s and 21 generations, 15422 statements, best individual has fitness: 58.076190476190476
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 85%
* Total number of goals: 92
* Number of covered goals: 78
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 94%
* Total number of goals: 67
* Number of covered goals: 63
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 6
* Number of covered goals: 6
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 89%
* Total number of goals: 402
* Number of covered goals: 359
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 17%
* Total number of goals: 6
* Number of covered goals: 1
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 5
* Number of covered goals: 5
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 80%
* Total number of goals: 5
* Number of covered goals: 4
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 94%
* Total number of goals: 67
* Number of covered goals: 63
* Generated 17 tests with total length 123
* Resulting test suite's coverage: 82% (average coverage for all fitness functions)
* Compiling and checking tests
[MASTER] 14:22:45.540 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Java heap space
[MASTER] 14:22:45.541 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DifferentiableMultivariateVectorialOptimizer differentiableMultivariateVectorialOptimizer0 = mock(DifferentiableMultivariateVectorialOptimizer.class, new ViolatedAssumptionAnswer());
Well512a well512a0 = new Well512a();
UniformRandomGenerator uniformRandomGenerator0 = new UniformRandomGenerator(well512a0);
UncorrelatedRandomVectorGenerator uncorrelatedRandomVectorGenerator0 = new UncorrelatedRandomVectorGenerator(850, uniformRandomGenerator0);
MultiStartDifferentiableMultivariateVectorialOptimizer multiStartDifferentiableMultivariateVectorialOptimizer0 = new MultiStartDifferentiableMultivariateVectorialOptimizer(differentiableMultivariateVectorialOptimizer0, 2146665991, uncorrelatedRandomVectorGenerator0);
GaussianFitter gaussianFitter0 = new GaussianFitter(multiStartDifferentiableMultivariateVectorialOptimizer0);
double[] doubleArray0 = new double[0];
double[] doubleArray1 = gaussianFitter0.fit(doubleArray0);

* Writing JUnit test case 'GaussianFitter_ESTest' to evosuite-tests
* Done!

* Computation finished
