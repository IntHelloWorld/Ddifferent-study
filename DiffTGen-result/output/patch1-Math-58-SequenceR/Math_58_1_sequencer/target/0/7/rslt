* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.math.optimization.fitting.GaussianFitter
* Starting client
* Connecting to master process on port 4500
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/patch1-Math-58-SequenceR/Math_58_1_sequencer/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math.optimization.fitting.GaussianFitter
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 92
  - Branch 67
  - Exception 0
  - MutationFactory 402
  - Output 6
  - Method 5
  - MethodNoException 5
  - CBranchFitnessFactory 67
* Using seed 1585462630751
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%][Progress:=====>                        18%] [Cov:==>                                7%][Progress:=====>                        18%] [Cov:=====>                             15%][Progress:=====>                        18%] [Cov:=========>                         27%][Progress:=====>                        18%] [Cov:=============>                     38%][Progress:=====>                        18%] [Cov:================>                  47%][Progress:=====>                        18%] [Cov:==================>                54%][Progress:=====>                        18%] [Cov:====================>              59%][Progress:======>                       20%] [Cov:==>                                8%][Progress:======>                       20%] [Cov:=====>                             16%][Progress:======>                       20%] [Cov:==========>                        29%][Progress:======>                       20%] [Cov:==============>                    41%][Progress:======>                       20%] [Cov:=================>                 50%][Progress:======>                       20%] [Cov:===================>               56%][Progress:======>                       20%] [Cov:=====================>             62%][Progress:======>                       21%] [Cov:====>                              13%][Progress:======>                       21%] [Cov:======>                            18%][Progress:======>                       21%] [Cov:=======>                           20%][Progress:======>                       21%] [Cov:=========>                         27%][Progress:======>                       21%] [Cov:============>                      36%][Progress:======>                       21%] [Cov:===============>                   45%][Progress:======>                       21%] [Cov:==================>                52%][Progress:======>                       21%] [Cov:===================>               57%][Progress:======>                       21%] [Cov:=====================>             61%][Progress:======>                       23%] [Cov:==>                                8%][Progress:======>                       23%] [Cov:=====>                             15%][Progress:======>                       23%] [Cov:=========>                         28%][Progress:======>                       23%] [Cov:==============>                    40%][Progress:======>                       23%] [Cov:=================>                 49%][Progress:======>                       23%] [Cov:===================>               55%][Progress:======>                       23%] [Cov:=====================>             61%][Progress:=======>                      25%] [Cov:==>                                8%][Progress:=======>                      25%] [Cov:=====>                             16%][Progress:=======>                      25%] [Cov:==========>                        29%][Progress:=======>                      25%] [Cov:==============>                    40%][Progress:=======>                      25%] [Cov:=================>                 51%][Progress:=======>                      25%] [Cov:====================>              58%][Progress:=======>                      25%] [Cov:======================>            63%][Progress:=======>                      26%] [Cov:==>                                6%][Progress:=======>                      26%] [Cov:===>                               10%][Progress:=======>                      26%] [Cov:========>                          23%][Progress:=======>                      26%] [Cov:==========>                        29%][Progress:=======>                      26%] [Cov:=============>                     38%][Progress:=======>                      26%] [Cov:===============>                   44%][Progress:=======>                      26%] [Cov:================>                  47%][Progress:========>                     28%] [Cov:==>                                7%][Progress:========>                     28%] [Cov:=====>                             15%][Progress:========>                     28%] [Cov:=========>                         27%][Progress:========>                     28%] [Cov:=============>                     38%][Progress:========>                     28%] [Cov:=================>                 49%][Progress:========>                     28%] [Cov:===================>               56%][Progress:========>                     28%] [Cov:=====================>             61%][Progress:=========>                    30%] [Cov:==>                                8%][Progress:=========>                    30%] [Cov:=====>                             15%][Progress:=========>                    30%] [Cov:=========>                         27%][Progress:=========>                    30%] [Cov:=============>                     38%][Progress:=========>                    30%] [Cov:================>                  47%][Progress:=========>                    30%] [Cov:==================>                53%][Progress:=========>                    30%] [Cov:===================>               57%][Progress:=========>                    30%] [Cov:=====================>             62%][Progress:=========>                    31%] [Cov:==>                                8%][Progress:=========>                    31%] [Cov:=====>                             15%][Progress:=========>                    31%] [Cov:=========>                         28%][Progress:=========>                    31%] [Cov:=============>                     39%][Progress:=========>                    31%] [Cov:================>                  48%][Progress:=========>                    31%] [Cov:==================>                54%][Progress:=========>                    31%] [Cov:====================>              58%][Progress:=========>                    31%] [Cov:======================>            63%][Progress:=========>                    33%] [Cov:==>                                8%][Progress:=========>                    33%] [Cov:=====>                             15%][Progress:=========>                    33%] [Cov:=========>                         28%][Progress:=========>                    33%] [Cov:==============>                    40%][Progress:=========>                    33%] [Cov:================>                  48%][Progress:=========>                    33%] [Cov:===================>               55%][Progress:=========>                    33%] [Cov:=====================>             61%][Progress:==========>                   35%] [Cov:==>                                6%][Progress:==========>                   35%] [Cov:===>                               11%][Progress:==========>                   35%] [Cov:========>                          24%][Progress:==========>                   35%] [Cov:==========>                        31%][Progress:==========>                   35%] [Cov:=============>                     38%][Progress:==========>                   35%] [Cov:===============>                   45%][Progress:==========>                   35%] [Cov:=================>                 49%][Progress:==========>                   35%] [Cov:==================>                52%][Progress:==========>                   35%] [Cov:===================>               56%][Progress:==========>                   35%] [Cov:======================>            63%][Progress:==========>                   36%] [Cov:=====================>             60%][Progress:==========>                   36%] [Cov:=====================>             61%][Progress:==========>                   36%] [Cov:=====================>             62%][Progress:==========>                   36%] [Cov:======================>            63%][Progress:===========>                  38%] [Cov:====================>              58%][Progress:============>                 40%] [Cov:===============>                   43%][Progress:============>                 40%] [Cov:================>                  48%][Progress:============>                 40%] [Cov:=================>                 49%][Progress:============>                 40%] [Cov:=================>                 50%][Progress:============>                 40%] [Cov:==================>                54%][Progress:============>                 40%] [Cov:===================>               56%][Progress:============>                 40%] [Cov:===================>               57%][Progress:============>                 40%] [Cov:====================>              58%][Progress:============>                 40%] [Cov:====================>              59%][Progress:============>                 40%] [Cov:=====================>             60%][Progress:============>                 41%] [Cov:====================>              58%][Progress:============>                 41%] [Cov:=====================>             60%][Progress:============>                 41%] [Cov:======================>            65%][Progress:============>                 41%] [Cov:=======================>           66%][Progress:=============>                46%] [Cov:========>                          24%][Progress:=============>                46%] [Cov:========>                          25%][Progress:=============>                46%] [Cov:=========>                         26%][Progress:=============>                46%] [Cov:=========>                         28%][Progress:=============>                46%] [Cov:==========>                        29%][Progress:=============>                46%] [Cov:====================>              58%][Progress:=============>                46%] [Cov:=====================>             62%][Progress:=============>                46%] [Cov:======================>            63%][Progress:=============>                46%] [Cov:======================>            65%][Progress:=============>                46%] [Cov:=======================>           66%][Progress:=============>                46%] [Cov:=======================>           67%][Progress:==============>               48%] [Cov:===================>               55%][Progress:==============>               48%] [Cov:====================>              58%][Progress:==============>               48%] [Cov:=====================>             60%][Progress:==============>               48%] [Cov:=====================>             62%][Progress:==============>               48%] [Cov:======================>            64%][Progress:==============>               48%] [Cov:=======================>           66%][Progress:===============>              53%] [Cov:====================>              59%][Progress:===============>              53%] [Cov:=====================>             62%][Progress:================>             55%] [Cov:==========================>        76%][Progress:================>             56%] [Cov:==========================>        76%][Progress:================>             56%] [Cov:==========================>        77%][Progress:=================>            58%] [Cov:==========================>        75%][Progress:=================>            58%] [Cov:==========================>        77%][Progress:==================>           60%] [Cov:==========================>        75%][Progress:==================>           60%] [Cov:==========================>        77%][Progress:==================>           61%] [Cov:========================>          70%][Progress:==================>           61%] [Cov:==========================>        75%][Progress:==================>           61%] [Cov:==========================>        77%][Progress:==================>           63%] [Cov:==========================>        75%][Progress:==================>           63%] [Cov:==========================>        76%][Progress:==================>           63%] [Cov:==========================>        77%][Progress:==================>           63%] [Cov:==========================>        77%][Progress:===================>          65%] [Cov:==========================>        77%][Progress:===================>          65%] [Cov:==========================>        77%][Progress:===================>          66%] [Cov:==========================>        77%][Progress:===================>          66%] [Cov:==========================>        77%][Progress:====================>         68%] [Cov:==========================>        77%][Progress:====================>         68%] [Cov:==========================>        77%][Progress:=====================>        70%] [Cov:==========================>        77%][Progress:=====================>        71%] [Cov:==========================>        77%][Progress:=====================>        71%] [Cov:==========================>        77%][Progress:=====================>        71%] [Cov:===========================>       78%][Progress:=====================>        73%] [Cov:==========================>        77%][Progress:=====================>        73%] [Cov:===========================>       78%][Progress:======================>       75%] [Cov:==========================>        76%][Progress:======================>       75%] [Cov:==========================>        77%][Progress:======================>       75%] [Cov:===========================>       78%][Progress:======================>       76%] [Cov:===========================>       78%][Progress:======================>       76%] [Cov:===========================>       78%][Progress:=======================>      78%] [Cov:==========================>        77%][Progress:=======================>      78%] [Cov:===========================>       78%][Progress:========================>     80%] [Cov:==========================>        77%][Progress:========================>     80%] [Cov:===========================>       78%][Progress:========================>     81%] [Cov:===========================>       78%][Progress:========================>     83%] [Cov:==========================>        77%][Progress:========================>     83%] [Cov:===========================>       78%][Progress:=========================>    85%] [Cov:===========================>       78%][Progress:=========================>    85%] [Cov:===========================>       78%][Progress:=========================>    86%] [Cov:==========================>        77%][Progress:=========================>    86%] [Cov:===========================>       78%][Progress:=========================>    86%] [Cov:===========================>       78%][Progress:==========================>   88%] [Cov:===========================>       78%][Progress:==========================>   88%] [Cov:===========================>       78%][Progress:===========================>  90%] [Cov:===========================>       78%][Progress:===========================>  90%] [Cov:===========================>       78%][Progress:===========================>  91%] [Cov:===========================>       78%][Progress:===========================>  91%] [Cov:===========================>       78%][Progress:===========================>  91%] [Cov:===========================>       78%][Progress:===========================>  93%] [Cov:===========================>       78%][Progress:============================> 95%] [Cov:===========================>       78%][Progress:============================> 95%] [Cov:===========================>       78%][Progress:============================> 96%] [Cov:===========================>       78%][Progress:============================> 96%] [Cov:===========================>       78%][Progress:=============================>98%] [Cov:===========================>       78%][Progress:=============================>98%] [Cov:============================>      80%][Progress:=============================>98%] [Cov:============================>      82%][Progress:=============================>98%] [Cov:============================>      82%][Progress:==============================100%] [Cov:============================>      82%][Progress:==============================100%] [Cov:=============================>     83%][Progress:==============================100%] [Cov:=============================>     83%][Progress:==============================100%] [Cov:=============================>     83%][Progress:==============================100%] [Cov:============================>      82%][Progress:==============================100%] [Cov:=============================>     83%]
* Search finished after 61s and 23 generations, 15442 statements, best individual has fitness: 58.076190476190476
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 85%
* Total number of goals: 92
* Number of covered goals: 78
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 94%
* Total number of goals: 67
* Number of covered goals: 63
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 6
* Number of covered goals: 6
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 89%
* Total number of goals: 402
* Number of covered goals: 359
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 17%
* Total number of goals: 6
* Number of covered goals: 1
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 5
* Number of covered goals: 5
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 80%
* Total number of goals: 5
* Number of covered goals: 4
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 94%
* Total number of goals: 67
* Number of covered goals: 63
* Generated 17 tests with total length 117
* Resulting test suite's coverage: 82% (average coverage for all fitness functions)
* Compiling and checking tests
[MASTER] 14:18:55.962 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Java heap space
[MASTER] 14:18:55.962 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DifferentiableMultivariateVectorialOptimizer differentiableMultivariateVectorialOptimizer0 = mock(DifferentiableMultivariateVectorialOptimizer.class, new ViolatedAssumptionAnswer());
doReturn((VectorialPointValuePair) null).when(differentiableMultivariateVectorialOptimizer0).optimize(anyInt() , any(org.apache.commons.math.analysis.DifferentiableMultivariateVectorialFunction.class) , any(double[].class) , any(double[].class) , any(double[].class));
doReturn(0).when(differentiableMultivariateVectorialOptimizer0).getEvaluations();
UnitSphereRandomVectorGenerator unitSphereRandomVectorGenerator0 = new UnitSphereRandomVectorGenerator(2146253305);
MultiStartDifferentiableMultivariateVectorialOptimizer multiStartDifferentiableMultivariateVectorialOptimizer0 = new MultiStartDifferentiableMultivariateVectorialOptimizer(differentiableMultivariateVectorialOptimizer0, 193, unitSphereRandomVectorGenerator0);
GaussianFitter gaussianFitter0 = new GaussianFitter(multiStartDifferentiableMultivariateVectorialOptimizer0);
double[] doubleArray0 = new double[9];
double[] doubleArray1 = gaussianFitter0.fit(doubleArray0);

* Writing JUnit test case 'GaussianFitter_ESTest' to evosuite-tests
* Done!

* Computation finished
