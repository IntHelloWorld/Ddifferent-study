/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 28 16:28:26 GMT 2020
 */

package org.apache.commons.lang.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.Writer;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.NoSuchElementException;
import java.util.function.Predicate;
import org.apache.commons.lang.text.StrBuilder;
import org.apache.commons.lang.text.StrMatcher;
import org.apache.commons.lang.text.StrTokenizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StrBuilder_ESTest extends StrBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      strBuilder0.size = 0;
      int int0 = strBuilder0.indexOf(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("java.version", "Z[6DTlCW`)+");
      boolean boolean0 = strBuilder1.contains(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.reverse();
      int int1 = strBuilder0.lastIndexOf(strMatcher0);
      LinkedList<StrBuilder> linkedList0 = new LinkedList<StrBuilder>();
      StrBuilder strBuilder3 = strBuilder0.appendWithSeparators((Collection) linkedList0, "java.version");
      // Undeclared exception!
      try { 
        strBuilder3.insert(5, false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 5
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("+nd(!.Wxg");
      int int0 = strBuilder0.lastIndexOf("+nd(!.Wxg", 703);
      boolean boolean0 = strBuilder0.contains('r');
      String string0 = strBuilder0.getNullText();
      StrBuilder strBuilder1 = strBuilder0.append((Object) "+nd(!.Wxg");
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("DEyPq");
      int int1 = strBuilder0.indexOf(strMatcher0, (-1));
      int int2 = strBuilder0.capacity();
      // Undeclared exception!
      try { 
        strBuilder1.replace(strMatcher0, "DEyPq", 49, (-1685), 44);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.insert(0, 0);
      StrBuilder strBuilder2 = strBuilder1.append(0);
      StrBuilder strBuilder3 = strBuilder0.minimizeCapacity();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[4];
      charArray0[0] = 'H';
      strBuilder_StrBuilderReader0.mark(44);
      charArray0[1] = 'w';
      charArray0[2] = '';
      charArray0[3] = '&';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      int int0 = 116;
      StrBuilder strBuilder0 = new StrBuilder(116);
      StrBuilder strBuilder1 = strBuilder0.append((-1484.6817));
      char char0 = '.';
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('.');
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher((String) null);
      int int1 = strBuilder1.indexOf((StrMatcher) strMatcher_CharMatcher0, 116);
      StrMatcher strMatcher1 = StrMatcher.splitMatcher();
      String string0 = strBuilder1.toString();
      int int2 = strBuilder1.lastIndexOf(strMatcher1);
      // Undeclared exception!
      try { 
        strBuilder1.charAt(116);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 116
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      String string0 = "4.th%u;6";
      StrBuilder strBuilder0 = new StrBuilder("4.th%u;6");
      char[] charArray0 = new char[3];
      char[] charArray1 = strBuilder0.toCharArray(2, 2);
      charArray0[0] = '&';
      StrBuilder strBuilder1 = strBuilder0.append(39);
      charArray0[1] = 'p';
      charArray0[2] = 'R';
      char[] charArray2 = strBuilder0.getChars(charArray0);
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrBuilder strBuilder2 = new StrBuilder("4.th%u;6");
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder2, (-3528), (-3528));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(strBuilder0);
      StrBuilder strBuilder2 = strBuilder0.append('-');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      int int0 = strBuilder2.lastIndexOf(strMatcher0);
      StrBuilder strBuilder3 = strBuilder0.append("");
      int int1 = strBuilder3.indexOf(strMatcher0, (-1745));
      StrBuilder strBuilder4 = strBuilder2.deleteFirst('g');
      int int2 = 108;
      StrBuilder strBuilder5 = strBuilder2.append(108);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      // Undeclared exception!
      try { 
        strBuilder0.validateRange(1880, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2013);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setQuoteChar('{');
      StrTokenizer strTokenizer1 = strBuilder_StrBuilderTokenizer0.setDelimiterString("%,X&QR");
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      char[] charArray0 = new char[8];
      charArray0[0] = '{';
      charArray0[1] = '{';
      charArray0[2] = '{';
      charArray0[3] = '{';
      charArray0[4] = '{';
      charArray0[5] = '{';
      charArray0[6] = '{';
      charArray0[7] = '^';
      int int0 = strMatcher0.isMatch(charArray0, 2013, 2013, 2013);
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.append("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      int int1 = strBuilder0.size();
      StrBuilder strBuilder2 = strBuilder0.minimizeCapacity();
      int int2 = strBuilder1.validateRange(0, Integer.MAX_VALUE);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      char[] charArray0 = new char[6];
      charArray0[0] = '\'';
      charArray0[1] = '#';
      charArray0[2] = '2';
      charArray0[3] = 'a';
      charArray0[2] = 't';
      charArray0[5] = 'M';
      StrBuilder strBuilder1 = new StrBuilder("");
      String string0 = strBuilder1.midString((-1274), (-681));
      int int0 = strBuilder0.lastIndexOf('!');
      boolean boolean0 = strBuilder0.endsWith("");
      int int1 = strBuilder1.lastIndexOf("");
      StrBuilder strBuilder2 = strBuilder1.trim();
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder(0);
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1, 0, 0);
      int int0 = strBuilder2.lastIndexOf((StrMatcher) null, 0);
      StrBuilder strBuilder3 = strBuilder0.append(true);
      StrBuilder strBuilder4 = strBuilder0.insert(0, (char[]) null, (-1), 587);
      char char0 = strBuilder4.charAt(2);
      String string0 = "Windows";
      StrBuilder strBuilder5 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder5.new StrBuilderReader();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read((char[]) null, (-338), (-2439));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2013);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setQuoteChar('{');
      StrTokenizer strTokenizer1 = strBuilder_StrBuilderTokenizer0.setDelimiterString("%,X&QR");
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      char[] charArray0 = new char[8];
      charArray0[0] = '{';
      charArray0[1] = '{';
      charArray0[2] = '{';
      charArray0[3] = '{';
      charArray0[4] = '{';
      charArray0[5] = '{';
      charArray0[7] = '^';
      int int0 = strMatcher0.isMatch(charArray0, 2013, 2013, 2013);
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      int int1 = strBuilder0.size();
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder2 = strBuilder1.deleteFirst('!');
      // Undeclared exception!
      try { 
        strBuilder0.delete((-428), 2013);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -428
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(101);
      Object object0 = new Object();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(object0, 101, 'T');
      StrBuilder strBuilder2 = strBuilder1.deleteAll("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      int int0 = strBuilder0.capacity();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      int int1 = new Integer('T');
      StrBuilder strBuilder3 = strBuilder0.setNewLineText((String) null);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("%gSY>s|c=X");
      StrMatcher strMatcher1 = StrMatcher.charMatcher('T');
      StrBuilder strBuilder4 = strBuilder2.append('T');
      int int2 = strBuilder3.indexOf(strMatcher0, 117);
      // Undeclared exception!
      try { 
        strBuilder3.validateIndex(1057);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1057
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = new StrBuilder("zK|K");
      StrBuilder strBuilder2 = strBuilder0.append("zK|K", 0, 0);
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder1, 0, 0);
      StrBuilder strBuilder4 = strBuilder0.clear();
      StrTokenizer strTokenizer0 = strBuilder3.asTokenizer();
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      String string0 = "h.!Q F";
      StrBuilder strBuilder0 = new StrBuilder("h.!Q F");
      int int0 = 0;
      int int1 = 3431;
      char[] charArray0 = strBuilder0.toCharArray(0, 3431);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.append((CharSequence) "h.!Q F", 3431, 34);
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      Writer writer0 = strBuilder_StrBuilderWriter0.append('`');
      Writer writer1 = strBuilder_StrBuilderWriter0.append('\"');
      strBuilder_StrBuilderWriter0.write(2329);
      String string0 = strBuilder0.toString();
      String string1 = strBuilder0.rightString(2329);
      int int0 = strBuilder0.indexOf("`\"\u0919", (-428));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip((-2001L));
      strBuilder_StrBuilderReader0.reset();
      StrBuilder strBuilder1 = new StrBuilder((-3349));
      boolean boolean0 = strBuilder0.equals((Object) strBuilder1);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "";
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string1 = strBuilder_StrBuilderTokenizer0.toString();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "StrTokenizer[not tokenized yet]");
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, (-4149), (-4149));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("6(X");
      StrBuilder strBuilder1 = strBuilder0.reverse();
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("");
      StrBuilder strBuilder2 = strBuilder0.replaceAll(strMatcher0, "0ix[mN>Zi4|`.-Wo");
      StrBuilder strBuilder3 = strBuilder1.append(0.0);
      int int0 = 249;
      int int1 = 34;
      String string0 = strBuilder1.midString(249, 34);
      // Undeclared exception!
      try { 
        strBuilder1.append("6(X", 249, 249);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      char[] charArray0 = new char[8];
      charArray0[0] = 'e';
      charArray0[1] = 'M';
      charArray0[2] = '{';
      charArray0[3] = 'T';
      int int0 = 1118;
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(1118, 0, 'T');
      charArray0[4] = '{';
      charArray0[5] = '$';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("G5>;{DiFJ");
      StrMatcher strMatcher2 = StrMatcher.charMatcher('v');
      int int1 = strBuilder0.lastIndexOf(strMatcher0);
      charArray0[6] = 't';
      charArray0[7] = 'G';
      StrBuilder strBuilder2 = strBuilder0.append(charArray0);
      StrMatcher strMatcher3 = StrMatcher.charMatcher('J');
      StrBuilder strBuilder3 = new StrBuilder("length must be valid");
      StrBuilder strBuilder4 = strBuilder3.deleteAll(strMatcher2);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder3.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("length must be valid");
      StrBuilder strBuilder5 = strBuilder2.clear();
      // Undeclared exception!
      try { 
        strBuilder2.charAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append('6');
      StrBuilder strBuilder2 = strBuilder1.insert(0, 2553L);
      char[] charArray0 = new char[6];
      charArray0[0] = '6';
      charArray0[1] = '6';
      charArray0[2] = '6';
      charArray0[3] = '6';
      charArray0[4] = '6';
      charArray0[5] = '6';
      StrBuilder strBuilder3 = strBuilder2.append(charArray0);
      StrBuilder strBuilder4 = strBuilder0.append('j');
      boolean boolean0 = strBuilder2.isEmpty();
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1975));
      int int0 = strBuilder0.length();
      // Undeclared exception!
      try { 
        strBuilder0.substring(1367);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      String string0 = null;
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrBuilder strBuilder2 = strBuilder0.deleteFirst("Invalid offset: ");
      int int0 = (-3090);
      StrBuilder strBuilder3 = strBuilder0.append((-3090));
      Reader reader0 = strBuilder3.asReader();
      StrBuilder strBuilder4 = strBuilder2.replaceFirst((String) null, "Invalid offset: ");
      boolean boolean0 = strBuilder0.contains((String) null);
      char char0 = ' ';
      StrBuilder strBuilder5 = strBuilder4.appendFixedWidthPadLeft((Object) strBuilder0, (-3090), ' ');
      StrBuilder strBuilder6 = strBuilder5.appendNull();
      // Undeclared exception!
      try { 
        strBuilder6.appendFixedWidthPadRight((-3090), 1528, ' ');
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("7^p5jY<|ZlM>z");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((char[]) null);
      strBuilder_StrBuilderWriter0.close();
      StrBuilder strBuilder1 = strBuilder0.insert(5, (char[]) null, 5, 5);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip((-2621L));
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      char[] charArray0 = new char[8];
      charArray0[0] = 'n';
      charArray0[1] = 'q';
      charArray0[2] = 'm';
      charArray0[3] = 'W';
      charArray0[4] = '#';
      charArray0[5] = 'f';
      charArray0[6] = ' ';
      charArray0[7] = ',';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      int int1 = strBuilder0.indexOf(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.append((Object) "org.apache.commons.lang.text.StrBuilder");
      StrBuilder strBuilder2 = strBuilder0.setNewLineText("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      int int2 = strBuilder1.indexOf(strMatcher0);
      StrBuilder strBuilder3 = strBuilder0.insert(0, 'L');
      String string0 = null;
      // Undeclared exception!
      try { 
        strBuilder3.replace((-1), (-1), (String) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      int int0 = 1342;
      StrBuilder strBuilder0 = new StrBuilder(1342);
      StrBuilder strBuilder1 = new StrBuilder("RWuZlFII!#");
      StrBuilder strBuilder2 = strBuilder1.deleteAll("RWuZlFII!#");
      StrMatcher strMatcher0 = null;
      int int1 = strBuilder1.indexOf((StrMatcher) null, 1342);
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder1);
      // Undeclared exception!
      try { 
        strBuilder3.substring(1564);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[2];
      charArray0[0] = 'L';
      charArray0[1] = '8';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      String string0 = strBuilder0.leftString(1542);
      boolean boolean1 = strBuilder0.endsWith("");
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('t');
      StrBuilder strBuilder1 = strBuilder0.deleteFirst((StrMatcher) strMatcher_CharMatcher0);
      int int0 = 1519;
      // Undeclared exception!
      try { 
        strBuilder1.append(strBuilder0, 1519, 1542);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.setNullText("");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      char[] charArray0 = strBuilder0.toCharArray();
      int int0 = 2300;
      // Undeclared exception!
      try { 
        strBuilder0.insert(2300, charArray0, 784, 1156);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2300
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = new StringBuffer(0);
      stringBuffer0.setLength(0);
      StringBuffer stringBuffer1 = stringBuffer0.replace(0, 0, "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      int int0 = 1;
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0, 0, 1);
      StrBuilder strBuilder2 = strBuilder1.replace(0, 0, "");
      String string0 = "";
      StrBuilder strBuilder3 = new StrBuilder("");
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight((Object) strBuilder3, 1, '\'');
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("\"$M&T'sG");
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "_");
      StrBuilder strBuilder2 = strBuilder0.append((-1975.76));
      String string0 = strBuilder0.rightString((-1557));
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder2, 117, (-1557));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[5];
      char char0 = 'H';
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight(57, 57, 'H');
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      String string0 = "kG=^ :G@8GQ\"U<c[";
      StrBuilder strBuilder0 = new StrBuilder("kG=^ :G@8GQ\"U<c[");
      StrBuilder strBuilder1 = strBuilder0.deleteAll("kG=^ :G@8GQ\"U<c[");
      StrBuilder strBuilder2 = strBuilder1.appendNewLine();
      int int0 = (-826);
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt((-826));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -826
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      String string0 = "+f^o'#npP";
      StrBuilder strBuilder0 = new StrBuilder("+f^o'#npP");
      char[] charArray0 = new char[7];
      charArray0[0] = '1';
      charArray0[1] = '^';
      charArray0[2] = '^';
      charArray0[3] = 'o';
      charArray0[4] = 't';
      charArray0[5] = '>';
      charArray0[6] = '`';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 4, (-332));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: -332
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.lastIndexOf('A', 0);
      Reader reader0 = strBuilder0.asReader();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterMatcher(strMatcher0);
      char[] charArray0 = new char[5];
      charArray0[0] = 'A';
      charArray0[1] = 'A';
      charArray0[2] = 'A';
      charArray0[3] = 'A';
      charArray0[4] = 'A';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, (-4884), 32);
      // Undeclared exception!
      try { 
        strBuilder0.validateRange(993, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = 0;
      char char0 = 'h';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) "", 0, 'h');
      char char1 = 'x';
      StrBuilder strBuilder2 = strBuilder1.deleteFirst('x');
      // Undeclared exception!
      try { 
        strBuilder2.charAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = 0;
      char char0 = 'h';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) "", 0, 'h');
      // Undeclared exception!
      try { 
        strBuilder0.charAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.rightString(32);
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft((Object) "", 1583, 'P');
      StringBuffer stringBuffer0 = strBuilder2.toStringBuffer();
      String string1 = strBuilder0.rightString(0);
      StrBuilder strBuilder3 = strBuilder0.insert(44, true);
      StrBuilder strBuilder4 = strBuilder3.append(strBuilder0);
      StrBuilder strBuilder5 = strBuilder4.deleteFirst((String) null);
      StrBuilder strBuilder6 = strBuilder3.append(333L);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder3.new StrBuilderReader();
      boolean boolean1 = strBuilder_StrBuilderReader0.ready();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset();
      StrBuilder strBuilder7 = strBuilder2.appendWithSeparators((Iterator) strTokenizer0, "-$i");
      String string2 = strBuilder1.rightString(1583);
      boolean boolean2 = strBuilder3.equals((Object) "java.specification.name");
      char[] charArray0 = new char[7];
      charArray0[0] = 'P';
      charArray0[1] = 'P';
      charArray0[2] = 'P';
      charArray0[3] = 'P';
      charArray0[4] = 'P';
      charArray0[5] = 'G';
      charArray0[6] = '';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 1583, 1988);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1985);
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(0, 0, 'z');
      String string0 = null;
      // Undeclared exception!
      try { 
        strBuilder1.append(strBuilder0, 0, 1985);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[2];
      charArray0[0] = 'K';
      charArray0[1] = 't';
      StrBuilder strBuilder1 = strBuilder0.insert(0, charArray0, 0, 0);
      char[] charArray1 = new char[0];
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) charBuffer0);
      int int0 = 0;
      strBuilder_StrBuilderWriter0.write(charArray1, 0, 0);
      char[] charArray2 = new char[0];
      strBuilder_StrBuilderWriter0.write(charArray1);
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder2 = strBuilder0.trim();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray2, 32, 32);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setEmptyTokenAsNull(true);
      StrBuilder strBuilder1 = new StrBuilder(0);
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      StrBuilder strBuilder3 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "os.name");
      char[] charArray0 = new char[5];
      charArray0[0] = 'c';
      charArray0[1] = 'h';
      charArray0[2] = 'g';
      charArray0[3] = ',';
      charArray0[4] = '(';
      // Undeclared exception!
      try { 
        strBuilder3.insert(0, charArray0, 0, 39);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 39
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.lastIndexOf('v', (-2903));
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      StrBuilder strBuilder2 = strBuilder0.ensureCapacity((-2526));
      StrBuilder strBuilder3 = strBuilder2.trim();
      String string0 = strBuilder2.getNewLineText();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      StrTokenizer strTokenizer0 = strBuilder2.asTokenizer();
      strBuilder_StrBuilderReader0.mark((-1));
      strBuilder_StrBuilderReader0.reset();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      StrBuilder strBuilder4 = strBuilder3.deleteAll('$');
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('~');
      StrBuilder strBuilder2 = strBuilder0.appendNull();
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadLeft(0, 0, 'X');
      StrBuilder strBuilder4 = strBuilder3.appendNull();
      int int1 = strBuilder0.lastIndexOf('~');
      StrBuilder strBuilder5 = strBuilder2.insert(0, (double) (-1));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder4.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      String string0 = "P:#}>O}h0PCT\"6pa";
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("P:#}>O}h0PCT\"6pa", 48, (-1860));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrBuilder strBuilder2 = new StrBuilder("fbx5:+`yIcI>/!^$");
      StrBuilder strBuilder3 = strBuilder0.append((Object) strBuilder2);
      StrBuilder strBuilder4 = strBuilder2.setCharAt(9, 'L');
      StrBuilder strBuilder5 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder5.new StrBuilderTokenizer();
      char[] charArray0 = new char[8];
      charArray0[0] = 'L';
      charArray0[1] = 'L';
      charArray0[2] = 'L';
      charArray0[3] = 'L';
      charArray0[4] = 'L';
      charArray0[5] = 'L';
      charArray0[6] = 'L';
      charArray0[7] = 'L';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 0, 0);
      StrBuilder strBuilder6 = strBuilder2.minimizeCapacity();
      StrBuilder strBuilder7 = strBuilder5.appendNewLine();
      StrBuilder strBuilder8 = strBuilder0.minimizeCapacity();
      // Undeclared exception!
      try { 
        strBuilder7.append(charArray0, 0, 2546);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 2546
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      char[] charArray0 = new char[1];
      int int0 = (-316);
      char char0 = '}';
      StrBuilder strBuilder1 = strBuilder0.appendPadding((-316), '}');
      char[] charArray1 = new char[8];
      charArray1[0] = '}';
      charArray1[1] = '}';
      charArray1[2] = '}';
      int int1 = 0;
      // Undeclared exception!
      try { 
        strBuilder1.append(charArray0, (-316), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("");
      StrBuilder strBuilder2 = strBuilder0.replace((StrMatcher) null, "", 0, 32, 4);
      char[] charArray0 = new char[9];
      charArray0[0] = 'Q';
      charArray0[1] = 'c';
      charArray0[2] = 'A';
      charArray0[3] = 'T';
      charArray0[4] = 'z';
      charArray0[5] = 't';
      charArray0[6] = 'F';
      charArray0[7] = '*';
      charArray0[8] = '3';
      StrBuilder strBuilder3 = strBuilder2.append(charArray0, 4, 0);
      StrBuilder strBuilder4 = strBuilder0.deleteFirst("@9?36aQ=M\"0~UV-h6");
      // Undeclared exception!
      try { 
        strBuilder4.toCharArray(32, 4);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("T]V[[PpVn)L^*6");
      String string0 = strBuilder0.rightString(0);
      int int0 = strBuilder0.lastIndexOf('?');
      int int1 = strBuilder0.indexOf("5MDzTw^'oP:N!o{", (-1));
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      int int2 = strBuilder0.indexOf("org.apache.commons.lang.text.StrBuilder");
      StrBuilder strBuilder2 = strBuilder1.append("5MDzTw^'oP:N!o{", 0, 0);
      String string1 = strBuilder1.toString();
      StringBuffer stringBuffer0 = new StringBuffer("");
      StrBuilder strBuilder3 = strBuilder2.append(stringBuffer0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      char[] charArray0 = new char[8];
      charArray0[0] = '?';
      charArray0[1] = '?';
      charArray0[2] = '?';
      charArray0[3] = 'P';
      charArray0[4] = '?';
      charArray0[5] = '?';
      charArray0[6] = '?';
      charArray0[7] = '?';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 0, (-1));
      StrBuilder strBuilder4 = strBuilder3.deleteCharAt(2);
      StrBuilder strBuilder5 = new StrBuilder(346);
      StrBuilder strBuilder6 = strBuilder4.append((Object) strBuilder5);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.getNewLineText();
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      String string1 = strBuilder0.midString(0, 1005);
      String string2 = strBuilder0.toString();
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      char[] charArray0 = new char[5];
      charArray0[0] = 'O';
      charArray0[1] = '!';
      charArray0[2] = 'o';
      charArray0[3] = 'l';
      charArray0[4] = 'V';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder1.insert(1005, (char[]) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1005
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[9];
      charArray0[0] = 'w';
      charArray0[1] = 'Z';
      strBuilder_StrBuilderWriter0.write(charArray0);
      charArray0[2] = 'L';
      charArray0[3] = 't';
      charArray0[4] = 'K';
      charArray0[5] = 'N';
      charArray0[6] = '\"';
      charArray0[7] = '2';
      charArray0[8] = 'E';
      StrBuilder strBuilder1 = new StrBuilder("");
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1, 0, 0);
      Writer writer0 = strBuilder_StrBuilderWriter0.append('u');
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, (-4000), (-4000));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -4000
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("3!Ez(wE-x`z");
      float float0 = 0.0F;
      StrBuilder strBuilder1 = strBuilder0.append(0.0F);
      char[] charArray0 = new char[5];
      charArray0[0] = '6';
      charArray0[1] = 'H';
      charArray0[2] = 'W';
      char char0 = 'G';
      charArray0[3] = 'G';
      charArray0[4] = 'l';
      StrBuilder strBuilder2 = strBuilder1.append(charArray0);
      int int0 = 0;
      StrBuilder strBuilder3 = strBuilder1.insert(0, 0);
      String string0 = strBuilder0.getNullText();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int1 = strBuilder_StrBuilderReader0.read(charArray0);
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      StrBuilder strBuilder4 = strBuilder0.deleteFirst("sFO@!Z2");
      StrBuilder strBuilder5 = strBuilder0.replace(0, 0, "sFO@!Z2");
      int int2 = (-2338);
      Integer integer0 = new Integer(0);
      // Undeclared exception!
      try { 
        strBuilder5.insert((-2338), (Object) integer0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2338
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("N^Z3A=T");
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance("N^Z3A=T");
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "N^Z3A=T");
      char[] charArray0 = new char[1];
      charArray0[0] = 'A';
      StrBuilder strBuilder2 = strBuilder1.append(charArray0);
      int int0 = strBuilder1.lastIndexOf('A');
      StrTokenizer strTokenizer1 = strBuilder1.asTokenizer();
      int int1 = 32;
      strBuilder1.size = 32;
      StrTokenizer strTokenizer2 = strBuilder1.asTokenizer();
      // Undeclared exception!
      try { 
        strBuilder2.toCharArray(35, 32);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = strBuilder0.lastIndexOf('v');
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      int int0 = (-1456);
      StrBuilder strBuilder0 = new StrBuilder((-1456));
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('J', '?');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      StrBuilder strBuilder2 = strBuilder0.appendNewLine();
      String string0 = strBuilder1.midString(3543, 2088);
      strBuilder_StrBuilderReader0.mark((-1456));
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      char[] charArray0 = new char[3];
      charArray0[0] = 'u';
      charArray0[1] = 'J';
      charArray0[2] = 'J';
      int int1 = strBuilder_StrBuilderReader0.read(charArray0);
      String string1 = "'#";
      StrBuilder strBuilder3 = strBuilder0.replaceFirst(strMatcher0, "'#");
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1456), "4z>n%Sc#");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1456
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      boolean boolean0 = strBuilder0.endsWith("$E&TX^d][");
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = strBuilder0.indexOf('<');
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 34;
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        strBuilder0.insert(34, object0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 34
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(0L);
      int int0 = strBuilder_StrBuilderReader0.read();
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 924;
      char char0 = 'G';
      StrBuilder strBuilder1 = strBuilder0.append(false);
      int int1 = 0;
      char[] charArray0 = new char[8];
      charArray0[0] = 'G';
      charArray0[1] = 'G';
      charArray0[2] = 'G';
      charArray0[3] = 'G';
      charArray0[4] = 'G';
      charArray0[5] = 'G';
      charArray0[6] = 'G';
      charArray0[7] = 'G';
      // Undeclared exception!
      try { 
        strBuilder1.getChars(0, 0, charArray0, 924);
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) null, "end < start");
      StrBuilder strBuilder2 = strBuilder1.append((-141L));
      String string0 = strBuilder0.getNewLineText();
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      String string0 = "|)[a";
      StrBuilder strBuilder0 = new StrBuilder("|)[a");
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      boolean boolean0 = strBuilder0.startsWith("]f+SzzpS|5W");
      StrBuilder strBuilder2 = strBuilder0.replaceAll("]f+SzzpS|5W", "end < start");
      int int0 = 1327;
      int int1 = (-1181);
      StrBuilder strBuilder3 = new StrBuilder((-1181));
      StrBuilder strBuilder4 = strBuilder3.append('`');
      char[] charArray0 = new char[8];
      charArray0[0] = '`';
      charArray0[1] = '`';
      charArray0[2] = '`';
      charArray0[3] = '`';
      charArray0[4] = '`';
      charArray0[5] = '`';
      charArray0[6] = '`';
      charArray0[7] = '`';
      // Undeclared exception!
      try { 
        strBuilder4.getChars((-1181), 1327, charArray0, 1327);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1181
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(5);
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("");
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      StrMatcher strMatcher2 = StrMatcher.charMatcher('i');
      StrBuilder strBuilder1 = new StrBuilder('\"');
      String string0 = strBuilder1.toString();
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      int int0 = new Integer(1);
      int int1 = strBuilder0.indexOf((StrMatcher) null);
      int int2 = strBuilder0.indexOf(strMatcher2);
      StrBuilder strBuilder2 = new StrBuilder(5);
      StrBuilder strBuilder3 = strBuilder2.deleteAll("");
      StrBuilder strBuilder4 = strBuilder0.append(strBuilder2);
      int int3 = strBuilder4.lastIndexOf("", 0);
      StrBuilder strBuilder5 = strBuilder3.ensureCapacity(1);
      int int4 = strBuilder5.hashCode();
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[1];
      charArray0[0] = '\'';
      StrBuilder strBuilder1 = strBuilder0.deleteAll("");
      strBuilder_StrBuilderWriter0.write(charArray0, 0, 0);
      strBuilder_StrBuilderWriter0.close();
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("P)@CL7_x");
      StrBuilder strBuilder1 = new StrBuilder("P)@CL7_x");
      StrBuilder strBuilder2 = strBuilder1.deleteFirst("_cm1Lag!aZ2J%NfL");
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder1);
      StrBuilder strBuilder4 = strBuilder3.clear();
      Writer writer0 = strBuilder3.asWriter();
      strBuilder0.size = (-2824);
      String string0 = strBuilder0.getNullText();
      StrMatcher strMatcher0 = StrMatcher.charMatcher('[');
      StrBuilder strBuilder5 = strBuilder1.deleteAll(strMatcher0);
      StrBuilder strBuilder6 = strBuilder1.replaceAll('u', 'r');
      char[] charArray0 = new char[4];
      charArray0[0] = 'r';
      charArray0[1] = 'u';
      charArray0[2] = '[';
      charArray0[3] = '[';
      int int0 = 0;
      // Undeclared exception!
      try { 
        strBuilder4.insert(1, charArray0, 1, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(101);
      Object object0 = new Object();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(object0, 101, 'T');
      int int0 = strBuilder0.capacity();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      int int1 = strBuilder1.length();
      StrBuilder strBuilder2 = strBuilder0.setNewLineText((String) null);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("%gSY>s|c=X");
      int int2 = strBuilder2.indexOf(strMatcher0, 117);
      // Undeclared exception!
      try { 
        strBuilder2.validateIndex(1037);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1037
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = 'G';
      StrBuilder strBuilder1 = strBuilder0.replaceAll('0', 'G');
      int int0 = strBuilder0.hashCode();
      String string0 = "";
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("");
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("");
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("");
      StrBuilder strBuilder2 = strBuilder0.replaceAll((StrMatcher) strMatcher_StringMatcher0, "");
      int int1 = 0;
      StringBuffer stringBuffer0 = new StringBuffer(0);
      int int2 = 610;
      int int3 = 1614;
      // Undeclared exception!
      try { 
        strBuilder2.append(stringBuffer0, 610, 1614);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setNullText("Ff$UH|~hQ!y");
      StrBuilder strBuilder2 = strBuilder0.replaceFirst('>', '>');
      StrBuilder strBuilder3 = strBuilder1.deleteAll('');
      // Undeclared exception!
      try { 
        strBuilder2.insert((-1), (-927L));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1));
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('.', '.');
      StrBuilder strBuilder2 = strBuilder0.ensureCapacity((-1));
      // Undeclared exception!
      try { 
        strBuilder0.append("239F;Z0]PpZ|o*fvp", (-1), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("PXe_xc'^'*AW");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip((-1L));
      long long1 = strBuilder_StrBuilderReader0.skip(107L);
      strBuilder_StrBuilderReader0.close();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("PXe_xc'^'*AW", "Invalid startIndex: ");
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((-363), (-363), 'V');
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-97);
      // Undeclared exception!
      try { 
        strBuilder0.setLength((-97));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -97
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1433));
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder2 = strBuilder0.trim();
      // Undeclared exception!
      try { 
        strBuilder2.setLength((-1433));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1433
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.insert(0, 1234);
      StrBuilder strBuilder2 = strBuilder0.append((String) null, 0, 0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      char[] charArray0 = new char[6];
      charArray0[0] = 'w';
      charArray0[1] = 'q';
      charArray0[2] = '`';
      charArray0[3] = 'T';
      charArray0[4] = ';';
      charArray0[5] = 'P';
      strBuilder_StrBuilderWriter0.write(charArray0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder();
      boolean boolean0 = strBuilder0.equals(strBuilder1);
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) strBuilder1;
      // Undeclared exception!
      try { 
        strBuilder0.replace(1495, 1495, "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-1097);
      // Undeclared exception!
      try { 
        strBuilder0.substring((-1097));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1097
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("cl");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      char[] charArray0 = new char[9];
      charArray0[0] = 'Z';
      charArray0[1] = 'k';
      charArray0[2] = 'h';
      charArray0[3] = 'q';
      charArray0[4] = 'F';
      charArray0[5] = '';
      charArray0[6] = '_';
      charArray0[7] = '6';
      charArray0[8] = '2';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 0, (-1531));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1));
      char[] charArray0 = new char[3];
      charArray0[0] = '|';
      charArray0[1] = '3';
      charArray0[2] = '.';
      strBuilder0.buffer = charArray0;
      int int0 = 1882;
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(1882);
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft((Object) strBuilder0, 31, '.');
      StrBuilder strBuilder3 = strBuilder1.append((double) 1882);
      char[] charArray1 = strBuilder0.toCharArray();
      Object object0 = new Object();
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadRight(object0, (-1), '|');
      Reader reader0 = strBuilder3.asReader();
      int int1 = strBuilder3.indexOf('|', 3886);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.tokenize(strBuilder0.buffer, 0, 3886);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((StrBuilder) null);
      StringBuffer stringBuffer0 = new StringBuffer(9);
      StrBuilder strBuilder2 = strBuilder1.append(stringBuffer0);
      StrBuilder strBuilder3 = strBuilder0.deleteFirst("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[4];
      charArray0[0] = 'B';
      charArray0[1] = 'i';
      charArray0[2] = '';
      charArray0[3] = '5';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 9, 9);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("c}a");
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher((String) null);
      char char0 = '';
      char[] charArray0 = new char[6];
      charArray0[0] = '';
      charArray0[1] = '';
      charArray0[2] = '';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher((String) null);
      charArray0[3] = '';
      charArray0[4] = '';
      charArray0[5] = '';
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder1 = strBuilder0.insert(0, charArray0);
      StrMatcher strMatcher2 = StrMatcher.charMatcher('');
      int int0 = 2248;
      StrBuilder strBuilder2 = strBuilder1.appendNull();
      // Undeclared exception!
      try { 
        strBuilder2.validateIndex((-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      int int0 = 0;
      String string1 = strBuilder_StrBuilderTokenizer0.nextToken();
      int int1 = (-4282);
      StrBuilder strBuilder1 = new StrBuilder((-4282));
      char[] charArray0 = new char[7];
      charArray0[0] = 'l';
      charArray0[1] = ',';
      charArray0[2] = '[';
      charArray0[3] = 'f';
      charArray0[4] = 'L';
      charArray0[5] = 'v';
      charArray0[6] = ' ';
      StrBuilder strBuilder2 = strBuilder0.append(charArray0);
      char char0 = 'O';
      // Undeclared exception!
      try { 
        strBuilder1.appendFixedWidthPadRight((Object) "", 1344, 'O');
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.insert(614, (-702.623083));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 614
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[3];
      charArray0[0] = '';
      charArray0[1] = '$';
      charArray0[2] = '/';
      StrBuilder strBuilder1 = strBuilder0.insert(0, charArray0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrMatcher");
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('J');
      int int0 = strBuilder0.indexOf(strMatcher0);
      String string0 = strBuilder0.leftString(0);
      int int1 = strBuilder0.size();
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceAll((StrMatcher) strMatcher_NoMatcher0, "");
      StrBuilder strBuilder2 = strBuilder1.minimizeCapacity();
      StrBuilder strBuilder3 = strBuilder0.appendPadding(39, 'J');
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2188);
      StrBuilder strBuilder1 = strBuilder0.appendPadding(0, '@');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      int int0 = (-1);
      StrBuilder strBuilder0 = new StrBuilder((-1));
      // Undeclared exception!
      try { 
        strBuilder0.insert(800, (double) (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 800
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("p,");
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0, (-1));
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("s,tcVO}wD.");
      String string0 = strBuilder0.toString();
      StrBuilder strBuilder1 = new StrBuilder(0);
      StrBuilder strBuilder2 = strBuilder1.ensureCapacity(961);
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder1);
      int int0 = strBuilder0.lastIndexOf("s,tcVO}wD.", (-2501));
      StrBuilder strBuilder4 = strBuilder0.append((float) (-1));
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("=?!}J%Q+P^S_");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("=?!}J%Q+P^S_", "=?!}J%Q+P^S_");
      StringBuffer stringBuffer0 = new StringBuffer();
      StringBuffer stringBuffer1 = stringBuffer0.insert(0, (long) 0);
      StrBuilder strBuilder2 = strBuilder1.append(stringBuffer0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      boolean boolean0 = linkedList0.add("=?!}J%Q+P^S_");
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators((Collection) linkedList0, "i^e33nn19");
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1125), false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1125
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("", "");
      int int0 = strBuilder1.validateRange(0, 0);
      Object object0 = new Object();
      StrBuilder strBuilder2 = strBuilder0.append(object0);
      StrBuilder strBuilder3 = strBuilder2.insert(4, '+');
      StrBuilder strBuilder4 = strBuilder0.append("", 0, 0);
      boolean boolean0 = strBuilder0.equals((Object) "");
      strBuilder1.validateIndex(0);
      char[] charArray0 = new char[9];
      charArray0[0] = '+';
      charArray0[1] = '+';
      charArray0[2] = '+';
      charArray0[3] = '+';
      charArray0[4] = '+';
      charArray0[5] = '+';
      charArray0[6] = '+';
      charArray0[7] = '+';
      charArray0[8] = '+';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      int int1 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_CharSetMatcher0, (-3049));
      // Undeclared exception!
      try { 
        strBuilder3.insert((-1832), (float) (-1832));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1832
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      int int0 = 102;
      StrBuilder strBuilder0 = new StrBuilder(102);
      int int1 = 48;
      int int2 = 101;
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder1 = strBuilder0.append("JJ");
      StrBuilder strBuilder2 = strBuilder1.insert(0, (Object) "JJ");
      char char0 = 'N';
      StrBuilder strBuilder3 = strBuilder1.deleteAll('N');
      String string0 = "";
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("");
      StrMatcher strMatcher2 = StrMatcher.charMatcher('N');
      StrBuilder strBuilder4 = strBuilder1.replaceAll(strMatcher0, "JJ");
      char[] charArray0 = new char[1];
      charArray0[0] = 'N';
      // Undeclared exception!
      try { 
        strBuilder4.getChars(101, 457, charArray0, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 457
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("i<~pYa,#=`?_pl;");
      StrBuilder strBuilder1 = strBuilder0.trim();
      int int0 = 31;
      StrBuilder strBuilder2 = strBuilder0.append(0.0);
      char char0 = '\\';
      // Undeclared exception!
      try { 
        strBuilder1.setCharAt(31, '\\');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 31
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(48);
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      // Undeclared exception!
      try { 
        strBuilder0.replace(strMatcher0, (String) null, 48, (-291), 1031);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-477));
      int int0 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(0, '1');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-3812));
      StrBuilder strBuilder1 = strBuilder0.deleteAll("haJ$g(\"=Tt@[{#");
      StrBuilder strBuilder2 = strBuilder1.setNewLineText("n^fejoZjMBa$gWh<dW");
      StrBuilder strBuilder3 = strBuilder2.replaceFirst((String) null, "");
      StrBuilder strBuilder4 = strBuilder0.deleteFirst("', has a length less than 2");
      int int0 = strBuilder0.lastIndexOf("(2", (-3812));
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      int int0 = strBuilder1.indexOf(strMatcher0, 0);
      String string0 = strBuilder0.getNullText();
      int int1 = strBuilder0.lastIndexOf((StrMatcher) null);
      StrBuilder strBuilder2 = strBuilder0.append("1.1");
      StrBuilder strBuilder3 = strBuilder2.setNullText((String) null);
      // Undeclared exception!
      try { 
        strBuilder3.insert((-1), true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder strBuilder1 = strBuilder0.clear();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
      int int0 = strBuilder0.indexOf('&', 4);
      char[] charArray0 = strBuilder0.toCharArray();
      StrBuilder strBuilder3 = strBuilder0.append(3);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("hAHk");
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      Object[] objectArray0 = new Object[1];
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder strBuilder1 = strBuilder0.append(978);
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      objectArray0[0] = object0;
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators(objectArray0, "hAHk");
      StrBuilder strBuilder3 = strBuilder0.append((Object) strTokenizer0);
      char[] charArray0 = strBuilder0.toCharArray();
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("LINUX");
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrBuilder strBuilder2 = strBuilder0.replaceAll("P_ -A!5o-U:FyW3KM:", "P_ -A!5o-U:FyW3KM:");
      StrBuilder strBuilder3 = strBuilder2.append(strBuilder1);
      StrBuilder strBuilder4 = strBuilder2.appendFixedWidthPadLeft(0, 0, '+');
      strBuilder4.size = 0;
      String string0 = strBuilder2.toString();
      StrBuilder strBuilder5 = strBuilder2.setLength(929);
      Reader reader0 = strBuilder4.asReader();
      int int0 = strBuilder2.hashCode();
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = new StrBuilder((-1118));
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      // Undeclared exception!
      try { 
        strBuilder2.setCharAt((-478), ']');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -478
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-750));
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(0, (-508), '6');
      StrBuilder strBuilder2 = strBuilder0.append((float) (-750));
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2164);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      boolean boolean0 = linkedList0.removeLastOccurrence(strBuilder0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
      boolean boolean1 = strBuilder0.startsWith("");
      boolean boolean2 = strBuilder1.contains('9');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("", 114, 2164);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(0.0);
      Reader reader0 = strBuilder1.asReader();
      StrBuilder strBuilder2 = strBuilder1.deleteAll('T');
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      char[] charArray0 = new char[7];
      charArray0[0] = 'd';
      charArray0[1] = '#';
      charArray0[2] = '\\';
      charArray0[3] = '[';
      charArray0[4] = '?';
      charArray0[5] = 'm';
      charArray0[6] = 'Z';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      String string0 = strBuilder0.midString(0, 32);
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      String string1 = strBuilder0.midString(32, 2750);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = strBuilder0.midString(0, 0);
      int int0 = strBuilder0.indexOf((StrMatcher) null);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(0, 2049, '@');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid length: ");
      Writer writer0 = strBuilder0.asWriter();
      // Undeclared exception!
      try { 
        strBuilder0.charAt((-432));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -432
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      char[] charArray0 = new char[8];
      charArray0[0] = '*';
      charArray0[1] = '-';
      charArray0[2] = 'e';
      charArray0[3] = 'T';
      charArray0[4] = '\'';
      charArray0[5] = 's';
      charArray0[6] = ';';
      charArray0[7] = 'I';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0, 0, 0);
      // Undeclared exception!
      try { 
        strBuilder0.insert(1475, 0.0F);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1475
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-4665));
      char[] charArray0 = new char[6];
      charArray0[0] = 'J';
      charArray0[1] = 'V';
      charArray0[2] = 'l';
      charArray0[3] = 'x';
      charArray0[4] = ' ';
      charArray0[5] = '+';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0, 2, 2);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      char[] charArray0 = new char[3];
      charArray0[0] = 'c';
      charArray0[1] = 'O';
      String string0 = strBuilder0.midString((-1700), 117);
      charArray0[2] = '~';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.trim();
      Integer integer0 = new Integer(0);
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadLeft((Object) integer0, 0, '4');
      StrBuilder strBuilder4 = strBuilder3.deleteAll("LINUX");
      StrTokenizer strTokenizer0 = strBuilder1.asTokenizer();
      StrBuilder strBuilder5 = strBuilder0.append(strBuilder1);
      StrBuilder strBuilder6 = strBuilder1.insert(0, '2');
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder7 = strBuilder2.append(stringBuffer0, 0, 0);
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder2, 97, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      int int0 = (-316);
      StrBuilder strBuilder0 = new StrBuilder((-316));
      StrBuilder strBuilder1 = strBuilder0.deleteAll("java.class.path");
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Iterator) null, "");
      int int1 = strBuilder0.indexOf("");
      // Undeclared exception!
      try { 
        strBuilder2.deleteCharAt((-316));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -316
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3300);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[6];
      charArray0[0] = 'T';
      charArray0[1] = 'B';
      charArray0[2] = 'W';
      charArray0[3] = 'Q';
      charArray0[4] = 'h';
      charArray0[5] = 'r';
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance("Mac");
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("=y$|{(_B$ZNlh");
      StrTokenizer strTokenizer1 = strBuilder_StrBuilderTokenizer0.setDelimiterMatcher(strMatcher_CharSetMatcher0);
      StrMatcher strMatcher1 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      int int0 = strBuilder0.indexOf(strMatcher1, 3300);
      strBuilder0.size = 1;
      StrBuilder strBuilder1 = strBuilder0.insert(1, '\"');
      StrBuilder strBuilder2 = strBuilder0.append(true);
      StrBuilder strBuilder3 = strBuilder0.appendPadding((-1), 'Q');
      StrBuilder strBuilder4 = strBuilder1.ensureCapacity(6);
      char[] charArray1 = strBuilder4.toCharArray(0, 0);
      int int1 = strBuilder2.lastIndexOf(strMatcher1);
      boolean boolean0 = strBuilder4.contains("");
      StrBuilder strBuilder5 = strBuilder2.deleteAll(strMatcher1);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("140n&#D_f f");
      char[] charArray0 = new char[7];
      charArray0[0] = 'Q';
      charArray0[1] = '?';
      charArray0[2] = 'H';
      charArray0[3] = '{';
      charArray0[4] = 'l';
      charArray0[5] = '4';
      charArray0[6] = 'T';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(0, (-745), charArray0, 39);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -745
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      char[] charArray0 = new char[4];
      charArray0[0] = 'c';
      charArray0[1] = 's';
      charArray0[2] = ';';
      charArray0[3] = 'K';
      strBuilder0.getChars(0, 0, charArray0, 0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) null, (-1072), '#');
      int int0 = strBuilder0.size();
      int int1 = strBuilder1.indexOf("java.specification.name");
      StrBuilder strBuilder2 = strBuilder1.append(0L);
      char char0 = ',';
      int int2 = strBuilder0.lastIndexOf(',', 3340);
      // Undeclared exception!
      try { 
        strBuilder1.charAt((-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.toString();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "StrTokenizer[not tokenized yet]");
      StringBuffer stringBuffer1 = stringBuffer0.insert(0, (float) 0);
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0, 0, 0);
      StrBuilder strBuilder2 = strBuilder1.deleteFirst("|owc<,Tq@r");
      StrBuilder strBuilder3 = strBuilder2.append(')');
      StrBuilder strBuilder4 = strBuilder0.insert(0, 'k');
      StrBuilder strBuilder5 = strBuilder1.insert(0, false);
      boolean boolean0 = strBuilder4.equals((Object) "");
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = new StringBuffer(1000);
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 2271, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-530));
      Object object0 = new Object();
      StrBuilder strBuilder1 = strBuilder0.insert(0, object0);
      String string0 = "XbW]0";
      StrBuilder strBuilder2 = strBuilder1.replaceAll((String) null, "XbW]0");
      // Undeclared exception!
      try { 
        strBuilder2.replace((-3215), 0, "XbW]0");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3215
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance("");
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 539);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 2051;
      char char0 = 'S';
      // Undeclared exception!
      try { 
        strBuilder0.insert(2051, 'S');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2051
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder0.append("", 4637, 4637);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      String string0 = "ZQ5~'\\";
      StrBuilder strBuilder0 = new StrBuilder("ZQ5~'");
      StrBuilder strBuilder1 = strBuilder0.append(97);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = 787L;
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      int int0 = strBuilder_StrBuilderReader0.read(charBuffer0);
      Integer integer0 = new Integer((-778));
      boolean boolean0 = linkedList0.add(integer0);
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Collection) linkedList0, "ZQ5~'");
      StrBuilder strBuilder3 = strBuilder0.append(true);
      // Undeclared exception!
      try { 
        strBuilder3.toCharArray(97, 97);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-3309));
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder0.substring(117, (-608));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      int int0 = 2822;
      StrBuilder strBuilder0 = new StrBuilder(2822);
      StrBuilder strBuilder1 = new StrBuilder(3136);
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, 2822, (-1983));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[6];
      charArray0[0] = 'I';
      charArray0[1] = 'b';
      charArray0[2] = '5';
      charArray0[3] = '\\';
      charArray0[4] = 'd';
      charArray0[5] = 'O';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0, 0, 0);
      int int0 = strBuilder_StrBuilderReader0.read(charBuffer0);
      strBuilder_StrBuilderReader0.reset();
      int int1 = strBuilder_StrBuilderReader0.read();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      int int2 = strBuilder0.lastIndexOf("Q{W9pgBFZ4?tr%gV", 0);
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      int int3 = strBuilder0.lastIndexOf(strMatcher0);
      int int4 = strBuilder0.indexOf('2');
      int int5 = strBuilder0.length();
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[7];
      charArray0[0] = 'y';
      charArray0[1] = 'P';
      charArray0[2] = '@';
      charArray0[3] = '^';
      charArray0[4] = 'T';
      charArray0[5] = '9';
      charArray0[6] = '8';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = strBuilder_StrBuilderReader0.read(charBuffer0);
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(2);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
      // Undeclared exception!
      try { 
        strBuilder0.insert(32, false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("[({t*$OR");
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "[({t*$OR");
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder2 = strBuilder0.setLength(0);
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("[({t*$OR");
      StrMatcher strMatcher2 = StrMatcher.stringMatcher("");
      String string0 = "c8FY#,'^";
      StrBuilder strBuilder3 = strBuilder2.replaceFirst(strMatcher0, "c8FY#,'^");
      StrBuilder strBuilder4 = strBuilder0.append(0L);
      StrBuilder strBuilder5 = strBuilder2.insert(0, (Object) "org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      boolean boolean0 = strBuilder2.equals(strBuilder5);
      char[] charArray0 = new char[3];
      charArray0[0] = 'l';
      charArray0[1] = '@';
      charArray0[2] = 'z';
      StrBuilder strBuilder6 = strBuilder1.append(charArray0);
      // Undeclared exception!
      try { 
        strBuilder6.insert(1510, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1510
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(39);
      StrBuilder strBuilder1 = strBuilder0.deleteAll('#');
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      char[] charArray0 = new char[7];
      charArray0[0] = '#';
      charArray0[1] = '#';
      charArray0[2] = '#';
      charArray0[3] = '#';
      charArray0[4] = '#';
      charArray0[5] = '#';
      charArray0[6] = '1';
      int int0 = strMatcher0.isMatch(charArray0, 0, 97, 97);
      StrBuilder strBuilder2 = strBuilder1.replaceAll(strMatcher0, "?3p7T i#?x@|0nXDK");
      StrBuilder strBuilder3 = strBuilder1.insert(0, (Object) strBuilder0);
      StrBuilder strBuilder4 = strBuilder0.append('9');
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[2];
      charArray0[0] = '#';
      charArray0[1] = 'I';
      int int0 = 3;
      // Undeclared exception!
      try { 
        strBuilder0.insert(0, charArray0, 3, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: 3
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[9];
      charArray0[0] = 'O';
      charArray0[1] = 'V';
      charArray0[2] = 'E';
      charArray0[3] = 'U';
      charArray0[4] = 'r';
      charArray0[5] = 'q';
      charArray0[6] = 't';
      charArray0[7] = '>';
      charArray0[8] = ',';
      char[] charArray1 = strBuilder0.getChars(charArray0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(charArray1);
      strBuilder_StrBuilderWriter0.write(charArray1, 0, 0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.next();
      String string0 = strBuilder_StrBuilderTokenizer0.nextToken();
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) null);
      strBuilder_StrBuilderWriter0.write("OS/2", 0, 0);
      StrBuilder strBuilder1 = strBuilder0.append(0);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder0.indexOf(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      StrBuilder strBuilder2 = strBuilder1.clear();
      StrBuilder strBuilder3 = strBuilder1.deleteFirst('C');
      int int0 = 3420;
      Integer integer0 = new Integer(3420);
      boolean boolean0 = linkedList0.add(integer0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      char[] charArray0 = new char[5];
      charArray0[0] = 'C';
      charArray0[1] = 'C';
      charArray0[2] = 'C';
      charArray0[3] = 'C';
      charArray0[4] = 'C';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 3420, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrBuilder strBuilder1 = strBuilder0.clear();
      strBuilder_StrBuilderWriter0.write("X %2xk%V");
      String string0 = null;
      strBuilder_StrBuilderWriter0.write((String) null, (-458), (-458));
      StrBuilder strBuilder2 = strBuilder0.append("z)]gb&,Q/*a%cb:Fi");
      StringBuffer stringBuffer0 = strBuilder1.toStringBuffer();
      StrBuilder strBuilder3 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder3.new StrBuilderReader();
      char[] charArray0 = new char[5];
      charArray0[0] = 'k';
      charArray0[1] = 'i';
      charArray0[2] = 'Q';
      charArray0[3] = 'y';
      charArray0[4] = '@';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, (-458), (-458));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.replaceAll("user.name", "-Yh");
      StrBuilder strBuilder2 = strBuilder0.appendNull();
      StrBuilder strBuilder3 = strBuilder0.append((-4058.302));
      strBuilder1.validateIndex(0);
      StrBuilder strBuilder4 = strBuilder0.append('/');
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('/');
      int int0 = strBuilder1.lastIndexOf(strMatcher0);
      StrBuilder strBuilder5 = strBuilder1.append((long) (-1));
      StrBuilder strBuilder6 = strBuilder4.deleteAll(strMatcher0);
      boolean boolean0 = strBuilder1.contains(strMatcher1);
      boolean boolean1 = strBuilder4.contains('2');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder4.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.substring(0, 0);
      StrBuilder strBuilder1 = strBuilder0.append(0);
      StrBuilder strBuilder2 = strBuilder0.append(0L);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append("Or", 0, 0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher(';');
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("?_J");
      StrBuilder strBuilder2 = strBuilder0.deleteFirst((StrMatcher) strMatcher_CharMatcher0);
      StrBuilder strBuilder3 = strBuilder2.deleteFirst('j');
      int int0 = strBuilder1.lastIndexOf(strMatcher0, 5);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = "";
      // Undeclared exception!
      try { 
        strBuilder0.replace(0, (-1206), "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      int int0 = 4;
      StrBuilder strBuilder0 = new StrBuilder(4);
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(4);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 4
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2);
      String string0 = strBuilder0.getNullText();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoredMatcher(strMatcher_NoMatcher0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "org.apache.commons.lang.text.StrMatcher$CharMatcher");
      char[] charArray0 = new char[7];
      charArray0[0] = '~';
      charArray0[1] = 'a';
      charArray0[2] = 'p';
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      charArray0[3] = '5';
      charArray0[4] = 'i';
      charArray0[5] = '(';
      charArray0[6] = 'm';
      StrTokenizer strTokenizer1 = strBuilder_StrBuilderTokenizer0.reset(charArray0);
      // Undeclared exception!
      try { 
        strBuilder1.insert((-1297), "uZ\"9rC{9Q\"");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1297
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append("<M");
      int int0 = strBuilder1.lastIndexOf('%', 0);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      boolean boolean0 = strBuilder0.isEmpty();
      int int1 = strBuilder1.lastIndexOf("7");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrBuilder strBuilder2 = strBuilder0.appendNewLine();
      String[] stringArray0 = strBuilder_StrBuilderTokenizer0.getTokenArray();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.next();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(5);
      StrBuilder strBuilder1 = strBuilder0.setLength(5);
      String string0 = strBuilder1.midString((-2191), 5);
      StrBuilder strBuilder2 = strBuilder1.setLength(117);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      char[] charArray0 = new char[4];
      charArray0[0] = '/';
      charArray0[1] = '_';
      charArray0[2] = '[';
      charArray0[3] = '6';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 117, (-2191));
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("8k2k`gU):{[315UGp?");
      Reader reader0 = strBuilder0.asReader();
      String string0 = strBuilder0.rightString(640);
      String string1 = strBuilder0.toString();
      Reader reader1 = strBuilder0.asReader();
      String string2 = strBuilder0.getNullText();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('y', 'D');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("8k2k`gU):{[315UGp?");
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) strBuilder1;
      objectArray0[1] = (Object) "8k2k`gU):{[315UGp?";
      objectArray0[2] = (Object) strBuilder_StrBuilderWriter0;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      objectArray0[3] = object0;
      objectArray0[4] = (Object) reader0;
      objectArray0[5] = (Object) strBuilder0;
      objectArray0[6] = (Object) strBuilder1;
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators(objectArray0, "8k2k`gU):{[315UGp?");
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[4];
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) null, "D");
      charArray0[0] = '#';
      charArray0[1] = 'n';
      charArray0[2] = 's';
      charArray0[3] = 'K';
      strBuilder0.buffer = charArray0;
      StrBuilder strBuilder2 = strBuilder0.append(false);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(0L);
      strBuilder_StrBuilderReader0.reset();
      // Undeclared exception!
      try { 
        strBuilder1.delete((-103), (-1065));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -103
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.insert(0, (char[]) null);
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1, 0, 0);
      int int0 = strBuilder2.lastIndexOf((StrMatcher) null, 0);
      StrBuilder strBuilder3 = strBuilder0.append(true);
      StrBuilder strBuilder4 = strBuilder0.insert(0, (char[]) null, (-1), 587);
      StrBuilder strBuilder5 = new StrBuilder("Windows");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder5.new StrBuilderReader();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read((char[]) null, (-338), (-2439));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setNullText("(90");
      int int0 = strBuilder0.lastIndexOf((String) null, (-1794));
      boolean boolean0 = strBuilder0.contains("lQ2L[bdhd");
      boolean boolean1 = strBuilder0.contains('|');
      int int1 = strBuilder0.capacity();
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-3812));
      StrBuilder strBuilder1 = strBuilder0.deleteAll("haJ$g(\"=Tt@[{#");
      StrBuilder strBuilder2 = strBuilder1.setNewLineText("n^fejoZjMBa$gWh<dW");
      StrBuilder strBuilder3 = strBuilder0.deleteFirst("', has a length less than 2");
      int int0 = strBuilder0.lastIndexOf("(2", (-3812));
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "");
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      int int0 = (-4341);
      StrBuilder strBuilder0 = new StrBuilder((-4341));
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("3g(a?_*Fqq.", "3g(a?_*Fqq.");
      StrBuilder strBuilder2 = strBuilder0.deleteAll((StrMatcher) null);
      // Undeclared exception!
      try { 
        strBuilder2.insert((-4341), (-2263.481F));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -4341
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = null;
      StrBuilder strBuilder1 = strBuilder0.deleteFirst((StrMatcher) null);
      int int0 = 101;
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      // Undeclared exception!
      try { 
        strBuilder0.validateRange(101, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.replaceAll('5', '5');
      int int0 = 101;
      // Undeclared exception!
      try { 
        strBuilder1.insert(101, true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 101
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[6];
      charArray0[0] = 'c';
      charArray0[1] = 'X';
      charArray0[2] = '$';
      charArray0[3] = 'D';
      charArray0[4] = 'P';
      charArray0[5] = ';';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, (-418), (-418));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -418
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(13);
      int int0 = strBuilder0.lastIndexOf((String) null, 15);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteAll((StrMatcher) null);
      StrBuilder strBuilder2 = strBuilder1.replaceAll("", "");
      char[] charArray0 = new char[3];
      charArray0[0] = '9';
      charArray0[1] = 'S';
      charArray0[2] = 'E';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      boolean boolean0 = strBuilder2.contains((StrMatcher) strMatcher_CharSetMatcher0);
      boolean boolean1 = strBuilder1.contains((StrMatcher) null);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-3733));
      int int0 = strBuilder0.hashCode();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("");
      StrBuilder strBuilder2 = strBuilder1.replaceAll('K', 'K');
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.leftString(2547);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) null, "");
      char[] charArray0 = new char[7];
      charArray0[0] = 'I';
      charArray0[1] = 'w';
      charArray0[2] = '%';
      charArray0[3] = 'n';
      charArray0[4] = 'O';
      charArray0[5] = '*';
      charArray0[6] = '\"';
      char[] charArray1 = strBuilder1.getChars(charArray0);
      boolean boolean0 = strBuilder0.equals((Object) null);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(2547);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder0.setNewLineText((String) null);
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder1);
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[6];
      charArray0[0] = '\"';
      charArray0[1] = '?';
      charArray0[2] = 'I';
      charArray0[3] = '7';
      charArray0[4] = '`';
      charArray0[5] = '^';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 48, 48);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 48
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[1];
      charArray0[0] = '\'';
      strBuilder_StrBuilderWriter0.write(charArray0, 0, 0);
      strBuilder_StrBuilderWriter0.close();
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder(57);
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      boolean boolean0 = strBuilder1.contains("");
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-202));
      int int0 = strBuilder0.capacity();
      Writer writer0 = strBuilder0.asWriter();
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(471);
      StrMatcher strMatcher0 = StrMatcher.charMatcher('r');
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.appendNewLine();
      StrBuilder strBuilder3 = strBuilder1.appendNewLine();
      boolean boolean0 = strBuilder2.contains('>');
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-500));
      // Undeclared exception!
      try { 
        strBuilder0.insert((-500), (float) (-500));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -500
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("mPV8J,fZ0sP");
      StrBuilder strBuilder1 = strBuilder0.replaceAll('H', 'Z');
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.substring(0);
      StrBuilder strBuilder1 = strBuilder0.clear();
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) "";
      objectArray0[1] = (Object) "";
      objectArray0[2] = (Object) "";
      objectArray0[3] = (Object) "";
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators(objectArray0, "");
      StrBuilder strBuilder3 = strBuilder0.append((StringBuffer) null, 0, 0);
      String string1 = strBuilder1.leftString(223);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((-1386));
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadRight(0, 0, 'F');
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(")1IB8WHW");
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) ")1IB8WHW";
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) ")1IB8WHW";
      objectArray0[3] = (Object) strBuilder0;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "UlA`oJ72j||");
      String string0 = strBuilder0.leftString(117);
      int int0 = strBuilder0.indexOf('$', (-3211));
      Writer writer0 = strBuilder1.asWriter();
      int int1 = strBuilder1.length();
      String string1 = strBuilder0.rightString(0);
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("<w(}__Jo.JA6`k65IS9");
      String string0 = strBuilder0.leftString((-870));
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      char[] charArray0 = new char[4];
      charArray0[0] = 'k';
      charArray0[1] = 'V';
      charArray0[2] = '%';
      charArray0[3] = '7';
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance(charArray0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "");
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      String string0 = "4.th%u;6";
      StrBuilder strBuilder0 = new StrBuilder("4.th%u;6");
      char[] charArray0 = new char[3];
      charArray0[0] = '&';
      charArray0[1] = 'p';
      charArray0[2] = 'R';
      char[] charArray1 = strBuilder0.getChars(charArray0);
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrBuilder strBuilder1 = new StrBuilder("4.th%u;6");
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, (-3528), (-3528));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1683);
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder1 = strBuilder0.append((Object) null);
      char char0 = 'Q';
      int int0 = strBuilder1.lastIndexOf('Q', 1683);
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      int int1 = strBuilder0.lastIndexOf("J$GD", 3441);
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((Object) "J$GD", (-579), 'Q');
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder2);
      StrBuilder strBuilder4 = strBuilder3.appendNull();
      char char1 = 'j';
      int int2 = 0;
      // Undeclared exception!
      try { 
        strBuilder2.append("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer", (-1), 1683);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("<_$m15cl03/]kjcJ");
      StrBuilder strBuilder1 = strBuilder0.replace(0, 0, "q[?yXIoqfr)+ol`M");
      StrBuilder strBuilder2 = strBuilder0.appendNull();
      // Undeclared exception!
      try { 
        strBuilder2.validateRange(1208, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((-2802), (-2802), 'Y');
      StrBuilder strBuilder2 = strBuilder0.deleteAll('x');
      StrBuilder strBuilder3 = strBuilder0.append(1336L);
      StrBuilder strBuilder4 = strBuilder3.append((Object) strBuilder0);
      StrBuilder strBuilder5 = strBuilder0.replaceFirst(">N_nYyc Vp", ">N_nYyc Vp");
      StrBuilder strBuilder6 = strBuilder0.insert(0, 2168);
      Writer writer0 = strBuilder6.asWriter();
      StrBuilder strBuilder7 = strBuilder4.appendNewLine();
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) ">N_nYyc Vp";
      objectArray0[1] = (Object) strBuilder7;
      StrBuilder strBuilder8 = strBuilder3.appendWithSeparators(objectArray0, "startIndex must be valid");
      StrBuilder strBuilder9 = strBuilder7.appendFixedWidthPadLeft((-1592), 1610, 'Y');
      boolean boolean0 = strBuilder9.contains('1');
      StrBuilder strBuilder10 = new StrBuilder(">N_nYyc Vp");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder10.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      Reader reader0 = strBuilder0.asReader();
      int int0 = strBuilder0.hashCode();
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrBuilder strBuilder2 = strBuilder0.replaceAll("W1xB", "");
      StrBuilder strBuilder3 = strBuilder2.appendPadding(0, 'o');
      int int1 = strBuilder0.indexOf('u', 0);
      StrMatcher strMatcher1 = StrMatcher.tabMatcher();
      StrBuilder strBuilder4 = strBuilder0.deleteFirst(strMatcher1);
      StrBuilder strBuilder5 = strBuilder4.insert(0, true);
      StrBuilder strBuilder6 = strBuilder0.appendFixedWidthPadLeft(1396, (-3137), 'o');
      StrBuilder strBuilder7 = strBuilder3.append('.');
      StrBuilder strBuilder8 = strBuilder0.minimizeCapacity();
      // Undeclared exception!
      try { 
        strBuilder6.insert(1002, true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1002
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      String string0 = "V2N+,J=}jy3{sp3#h`X";
      StrBuilder strBuilder0 = new StrBuilder("V2N+,J=}jy3{sp3#h`X");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      char[] charArray0 = null;
      int int1 = 1;
      StrBuilder strBuilder1 = strBuilder0.insert(1, false);
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher((char[]) null);
      String string1 = null;
      StrBuilder strBuilder2 = strBuilder0.replaceFirst(strMatcher0, (String) null);
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray(86, 86);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      strBuilder0.size = 0;
      int int0 = strBuilder0.indexOf(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("java.version", "Z[6DTlCW`)+");
      boolean boolean0 = strBuilder1.contains(strMatcher0);
      int int1 = strBuilder0.lastIndexOf("+vt4N");
      StrBuilder strBuilder2 = strBuilder0.reverse();
      int int2 = strBuilder0.lastIndexOf(strMatcher0);
      LinkedList<StrBuilder> linkedList0 = new LinkedList<StrBuilder>();
      StrBuilder strBuilder3 = strBuilder0.appendWithSeparators((Collection) linkedList0, "java.version");
      boolean boolean1 = strBuilder2.equals((Object) "+vt4N");
      // Undeclared exception!
      try { 
        strBuilder3.insert(4, true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 4
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(979);
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      char[] charArray0 = new char[1];
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      boolean boolean0 = linkedList0.add((Object) strMatcher_NoMatcher0);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) strMatcher_NoMatcher0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.and(predicate0);
      Predicate<Object> predicate3 = predicate2.or(predicate1);
      boolean boolean1 = predicate0.test(predicate1);
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("~77{K*_kMu}zNWjaw7q");
      boolean boolean2 = linkedList0.removeIf(predicate3);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "NDkBAb_@Vb~]u");
      charArray0[0] = 'H';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder0.indexOf((StrMatcher) strMatcher_NoMatcher0);
      char char0 = '+';
      StrBuilder strBuilder2 = strBuilder0.setCharAt(39, '+');
      // Undeclared exception!
      try { 
        strBuilder2.append(strBuilder0, 102, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      int int0 = 4044;
      StrBuilder strBuilder0 = new StrBuilder(4044);
      StrBuilder strBuilder1 = strBuilder0.append(373L);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[4];
      char char0 = 'I';
      charArray0[0] = 'I';
      char char1 = '-';
      charArray0[1] = '-';
      charArray0[2] = 'D';
      charArray0[3] = 'T';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 4044, 4044);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "~qO=w(";
      StrBuilder strBuilder1 = strBuilder0.setNullText("~qO=w(");
      StrBuilder strBuilder2 = new StrBuilder(2);
      char char0 = '8';
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('8');
      StrBuilder strBuilder3 = strBuilder1.deleteAll((StrMatcher) strMatcher_CharMatcher0);
      int int0 = strBuilder1.indexOf((StrMatcher) strMatcher_CharMatcher0, 506);
      boolean boolean0 = strBuilder0.equals((Object) strBuilder2);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("~qO=w(");
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("~qO=w(", 2013, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[5];
      charArray0[0] = 'w';
      charArray0[1] = 'i';
      charArray0[2] = '[';
      String string0 = "fG{S\":5`3K:cJdV&";
      StrBuilder strBuilder1 = strBuilder0.insert(0, (long) (-1818));
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("fG{S\":5`3K:cJdV&");
      int int0 = strBuilder0.lastIndexOf(strMatcher0, (-1818));
      charArray0[3] = 'k';
      charArray0[4] = 'f';
      StrBuilder strBuilder2 = strBuilder0.append((Object) "fG{S\":5`3K:cJdV&");
      // Undeclared exception!
      try { 
        strBuilder0.getChars((-1818), (-1818), charArray0, 1069);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1818
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.replace(2835, 0, "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3731);
      Integer integer0 = new Integer(0);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) integer0, 1507, 'D');
      String string0 = strBuilder1.midString(1507, 1507);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[1];
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) strBuilder_StrBuilderWriter0;
      objectArray0[1] = (Object) integer0;
      objectArray0[2] = (Object) integer0;
      objectArray0[3] = (Object) strBuilder1;
      objectArray0[4] = (Object) strBuilder1;
      objectArray0[5] = (Object) "";
      objectArray0[6] = (Object) strBuilder_StrBuilderWriter0;
      objectArray0[7] = (Object) strBuilder0;
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators(objectArray0, "mF}ds`g>Qbcu\"|1JJ");
      charArray0[0] = 'D';
      StrBuilder strBuilder3 = strBuilder1.minimizeCapacity();
      strBuilder_StrBuilderWriter0.write(charArray0);
      int int0 = strBuilder1.indexOf('c');
      strBuilder1.size = 1507;
      // Undeclared exception!
      try { 
        strBuilder1.insert(0, charArray0, (-1551), 927);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: -1551
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }
}
