/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 31 14:24:03 GMT 2020
 */

package org.apache.commons.lang.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.Writer;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.NoSuchElementException;
import org.apache.commons.lang.text.StrBuilder;
import org.apache.commons.lang.text.StrMatcher;
import org.apache.commons.lang.text.StrTokenizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StrBuilder_ESTest extends StrBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("e_>2)LY24&-D,gLlD");
      StrBuilder strBuilder1 = strBuilder0.append(true);
      int int0 = strBuilder0.length();
      StrBuilder strBuilder2 = new StrBuilder();
      StrBuilder strBuilder3 = strBuilder1.append(0.0F);
      StrBuilder strBuilder4 = strBuilder3.deleteAll("e_>2)LY24&-D,gLlD");
      int int1 = strBuilder1.lastIndexOf("BneqM)#T,+", (-644));
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 9;
      strBuilder0.size = 9;
      // Undeclared exception!
      try { 
        strBuilder0.equalsIgnoreCase((StrBuilder) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      strBuilder0.size = 2;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('~');
      StrTokenizer strTokenizer1 = strBuilder_StrBuilderTokenizer0.setTrimmerMatcher(strMatcher0);
      char char0 = '6';
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight(object0, 2, '6');
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[2];
      char[] charArray1 = new char[8];
      charArray1[0] = ';';
      charArray1[1] = '>';
      charArray1[2] = ';';
      charArray1[3] = '0';
      charArray1[4] = 'x';
      charArray1[5] = '@';
      charArray1[6] = '/';
      charArray1[7] = '0';
      int int0 = strBuilder_StrBuilderReader0.read(charArray1);
      long long0 = strBuilder_StrBuilderReader0.skip((-1L));
      charArray0[0] = '2';
      charArray0[1] = 'd';
      strBuilder_StrBuilderReader0.reset();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 2959, 6221);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.indexOf('X', (-203));
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("j3y-s4`");
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      StrBuilder strBuilder2 = strBuilder0.deleteFirst("j3y-s4`");
      boolean boolean0 = strBuilder1.isEmpty();
      StrBuilder strBuilder3 = strBuilder1.replaceFirst("j3y-s4`", "j3y-s4`");
      char[] charArray0 = new char[7];
      charArray0[1] = '%';
      charArray0[2] = 'W';
      charArray0[3] = 'a';
      charArray0[4] = 'z';
      charArray0[5] = 'y';
      charArray0[6] = 'e';
      // Undeclared exception!
      try { 
        strBuilder3.insert(0, charArray0, 0, (int) 'e');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 101
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("!<");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[8];
      charArray0[0] = '';
      charArray0[1] = ':';
      charArray0[2] = 'W';
      charArray0[3] = '%';
      charArray0[4] = 'B';
      charArray0[5] = 'K';
      charArray0[6] = 'o';
      charArray0[7] = 'Q';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0, 4, 4);
      strBuilder_StrBuilderReader0.reset();
      StrBuilder strBuilder1 = strBuilder0.append(charArray0, 2, 0);
      StrBuilder strBuilder2 = strBuilder0.append((Object) strBuilder_StrBuilderReader0);
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("A rJ rdjiCOl~cy/+ON");
      StrMatcher strMatcher2 = StrMatcher.stringMatcher("");
      StrBuilder strBuilder3 = strBuilder1.replaceFirst(strMatcher0, "!<");
      Writer writer0 = strBuilder3.asWriter();
      StrBuilder strBuilder4 = strBuilder0.trim();
      int int1 = strBuilder4.lastIndexOf(":GOD2");
      // Undeclared exception!
      try { 
        strBuilder4.insert((-1666), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1666
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(0.0F);
      StrBuilder strBuilder2 = strBuilder1.replaceFirst("@3", "end < start");
      String string0 = strBuilder2.substring(0);
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadLeft(0, 102, ':');
      StrBuilder strBuilder4 = strBuilder2.setCharAt(0, '\"');
      StrBuilder strBuilder5 = strBuilder4.trim();
      StrBuilder strBuilder6 = strBuilder4.append("0.0");
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      int int0 = strBuilder4.lastIndexOf((StrMatcher) strMatcher_TrimMatcher0);
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("jG'ImfD=<");
      StrBuilder strBuilder7 = strBuilder0.replaceFirst((StrMatcher) strMatcher_TrimMatcher0, "");
      StrBuilder strBuilder8 = strBuilder2.delete(0, 4);
      String string1 = strBuilder2.substring(0);
      char[] charArray0 = strBuilder3.toCharArray();
      StringBuffer stringBuffer0 = strBuilder8.toStringBuffer();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder3.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      boolean boolean0 = strBuilder0.contains((StrMatcher) strMatcher_TrimMatcher0);
      StrBuilder strBuilder9 = strBuilder0.append((Object) strBuilder8);
      StrBuilder strBuilder10 = strBuilder3.setLength(0);
      strBuilder6.validateIndex(0);
      StrBuilder strBuilder11 = strBuilder5.setNullText("0.0");
      int int1 = strBuilder7.indexOf('e', 0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(57);
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = strBuilder0.getChars((char[]) null);
      StrBuilder strBuilder2 = strBuilder0.replaceFirst('C', 'v');
      char[] charArray1 = new char[6];
      charArray1[0] = 'C';
      charArray1[1] = 'C';
      charArray1[2] = 'v';
      charArray1[3] = 'C';
      charArray1[4] = 'C';
      charArray1[5] = '3';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray1);
      // Undeclared exception!
      try { 
        CharBuffer.wrap((CharSequence) charBuffer0, 12, 375);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("PN");
      char[] charArray0 = new char[4];
      charArray0[0] = 'O';
      charArray0[1] = 'p';
      charArray0[2] = 'U';
      charArray0[3] = '\"';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder0.indexOf(strMatcher0, 25);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Object[]) null, "/?V_-F^W.,FkO");
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append('T');
      String string0 = strBuilder1.rightString(2118);
      Writer writer0 = strBuilder0.asWriter();
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 673);
      StringBuffer stringBuffer0 = new StringBuffer(37);
      StrBuilder strBuilder2 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder3 = strBuilder0.replaceAll('', '');
      StrBuilder strBuilder4 = strBuilder0.append(0L);
      StrMatcher strMatcher1 = StrMatcher.spaceMatcher();
      StrBuilder strBuilder5 = strBuilder2.deleteAll(strMatcher1);
      StrBuilder strBuilder6 = strBuilder0.append(strBuilder5);
      StrBuilder strBuilder7 = strBuilder0.appendFixedWidthPadLeft(37, 37, 'C');
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.append(115);
      StrBuilder strBuilder2 = strBuilder0.append((StrBuilder) null, 2235, (-1));
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-862));
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) "", (-3740), '(');
      String string0 = strBuilder0.midString(0, (-2317));
      StrBuilder strBuilder2 = strBuilder0.deleteFirst("b^WLBytBRb");
      String string1 = strBuilder2.midString((-862), Integer.MAX_VALUE);
      int int0 = strBuilder1.lastIndexOf('I');
      StrBuilder strBuilder3 = strBuilder0.replaceAll('I', '(');
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) strBuilder3;
      objectArray0[1] = (Object) "b^WLBytBRb";
      objectArray0[2] = (Object) strBuilder0;
      StrBuilder strBuilder4 = new StrBuilder("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder4.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      objectArray0[3] = object0;
      objectArray0[4] = (Object) "";
      StrBuilder strBuilder5 = strBuilder0.appendWithSeparators(objectArray0, "");
      boolean boolean0 = strBuilder0.contains('I');
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Y_}t");
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrBuilder strBuilder2 = new StrBuilder("Y_}t");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      int int0 = strBuilder2.indexOf(strMatcher0);
      char char0 = 'r';
      StrBuilder strBuilder3 = strBuilder0.deleteAll('r');
      int int1 = (-1);
      String string0 = strBuilder3.leftString((-1));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer1 = strBuilder1.new StrBuilderTokenizer();
      boolean boolean0 = strBuilder_StrBuilderTokenizer1.hasPrevious();
      String string1 = strBuilder_StrBuilderTokenizer1.getContent();
      String string2 = strBuilder_StrBuilderTokenizer1.nextToken();
      int int2 = 623;
      int int3 = strBuilder1.lastIndexOf('r', 623);
      String string3 = strBuilder1.getNullText();
      boolean boolean1 = strBuilder3.contains("");
      StrBuilder strBuilder4 = strBuilder3.deleteAll('r');
      char[] charArray0 = new char[9];
      // Undeclared exception!
      try { 
        strBuilder0.insert((-3510), charArray0, 623, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3510
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(4);
      String string0 = strBuilder0.midString(4, 30);
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) "";
      objectArray0[2] = (Object) "";
      objectArray0[3] = (Object) strBuilder0;
      objectArray0[4] = (Object) strBuilder0;
      objectArray0[5] = (Object) "";
      objectArray0[6] = (Object) "";
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "");
      StrBuilder strBuilder2 = strBuilder1.setNewLineText("");
      StrBuilder strBuilder3 = strBuilder0.replaceFirst('8', 'C');
      String string1 = "";
      StrBuilder strBuilder4 = strBuilder0.deleteFirst("");
      StrBuilder strBuilder5 = strBuilder3.replaceAll('=', '8');
      StrBuilder strBuilder6 = strBuilder5.insert(30, (-1L));
      String string2 = strBuilder6.rightString(8);
      int int0 = strBuilder4.lastIndexOf("", (-2288));
      StrBuilder strBuilder7 = strBuilder4.appendNewLine();
      StrBuilder strBuilder8 = strBuilder1.deleteCharAt(8);
      StrBuilder strBuilder9 = strBuilder3.append((double) 4);
      StrBuilder strBuilder10 = strBuilder5.append(false);
      // Undeclared exception!
      try { 
        strBuilder4.validateRange((-2288), 8);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2288
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.insert(0, 625.65F);
      StrBuilder strBuilder2 = strBuilder1.clear();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("");
      StrBuilder strBuilder3 = strBuilder1.append((StringBuffer) null, 4, 0);
      int int1 = strBuilder2.lastIndexOf(strMatcher0);
      StrBuilder strBuilder4 = strBuilder1.append("");
      strBuilder0.size = 0;
      char char0 = '>';
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt((-1982), '>');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1982
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight((Object) null, 2697, '&');
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      char[] charArray0 = new char[8];
      charArray0[0] = 'a';
      charArray0[1] = '/';
      charArray0[2] = '/';
      charArray0[3] = 'f';
      charArray0[4] = 'M';
      charArray0[5] = '';
      charArray0[6] = ';';
      charArray0[7] = 'K';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 0, (-1655));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: -1655
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      String string0 = "$&\\<K=";
      StrBuilder strBuilder0 = new StrBuilder("$&<K=");
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      int int0 = (-846);
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, (-846), (-420));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      Writer writer0 = strBuilder_StrBuilderWriter0.append('t');
      int int0 = 0;
      strBuilder_StrBuilderWriter0.write("", 0, 0);
      strBuilder_StrBuilderWriter0.flush();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      String string1 = "&I\"/twS,ghJ4sQ8Y3Y";
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "&I\"/twS,ghJ4sQ8Y3Y");
      char[] charArray0 = new char[3];
      charArray0[0] = 't';
      charArray0[1] = 't';
      charArray0[2] = 't';
      StrBuilder strBuilder2 = strBuilder1.insert(0, charArray0);
      Integer integer0 = new Integer(0);
      StrBuilder strBuilder3 = strBuilder1.appendFixedWidthPadRight((Object) integer0, 0, 't');
      // Undeclared exception!
      try { 
        strBuilder0.setLength((-555));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -555
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[7];
      charArray0[0] = '\\';
      charArray0[1] = '&';
      charArray0[2] = 'W';
      charArray0[3] = '0';
      StrBuilder strBuilder1 = strBuilder0.insert(0, (double) 0);
      charArray0[4] = 'Q';
      charArray0[5] = 'p';
      charArray0[6] = 'K';
      StrBuilder strBuilder2 = strBuilder1.setLength(3);
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 0, 981);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 981
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(7);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrBuilder strBuilder2 = strBuilder1.deleteAll(strMatcher0);
      StrMatcher strMatcher1 = StrMatcher.noneMatcher();
      StrMatcher strMatcher2 = StrMatcher.charMatcher('$');
      StrMatcher strMatcher3 = StrMatcher.charMatcher('$');
      StrMatcher strMatcher4 = StrMatcher.charSetMatcher((char[]) null);
      boolean boolean0 = strBuilder0.contains(strMatcher1);
      boolean boolean1 = strBuilder1.contains(strMatcher0);
      StrMatcher strMatcher5 = StrMatcher.stringMatcher("4$~Rn93mJ$q");
      StrBuilder strBuilder3 = strBuilder1.appendFixedWidthPadRight((Object) strMatcher4, 387, '$');
      StrBuilder strBuilder4 = strBuilder1.minimizeCapacity();
      StrBuilder strBuilder5 = strBuilder0.deleteFirst("w+7R$");
      StrBuilder strBuilder6 = strBuilder5.insert(238, (double) 238);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("j3y-s4`");
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      StrBuilder strBuilder2 = strBuilder0.deleteFirst("j3y-s4`");
      boolean boolean0 = strBuilder1.isEmpty();
      StrBuilder strBuilder3 = strBuilder1.replaceFirst("j3y-s4`", "j3y-s4`");
      char[] charArray0 = new char[7];
      charArray0[0] = '-';
      charArray0[1] = '-';
      charArray0[2] = 'W';
      charArray0[3] = 'a';
      charArray0[4] = 'z';
      charArray0[5] = '}';
      charArray0[6] = 'e';
      // Undeclared exception!
      try { 
        strBuilder3.insert(0, charArray0, 0, (-2242));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: -2242
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      String string0 = "xBsQvm";
      StrBuilder strBuilder0 = new StrBuilder("xBsQvm");
      int int0 = 9;
      StrBuilder strBuilder1 = new StrBuilder(9);
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      int int1 = strBuilder0.lastIndexOf(strMatcher0, 9);
      StrBuilder strBuilder2 = strBuilder1.appendNewLine();
      StrBuilder strBuilder3 = strBuilder2.trim();
      StrMatcher strMatcher1 = StrMatcher.tabMatcher();
      StrBuilder strBuilder4 = strBuilder1.deleteFirst(strMatcher1);
      StrMatcher strMatcher2 = StrMatcher.charMatcher('7');
      StrBuilder strBuilder5 = strBuilder0.setNullText("");
      // Undeclared exception!
      try { 
        strBuilder2.insert((-1), "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.lastIndexOf('#', (-1));
      StringBuffer stringBuffer0 = new StringBuffer("");
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      boolean boolean0 = strBuilder0.contains("");
      String string0 = strBuilder0.substring(0);
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrMatcher strMatcher0 = StrMatcher.charMatcher('y');
      int int1 = strBuilder0.indexOf((StrMatcher) strMatcher_NoMatcher0, 97);
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) strBuilder1;
      objectArray0[1] = (Object) strMatcher_NoMatcher0;
      objectArray0[2] = (Object) "";
      objectArray0[3] = (Object) "";
      objectArray0[4] = (Object) stringBuffer0;
      objectArray0[5] = (Object) "";
      Object object0 = new Object();
      objectArray0[6] = object0;
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators(objectArray0, (String) null);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(";B");
      String string0 = strBuilder0.toString();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      strBuilder_StrBuilderReader0.mark(0);
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) ";B", 0, 0);
      int int0 = strBuilder_StrBuilderReader0.read(charBuffer0);
      strBuilder_StrBuilderReader0.reset();
      StrBuilder strBuilder2 = strBuilder0.setNewLineText(";B");
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrBuilder strBuilder3 = strBuilder2.deleteAll(strMatcher0);
      strBuilder_StrBuilderReader0.mark(0);
      strBuilder_StrBuilderReader0.reset();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      StrBuilder strBuilder4 = strBuilder0.append(strBuilder1);
      StrBuilder strBuilder5 = strBuilder4.append('$');
      StrBuilder strBuilder6 = strBuilder5.deleteFirst("kJO");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(0);
      strBuilder_StrBuilderWriter0.close();
      Reader reader0 = strBuilder6.asReader();
      String string1 = strBuilder1.toString();
      StrBuilder strBuilder7 = strBuilder4.replaceAll('t', '$');
      strBuilder_StrBuilderWriter0.write(2);
      boolean boolean1 = strBuilder4.equalsIgnoreCase(strBuilder5);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.charMatcher('M');
      char[] charArray0 = new char[5];
      charArray0[0] = 'M';
      charArray0[1] = 'M';
      charArray0[2] = 'M';
      charArray0[3] = 'M';
      charArray0[4] = 'M';
      String string0 = "3`E!SCD~s";
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("3`E!SCD~s");
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher("java.vm.name");
      StrMatcher strMatcher3 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder0.indexOf(strMatcher0);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(0, '~');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(57);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = strBuilder0.getChars((char[]) null);
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('C', 'v');
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1069);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("Tk{<H,[Y,1");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "Tk{<H,[Y,1");
      StrBuilder strBuilder2 = strBuilder0.append(0.0);
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher((char[]) null);
      StrBuilder strBuilder3 = strBuilder2.append(1069);
      StrBuilder strBuilder4 = strBuilder3.append((char[]) null);
      StrBuilder strBuilder5 = strBuilder2.replaceAll(strMatcher0, "V=P.$3e");
      int int0 = strBuilder5.indexOf(strMatcher1);
      StrBuilder strBuilder6 = strBuilder2.append(0);
      int int1 = strBuilder3.lastIndexOf("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      StrBuilder strBuilder7 = strBuilder6.append(strBuilder1);
      int int2 = strBuilder2.lastIndexOf("Tk{<H,[Y,1", 1452);
      char[] charArray0 = strBuilder7.getChars((char[]) null);
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = null;
      try {
        strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher((char[]) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrMatcher$CharSetMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder strBuilder1 = strBuilder0.insert(0, 1L);
      StrBuilder strBuilder2 = strBuilder0.append(0);
      StrBuilder strBuilder3 = strBuilder2.append(strBuilder0);
      strBuilder3.validateIndex(0);
      StrBuilder strBuilder4 = strBuilder1.append((double) 0);
      StrBuilder strBuilder5 = strBuilder0.replaceFirst("", "startIndex must be valid");
      char char0 = strBuilder5.charAt(0);
      StrBuilder strBuilder6 = strBuilder4.append(118.1345897891);
      String string0 = strBuilder6.substring(0, 0);
      StrBuilder strBuilder7 = strBuilder6.append(0L);
      int int0 = strBuilder1.lastIndexOf('*');
      String string1 = strBuilder0.substring(0);
      char[] charArray0 = new char[5];
      charArray0[0] = '*';
      charArray0[1] = '*';
      charArray0[2] = '*';
      charArray0[3] = '*';
      charArray0[4] = '*';
      // Undeclared exception!
      try { 
        strBuilder7.insert(31, charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 31
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-4592));
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) "g(hUvfM`T.D!z/p>Z", (-4592), '8');
      StrBuilder strBuilder2 = strBuilder1.insert(0, 0.0F);
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      String string0 = strBuilder1.rightString(0);
      char[] charArray0 = new char[6];
      charArray0[0] = '8';
      charArray0[1] = '8';
      charArray0[2] = '8';
      charArray0[3] = '8';
      charArray0[4] = '8';
      charArray0[5] = '8';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder2.lastIndexOf((StrMatcher) strMatcher_TrimMatcher0, 32);
      StrBuilder strBuilder3 = strBuilder0.replaceAll("g(hUvfM`T.D!z/p>Z", "g(hUvfM`T.D!z/p>Z");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) "");
      strBuilder_StrBuilderWriter0.write(0);
      char char0 = strBuilder0.charAt(0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<String> linkedList1 = new LinkedList<String>(linkedList0);
      boolean boolean0 = linkedList1.add("");
      StrBuilder strBuilder4 = strBuilder0.appendWithSeparators((Collection) linkedList1, "g(hUvfM`T.D!z/p>Z");
      String string1 = strBuilder1.midString(116, 4357);
      int int1 = strBuilder0.size();
      // Undeclared exception!
      try { 
        strBuilder0.replace(32, 0, "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-4022);
      char char0 = 'j';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((-4022), (-4022), 'j');
      int int1 = 3305;
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(3305);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3305
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      // Undeclared exception!
      try { 
        strBuilder0.charAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.capacity();
      // Undeclared exception!
      try { 
        strBuilder0.insert(32, 'T');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("LK4!Z");
      int int0 = strBuilder0.indexOf('e');
      StrBuilder strBuilder1 = strBuilder0.append(2337L);
      StrBuilder strBuilder2 = strBuilder0.append((float) (-1844));
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadLeft((-1844), 2870, '[');
      String string0 = strBuilder3.leftString((-2337));
      StrMatcher strMatcher0 = StrMatcher.charMatcher('e');
      StrMatcher strMatcher1 = StrMatcher.charMatcher('e');
      StrMatcher strMatcher2 = StrMatcher.charMatcher('[');
      StrMatcher strMatcher3 = StrMatcher.charMatcher('c');
      int int1 = strBuilder0.lastIndexOf(strMatcher0, 2870);
      char[] charArray0 = new char[4];
      charArray0[0] = '[';
      charArray0[1] = '[';
      charArray0[2] = 'e';
      charArray0[3] = 'e';
      StrBuilder strBuilder4 = strBuilder2.append(charArray0);
      StrBuilder strBuilder5 = strBuilder4.appendFixedWidthPadLeft(0, 0, 'e');
      int int2 = strBuilder3.indexOf('e', 2870);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder6 = strBuilder5.appendWithSeparators((Collection) linkedList0, "");
      StrBuilder strBuilder7 = strBuilder2.ensureCapacity(0);
      boolean boolean0 = strBuilder5.contains(strMatcher3);
      // Undeclared exception!
      try { 
        strBuilder2.append(charArray0, 5, 5);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 5
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "");
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder2 = strBuilder0.deleteFirst("Invalid length: ");
      strBuilder2.size = 3600;
      StrBuilder strBuilder3 = strBuilder1.appendWithSeparators((Collection) linkedList0, "");
      int int0 = 1;
      // Undeclared exception!
      try { 
        strBuilder3.insert(1, (Object) stringBuffer0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((-3465L));
      boolean boolean0 = strBuilder0.endsWith("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrBuilder strBuilder2 = strBuilder1.deleteFirst(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = "Xo$vI3keeha}e";
      StrBuilder strBuilder1 = strBuilder0.replaceAll("Xo$vI3keeha}e", "Xo$vI3keeha}e");
      char char0 = '0';
      StrBuilder strBuilder2 = strBuilder1.appendPadding(0, '0');
      char char1 = '-';
      StrBuilder strBuilder3 = strBuilder1.appendPadding((-2415), '-');
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder4 = new StrBuilder("user.dir");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder4.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      String string1 = ",5/";
      // Undeclared exception!
      try { 
        strBuilder3.replace((-2415), 117, ",5/");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2415
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setNullText("Zm__*VQ3K~p)H}/");
      StrBuilder strBuilder2 = strBuilder0.deleteAll((String) null);
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder3 = strBuilder2.append(stringBuffer0);
      StrBuilder strBuilder4 = strBuilder3.append(793.543331439);
      int int0 = strBuilder0.lastIndexOf("");
      StrBuilder strBuilder5 = strBuilder2.reverse();
      StrBuilder strBuilder6 = strBuilder2.replaceFirst((String) null, "");
      StrBuilder strBuilder7 = strBuilder6.append(false);
      StrBuilder strBuilder8 = strBuilder3.insert(12, 662L);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder8.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
      StrMatcher strMatcher0 = StrMatcher.charMatcher('(');
      StrBuilder strBuilder9 = strBuilder0.replaceAll(strMatcher0, "z5#x8(Qcs..28");
      StrBuilder strBuilder10 = new StrBuilder("Kzi@Q94cFSd");
      StrBuilder strBuilder11 = strBuilder4.append((Object) strBuilder10);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      String string0 = strBuilder0.leftString(0);
      char char0 = 'C';
      StrBuilder strBuilder1 = strBuilder0.append('C');
      StrBuilder strBuilder2 = strBuilder1.append('C');
      strBuilder2.size = 44;
      // Undeclared exception!
      try { 
        strBuilder1.trim();
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 43
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.append((long) 0);
      StrBuilder strBuilder2 = strBuilder1.insert(0, false);
      StrMatcher strMatcher0 = StrMatcher.charMatcher('>');
      int int0 = strBuilder2.indexOf(strMatcher0, 283);
      StrBuilder strBuilder3 = strBuilder2.append((-1));
      LinkedList<StrBuilder> linkedList0 = new LinkedList<StrBuilder>();
      String string0 = "*";
      StrBuilder strBuilder4 = strBuilder0.appendWithSeparators((Collection) linkedList0, "*");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrBuilder strBuilder5 = strBuilder0.append((Object) strBuilder1);
      int int1 = strBuilder_StrBuilderReader0.read();
      StrBuilder strBuilder6 = strBuilder1.deleteCharAt(0);
      StrBuilder strBuilder7 = strBuilder1.deleteFirst(",jhus>S%mB`jI!u");
      StrBuilder strBuilder8 = strBuilder1.appendPadding(102, '[');
      StrBuilder strBuilder9 = strBuilder2.deleteFirst('V');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(0);
      // Undeclared exception!
      try { 
        strBuilder4.deleteCharAt((-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(39);
      char[] charArray0 = new char[2];
      charArray0[0] = 'U';
      charArray0[1] = 'm';
      char[] charArray1 = strBuilder0.getChars(charArray0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Mu0>U*JoSg3-Cy@mT;");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("Mu0>U*JoSg3-Cy@mT;", "Mu0>U*JoSg3-Cy@mT;");
      char[] charArray0 = new char[9];
      charArray0[0] = 'v';
      charArray0[1] = '2';
      charArray0[2] = '!';
      charArray0[3] = 'o';
      charArray0[4] = '[';
      charArray0[5] = 'J';
      charArray0[6] = 'H';
      charArray0[7] = 'A';
      charArray0[8] = 'U';
      strBuilder0.buffer = charArray0;
      // Undeclared exception!
      try { 
        strBuilder0.replaceAll(strMatcher0, "Mu0>U*JoSg3-Cy@mT;");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(39);
      char[] charArray0 = new char[2];
      charArray0[0] = 'U';
      charArray0[1] = 'U';
      char[] charArray1 = strBuilder0.getChars(charArray0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder2 = strBuilder0.reverse();
      StrBuilder strBuilder3 = strBuilder2.deleteAll("s.zBz<UuMt?g7$U7");
      StrBuilder strBuilder4 = strBuilder0.trim();
      char[] charArray0 = new char[9];
      charArray0[0] = 'K';
      charArray0[1] = '@';
      charArray0[2] = 'K';
      charArray0[3] = '#';
      charArray0[4] = 'z';
      charArray0[5] = '&';
      charArray0[6] = '0';
      charArray0[7] = 'x';
      charArray0[8] = '#';
      StrBuilder strBuilder5 = strBuilder1.append(charArray0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      int int1 = (-2033);
      String string0 = strBuilder0.midString(0, (-2033));
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('J');
      String string1 = null;
      StrBuilder strBuilder2 = new StrBuilder((String) null);
      char[] charArray0 = new char[1];
      charArray0[0] = '?';
      int int2 = 0;
      // Undeclared exception!
      try { 
        strBuilder2.insert((-2033), charArray0, 0, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2033
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      String string0 = "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter";
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex((-2696));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2696
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 542;
      StrBuilder strBuilder1 = new StrBuilder(542);
      StrBuilder strBuilder2 = strBuilder0.replaceAll((String) null, ">\"Cx6v20-H4");
      StrBuilder strBuilder3 = strBuilder1.append(strBuilder2);
      StringBuffer stringBuffer0 = null;
      try {
        stringBuffer0 = new StringBuffer((String) null);
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("_zY}p'1d");
      char[] charArray0 = new char[4];
      charArray0[0] = '}';
      charArray0[1] = '[';
      charArray0[2] = 'r';
      charArray0[3] = '\"';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      int int0 = strBuilder0.indexOf((StrMatcher) strMatcher_CharSetMatcher0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("_zY}p'1d", 1427, 114);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      int int0 = 816;
      StrBuilder strBuilder0 = new StrBuilder(816);
      StrBuilder strBuilder1 = strBuilder0.append("7E>eMk['!{c");
      // Undeclared exception!
      try { 
        strBuilder1.validateRange(816, 816);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder strBuilder1 = strBuilder0.append("Caught a SecurityException reading the system property '");
      char[] charArray0 = new char[5];
      charArray0[0] = '-';
      charArray0[1] = '8';
      charArray0[2] = 'g';
      charArray0[3] = '-';
      charArray0[4] = '>';
      strBuilder1.getChars(0, 0, charArray0, 0);
      String string0 = strBuilder0.rightString(0);
      String string1 = strBuilder0.leftString(0);
      StrBuilder strBuilder2 = strBuilder1.clear();
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.indexOf('=', 32);
      StrBuilder strBuilder1 = strBuilder0.append((StrBuilder) null, 32, 32);
      int int1 = strBuilder0.lastIndexOf('v', 97);
      StrBuilder strBuilder2 = strBuilder0.append((long) (-1));
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadLeft(97, 32, '!');
      // Undeclared exception!
      try { 
        strBuilder3.substring((-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      LinkedList<StrBuilder> linkedList0 = new LinkedList<StrBuilder>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, (String) null);
      int int0 = strBuilder0.lastIndexOf('`', 114);
      // Undeclared exception!
      try { 
        strBuilder1.charAt(114);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 114
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip((-1L));
      StrBuilder strBuilder1 = strBuilder0.append((Object) strBuilder_StrBuilderReader0);
      int int0 = 38;
      strBuilder_StrBuilderReader0.mark(38);
      StrBuilder strBuilder2 = new StrBuilder("0Dbd`lg}6.nXwN336j.");
      int int1 = 2;
      StrBuilder strBuilder3 = strBuilder2.insert(2, (char[]) null);
      StrBuilder strBuilder4 = strBuilder0.append((Object) strBuilder2);
      StrBuilder strBuilder5 = strBuilder4.append(116);
      int int2 = (-2925);
      char[] charArray0 = strBuilder4.toCharArray(38, 116);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-2925), (float) (-1L));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2925
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.appendPadding(3, 'O');
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      char[] charArray0 = new char[9];
      charArray0[0] = 'O';
      charArray0[1] = 'O';
      charArray0[2] = 'O';
      charArray0[3] = 'O';
      charArray0[4] = 'O';
      charArray0[5] = 'O';
      charArray0[6] = 'O';
      charArray0[7] = 'O';
      charArray0[8] = 'O';
      strBuilder0.buffer = charArray0;
      strBuilder1.buffer = strBuilder0.buffer;
      int int0 = strBuilder0.length();
      StrBuilder strBuilder2 = strBuilder1.insert(3, 3);
      StrBuilder strBuilder3 = strBuilder0.insert(3, (float) 3);
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('9');
      int int1 = strBuilder3.lastIndexOf((StrMatcher) strMatcher_CharMatcher0, 3);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder3.new StrBuilderReader();
      StrBuilder strBuilder4 = strBuilder2.replaceAll("", (String) null);
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      StrBuilder strBuilder5 = strBuilder1.append("");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
      boolean boolean1 = strBuilder1.equals(strBuilder2);
      StrBuilder strBuilder6 = strBuilder3.append((-1648.8376501043));
      int int2 = strBuilder6.lastIndexOf((String) null, (-1));
      Writer writer0 = strBuilder2.asWriter();
      StrBuilder strBuilder7 = strBuilder4.insert(3, (long) 3);
      strBuilder_StrBuilderReader0.mark((-1));
      StrBuilder strBuilder8 = strBuilder6.setLength(0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteAll((String) null);
      StrBuilder strBuilder2 = strBuilder0.trim();
      boolean boolean0 = strBuilder2.equals((Object) null);
      int int0 = strBuilder2.indexOf('Z');
      StrBuilder strBuilder3 = new StrBuilder((-1));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder3.new StrBuilderWriter();
      StrBuilder strBuilder4 = strBuilder3.append(2280);
      StrBuilder strBuilder5 = strBuilder2.clear();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder5.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setTrimmerMatcher(strMatcher0);
      StrBuilder strBuilder6 = strBuilder5.appendWithSeparators((Iterator) strTokenizer0, (String) null);
      strBuilder_StrBuilderWriter0.write((char[]) null);
      strBuilder_StrBuilderWriter0.write(2280);
      StrBuilder strBuilder7 = strBuilder0.appendNull();
      int int1 = strBuilder0.length();
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Iterator<StrBuilder> iterator0 = null;
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(0, (-758), 'T');
      StrBuilder strBuilder2 = strBuilder1.ensureCapacity(975);
      // Undeclared exception!
      try { 
        strBuilder1.append("", 39, (-433));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("$5l^+ZWDWJSX@");
      StrBuilder strBuilder1 = strBuilder0.append((StrBuilder) null);
      StrBuilder strBuilder2 = strBuilder0.setNullText("itnnzv[SYA?RUO");
      StrBuilder strBuilder3 = strBuilder2.append(0L);
      StrBuilder strBuilder4 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder4.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(0);
      int int0 = strBuilder1.indexOf('$', 0);
      Writer writer0 = strBuilder4.asWriter();
      char[] charArray0 = new char[7];
      charArray0[0] = '$';
      charArray0[1] = '$';
      charArray0[2] = '$';
      charArray0[3] = '$';
      charArray0[4] = '$';
      charArray0[5] = '$';
      charArray0[6] = '$';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 57, 0);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(218);
      String string0 = strBuilder0.leftString((-1565));
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.delete(0, 0);
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft(0, 0, '(');
      int int1 = strBuilder1.lastIndexOf("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter", 0);
      StrBuilder strBuilder3 = strBuilder0.replaceFirst("G}#Nap", "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      // Undeclared exception!
      try { 
        strBuilder3.insert(3104, (float) 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3104
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("{v");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('*');
      StrBuilder strBuilder2 = strBuilder1.clear();
      Object[] objectArray0 = new Object[0];
      StrBuilder strBuilder3 = strBuilder1.appendWithSeparators(objectArray0, "{v");
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      // Undeclared exception!
      try { 
        strBuilder0.substring((-3422));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3422
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("amW_smGzQ@y`5bgwqs]");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      String string0 = "";
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
      char char0 = '4';
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft(97, 48, '4');
      StrBuilder strBuilder3 = strBuilder0.insert(48, "amW_smGzQ@y`5bgwqs]");
      StrBuilder strBuilder4 = strBuilder0.append(true);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      // Undeclared exception!
      try { 
        strBuilder0.replace(strMatcher0, "add() is unsupported", 48, 5, 5);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("&yP.fr#@v}+U@#V[dMP");
      boolean boolean0 = strBuilder0.startsWith("&yP.fr#@v}+U@#V[dMP");
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("&yP.fr#@v}+U@#V[dMP");
      Object[] objectArray0 = new Object[7];
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      objectArray0[0] = object0;
      objectArray0[1] = (Object) "&yP.fr#@v}+U@#V[dMP";
      objectArray0[2] = (Object) "&yP.fr#@v}+U@#V[dMP";
      objectArray0[3] = (Object) strBuilder0;
      objectArray0[4] = (Object) strBuilder1;
      objectArray0[5] = (Object) strBuilder0;
      objectArray0[6] = (Object) strBuilder0;
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators(objectArray0, (String) null);
      char[] charArray0 = new char[6];
      charArray0[0] = 'L';
      String string0 = strBuilder0.midString(32, 32);
      charArray0[1] = '`';
      charArray0[2] = 'l';
      charArray0[3] = 'N';
      charArray0[4] = 'M';
      charArray0[5] = 'P';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, (-2156), 1238);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 1238
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[3];
      charArray0[0] = 'd';
      StrBuilder strBuilder1 = strBuilder0.append(1541L);
      charArray0[1] = 'f';
      charArray0[2] = 'O';
      char[] charArray1 = strBuilder0.getChars(charArray0);
      boolean boolean0 = strBuilder1.startsWith("org.apache.commons.lang.text.StrBuilder");
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2630));
      StrBuilder strBuilder1 = strBuilder0.deleteAll('U');
      StrBuilder strBuilder2 = strBuilder0.append(1260L);
      StrBuilder strBuilder3 = strBuilder2.append((-1.0F));
      StrBuilder strBuilder4 = strBuilder1.append(true);
      char[] charArray0 = new char[4];
      charArray0[0] = 'U';
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("Caught a SecurityException reading the system property '");
      int int0 = strBuilder4.indexOf(strMatcher0, 0);
      charArray0[1] = '(';
      charArray0[2] = 'U';
      charArray0[3] = 'U';
      StrBuilder strBuilder5 = strBuilder0.append(charArray0);
      StrTokenizer strTokenizer0 = strBuilder2.asTokenizer();
      StrBuilder strBuilder6 = strBuilder1.setLength(0);
      StrBuilder strBuilder7 = strBuilder6.appendPadding((-2630), 'G');
      // Undeclared exception!
      try { 
        strBuilder4.getChars(756, (-2528), charArray0, 756);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2528
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Reader reader0 = strBuilder0.asReader();
      char[] charArray0 = new char[4];
      charArray0[0] = 'B';
      charArray0[1] = 'M';
      charArray0[2] = 'p';
      charArray0[3] = '/';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("s81qzc]:\"[,Ij");
      StrBuilder strBuilder1 = strBuilder0.replaceAll((StrMatcher) strMatcher_CharSetMatcher0, "");
      boolean boolean0 = strBuilder0.contains((StrMatcher) strMatcher_CharSetMatcher0);
      boolean boolean1 = strBuilder0.equals(strBuilder1);
      int int0 = strBuilder1.size();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("s81qzc]:\"[,Ij");
      StrBuilder strBuilder2 = strBuilder1.insert(0, (float) 0);
      char[] charArray1 = new char[6];
      charArray1[0] = 'B';
      charArray1[1] = 'M';
      charArray1[2] = 'M';
      charArray1[3] = 'M';
      charArray1[4] = 'B';
      charArray1[5] = 'M';
      // Undeclared exception!
      try { 
        strBuilder0.insert(0, charArray1, (-1156), 4);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: -1156
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      String string0 = strBuilder0.toString();
      int int0 = (-353);
      String string1 = strBuilder0.midString((-353), (-353));
      char[] charArray0 = new char[8];
      charArray0[0] = 'U';
      charArray0[1] = 'h';
      charArray0[2] = 'V';
      charArray0[3] = 's';
      charArray0[4] = 'D';
      charArray0[5] = 'u';
      charArray0[6] = 'Z';
      charArray0[7] = 'i';
      // Undeclared exception!
      try { 
        strBuilder0.getChars((-353), 0, charArray0, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -353
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      int int0 = (-1566);
      StrBuilder strBuilder0 = new StrBuilder((-1566));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = null;
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoredMatcher((StrMatcher) null);
      StrTokenizer strTokenizer1 = strBuilder_StrBuilderTokenizer0.setQuoteChar('6');
      String[] stringArray0 = strBuilder_StrBuilderTokenizer0.getTokenArray();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer1, "os.name");
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder strBuilder2 = strBuilder0.appendNull();
      char[] charArray0 = new char[1];
      charArray0[0] = '6';
      // Undeclared exception!
      try { 
        strBuilder1.append(charArray0, 0, 1260);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 1260
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      int int0 = (-358);
      StrBuilder strBuilder0 = new StrBuilder((-358));
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      String string0 = strBuilder0.rightString((-358));
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      String string1 = strBuilder0.toString();
      int int1 = strBuilder0.lastIndexOf(strMatcher0);
      char[] charArray0 = new char[0];
      int int2 = 3442;
      StrBuilder strBuilder2 = strBuilder0.appendNull();
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1446), (-260));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1446
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      int int0 = 1395;
      StrBuilder strBuilder0 = new StrBuilder(1395);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("end < start");
      StrMatcher strMatcher1 = StrMatcher.charMatcher('*');
      int int1 = strBuilder0.indexOf(strMatcher0);
      char[] charArray0 = strBuilder0.toCharArray();
      StringBuffer stringBuffer0 = new StringBuffer("5~k]rmgZ;}w%`X[jt");
      char[] charArray1 = new char[5];
      charArray1[0] = '*';
      charArray1[1] = '*';
      charArray1[2] = '*';
      charArray1[3] = '*';
      charArray1[4] = '*';
      StringBuffer stringBuffer1 = stringBuffer0.append(charArray1);
      int int2 = (-76);
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, (-76), 1395);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      strBuilder_StrBuilderReader0.close();
      long long0 = strBuilder_StrBuilderReader0.skip(0);
      StringBuffer stringBuffer0 = new StringBuffer();
      int int1 = (-287);
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, (-287), (-287));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("V3HPaN");
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('*');
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 32);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, Integer.MAX_VALUE, Integer.MAX_VALUE);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-862));
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) "", (-3740), '(');
      String string0 = strBuilder0.midString(0, (-2317));
      StrBuilder strBuilder2 = strBuilder0.deleteFirst("b^WLBytBRb");
      String string1 = strBuilder2.midString((-862), Integer.MAX_VALUE);
      int int0 = strBuilder1.lastIndexOf('I');
      StrBuilder strBuilder3 = strBuilder0.replaceAll('I', '(');
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) strBuilder3;
      objectArray0[1] = (Object) "b^WLBytBRb";
      objectArray0[2] = (Object) strBuilder0;
      StrBuilder strBuilder4 = new StrBuilder((-3740));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder4.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      objectArray0[3] = object0;
      objectArray0[4] = (Object) "";
      StrBuilder strBuilder5 = strBuilder0.appendWithSeparators(objectArray0, "");
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      String string0 = "startIndex must be valid";
      StrBuilder strBuilder0 = new StrBuilder("startIndex must be valid");
      StrBuilder strBuilder1 = strBuilder0.append((-575L));
      StrBuilder strBuilder2 = strBuilder0.clear();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[3];
      StrBuilder strBuilder3 = strBuilder0.append((Object) strBuilder2);
      StrBuilder strBuilder4 = strBuilder3.deleteAll("CD'FgTukF~53{p7");
      // Undeclared exception!
      try { 
        strBuilder3.replace(3602, 3602, "startIndex must be valid");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      String string0 = strBuilder0.midString(0, 127);
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      StrBuilder strBuilder2 = strBuilder0.append(1761.2844F);
      StrBuilder strBuilder3 = strBuilder2.setNullText("");
      StrBuilder strBuilder4 = strBuilder1.append(0.0);
      StrBuilder strBuilder5 = strBuilder0.deleteAll('\"');
      // Undeclared exception!
      try { 
        strBuilder1.replace(127, 0, "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = 0;
      String string0 = strBuilder0.rightString(0);
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder1 = strBuilder0.append("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter", 0, 0);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1, 0, 0);
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      StrBuilder strBuilder3 = strBuilder0.replaceFirst((StrMatcher) strMatcher_TrimMatcher0, "N+PM[ov4NlM!");
      // Undeclared exception!
      try { 
        strBuilder0.insert(279, 'T');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 279
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(581);
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(581);
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      int int0 = strBuilder1.lastIndexOf(strMatcher0, 581);
      StrMatcher strMatcher1 = null;
      boolean boolean0 = strBuilder1.contains((StrMatcher) null);
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 581, 581);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("}R!f,xv-Uz");
      String string0 = "";
      StrBuilder strBuilder1 = strBuilder0.append("", 0, 0);
      int int0 = (-1208);
      // Undeclared exception!
      try { 
        strBuilder1.insert((-1208), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1208
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.insert(0, false);
      char char0 = strBuilder1.charAt(0);
      boolean boolean0 = strBuilder0.isEmpty();
      int int0 = (-966);
      String string0 = "Invalid offset: ";
      StrBuilder strBuilder2 = strBuilder0.setNewLineText("Invalid offset: ");
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("Invalid offset: ");
      int int1 = strBuilder0.indexOf(strMatcher0);
      StrBuilder strBuilder3 = strBuilder2.clear();
      StrBuilder strBuilder4 = strBuilder0.ensureCapacity((-966));
      StrBuilder strBuilder5 = strBuilder0.ensureCapacity((-966));
      String string1 = strBuilder5.rightString((-1));
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("Invalid offset: ");
      StrTokenizer strTokenizer0 = strBuilder4.asTokenizer();
      // Undeclared exception!
      try { 
        strBuilder0.insert((-966), "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -966
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 44;
      // Undeclared exception!
      try { 
        strBuilder0.charAt(44);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 44
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(32);
      StrBuilder strBuilder1 = strBuilder0.setLength(32);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[3];
      charArray0[0] = 't';
      charArray0[1] = 'Z';
      charArray0[2] = 'p';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0, 0, 2);
      int int1 = strBuilder_StrBuilderReader0.read();
      StrBuilder strBuilder2 = strBuilder0.setNullText("");
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.charAt(Integer.MAX_VALUE);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2147483647
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("JT>>@mm]&,dIXX&");
      StrBuilder strBuilder1 = strBuilder0.insert(0, (-1316.0));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      StrBuilder strBuilder2 = strBuilder1.append((-1510.14F));
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(", Length: ");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[4];
      charArray0[0] = '0';
      charArray0[1] = 't';
      charArray0[2] = 'b';
      charArray0[3] = 'a';
      strBuilder_StrBuilderWriter0.write(charArray0);
      strBuilder_StrBuilderWriter0.flush();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) ", Length: ", 0, 'z');
      StrBuilder strBuilder2 = strBuilder0.deleteFirst('p');
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      Reader reader0 = strBuilder0.asReader();
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, (String) null);
      char[] charArray0 = new char[9];
      charArray0[0] = '3';
      charArray0[1] = 'D';
      charArray0[2] = 'q';
      charArray0[3] = '`';
      charArray0[4] = '#';
      charArray0[5] = 'v';
      charArray0[6] = 'B';
      charArray0[7] = '.';
      charArray0[8] = '/';
      int int0 = strMatcher0.isMatch(charArray0, 0, 108, 0);
      StrBuilder strBuilder2 = strBuilder0.insert(0, 1.0);
      boolean boolean0 = strBuilder0.contains(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2714));
      StrBuilder strBuilder1 = strBuilder0.append("");
      StrBuilder strBuilder2 = strBuilder0.append(false);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(":pLbnLn'5AevXLiK2/");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[3];
      charArray0[0] = 'h';
      charArray0[1] = '/';
      long long0 = strBuilder_StrBuilderReader0.skip(2091L);
      charArray0[2] = 'Y';
      int int0 = (-1);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, (-1), (-1));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(5);
      String string0 = "P\\C2gO1nKp\\Wk";
      int int0 = strBuilder0.lastIndexOf("PC2gO1nKpWk");
      // Undeclared exception!
      try { 
        strBuilder0.substring((-1), 5);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.size();
      StrBuilder strBuilder1 = new StrBuilder((String) null);
      // Undeclared exception!
      try { 
        strBuilder1.insert(913, 1986.1728952613794);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 913
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 108;
      // Undeclared exception!
      try { 
        strBuilder0.insert(108, 'k');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 108
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      int int0 = 0;
      strBuilder0.size = 0;
      int int1 = 115;
      char[] charArray0 = null;
      int int2 = (-914);
      int int3 = strBuilder0.lastIndexOf((StrMatcher) null, 115);
      // Undeclared exception!
      try { 
        strBuilder0.getChars(0, 115, (char[]) null, (-914));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 115
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-203);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-203), 187.1286013954175);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -203
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrBuilder strBuilder2 = strBuilder1.setNewLineText("");
      StrBuilder strBuilder3 = strBuilder2.append(1.0);
      boolean boolean0 = strBuilder0.equals((Object) "{osi2lKp$<z|O");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      int int0 = 101;
      StrBuilder strBuilder4 = strBuilder0.deleteAll('@');
      StrBuilder strBuilder5 = strBuilder4.setNewLineText("3*");
      // Undeclared exception!
      try { 
        strBuilder0.insert(101, true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 101
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[8];
      charArray0[0] = 'U';
      charArray0[1] = 'u';
      charArray0[2] = '{';
      charArray0[3] = 'd';
      charArray0[4] = ';';
      charArray0[5] = 'W';
      charArray0[6] = 'G';
      StrBuilder strBuilder1 = strBuilder0.appendPadding((-1567), '&');
      String string0 = strBuilder0.substring(0);
      charArray0[7] = 'T';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, (-1589), 534);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 534
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder("]P;T");
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((Object) strBuilder1, 116, '\"');
      StrBuilder strBuilder3 = strBuilder1.deleteAll((StrMatcher) null);
      StrBuilder strBuilder4 = strBuilder0.setLength(5223);
      StrBuilder strBuilder5 = strBuilder4.append((float) 5223);
      boolean boolean0 = strBuilder2.startsWith("");
      char[] charArray0 = new char[9];
      charArray0[0] = '\"';
      charArray0[1] = '\"';
      charArray0[2] = '\"';
      charArray0[3] = '\"';
      charArray0[4] = '\"';
      charArray0[5] = ',';
      charArray0[6] = '\"';
      charArray0[7] = '\"';
      charArray0[8] = 'y';
      // Undeclared exception!
      try { 
        strBuilder2.append(charArray0, 5223, 117);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 117
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      int int0 = strBuilder0.size();
      StrBuilder strBuilder1 = strBuilder0.append((float) 0);
      StrBuilder strBuilder2 = strBuilder0.replaceFirst('7', '7');
      StrBuilder strBuilder3 = new StrBuilder();
      StrBuilder strBuilder4 = strBuilder1.appendFixedWidthPadLeft((Object) strBuilder3, (-2812), '7');
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.trim();
      String string0 = "3rhFQid7|8";
      StrBuilder strBuilder2 = strBuilder1.replaceAll("5.0", "3rhFQid7|8");
      int int0 = 139;
      // Undeclared exception!
      try { 
        strBuilder2.deleteCharAt(139);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 139
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(310, 310, 'P');
      StrBuilder strBuilder2 = strBuilder1.ensureCapacity((-1397));
      StrBuilder strBuilder3 = strBuilder1.append('%');
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder4 = strBuilder2.appendWithSeparators((Collection) linkedList0, "file.encoding");
      StrBuilder strBuilder5 = strBuilder4.deleteAll((StrMatcher) null);
      strBuilder2.validateIndex(281);
      Writer writer0 = strBuilder2.asWriter();
      StrBuilder strBuilder6 = strBuilder0.deleteAll((String) null);
      String string0 = strBuilder0.toString();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "](5~h-J8#0TnxTN3\"";
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("sv&e<8^4H");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(367, 367, 'o');
      StrBuilder strBuilder2 = strBuilder1.clear();
      String string0 = strBuilder0.midString(367, 1259);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "{w!wym88^$S";
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("{w!wym88^$S");
      StrBuilder strBuilder2 = strBuilder1.append(strBuilder0);
      char char0 = '#';
      StrBuilder strBuilder3 = strBuilder2.appendPadding(108, '#');
      StrBuilder strBuilder4 = strBuilder3.append(strBuilder2);
      StrBuilder strBuilder5 = strBuilder2.append((Object) "{w!wym88^$S");
      Writer writer0 = strBuilder1.asWriter();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StringBuffer stringBuffer1 = strBuilder5.toStringBuffer();
      boolean boolean0 = strBuilder5.contains('#');
      int int0 = (-4888);
      // Undeclared exception!
      try { 
        strBuilder2.delete(108, (-4888));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("%t1zu6/nRR?kzo29[7");
      StrBuilder strBuilder1 = strBuilder0.appendPadding(44, '2');
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrBuilder strBuilder2 = strBuilder0.replaceFirst((StrMatcher) strMatcher_NoMatcher0, "");
      StrBuilder strBuilder3 = strBuilder0.ensureCapacity(44);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("k\"*Jqj&N");
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("k\"*Jqj&N", "MDLS6''");
      int int0 = 4264;
      StrBuilder strBuilder2 = new StrBuilder("k\"*Jqj&N");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      StrBuilder strBuilder3 = strBuilder1.appendWithSeparators((Iterator) strBuilder_StrBuilderTokenizer0, "MDLS6''");
      Object object0 = strBuilder_StrBuilderTokenizer0.previous();
      // Undeclared exception!
      try { 
        strBuilder1.insert(4264, (Object) "k\"*Jqj&N");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 4264
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("gVcY01Sk;DAYgF}");
      StrBuilder strBuilder1 = strBuilder0.setLength(1509);
      StrBuilder strBuilder2 = strBuilder1.insert(1509, (-859.333F));
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      int int0 = (-1);
      StrBuilder strBuilder3 = strBuilder2.replace(strMatcher0, "gVcY01Sk;DAYgF}", 1509, 1509, (-1));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      char[] charArray0 = new char[3];
      charArray0[0] = 'o';
      char[] charArray1 = strBuilder1.toCharArray(1509, 1509);
      charArray0[1] = 'O';
      charArray0[2] = 's';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 1509, 1509);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 1509
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      String string0 = "file.separator";
      StrBuilder strBuilder0 = new StrBuilder("file.separator");
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("(NWzrIf(!dDk#+WE6g}");
      boolean boolean0 = strBuilder0.contains("file.separator");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean1 = strBuilder_StrBuilderReader0.markSupported();
      StrBuilder strBuilder2 = strBuilder1.minimizeCapacity();
      StrBuilder strBuilder3 = strBuilder0.append((-1L));
      int int0 = 115;
      int int1 = 9;
      // Undeclared exception!
      try { 
        strBuilder1.insert(115, 9);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 115
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(763);
      StrBuilder strBuilder1 = strBuilder0.setNullText("}*MknRyx[RleA");
      StrBuilder strBuilder2 = strBuilder0.setNewLineText("");
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder3 = strBuilder1.trim();
      StrBuilder strBuilder4 = strBuilder1.ensureCapacity(763);
      int int0 = strBuilder0.indexOf('.', 763);
      StrBuilder strBuilder5 = strBuilder1.append(0.0);
      boolean boolean0 = strBuilder2.contains("");
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      String string0 = "P.vhV@";
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Collection) linkedList0, "P.vhV@");
      String string1 = strBuilder0.leftString(0);
      String string2 = strBuilder0.midString(0, 0);
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadRight(0, 32, 'c');
      StrBuilder strBuilder4 = strBuilder0.append((-1597.946F));
      int int1 = (-4112);
      // Undeclared exception!
      try { 
        strBuilder4.append(strBuilder0, 5, (-4112));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1, 0, 0);
      StrBuilder strBuilder3 = strBuilder0.replaceFirst('s', 's');
      StrBuilder strBuilder4 = strBuilder3.appendNull();
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("Mac");
      int int0 = strBuilder1.indexOf(strMatcher0);
      boolean boolean0 = strBuilder2.equals((Object) strBuilder1);
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) strBuilder1;
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) strBuilder2;
      objectArray0[3] = (Object) strBuilder1;
      objectArray0[4] = (Object) strBuilder2;
      objectArray0[5] = (Object) strBuilder0;
      objectArray0[6] = (Object) strBuilder0;
      StrBuilder strBuilder5 = strBuilder3.appendWithSeparators(objectArray0, "");
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("j3y-s4`");
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      StrBuilder strBuilder2 = strBuilder0.deleteFirst("j3y-s4`");
      boolean boolean0 = strBuilder1.isEmpty();
      StrBuilder strBuilder3 = strBuilder1.replaceFirst("j3y-s4`", "j3y-s4`");
      char[] charArray0 = new char[7];
      charArray0[0] = '-';
      charArray0[1] = '-';
      charArray0[2] = 'W';
      charArray0[3] = 'a';
      charArray0[4] = 'z';
      charArray0[5] = '}';
      charArray0[6] = 'e';
      StrBuilder strBuilder4 = strBuilder3.insert(0, charArray0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      int int0 = strBuilder1.lastIndexOf(strMatcher0, 0);
      char[] charArray0 = new char[2];
      charArray0[0] = '2';
      charArray0[1] = 'v';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 0, 48);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity((-132));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      int int0 = strBuilder_StrBuilderReader0.read(charBuffer0);
      StrBuilder strBuilder2 = strBuilder0.trim();
      long long0 = strBuilder_StrBuilderReader0.skip(0L);
      StrBuilder strBuilder3 = new StrBuilder((String) null);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder3.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((-132));
      strBuilder_StrBuilderWriter0.write((String) null);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      char[] charArray0 = strBuilder0.toCharArray(0, 48);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher((String) null);
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      StrBuilder strBuilder1 = new StrBuilder("~MIK{%A");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(0L);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(4);
      StrBuilder strBuilder1 = strBuilder0.append((-1251.79256565076));
      StrBuilder strBuilder2 = strBuilder1.setNewLineText("H*!3aY>1@.%BIX>");
      StrBuilder strBuilder3 = strBuilder0.appendNull();
      String string0 = strBuilder3.getNullText();
      StrBuilder strBuilder4 = strBuilder3.clear();
      StrBuilder strBuilder5 = strBuilder3.ensureCapacity(0);
      // Undeclared exception!
      try { 
        strBuilder3.charAt((-968));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -968
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      int int0 = (-1171);
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt((-1171), 'q');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1171
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      int int0 = 4;
      StrBuilder strBuilder0 = new StrBuilder(4);
      char char0 = 'k';
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt((-42), 'k');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -42
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((String) null, 450, 450);
      String string0 = strBuilder0.getNullText();
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      int int0 = 44;
      StrBuilder strBuilder0 = new StrBuilder(44);
      StrBuilder strBuilder1 = strBuilder0.replaceAll(" jc", "&aOt)}![:~1.eNtUrAj");
      StrBuilder strBuilder2 = strBuilder1.appendNewLine();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      boolean boolean0 = strBuilder_StrBuilderTokenizer0.hasPrevious();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("&aOt)}![:~1.eNtUrAj");
      String string0 = strBuilder1.midString(44, 44);
      boolean boolean1 = strBuilder1.contains(strMatcher0);
      String string1 = strBuilder0.rightString(44);
      StrBuilder strBuilder3 = strBuilder0.replaceFirst("\n", "^NsPW");
      StrBuilder strBuilder4 = strBuilder3.appendFixedWidthPadRight(0, (-2636), 'y');
      int int1 = (-940);
      StrBuilder strBuilder5 = strBuilder2.appendFixedWidthPadLeft((-940), (-940), 'K');
      Reader reader0 = strBuilder5.asReader();
      // Undeclared exception!
      try { 
        strBuilder0.insert((-940), 1.0F);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -940
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.isEmpty();
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("Invalid offset: ");
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("Invalid offset: ");
      int int0 = strBuilder0.indexOf(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.clear();
      StrBuilder strBuilder3 = strBuilder0.ensureCapacity(0);
      StrBuilder strBuilder4 = strBuilder3.appendFixedWidthPadRight((-1), 2875, 'z');
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("Invalid offset: ");
      StrBuilder strBuilder5 = strBuilder0.insert(0, true);
      StrBuilder strBuilder6 = strBuilder5.deleteAll(strMatcher1);
      StrBuilder strBuilder7 = strBuilder5.replaceFirst(')', 'Y');
      int int1 = strBuilder7.length();
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("user.country");
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.append((Object) "user.country");
      char char0 = '/';
      int int0 = strBuilder1.lastIndexOf('/');
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight((-1), 0, '/');
      // Undeclared exception!
      try { 
        strBuilder2.append("user.country", (-2215), (-2215));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      int int0 = (-3601);
      StrBuilder strBuilder0 = new StrBuilder((-3601));
      int int1 = strBuilder0.indexOf('u');
      String string0 = "";
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1), (-1635.9103F));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      char[] charArray0 = new char[4];
      charArray0[0] = '7';
      charArray0[1] = 'p';
      charArray0[2] = 'S';
      charArray0[3] = '{';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      String string0 = strBuilder_StrBuilderTokenizer0.nextToken();
      int int0 = strBuilder0.indexOf(strMatcher0, 1385);
      // Undeclared exception!
      try { 
        strBuilder0.insert(3, "startIndex must be valid");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(117);
      int int0 = (-659);
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrMatcher strMatcher0 = StrMatcher.charMatcher('\\');
      int int1 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_NoMatcher0);
      StrBuilder strBuilder1 = strBuilder0.append(true);
      StrBuilder strBuilder2 = strBuilder0.append((-1.0));
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray((-659), (-659));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -659
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      int int1 = strBuilder0.lastIndexOf(";o");
      StrBuilder strBuilder1 = strBuilder0.setNewLineText(";o");
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder1;
      objectArray0[2] = (Object) strBuilder1;
      // Undeclared exception!
      try { 
        strBuilder0.setLength((-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.lastIndexOf("|AR2Vc(Y/LwL!oo%<", 1569);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.lastIndexOf('<', (-3331));
      boolean boolean0 = strBuilder0.endsWith("qSdvA``V/%g;*Q~Lf");
      int int1 = strBuilder0.indexOf('!');
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.vm.vendor");
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(102);
      char[] charArray0 = new char[5];
      charArray0[0] = 'C';
      charArray0[1] = 'Q';
      char char0 = ')';
      charArray0[2] = ')';
      charArray0[3] = '&';
      char char1 = 'v';
      int int0 = (-2284);
      // Undeclared exception!
      try { 
        strBuilder0.setLength((-2284));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2284
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("3qh!b6~");
      String string0 = strBuilder0.leftString(32);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.previous();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.insert(0, false);
      StrBuilder strBuilder2 = strBuilder0.appendPadding((-2179), '{');
      StrBuilder strBuilder3 = strBuilder0.append((StringBuffer) null);
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      int int0 = strBuilder3.indexOf(strMatcher0, (-2876));
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadLeft((-309), 0, 'a');
      String string0 = strBuilder1.rightString(32);
      StrBuilder strBuilder5 = strBuilder4.trim();
      boolean boolean0 = strBuilder1.equals((Object) strBuilder2);
      boolean boolean1 = strBuilder1.contains(strMatcher0);
      StrBuilder strBuilder6 = strBuilder3.deleteAll('a');
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) "";
      objectArray0[1] = (Object) strBuilder0;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "");
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "");
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("HP-UX");
      StrBuilder strBuilder1 = strBuilder0.clear();
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("e_>2)LY24&-D,gLlD");
      StrBuilder strBuilder1 = strBuilder0.append(true);
      int int0 = strBuilder0.length();
      StrBuilder strBuilder2 = strBuilder0.appendNull();
      StrBuilder strBuilder3 = strBuilder1.append(0.0F);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      int int0 = 1702;
      StrBuilder strBuilder0 = new StrBuilder(1702);
      StrBuilder strBuilder1 = strBuilder0.deleteAll("'=JoPc$o9mxm");
      // Undeclared exception!
      try { 
        strBuilder1.charAt((-3085));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3085
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = new StringBuffer("d*@?8bGSG?F+");
      int int0 = 0;
      char char0 = '!';
      StringBuffer stringBuffer1 = stringBuffer0.append('!');
      StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) "d*@?8bGSG?F+", 0, 0);
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StringBuffer stringBuffer3 = stringBuffer2.replace(0, 115, "d*@?8bGSG?F+");
      char[] charArray0 = strBuilder1.toCharArray();
      int int1 = strBuilder1.hashCode();
      StrBuilder strBuilder2 = strBuilder1.insert(0, (float) 0);
      StrTokenizer strTokenizer0 = strBuilder2.asTokenizer();
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators((Collection) null, "d*@?8bGSG?F+");
      // Undeclared exception!
      try { 
        strBuilder3.substring(1479);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = new StringBuffer("d*@?8bGSG?F+");
      StringBuffer stringBuffer1 = stringBuffer0.append('!');
      StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) "d*@?8bGSG?F+", 0, 0);
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StringBuffer stringBuffer3 = stringBuffer2.replace(0, 115, "d*@?8bGSG?F+");
      char[] charArray0 = strBuilder1.toCharArray();
      int int0 = strBuilder1.hashCode();
      StrBuilder strBuilder2 = strBuilder1.insert(0, (float) 0);
      StrTokenizer strTokenizer0 = strBuilder2.asTokenizer();
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators((Collection) null, "d*@?8bGSG?F+");
      // Undeclared exception!
      try { 
        strBuilder3.substring(1479);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteAll("org.apache.commons.lang.text.StrBuilder");
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.startsWith("");
      String string0 = strBuilder0.getNewLineText();
      StrBuilder strBuilder1 = strBuilder0.append((Object) null);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.append((CharSequence) null, (-1458), (-1458));
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("f&/.FN@FqKJ+z2}6");
      StrBuilder strBuilder1 = strBuilder0.append((-158L));
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      int int0 = strBuilder0.hashCode();
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrBuilder strBuilder2 = strBuilder0.replaceFirst(strMatcher0, "f&/.FN@FqKJ+z2}6");
      StrBuilder strBuilder3 = strBuilder1.append(stringBuffer0);
      char[] charArray0 = new char[9];
      charArray0[0] = '$';
      charArray0[1] = '(';
      charArray0[2] = 'l';
      charArray0[3] = 'R';
      charArray0[4] = '%';
      charArray0[5] = '1';
      charArray0[6] = ')';
      charArray0[7] = 'A';
      charArray0[8] = '\\';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 97, 34);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 34
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.hashCode();
      StrBuilder strBuilder1 = strBuilder0.append((-3222.117287));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int1 = strBuilder_StrBuilderReader0.read();
      boolean boolean0 = strBuilder0.isEmpty();
      StrBuilder strBuilder2 = strBuilder0.setLength(45);
      StrBuilder strBuilder3 = strBuilder0.replaceFirst('y', 'y');
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = 'v';
      StrBuilder strBuilder0 = new StrBuilder("");
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.deleteAll((StrMatcher) strMatcher_NoMatcher0);
      // Undeclared exception!
      try { 
        strBuilder0.substring(32);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StringBuffer stringBuffer0 = new StringBuffer();
      StringBuffer stringBuffer1 = stringBuffer0.insert(0, (double) 0);
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      Object[] objectArray0 = new Object[0];
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators(objectArray0, (String) null);
      int int0 = 101;
      // Undeclared exception!
      try { 
        strBuilder1.delete(101, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("uWh0.");
      StrBuilder strBuilder1 = strBuilder0.setCharAt(2, '.');
      StrBuilder strBuilder2 = strBuilder0.deleteFirst('.');
      int int0 = 0;
      Reader reader0 = strBuilder2.asReader();
      char char0 = strBuilder0.charAt(0);
      int int1 = strBuilder2.length();
      char[] charArray0 = strBuilder0.toCharArray();
      int int2 = strBuilder2.size();
      String string0 = strBuilder0.rightString(0);
      int int3 = 0;
      // Undeclared exception!
      try { 
        strBuilder1.insert((-378), charArray0, 0, 2);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -378
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = strBuilder0.toCharArray();
      StrBuilder strBuilder1 = new StrBuilder();
      int int0 = 1526;
      int int1 = 0;
      String string0 = strBuilder1.midString(1526, 0);
      StrBuilder strBuilder2 = strBuilder1.insert(0, 0);
      StrBuilder strBuilder3 = strBuilder0.insert(0, (long) 0);
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      StrBuilder strBuilder4 = strBuilder0.append(charArray0);
      StrBuilder strBuilder5 = strBuilder2.insert(0, 0);
      StrBuilder strBuilder6 = strBuilder2.append(true);
      StrBuilder strBuilder7 = strBuilder6.reverse();
      // Undeclared exception!
      try { 
        strBuilder4.insert(814, charArray0, 0, 32);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 814
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      char[] charArray0 = null;
      StrBuilder strBuilder2 = strBuilder1.insert(0, (char[]) null);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.previousToken();
      StringBuffer stringBuffer0 = null;
      try {
        stringBuffer0 = new StringBuffer((CharSequence) null);
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      int int0 = (-451);
      StrBuilder strBuilder0 = new StrBuilder((-451));
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      // Undeclared exception!
      try { 
        strBuilder1.insert((-451), 1L);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -451
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.append((StrBuilder) null, 0, 965);
      StrBuilder strBuilder2 = strBuilder1.setNullText("qWXfW9:aQzkZdNNx}");
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder2);
      char[] charArray0 = new char[7];
      charArray0[0] = 'Y';
      charArray0[1] = 'S';
      charArray0[2] = 'N';
      charArray0[3] = '`';
      charArray0[4] = 'H';
      StrBuilder strBuilder4 = strBuilder1.append(charArray0);
      charArray0[5] = 'r';
      charArray0[6] = 'C';
      // Undeclared exception!
      try { 
        strBuilder3.insert(965, charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 965
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("-{Ea9");
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1644), (long) (-1644));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1644
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("line.separator");
      int int0 = strBuilder0.lastIndexOf(':');
      StrBuilder strBuilder1 = strBuilder0.append((-593L));
      StrBuilder strBuilder2 = strBuilder1.append(true);
      StrBuilder strBuilder3 = strBuilder1.appendNewLine();
      // Undeclared exception!
      try { 
        strBuilder0.validateRange((-1), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[3];
      charArray0[0] = '=';
      charArray0[1] = '7';
      charArray0[2] = 'W';
      // Undeclared exception!
      try { 
        strBuilder0.insert(4, charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 4
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.append((StrBuilder) null, 2235, (-1));
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("n4tx-vOTq<B`oD:ieM");
      StrBuilder strBuilder1 = strBuilder0.setNullText("n4tx-vOTq<B`oD:ieM");
      StrTokenizer strTokenizer0 = strBuilder1.asTokenizer();
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("k&AyN15(^4;tuc");
      StringBuffer stringBuffer0 = new StringBuffer(3);
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder2 = strBuilder0.insert(3, 'R');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "k|E";
      StrBuilder strBuilder1 = new StrBuilder("k|E");
      StrBuilder strBuilder2 = strBuilder0.append(1191.34116971048);
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, 1184, 1184);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      String string0 = "P]mD&C\\8y";
      StrBuilder strBuilder0 = new StrBuilder("P]mD&C8y");
      char[] charArray0 = new char[1];
      char char0 = 'v';
      charArray0[0] = 'v';
      int int0 = 1532;
      int int1 = 39;
      // Undeclared exception!
      try { 
        strBuilder0.insert((-711), charArray0, 1532, 39);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -711
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      char[] charArray0 = new char[3];
      int int0 = (-2425);
      int int1 = 3969;
      // Undeclared exception!
      try { 
        strBuilder0.getChars(5026, 1, charArray0, (-2425));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      int int0 = (-1929);
      StrBuilder strBuilder0 = new StrBuilder((-1929));
      int int1 = 2;
      char char0 = 'j';
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(2, 'j');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("%t1zu6/nRR?kzo29[7");
      String string0 = "";
      int int0 = 50;
      char[] charArray0 = new char[3];
      charArray0[0] = '8';
      charArray0[1] = 'W';
      charArray0[2] = '^';
      int int1 = 56;
      // Undeclared exception!
      try { 
        strBuilder0.getChars(50, 50, charArray0, 56);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 50
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("~8@j%cZAZ`. 8");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[8];
      charArray0[0] = 'P';
      charArray0[1] = '^';
      charArray0[2] = '_';
      charArray0[3] = '/';
      charArray0[4] = 'i';
      charArray0[5] = 'u';
      charArray0[6] = '|';
      charArray0[7] = '/';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, Integer.MAX_VALUE, 39);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 39
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder strBuilder1 = strBuilder0.replaceAll("org.apache.commons.lang.text.StrBuilder", "");
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      int int0 = (-2733);
      StrBuilder strBuilder0 = new StrBuilder((-2733));
      int int1 = 0;
      LinkedList<String> linkedList0 = new LinkedList<String>();
      String string0 = "";
      boolean boolean0 = linkedList0.add("");
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
      // Undeclared exception!
      try { 
        strBuilder1.charAt((-1747));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1747
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-223));
      StrBuilder strBuilder1 = strBuilder0.append(786.7731F);
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      String string0 = "W";
      StrBuilder strBuilder0 = new StrBuilder("W");
      char[] charArray0 = new char[1];
      charArray0[0] = '0';
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, (-3020), 115);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 115
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[7];
      charArray0[0] = '\\';
      charArray0[1] = '&';
      charArray0[2] = 'W';
      charArray0[3] = '0';
      charArray0[4] = 'Q';
      charArray0[5] = 'p';
      charArray0[6] = 'K';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 0, 981);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 981
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StringBuffer stringBuffer0 = new StringBuffer(1606);
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray(Integer.MAX_VALUE, Integer.MAX_VALUE);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("U");
      StrBuilder strBuilder1 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, Integer.MAX_VALUE, (-715));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      boolean boolean0 = strBuilder0.isEmpty();
      StrMatcher strMatcher0 = StrMatcher.stringMatcher((String) null);
      int int0 = strBuilder0.indexOf(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.append(1476);
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      char[] charArray0 = new char[5];
      charArray0[0] = ':';
      charArray0[1] = 'v';
      charArray0[2] = 'X';
      charArray0[3] = '2';
      charArray0[4] = '9';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(34, (-1509), charArray0, (-2519));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1509
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("*y4");
      char[] charArray0 = new char[4];
      charArray0[0] = '4';
      charArray0[1] = 'D';
      charArray0[2] = 'U';
      charArray0[3] = '\'';
      // Undeclared exception!
      try { 
        strBuilder0.getChars((-2942), 0, charArray0, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2942
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteAll('');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setTrimmerMatcher((StrMatcher) null);
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrTokenizer strTokenizer1 = strBuilder_StrBuilderTokenizer0.setIgnoredMatcher(strMatcher0);
      String string0 = "*9";
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(9, '}');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 9
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.ArrayUtils");
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(0);
      StrBuilder strBuilder2 = strBuilder1.append(false);
      StrBuilder strBuilder3 = strBuilder0.ensureCapacity(34);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder3.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setTrimmerMatcher(strMatcher0);
      StrBuilder strBuilder4 = strBuilder3.insert(34, 34);
      StrBuilder strBuilder5 = strBuilder3.appendWithSeparators((Iterator) strTokenizer0, "");
      StrBuilder strBuilder6 = strBuilder3.insert(34, "org.apache.commons.lang.ArrayUtils");
      StrBuilder strBuilder7 = strBuilder6.append(2620L);
      StrBuilder strBuilder8 = strBuilder7.deleteAll('2');
      int int0 = strBuilder5.indexOf('|', 0);
      StrBuilder strBuilder9 = strBuilder0.insert(34, 34);
      StrBuilder strBuilder10 = strBuilder3.append((double) 0);
      int int1 = strBuilder0.indexOf("awt.toolkit");
      StrBuilder strBuilder11 = strBuilder2.insert(39, (Object) strBuilder10);
      char[] charArray0 = new char[3];
      charArray0[0] = '2';
      charArray0[1] = '|';
      charArray0[2] = '|';
      // Undeclared exception!
      try { 
        strBuilder6.insert((-1), charArray0, 39, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("!<");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[8];
      charArray0[0] = '';
      charArray0[1] = ':';
      charArray0[2] = 'W';
      charArray0[3] = '%';
      charArray0[4] = 'B';
      charArray0[5] = 'K';
      charArray0[6] = 'o';
      charArray0[7] = 'Q';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0, 4, 4);
      strBuilder_StrBuilderReader0.reset();
      StrBuilder strBuilder1 = strBuilder0.append(charArray0, 2, 0);
      StrBuilder strBuilder2 = strBuilder0.append((Object) strBuilder_StrBuilderReader0);
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("A rJ rdjiCOl~cy/+ON");
      StrMatcher strMatcher2 = StrMatcher.stringMatcher("");
      StrBuilder strBuilder3 = strBuilder1.deleteAll('W');
      StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher0, "!<");
      StrBuilder strBuilder5 = strBuilder4.appendFixedWidthPadLeft((Object) "`PHqQ4Ke=Vx!7La$", 4, 'K');
      StrBuilder strBuilder6 = strBuilder5.appendFixedWidthPadLeft(4, 0, 'W');
      Reader reader0 = strBuilder4.asReader();
      Writer writer0 = strBuilder4.asWriter();
      StrBuilder strBuilder7 = strBuilder0.trim();
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.insert(0, 0);
      StrBuilder strBuilder2 = strBuilder1.insert(0, '.');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      char[] charArray0 = new char[5];
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter1 = strBuilder1.new StrBuilderWriter();
      charArray0[0] = 'R';
      charArray0[1] = '{';
      charArray0[2] = '.';
      charArray0[2] = '.';
      charArray0[4] = '.';
      strBuilder_StrBuilderWriter0.write(charArray0);
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(102);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setLength(2982);
      StrBuilder strBuilder2 = strBuilder1.insert(2982, 866.65F);
      int int0 = strBuilder0.indexOf("");
      StrBuilder strBuilder3 = strBuilder0.setCharAt(0, 'I');
      int int1 = 4180;
      int int2 = strBuilder3.validateRange(2048, 4180);
      StrBuilder strBuilder4 = strBuilder3.replaceAll("", "");
      StringBuffer stringBuffer0 = new StringBuffer("");
      StrBuilder strBuilder5 = strBuilder3.append(stringBuffer0, 0, 0);
      StrBuilder strBuilder6 = null;
      // Undeclared exception!
      try { 
        strBuilder0.equals((StrBuilder) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(object0, 3124, '_');
      StrBuilder strBuilder2 = strBuilder1.append(strBuilder0);
      StrBuilder strBuilder3 = strBuilder2.append(1658);
      char[] charArray0 = new char[2];
      charArray0[0] = '_';
      charArray0[1] = '_';
      StrBuilder strBuilder4 = strBuilder3.append(charArray0);
      StrBuilder strBuilder5 = strBuilder2.append(true);
      StrBuilder strBuilder6 = strBuilder5.append((StringBuffer) null, 0, 32);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher((String) null);
      StrBuilder strBuilder7 = strBuilder1.replaceAll(strMatcher0, (String) null);
      String string0 = strBuilder7.midString(0, 0);
      int int0 = strBuilder7.lastIndexOf(strMatcher0, (-1137));
      char[] charArray1 = new char[6];
      charArray1[0] = '_';
      charArray1[1] = '_';
      charArray1[2] = '_';
      charArray1[3] = '_';
      charArray1[4] = '_';
      charArray1[5] = '_';
      StrBuilder strBuilder8 = strBuilder1.append(charArray1);
      int int1 = strBuilder0.lastIndexOf((String) null);
      StrBuilder strBuilder9 = strBuilder7.appendNewLine();
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray1, 102, (-2313));
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[7];
      charArray0[0] = 'K';
      charArray0[1] = '0';
      charArray0[2] = '=';
      charArray0[3] = '/';
      charArray0[4] = 'U';
      charArray0[5] = ']';
      charArray0[6] = ';';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrMatcher strMatcher1 = StrMatcher.charMatcher('#');
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.deleteAll('g');
      boolean boolean0 = strBuilder0.contains('l');
      StrBuilder strBuilder2 = strBuilder1.deleteFirst(strMatcher0);
      StrBuilder strBuilder3 = strBuilder2.replaceFirst("", "");
      boolean boolean1 = strBuilder0.endsWith((String) null);
      StrBuilder strBuilder4 = strBuilder1.reverse();
      // Undeclared exception!
      try { 
        strBuilder0.insert(5, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 5
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }
}
