/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 28 14:52:30 GMT 2020
 */

package org.apache.commons.math.linear;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.linear.Array2DRowRealMatrix;
import org.apache.commons.math.linear.ArrayRealVector;
import org.apache.commons.math.linear.DecompositionSolver;
import org.apache.commons.math.linear.DefaultRealMatrixChangingVisitor;
import org.apache.commons.math.linear.EigenDecompositionImpl;
import org.apache.commons.math.linear.OpenMapRealMatrix;
import org.apache.commons.math.linear.OpenMapRealVector;
import org.apache.commons.math.linear.RealMatrix;
import org.apache.commons.math.linear.RealMatrixChangingVisitor;
import org.apache.commons.math.linear.RealVector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EigenDecompositionImpl_ESTest extends EigenDecompositionImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 26.79474121606408;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 0.0;
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, false);
      ArrayRealVector arrayRealVector1 = new ArrayRealVector((RealVector) arrayRealVector0);
      RealMatrix realMatrix0 = arrayRealVector1.outerProduct((RealVector) arrayRealVector0);
      DefaultRealMatrixChangingVisitor defaultRealMatrixChangingVisitor0 = new DefaultRealMatrixChangingVisitor();
      double double0 = realMatrix0.walkInOptimizedOrder((RealMatrixChangingVisitor) defaultRealMatrixChangingVisitor0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
      double[] doubleArray1 = eigenDecompositionImpl0.getImagEigenvalues();
      try { 
        eigenDecompositionImpl0.getRealEigenvalue(948);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 948
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 4.0;
      doubleArray0[1] = 1794.4910496585;
      doubleArray0[2] = 54.0;
      doubleArray0[4] = 12.566370614359172;
      doubleArray0[5] = 1336.5963483863707;
      doubleArray0[6] = (-2732.76199708);
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
      RealMatrix realMatrix0 = openMapRealVector0.outerProduct(doubleArray0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (-2732.76199708));
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getVT();
      OpenMapRealVector openMapRealVector1 = openMapRealVector0.mapAcos();
      RealMatrix realMatrix2 = eigenDecompositionImpl0.getV();
      double[] doubleArray1 = eigenDecompositionImpl0.getRealEigenvalues();
      RealMatrix realMatrix3 = eigenDecompositionImpl0.getD();
      int int0 = (-2776);
      try { 
        eigenDecompositionImpl0.getEigenvector((-2776));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2776
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 4.0;
      doubleArray0[1] = 1794.4910496585;
      doubleArray0[2] = 2.0;
      doubleArray0[3] = (-3048.293);
      doubleArray0[4] = 12.566370614359172;
      doubleArray0[5] = 1336.5963483863707;
      doubleArray0[6] = (-2732.76199708);
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
      RealMatrix realMatrix0 = openMapRealVector0.outerProduct(doubleArray0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (-2732.76199708));
      RealVector realVector0 = eigenDecompositionImpl0.getEigenvector(3);
      OpenMapRealVector openMapRealVector1 = openMapRealVector0.mapLog1p();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getVT();
      OpenMapRealVector openMapRealVector2 = openMapRealVector0.mapAcos();
      RealMatrix realMatrix2 = eigenDecompositionImpl0.getV();
      double[] doubleArray1 = eigenDecompositionImpl0.getRealEigenvalues();
      RealMatrix realMatrix3 = eigenDecompositionImpl0.getD();
      int int0 = (-2776);
      try { 
        eigenDecompositionImpl0.getEigenvector((-2776));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2776
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(11, 11);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(openMapRealMatrix0, 11);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getVT();
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      int int0 = 0;
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getD();
      RealVector realVector0 = eigenDecompositionImpl0.getEigenvector(3);
      // Undeclared exception!
      try { 
        openMapRealMatrix0.preMultiply((RealVector) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.linear.AbstractRealMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 4.0;
      doubleArray0[1] = 1794.4910496585;
      doubleArray0[3] = 1794.4910496585;
      doubleArray0[4] = 12.566370614359172;
      doubleArray0[5] = 1336.5963483863707;
      doubleArray0[6] = (-2732.76199708);
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
      RealMatrix realMatrix0 = openMapRealVector0.outerProduct(doubleArray0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (-2732.76199708));
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getVT();
      OpenMapRealVector openMapRealVector1 = openMapRealVector0.mapAcos();
      RealMatrix realMatrix2 = eigenDecompositionImpl0.getV();
      RealMatrix realMatrix3 = realMatrix0.transpose();
      double[] doubleArray1 = eigenDecompositionImpl0.getRealEigenvalues();
      RealMatrix realMatrix4 = eigenDecompositionImpl0.getD();
      double[] doubleArray2 = eigenDecompositionImpl0.getImagEigenvalues();
      int int0 = (-2776);
      try { 
        eigenDecompositionImpl0.getEigenvector((-2776));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2776
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (-1.0);
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 2281.802213;
      doubleArray0[3] = 2186.0;
      doubleArray0[4] = 0.333;
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
      RealMatrix realMatrix0 = array2DRowRealMatrix0.createMatrix(16, 16);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (-108.8829953537));
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      double double0 = eigenDecompositionImpl0.getDeterminant();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 4.0;
      doubleArray0[1] = 1794.4910496585;
      doubleArray0[2] = 2.0;
      doubleArray0[4] = 12.566370614359172;
      doubleArray0[5] = 1336.5963483863707;
      doubleArray0[6] = (-2732.76199708);
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
      RealMatrix realMatrix0 = openMapRealVector0.outerProduct(doubleArray0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (-2732.76199708));
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getVT();
      RealMatrix realMatrix2 = eigenDecompositionImpl0.getV();
      OpenMapRealVector openMapRealVector1 = openMapRealVector0.mapAcos();
      RealMatrix realMatrix3 = eigenDecompositionImpl0.getV();
      RealMatrix realMatrix4 = realMatrix0.transpose();
      double[] doubleArray1 = eigenDecompositionImpl0.getRealEigenvalues();
      RealMatrix realMatrix5 = eigenDecompositionImpl0.getD();
      double[] doubleArray2 = eigenDecompositionImpl0.getImagEigenvalues();
      int int0 = (-2776);
      try { 
        eigenDecompositionImpl0.getEigenvector((-2776));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2776
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 4.0;
      doubleArray0[1] = 1794.4910496585;
      doubleArray0[2] = 2.0;
      doubleArray0[3] = (-3048.293);
      doubleArray0[4] = 12.566370614359172;
      doubleArray0[5] = 1336.5963483863707;
      doubleArray0[6] = 4.0;
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
      RealMatrix realMatrix0 = openMapRealVector0.outerProduct(doubleArray0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (-2724.301619093688));
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getVT();
      OpenMapRealVector openMapRealVector1 = openMapRealVector0.mapAcos();
      RealMatrix realMatrix2 = eigenDecompositionImpl0.getV();
      double[] doubleArray1 = eigenDecompositionImpl0.getRealEigenvalues();
      RealMatrix realMatrix3 = eigenDecompositionImpl0.getD();
      int int0 = (-2776);
      try { 
        eigenDecompositionImpl0.getEigenvector((-2776));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2776
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int int0 = 2468;
      double[] doubleArray0 = new double[0];
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, (-1309.05107));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 4.0;
      doubleArray0[1] = 1794.4910496585;
      doubleArray0[2] = 2.0;
      doubleArray0[3] = 1794.4910496585;
      doubleArray0[4] = 12.566370614359172;
      doubleArray0[5] = 1336.5963483863707;
      doubleArray0[6] = (-2732.76199708);
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
      RealMatrix realMatrix0 = openMapRealVector0.outerProduct(doubleArray0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (-2732.76199708));
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getVT();
      double[] doubleArray1 = eigenDecompositionImpl0.getRealEigenvalues();
      RealMatrix realMatrix2 = eigenDecompositionImpl0.getD();
      int int0 = (-2776);
      try { 
        eigenDecompositionImpl0.getEigenvector((-2776));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2776
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 4.0;
      doubleArray0[1] = 1794.4910496585;
      doubleArray0[2] = 2.0;
      doubleArray0[3] = (-3048.293);
      doubleArray0[4] = 12.566370614359172;
      doubleArray0[5] = 1336.5963483863707;
      doubleArray0[6] = (-2732.76199708);
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
      RealMatrix realMatrix0 = openMapRealVector0.outerProduct(doubleArray0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (-2732.76199708));
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getVT();
      RealMatrix realMatrix2 = eigenDecompositionImpl0.getV();
      OpenMapRealVector openMapRealVector1 = openMapRealVector0.mapAcos();
      RealMatrix realMatrix3 = eigenDecompositionImpl0.getV();
      RealMatrix realMatrix4 = realMatrix0.transpose();
      double[] doubleArray1 = eigenDecompositionImpl0.getRealEigenvalues();
      RealMatrix realMatrix5 = eigenDecompositionImpl0.getD();
      double[] doubleArray2 = eigenDecompositionImpl0.getImagEigenvalues();
      int int0 = (-2776);
      try { 
        eigenDecompositionImpl0.getEigenvector((-2776));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2776
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[1] = 1794.4910496585;
      doubleArray0[2] = 2.0;
      doubleArray0[3] = (-3048.293);
      doubleArray0[5] = 1336.5963483863707;
      doubleArray0[6] = (-2732.76199708);
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
      RealMatrix realMatrix0 = openMapRealVector0.outerProduct(doubleArray0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (-2732.76199708));
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getVT();
      OpenMapRealVector openMapRealVector1 = openMapRealVector0.mapAcos();
      RealMatrix realMatrix2 = eigenDecompositionImpl0.getV();
      double[] doubleArray1 = eigenDecompositionImpl0.getRealEigenvalues();
      RealMatrix realMatrix3 = eigenDecompositionImpl0.getD();
      int int0 = (-2776);
      try { 
        eigenDecompositionImpl0.getEigenvector((-2776));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2776
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 4.0;
      doubleArray0[1] = 1794.4910496585;
      doubleArray0[2] = 2.0;
      doubleArray0[3] = (-3048.293);
      doubleArray0[4] = 12.260069411213207;
      doubleArray0[5] = 1338.8390675232688;
      doubleArray0[6] = (-2732.76199708);
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
      RealMatrix realMatrix0 = openMapRealVector0.outerProduct(doubleArray0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (-2732.76199708));
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix();
      OpenMapRealVector openMapRealVector1 = openMapRealVector0.mapAcos();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getV();
      double[] doubleArray1 = eigenDecompositionImpl0.getRealEigenvalues();
      RealMatrix realMatrix2 = eigenDecompositionImpl0.getD();
      int int0 = (-2776);
      try { 
        eigenDecompositionImpl0.getEigenvector((-2776));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2776
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (-1.0);
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 2281.802213;
      doubleArray0[3] = 2186.0;
      doubleArray0[4] = 0.333;
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
      RealMatrix realMatrix0 = array2DRowRealMatrix0.createMatrix(16, 16);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (-106.94613813257577));
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getVT();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Double[] doubleArray0 = new Double[2];
      Double double0 = new Double(1157.633);
      doubleArray0[0] = double0;
      Double double1 = new Double(251.02720835609549);
      doubleArray0[1] = double1;
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0);
      ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0);
      double[] doubleArray1 = new double[2];
      doubleArray1[0] = (double) doubleArray0[0];
      doubleArray1[1] = 1157.633;
      RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray1);
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (-1613.448319));
      } catch(RuntimeException e) {
         //
         // eigen decomposition of assymetric matrices not supported yet
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(11, 11);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(openMapRealMatrix0, 11);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getVT();
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getD();
      int int0 = (-3);
      try { 
        openMapRealMatrix0.getColumnVector(11);
      } catch(RuntimeException e) {
         //
         // column index 11 out of allowed range [0, 10]
         //
         verifyException("org.apache.commons.math.linear.MatrixUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (-2021.8829);
      doubleArray0[1] = (-2979.860679476);
      doubleArray0[2] = 1.0;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = 1.0E-12;
      doubleArray0[5] = (-2206.27);
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0);
      RealMatrix realMatrix0 = arrayRealVector0.outerProduct(doubleArray0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, Double.POSITIVE_INFINITY);
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getV();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(1383, 670);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(openMapRealMatrix0, (-1540.69));
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix();
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, 0.563);
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.linear.TriDiagonalTransformer", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(16, 16);
      RealMatrix realMatrix0 = array2DRowRealMatrix0.getRowMatrix(0);
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 428.89513);
      } catch(RuntimeException e) {
         //
         // no entry at indices (1, 0) in a 1x16 matrix
         //
         verifyException("org.apache.commons.math.linear.Array2DRowRealMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl((RealMatrix) null, 5286.93062846021);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 285.711011769;
      doubleArray0[1] = (-3517.103);
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, 285.711011769);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl((double[]) null, (double[]) null, 0.0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 2.2250738585072014E-308;
      doubleArray0[2] = (-2001.66664);
      doubleArray0[3] = 1.5;
      doubleArray0[4] = (-697.788460576);
      doubleArray0[5] = 0.0;
      doubleArray0[6] = 0.0;
      doubleArray0[7] = 0.0;
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, 0.0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 0.0;
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
      RealMatrix realMatrix0 = array2DRowRealMatrix0.scalarAdd(0.0);
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
      } catch(RuntimeException e) {
         //
         // a 2x1 matrix was provided instead of a square matrix
         //
         verifyException("org.apache.commons.math.linear.TriDiagonalTransformer", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 0.0;
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, false);
      ArrayRealVector arrayRealVector1 = new ArrayRealVector((RealVector) arrayRealVector0);
      RealMatrix realMatrix0 = arrayRealVector1.outerProduct((RealVector) arrayRealVector0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
      double[] doubleArray1 = eigenDecompositionImpl0.getImagEigenvalues();
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = 1181.6925453;
      doubleArray0[1] = 611.592244231;
      doubleArray0[2] = (-6.741514775687842E-14);
      doubleArray0[3] = 1840.6921880688;
      doubleArray0[4] = Double.NEGATIVE_INFINITY;
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, 1181.6925453);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 1537.82891;
      doubleArray0[1] = 1822.1082;
      doubleArray0[2] = 744.636509218;
      doubleArray0[3] = 457.1136;
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, (-6047.0));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, 607.0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 4.0;
      doubleArray0[1] = 1794.4910496585;
      doubleArray0[2] = 2.0;
      doubleArray0[3] = (-3048.293);
      doubleArray0[4] = 12.566370614359172;
      doubleArray0[5] = 1336.5963483863707;
      doubleArray0[6] = (-2732.76199708);
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
      RealMatrix realMatrix0 = openMapRealVector0.outerProduct(doubleArray0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (-2732.76199708));
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getVT();
      OpenMapRealVector openMapRealVector1 = openMapRealVector0.mapAcos();
      RealMatrix realMatrix2 = eigenDecompositionImpl0.getV();
      double[] doubleArray1 = eigenDecompositionImpl0.getRealEigenvalues();
      RealMatrix realMatrix3 = eigenDecompositionImpl0.getD();
      int int0 = (-2776);
      try { 
        eigenDecompositionImpl0.getEigenvector((-2776));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2776
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 4.0;
      doubleArray0[1] = 1794.4910496585;
      doubleArray0[2] = 54.0;
      doubleArray0[3] = (-3048.293);
      doubleArray0[4] = 12.566370614359172;
      doubleArray0[5] = 1336.5963483863707;
      doubleArray0[6] = (-2732.76199708);
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
      RealMatrix realMatrix0 = openMapRealVector0.outerProduct(doubleArray0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (-2732.76199708));
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getVT();
      OpenMapRealVector openMapRealVector1 = openMapRealVector0.mapAcos();
      RealMatrix realMatrix2 = eigenDecompositionImpl0.getV();
      double[] doubleArray1 = eigenDecompositionImpl0.getRealEigenvalues();
      RealMatrix realMatrix3 = eigenDecompositionImpl0.getD();
      int int0 = (-2776);
      try { 
        eigenDecompositionImpl0.getEigenvector((-2776));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2776
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (-838.908792942272);
      doubleArray0[1] = 1646.90751102;
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, (double[]) null, 0.0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      double[][] doubleArray0 = new double[2][7];
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = 0.0;
      doubleArray1[1] = 2507.8;
      doubleArray1[2] = 0.0;
      doubleArray1[3] = 0.0;
      doubleArray1[4] = 0.0;
      doubleArray1[5] = 0.0;
      doubleArray1[6] = 2122.730330671;
      doubleArray1[7] = 0.0;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[8];
      doubleArray0[1] = doubleArray2;
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, 411.736836);
      } catch(RuntimeException e) {
         //
         // eigen decomposition of assymetric matrices not supported yet
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(11, 11);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(openMapRealMatrix0, 11);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getVT();
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      int int0 = 0;
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getD();
      try { 
        openMapRealMatrix0.getColumnVector(11);
      } catch(RuntimeException e) {
         //
         // column index 11 out of allowed range [0, 10]
         //
         verifyException("org.apache.commons.math.linear.MatrixUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 5130.0166;
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, 5130.0166);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 2.0;
      doubleArray0[2] = 12.566370614359172;
      doubleArray0[3] = Double.NaN;
      doubleArray0[4] = (-1.0);
      doubleArray0[5] = 2505.961873899;
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, 12.566370614359172);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }
}
