* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.math.linear.EigenDecompositionImpl
* Starting client
* Connecting to master process on port 12145
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/patch8-Math-80-CapGen-plausible/Math_80_8-plausible_capgen/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math.linear.EigenDecompositionImpl
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 851
  - Branch 428
  - Exception 0
  - MutationFactory 212
  - Output 28
  - Method 17
  - MethodNoException 17
  - CBranchFitnessFactory 428
* Using seed 1585407949981
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%][Progress:===>                          11%] [Cov:>                                  0%][Progress:===>                          11%] [Cov:>                                  1%][Progress:===>                          11%] [Cov:====>                              13%][Progress:===>                          13%] [Cov:>                                  0%][Progress:===>                          13%] [Cov:>                                  1%][Progress:===>                          13%] [Cov:====>                              13%][Progress:===>                          13%] [Cov:====>                              14%][Progress:====>                         16%] [Cov:==>                                7%][Progress:====>                         16%] [Cov:====>                              14%][Progress:====>                         16%] [Cov:=========>                         26%][Progress:====>                         16%] [Cov:===========>                       33%][Progress:====>                         16%] [Cov:===========>                       34%][Progress:====>                         16%] [Cov:============>                      36%][Progress:====>                         16%] [Cov:=============>                     38%][Progress:====>                         16%] [Cov:==============>                    42%][Progress:=====>                        18%] [Cov:>                                  0%][Progress:=====>                        18%] [Cov:>                                  1%][Progress:=====>                        18%] [Cov:====>                              13%][Progress:=====>                        18%] [Cov:====>                              14%][Progress:======>                       20%] [Cov:>                                  0%][Progress:======>                       20%] [Cov:>                                  1%][Progress:======>                       20%] [Cov:====>                              13%][Progress:=======>                      25%] [Cov:>                                  0%][Progress:=======>                      25%] [Cov:====>                              12%][Progress:=======>                      25%] [Cov:====>                              13%][Progress:=======>                      25%] [Cov:====>                              14%][Progress:=======>                      25%] [Cov:=====>                             15%][Progress:=======>                      25%] [Cov:=====>                             17%][Progress:=======>                      25%] [Cov:======>                            18%][Progress:=======>                      25%] [Cov:======>                            19%][Progress:=======>                      26%] [Cov:====>                              13%][Progress:=======>                      26%] [Cov:====>                              14%][Progress:========>                     28%] [Cov:>                                  2%][Progress:========>                     28%] [Cov:=>                                 3%][Progress:========>                     28%] [Cov:=====>                             15%][Progress:========>                     28%] [Cov:=====>                             16%][Progress:========>                     28%] [Cov:======>                            18%][Progress:========>                     28%] [Cov:=======>                           22%][Progress:========>                     28%] [Cov:=========>                         26%][Progress:========>                     28%] [Cov:=========>                         27%][Progress:=========>                    30%] [Cov:>                                  0%][Progress:=========>                    30%] [Cov:>                                  1%][Progress:=========>                    30%] [Cov:====>                              13%][Progress:=========>                    30%] [Cov:====>                              14%][Progress:=========>                    31%] [Cov:====>                              13%][Progress:=========>                    31%] [Cov:====>                              14%][Progress:=========>                    33%] [Cov:>                                  0%][Progress:=========>                    33%] [Cov:>                                  1%][Progress:=========>                    33%] [Cov:====>                              13%][Progress:=========>                    33%] [Cov:====>                              14%][Progress:==========>                   35%] [Cov:>                                  2%][Progress:==========>                   35%] [Cov:=>                                 4%][Progress:==========>                   35%] [Cov:=====>                             16%][Progress:==========>                   35%] [Cov:======>                            18%][Progress:==========>                   35%] [Cov:======>                            19%][Progress:==========>                   35%] [Cov:========>                          24%][Progress:==========>                   35%] [Cov:=========>                         27%][Progress:==========>                   35%] [Cov:=========>                         28%][Progress:==========>                   35%] [Cov:==============>                    42%][Progress:==========>                   36%] [Cov:==============>                    42%][Progress:===========>                  38%] [Cov:====>                              14%][Progress:============>                 40%] [Cov:====>                              14%][Progress:============>                 40%] [Cov:=========>                         28%][Progress:============>                 41%] [Cov:====>                              13%][Progress:============>                 41%] [Cov:====>                              14%][Progress:============>                 43%] [Cov:====>                              12%][Progress:============>                 43%] [Cov:====>                              14%][Progress:============>                 43%] [Cov:=========>                         27%][Progress:=============>                45%] [Cov:==================>                53%][Progress:=============>                46%] [Cov:==================>                53%][Progress:==============>               48%] [Cov:=================>                 49%][Progress:===============>              50%] [Cov:=================>                 49%][Progress:===============>              50%] [Cov:==================>                53%][Progress:===============>              51%] [Cov:==================>                53%][Progress:===============>              53%] [Cov:==================>                53%][Progress:===============>              53%] [Cov:==================>                54%][Progress:================>             55%] [Cov:================>                  48%][Progress:================>             55%] [Cov:==================>                53%][Progress:===================>          65%] [Cov:==================>                54%][Progress:====================>         68%] [Cov:=================>                 49%][Progress:====================>         68%] [Cov:==================>                53%][Progress:=====================>        70%] [Cov:================>                  48%][Progress:=====================>        70%] [Cov:==================>                53%][Progress:=====================>        71%] [Cov:==================>                53%][Progress:=====================>        71%] [Cov:==================>                54%][Progress:=====================>        73%] [Cov:==================>                53%][Progress:======================>       75%] [Cov:==================>                53%][Progress:======================>       75%] [Cov:==================>                54%][Progress:======================>       76%] [Cov:==================>                53%][Progress:=======================>      78%] [Cov:==================>                54%][Progress:========================>     80%] [Cov:==================>                54%][Progress:========================>     81%] [Cov:==================>                54%][Progress:========================>     83%] [Cov:==================>                54%][Progress:========================>     83%] [Cov:===================>               55%][Progress:========================>     83%] [Cov:===================>               56%][Progress:=========================>    85%] [Cov:===================>               57%][Progress:=========================>    86%] [Cov:===================>               56%][Progress:=========================>    86%] [Cov:===================>               57%][Progress:==========================>   88%] [Cov:===================>               56%][Progress:==========================>   88%] [Cov:===================>               57%][Progress:===========================>  90%] [Cov:===================>               56%][Progress:===========================>  90%] [Cov:===================>               57%][Progress:===========================>  91%] [Cov:===================>               56%][Progress:===========================>  91%] [Cov:===================>               57%][Progress:===========================>  93%] [Cov:===================>               57%][Progress:============================> 95%] [Cov:===================>               56%][Progress:============================> 96%] [Cov:===================>               57%][Progress:============================> 96%] [Cov:====================>              58%][Progress:=============================>98%] [Cov:===================>               56%][Progress:=============================>98%] [Cov:=====================>             61%][Progress:==============================100%] [Cov:=====================>             60%][Progress:==============================100%] [Cov:=====================>             60%][Progress:==============================100%] [Cov:=====================>             61%]
* Search finished after 63s and 8 generations, 7539 statements, best individual has fitness: 1361.850211563958
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
[MASTER] 23:08:12.312 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Coverage of criterion LINE: 75%
* Total number of goals: 851
* Number of covered goals: 635
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 63%
* Total number of goals: 428
* Number of covered goals: 271
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 10
* Number of covered goals: 10
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 51%
* Total number of goals: 212
* Number of covered goals: 108
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 25%
* Total number of goals: 28
* Number of covered goals: 7
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 65%
* Total number of goals: 17
* Number of covered goals: 11
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 53%
* Total number of goals: 17
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 63%
* Total number of goals: 428
* Number of covered goals: 271
* Generated 23 tests with total length 394
* Resulting test suite's coverage: 62% (average coverage for all fitness functions)
* Compiling and checking tests
* Writing JUnit test case 'EigenDecompositionImpl_ESTest' to evosuite-tests
* Done!

* Computation finished
