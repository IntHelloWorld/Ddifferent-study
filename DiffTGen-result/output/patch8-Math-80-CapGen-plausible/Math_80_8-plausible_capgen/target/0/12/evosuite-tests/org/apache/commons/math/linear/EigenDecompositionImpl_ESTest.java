/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 28 15:03:22 GMT 2020
 */

package org.apache.commons.math.linear;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.linear.Array2DRowRealMatrix;
import org.apache.commons.math.linear.ArrayRealVector;
import org.apache.commons.math.linear.BlockRealMatrix;
import org.apache.commons.math.linear.DecompositionSolver;
import org.apache.commons.math.linear.EigenDecompositionImpl;
import org.apache.commons.math.linear.RealMatrix;
import org.apache.commons.math.linear.RealVector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EigenDecompositionImpl_ESTest extends EigenDecompositionImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = 51;
      BlockRealMatrix blockRealMatrix0 = new BlockRealMatrix(51, 51);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(blockRealMatrix0, 52);
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix();
      // Undeclared exception!
      eigenDecompositionImpl0.getVT();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (-692.2536410006358);
      doubleArray0[1] = 1.232595164407831E-28;
      doubleArray0[3] = 7.275957614183426E-12;
      doubleArray0[4] = 1874.134189115;
      ArrayRealVector arrayRealVector0 = new ArrayRealVector();
      ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, arrayRealVector0);
      ArrayRealVector arrayRealVector2 = new ArrayRealVector(doubleArray0, arrayRealVector1);
      ArrayRealVector arrayRealVector3 = new ArrayRealVector(arrayRealVector2);
      RealMatrix realMatrix0 = arrayRealVector3.outerProduct(doubleArray0);
      RealVector realVector0 = arrayRealVector3.mapSignum();
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (-692.2536410006358));
      double[] doubleArray1 = eigenDecompositionImpl0.getRealEigenvalues();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 2.0;
      doubleArray0[1] = 2332.988636231;
      doubleArray0[2] = Double.NaN;
      doubleArray0[3] = 2.0;
      doubleArray0[4] = 1.850821718107909E-10;
      doubleArray0[5] = 1749.1769163575043;
      doubleArray0[6] = (-782.4);
      doubleArray0[7] = 3.0;
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0);
      double[] doubleArray1 = new double[0];
      ArrayRealVector arrayRealVector1 = new ArrayRealVector(doubleArray1, arrayRealVector0);
      RealMatrix realMatrix0 = arrayRealVector0.outerProduct(arrayRealVector1);
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, Double.NaN);
      } catch(RuntimeException e) {
         //
         // 
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (-327.0);
      doubleArray0[1] = 4143.429452504132;
      doubleArray0[2] = (-3265.98);
      doubleArray0[2] = 282.8360051169054;
      doubleArray0[4] = 1943.732444947;
      doubleArray0[5] = 1032.444;
      doubleArray0[6] = (-1183.77250521);
      double[] doubleArray1 = new double[6];
      doubleArray1[0] = 4143.429452504132;
      doubleArray1[1] = 1943.732444947;
      doubleArray1[2] = 4143.429452504132;
      doubleArray1[3] = (-1183.77250521);
      doubleArray1[4] = 1943.732444947;
      doubleArray1[5] = 1943.732444947;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getV();
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      int int0 = 7;
      try { 
        eigenDecompositionImpl0.getRealEigenvalue(7);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (-327.0);
      doubleArray0[1] = 4143.429452504132;
      doubleArray0[2] = (-3265.98);
      doubleArray0[3] = 282.8360051169054;
      doubleArray0[4] = 1943.732444947;
      doubleArray0[6] = (-1183.77250521);
      double[] doubleArray1 = new double[6];
      doubleArray1[0] = 4143.429452504132;
      doubleArray1[1] = 1943.732444947;
      doubleArray1[2] = 4143.429452504132;
      doubleArray1[3] = (-1183.77250521);
      doubleArray1[4] = 1943.732444947;
      doubleArray1[5] = 1943.732444947;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getV();
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      int int0 = 7;
      DecompositionSolver decompositionSolver1 = eigenDecompositionImpl0.getSolver();
      try { 
        eigenDecompositionImpl0.getRealEigenvalue(7);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (-692.2536410006358);
      doubleArray0[1] = 1.232595164407831E-28;
      doubleArray0[2] = (-115.2141266491);
      doubleArray0[3] = 7.275957614183426E-12;
      doubleArray0[4] = 1874.134189115;
      ArrayRealVector arrayRealVector0 = new ArrayRealVector();
      ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, arrayRealVector0);
      ArrayRealVector arrayRealVector2 = new ArrayRealVector(doubleArray0, arrayRealVector1);
      ArrayRealVector arrayRealVector3 = new ArrayRealVector(arrayRealVector2);
      RealMatrix realMatrix0 = arrayRealVector3.outerProduct(doubleArray0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (-692.2536410006358));
      double[] doubleArray1 = eigenDecompositionImpl0.getRealEigenvalues();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (-327.0);
      doubleArray0[1] = 4143.429452504132;
      doubleArray0[2] = (-3265.98);
      doubleArray0[3] = 282.8360051169054;
      doubleArray0[4] = 1943.732444947;
      doubleArray0[5] = 1032.444;
      doubleArray0[6] = (-1183.77250521);
      double[] doubleArray1 = new double[6];
      doubleArray1[0] = 4143.429452504132;
      doubleArray1[1] = 1943.732444947;
      doubleArray1[2] = 4143.429452504132;
      doubleArray1[3] = (-1183.77250521);
      doubleArray1[4] = 1943.732444947;
      doubleArray1[5] = 1943.732444947;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getVT();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getV();
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      double double0 = new Double(4143.429452504132);
      RealMatrix realMatrix2 = eigenDecompositionImpl0.getD();
      double[] doubleArray2 = eigenDecompositionImpl0.getRealEigenvalues();
      RealMatrix realMatrix3 = eigenDecompositionImpl0.getVT();
      RealMatrix realMatrix4 = eigenDecompositionImpl0.getD();
      double[] doubleArray3 = eigenDecompositionImpl0.getImagEigenvalues();
      RealMatrix realMatrix5 = eigenDecompositionImpl0.getV();
      double double1 = eigenDecompositionImpl0.getDeterminant();
      try { 
        eigenDecompositionImpl0.getImagEigenvalue(7);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      double[][] doubleArray0 = new double[1][1];
      double[] doubleArray1 = new double[6];
      doubleArray1[0] = 907.32;
      doubleArray1[1] = (-1.0);
      doubleArray1[2] = 2508.9461225546397;
      doubleArray1[3] = 2477.7709436;
      doubleArray1[4] = 0.0;
      doubleArray1[5] = (-70.49801293);
      doubleArray0[0] = doubleArray1;
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
      RealMatrix realMatrix0 = array2DRowRealMatrix0.getColumnMatrix(0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (-70.49801293));
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      double double0 = eigenDecompositionImpl0.getDeterminant();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (-327.0);
      doubleArray0[1] = 4143.429452504132;
      doubleArray0[2] = (-3265.98);
      doubleArray0[3] = 282.8360051169054;
      doubleArray0[4] = 1943.732444947;
      doubleArray0[5] = 1032.444;
      doubleArray0[6] = (-1183.6885105076894);
      double[] doubleArray1 = new double[6];
      doubleArray1[0] = 4143.429452504132;
      doubleArray1[1] = 1943.732444947;
      doubleArray1[2] = 4143.429452504132;
      doubleArray1[3] = (-1183.6885105076894);
      doubleArray1[4] = 1943.732444947;
      doubleArray1[5] = 1943.732444947;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getV();
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      int int0 = 7;
      try { 
        eigenDecompositionImpl0.getRealEigenvalue(7);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double[][] doubleArray0 = new double[1][2];
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = 2347.06285554166;
      doubleArray1[1] = (-1.0);
      doubleArray1[2] = (-2838.340954691);
      doubleArray1[3] = 27.0;
      doubleArray1[4] = 100.0;
      doubleArray0[0] = doubleArray1;
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
      RealMatrix realMatrix0 = array2DRowRealMatrix0.scalarMultiply((-4350.619));
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 2347.06285554166);
      } catch(RuntimeException e) {
         //
         // no entry at indices (1, 0) in a 1x5 matrix
         //
         verifyException("org.apache.commons.math.linear.Array2DRowRealMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = 1805;
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(1805, 1805);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, (-3104.7382260887525));
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (-3514.3012181);
      doubleArray0[1] = 1787.38;
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
      ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, arrayRealVector0);
      ArrayRealVector arrayRealVector2 = new ArrayRealVector(arrayRealVector1, true);
      arrayRealVector0.set((-1329.21133414));
      RealVector realVector0 = arrayRealVector1.mapCbrt();
      ArrayRealVector arrayRealVector3 = new ArrayRealVector(arrayRealVector2, doubleArray0);
      RealMatrix realMatrix0 = arrayRealVector3.outerProduct(doubleArray0);
      ArrayRealVector arrayRealVector4 = new ArrayRealVector(doubleArray0);
      double double0 = arrayRealVector3.dotProduct(arrayRealVector4);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 1787.38);
      double[] doubleArray1 = eigenDecompositionImpl0.getRealEigenvalues();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getV();
      double double1 = eigenDecompositionImpl0.getRealEigenvalue(0);
      try { 
        eigenDecompositionImpl0.getImagEigenvalue(2140);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2140
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 1.0;
      doubleArray0[3] = 0.0;
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      RealMatrix realMatrix0 = array2DRowRealMatrix0.getSubMatrix(intArray0, intArray0);
      RealMatrix realMatrix1 = array2DRowRealMatrix0.getSubMatrix(0, 0, 0, 0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix1, 6.283185307179586);
      RealMatrix realMatrix2 = eigenDecompositionImpl0.getV();
      RealVector realVector0 = eigenDecompositionImpl0.getEigenvector(0);
      double[] doubleArray1 = eigenDecompositionImpl0.getImagEigenvalues();
      RealMatrix realMatrix3 = eigenDecompositionImpl0.getV();
      RealMatrix realMatrix4 = eigenDecompositionImpl0.getV();
      double[] doubleArray2 = eigenDecompositionImpl0.getRealEigenvalues();
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      double double0 = eigenDecompositionImpl0.getRealEigenvalue(0);
      double[] doubleArray3 = eigenDecompositionImpl0.getImagEigenvalues();
      double[] doubleArray4 = eigenDecompositionImpl0.getRealEigenvalues();
      double[] doubleArray5 = eigenDecompositionImpl0.getImagEigenvalues();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 1679.36976315463;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 1374.0;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = 2.0;
      doubleArray0[5] = 188.7777606;
      doubleArray0[6] = 0.9999999999999998;
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, true);
      RealMatrix realMatrix0 = arrayRealVector0.outerProduct(doubleArray0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 2.0);
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getV();
      RealMatrix realMatrix2 = eigenDecompositionImpl0.getV();
      RealMatrix realMatrix3 = eigenDecompositionImpl0.getD();
      RealMatrix realMatrix4 = eigenDecompositionImpl0.getD();
      RealMatrix realMatrix5 = eigenDecompositionImpl0.getD();
      RealMatrix realMatrix6 = eigenDecompositionImpl0.getVT();
      RealMatrix realMatrix7 = eigenDecompositionImpl0.getD();
      double[] doubleArray1 = eigenDecompositionImpl0.getImagEigenvalues();
      RealMatrix realMatrix8 = eigenDecompositionImpl0.getV();
      int int0 = 190;
      try { 
        eigenDecompositionImpl0.getEigenvector(190);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 190
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BlockRealMatrix blockRealMatrix0 = new BlockRealMatrix(2240, 2240);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(blockRealMatrix0, (-1864.292548561));
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BlockRealMatrix blockRealMatrix0 = new BlockRealMatrix(1, 1);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(blockRealMatrix0, (-2226.9674955385));
      try { 
        eigenDecompositionImpl0.getEigenvector(1);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl((RealMatrix) null, 928.9286483087);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int int0 = 551;
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(551, 551);
      int int1 = 13;
      RealMatrix realMatrix0 = array2DRowRealMatrix0.getColumnMatrix(13);
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 13);
      } catch(RuntimeException e) {
         //
         // a 551x1 matrix was provided instead of a square matrix
         //
         verifyException("org.apache.commons.math.linear.TriDiagonalTransformer", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, (-2728.9367));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 488.4491680477;
      doubleArray0[1] = 3716.323;
      doubleArray0[2] = 1.0E-12;
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, 71.94702165424);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix();
      double double0 = array2DRowRealMatrix0.getNorm();
      boolean boolean0 = array2DRowRealMatrix0.isSquare();
      String string0 = array2DRowRealMatrix0.toString();
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, 3064.9);
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.linear.TriDiagonalTransformer", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 582.728526021;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = Double.NEGATIVE_INFINITY;
      doubleArray0[3] = 2641.84;
      doubleArray0[4] = 0.0;
      doubleArray0[5] = 0.0;
      doubleArray0[6] = (-841.3065657);
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, 0.0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl((double[]) null, (double[]) null, 0.0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = Double.NEGATIVE_INFINITY;
      doubleArray0[1] = (-186.9633310615);
      doubleArray0[2] = 0.0;
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, 4298.5774838);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 2.0;
      doubleArray0[1] = 2332.988636231;
      doubleArray0[2] = Double.NaN;
      doubleArray0[3] = 2.0;
      doubleArray0[4] = 1.850821718107909E-10;
      doubleArray0[6] = 0.0;
      doubleArray0[7] = 3.0;
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0);
      double[] doubleArray1 = new double[0];
      ArrayRealVector arrayRealVector1 = new ArrayRealVector(doubleArray1, arrayRealVector0);
      RealMatrix realMatrix0 = arrayRealVector0.outerProduct(arrayRealVector1);
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, Double.NaN);
      } catch(RuntimeException e) {
         //
         // 
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (-692.2536410006358);
      doubleArray0[1] = 1.232595164407831E-28;
      doubleArray0[2] = (-115.2141266491);
      doubleArray0[3] = 7.275957614183426E-12;
      doubleArray0[4] = 1874.134189115;
      ArrayRealVector arrayRealVector0 = new ArrayRealVector();
      ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, arrayRealVector0);
      ArrayRealVector arrayRealVector2 = new ArrayRealVector(doubleArray0, arrayRealVector1);
      ArrayRealVector arrayRealVector3 = new ArrayRealVector(arrayRealVector2);
      RealMatrix realMatrix0 = arrayRealVector3.outerProduct(doubleArray0);
      RealVector realVector0 = arrayRealVector3.mapSignum();
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (-692.2536410006358));
      double[] doubleArray1 = eigenDecompositionImpl0.getRealEigenvalues();
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 2351.1589;
      doubleArray0[3] = 4069.5197343;
      doubleArray0[4] = 1.5;
      doubleArray0[5] = (-1040.7848589467);
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
      RealMatrix realMatrix0 = array2DRowRealMatrix0.scalarAdd(0.0);
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 1.5);
      } catch(RuntimeException e) {
         //
         // a 6x1 matrix was provided instead of a square matrix
         //
         verifyException("org.apache.commons.math.linear.TriDiagonalTransformer", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = Double.POSITIVE_INFINITY;
      doubleArray0[1] = 0.333;
      doubleArray0[2] = 939.0;
      doubleArray0[0] = 0.0;
      doubleArray0[4] = (-3548.6840894);
      doubleArray0[5] = (-1.0);
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = (-1.0);
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (-1772.771154625);
      doubleArray0[1] = 2498.455792479731;
      doubleArray0[2] = (-1772.771154625);
      doubleArray0[3] = 0.0;
      doubleArray0[4] = 2615.4238399849;
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, 2615.4238399849);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (-327.0);
      doubleArray0[1] = 4143.429452504132;
      doubleArray0[2] = (-3265.98);
      doubleArray0[3] = 282.8360051169054;
      doubleArray0[4] = 1943.732444947;
      doubleArray0[5] = 1032.444;
      doubleArray0[6] = (-1183.77250521);
      double[] doubleArray1 = new double[6];
      doubleArray1[0] = 4143.429452504132;
      doubleArray1[1] = 1943.732444947;
      doubleArray1[2] = 4143.429452504132;
      doubleArray1[3] = (-1183.77250521);
      doubleArray1[4] = 1943.732444947;
      doubleArray1[5] = 1943.732444947;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getV();
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      int int0 = 7;
      try { 
        eigenDecompositionImpl0.getRealEigenvalue(7);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      double[][] doubleArray0 = new double[1][1];
      double[] doubleArray1 = new double[6];
      doubleArray1[0] = 907.32;
      doubleArray1[1] = (-1.0);
      doubleArray1[2] = 2508.9461225546397;
      doubleArray1[4] = 0.0;
      doubleArray1[5] = (-70.49801293);
      doubleArray0[0] = doubleArray1;
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
      RealMatrix realMatrix0 = array2DRowRealMatrix0.getColumnMatrix(0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (-70.49801293));
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      double double0 = eigenDecompositionImpl0.getDeterminant();
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (-1210.895608399);
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, 3942.624682115513);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      BlockRealMatrix blockRealMatrix0 = new BlockRealMatrix(51, 51);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(blockRealMatrix0, (-2226.9674955385));
      // Undeclared exception!
      eigenDecompositionImpl0.getEigenvector(51);
  }
}
