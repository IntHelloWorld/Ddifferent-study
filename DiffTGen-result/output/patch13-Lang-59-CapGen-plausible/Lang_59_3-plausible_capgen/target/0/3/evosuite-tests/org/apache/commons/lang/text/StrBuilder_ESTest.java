/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 28 19:04:38 GMT 2020
 */

package org.apache.commons.lang.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.Writer;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.NoSuchElementException;
import java.util.function.Consumer;
import org.apache.commons.lang.text.StrBuilder;
import org.apache.commons.lang.text.StrMatcher;
import org.apache.commons.lang.text.StrTokenizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StrBuilder_ESTest extends StrBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid length: ");
      int int0 = strBuilder0.capacity();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(0L);
      char[] charArray0 = new char[2];
      charArray0[0] = 'E';
      charArray0[1] = '!';
      int int1 = strBuilder_StrBuilderReader0.read(charArray0);
      long long1 = strBuilder_StrBuilderReader0.skip(1L);
      long long2 = strBuilder_StrBuilderReader0.skip(48);
      StrMatcher strMatcher0 = StrMatcher.charMatcher('a');
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.replaceFirst('D', 'T');
      StrBuilder strBuilder3 = strBuilder2.replaceAll('a', 'q');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoredChar('!');
      StrBuilder strBuilder4 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "Invalid length: ");
      int int2 = strBuilder2.indexOf('j');
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      int int0 = 1677;
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) "Invalid offset: ", 1677, 'G');
      String string0 = strBuilder1.toString();
      String string1 = "V4Ud";
      StrBuilder strBuilder2 = strBuilder0.replaceFirst(string0, "V4Ud");
      int int1 = (-1831);
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt((-1831));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1831
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(5304);
      StrBuilder strBuilder1 = strBuilder0.replaceAll("length must be valid", "2zA//L\"y");
      StrBuilder strBuilder2 = strBuilder1.append((Object) "2zA//L\"y");
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder3 = strBuilder1.replace((StrMatcher) strMatcher_TrimMatcher0, "length must be valid", 0, 5304, 0);
      StrBuilder strBuilder4 = strBuilder1.deleteFirst('^');
      String string0 = strBuilder0.leftString(0);
      StrBuilder strBuilder5 = strBuilder2.setNewLineText("Oi`o|06vOi");
      int int0 = StrBuilder.CAPACITY;
      boolean boolean0 = strBuilder1.equalsIgnoreCase(strBuilder2);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(5304);
      strBuilder_StrBuilderWriter0.write(32);
      StrMatcher strMatcher0 = StrMatcher.charMatcher('^');
      StrBuilder strBuilder6 = strBuilder4.trim();
      StrBuilder strBuilder7 = strBuilder6.replaceFirst((StrMatcher) strMatcher_TrimMatcher0, (String) null);
      StrBuilder strBuilder8 = strBuilder7.append((String) null, 1133, 1133);
      StrBuilder strBuilder9 = strBuilder4.replaceFirst(strMatcher0, "^%5JSDo");
      int int1 = strBuilder1.lastIndexOf(strMatcher0, (-4266));
      boolean boolean1 = strBuilder6.isEmpty();
      StrBuilder strBuilder10 = strBuilder7.deleteFirst("length must be valid");
      // Undeclared exception!
      try { 
        strBuilder5.deleteCharAt(1133);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1133
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(true);
      StrBuilder strBuilder2 = strBuilder0.append("=,Nbia-khT");
      StrBuilder strBuilder3 = strBuilder1.appendNewLine();
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder1;
      objectArray0[2] = (Object) "=,Nbia-khT";
      objectArray0[3] = (Object) strBuilder0;
      String string0 = strBuilder2.leftString(1959);
      StrBuilder strBuilder4 = strBuilder2.append(strBuilder1);
      StrBuilder strBuilder5 = strBuilder4.deleteAll("=,Nbia-khT");
      strBuilder4.validateIndex(0);
      objectArray0[4] = (Object) strBuilder1;
      StrBuilder strBuilder6 = strBuilder2.appendWithSeparators(objectArray0, "=,Nbia-khT");
      String string1 = strBuilder0.substring(0);
      StrBuilder strBuilder7 = strBuilder0.insert(0, 'S');
      Writer writer0 = strBuilder7.asWriter();
      StrBuilder strBuilder8 = strBuilder4.deleteAll("true\ntrue\norg.apache.commons.lang.text.StrBuilder@0000000001=,Nbia-khTorg.apache.commons.lang.text.StrBuilder@0000000001=,Nbia-khTjava.lang.String@0000000002=,Nbia-khTorg.apache.commons.lang.text.StrBuilder@0000000001=,Nbia-khTorg.apache.commons.lang.text.StrBuilder@0000000001");
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      StrBuilder strBuilder9 = strBuilder5.appendWithSeparators((Collection) linkedList0, "a3d+VjRvscX7.\"");
      // Undeclared exception!
      try { 
        strBuilder3.deleteCharAt(1959);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1959
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((StringBuffer) null);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("+^&^0Nn");
      int int0 = (-796);
      String string0 = strBuilder0.leftString((-796));
      StrBuilder strBuilder1 = strBuilder0.deleteCharAt(0);
      StrBuilder strBuilder2 = strBuilder0.setNewLineText("");
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("+^&^0Nn");
      char[] charArray0 = new char[5];
      charArray0[0] = 'U';
      charArray0[1] = 'U';
      charArray0[2] = 't';
      charArray0[3] = 'I';
      strBuilder1.buffer = charArray0;
      charArray0[4] = 'o';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      // Undeclared exception!
      try { 
        strBuilder0.contains(strMatcher0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-28));
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst((StrMatcher) strMatcher_TrimMatcher0, "RVRse@Q@;#2;y_;R");
      int int0 = (-33);
      String string0 = strBuilder0.rightString((-33));
      StrBuilder strBuilder2 = strBuilder1.replaceAll('m', 'm');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(0L);
      // Undeclared exception!
      try { 
        strBuilder0.substring((-33));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -33
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strMatcher0;
      objectArray0[2] = (Object) strMatcher0;
      objectArray0[3] = (Object) strMatcher0;
      Object object0 = new Object();
      objectArray0[4] = object0;
      objectArray0[5] = (Object) strMatcher0;
      objectArray0[6] = (Object) strMatcher0;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "S+wM)y$C1 >)il");
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      int int1 = strBuilder0.lastIndexOf('');
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("+^&40Nn");
      String string0 = strBuilder0.leftString((-796));
      StrBuilder strBuilder1 = strBuilder0.deleteCharAt(0);
      StrBuilder strBuilder2 = strBuilder0.setNewLineText("");
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("+^&40Nn");
      char[] charArray0 = new char[5];
      charArray0[0] = 'U';
      charArray0[1] = 'U';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      charArray0[2] = 't';
      charArray0[3] = 'I';
      charArray0[4] = 'o';
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher(charArray0);
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      int int0 = strBuilder2.lastIndexOf(strMatcher0);
      strBuilder2.size = (-796);
      int int1 = strBuilder1.size();
      int int2 = strBuilder1.lastIndexOf((StrMatcher) null);
      StrBuilder strBuilder3 = strBuilder0.appendNewLine();
      boolean boolean1 = strBuilder1.contains("OBhgn:");
      StrBuilder strBuilder4 = strBuilder3.deleteAll('t');
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid length: ");
      int int0 = strBuilder0.capacity();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(0L);
      char[] charArray0 = new char[2];
      StrBuilder strBuilder1 = strBuilder0.append("Invalid length: ");
      charArray0[0] = 'E';
      charArray0[1] = '!';
      int int1 = strBuilder_StrBuilderReader0.read(charArray0);
      long long1 = strBuilder_StrBuilderReader0.skip(1L);
      long long2 = strBuilder_StrBuilderReader0.skip(48);
      StrMatcher strMatcher0 = StrMatcher.charMatcher('a');
      StrBuilder strBuilder2 = strBuilder0.deleteFirst(strMatcher0);
      StrBuilder strBuilder3 = strBuilder0.replaceFirst('D', 'T');
      StrBuilder strBuilder4 = strBuilder3.replaceAll('a', 'q');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoredChar('!');
      StrBuilder strBuilder5 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "Invalid length: ");
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      String string0 = strBuilder0.substring(0);
      StrBuilder strBuilder1 = strBuilder0.append('y');
      char[] charArray0 = new char[5];
      charArray0[0] = 'y';
      charArray0[1] = 'y';
      charArray0[2] = 'y';
      charArray0[3] = 'y';
      charArray0[4] = 'y';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, (-2264), 4);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 4
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("+^&40Nn");
      String string0 = strBuilder0.leftString((-796));
      StrBuilder strBuilder1 = strBuilder0.deleteCharAt(0);
      StrBuilder strBuilder2 = strBuilder0.setNewLineText("");
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("+^&40Nn");
      char[] charArray0 = new char[5];
      charArray0[0] = 'U';
      charArray0[1] = 'U';
      charArray0[2] = 't';
      charArray0[3] = 'I';
      charArray0[4] = 'o';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      int int0 = strBuilder2.lastIndexOf(strMatcher0);
      strBuilder2.size = (-796);
      int int1 = strBuilder1.size();
      int int2 = strBuilder1.lastIndexOf((StrMatcher) null);
      StrBuilder strBuilder3 = strBuilder0.appendNewLine();
      boolean boolean1 = strBuilder1.contains("OBhgn:");
      // Undeclared exception!
      try { 
        strBuilder0.getChars(charArray0);
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("7");
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) null, "vK0~ Pj!TwVy5*B^");
      StrBuilder strBuilder2 = strBuilder1.append("7");
      StrBuilder strBuilder3 = strBuilder0.deleteAll("7");
      StrBuilder strBuilder4 = strBuilder0.append(true);
      char[] charArray0 = new char[6];
      charArray0[0] = 'e';
      charArray0[1] = '2';
      charArray0[2] = '(';
      charArray0[3] = 'A';
      charArray0[4] = '9';
      charArray0[5] = 'U';
      StrBuilder strBuilder5 = strBuilder2.append(charArray0);
      String string0 = strBuilder3.midString(255, 255);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrMatcher strMatcher0 = null;
      char[] charArray0 = new char[5];
      charArray0[0] = '(';
      charArray0[1] = 'b';
      charArray0[2] = '|';
      charArray0[3] = '8';
      charArray0[4] = 'I';
      // Undeclared exception!
      try { 
        strBuilder0.insert(0, charArray0, (-837), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: -837
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      int int0 = (-1469);
      StrBuilder strBuilder0 = new StrBuilder((-1469));
      String string0 = "Invalid length: ";
      StrBuilder strBuilder1 = new StrBuilder("Invalid length: ");
      boolean boolean0 = strBuilder0.startsWith((String) null);
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      // Undeclared exception!
      try { 
        strBuilder1.validateIndex(97);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 97
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.equals((Object) null);
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder2 = strBuilder0.deleteAll('{');
      int int0 = 13;
      String string0 = "]rFJIBc";
      // Undeclared exception!
      try { 
        strBuilder2.insert(13, "]rFJIBc");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 13
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      String string0 = "*s@D'A}BG9#XZ,LqTp2";
      StrBuilder strBuilder0 = new StrBuilder("*s@D'A}BG9#XZ,LqTp2");
      boolean boolean0 = strBuilder0.endsWith("*s@D'A}BG9#XZ,LqTp2");
      String string1 = ".os;.~=$";
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(".os;.~=$", "*s@D'A}BG9#XZ,LqTp2");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      int int0 = strBuilder1.indexOf(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.setNewLineText("path.separator");
      // Undeclared exception!
      try { 
        strBuilder0.setLength((-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.insert(0, '');
      StrBuilder strBuilder2 = strBuilder1.append(48);
      int int0 = strBuilder0.indexOf("(-/!8];V*", (-1482));
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[3];
      charArray0[0] = 'z';
      StrBuilder strBuilder1 = strBuilder0.append(strBuilder0);
      charArray0[1] = 'f';
      StrBuilder strBuilder2 = strBuilder0.insert(0, false);
      StrBuilder strBuilder3 = strBuilder0.deleteAll("j0F=>e,#b-o1Eoo");
      charArray0[2] = 'M';
      strBuilder0.getChars(0, 0, charArray0, 0);
      StrBuilder strBuilder4 = strBuilder2.replaceFirst('i', 'z');
      StrBuilder strBuilder5 = strBuilder4.insert(0, "ESia");
      StrBuilder strBuilder6 = strBuilder5.setLength(0);
      StrBuilder strBuilder7 = strBuilder3.minimizeCapacity();
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.contains("FfS#?2tF-@]i");
      StrBuilder strBuilder1 = strBuilder0.replaceAll("", "FfS#?2tF-@]i");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("FfS#?2tF-@]i");
      StrBuilder strBuilder2 = strBuilder0.appendNewLine();
      String string0 = strBuilder0.leftString((-678));
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("1.6");
      int int0 = strBuilder1.indexOf(strMatcher0);
      int int1 = 57;
      // Undeclared exception!
      try { 
        strBuilder1.insert(57, (double) (-678));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 57
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(565);
      StrBuilder strBuilder1 = strBuilder0.append(3069.5151);
      StrBuilder strBuilder2 = strBuilder0.minimizeCapacity();
      Reader reader0 = strBuilder2.asReader();
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) strBuilder0;
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrBuilder strBuilder3 = strBuilder1.deleteFirst(strMatcher0);
      Writer writer0 = strBuilder3.asWriter();
      objectArray0[1] = (Object) strBuilder1;
      objectArray0[2] = (Object) strBuilder0;
      objectArray0[3] = (Object) strBuilder1;
      objectArray0[4] = (Object) strBuilder2;
      StrBuilder strBuilder4 = strBuilder1.appendWithSeparators(objectArray0, "LINUX");
      String string0 = strBuilder4.leftString(0);
      StrBuilder strBuilder5 = strBuilder1.replaceFirst('3', '3');
      int int0 = 857;
      StrBuilder strBuilder6 = strBuilder5.deleteFirst('_');
      StrBuilder strBuilder7 = strBuilder5.append("LINUX", 0, 0);
      // Undeclared exception!
      try { 
        strBuilder5.insert(857, false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 857
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrBuilder strBuilder2 = strBuilder1.insert(0, 0L);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      StrBuilder strBuilder3 = strBuilder1.replaceAll(strMatcher0, "B?SY;>1#mxLlIM/k^&");
      StrBuilder strBuilder4 = strBuilder1.append("B?SY;>1#mxLlIM/k^&", 0, 0);
      int int0 = strBuilder4.indexOf(strMatcher0);
      String string0 = strBuilder_StrBuilderTokenizer0.previousToken();
      StrBuilder strBuilder5 = strBuilder1.appendFixedWidthPadLeft(0, 0, '_');
      char[] charArray0 = new char[7];
      charArray0[0] = 'n';
      StrBuilder strBuilder6 = strBuilder1.append(strBuilder2);
      charArray0[1] = '\'';
      StrMatcher strMatcher1 = StrMatcher.charMatcher('0');
      charArray0[2] = 'S';
      charArray0[3] = '\\';
      charArray0[4] = ':';
      charArray0[5] = '\'';
      charArray0[6] = '{';
      char[] charArray1 = strBuilder3.getChars(charArray0);
      char[] charArray2 = strBuilder0.toCharArray();
      char[] charArray3 = strBuilder0.getChars(charArray1);
      StrBuilder strBuilder7 = new StrBuilder("B?SY;>1#mxLlIM/k^&");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder7.new StrBuilderReader();
      int int1 = strBuilder_StrBuilderReader0.read();
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      Reader reader0 = strBuilder0.asReader();
      int int1 = strBuilder0.hashCode();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      String string0 = "UQl";
      int int2 = (-3616);
      int int3 = 0;
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("UQl", 0, (-3616));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2750));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("]eY", (-1408), (-1408));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      int int0 = 1697;
      StrBuilder strBuilder0 = new StrBuilder(1697);
      char char0 = '';
      StrBuilder strBuilder1 = strBuilder0.appendPadding(1697, '');
      int int1 = 1443;
      StrBuilder strBuilder2 = strBuilder1.append(strBuilder0);
      StrBuilder strBuilder3 = strBuilder1.insert(1443, 1491L);
      char[] charArray0 = new char[2];
      charArray0[0] = '';
      char char1 = '';
      StrBuilder strBuilder4 = strBuilder0.deleteAll('');
      // Undeclared exception!
      try { 
        strBuilder4.append(strBuilder3, 1443, 1697);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[2];
      charArray0[0] = '=';
      charArray0[1] = 'A';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 0, 1460);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 1460
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("TH,H");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[4];
      charArray0[0] = '<';
      charArray0[1] = 'N';
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset(charArray0);
      StrTokenizer strTokenizer1 = strBuilder_StrBuilderTokenizer0.setDelimiterChar('7');
      charArray0[2] = '$';
      charArray0[3] = 'n';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 0, 0);
      StrBuilder strBuilder1 = strBuilder0.setNullText("MeLv$,I\"8P=J+RK7(");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      Integer integer0 = new Integer(0);
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('N');
      // Undeclared exception!
      try { 
        strBuilder1.replace((StrMatcher) strMatcher_CharMatcher0, "#<|?'#).ax8^d*h4H%", 0, (-2892), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(117);
      StrBuilder strBuilder1 = strBuilder0.setNullText("tx=#a}g;,Yme3)");
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("tx=#a}g;,Yme3)");
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft(154, 117, 'P');
      // Undeclared exception!
      try { 
        strBuilder2.deleteCharAt(154);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 154
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1482));
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(101, (-646), 'L');
      StrBuilder strBuilder2 = strBuilder1.deleteFirst('L');
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      StrBuilder strBuilder3 = strBuilder0.appendWithSeparators((Collection) linkedList0, "dq[B4#");
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      char[] charArray0 = new char[2];
      charArray0[0] = 'L';
      charArray0[1] = 'L';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder3.lastIndexOf(strMatcher0, 5);
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadRight(5, 5, 'w');
      // Undeclared exception!
      try { 
        strBuilder4.insert((-1482), (double) 5);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1482
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('P', 'P');
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrMatcher strMatcher0 = StrMatcher.charMatcher('y');
      StrBuilder strBuilder2 = strBuilder0.deleteAll((StrMatcher) strMatcher_NoMatcher0);
      StrBuilder strBuilder3 = strBuilder1.append(0.0F);
      boolean boolean0 = strBuilder0.equals(strBuilder1);
      StrBuilder strBuilder4 = strBuilder0.appendPadding(1295, '5');
      int int0 = strBuilder1.indexOf('t', 1295);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder5 = strBuilder0.appendWithSeparators((Collection) linkedList0, (String) null);
      boolean boolean1 = strBuilder3.equals(strBuilder0);
      StrBuilder strBuilder6 = strBuilder4.insert(1, 1295);
      StrBuilder strBuilder7 = strBuilder0.deleteFirst((String) null);
      char[] charArray0 = new char[3];
      charArray0[0] = 't';
      charArray0[1] = 't';
      charArray0[2] = 'P';
      StrBuilder strBuilder8 = strBuilder5.append(charArray0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.insert(0, "org.apache.commons.lang.text.StrTokenizer");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[8];
      charArray0[0] = '`';
      charArray0[1] = 'c';
      charArray0[2] = '{';
      charArray0[3] = 't';
      charArray0[4] = 'P';
      charArray0[5] = 'X';
      charArray0[6] = 'C';
      charArray0[7] = 'b';
      strBuilder_StrBuilderWriter0.write(charArray0, 0, 0);
      StrBuilder strBuilder2 = strBuilder0.replaceFirst('`', 'q');
      String string0 = "{@QP3/k@/Mm<YLR*";
      strBuilder_StrBuilderWriter0.write("{@QP3/k@/Mm<YLR*");
      int int0 = 3368;
      // Undeclared exception!
      try { 
        strBuilder2.insert(3368, (double) 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3368
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.vm.info");
      char char0 = 'J';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(384, 5437, 'J');
      String string0 = strBuilder0.substring(0);
      StrBuilder strBuilder2 = strBuilder0.replaceAll((StrMatcher) null, (String) null);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrBuilder strBuilder3 = strBuilder0.replaceAll((StrMatcher) null, "java.vm.info");
      StrBuilder strBuilder4 = strBuilder3.appendNull();
      strBuilder_StrBuilderWriter0.write(string0, 587, 3927);
      boolean boolean0 = strBuilder3.contains((StrMatcher) null);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("ck9ZExn", 463, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Tkd2aH<[<Q(cHM*8");
      StrBuilder strBuilder1 = new StrBuilder("sIz@`U#(d ;L");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[2];
      charArray0[0] = '|';
      charArray0[1] = '/';
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset(charArray0);
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Iterator) strTokenizer0, (String) null);
      StrBuilder strBuilder3 = strBuilder1.appendNewLine();
      StrBuilder strBuilder4 = strBuilder3.append((char[]) null);
      strBuilder4.size = 3822;
      // Undeclared exception!
      try { 
        strBuilder1.append(1.0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoredChar('q');
      String string1 = "";
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "");
      int int0 = 2;
      // Undeclared exception!
      try { 
        strBuilder0.insert(2, (long) 2);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = strBuilder0.getChars((char[]) null);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.toString();
      int int1 = 930;
      // Undeclared exception!
      try { 
        strBuilder0.insert(4, 0.0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 4
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.appendPadding(0, 'c');
      StrBuilder strBuilder2 = strBuilder0.deleteAll("");
      Object[] objectArray0 = new Object[7];
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      objectArray0[0] = object0;
      objectArray0[1] = (Object) strBuilder1;
      objectArray0[2] = (Object) strBuilder2;
      Object object1 = strBuilder_StrBuilderTokenizer0.clone();
      objectArray0[3] = object1;
      objectArray0[4] = (Object) strBuilder0;
      Object object2 = new Object();
      objectArray0[5] = object2;
      Object object3 = new Object();
      objectArray0[6] = object3;
      StrBuilder strBuilder3 = strBuilder0.appendWithSeparators(objectArray0, "");
      char[] charArray0 = new char[6];
      charArray0[0] = 'c';
      charArray0[1] = 'c';
      charArray0[2] = 'c';
      charArray0[3] = 'c';
      charArray0[4] = 'c';
      charArray0[5] = 'c';
      char[] charArray1 = strBuilder2.getChars(charArray0);
      StrBuilder strBuilder4 = strBuilder1.insert(0, 'c');
      char[] charArray2 = new char[1];
      charArray2[0] = 'c';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(0, 2, charArray2, 0);
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      String string0 = "bK234;khNU6@w96,x\"";
      StrBuilder strBuilder0 = new StrBuilder("bK234;khNU6@w96,x\"");
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      int int0 = strBuilder0.length();
      StrBuilder strBuilder1 = strBuilder0.append(false);
      StrBuilder strBuilder2 = new StrBuilder(31);
      StrBuilder strBuilder3 = strBuilder1.appendFixedWidthPadLeft((Object) strBuilder2, 18, 'w');
      StrBuilder strBuilder4 = strBuilder0.appendPadding(18, '*');
      // Undeclared exception!
      try { 
        strBuilder0.insert(2336, 0.0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2336
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.runtime.name");
      boolean boolean0 = strBuilder0.endsWith("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      String string0 = strBuilder0.rightString(3572);
      char[] charArray0 = new char[9];
      charArray0[0] = '8';
      charArray0[1] = 'C';
      charArray0[2] = 'S';
      charArray0[3] = 'j';
      charArray0[4] = '-';
      charArray0[5] = '9';
      charArray0[6] = '0';
      charArray0[7] = 'u';
      charArray0[8] = '#';
      StrBuilder strBuilder1 = strBuilder0.insert(0, charArray0);
      strBuilder_StrBuilderReader0.mark(0);
      String string1 = strBuilder0.rightString(113);
      strBuilder_StrBuilderReader0.reset();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      StrBuilder strBuilder2 = strBuilder0.append((-1.0F));
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      int int0 = strBuilder0.lastIndexOf("org.apache.commons.lang.text.StrBuilder", 0);
      StrBuilder strBuilder2 = strBuilder1.deleteAll("org.apache.commons.lang.text.StrBuilder");
      char[] charArray0 = new char[8];
      charArray0[0] = 'T';
      charArray0[1] = '\\';
      charArray0[2] = '+';
      charArray0[3] = 'g';
      charArray0[4] = '+';
      charArray0[5] = 'Z';
      charArray0[6] = '.';
      charArray0[7] = 'E';
      StrBuilder strBuilder3 = strBuilder2.insert(0, charArray0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      int int1 = strBuilder0.lastIndexOf("");
      char[] charArray0 = new char[7];
      charArray0[0] = 'g';
      charArray0[1] = 'M';
      charArray0[2] = '*';
      char char0 = '>';
      StringBuffer stringBuffer0 = new StringBuffer("");
      StringBuffer stringBuffer1 = stringBuffer0.reverse();
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 102, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.insert(0, "");
      StrBuilder strBuilder2 = strBuilder0.replaceAll("", "");
      StrBuilder strBuilder3 = new StrBuilder();
      boolean boolean0 = strBuilder1.equals(strBuilder3);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(0);
      StrBuilder strBuilder4 = strBuilder2.insert(0, "");
      StrBuilder strBuilder5 = strBuilder3.appendPadding(0, 'l');
      char[] charArray0 = new char[2];
      charArray0[0] = 'l';
      charArray0[1] = 'l';
      strBuilder1.buffer = charArray0;
      StrBuilder strBuilder6 = strBuilder3.minimizeCapacity();
      int int0 = (-523);
      // Undeclared exception!
      try { 
        strBuilder2.substring(0, (-523));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Writer writer0 = strBuilder0.asWriter();
      String string0 = strBuilder0.getNewLineText();
      char char0 = 'p';
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(')', 'p');
      char[] charArray0 = new char[1];
      charArray0[0] = ')';
      StrBuilder strBuilder2 = strBuilder1.append(charArray0, 0, 0);
      StrBuilder strBuilder3 = strBuilder2.append((double) 0);
      StrBuilder strBuilder4 = strBuilder2.insert(0, (String) null);
      StrBuilder strBuilder5 = strBuilder1.deleteAll((StrMatcher) null);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder5.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 2, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[8];
      charArray0[0] = 'f';
      charArray0[1] = '6';
      charArray0[2] = 'b';
      charArray0[3] = ' ';
      charArray0[4] = 'n';
      charArray0[5] = 'L';
      charArray0[6] = 'q';
      charArray0[7] = 'l';
      // Undeclared exception!
      try { 
        strBuilder0.getChars((-2617), (-2617), charArray0, (-2617));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2617
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      char[] charArray0 = new char[4];
      charArray0[0] = 'E';
      charArray0[1] = 'c';
      charArray0[2] = 'F';
      charArray0[3] = '';
      strBuilder0.buffer = charArray0;
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(0, 0, 'N');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      String string0 = strBuilder1.toString();
      long long0 = strBuilder_StrBuilderReader0.skip(0);
      String string1 = strBuilder1.getNullText();
      Reader reader0 = strBuilder1.asReader();
      StrBuilder strBuilder2 = strBuilder0.insert(0, (-2610.91F));
      int int0 = strBuilder2.lastIndexOf("", 0);
      int int1 = strBuilder2.indexOf('k', 0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[6];
      charArray0[0] = '#';
      charArray0[1] = '';
      charArray0[2] = '3';
      charArray0[3] = 'I';
      charArray0[4] = 'e';
      charArray0[5] = '\\';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0, 1, 1);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(1906L);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrBuilder strBuilder2 = strBuilder1.replaceAll("", "");
      StrBuilder strBuilder3 = strBuilder0.append('-');
      int int0 = strBuilder1.indexOf(strMatcher0, 2418);
      int int1 = (-2086);
      // Undeclared exception!
      try { 
        strBuilder0.substring((-2086));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2086
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[2];
      charArray0[0] = 'g';
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.append("ktHq\":|w a3|d_,");
      // Undeclared exception!
      try { 
        strBuilder0.substring(32, 32);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('W');
      int int0 = strBuilder0.indexOf(strMatcher0, 4308);
      StrBuilder strBuilder1 = strBuilder0.append((Object) strBuilder_StrBuilderTokenizer0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(true);
      StrBuilder strBuilder2 = strBuilder0.append("=,Nbia-khT");
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder1;
      objectArray0[2] = (Object) "=,Nbia-khT";
      objectArray0[3] = (Object) strBuilder0;
      String string0 = strBuilder2.leftString(1959);
      StrBuilder strBuilder3 = strBuilder2.append(strBuilder1);
      StrBuilder strBuilder4 = strBuilder3.deleteAll("=,Nbia-khT");
      strBuilder3.validateIndex(0);
      objectArray0[4] = (Object) strBuilder1;
      StrBuilder strBuilder5 = strBuilder2.appendWithSeparators(objectArray0, "=,Nbia-khT");
      String string1 = strBuilder0.substring(0);
      StrBuilder strBuilder6 = strBuilder0.insert(0, 'S');
      Writer writer0 = strBuilder6.asWriter();
      StrBuilder strBuilder7 = strBuilder3.deleteAll("truetrueorg.apache.commons.lang.text.StrBuilder@0000000001=,Nbia-khTorg.apache.commons.lang.text.StrBuilder@0000000001=,Nbia-khTjava.lang.String@0000000002=,Nbia-khTorg.apache.commons.lang.text.StrBuilder@0000000001=,Nbia-khTorg.apache.commons.lang.text.StrBuilder@0000000001");
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2614));
      StrBuilder strBuilder1 = strBuilder0.append((float) (-2614));
      StrBuilder strBuilder2 = strBuilder0.trim();
      StrBuilder strBuilder3 = strBuilder0.deleteFirst('z');
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadLeft(0, 0, '|');
      char[] charArray0 = new char[8];
      charArray0[0] = 'z';
      charArray0[1] = 'z';
      charArray0[2] = '|';
      charArray0[3] = 'n';
      charArray0[4] = '|';
      charArray0[5] = '-';
      charArray0[6] = 'z';
      charArray0[7] = '|';
      StrBuilder strBuilder5 = strBuilder4.append(charArray0);
      String string0 = strBuilder0.getNullText();
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrBuilder strBuilder2 = strBuilder1.append(2829.18410276);
      boolean boolean0 = strBuilder0.startsWith("~");
      int int0 = strBuilder0.lastIndexOf("");
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      int int1 = strBuilder0.lastIndexOf(strMatcher0);
      int int2 = strBuilder0.lastIndexOf("", 0);
      int int3 = strBuilder2.indexOf("", 0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(0);
      strBuilder_StrBuilderReader0.close();
      StrBuilder strBuilder1 = strBuilder0.reverse();
      String string0 = strBuilder0.getNullText();
      int int0 = strBuilder1.indexOf('V', 3351);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      String string0 = strBuilder0.toString();
      int int0 = strBuilder0.lastIndexOf('<', 0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[6];
      charArray0[0] = '<';
      charArray0[1] = '<';
      charArray0[2] = '<';
      charArray0[3] = '<';
      charArray0[4] = '<';
      charArray0[5] = '<';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 0, (-1));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("T]!wDmwmkow]vFP!");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[6];
      charArray0[0] = '^';
      charArray0[1] = '^';
      charArray0[2] = '^';
      charArray0[3] = '^';
      charArray0[4] = '^';
      charArray0[5] = '^';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setTrimmerMatcher(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "T]!wDmwmkow]vFP!");
      int int0 = strBuilder0.lastIndexOf('^', 1880);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(115);
      int int0 = 3485;
      String string0 = "4W@B/Zs6V";
      String string1 = "tNeR5IrPt*iO)?F9PD";
      StrBuilder strBuilder1 = strBuilder0.replaceAll("4W@B/Zs6V", "tNeR5IrPt*iO)?F9PD");
      StrBuilder strBuilder2 = strBuilder0.appendPadding(3485, 'N');
      StrBuilder strBuilder3 = strBuilder2.appendPadding(3485, 'K');
      Integer integer0 = new Integer(115);
      StrBuilder strBuilder4 = strBuilder3.appendFixedWidthPadLeft((Object) integer0, 563, '~');
      char[] charArray0 = new char[3];
      charArray0[0] = '~';
      charArray0[1] = '~';
      charArray0[2] = '^';
      strBuilder4.buffer = charArray0;
      int int1 = 2689;
      // Undeclared exception!
      try { 
        strBuilder2.appendFixedWidthPadLeft(2689, 115, ']');
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3201);
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      char[] charArray0 = new char[6];
      int int0 = 102;
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft(9, 102, '\'');
      charArray0[0] = 'i';
      charArray0[1] = '#';
      charArray0[2] = '9';
      charArray0[3] = '4';
      charArray0[4] = 'v';
      charArray0[5] = 'g';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("C&Av+EVG?FnF\"");
      StrBuilder strBuilder3 = strBuilder1.replaceFirst(strMatcher0, "}");
      // Undeclared exception!
      try { 
        strBuilder0.insert(3201, 3201);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3201
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      Writer writer0 = strBuilder_StrBuilderWriter0.append('m');
      strBuilder_StrBuilderWriter0.flush();
      StrBuilder strBuilder1 = strBuilder0.delete(0, 0);
      char[] charArray0 = new char[9];
      charArray0[0] = 'm';
      charArray0[1] = 'm';
      charArray0[2] = 'm';
      charArray0[3] = 'm';
      charArray0[4] = 'S';
      charArray0[5] = 'm';
      charArray0[6] = 'm';
      charArray0[7] = 'm';
      charArray0[8] = 'X';
      strBuilder1.buffer = charArray0;
      StrBuilder strBuilder2 = strBuilder0.setLength(0);
      StrBuilder strBuilder3 = strBuilder0.appendPadding((-387), '*');
      char[] charArray1 = new char[3];
      charArray1[0] = 'm';
      charArray1[1] = 'm';
      charArray1[2] = '*';
      char[] charArray2 = strBuilder0.getChars(charArray1);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[0];
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      int int0 = 0;
      int int1 = (-1176);
      // Undeclared exception!
      try { 
        strBuilder1.charAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = strBuilder0.length();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[6];
      charArray0[0] = '1';
      charArray0[1] = 's';
      charArray0[2] = '+';
      charArray0[3] = 'f';
      charArray0[4] = ')';
      charArray0[5] = '=';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, (-2803), 101);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("");
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer0 = new Integer(44);
      boolean boolean0 = linkedList0.add(integer0);
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Collection) linkedList0, "/M:a!(p");
      // Undeclared exception!
      try { 
        strBuilder0.insert(911, "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 911
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      int int0 = (-3295);
      StrBuilder strBuilder0 = new StrBuilder((-3295));
      int int1 = 0;
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      Writer writer0 = strBuilder1.asWriter();
      // Undeclared exception!
      try { 
        strBuilder1.toCharArray((-3295), (-3295));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3295
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      boolean boolean0 = strBuilder0.isEmpty();
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrBuilder strBuilder2 = strBuilder1.insert(0, (long) 0);
      char[] charArray0 = new char[8];
      charArray0[0] = '\'';
      charArray0[1] = '&';
      charArray0[2] = '\'';
      charArray0[3] = 'Y';
      charArray0[4] = 'q';
      charArray0[5] = 'v';
      charArray0[6] = 'C';
      charArray0[7] = 'X';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      boolean boolean1 = strBuilder2.contains((StrMatcher) strMatcher_CharSetMatcher0);
      String string0 = strBuilder1.getNullText();
      StrBuilder strBuilder3 = strBuilder0.minimizeCapacity();
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      int int0 = (-1469);
      StrBuilder strBuilder0 = new StrBuilder((-1469));
      int int1 = 97;
      String string0 = "Invalid length: ";
      // Undeclared exception!
      try { 
        strBuilder0.replace(97, (-1469), "Invalid length: ");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      char[] charArray0 = new char[1];
      StrBuilder strBuilder0 = new StrBuilder((-984));
      boolean boolean0 = strBuilder0.isEmpty();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      String string0 = strBuilder0.rightString(178);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("+bF");
      boolean boolean0 = strBuilder0.startsWith("+bF");
      StrBuilder strBuilder1 = new StrBuilder();
      int int0 = 3497;
      int int1 = 101;
      // Undeclared exception!
      try { 
        strBuilder1.insert((-2221), (-405L));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2221
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("V7V`cys|i");
      StrBuilder strBuilder1 = strBuilder0.deleteAll("V7V`cys|i");
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      StrBuilder strBuilder2 = strBuilder1.replaceFirst(strMatcher0, "V7V`cys|i");
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("HP-UX");
      StrBuilder strBuilder1 = strBuilder0.append("");
      Writer writer0 = strBuilder1.asWriter();
      StrBuilder strBuilder2 = strBuilder1.append('N');
      StrBuilder strBuilder3 = strBuilder0.replaceFirst((String) null, "cPKhJ4'R");
      StrBuilder strBuilder4 = strBuilder3.append(676);
      String string0 = strBuilder1.rightString(0);
      boolean boolean0 = strBuilder0.equals(strBuilder1);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(196);
      String string0 = "t;zmgn^B8p$q";
      StrBuilder strBuilder1 = strBuilder0.replaceAll("t;zmgn^B8p$q", "t;zmgn^B8p$q");
      StrBuilder strBuilder2 = strBuilder0.append(true);
      StrBuilder strBuilder3 = strBuilder0.append((-992L));
      StringBuffer stringBuffer0 = new StringBuffer(9);
      // Undeclared exception!
      try { 
        strBuilder3.validateIndex(196);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 196
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.insert(0, 2943.40231);
      StrBuilder strBuilder2 = strBuilder1.deleteFirst('4');
      int int0 = strBuilder0.lastIndexOf("");
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadRight(8, 772, '/');
      Writer writer0 = strBuilder1.asWriter();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      char[] charArray0 = new char[6];
      charArray0[0] = '4';
      charArray0[1] = '4';
      charArray0[2] = '/';
      charArray0[3] = 'P';
      charArray0[4] = '/';
      charArray0[5] = '4';
      strBuilder_StrBuilderWriter0.write(charArray0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      int int1 = 0;
      char char0 = 'o';
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(0, 'o');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[8];
      charArray0[0] = '*';
      charArray0[1] = 's';
      charArray0[2] = '*';
      charArray0[3] = 'o';
      charArray0[4] = 'p';
      charArray0[5] = 'e';
      charArray0[6] = 'J';
      charArray0[7] = 'Z';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0);
      strBuilder_StrBuilderReader0.reset();
      long long0 = strBuilder_StrBuilderReader0.skip((-458L));
      int int1 = strBuilder_StrBuilderReader0.read();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      // Undeclared exception!
      try { 
        strBuilder0.insert((-173), "Mdop'k7N$5^^X");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -173
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2962));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[3];
      charArray0[0] = '`';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0);
      charArray0[1] = 'r';
      StringBuffer stringBuffer0 = null;
      try {
        stringBuffer0 = new StringBuffer((CharSequence) null);
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder();
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      // Undeclared exception!
      try { 
        strBuilder0.insert(449, "JkRY/R!AcmI");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 449
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = 0;
      char char0 = '';
      char[] charArray0 = new char[3];
      charArray0[0] = '';
      charArray0[1] = '';
      charArray0[2] = '';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(212, 0, charArray0, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      String string0 = "}Hmwn=/ 4RFY8/b/i";
      StrBuilder strBuilder0 = new StrBuilder("}Hmwn=/ 4RFY8/b/i");
      String string1 = strBuilder0.toString();
      int int0 = (-2253);
      int int1 = (-2805);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-2805), true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2805
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "<peJ]asCo&";
      // Undeclared exception!
      try { 
        strBuilder0.append("<peJ]asCo&", 9, 2011);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = 'J';
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('J');
      StrBuilder strBuilder2 = strBuilder0.replaceFirst("[|%'2z)Nel8", "]Bmp4RqpMvff2%`EVgq");
      int int0 = 2;
      // Undeclared exception!
      try { 
        strBuilder0.delete(2, 2);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("", "");
      StrBuilder strBuilder2 = strBuilder1.clear();
      int int0 = strBuilder0.indexOf("", 1045);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(529);
      int int0 = strBuilder0.size();
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      char[] charArray0 = new char[0];
      int int1 = 929;
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      // Undeclared exception!
      try { 
        strMatcher0.isMatch(charArray0, 929, 1545, 1545);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-280));
      StrBuilder strBuilder1 = strBuilder0.append(true);
      StrMatcher strMatcher0 = StrMatcher.stringMatcher((String) null);
      char[] charArray0 = new char[6];
      charArray0[0] = '?';
      charArray0[1] = 'f';
      charArray0[2] = ';';
      StrMatcher strMatcher1 = StrMatcher.splitMatcher();
      StrBuilder strBuilder2 = strBuilder1.replaceAll(strMatcher1, "9#zKa8=L+");
      charArray0[3] = 'M';
      charArray0[4] = 'P';
      charArray0[5] = '\'';
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder strBuilder3 = strBuilder0.deleteFirst('N');
      int int0 = strMatcher0.isMatch(charArray0, (-280), 5704, 5704);
      int int1 = strBuilder1.indexOf(strMatcher0, (-280));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder1.insert(5704, (-790L));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 5704
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder strBuilder1 = new StrBuilder(9);
      StrBuilder strBuilder2 = strBuilder1.appendNewLine();
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      boolean boolean1 = strBuilder0.contains('L');
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("c-AfcRHv<F");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("Gomib", 0, 2434);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(0L);
      int int0 = strBuilder_StrBuilderReader0.read();
      strBuilder_StrBuilderReader0.reset();
      StrBuilder strBuilder1 = new StrBuilder("");
      boolean boolean0 = strBuilder0.equals(strBuilder1);
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("w)");
      StrMatcher strMatcher2 = StrMatcher.stringMatcher("java.vm.name");
      StrBuilder strBuilder2 = strBuilder1.replaceAll(strMatcher0, "");
      StrBuilder strBuilder3 = strBuilder1.append((-1L));
      StrBuilder strBuilder4 = strBuilder0.setLength(57);
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance();
      StrBuilder strBuilder5 = strBuilder4.appendWithSeparators((Iterator) strTokenizer0, "Invalid offset: ");
      strBuilder_StrBuilderReader0.reset();
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1);
      StrBuilder strBuilder1 = strBuilder0.setLength(595);
      StrBuilder strBuilder2 = strBuilder0.ensureCapacity((-4550));
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance();
      StrBuilder strBuilder3 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "file.encoding");
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(14);
      StrBuilder strBuilder1 = strBuilder0.delete(0, 14);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark((-564));
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      char[] charArray0 = new char[8];
      charArray0[0] = '~';
      charArray0[1] = '|';
      charArray0[2] = 'f';
      charArray0[3] = '2';
      charArray0[4] = '3';
      charArray0[5] = 'M';
      charArray0[6] = '\\';
      charArray0[7] = 'n';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      // Undeclared exception!
      try { 
        strBuilder0.replace(strMatcher0, "K6f:VZt^Vo%p$", 14, 14, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 549;
      strBuilder0.size = 549;
      // Undeclared exception!
      try { 
        strBuilder0.append((-730L));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      int int0 = (-1604);
      StrBuilder strBuilder0 = new StrBuilder((-1604));
      int int1 = 453;
      // Undeclared exception!
      try { 
        strBuilder0.delete(373, 453);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoreEmptyTokens(false);
      StrTokenizer strTokenizer1 = strBuilder_StrBuilderTokenizer0.setIgnoredChar('w');
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("_X5kS?31/st7");
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      char[] charArray0 = new char[1];
      char char0 = 'n';
      charArray0[0] = 'n';
      int int1 = strBuilder_StrBuilderReader0.read(charArray0, 0, 0);
      StrBuilder strBuilder2 = strBuilder1.replaceAll("_X5kS?31/st7", "org.apache.commons.lang.text.StrTokenizer");
      StrBuilder strBuilder3 = strBuilder2.append(false);
      int int2 = strBuilder_StrBuilderReader0.read();
      // Undeclared exception!
      try { 
        strBuilder3.getChars(0, (-1), charArray0, 102);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      char[] charArray0 = new char[1];
      StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
      StrBuilder strBuilder3 = strBuilder2.setNewLineText("}@s-3z3ANx.xX?C;");
      StrBuilder strBuilder4 = strBuilder2.delete(0, 0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.insert(0, 1882);
      char[] charArray0 = new char[7];
      charArray0[0] = 'G';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(522, (-1581), charArray0, 116);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1581
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      char char0 = '1';
      StrBuilder strBuilder1 = strBuilder0.deleteAll('1');
      StrBuilder strBuilder2 = strBuilder1.replaceFirst("", "");
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      int int0 = strBuilder0.indexOf(strMatcher0);
      String string1 = strBuilder0.substring(0);
      StrBuilder strBuilder3 = strBuilder1.append((Object) null);
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "");
      // Undeclared exception!
      try { 
        stringBuffer0.replace((-3300), (-3300), "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3300
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.endorsed.dirs");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrBuilder strBuilder1 = strBuilder0.append(3276.226F);
      Writer writer0 = strBuilder_StrBuilderWriter0.append('');
      String string0 = strBuilder1.rightString(0);
      strBuilder_StrBuilderWriter0.write(1940);
      StrBuilder strBuilder2 = strBuilder0.append(false);
      boolean boolean0 = strBuilder0.isEmpty();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      strBuilder_StrBuilderReader0.close();
      // Undeclared exception!
      try { 
        strBuilder0.substring(106, 1940);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(".4dxnV^xdL_6=YT3yc");
      int int0 = 31;
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder0.getChars(1410, 31, charArray0, 31);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 31
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.lastIndexOf('N', 32);
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((-130), (-1549), 'o');
      StrMatcher strMatcher0 = StrMatcher.charMatcher('\\');
      StrBuilder strBuilder2 = strBuilder1.replaceFirst(strMatcher0, (String) null);
      StrBuilder strBuilder3 = strBuilder1.deleteFirst('I');
      StrBuilder strBuilder4 = strBuilder3.replaceAll(strMatcher0, (String) null);
      StrBuilder strBuilder5 = strBuilder4.append('!');
      int int0 = strBuilder0.lastIndexOf('s');
      StrBuilder strBuilder6 = strBuilder0.deleteFirst((StrMatcher) null);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder7 = strBuilder6.appendWithSeparators((Collection) linkedList0, (String) null);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder3.new StrBuilderReader();
      char[] charArray0 = new char[8];
      charArray0[0] = 'o';
      charArray0[1] = 's';
      charArray0[2] = 'o';
      charArray0[3] = 'o';
      charArray0[4] = 's';
      charArray0[5] = '\\';
      charArray0[6] = 'o';
      charArray0[7] = 'I';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 117, 1124);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('p');
      int int0 = strBuilder0.indexOf(strMatcher0, 0);
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("");
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(460);
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) strBuilder0;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      char[] charArray0 = new char[3];
      charArray0[0] = '[';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.replaceFirst((StrMatcher) strMatcher_CharSetMatcher0, "");
      charArray0[1] = 't';
      charArray0[2] = 'l';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 31, 0);
      objectArray0[1] = object0;
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators(objectArray0, "n$WZV#[m.ZhC");
      String string0 = strBuilder0.leftString(460);
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(460);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 460
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[0];
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      String string0 = strBuilder0.leftString(34);
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrBuilder strBuilder2 = strBuilder0.append('y');
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher((String) null);
      // Undeclared exception!
      try { 
        strBuilder0.replace((StrMatcher) strMatcher_CharSetMatcher0, (String) null, (-1833), 57, (-1898));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1833
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("`N8D@uKH#]%N|NDFXYU");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer1 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterChar('y');
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) strBuilder_StrBuilderTokenizer1, 4301, 'f');
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft(4301, 4301, 'y');
      StrBuilder strBuilder3 = strBuilder2.reverse();
      StrBuilder strBuilder4 = new StrBuilder();
      char[] charArray0 = new char[6];
      charArray0[0] = 'f';
      charArray0[1] = 'y';
      charArray0[2] = 'y';
      charArray0[3] = 'y';
      charArray0[4] = 'f';
      charArray0[5] = 'y';
      StrBuilder strBuilder5 = new StrBuilder();
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder(588);
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight((Object) null, 588, 'Z');
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 116;
      StrBuilder strBuilder1 = strBuilder0.insert(0, true);
      // Undeclared exception!
      try { 
        strBuilder0.substring(116, 116);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder1 = strBuilder0.append(553.3675F);
      StrBuilder strBuilder2 = strBuilder0.append(stringBuffer0);
      int int0 = strBuilder0.indexOf("");
      StrBuilder strBuilder3 = strBuilder0.replaceAll(")F`9q6rx>7Qf", "Z/86]mXl");
      int int1 = strBuilder2.indexOf("", 1650);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      StrBuilder strBuilder4 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("startIndex must be valid");
      int int2 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_StringMatcher0, 1650);
      // Undeclared exception!
      try { 
        strBuilder0.validateRange(3586, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("", "");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      Object[] objectArray0 = new Object[3];
      char[] charArray0 = new char[0];
      int int0 = strBuilder_StrBuilderReader0.read(charArray0);
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) "";
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators(objectArray0, "");
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      StrBuilder strBuilder3 = strBuilder0.insert(0, 190L);
      StrBuilder strBuilder4 = strBuilder3.setCharAt(0, 'S');
      CharBuffer charBuffer1 = charBuffer0.append((CharSequence) "");
      ByteOrder byteOrder0 = charBuffer0.order();
      int int1 = strBuilder_StrBuilderReader0.read(charBuffer0);
      strBuilder_StrBuilderReader0.close();
      StrBuilder strBuilder5 = strBuilder2.deleteFirst('+');
      String string0 = strBuilder0.getNewLineText();
      StrBuilder strBuilder6 = strBuilder2.appendWithSeparators(objectArray0, "");
      int int2 = strBuilder5.validateRange(0, 0);
      char[] charArray1 = strBuilder1.toCharArray(0, 0);
      StrMatcher strMatcher0 = StrMatcher.charMatcher('+');
      StrBuilder strBuilder7 = strBuilder2.replaceFirst(strMatcher0, (String) null);
      StringBuffer stringBuffer0 = new StringBuffer("=_Hc{S)e!bdKS~");
      StrBuilder strBuilder8 = strBuilder4.append(stringBuffer0);
      StrBuilder strBuilder9 = strBuilder8.insert(0, true);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 4;
      int int1 = (-1629);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(4, (-1629), 'J');
      int int2 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      int int0 = (-1446);
      StrBuilder strBuilder0 = new StrBuilder((-1446));
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      StrBuilder strBuilder2 = strBuilder0.replaceFirst(";.{Cx", "`IQ&nBR");
      // Undeclared exception!
      try { 
        strBuilder1.insert((-1446), '0');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1446
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(114);
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      strBuilder0.size = (-1178);
      String string0 = strBuilder0.getNewLineText();
      boolean boolean0 = strBuilder0.endsWith("Invalid length: ");
      char char0 = 'V';
      int int0 = strBuilder0.indexOf('V', (-1178));
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) null, (-1178), 'V');
      StrBuilder strBuilder2 = strBuilder1.replaceFirst((String) null, (String) null);
      StrBuilder strBuilder3 = strBuilder0.replaceFirst((String) null, "G,226Rv{ ");
      // Undeclared exception!
      try { 
        strBuilder1.toStringBuffer();
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3);
      StrBuilder strBuilder1 = strBuilder0.append(true);
      StrBuilder strBuilder2 = strBuilder0.deleteFirst('-');
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadRight((Object) strBuilder1, 0, 'M');
      String string0 = strBuilder0.midString(Integer.MAX_VALUE, 0);
      StrBuilder strBuilder4 = strBuilder0.append(2760.9539F);
      StrBuilder strBuilder5 = strBuilder4.setLength(0);
      char[] charArray0 = new char[0];
      char[] charArray1 = strBuilder4.getChars(charArray0);
      // Undeclared exception!
      try { 
        strBuilder5.delete(44, 44);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("yHx59!G?s22");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "{turAedAR pM.");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      String string0 = "Array element ";
      String string1 = "";
      int int0 = (-986);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-986), 0L);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -986
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      int int0 = 102;
      StrBuilder strBuilder0 = new StrBuilder(102);
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("org.apache.commons.lang.text.StrMatcher$NoMatcher");
      StrBuilder strBuilder1 = strBuilder0.replaceAll((StrMatcher) strMatcher_StringMatcher0, "org.apache.commons.lang.text.StrMatcher$NoMatcher");
      String string0 = "";
      // Undeclared exception!
      try { 
        strBuilder0.charAt(102);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 102
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("e2IERGq:@5g6Am)q");
      int int0 = (-5724);
      char[] charArray0 = new char[8];
      charArray0[0] = '8';
      charArray0[1] = '&';
      charArray0[2] = '~';
      charArray0[3] = '+';
      charArray0[4] = 'c';
      charArray0[5] = 'e';
      charArray0[6] = 'O';
      charArray0[7] = 'U';
      // Undeclared exception!
      try { 
        strBuilder0.insert((-5724), charArray0, (-5724), (-1715));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -5724
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[0];
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(",be0", "Invalid offset: ");
      int int0 = 560;
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 560, 0);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1271));
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("");
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.deleteAll("(2KP8&L6FQ/hV$8?mq+");
      String string0 = strBuilder0.midString(0, 1907);
      StrBuilder strBuilder2 = strBuilder0.setNewLineText("length must be valid");
      int int0 = strBuilder2.capacity();
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder();
      char[] charArray0 = new char[0];
      StrBuilder strBuilder2 = new StrBuilder((-562));
      StrBuilder strBuilder3 = strBuilder1.clear();
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrBuilder strBuilder4 = strBuilder0.deleteFirst(strMatcher0);
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      // Undeclared exception!
      try { 
        strBuilder2.charAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendPadding((-3703), 'z');
      StrBuilder strBuilder2 = strBuilder1.setLength(0);
      String string0 = strBuilder1.rightString((-1403));
      StringBuffer stringBuffer0 = new StringBuffer(0);
      StringBuffer stringBuffer1 = stringBuffer0.append((float) 0);
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder strBuilder3 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder4 = strBuilder0.replaceFirst("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", "");
      StrBuilder strBuilder5 = strBuilder3.replaceFirst('z', 'z');
      // Undeclared exception!
      try { 
        strBuilder5.charAt((-302));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -302
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrMatcher strMatcher0 = null;
      int int0 = (-883);
      char[] charArray0 = new char[5];
      charArray0[0] = '(';
      charArray0[1] = 'b';
      charArray0[2] = '|';
      charArray0[3] = '8';
      charArray0[4] = 'I';
      // Undeclared exception!
      try { 
        strBuilder0.insert((-883), charArray0, (-837), (-883));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -883
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(4);
      StrBuilder strBuilder1 = strBuilder0.deleteAll('_');
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder1;
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators(objectArray0, "length must be valid");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      boolean boolean0 = strBuilder2.contains(strMatcher0);
      boolean boolean1 = strBuilder0.startsWith("Urc@}6o FT3");
      StrBuilder strBuilder3 = strBuilder1.replaceFirst('_', '_');
      StrBuilder strBuilder4 = strBuilder3.append("', is neither of type Map.Entry nor an Array");
      int int0 = strBuilder4.indexOf(strMatcher0, 4);
      StrBuilder strBuilder5 = strBuilder4.append(true);
      StrBuilder strBuilder6 = strBuilder4.appendPadding(32, '_');
      StrBuilder strBuilder7 = strBuilder0.appendFixedWidthPadLeft((Object) "", 4, '&');
      char[] charArray0 = strBuilder0.toCharArray(32, 32);
      int int1 = strBuilder3.hashCode();
      boolean boolean2 = strBuilder7.isEmpty();
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      int int0 = 32;
      StrBuilder strBuilder0 = new StrBuilder(32);
      int int1 = strBuilder0.hashCode();
      // Undeclared exception!
      try { 
        strBuilder0.insert(32, 0L);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(4);
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder0;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "length must be valid");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      boolean boolean0 = strBuilder1.contains(strMatcher0);
      boolean boolean1 = strBuilder0.startsWith("Urc@}6o FT3");
      StrBuilder strBuilder2 = strBuilder0.replaceFirst('_', '_');
      StrBuilder strBuilder3 = strBuilder2.append("', is neither of type Map.Entry nor an Array");
      int int0 = strBuilder3.indexOf(strMatcher0, 4);
      StrBuilder strBuilder4 = strBuilder3.append(true);
      StrBuilder strBuilder5 = strBuilder3.appendPadding(32, '_');
      StrBuilder strBuilder6 = strBuilder0.appendFixedWidthPadLeft((Object) "", 4, '&');
      char[] charArray0 = strBuilder0.toCharArray(32, 32);
      boolean boolean2 = strBuilder6.isEmpty();
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      String string0 = "PuejF/sD";
      StrBuilder strBuilder0 = new StrBuilder("PuejF/sD");
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt((-1258));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1258
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.substring((-648));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -648
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder2 = strBuilder0.append((String) null, 114, 114);
      StrBuilder strBuilder3 = strBuilder1.replaceFirst("", "Invalid startIndex: ");
      int int0 = strBuilder0.size();
      // Undeclared exception!
      try { 
        strBuilder3.insert((-827), (Object) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -827
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.size = (-2217);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) null, ")3*fRHzK");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.reverse();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      char[] charArray0 = new char[6];
      charArray0[0] = '#';
      charArray0[1] = 'e';
      charArray0[2] = 'i';
      charArray0[3] = '#';
      charArray0[4] = 'm';
      charArray0[5] = 'X';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 0, (-1));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Solaris");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setTrimmerMatcher(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "java.io.tmpdir");
      char[] charArray0 = new char[6];
      charArray0[0] = '@';
      charArray0[1] = 'D';
      charArray0[2] = ':';
      charArray0[3] = ' ';
      charArray0[4] = 'b';
      charArray0[5] = '~';
      StrBuilder strBuilder2 = strBuilder0.insert(0, charArray0);
      StrBuilder strBuilder3 = strBuilder0.append((long) 3);
      int int0 = 1174;
      // Undeclared exception!
      try { 
        strBuilder1.append(strBuilder0, 3, 1174);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((-1908), 0, '[');
      int int0 = strBuilder0.indexOf((StrMatcher) null, (-1908));
      String string0 = strBuilder0.getNullText();
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = null;
      StrBuilder strBuilder1 = strBuilder0.replaceAll((String) null, (String) null);
      StrBuilder strBuilder2 = strBuilder1.append((String) null);
      int int0 = 2238;
      // Undeclared exception!
      try { 
        strBuilder0.substring(2238, 2238);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.validateIndex(0);
      char[] charArray0 = strBuilder0.toCharArray();
      StrBuilder strBuilder1 = new StrBuilder(48);
      int int0 = 790;
      // Undeclared exception!
      try { 
        strBuilder1.insert(790, true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 790
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 4;
      StrBuilder strBuilder1 = strBuilder0.appendPadding(4, '@');
      int int1 = 1475;
      StrBuilder strBuilder2 = strBuilder0.ensureCapacity(1475);
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) strBuilder1;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      objectArray0[1] = object0;
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators(objectArray0, "");
      StrBuilder strBuilder4 = strBuilder1.append(4);
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrBuilder strBuilder5 = strBuilder3.replaceFirst(strMatcher0, "");
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "");
      int int2 = 71;
      // Undeclared exception!
      try { 
        strBuilder5.append(stringBuffer0, 71, (-48));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_NoMatcher0);
      StrBuilder strBuilder1 = new StrBuilder("O>mbg^#by|?4M|/");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark((-1156));
      strBuilder_StrBuilderReader0.reset();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      StrBuilder strBuilder2 = strBuilder1.deleteFirst("O>mbg^#by|?4M|/");
      StrBuilder strBuilder3 = strBuilder1.ensureCapacity((-1));
      StrBuilder strBuilder4 = strBuilder3.replaceFirst((StrMatcher) strMatcher_NoMatcher0, "O>mbg^#by|?4M|/");
      String string0 = strBuilder1.substring(0, 0);
      int int1 = 0;
      char[] charArray0 = new char[8];
      charArray0[0] = ']';
      StrBuilder strBuilder5 = strBuilder4.insert(0, (-1.0F));
      StrBuilder strBuilder6 = strBuilder5.append(']');
      charArray0[1] = '\\';
      charArray0[2] = 'z';
      charArray0[3] = 'G';
      charArray0[4] = '\\';
      charArray0[5] = 'U';
      charArray0[6] = '4';
      char char0 = '5';
      // Undeclared exception!
      try { 
        strBuilder3.append("Solaris", 48, 495);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[3];
      charArray0[0] = '{';
      charArray0[1] = 'j';
      charArray0[2] = 'C';
      // Undeclared exception!
      try { 
        strBuilder0.insert(312, charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 312
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      char[] charArray0 = new char[8];
      charArray0[0] = 'X';
      charArray0[1] = 'H';
      charArray0[2] = 'y';
      charArray0[3] = ']';
      charArray0[4] = '#';
      charArray0[5] = 'k';
      charArray0[6] = 'V';
      charArray0[7] = '|';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.deleteAll((StrMatcher) strMatcher_CharSetMatcher0);
      StrBuilder strBuilder2 = strBuilder1.setNullText((String) null);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = new StringBuffer("end < start");
      StrBuilder strBuilder1 = strBuilder0.append(0.0);
      StrBuilder strBuilder2 = strBuilder1.setNullText("");
      StrBuilder strBuilder3 = strBuilder0.append(stringBuffer0);
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_TrimMatcher0);
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder4 = strBuilder0.setNewLineText("ZNK~ze<UmVcYzGk");
      StrBuilder strBuilder5 = strBuilder2.insert(8, ';');
      StrBuilder strBuilder6 = strBuilder0.setCharAt(9, ';');
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = strBuilder0.toCharArray();
      StrBuilder strBuilder1 = new StrBuilder(48);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder2 = strBuilder0.setNewLineText("");
      StrBuilder strBuilder3 = strBuilder1.setNewLineText("BQ:Bw^o..fBKuf _");
      strBuilder_StrBuilderReader0.reset();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset(charArray0);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.previous();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-7));
      char[] charArray0 = new char[5];
      charArray0[0] = '\"';
      charArray0[1] = '^';
      charArray0[2] = 'Z';
      charArray0[3] = ';';
      charArray0[4] = 'C';
      char[] charArray1 = strBuilder0.getChars(charArray0);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2322);
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "~5dTfTA");
      StrBuilder strBuilder2 = strBuilder0.appendPadding(2322, 't');
      char[] charArray0 = new char[3];
      charArray0[0] = 't';
      charArray0[1] = 't';
      charArray0[2] = 't';
      // Undeclared exception!
      try { 
        strBuilder2.append(charArray0, 2322, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1);
      StrBuilder strBuilder1 = strBuilder0.append((float) 1);
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) strBuilder1;
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) strBuilder1;
      objectArray0[3] = (Object) strBuilder1;
      Object object0 = new Object();
      objectArray0[4] = object0;
      objectArray0[5] = (Object) strBuilder0;
      objectArray0[6] = (Object) strBuilder0;
      objectArray0[7] = (Object) strBuilder0;
      objectArray0[8] = (Object) strBuilder1;
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators(objectArray0, "q3h!|");
      StrBuilder strBuilder3 = strBuilder1.insert(1, 1);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceAll((StrMatcher) strMatcher_TrimMatcher0, "");
      StrBuilder strBuilder2 = strBuilder0.setNewLineText("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      int int0 = strBuilder0.lastIndexOf("(aPw#fndPw&PG%BQQ.", (-5220));
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray((-1729), (-1729));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1729
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Lcia:dt+~|");
      // Undeclared exception!
      try { 
        strBuilder0.append("org.apache.commons.lang.text.StrBuilder", 1679, (-2664));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-562));
      StrBuilder strBuilder1 = new StrBuilder();
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder1.insert((-562), charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -562
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("startIndex must be valid");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("Z]I+xc{$Jf{kl|");
      StrBuilder strBuilder2 = strBuilder0.minimizeCapacity();
      String string0 = strBuilder0.rightString(32);
      int int0 = 994;
      // Undeclared exception!
      try { 
        strBuilder0.insert(994, "startIndex must be valid");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 994
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(784);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[6];
      charArray0[0] = 'y';
      charArray0[1] = ')';
      charArray0[2] = '3';
      charArray0[3] = 'J';
      charArray0[4] = 'V';
      charArray0[5] = 'Z';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_CharSetMatcher0, (-2676));
      strBuilder_StrBuilderWriter0.write(784);
      String string0 = strBuilder0.rightString(784);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrBuilder strBuilder1 = strBuilder0.append((-947.9838224198));
      String string0 = strBuilder1.rightString((-230));
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.insert(0, (long) 0);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("H%{`4IIb7(IA");
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('K');
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.append(244.3854303);
      int int0 = 0;
      StrBuilder strBuilder3 = strBuilder0.ensureCapacity(0);
      StrBuilder strBuilder4 = strBuilder0.deleteFirst("H%{`4IIb7(IA");
      // Undeclared exception!
      try { 
        strBuilder3.setCharAt((-148), 'K');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -148
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      int int0 = 1115;
      StrBuilder strBuilder0 = new StrBuilder(1115);
      char char0 = '1';
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(1115, '1');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1115
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("9n|hVI7R=NrgE$");
      StrBuilder strBuilder1 = strBuilder0.deleteAll('.');
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder strBuilder2 = strBuilder0.setCharAt(0, '-');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(115);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("\"");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = 'q';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(1, 0, 'q');
      // Undeclared exception!
      try { 
        strBuilder1.insert(81, 2469.77237523354);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 81
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity((-372));
      String string0 = strBuilder0.substring(0, 1304);
      // Undeclared exception!
      try { 
        strBuilder0.insert(3453, (double) (-372));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3453
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("dKXYE$|M;l}j=6");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder strBuilder1 = strBuilder0.append((-2240.44F));
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Iterator) strBuilder_StrBuilderTokenizer0, "java.awt.headless");
      char[] charArray0 = new char[1];
      charArray0[0] = 'o';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder3 = strBuilder2.replaceFirst(strMatcher0, "dKXYE$|M;l}j=6");
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadRight(0, 954, '<');
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("`zoz^EcVPA<");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      char[] charArray0 = new char[9];
      charArray0[0] = '\"';
      charArray0[1] = ';';
      charArray0[2] = 'o';
      charArray0[3] = 'i';
      charArray0[4] = '(';
      charArray0[5] = ' ';
      charArray0[6] = '=';
      charArray0[7] = 'R';
      charArray0[8] = 'R';
      strBuilder_StrBuilderWriter0.write(charArray0);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      String string0 = "EpbtOi,H ";
      StrBuilder strBuilder0 = new StrBuilder("EpbtOi,H ");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[9];
      char char0 = '4';
      charArray0[0] = '4';
      charArray0[1] = '6';
      charArray0[2] = '<';
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance("EpbtOi,H ");
      charArray0[3] = 'Z';
      charArray0[4] = '3';
      charArray0[5] = 'e';
      charArray0[6] = 's';
      charArray0[7] = 'H';
      charArray0[8] = 'V';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, (-397), (-397));
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(object0, 0, '=');
      StrBuilder strBuilder2 = new StrBuilder("Yo74~!zrLnOF");
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder2, 2974, 2974);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.append('y');
      char[] charArray0 = new char[5];
      charArray0[0] = 'y';
      charArray0[1] = 'y';
      charArray0[2] = 'y';
      charArray0[3] = 'y';
      charArray0[4] = 'y';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, (-2264), 4);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 4
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder1.append(strBuilder0);
      StrBuilder strBuilder3 = strBuilder0.append((Object) strBuilder1);
      StrBuilder strBuilder4 = strBuilder3.deleteAll((String) null);
      StrBuilder strBuilder5 = strBuilder0.clear();
      StrBuilder strBuilder6 = strBuilder5.minimizeCapacity();
      boolean boolean0 = strBuilder6.startsWith(", Length: ");
      int int0 = 1787;
      // Undeclared exception!
      try { 
        strBuilder3.append(strBuilder5, 1787, 1787);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = new StrBuilder(" z^fo#:?cXYCV");
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1, 0, 0);
      Reader reader0 = strBuilder0.asReader();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        strBuilder1.append(stringBuffer0, 32, 32);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.awt.printerjob");
      char[] charArray0 = new char[3];
      charArray0[0] = 'a';
      charArray0[1] = 't';
      charArray0[2] = '$';
      strBuilder0.buffer = charArray0;
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(0);
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(755);
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 755, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterString("");
      String string0 = strBuilder_StrBuilderTokenizer0.previousToken();
      char[] charArray0 = new char[1];
      charArray0[0] = '6';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 0, 0);
      StrBuilder strBuilder1 = strBuilder0.insert(0, (Object) strBuilder_StrBuilderTokenizer0);
      int int0 = strBuilder0.size();
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(198, (-316), 'x');
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      int int0 = 4;
      StrBuilder strBuilder0 = new StrBuilder(4);
      // Undeclared exception!
      try { 
        strBuilder0.insert(4, 4);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 4
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) null);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.append((CharSequence) null, 0, 2569);
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[0];
      StrBuilder strBuilder1 = strBuilder0.appendPadding((-720), 'h');
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators((Collection) linkedList0, "");
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_CharSetMatcher0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(charArray0);
      // Undeclared exception!
      try { 
        strBuilder1.insert((-283), 0.0F);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -283
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(0.0);
      char[] charArray0 = new char[6];
      charArray0[0] = 'w';
      charArray0[1] = 'm';
      charArray0[2] = '+';
      charArray0[3] = '=';
      charArray0[4] = 't';
      charArray0[5] = '[';
      StrBuilder strBuilder2 = strBuilder1.append(charArray0);
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      int int0 = strBuilder0.indexOf('.');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      Writer writer0 = strBuilder_StrBuilderWriter0.append(')');
      Writer writer1 = strBuilder_StrBuilderWriter0.append('.');
      strBuilder_StrBuilderWriter0.close();
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance("*W[RMX;vWnJUW\"");
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "*W[RMX;vWnJUW\"");
      StrTokenizer strTokenizer1 = strBuilder0.asTokenizer();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      int int1 = strBuilder0.indexOf(strMatcher0, (-1));
      StrBuilder strBuilder2 = strBuilder0.deleteFirst('C');
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("M29,^`^J.O0QX!)");
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(616);
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      int int0 = strBuilder0.indexOf('2');
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      // Undeclared exception!
      try { 
        strBuilder0.replace(strMatcher0, "}W%q ", 616, (-1), 616);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("add() is unsupported");
      int int0 = strBuilder0.indexOf("", (-394));
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrMatcher strMatcher0 = StrMatcher.charMatcher('b');
      StrMatcher strMatcher1 = StrMatcher.charMatcher('B');
      int int1 = strBuilder0.indexOf((StrMatcher) strMatcher_NoMatcher0, 52);
      StrMatcher strMatcher2 = StrMatcher.stringMatcher("q$FdIe");
      int int2 = strBuilder0.indexOf((StrMatcher) strMatcher_NoMatcher0, 114);
      boolean boolean0 = strBuilder0.endsWith("q$FdIe");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setEmptyTokenAsNull(true);
      Consumer<String> consumer0 = (Consumer<String>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      strBuilder_StrBuilderTokenizer0.forEachRemaining(consumer0);
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      int int3 = strBuilder0.lastIndexOf(")TI");
      int int4 = strBuilder0.lastIndexOf("?b1YNKd{'5}>a.g.`");
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "Invalid startIndex: ");
      boolean boolean1 = strBuilder0.contains(")TI");
      StrBuilder strBuilder2 = strBuilder1.append(false);
      char[] charArray0 = new char[8];
      charArray0[0] = 'B';
      charArray0[1] = 'b';
      charArray0[2] = 'B';
      charArray0[3] = 'b';
      charArray0[4] = 'b';
      charArray0[5] = 'B';
      charArray0[6] = 'b';
      charArray0[7] = 'B';
      // Undeclared exception!
      try { 
        strBuilder2.insert(44, charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 44
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("P");
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrBuilder strBuilder2 = strBuilder0.append((-2128));
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrBuilder strBuilder3 = strBuilder2.deleteFirst(strMatcher0);
      StrBuilder strBuilder4 = strBuilder0.append(1762.0F);
      StrBuilder strBuilder5 = strBuilder2.append((String) null);
      char[] charArray0 = strBuilder2.toCharArray();
      StrBuilder strBuilder6 = strBuilder5.replace(0, 9, (String) null);
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder7 = strBuilder4.deleteFirst('_');
      Reader reader0 = strBuilder2.asReader();
      boolean boolean0 = strBuilder3.equals(strBuilder1);
      String string0 = strBuilder4.midString((-2128), (-2128));
      StrBuilder strBuilder8 = strBuilder4.deleteFirst('N');
      String string1 = "y^";
      StrBuilder strBuilder9 = strBuilder3.setNewLineText("y^");
      // Undeclared exception!
      try { 
        strBuilder5.append(strBuilder8, (-2128), (-2128));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      char[] charArray0 = new char[8];
      charArray0[0] = '!';
      charArray0[1] = 'J';
      charArray0[2] = 'K';
      charArray0[3] = 's';
      charArray0[4] = '$';
      charArray0[5] = 's';
      charArray0[6] = 'J';
      charArray0[7] = 'V';
      strBuilder0.buffer = charArray0;
      // Undeclared exception!
      try { 
        strBuilder0.insert(1153, 'K');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1153
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(">A'OLhC8L\"r-d:3H");
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('n');
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      boolean boolean1 = strBuilder0.startsWith("end < start");
      StrBuilder strBuilder2 = strBuilder1.append("end < start");
      StrBuilder strBuilder3 = strBuilder2.replaceFirst(strMatcher0, "");
      int int0 = 0;
      StrBuilder strBuilder4 = strBuilder0.insert(0, false);
      StringBuffer stringBuffer0 = new StringBuffer(117);
      int int1 = (-1134);
      int int2 = 0;
      // Undeclared exception!
      try { 
        strBuilder1.append(stringBuffer0, (-1134), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Object object0 = null;
      int int0 = 902;
      // Undeclared exception!
      try { 
        strBuilder0.setLength((-126));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -126
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[5];
      charArray0[0] = 'F';
      charArray0[1] = '(';
      charArray0[2] = 's';
      charArray0[3] = '&';
      charArray0[4] = 'A';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(5304);
      StrBuilder strBuilder1 = strBuilder0.replaceAll("length must be valid", "2zA//L\"y");
      StrBuilder strBuilder2 = strBuilder1.append((Object) "2zA//L\"y");
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder3 = strBuilder1.replace((StrMatcher) strMatcher_TrimMatcher0, "length must be valid", 0, 5304, 0);
      StrBuilder strBuilder4 = strBuilder1.deleteFirst('^');
      String string0 = strBuilder0.leftString(0);
      StrBuilder strBuilder5 = strBuilder2.setNewLineText("Oi`o|06vOi");
      int int0 = strBuilder0.size();
      boolean boolean0 = strBuilder1.equalsIgnoreCase(strBuilder2);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(5304);
      strBuilder_StrBuilderWriter0.write(27);
      StrMatcher strMatcher0 = StrMatcher.charMatcher('^');
      StrBuilder strBuilder6 = strBuilder4.trim();
      StrBuilder strBuilder7 = strBuilder6.replaceFirst((StrMatcher) strMatcher_TrimMatcher0, (String) null);
      StrBuilder strBuilder8 = strBuilder7.append((String) null, 1133, 1133);
      StrBuilder strBuilder9 = strBuilder4.replaceFirst(strMatcher0, "^%5JSDo");
      int int1 = strBuilder1.lastIndexOf(strMatcher0, (-4266));
      boolean boolean1 = strBuilder6.isEmpty();
      StrBuilder strBuilder10 = strBuilder7.deleteFirst("length must be valid");
      // Undeclared exception!
      try { 
        strBuilder5.deleteCharAt(1133);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1133
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      char char0 = '\"';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) "", 0, '\"');
      String string0 = "GYJ~'-^";
      StrBuilder strBuilder2 = new StrBuilder("GYJ~'-^");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.remove();
      } catch(UnsupportedOperationException e) {
         //
         // remove() is unsupported
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }
}
