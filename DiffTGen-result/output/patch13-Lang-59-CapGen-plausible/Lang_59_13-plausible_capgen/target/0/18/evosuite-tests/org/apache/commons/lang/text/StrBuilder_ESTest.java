/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 31 17:12:09 GMT 2020
 */

package org.apache.commons.lang.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.Writer;
import java.nio.CharBuffer;
import java.nio.ReadOnlyBufferException;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.ListIterator;
import java.util.NoSuchElementException;
import java.util.function.Consumer;
import org.apache.commons.lang.text.StrBuilder;
import org.apache.commons.lang.text.StrMatcher;
import org.apache.commons.lang.text.StrTokenizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StrBuilder_ESTest extends StrBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      String string0 = "7OsH;M2l>xyWSHUw";
      StrBuilder strBuilder0 = new StrBuilder("7OsH;M2l>xyWSHUw");
      StrBuilder strBuilder1 = strBuilder0.replaceAll('!', '9');
      StrBuilder strBuilder2 = strBuilder1.append(strBuilder0);
      StrMatcher strMatcher0 = StrMatcher.charMatcher('H');
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("N;v@#p@H[");
      String string1 = "user.dir";
      StrBuilder strBuilder3 = strBuilder1.replaceFirst(strMatcher0, "user.dir");
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) strBuilder2;
      objectArray0[1] = (Object) "N;v@#p@H[";
      objectArray0[2] = (Object) strBuilder3;
      objectArray0[3] = (Object) strBuilder0;
      objectArray0[4] = (Object) strBuilder2;
      StrBuilder strBuilder4 = strBuilder3.appendWithSeparators(objectArray0, "7OsH;M2l>xyWSHUw");
      StrBuilder strBuilder5 = strBuilder2.appendNewLine();
      StrBuilder strBuilder6 = strBuilder2.trim();
      int int0 = 44;
      char[] charArray0 = new char[1];
      charArray0[0] = '!';
      StrBuilder strBuilder7 = strBuilder3.insert(44, charArray0);
      // Undeclared exception!
      try { 
        strBuilder7.substring(1868);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.replaceAll("~Ys>&|}T8l~]e", "~Ys>&|}T8l~]e");
      char[] charArray0 = new char[1];
      charArray0[0] = '#';
      StrBuilder strBuilder3 = strBuilder1.insert(0, charArray0, 0, 0);
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("j(*lL}wgItne6Hwa2:r");
      StrMatcher strMatcher1 = StrMatcher.stringMatcher((String) null);
      boolean boolean0 = strBuilder2.contains((StrMatcher) strMatcher_StringMatcher0);
      Object object0 = new Object();
      StrBuilder strBuilder4 = strBuilder0.insert(0, object0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      Writer writer0 = strBuilder4.asWriter();
      boolean boolean1 = strBuilder_StrBuilderReader0.ready();
      StrBuilder strBuilder5 = strBuilder4.setCharAt(0, '>');
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder6 = strBuilder2.append(stringBuffer0, 0, 0);
      long long0 = strBuilder_StrBuilderReader0.skip(0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(">DM1B5");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      int int0 = strMatcher0.isMatch((char[]) null, 0, 0, 0);
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrBuilder strBuilder2 = strBuilder0.clear();
      StrBuilder strBuilder3 = strBuilder1.appendFixedWidthPadRight((Object) strBuilder0, 0, 'Y');
      StrBuilder strBuilder4 = strBuilder0.setNewLineText("pQMc-v-$qnr@i=Dlrw{");
      String string0 = strBuilder1.midString((-2209), (-62));
      StrBuilder strBuilder5 = strBuilder2.minimizeCapacity();
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      String string0 = ">DM1B5";
      StrBuilder strBuilder0 = new StrBuilder(">DM1B5");
      StrBuilder strBuilder1 = new StrBuilder(">DM1B5");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      int int0 = 0;
      StrBuilder strBuilder2 = strBuilder0.insert(0, 0);
      int int1 = strMatcher0.isMatch((char[]) null, 0, 0, 0);
      StrBuilder strBuilder3 = strBuilder2.append((Object) strBuilder0);
      StrBuilder strBuilder4 = strBuilder3.insert(0, "DI'(VRN|gAy]a3PJo");
      StrBuilder strBuilder5 = strBuilder3.minimizeCapacity();
      int int2 = strBuilder0.indexOf(strMatcher0, 0);
      StringBuffer stringBuffer0 = new StringBuffer(0);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.replaceAll("~Ys>&|}T8l~]e", "~Ys>&|}T8l~]e");
      String string0 = "j(*lL}wgItne6Hwa2:r";
      char[] charArray0 = new char[1];
      charArray0[0] = '#';
      int int1 = 1584;
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadRight(1584, 1, 'j');
      int int2 = 1236;
      // Undeclared exception!
      try { 
        strBuilder1.insert(0, charArray0, 1584, 1236);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: 1584
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[2];
      charArray0[0] = '&';
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.nextToken();
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) null);
      StrBuilder strBuilder1 = strBuilder0.replaceAll("", "");
      charArray0[1] = '*';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 852, 852);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 852
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("7OsH;M2l>xyWSHUw");
      StrBuilder strBuilder1 = strBuilder0.replaceAll('!', '9');
      StrBuilder strBuilder2 = strBuilder1.append(strBuilder0);
      StrMatcher strMatcher0 = StrMatcher.charMatcher('H');
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("N;v@#p@H[");
      StrBuilder strBuilder3 = strBuilder1.replaceFirst(strMatcher0, "user.dir");
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) strBuilder2;
      objectArray0[2] = (Object) strBuilder3;
      objectArray0[3] = (Object) strBuilder0;
      objectArray0[4] = (Object) strBuilder2;
      StrBuilder strBuilder4 = strBuilder3.appendWithSeparators(objectArray0, "7OsH;M2l>xyWSHUw");
      StrBuilder strBuilder5 = strBuilder2.trim();
      char[] charArray0 = new char[1];
      charArray0[0] = '!';
      StrBuilder strBuilder6 = strBuilder3.insert(44, charArray0);
      String string0 = strBuilder6.substring((int) '9');
      StrBuilder strBuilder7 = strBuilder5.appendFixedWidthPadLeft(44, 0, '!');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
      StrBuilder strBuilder8 = strBuilder3.setNewLineText("7OsH;M2l>xyWSHUw");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.next();
      StrBuilder strBuilder9 = strBuilder7.append((Object) "7Osuser.dir;M2l>xyWSHUw7OsH;M2l>xyWSHUworg.a!pache.commons.lang.text.StrBuilder@00000000017OsH;M2l>xyWSHUw7OsH;M2l>xyWSHUworg.apache.commons.lang.text.StrBuilder@00000000017OsH;M2l>xyWSHUworg.apache.commons.lang.text.StrBuilder@00000000017OsH;M2l>xyWSHUworg.apache.commons.lang.text.StrBuilder@0000000001");
      StrBuilder strBuilder10 = strBuilder2.setNullText("user.dir");
      StrBuilder strBuilder11 = strBuilder2.clear();
      int int0 = strBuilder1.lastIndexOf("7OsH;M2l>xyWSHUw");
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Mac OS X");
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("Mac OS X");
      char[] charArray0 = new char[0];
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("Mac OS X");
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_StringMatcher0);
      String string0 = strBuilder0.substring(0, 0);
      int int1 = strBuilder0.lastIndexOf("Mac OS X");
      char[] charArray1 = strBuilder0.getChars((char[]) null);
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterChar('O');
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      Object object1 = strTokenizer0.next();
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Iterator) strTokenizer0, "");
      String string1 = strBuilder0.toString();
      int int2 = strBuilder0.size();
      StrBuilder strBuilder3 = strBuilder1.append(true);
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) "";
      objectArray0[1] = (Object) strMatcher1;
      StrBuilder strBuilder4 = strBuilder3.appendWithSeparators(objectArray0, (String) null);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("tW`");
      StrBuilder strBuilder1 = new StrBuilder();
      char[] charArray0 = new char[7];
      charArray0[0] = 'Z';
      charArray0[1] = 'B';
      charArray0[3] = '}';
      charArray0[4] = '8';
      charArray0[5] = 'c';
      charArray0[6] = '8';
      StrBuilder strBuilder2 = strBuilder0.replaceFirst("tW`", "tW`");
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      StrBuilder strBuilder3 = strBuilder1.appendFixedWidthPadLeft((Object) "tW`", 115, '8');
      String string0 = strBuilder1.getNewLineText();
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      int int0 = strBuilder0.indexOf("");
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(2948, 2948, '^');
      StrBuilder strBuilder2 = strBuilder0.replace(2948, 2948, "");
      StrBuilder strBuilder3 = strBuilder2.replaceFirst("", "");
      StrBuilder strBuilder4 = strBuilder3.append(1.0F);
      String string0 = strBuilder3.substring(0, 2948);
      StrBuilder strBuilder5 = strBuilder4.append(2869.0F);
      StrBuilder strBuilder6 = strBuilder5.setNullText((String) null);
      StrBuilder strBuilder7 = strBuilder6.appendNull();
      StrBuilder strBuilder8 = strBuilder1.reverse();
      char[] charArray0 = new char[8];
      charArray0[0] = '^';
      charArray0[1] = '^';
      charArray0[2] = '^';
      charArray0[3] = '^';
      charArray0[4] = '^';
      charArray0[5] = 'X';
      charArray0[6] = '^';
      charArray0[7] = '^';
      char[] charArray1 = strBuilder0.getChars(charArray0);
      Reader reader0 = strBuilder3.asReader();
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StringBuffer stringBuffer0 = strBuilder2.toStringBuffer();
      int int0 = strBuilder3.indexOf((StrMatcher) strMatcher_NoMatcher0, 5);
      StrBuilder strBuilder9 = strBuilder0.append(5);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(2948, 2948, '^');
      StrBuilder strBuilder2 = new StrBuilder(2948);
      int int0 = strBuilder1.hashCode();
      StrBuilder strBuilder3 = strBuilder1.reverse();
      char[] charArray0 = new char[8];
      charArray0[0] = '^';
      charArray0[1] = '^';
      charArray0[2] = '^';
      charArray0[3] = '^';
      charArray0[4] = '^';
      charArray0[5] = 'X';
      charArray0[6] = '^';
      charArray0[7] = '^';
      char[] charArray1 = strBuilder0.getChars(charArray0);
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StringBuffer stringBuffer0 = strBuilder2.toStringBuffer();
      StrBuilder strBuilder4 = strBuilder0.append(5);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      String[] stringArray0 = strBuilder_StrBuilderTokenizer0.getTokenArray();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(object0, 117, 'X');
      String string0 = strBuilder1.leftString(117);
      StrBuilder strBuilder2 = strBuilder0.append(true);
      Consumer<String> consumer0 = (Consumer<String>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      strBuilder_StrBuilderTokenizer0.forEachRemaining(consumer0);
      Object object1 = new Object();
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadRight(object1, 0, '~');
      StrBuilder strBuilder4 = strBuilder2.insert(117, true);
      StrBuilder strBuilder5 = strBuilder1.appendNull();
      StrBuilder strBuilder6 = strBuilder5.append((char[]) null);
      StrBuilder strBuilder7 = strBuilder0.appendPadding((-326), 'y');
      int int0 = strBuilder0.indexOf('i', (-326));
      StrBuilder strBuilder8 = strBuilder0.replaceFirst('~', 'X');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      StrBuilder strBuilder9 = strBuilder5.append(strBuilder8, 0, 117);
      char[] charArray0 = new char[4];
      charArray0[0] = 'i';
      charArray0[1] = 'X';
      charArray0[2] = 'i';
      charArray0[3] = 'i';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      int int1 = strBuilder6.indexOf((StrMatcher) strMatcher_CharSetMatcher0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.replaceAll("~Ys>&|}T8l~]e", "~Ys>&|}T8l~]e");
      char[] charArray0 = new char[1];
      charArray0[0] = '#';
      int int0 = 1236;
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("j(*lL}wgItne6Hwa2:r");
      StrMatcher strMatcher1 = StrMatcher.stringMatcher((String) null);
      boolean boolean0 = strBuilder2.contains((StrMatcher) strMatcher_StringMatcher0);
      Object object0 = new Object();
      StrBuilder strBuilder3 = strBuilder0.insert(0, object0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      Writer writer0 = strBuilder3.asWriter();
      boolean boolean1 = strBuilder_StrBuilderReader0.ready();
      StrBuilder strBuilder4 = strBuilder3.setCharAt(0, '>');
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        strBuilder2.append(stringBuffer0, 0, 1584);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      String string0 = "t%Y;$eZ!BG5Di";
      StrBuilder strBuilder0 = new StrBuilder("t%Y;$eZ!BG5Di");
      int int0 = 1441;
      StrBuilder strBuilder1 = new StrBuilder(1441);
      StrBuilder strBuilder2 = strBuilder1.append(strBuilder0);
      StrBuilder strBuilder3 = strBuilder2.replaceFirst("Invalid offset: ", "Invalid offset: ");
      StrBuilder strBuilder4 = strBuilder0.append(strBuilder1);
      char[] charArray0 = new char[0];
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      int int1 = strBuilder4.indexOf(strMatcher0, 1441);
      StrBuilder strBuilder5 = strBuilder4.setNewLineText("t%Y;$eZ!BG5Di");
      Reader reader0 = strBuilder0.asReader();
      boolean boolean0 = strBuilder4.equals(strBuilder1);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1), false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Mac OS X");
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("Mac OS X");
      char[] charArray0 = new char[0];
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      char[] charArray1 = new char[0];
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray1);
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher("Mac OS X");
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_StringMatcher0);
      String string0 = strBuilder0.substring(0, 0);
      int int1 = strBuilder0.lastIndexOf("Mac OS X");
      char[] charArray2 = strBuilder0.getChars((char[]) null);
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterChar('C');
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Iterator) strTokenizer0, "Yh5F3Ls>`@p8kE%U");
      String string1 = strBuilder0.toString();
      int int2 = strBuilder0.size();
      StrBuilder strBuilder3 = strBuilder1.append(true);
      StrBuilder strBuilder4 = strBuilder2.appendPadding(0, 'C');
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Mac OS X");
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("Mac OS X");
      char[] charArray0 = new char[0];
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("Mac OS X");
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_StringMatcher0);
      String string0 = strBuilder0.substring(0, 0);
      int int1 = strBuilder0.lastIndexOf("Mac OS X");
      char[] charArray1 = strBuilder0.getChars((char[]) null);
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterChar('O');
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Iterator) strTokenizer0, "");
      String string1 = strBuilder0.toString();
      int int2 = strBuilder0.size();
      StrBuilder strBuilder3 = strBuilder1.append(true);
      StrBuilder strBuilder4 = strBuilder0.replaceFirst('O', '{');
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.insert(0, (-4));
      char[] charArray0 = new char[8];
      charArray0[0] = '/';
      charArray0[1] = '7';
      charArray0[2] = '?';
      charArray0[3] = 'J';
      charArray0[4] = 'F';
      charArray0[5] = 'y';
      charArray0[6] = '#';
      charArray0[7] = 'C';
      StrBuilder strBuilder2 = strBuilder1.append(charArray0);
      StrBuilder strBuilder3 = strBuilder2.append((StringBuffer) null, (-4), (-4));
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      boolean boolean0 = strBuilder1.contains(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder0.validateRange((-1), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(44);
      boolean boolean0 = strBuilder0.isEmpty();
      StrBuilder strBuilder1 = strBuilder0.deleteAll("y/IipX:D{`mEW(");
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.size();
      StrBuilder strBuilder1 = strBuilder0.append((long) 0);
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[2] = (Object) strBuilder0;
      StringBuffer stringBuffer0 = new StringBuffer(9);
      stringBuffer0.trimToSize();
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-724));
      String string0 = "";
      boolean boolean0 = strBuilder0.contains("");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      Writer writer0 = strBuilder_StrBuilderWriter0.append('D');
      strBuilder_StrBuilderWriter0.write("G~zWFBkR`R&CfDLXz");
      strBuilder_StrBuilderWriter0.write("");
      boolean boolean1 = strBuilder0.equalsIgnoreCase(strBuilder0);
      char char0 = 'f';
      boolean boolean2 = strBuilder0.contains('f');
      String string1 = strBuilder0.leftString((-724));
      StrBuilder strBuilder1 = strBuilder0.append((long) 3587);
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder0);
      StringBuffer stringBuffer0 = new StringBuffer("");
      // Undeclared exception!
      try { 
        stringBuffer0.setLength((-650));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -650
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(108);
      Object object0 = new Object();
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("pyO-q*~Po0o)");
      String string0 = strBuilder1.toString();
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft(object0, 0, '=');
      StrBuilder strBuilder3 = strBuilder2.append('=');
      String string1 = strBuilder2.midString((-1645), 0);
      int int0 = strBuilder2.indexOf('=');
      int int1 = strBuilder0.lastIndexOf('=');
      int int2 = strBuilder0.lastIndexOf("", (-495));
      StrBuilder strBuilder4 = strBuilder0.appendPadding(32, 'k');
      StrBuilder strBuilder5 = strBuilder0.deleteFirst("");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      char[] charArray0 = new char[3];
      charArray0[0] = 'k';
      charArray0[1] = '=';
      charArray0[2] = 'k';
      strBuilder_StrBuilderWriter0.write(charArray0);
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) "");
      strBuilder_StrBuilderWriter0.write("");
      int int3 = strBuilder4.capacity();
      StrBuilder strBuilder6 = strBuilder3.insert(32, "");
      StrBuilder strBuilder7 = strBuilder1.insert(0, 0L);
      boolean boolean0 = strBuilder7.contains('k');
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      char char0 = 'x';
      StrMatcher strMatcher1 = StrMatcher.charMatcher('x');
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<StrBuilder> linkedList1 = new LinkedList<StrBuilder>();
      Writer writer0 = strBuilder0.asWriter();
      StrMatcher strMatcher2 = StrMatcher.stringMatcher("");
      StrBuilder strBuilder1 = strBuilder0.replaceAll("", "");
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Object[]) null, "");
      String string0 = strBuilder2.leftString(2727);
      boolean boolean1 = linkedList0.containsAll(linkedList1);
      ListIterator<String> listIterator0 = linkedList0.listIterator();
      String string1 = linkedList0.poll();
      boolean boolean2 = linkedList0.add("");
      linkedList0.clear();
      StrBuilder strBuilder3 = strBuilder0.appendWithSeparators((Collection) linkedList0, "l22+eqbky4&4");
      boolean boolean3 = strBuilder3.contains(strMatcher0);
      int int0 = strBuilder3.lastIndexOf(strMatcher0, 117);
      String string2 = strBuilder1.leftString(1066);
      StrBuilder strBuilder4 = strBuilder2.appendWithSeparators((Object[]) null, "");
      StrBuilder strBuilder5 = strBuilder4.appendWithSeparators((Object[]) null, "");
      int int1 = strBuilder2.indexOf(strMatcher1);
      // Undeclared exception!
      try { 
        strBuilder2.charAt(115);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 115
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('K');
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrBuilder strBuilder2 = strBuilder0.deleteAll(strMatcher0);
      char[] charArray0 = new char[4];
      charArray0[0] = 'K';
      charArray0[1] = 'K';
      charArray0[2] = 'K';
      charArray0[3] = 'K';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder1.lastIndexOf((StrMatcher) null);
      int int1 = strBuilder0.lastIndexOf('8');
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators((Object[]) null, "2PB,?=q)");
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3053);
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      char[] charArray0 = strBuilder0.toCharArray();
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      boolean boolean0 = strBuilder0.startsWith("lLs#k");
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      // Undeclared exception!
      try { 
        strBuilder1.insert((-611), 'Q');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -611
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      String string0 = "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer";
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      char char0 = '1';
      int int0 = strBuilder0.lastIndexOf('1');
      char[] charArray0 = new char[4];
      charArray0[0] = '1';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      strBuilder0.size = (-1);
      charArray0[1] = '1';
      // Undeclared exception!
      try { 
        strBuilder0.toStringBuffer();
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(735);
      StrBuilder strBuilder1 = new StrBuilder(735);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      String[] stringArray0 = strBuilder_StrBuilderTokenizer0.getTokenArray();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft(object0, 735, 'I');
      StrBuilder strBuilder3 = new StrBuilder();
      StrBuilder strBuilder4 = strBuilder0.append(strBuilder1);
      int int0 = StrBuilder.CAPACITY;
      boolean boolean0 = strBuilder_StrBuilderTokenizer0.isIgnoreEmptyTokens();
      StrBuilder strBuilder5 = strBuilder3.appendNull();
      StrBuilder strBuilder6 = strBuilder5.append("z0P3{qVsP(>I)P");
      StrBuilder strBuilder7 = strBuilder5.append(2);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = '}';
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('}');
      char[] charArray0 = new char[0];
      strBuilder1.buffer = charArray0;
      StrBuilder strBuilder2 = strBuilder0.append(charArray0);
      strBuilder1.buffer = charArray0;
      // Undeclared exception!
      try { 
        strBuilder1.insert(101, (-1.0));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 101
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 3;
      String string0 = strBuilder0.leftString(3);
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      char[] charArray0 = new char[9];
      charArray0[0] = '.';
      charArray0[1] = 'r';
      charArray0[2] = '#';
      charArray0[3] = '~';
      charArray0[4] = '';
      charArray0[5] = 'U';
      charArray0[6] = 'c';
      charArray0[7] = '6';
      charArray0[8] = 'o';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "");
      int int1 = strBuilder1.indexOf(strMatcher0, (-632));
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("TV?ZWOL5K");
      StrBuilder strBuilder2 = strBuilder0.appendNewLine();
      // Undeclared exception!
      try { 
        strBuilder0.replace((StrMatcher) strMatcher_StringMatcher0, "", 3, 0, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      int int0 = (-1);
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("length must be valid");
      String string0 = strBuilder0.rightString((-1));
      StrBuilder strBuilder2 = strBuilder0.ensureCapacity((-1));
      StrBuilder strBuilder3 = strBuilder2.deleteAll("");
      StrBuilder strBuilder4 = strBuilder3.deleteFirst("");
      int int1 = (-1464);
      char[] charArray0 = new char[3];
      charArray0[0] = 'u';
      int int2 = (-922);
      // Undeclared exception!
      try { 
        strBuilder4.insert((-922), (double) (-1464));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -922
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.append(0);
      String string1 = "";
      boolean boolean0 = strBuilder0.endsWith("");
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('6');
      StringBuffer stringBuffer0 = strBuilder1.toStringBuffer();
      StrBuilder strBuilder2 = strBuilder0.deleteAll((StrMatcher) strMatcher_CharMatcher0);
      int int0 = strBuilder0.lastIndexOf((StrMatcher) null, (-580));
      char[] charArray0 = new char[4];
      charArray0[0] = '6';
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("Invalid length: ");
      charArray0[1] = '6';
      charArray0[2] = '6';
      charArray0[3] = '6';
      char[] charArray1 = strBuilder0.getChars(charArray0);
      // Undeclared exception!
      try { 
        strBuilder2.deleteCharAt((-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      int int0 = 115;
      StrBuilder strBuilder0 = new StrBuilder(115);
      int int1 = strBuilder0.lastIndexOf("java.version", 115);
      int int2 = (-1953);
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("java.version");
      int int3 = (-3059);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        strBuilder0.insert((-3059), object0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3059
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("/U]Z%I~,`^TH7");
      StrBuilder strBuilder1 = strBuilder0.replaceAll('d', 'I');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      char[] charArray0 = new char[3];
      charArray0[0] = 'd';
      charArray0[1] = 'z';
      charArray0[2] = 'd';
      StrBuilder strBuilder2 = strBuilder1.append(charArray0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) null, "Fd$6M_#:'1~K");
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      String string0 = null;
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      boolean boolean0 = strBuilder0.equals((Object) null);
      int int0 = 2890;
      char char0 = 'f';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(2890, 0, 'f');
      int int1 = (-2630);
      // Undeclared exception!
      try { 
        strBuilder1.setLength((-2630));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2630
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      int int0 = 31;
      StrBuilder strBuilder0 = new StrBuilder(31);
      StrBuilder strBuilder1 = strBuilder0.append((char[]) null, 0, 0);
      // Undeclared exception!
      try { 
        strBuilder0.getChars(0, 0, (char[]) null, 31);
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = strBuilder0.toString();
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrBuilder strBuilder2 = strBuilder1.replaceFirst(strMatcher0, "d<WwkIq`6k0:");
      StrBuilder strBuilder3 = strBuilder0.trim();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      int int0 = strBuilder2.indexOf("java.vm.specification.version", 0);
      Writer writer0 = strBuilder2.asWriter();
      String[] stringArray0 = strBuilder_StrBuilderTokenizer0.getTokenArray();
      int int1 = strBuilder2.lastIndexOf('4', 7);
      StrBuilder strBuilder4 = strBuilder3.replaceFirst("d<WwkIq`6k0:", "@C-");
      StrBuilder strBuilder5 = strBuilder4.replace(strMatcher0, "d<WwkIq`6k0:", 0, 2388, 2388);
      int int2 = (-3305);
      char[] charArray0 = new char[3];
      charArray0[0] = '4';
      charArray0[1] = '4';
      charArray0[2] = '4';
      // Undeclared exception!
      try { 
        strBuilder2.getChars(0, (-3305), charArray0, 44);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3305
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      StrBuilder strBuilder1 = strBuilder0.insert(3, '|');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      StrBuilder strBuilder2 = strBuilder1.setCharAt(3, '(');
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder2.getChars(524, 524, charArray0, 524);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 524
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.substring(0, 0);
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, (-1), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.runtime.version");
      StrBuilder strBuilder1 = strBuilder0.setNullText("java.runtime.version");
      Object object0 = new Object();
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft(object0, (-3700), 'G');
      int int0 = 0;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      Object object1 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder strBuilder3 = strBuilder1.insert(0, object1);
      char char0 = 'T';
      StrBuilder strBuilder4 = strBuilder3.deleteAll('T');
      StrTokenizer strTokenizer0 = strBuilder3.asTokenizer();
      int int1 = strBuilder1.indexOf("java.runtime.version", (-1727));
      StrBuilder strBuilder5 = strBuilder0.append(false);
      StrBuilder strBuilder6 = strBuilder1.reverse();
      int int2 = (-2110);
      int int3 = strBuilder2.lastIndexOf("java.runtime.version", (-2110));
      StrBuilder strBuilder7 = strBuilder5.replaceFirst("java.runtime.version", "Invalid offset: ");
      Reader reader0 = strBuilder1.asReader();
      // Undeclared exception!
      try { 
        strBuilder5.insert((-1), (-969.25F));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3476);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
      Writer writer0 = strBuilder0.asWriter();
      int int0 = strBuilder0.hashCode();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder strBuilder2 = strBuilder0.append('Q');
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      int int1 = strBuilder0.indexOf(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      int int0 = (-1655);
      StrBuilder strBuilder0 = new StrBuilder((-1655));
      StringBuffer stringBuffer0 = new StringBuffer("$-p=03=?po<*");
      int int1 = 0;
      char[] charArray0 = new char[8];
      charArray0[0] = ',';
      charArray0[1] = '-';
      charArray0[2] = ';';
      charArray0[3] = ' ';
      charArray0[4] = '9';
      charArray0[5] = '@';
      charArray0[6] = '0';
      char char0 = '^';
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.previous();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.charAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
      int int0 = strBuilder0.lastIndexOf((String) null, 0);
      char[] charArray0 = new char[4];
      charArray0[0] = ' ';
      charArray0[1] = 'h';
      charArray0[2] = '>';
      charArray0[3] = 'B';
      // Undeclared exception!
      try { 
        strBuilder0.getChars((-1), 0, charArray0, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteAll("xg:}Ty$}M+9P{(I?AW");
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      int int0 = strBuilder1.indexOf(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.replaceFirst("", "Irix");
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder3 = strBuilder0.appendNewLine();
      String string0 = strBuilder3.toString();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher1 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      int int1 = strBuilder2.lastIndexOf(strMatcher1, 3);
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('$');
      int int2 = strBuilder3.indexOf((StrMatcher) strMatcher_CharMatcher0);
      int int3 = strBuilder3.lastIndexOf((StrMatcher) strMatcher_CharMatcher0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(3);
      strBuilder_StrBuilderReader0.close();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      // Undeclared exception!
      try { 
        strBuilder1.insert(3, object0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("@-0W");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      Writer writer0 = strBuilder_StrBuilderWriter0.append('y');
      strBuilder_StrBuilderWriter0.write((-1606));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      long long0 = strBuilder_StrBuilderReader0.skip(0L);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((-1606), 0, '?');
      boolean boolean0 = strBuilder1.startsWith((String) null);
      StrBuilder strBuilder2 = strBuilder1.deleteFirst('?');
      int int0 = strBuilder1.indexOf("c9ua");
      boolean boolean1 = strBuilder0.contains('a');
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2);
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('z', 'Z');
      char[] charArray0 = new char[5];
      charArray0[0] = 'Z';
      charArray0[1] = 'z';
      charArray0[2] = 'Z';
      charArray0[3] = 'U';
      charArray0[4] = '}';
      // Undeclared exception!
      try { 
        strBuilder1.append(charArray0, 2, (-3277));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: -3277
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('K');
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("2PB,?=q)");
      char[] charArray0 = new char[4];
      charArray0[0] = 'K';
      charArray0[1] = 'K';
      charArray0[2] = 'K';
      charArray0[3] = 'K';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder2 = strBuilder1.replaceFirst(strMatcher0, "2PB,?=q)");
      int int0 = strBuilder1.lastIndexOf((StrMatcher) null);
      int int1 = strBuilder0.lastIndexOf('8');
      // Undeclared exception!
      try { 
        strBuilder2.charAt(569);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 569
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1120);
      int int0 = strBuilder0.lastIndexOf('*', 2508);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      int int0 = (-1385);
      StrBuilder strBuilder0 = new StrBuilder((-1385));
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder1.append(false);
      int int1 = (-1);
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, (-1385), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0, (-1));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[2];
      charArray0[0] = 'H';
      charArray0[1] = 'Y';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, (-1), (-1190));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      String string0 = "7OsH;M2l>xyWSHUw";
      StrBuilder strBuilder0 = new StrBuilder("7OsH;M2l>xyWSHUw");
      StrBuilder strBuilder1 = strBuilder0.replaceAll('!', '9');
      StrBuilder strBuilder2 = strBuilder1.append(strBuilder0);
      StrMatcher strMatcher0 = StrMatcher.charMatcher('H');
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("N;v@#p@H[");
      String string1 = "user.dir";
      StrBuilder strBuilder3 = strBuilder1.replaceFirst(strMatcher0, "user.dir");
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) strBuilder2;
      objectArray0[1] = (Object) "N;v@#p@H[";
      objectArray0[2] = (Object) strBuilder3;
      objectArray0[3] = (Object) strBuilder0;
      objectArray0[4] = (Object) strBuilder2;
      StrBuilder strBuilder4 = strBuilder3.appendWithSeparators(objectArray0, "7OsH;M2l>xyWSHUw");
      StrBuilder strBuilder5 = strBuilder2.trim();
      int int0 = 44;
      char[] charArray0 = new char[1];
      charArray0[0] = '!';
      StrBuilder strBuilder6 = strBuilder3.insert(44, charArray0);
      // Undeclared exception!
      try { 
        strBuilder6.substring(1868);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      int int0 = (-393);
      StrBuilder strBuilder1 = strBuilder0.insert(0, false);
      char[] charArray0 = new char[7];
      charArray0[0] = '_';
      charArray0[1] = '(';
      charArray0[2] = 'q';
      charArray0[3] = '3';
      charArray0[4] = 'K';
      charArray0[5] = 'M';
      StringBuffer stringBuffer0 = null;
      try {
        stringBuffer0 = new StringBuffer((String) null);
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.specification.version");
      String string0 = strBuilder0.toString();
      char char0 = ' ';
      StrBuilder strBuilder1 = strBuilder0.appendPadding(524, ' ');
      StrBuilder strBuilder2 = strBuilder1.insert(524, (Object) "java.specification.version");
      boolean boolean0 = strBuilder0.startsWith("");
      StrBuilder strBuilder3 = new StrBuilder(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder3.new StrBuilderTokenizer();
      StringBuffer stringBuffer0 = new StringBuffer(524);
      // Undeclared exception!
      try { 
        strBuilder3.append(stringBuffer0, 1133, 1133);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      boolean boolean0 = strBuilder0.startsWith("");
      StrBuilder strBuilder1 = strBuilder0.append(true);
      int int0 = 5;
      // Undeclared exception!
      try { 
        strBuilder1.substring(5);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2772);
      StrBuilder strBuilder1 = new StrBuilder(2772);
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        strBuilder1.append(stringBuffer0, 2772, 2772);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("BgwePaxfM`");
      strBuilder0.validateIndex(2);
      int int0 = strBuilder0.indexOf("~:Zd<?", 327);
      // Undeclared exception!
      try { 
        strBuilder0.append("~:Zd<?", (-1), 327);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      int int0 = 9;
      StrBuilder strBuilder0 = new StrBuilder(9);
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      StrBuilder strBuilder2 = strBuilder0.append(9);
      StrBuilder strBuilder3 = strBuilder1.append(0L);
      StrBuilder strBuilder4 = strBuilder0.append((Object) null);
      StrBuilder strBuilder5 = strBuilder1.appendNull();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder4.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.nextToken();
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 9, 32);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("org.apache.commons.lang.text.StrMatcher$CharSetMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[4];
      charArray0[0] = '0';
      StrBuilder strBuilder1 = new StrBuilder(0);
      StrBuilder strBuilder2 = strBuilder1.setNullText("");
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder1);
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoreEmptyTokens(false);
      charArray0[1] = '&';
      charArray0[2] = 'b';
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      StrTokenizer strTokenizer1 = strBuilder_StrBuilderTokenizer0.setDelimiterMatcher(strMatcher0);
      charArray0[3] = '0';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 32, (-1197));
      String string0 = strBuilder0.getNullText();
      // Undeclared exception!
      try { 
        strBuilder2.substring(3337);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      String string0 = " +U";
      StrBuilder strBuilder1 = strBuilder0.replaceAll("", " +U");
      StrBuilder strBuilder2 = strBuilder0.append(2367);
      // Undeclared exception!
      try { 
        strBuilder1.insert(2367, "{%*><;&~(6");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2367
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2473));
      StrBuilder strBuilder1 = new StrBuilder("I2DpH~]yi?6B-]1");
      char char0 = 'u';
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight((Object) strBuilder1, (-2473), 'u');
      String string0 = strBuilder0.toString();
      // Undeclared exception!
      try { 
        strBuilder2.insert((-2473), false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2473
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrMatcher$CharSetMatcher");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("org.apache.commons.lang.text.StrMatcher$CharSetMatcher");
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('P');
      StrBuilder strBuilder2 = strBuilder1.replaceFirst(strMatcher0, "cA");
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      String string0 = "Vg.#`>#zJu@$d+yq";
      StrBuilder strBuilder0 = new StrBuilder("Vg.#`>#zJu@$d+yq");
      boolean boolean0 = strBuilder0.endsWith("Invalid length: ");
      StrBuilder strBuilder1 = new StrBuilder("Invalid length: ");
      String string1 = strBuilder1.rightString(0);
      boolean boolean1 = strBuilder0.equals(strBuilder1);
      int int0 = strBuilder0.length();
      int int1 = (-610);
      StrBuilder strBuilder2 = strBuilder0.deleteFirst("Invalid length: ");
      String string2 = strBuilder0.midString((-610), 16);
      StrBuilder strBuilder3 = strBuilder0.insert(0, (Object) "Vg.#`>#zJu@$d+yq");
      StrBuilder strBuilder4 = strBuilder3.appendNull();
      StrBuilder strBuilder5 = strBuilder3.setNullText("1.3");
      StringBuffer stringBuffer0 = strBuilder5.toStringBuffer();
      String string3 = strBuilder3.toString();
      int int2 = 1421;
      // Undeclared exception!
      try { 
        strBuilder3.insert(1421, 1421);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1421
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((-1695.2305107837));
      int int0 = 0;
      String string0 = strBuilder0.rightString(0);
      StrBuilder strBuilder2 = strBuilder1.append("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      int int1 = 5;
      int int2 = (-1783);
      // Undeclared exception!
      try { 
        strBuilder0.append("H>C}0QHA", 5, (-1783));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0, 1083);
      String string0 = "_{tt6GR!QD='n)f0nD8";
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) null, "_{tt6GR!QD='n)f0nD8");
      StrBuilder strBuilder2 = strBuilder0.setNullText("_{tt6GR!QD='n)f0nD8");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer1 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher1 = strBuilder_StrBuilderTokenizer1.getQuoteMatcher();
      StrMatcher strMatcher2 = StrMatcher.stringMatcher("sVTR}{");
      boolean boolean0 = strBuilder0.contains(strMatcher1);
      StrBuilder strBuilder3 = strBuilder1.appendFixedWidthPadLeft((Object) "_{tt6GR!QD='n)f0nD8", 0, ')');
      StrBuilder strBuilder4 = strBuilder1.clear();
      // Undeclared exception!
      try { 
        strBuilder4.append("e8bx]Gw[l", 486, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(735);
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      String[] stringArray0 = strBuilder_StrBuilderTokenizer0.getTokenArray();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft(object0, 735, 'I');
      StrBuilder strBuilder3 = strBuilder2.append(735);
      StrBuilder strBuilder4 = strBuilder0.append(strBuilder1);
      int int0 = strBuilder1.validateRange(44, 464);
      boolean boolean0 = strBuilder1.startsWith("z0P3{qVsP(>I)P");
      StrBuilder strBuilder5 = strBuilder3.appendNull();
      StrBuilder strBuilder6 = strBuilder5.append(2);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(108);
      Object object0 = new Object();
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("pyO-q*~Po0o)");
      String string0 = strBuilder1.toString();
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft(object0, 0, '=');
      StrBuilder strBuilder3 = strBuilder2.append('=');
      String string1 = strBuilder2.midString((-1645), 0);
      int int0 = strBuilder2.indexOf('=');
      int int1 = strBuilder0.lastIndexOf('=');
      int int2 = strBuilder0.lastIndexOf("", (-495));
      StrBuilder strBuilder4 = strBuilder0.appendPadding(32, 'k');
      StrBuilder strBuilder5 = strBuilder0.deleteFirst("");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) "");
      strBuilder_StrBuilderWriter0.write("");
      int int3 = strBuilder4.capacity();
      StrBuilder strBuilder6 = strBuilder3.insert(32, "");
      StrBuilder strBuilder7 = strBuilder1.insert(0, 0L);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.append(0.0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      StrBuilder strBuilder2 = new StrBuilder("java.vm.specification.name");
      int int1 = (-899);
      // Undeclared exception!
      try { 
        strBuilder1.append(strBuilder2, 48, (-899));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1528);
      int int0 = strBuilder0.indexOf('/');
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("C^,|8yQ]0BV,78l");
      String string0 = "qedEqf\\ub#/iaK_B";
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("C^,|8yQ]0BV,78l");
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight(2731, 2731, 'E');
      char[] charArray0 = new char[8];
      charArray0[0] = 'E';
      charArray0[1] = 'E';
      charArray0[2] = 'E';
      charArray0[3] = 'E';
      charArray0[4] = 'E';
      charArray0[5] = 'E';
      charArray0[6] = 'E';
      charArray0[7] = 'E';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrMatcher strMatcher2 = StrMatcher.stringMatcher(string0);
      String string1 = strBuilder0.rightString(2731);
      String string2 = strBuilder0.leftString(2731);
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 2);
      // Undeclared exception!
      try { 
        strBuilder2.append(strBuilder0, 2731, 777);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("^6]lJ432!");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("u");
      StrBuilder strBuilder2 = strBuilder1.append(0L);
      StrBuilder strBuilder3 = strBuilder2.ensureCapacity(117);
      StrBuilder strBuilder4 = strBuilder1.replaceFirst("<>tp>5", "");
      StrBuilder strBuilder5 = strBuilder1.ensureCapacity(0);
      char[] charArray0 = new char[8];
      charArray0[0] = 'n';
      charArray0[1] = 'C';
      charArray0[2] = 'D';
      charArray0[3] = ';';
      charArray0[4] = 'B';
      charArray0[5] = ',';
      charArray0[6] = 'm';
      charArray0[7] = '~';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder5.indexOf(strMatcher0);
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("u");
      int int1 = strBuilder4.indexOf(strMatcher1, 1961);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      char[] charArray0 = new char[7];
      charArray0[0] = 'H';
      charArray0[1] = '$';
      charArray0[2] = '(';
      charArray0[3] = '@';
      charArray0[4] = '3';
      charArray0[5] = 'd';
      charArray0[6] = 'j';
      StrBuilder strBuilder1 = strBuilder0.insert(0, charArray0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
      StrBuilder strBuilder1 = strBuilder0.deleteAll("exS:Hwl-)YX;.#NN");
      char[] charArray0 = new char[7];
      charArray0[0] = '#';
      charArray0[1] = 'm';
      charArray0[2] = '4';
      charArray0[3] = '?';
      charArray0[4] = 'O';
      charArray0[5] = ';';
      charArray0[6] = 't';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      int int0 = strBuilder1.indexOf((StrMatcher) strMatcher_CharSetMatcher0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 850;
      strBuilder0.size = 850;
      int int1 = 34;
      // Undeclared exception!
      try { 
        strBuilder0.rightString(34);
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.append((-86.99182932834));
      String string0 = strBuilder1.midString(1545, 1545);
      StrBuilder strBuilder2 = strBuilder1.replaceFirst("", "");
      StrBuilder strBuilder3 = strBuilder2.trim();
      String string1 = strBuilder2.rightString(4);
      // Undeclared exception!
      try { 
        strBuilder2.validateRange(570, 1545);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.toString();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "StrTokenizer[not tokenized yet]");
      int int0 = (-338);
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance();
      String string1 = strBuilder0.rightString(97);
      StringBuffer stringBuffer1 = stringBuffer0.append((Object) strBuilder0);
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray((-338), (-338));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -338
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder("Un|[0B>}BT|3lZ~");
      Object[] objectArray0 = new Object[1];
      int int0 = 0;
      StrTokenizer strTokenizer0 = strBuilder1.asTokenizer();
      StrBuilder strBuilder2 = strBuilder0.replaceFirst((StrMatcher) null, "Un|[0B>}BT|3lZ~");
      StrBuilder strBuilder3 = strBuilder2.insert(0, 3948L);
      String string0 = strBuilder3.midString(91, 0);
      int int1 = strBuilder1.indexOf((StrMatcher) null, 0);
      objectArray0[0] = (Object) strBuilder0;
      StrBuilder strBuilder4 = strBuilder1.appendWithSeparators(objectArray0, "Un|[0B>}BT|3lZ~");
      StrBuilder strBuilder5 = strBuilder0.append((Object) strBuilder1);
      char char0 = 's';
      char char1 = ')';
      // Undeclared exception!
      try { 
        strBuilder2.charAt((-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("kN%~uoA4q");
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("u");
      Writer writer0 = strBuilder0.asWriter();
      int int0 = strBuilder0.lastIndexOf('^');
      // Undeclared exception!
      try { 
        strBuilder1.insert((-1), 1115);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-3697));
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(0);
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrBuilder strBuilder2 = strBuilder0.insert(0, 0.0);
      Writer writer0 = strBuilder0.asWriter();
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      String string0 = "(^ob(X";
      boolean boolean0 = strBuilder0.contains("(^ob(X");
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "68#UeBxNJ3~j(g");
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) null;
      int int0 = 116;
      char[] charArray0 = new char[4];
      char char0 = 'h';
      charArray0[0] = 'h';
      char char1 = ',';
      charArray0[1] = ',';
      charArray0[2] = 'D';
      char char2 = '|';
      charArray0[3] = '|';
      // Undeclared exception!
      try { 
        strBuilder1.insert(116, charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 116
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      Reader reader0 = strBuilder0.asReader();
      int int0 = strBuilder0.indexOf((StrMatcher) null);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[3];
      int int1 = strBuilder_StrBuilderReader0.read();
      charArray0[0] = 'x';
      charArray0[1] = '/';
      charArray0[2] = 'b';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, (-1), 0);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("&P^Da+Y*4Y2CO[;L");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) "&P^Da+Y*4Y2CO[;L", (-1104), 'g');
      StrMatcher strMatcher0 = null;
      StrBuilder strBuilder2 = strBuilder1.deleteAll((StrMatcher) null);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[1];
      strBuilder_StrBuilderWriter0.write((char[]) null);
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) "&P^Da+Y*4Y2CO[;L", 0, 2);
      charArray0[0] = 'K';
      strBuilder_StrBuilderWriter0.write(charArray0);
      StrBuilder strBuilder3 = strBuilder0.replaceAll((StrMatcher) null, "&P^Da+Y*4Y2CO[;L");
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) null;
      objectArray0[1] = (Object) strBuilder2;
      objectArray0[2] = (Object) writer0;
      objectArray0[3] = (Object) strBuilder3;
      StrBuilder strBuilder4 = strBuilder2.appendWithSeparators(objectArray0, "end < start");
      StrBuilder strBuilder5 = strBuilder0.deleteFirst((StrMatcher) null);
      int int0 = strBuilder1.capacity();
      // Undeclared exception!
      try { 
        strBuilder4.insert(0, charArray0, 219, (-336));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: 219
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      StrTokenizer strTokenizer0 = strBuilder2.asTokenizer();
      StrBuilder strBuilder3 = strBuilder0.append('');
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("[]NteHg3/@?muN<U}");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('>', '[');
      int int0 = 0;
      StrBuilder strBuilder2 = strBuilder1.deleteCharAt(0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      char[] charArray0 = new char[9];
      charArray0[0] = '[';
      charArray0[1] = '>';
      charArray0[2] = '>';
      charArray0[3] = '>';
      charArray0[4] = '>';
      charArray0[5] = '[';
      charArray0[6] = '[';
      charArray0[7] = '>';
      charArray0[8] = '[';
      int int1 = 44;
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 0, 44);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 44
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(5);
      StrBuilder strBuilder1 = new StrBuilder(5);
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      StrBuilder strBuilder3 = strBuilder0.replaceAll((String) null, "org.apache.commons.lang.text.StrMatcher$CharSetMatcher");
      boolean boolean0 = strBuilder0.contains("");
      char[] charArray0 = new char[7];
      charArray0[0] = '@';
      charArray0[1] = 'Y';
      charArray0[2] = 'y';
      charArray0[3] = ',';
      charArray0[4] = 'x';
      charArray0[5] = 'J';
      charArray0[6] = '9';
      // Undeclared exception!
      try { 
        strBuilder1.insert(5, charArray0, (-2672), 328);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 5
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      String string0 = "remove() is unsupported";
      StrBuilder strBuilder0 = new StrBuilder("remove() is unsupported");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.next();
      boolean boolean0 = strBuilder0.equals((Object) "remove()");
      int int0 = 5;
      StrBuilder strBuilder1 = strBuilder0.insert(5, (char[]) null);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("remove() is unsupported", 637, 3553);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      int int0 = (-2625);
      StrBuilder strBuilder0 = new StrBuilder((-2625));
      int int1 = 0;
      StrBuilder strBuilder1 = strBuilder0.insert(0, 0.0F);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-2625), (Object) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2625
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceAll(':', ':');
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("kbzh");
      StrBuilder strBuilder2 = strBuilder1.replaceAll(strMatcher0, "kbzh");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.next();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2416));
      int int0 = 195;
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder0;
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance("Invalid offset: ");
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "X;xg^|u2[%(CsU]De}K");
      StrBuilder strBuilder2 = strBuilder0.append("Invalid offset: ");
      objectArray0[2] = (Object) strBuilder0;
      objectArray0[3] = (Object) strBuilder0;
      objectArray0[4] = (Object) strBuilder0;
      objectArray0[5] = (Object) strBuilder0;
      // Undeclared exception!
      try { 
        strBuilder0.insert(273, 871.0F);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 273
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = 'q';
      StrBuilder strBuilder1 = strBuilder0.setNullText((String) null);
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder0.insert(231, charArray0, 231, 3);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 231
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(114);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrBuilder strBuilder1 = strBuilder0.append(114);
      StrBuilder strBuilder2 = strBuilder0.setNullText("");
      char[] charArray0 = new char[0];
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      StrBuilder strBuilder3 = strBuilder2.append(charArray0);
      String string0 = "(9UD ";
      int int0 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.insert(114, '{');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 114
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = '1';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((-2450), (-2523), '1');
      StrBuilder strBuilder2 = strBuilder1.ensureCapacity(0);
      StrBuilder strBuilder3 = strBuilder1.appendFixedWidthPadRight((-579), (-579), '1');
      int int0 = (-1320);
      // Undeclared exception!
      try { 
        strBuilder0.delete(34, (-1320));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-3354);
      int int1 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.delete((-3354), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3354
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.setLength(0);
      char[] charArray0 = new char[2];
      char char0 = '$';
      charArray0[0] = '$';
      charArray0[1] = '9';
      int int1 = 1;
      StrBuilder strBuilder2 = strBuilder1.append(charArray0, 0, 1);
      int int2 = 3;
      StrBuilder strBuilder3 = strBuilder2.deleteAll('9');
      // Undeclared exception!
      try { 
        strBuilder0.substring(3);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      char[] charArray0 = new char[9];
      charArray0[0] = '0';
      charArray0[1] = 'R';
      charArray0[2] = 'O';
      charArray0[3] = '{';
      charArray0[4] = '4';
      charArray0[5] = 'P';
      charArray0[6] = '\'';
      charArray0[7] = 'F';
      charArray0[8] = '@';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = "";
      char[] charArray0 = new char[4];
      charArray0[0] = '~';
      charArray0[1] = 'n';
      charArray0[2] = 'e';
      charArray0[3] = '';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 0, 102);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 102
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setLength(101);
      int int0 = (-608);
      // Undeclared exception!
      try { 
        strBuilder0.charAt((-608));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -608
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("fBAg6z9v-5%fa'");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      boolean boolean0 = linkedList0.containsAll(linkedList1);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "fBAg6z9v-5%fa'");
      StrBuilder strBuilder2 = strBuilder0.deleteAll('L');
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(0.0);
      int int0 = 102;
      char char0 = 'F';
      StrBuilder strBuilder2 = strBuilder1.appendPadding(102, 'F');
      Writer writer0 = strBuilder0.asWriter();
      int int1 = 0;
      float float0 = 556.0F;
      char char1 = '4';
      // Undeclared exception!
      try { 
        strBuilder0.insert(2300, '4');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2300
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.validateRange(0, 2815);
      StrBuilder strBuilder1 = strBuilder0.append('3');
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(334);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 334
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      int int0 = 65;
      StrBuilder strBuilder0 = new StrBuilder(65);
      int int1 = strBuilder0.capacity();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder strBuilder1 = strBuilder0.insert(0, 0L);
      StrBuilder strBuilder2 = new StrBuilder();
      StrBuilder strBuilder3 = strBuilder1.append((Object) strBuilder2);
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      String string0 = "path.separator";
      // Undeclared exception!
      try { 
        strBuilder0.substring(995, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3506);
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(3506);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3506
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("AZ~x\u0006\"@d|");
      char char0 = strBuilder0.charAt(0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder2 = strBuilder0.replaceFirst("7[U", "7[U");
      StrBuilder strBuilder3 = strBuilder2.deleteFirst('T');
      boolean boolean0 = strBuilder0.contains('0');
      StrBuilder strBuilder4 = strBuilder3.appendNewLine();
      boolean boolean1 = strBuilder4.equalsIgnoreCase(strBuilder2);
      char[] charArray0 = new char[9];
      charArray0[0] = '0';
      charArray0[1] = '4';
      charArray0[2] = 'T';
      charArray0[3] = '0';
      charArray0[4] = '*';
      charArray0[5] = 'T';
      charArray0[6] = 'T';
      charArray0[7] = 'T';
      charArray0[8] = '0';
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance(charArray0);
      StrBuilder strBuilder5 = strBuilder1.appendWithSeparators((Iterator) strTokenizer0, "7[U");
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = "Windows 9";
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("org.apache.commons.lang.text.StrMatcher$StringMatcher");
      StrTokenizer strTokenizer1 = strBuilder_StrBuilderTokenizer0.setIgnoredMatcher(strMatcher0);
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("Windows 9");
      StrTokenizer strTokenizer2 = strBuilder_StrBuilderTokenizer0.setIgnoredMatcher(strMatcher_StringMatcher0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer2, "Windows 9");
      StrBuilder strBuilder2 = strBuilder0.reverse();
      StrBuilder strBuilder3 = strBuilder0.deleteFirst('<');
      StrBuilder strBuilder4 = strBuilder2.appendFixedWidthPadLeft(0, 0, 'h');
      String string1 = strBuilder4.midString(0, Integer.MAX_VALUE);
      StrBuilder strBuilder5 = strBuilder0.append((double) 0);
      // Undeclared exception!
      try { 
        strBuilder5.validateIndex((-422));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -422
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.append('h');
      String string0 = "";
      // Undeclared exception!
      try { 
        strBuilder0.replace(44, 0, "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoreEmptyTokens(true);
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher((String) null);
      int int0 = 2;
      // Undeclared exception!
      try { 
        strBuilder0.replace(strMatcher0, "Gh4@hk#2@", 2, 2, 2);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      int int0 = (-6532);
      StrBuilder strBuilder0 = new StrBuilder((-6532));
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder strBuilder1 = strBuilder0.append((Object) "Invalid startIndex: ");
      // Undeclared exception!
      try { 
        strBuilder1.insert(876, 1634L);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 876
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.reverse();
      String string0 = strBuilder0.getNewLineText();
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset("6<\"w#0[@wp$$+W,");
      Object object0 = strBuilder_StrBuilderTokenizer0.next();
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrBuilder strBuilder2 = strBuilder1.append(1.0F);
      // Undeclared exception!
      try { 
        strBuilder2.insert((-2478), 0.0F);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2478
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("V.HrK) }SzA{");
      int int0 = 0;
      String string0 = strBuilder0.leftString(0);
      StrBuilder strBuilder1 = strBuilder0.append(true);
      // Undeclared exception!
      try { 
        strBuilder1.insert(57, (float) 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 57
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      // Undeclared exception!
      try { 
        strBuilder0.insert(1406, 0L);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1406
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.append(0L);
      Writer writer0 = strBuilder0.asWriter();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      char[] charArray0 = new char[8];
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      int int0 = strBuilder1.lastIndexOf(strMatcher0, 0);
      charArray0[0] = 'p';
      charArray0[1] = '2';
      charArray0[2] = '&';
      charArray0[3] = '\"';
      charArray0[4] = '-';
      charArray0[5] = 'W';
      charArray0[6] = '@';
      charArray0[7] = '-';
      int int1 = strBuilder_StrBuilderReader0.read(charArray0);
      strBuilder_StrBuilderReader0.mark(0);
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 3198, 9);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("c-");
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("c-");
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      boolean boolean0 = strBuilder0.isEmpty();
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt((-1), 'j');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      char char0 = 'y';
      StrBuilder strBuilder2 = strBuilder1.deleteFirst('y');
      StrBuilder strBuilder3 = strBuilder2.append(0L);
      int int0 = 0;
      StrBuilder strBuilder4 = strBuilder2.setLength(0);
      StrBuilder strBuilder5 = strBuilder0.append("eh3=2.%h");
      int int1 = (-1518);
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt((-1518));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1518
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("user.name");
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "");
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight((Object) "", 97, 'O');
      StringBuffer stringBuffer0 = new StringBuffer();
      StringBuffer stringBuffer1 = stringBuffer0.insert(0, "");
      StrBuilder strBuilder3 = strBuilder2.append(stringBuffer0);
      int int0 = strBuilder0.length();
      int int1 = strBuilder2.lastIndexOf(strMatcher1);
      char[] charArray0 = new char[8];
      charArray0[0] = 'O';
      charArray0[1] = 'T';
      charArray0[2] = 'p';
      charArray0[3] = 'O';
      charArray0[4] = 'O';
      charArray0[5] = 'O';
      charArray0[6] = 'O';
      charArray0[7] = 'O';
      StrBuilder strBuilder4 = strBuilder3.append(charArray0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 14, (-341));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -341
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[4];
      charArray0[0] = '1';
      charArray0[1] = 'p';
      charArray0[2] = 'I';
      charArray0[3] = 'G';
      strBuilder0.getChars(0, 0, charArray0, 0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      String string0 = "tW`";
      StrBuilder strBuilder0 = new StrBuilder("tW`");
      StrBuilder strBuilder1 = new StrBuilder();
      char[] charArray0 = new char[7];
      charArray0[0] = 'Z';
      charArray0[1] = 'B';
      charArray0[2] = 'G';
      charArray0[3] = '}';
      charArray0[4] = '8';
      charArray0[5] = 'c';
      charArray0[6] = 'A';
      int int0 = 115;
      // Undeclared exception!
      try { 
        strBuilder1.insert((-1026), charArray0, 115, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1026
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      int int0 = (-99);
      StrBuilder strBuilder0 = new StrBuilder((-99));
      StrBuilder strBuilder1 = strBuilder0.trim();
      StringBuffer stringBuffer0 = strBuilder1.toStringBuffer();
      // Undeclared exception!
      try { 
        strBuilder0.insert((-99), (Object) "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -99
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      long long0 = strBuilder_StrBuilderReader0.skip(0L);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((-1));
      strBuilder_StrBuilderWriter0.write("");
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("");
      strBuilder_StrBuilderWriter0.close();
      char char0 = '4';
      // Undeclared exception!
      try { 
        strBuilder1.setCharAt((-1), '4');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = new StrBuilder(0);
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      StrBuilder strBuilder2 = strBuilder1.appendNull();
      Writer writer0 = strBuilder0.asWriter();
      String string0 = strBuilder1.leftString(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      String string1 = strBuilder_StrBuilderTokenizer0.nextToken();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 0);
      StrBuilder strBuilder3 = strBuilder1.deleteFirst((String) null);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
      // Undeclared exception!
      try { 
        strBuilder2.setCharAt((-5004), '8');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -5004
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      int int0 = strBuilder0.indexOf("Invalid startIndex: ");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(0.0);
      StrBuilder strBuilder2 = strBuilder0.appendPadding((-872), '-');
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadRight(1114, 114, 'F');
      int int0 = strBuilder0.lastIndexOf('F', 0);
      String string0 = strBuilder0.midString(0, 0);
      // Undeclared exception!
      try { 
        strBuilder0.append("", 0, 969);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("file.encoding");
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "iF");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      // Undeclared exception!
      try { 
        strBuilder1.appendFixedWidthPadRight((Object) null, 115, '`');
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(4);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
      String string0 = strBuilder0.getNewLineText();
      String string1 = strBuilder0.midString(4, 0);
      int int0 = 895;
      // Undeclared exception!
      try { 
        strBuilder0.insert(895, (Object) "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 895
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.append(1046.1F);
      StrBuilder strBuilder2 = strBuilder0.deleteFirst('w');
      String string0 = strBuilder0.toString();
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = new StringBuffer(32);
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1, 0, 0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("4.9");
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("q");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((-652));
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(".63Yh*h7J6r");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("K]N%");
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(true);
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(97, 'd');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 97
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      Object[] objectArray0 = new Object[4];
      strBuilder0.size = (-1);
      objectArray0[0] = (Object) strMatcher0;
      objectArray0[1] = (Object) strBuilder0;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      objectArray0[2] = object0;
      Object object1 = strBuilder_StrBuilderTokenizer0.cloneReset();
      objectArray0[3] = object1;
      String string0 = "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer";
      // Undeclared exception!
      try { 
        strBuilder0.appendWithSeparators(objectArray0, "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-600));
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) strBuilder0;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      objectArray0[1] = object0;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "qI5dAZlA/!");
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.trim();
      String string0 = strBuilder0.getNullText();
      // Undeclared exception!
      try { 
        strBuilder1.charAt(425);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 425
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      Reader reader0 = strBuilder0.asReader();
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrMatcher strMatcher0 = StrMatcher.charMatcher('');
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("B.|");
      int int0 = strBuilder0.indexOf((StrMatcher) strMatcher_TrimMatcher0);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(0, 0, 'v');
      StrBuilder strBuilder2 = strBuilder1.minimizeCapacity();
      int int1 = strBuilder2.lastIndexOf("g6B=U-|xh[", 0);
      strBuilder2.validateIndex(0);
      StrBuilder strBuilder3 = strBuilder2.appendNull();
      boolean boolean0 = strBuilder1.endsWith("B.|");
      StrBuilder strBuilder4 = strBuilder1.append((double) (-1));
      StrBuilder strBuilder5 = strBuilder2.deleteAll(strMatcher1);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1), false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("\"DR+x#r]%//hd");
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      char[] charArray0 = new char[8];
      charArray0[0] = 'U';
      charArray0[1] = '7';
      charArray0[2] = 'r';
      charArray0[4] = ']';
      charArray0[5] = 'G';
      charArray0[6] = 'R';
      charArray0[7] = 'l';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.deleteAll((StrMatcher) strMatcher_TrimMatcher0);
      StrBuilder strBuilder2 = strBuilder0.ensureCapacity(1633);
      boolean boolean0 = strBuilder1.endsWith("#yQS[");
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.insert(0, ' ');
      StrBuilder strBuilder2 = strBuilder1.insert(0, (char[]) null, 0, 0);
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrBuilder strBuilder3 = strBuilder0.replaceFirst(strMatcher0, "");
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("o0KNyS~SS");
      String string0 = strBuilder0.midString((-1674), 0);
      boolean boolean0 = strBuilder3.endsWith("");
      StringBuffer stringBuffer0 = strBuilder3.toStringBuffer();
      StrBuilder strBuilder4 = new StrBuilder(0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder4.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("", 0, 0);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("{&jfg}1A");
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("qP*(z#'");
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "qP*(z#'");
      String string0 = strBuilder0.midString(3794, 3794);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2614));
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      // Undeclared exception!
      try { 
        strBuilder0.insert(1, 1);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      String string0 = "+,bs+AODQ";
      StrBuilder strBuilder0 = new StrBuilder("+,bs+AODQ");
      int int0 = (-490);
      strBuilder0.size = (-490);
      // Undeclared exception!
      try { 
        strBuilder0.minimizeCapacity();
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      String string0 = "Invalid startIndex: ";
      StrBuilder strBuilder0 = new StrBuilder("Invalid startIndex: ");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      ListIterator<Object> listIterator0 = linkedList0.listIterator();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) listIterator0, "");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrBuilder strBuilder2 = strBuilder1.appendPadding(2, ':');
      strBuilder_StrBuilderReader0.mark(0);
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "Invalid startIndex: ");
      char char0 = charBuffer0.get(0);
      long long0 = strBuilder_StrBuilderReader0.skip(0L);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      boolean boolean0 = linkedList0.add(object0);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charBuffer0);
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.StringCharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[4];
      int int0 = strBuilder_StrBuilderReader0.read(charArray0);
      charArray0[0] = '\"';
      charArray0[1] = 'f';
      charArray0[2] = 'x';
      charArray0[3] = 'v';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 2, (-4765));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("DI+]p)&Y.:v");
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("P,\"f F");
      strBuilder0.size = 0;
      StrBuilder strBuilder1 = strBuilder0.deleteFirst((StrMatcher) strMatcher_StringMatcher0);
      StrBuilder strBuilder2 = strBuilder1.setNewLineText("P,\"f F");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 2245, 2245);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      boolean boolean0 = linkedList0.add((String) null);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
      int int0 = strBuilder_StrBuilderReader0.read();
      StrBuilder strBuilder2 = strBuilder0.append(true);
      StrBuilder strBuilder3 = strBuilder0.deleteAll("");
      char[] charArray0 = new char[6];
      charArray0[0] = ';';
      charArray0[1] = 'f';
      charArray0[2] = 'Q';
      charArray0[3] = 'e';
      charArray0[4] = 'H';
      charArray0[5] = 'r';
      StrBuilder strBuilder4 = strBuilder3.append(charArray0);
      boolean boolean1 = strBuilder_StrBuilderReader0.ready();
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      String string1 = "";
      int int0 = (-1561);
      int int1 = 597;
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex(597);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 597
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteAll('9');
      int int0 = (-2077);
      // Undeclared exception!
      try { 
        strBuilder1.toCharArray((-2077), (-2077));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2077
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      int int0 = 31;
      StrBuilder strBuilder0 = new StrBuilder(31);
      int int1 = 1553;
      int int2 = (-293);
      int int3 = 0;
      int int4 = (-1382);
      // Undeclared exception!
      try { 
        strBuilder0.validateRange(0, (-1382));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      int int0 = (-1);
      StrBuilder strBuilder0 = new StrBuilder((-1));
      String string0 = "";
      StrBuilder strBuilder1 = strBuilder0.append("");
      Writer writer0 = strBuilder0.asWriter();
      char char0 = '2';
      StrBuilder strBuilder2 = strBuilder1.append((-1));
      StrBuilder strBuilder3 = strBuilder2.appendNull();
      boolean boolean0 = strBuilder1.contains('2');
      // Undeclared exception!
      try { 
        strBuilder0.substring((-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-437));
      char[] charArray0 = new char[3];
      charArray0[0] = 'z';
      charArray0[1] = '.';
      charArray0[2] = '[';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 887, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StringBuffer stringBuffer0 = strBuilder1.toStringBuffer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      // Undeclared exception!
      try { 
        strBuilder1.append("", (-2564), 3796);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("");
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("", "startIndex must be valid");
      StrBuilder strBuilder2 = strBuilder1.append((char[]) null, 0, 1021);
      StrBuilder strBuilder3 = strBuilder2.appendPadding(1021, '5');
      StrBuilder strBuilder4 = strBuilder0.setCharAt(32, 'k');
      int int0 = strBuilder0.capacity();
      StrBuilder strBuilder5 = strBuilder0.append((-1700.9));
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(48);
      StrBuilder strBuilder1 = strBuilder0.deleteAll('/');
      int int0 = strBuilder0.size();
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      int int0 = 273;
      StrBuilder strBuilder0 = new StrBuilder(273);
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray(273, 273);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("<`7L}0,cf");
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("K3zz=gPz*J#%3lF8");
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      String string0 = strBuilder0.midString(2421, 2421);
      StrBuilder strBuilder2 = strBuilder1.append(false);
      boolean boolean0 = strBuilder1.contains('I');
      char[] charArray0 = new char[8];
      charArray0[0] = 'I';
      charArray0[1] = ':';
      charArray0[2] = 'I';
      charArray0[3] = 'I';
      charArray0[4] = 'I';
      charArray0[5] = 'I';
      charArray0[6] = 'I';
      charArray0[7] = 'I';
      StrBuilder strBuilder3 = strBuilder2.append(charArray0);
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(57);
      boolean boolean0 = strBuilder0.contains('h');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0, 57);
      boolean boolean1 = strBuilder0.contains('h');
      String string0 = strBuilder0.toString();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(57, (-1), '[');
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-120));
      // Undeclared exception!
      try { 
        strBuilder0.substring((-2495));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2495
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(0);
      StrBuilder strBuilder2 = strBuilder0.append(500);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 5;
      int int1 = 3;
      StrBuilder strBuilder1 = strBuilder0.append("vau/=0_#'", 5, 3);
      // Undeclared exception!
      try { 
        strBuilder0.insert(5, 1.0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 5
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = "length must be valid";
      // Undeclared exception!
      try { 
        strBuilder0.append("length must be valid", 0, 2467);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("d");
      // Undeclared exception!
      try { 
        strBuilder0.append("j#YPIAM-LrA", 34, 4170);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[2];
      charArray0[0] = '&';
      charArray0[1] = '*';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 852, 852);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 852
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1009));
      int int0 = strBuilder0.lastIndexOf(",2!&d{", (-1009));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[5];
      charArray0[0] = 'x';
      charArray0[1] = 'x';
      charArray0[2] = '9';
      int int1 = strBuilder_StrBuilderReader0.read();
      strBuilder_StrBuilderReader0.reset();
      int int2 = strBuilder_StrBuilderReader0.read(charArray0);
      charArray0[3] = '\"';
      charArray0[4] = '-';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, (-620), 114);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      String string0 = "7OsH;M2l>xyWSHUw";
      StrBuilder strBuilder0 = new StrBuilder("7OsH;M2l>xyWSHUw");
      StrBuilder strBuilder1 = strBuilder0.replaceAll('!', '9');
      StrBuilder strBuilder2 = strBuilder1.append(strBuilder0);
      StrMatcher strMatcher0 = StrMatcher.charMatcher('H');
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("N;v@#p@H[");
      String string1 = "user.dir";
      StrBuilder strBuilder3 = strBuilder1.replaceFirst(strMatcher0, "user.dir");
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) strBuilder2;
      objectArray0[3] = (Object) "N;v@#p@H[";
      objectArray0[2] = (Object) strBuilder3;
      objectArray0[3] = (Object) strBuilder0;
      objectArray0[4] = (Object) strBuilder2;
      StrBuilder strBuilder4 = strBuilder3.appendWithSeparators(objectArray0, "7OsH;M2l>xyWSHUw");
      strBuilder4.validateIndex(122);
      StrBuilder strBuilder5 = strBuilder2.trim();
      int int0 = 44;
      char[] charArray0 = new char[1];
      charArray0[0] = '9';
      StrBuilder strBuilder6 = strBuilder3.insert(44, charArray0);
      // Undeclared exception!
      try { 
        strBuilder6.substring(1868);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      String string0 = ">DM1B5";
      StrBuilder strBuilder0 = new StrBuilder(">DM1B5");
      StrBuilder strBuilder1 = new StrBuilder(">DM1B5");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      int int0 = 0;
      StrBuilder strBuilder2 = strBuilder0.insert(0, 0);
      int int1 = strMatcher0.isMatch((char[]) null, 0, 0, 0);
      StrBuilder strBuilder3 = strBuilder1.clear();
      StrBuilder strBuilder4 = strBuilder3.append((Object) strBuilder0);
      StrBuilder strBuilder5 = strBuilder4.minimizeCapacity();
      int int2 = strBuilder0.indexOf(strMatcher0, 0);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      String[] stringArray0 = strBuilder_StrBuilderTokenizer0.getTokenArray();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(object0, 117, 'X');
      String string0 = strBuilder1.leftString(117);
      StrBuilder strBuilder2 = strBuilder0.append(true);
      Consumer<String> consumer0 = (Consumer<String>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      strBuilder_StrBuilderTokenizer0.forEachRemaining(consumer0);
      Object object1 = new Object();
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadRight(object1, 0, '~');
      StrBuilder strBuilder4 = strBuilder2.insert(117, true);
      StrBuilder strBuilder5 = strBuilder1.appendNull();
      StrBuilder strBuilder6 = strBuilder5.append((char[]) null);
      StrBuilder strBuilder7 = strBuilder0.appendPadding((-326), 'y');
      int int0 = strBuilder0.indexOf('i', (-326));
      StrBuilder strBuilder8 = strBuilder0.replaceFirst('~', 'X');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      StrBuilder strBuilder9 = strBuilder5.append(strBuilder8, 0, 117);
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[2];
      StringBuffer stringBuffer0 = null;
      try {
        stringBuffer0 = new StringBuffer((-291));
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.replaceAll("~Ys>&|}T8l~]e", "~Ys>&|}T8l~]e");
      String string0 = "j(*lL}wgItne6Hwa2:r";
      char[] charArray0 = new char[1];
      charArray0[0] = '#';
      int int1 = 1584;
      int int2 = 1236;
      // Undeclared exception!
      try { 
        strBuilder1.insert(0, charArray0, 1584, 1236);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: 1584
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.midString(776, 0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[1];
      charArray0[0] = '=';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst((StrMatcher) strMatcher_CharSetMatcher0);
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0, (-342));
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(false);
      int int0 = 0;
      StrBuilder strBuilder2 = strBuilder1.setCharAt(0, '{');
      int int1 = strBuilder0.size();
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = null;
      try {
        strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher((char[]) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrMatcher$CharSetMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = '^';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(2948, 2948, '^');
      StrBuilder strBuilder2 = strBuilder0.replace(2948, 2948, "");
      StrBuilder strBuilder3 = strBuilder2.replaceFirst((String) null, "");
      StrBuilder strBuilder4 = strBuilder3.append(1.0F);
      // Undeclared exception!
      try { 
        strBuilder3.substring(0, (-3675));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Mac OS X");
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("Mac OS X");
      char[] charArray0 = new char[0];
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("Mac OS X");
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_StringMatcher0);
      String string0 = strBuilder0.substring(0, 0);
      int int1 = strBuilder0.lastIndexOf("Mac OS X");
      char[] charArray1 = strBuilder0.getChars((char[]) null);
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterChar('C');
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Iterator) strTokenizer0, "Yh5F3Ls>`@p8kE%U");
      String string1 = strBuilder0.toString();
      int int2 = strBuilder0.size();
      StrBuilder strBuilder3 = strBuilder1.append(true);
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0, 0, 0);
      charArray0[0] = 'L';
      charArray0[1] = '_';
      char[] charArray1 = strBuilder0.getChars(charArray0);
      StrBuilder strBuilder2 = strBuilder0.append('_');
      // Undeclared exception!
      try { 
        strBuilder0.insert((-421), 'T');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -421
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }
}
