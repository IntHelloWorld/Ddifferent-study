/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 31 17:09:01 GMT 2020
 */

package org.apache.commons.lang.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.Writer;
import java.nio.CharBuffer;
import java.nio.ReadOnlyBufferException;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.NoSuchElementException;
import java.util.function.Consumer;
import org.apache.commons.lang.text.StrBuilder;
import org.apache.commons.lang.text.StrMatcher;
import org.apache.commons.lang.text.StrTokenizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StrBuilder_ESTest extends StrBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrBuilder strBuilder2 = strBuilder1.appendNull();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      int int0 = strBuilder1.lastIndexOf("Z\"bBgw wIr(u{", 329);
      StrBuilder strBuilder3 = new StrBuilder("Xs=hjR>*/U=m@uR%");
      StrBuilder strBuilder4 = new StrBuilder(329);
      int int1 = strBuilder1.capacity();
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('-');
      StrBuilder strBuilder5 = strBuilder2.insert(0, (char[]) null, 1832, (-119));
      char[] charArray0 = new char[2];
      charArray0[0] = 'h';
      charArray0[1] = 'f';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder6 = strBuilder1.replaceAll((StrMatcher) strMatcher_CharMatcher0, "Z\"bBgw wIr(u{");
      int int2 = strBuilder6.hashCode();
      StrBuilder strBuilder7 = strBuilder2.reverse();
      StrBuilder strBuilder8 = strBuilder6.append('h');
      int int3 = strBuilder7.lastIndexOf((StrMatcher) strMatcher_CharMatcher0, 0);
      boolean boolean0 = strBuilder6.startsWith("startIndex must be valid");
      StrBuilder strBuilder9 = strBuilder4.setNullText("startIndex must be valid");
      char[] charArray1 = strBuilder4.toCharArray(0, 1037);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder4.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("wlYS0Eb", 1, (-119));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.startsWith("9!'V@`F^oZFJT]i");
      boolean boolean1 = strBuilder0.contains("yb_*')nWBQ)\"l31&");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      StrBuilder strBuilder1 = new StrBuilder("9!'V@`F^oZFJT]i");
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1, 0, 0);
      long long0 = strBuilder_StrBuilderReader0.skip((-3398L));
      int int1 = strBuilder_StrBuilderReader0.read();
      int int2 = strBuilder0.length();
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadRight((-1), 96, 'l');
      StrBuilder strBuilder4 = strBuilder0.append("yb_*')nWBQ)\"l31&");
      char[] charArray0 = new char[8];
      charArray0[0] = 'l';
      charArray0[1] = 'l';
      charArray0[2] = 'l';
      charArray0[3] = 'l';
      charArray0[4] = 'l';
      charArray0[5] = 'l';
      charArray0[6] = '(';
      charArray0[7] = 'l';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder5 = strBuilder0.replaceFirst(strMatcher0, "9!'V@`F^oZFJT]i");
      int int3 = strBuilder0.lastIndexOf(strMatcher0, 457);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "length must be valid");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Collection) linkedList0, "length must be valid");
      strBuilder2.size = (-522);
      // Undeclared exception!
      try { 
        strBuilder2.append(116);
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      int int0 = strBuilder0.capacity();
      StrBuilder strBuilder2 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      char[] charArray0 = new char[3];
      charArray0[0] = '3';
      charArray0[1] = 'B';
      charArray0[2] = 'v';
      int int1 = strBuilder_StrBuilderReader0.read(charArray0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.insert(0, false);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("");
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.append(0);
      String string0 = "88/M_=C;a G8S/:L<UB";
      boolean boolean1 = strBuilder0.contains("88/M_=C;a G8S/:L<UB");
      StrBuilder strBuilder3 = strBuilder0.replaceAll("|6~vrC,P#S(cX", "");
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight(0, 1, 'W');
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(4);
      char[] charArray0 = new char[5];
      charArray0[0] = '.';
      charArray0[1] = '.';
      charArray0[2] = '.';
      charArray0[3] = '.';
      charArray0[4] = '.';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StrBuilder strBuilder2 = strBuilder0.deleteAll((String) null);
      int int0 = strBuilder0.lastIndexOf('.');
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadRight(57, 572, '.');
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('P');
      StrBuilder strBuilder4 = strBuilder0.replaceAll((StrMatcher) strMatcher_CharMatcher0, (String) null);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[4];
      StrBuilder strBuilder1 = strBuilder0.setLength(0);
      charArray0[0] = 'P';
      charArray0[1] = 'B';
      charArray0[2] = 'h';
      charArray0[3] = 'p';
      StrBuilder strBuilder2 = strBuilder0.append(charArray0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(32);
      char[] charArray0 = new char[3];
      charArray0[0] = '8';
      charArray0[1] = '5';
      charArray0[2] = '?';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder0.indexOf(strMatcher0);
      StrMatcher strMatcher1 = StrMatcher.singleQuoteMatcher();
      int int1 = strBuilder0.lastIndexOf(strMatcher1);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('5');
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Object object0 = new Object();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("*U,\"/NjnB6");
      StrBuilder strBuilder2 = strBuilder0.insert(0, (double) 0);
      StrTokenizer strTokenizer0 = strBuilder2.asTokenizer();
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadLeft(object0, (-3386), '');
      String string0 = strBuilder3.substring(0);
      String string1 = strBuilder3.toString();
      String string2 = "";
      StrBuilder strBuilder4 = strBuilder0.replaceFirst("", "");
      char[] charArray0 = new char[0];
      StrBuilder strBuilder5 = strBuilder0.insert(0, charArray0);
      StrBuilder strBuilder6 = strBuilder5.appendFixedWidthPadLeft((-3386), 0, '');
      StrBuilder strBuilder7 = new StrBuilder(0);
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      StrBuilder strBuilder8 = strBuilder1.deleteAll(strMatcher0);
      String string3 = strBuilder7.midString(32, 0);
      int int0 = strBuilder0.lastIndexOf("0.0", 0);
      int int1 = strBuilder4.lastIndexOf("0.0", (-968));
      StrBuilder strBuilder9 = strBuilder6.appendWithSeparators((Object[]) null, "*(/m%");
      int int2 = 9;
      // Undeclared exception!
      try { 
        strBuilder6.insert(9, 'x');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 9
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrBuilder strBuilder2 = strBuilder1.appendNull();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      String string0 = "Z\"bBgw wIr(u{";
      int int0 = strBuilder1.lastIndexOf("Z\"bBgw wIr(u{", 329);
      int int1 = 0;
      int int2 = 0;
      StrBuilder strBuilder3 = strBuilder1.replace(0, 0, "Xs=hjR>*/U=m@uR%");
      StrBuilder strBuilder4 = strBuilder3.clear();
      // Undeclared exception!
      try { 
        strBuilder2.setCharAt(0, '-');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      int int0 = 0;
      char char0 = 'S';
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight((Object) null, 8, 'u');
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      char[] charArray0 = new char[0];
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.replaceAll('x', '(');
      int int0 = strBuilder1.indexOf((String) null, 558);
      int int1 = strBuilder1.indexOf('7');
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("W");
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance("W");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      StrBuilder strBuilder1 = strBuilder0.append(object0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      strBuilder_StrBuilderTokenizer0.forEachRemaining(consumer0);
      StrBuilder strBuilder2 = strBuilder1.append('F');
      String string0 = strBuilder2.midString((-67), 48);
      StrBuilder strBuilder3 = strBuilder1.appendNewLine();
      StrBuilder strBuilder4 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "W");
      String string1 = strBuilder0.midString(0, 0);
      StrBuilder strBuilder5 = strBuilder0.appendFixedWidthPadLeft((Object) "W", 0, ';');
      StrBuilder strBuilder6 = strBuilder5.deleteFirst('F');
      StrBuilder strBuilder7 = strBuilder2.ensureCapacity((-67));
      int int0 = strBuilder4.lastIndexOf("Worg.apache.commons.lang.text.StrBuilder$StrBuil");
      StrBuilder strBuilder8 = strBuilder0.appendNewLine();
      // Undeclared exception!
      try { 
        strBuilder8.insert((-67), 'P');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -67
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.startsWith("9!'V@`F^oZFJT]i");
      boolean boolean1 = strBuilder0.contains("yb_*')nWBQ)\"l31&");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      StrBuilder strBuilder1 = strBuilder0.append(strBuilder0, 0, 0);
      long long0 = strBuilder_StrBuilderReader0.skip((-3398L));
      int int1 = strBuilder_StrBuilderReader0.read();
      int int2 = strBuilder0.length();
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight((-1), 96, 'l');
      char[] charArray0 = new char[8];
      charArray0[0] = 'l';
      charArray0[1] = 'l';
      charArray0[2] = 'l';
      charArray0[3] = 'l';
      charArray0[4] = 'l';
      charArray0[5] = 'l';
      charArray0[6] = '(';
      charArray0[7] = 'l';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder3 = strBuilder0.replaceFirst(strMatcher0, "9!'V@`F^oZFJT]i");
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = ')';
      StrBuilder strBuilder1 = strBuilder0.replaceAll(')', ')');
      char[] charArray0 = new char[2];
      int int0 = (-4154);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-4154), (Object) strBuilder1);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -4154
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("W");
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance("W");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      StrBuilder strBuilder1 = strBuilder0.append(object0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      strBuilder_StrBuilderTokenizer0.forEachRemaining(consumer0);
      StrBuilder strBuilder2 = strBuilder1.append('F');
      strBuilder2.size = 0;
      String string0 = strBuilder2.midString((-67), 48);
      StrBuilder strBuilder3 = strBuilder1.deleteAll("W");
      StrBuilder strBuilder4 = strBuilder3.appendNewLine();
      StrBuilder strBuilder5 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "W");
      String string1 = strBuilder3.midString(0, 0);
      StrBuilder strBuilder6 = strBuilder0.appendFixedWidthPadLeft((Object) "W", 0, ';');
      StrBuilder strBuilder7 = strBuilder6.deleteFirst('F');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder6.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      StrBuilder strBuilder8 = strBuilder2.ensureCapacity((-67));
      int int0 = strBuilder5.lastIndexOf("");
      StrBuilder strBuilder9 = strBuilder0.appendNewLine();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder10 = strBuilder1.appendWithSeparators((Collection) linkedList0, "1.1");
      // Undeclared exception!
      try { 
        strBuilder9.insert((-67), 'P');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -67
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-3199));
      StrBuilder strBuilder1 = strBuilder0.setLength(2291);
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher((String) null);
      char[] charArray0 = new char[9];
      charArray0[0] = 'j';
      charArray0[1] = '3';
      StrBuilder strBuilder2 = strBuilder0.ensureCapacity((-3199));
      charArray0[2] = 'i';
      charArray0[3] = 'w';
      charArray0[4] = '#';
      charArray0[5] = 'c';
      charArray0[6] = 'S';
      charArray0[7] = 'P';
      charArray0[8] = '~';
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder3 = strBuilder0.replaceFirst(strMatcher0, "");
      boolean boolean0 = strBuilder1.endsWith("");
      int int0 = strBuilder3.capacity();
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.startsWith("9!'V@`F^oZFJT]i");
      boolean boolean1 = strBuilder0.contains("yb_*')nWBQ)\"l31&");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      StrBuilder strBuilder1 = new StrBuilder("9!'V@`F^oZFJT]i");
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1, 0, 0);
      long long0 = strBuilder_StrBuilderReader0.skip((-3398L));
      int int1 = strBuilder_StrBuilderReader0.read();
      int int2 = strBuilder0.length();
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadRight((-1), 96, 'l');
      char[] charArray0 = new char[8];
      charArray0[0] = 'l';
      charArray0[1] = 'l';
      charArray0[2] = 'l';
      charArray0[3] = 'l';
      charArray0[4] = 'l';
      charArray0[5] = 'l';
      charArray0[6] = '(';
      charArray0[7] = 'l';
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder strBuilder4 = strBuilder2.appendFixedWidthPadLeft(object0, (-1), 'l');
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder5 = strBuilder0.replaceFirst(strMatcher0, "9!'V@`F^oZFJT]i");
      boolean boolean2 = strBuilder2.endsWith("startIndex must be valid");
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      int int0 = (-601);
      StrBuilder strBuilder0 = new StrBuilder((-601));
      StrBuilder strBuilder1 = strBuilder0.append('p');
      char[] charArray0 = new char[9];
      charArray0[0] = 'w';
      charArray0[1] = 'p';
      charArray0[2] = ',';
      charArray0[3] = 'p';
      charArray0[4] = 'p';
      charArray0[5] = 'O';
      charArray0[6] = 'p';
      charArray0[7] = 'p';
      charArray0[8] = 'p';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);
      StrBuilder strBuilder2 = strBuilder1.append(stringBuffer0);
      strBuilder1.size = (-601);
      int int1 = strBuilder0.lastIndexOf("wcY+");
      StrBuilder strBuilder3 = new StrBuilder("wcY+");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder3.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.toString();
      String string1 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder strBuilder4 = strBuilder0.replaceFirst("]c0I", "O#;FMP:");
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      // Undeclared exception!
      try { 
        strBuilder0.replaceFirst(strMatcher0, "O#;FMP:");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("o^?\"x}O<\u0002|'qj^-LH");
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("o^?\"x}O<\u0002|'qj^-LH");
      char[] charArray0 = new char[6];
      charArray0[0] = '>';
      charArray0[1] = 'X';
      charArray0[2] = 'y';
      charArray0[3] = 'S';
      charArray0[4] = 'z';
      charArray0[5] = '6';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_StringMatcher0);
      Reader reader0 = strBuilder0.asReader();
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      int int0 = (-4029);
      StrBuilder strBuilder0 = new StrBuilder((-4029));
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity((-4029));
      StrBuilder strBuilder2 = strBuilder0.appendNull();
      strBuilder0.size = (-4029);
      // Undeclared exception!
      try { 
        strBuilder2.minimizeCapacity();
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[6];
      charArray0[0] = 'B';
      StrBuilder strBuilder1 = strBuilder0.append("", 0, 0);
      charArray0[1] = 'r';
      charArray0[2] = '_';
      charArray0[3] = '_';
      charArray0[4] = 'c';
      charArray0[5] = '1';
      int int0 = 0;
      strBuilder0.getChars(0, 0, charArray0, 0);
      StrBuilder strBuilder2 = strBuilder0.append((-69L));
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      boolean boolean0 = strBuilder2.contains(strMatcher0);
      StrBuilder strBuilder3 = strBuilder2.appendNewLine();
      StrBuilder strBuilder4 = strBuilder0.append("4^z+SD!");
      int int1 = 44;
      char char0 = '=';
      // Undeclared exception!
      try { 
        strBuilder4.append(charArray0, (-1641), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder();
      boolean boolean0 = strBuilder0.equals((Object) strBuilder1);
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight(2780, 2780, ' ');
      StrBuilder strBuilder3 = strBuilder1.appendFixedWidthPadRight((Object) strBuilder0, 61, '6');
      StrBuilder strBuilder4 = strBuilder1.appendNull();
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      StrBuilder strBuilder1 = strBuilder0.insert(2, (float) 2);
      StrBuilder strBuilder2 = strBuilder0.insert(0, '}');
      String string0 = strBuilder2.rightString(0);
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('K');
      char[] charArray0 = new char[8];
      charArray0[0] = 'K';
      charArray0[1] = 'K';
      charArray0[2] = '}';
      charArray0[3] = '}';
      charArray0[4] = 'K';
      charArray0[5] = 'K';
      charArray0[6] = 'K';
      charArray0[7] = '}';
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.insert(0, false);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("");
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      boolean boolean1 = strBuilder0.contains("88/M_=C;a G8S/:L<UB");
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight(0, 1, 'W');
      int int0 = strBuilder0.lastIndexOf('_');
      boolean boolean2 = strBuilder1.isEmpty();
      int int1 = strBuilder0.lastIndexOf("88/M_=C;a G8S/:L<UB");
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.insert(0, false);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("");
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      boolean boolean1 = strBuilder0.contains("88/M_=C;a G8S/:L<UB");
      int int0 = strBuilder0.lastIndexOf('_');
      boolean boolean2 = strBuilder1.isEmpty();
      int int1 = strBuilder0.lastIndexOf("88/M_=C;a G8S/:L<UB");
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[4];
      charArray0[0] = 'P';
      charArray0[1] = 'B';
      charArray0[2] = 'h';
      charArray0[3] = 'p';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrBuilder strBuilder2 = strBuilder1.deleteAll(strMatcher0);
      StrBuilder strBuilder3 = strBuilder2.append((StringBuffer) null, (-7), 48);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.insert(0, false);
      boolean boolean0 = strBuilder0.contains("88/M_=C;a G8S/:L<UB");
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight(0, 1, 'W');
      int int0 = strBuilder0.lastIndexOf('_');
      boolean boolean1 = strBuilder1.isEmpty();
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-157));
      char[] charArray0 = new char[3];
      char char0 = '#';
      charArray0[0] = '#';
      charArray0[1] = 'b';
      charArray0[2] = 'P';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      boolean boolean0 = strBuilder0.contains((StrMatcher) strMatcher_CharSetMatcher0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      Writer writer0 = strBuilder0.asWriter();
      String string0 = "b9}#i=iLz Z/:'uq";
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("b9}#i=iLz Z/:'uq");
      boolean boolean1 = strBuilder0.contains(strMatcher0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("b9}#i=iLz Z/:'uq");
      String string1 = "";
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("", (-157), 4114);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.append(false);
      int int0 = strBuilder0.lastIndexOf("", 0);
      // Undeclared exception!
      try { 
        strBuilder0.append("", 101, 348);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-459));
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      int int0 = strBuilder0.length();
      StrBuilder strBuilder2 = strBuilder0.deleteFirst('9');
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(47);
      StrBuilder strBuilder1 = strBuilder0.append(true);
      String string0 = strBuilder1.midString(17, (-2009));
      StrBuilder strBuilder2 = strBuilder1.setLength(47);
      int int0 = strBuilder0.indexOf("iIw}j\"ZLK.Ev>S,+3)", 5);
      StrBuilder strBuilder3 = strBuilder0.clear();
      char[] charArray0 = new char[7];
      charArray0[0] = '%';
      charArray0[1] = 'B';
      charArray0[2] = '_';
      charArray0[3] = '#';
      charArray0[4] = '\'';
      charArray0[5] = 'B';
      charArray0[6] = 'c';
      StrBuilder strBuilder4 = strBuilder0.append(charArray0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      int int1 = strBuilder0.indexOf(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder3.insert((-1), charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      StrBuilder strBuilder1 = strBuilder0.append((Object) strMatcher0);
      StrMatcher strMatcher1 = StrMatcher.charMatcher('L');
      char[] charArray0 = new char[8];
      charArray0[0] = '&';
      charArray0[1] = 'Y';
      charArray0[2] = 'h';
      charArray0[3] = ')';
      charArray0[4] = '%';
      charArray0[5] = '-';
      charArray0[6] = 'Q';
      charArray0[7] = 'x';
      int int0 = strMatcher0.isMatch(charArray0, 5, 5, 1494);
      StrBuilder strBuilder2 = strBuilder0.deleteFirst(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder2.append(charArray0, 5, 5);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 5
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = null;
      StrBuilder strBuilder1 = new StrBuilder((String) null);
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.setNullText((String) null);
      // Undeclared exception!
      try { 
        strBuilder2.replace((-2203), (-2203), "!g0 m?v");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2203
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(34);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setQuoteChar('7');
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "g!lu+VI}");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Collection) linkedList0, (String) null);
      char[] charArray0 = new char[6];
      charArray0[0] = '7';
      charArray0[1] = '7';
      charArray0[2] = '7';
      charArray0[3] = '7';
      charArray0[4] = '7';
      charArray0[5] = '7';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 34, (-5239));
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("0$");
      int int0 = strBuilder0.indexOf((StrMatcher) null, 2963);
      StringBuffer stringBuffer0 = new StringBuffer(1581);
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight(1581, 1581, 'H');
      Object[] objectArray0 = new Object[8];
      StringBuffer stringBuffer1 = strBuilder1.toStringBuffer();
      objectArray0[0] = (Object) stringBuffer0;
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) strBuilder0;
      objectArray0[3] = (Object) strBuilder1;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer1 = strBuilder1.new StrBuilderTokenizer();
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadLeft((Object) strBuilder_StrBuilderTokenizer1, 1581, 'H');
      StrBuilder strBuilder4 = strBuilder3.setNullText("user.timezone");
      String string0 = strBuilder4.substring(468, 468);
      objectArray0[4] = (Object) strBuilder2;
      objectArray0[5] = (Object) "0$";
      objectArray0[4] = (Object) strBuilder1;
      objectArray0[7] = (Object) strBuilder1;
      StrBuilder strBuilder5 = strBuilder1.appendWithSeparators(objectArray0, "hkzM*xTX");
      StrBuilder strBuilder6 = strBuilder2.delete(1581, 1581);
      StrBuilder strBuilder7 = strBuilder6.deleteFirst('B');
      String string1 = strBuilder6.toString();
      StrBuilder strBuilder8 = strBuilder1.setLength(0);
      String string2 = strBuilder8.toString();
      StrBuilder strBuilder9 = strBuilder2.append((-967));
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("8fpxMk4<H+NZk");
      StrBuilder strBuilder1 = new StrBuilder();
      boolean boolean0 = strBuilder0.equals(strBuilder1);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.indexOf("XE0}]!P&Cx", (-271));
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder strBuilder1 = strBuilder0.deleteAll("");
      char[] charArray0 = new char[9];
      charArray0[0] = 'd';
      charArray0[1] = 't';
      charArray0[2] = 'L';
      charArray0[3] = '\'';
      charArray0[4] = '';
      charArray0[5] = '}';
      charArray0[6] = 'q';
      charArray0[7] = '#';
      charArray0[8] = '0';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      int int1 = strBuilder0.indexOf((StrMatcher) strMatcher_CharSetMatcher0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      int int0 = strBuilder0.lastIndexOf('g', 0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-956));
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(",", ",");
      int int0 = (-3685);
      String string0 = strBuilder1.midString((-956), (-3685));
      boolean boolean0 = strBuilder1.equals(strBuilder0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) ",");
      // Undeclared exception!
      try { 
        CharBuffer.allocate((-3487));
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      String string0 = null;
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      char[] charArray0 = strBuilder0.toCharArray();
      int int0 = strBuilder0.indexOf((String) null);
      String string1 = "";
      StrBuilder strBuilder1 = strBuilder0.replaceAll((StrMatcher) null, "");
      // Undeclared exception!
      try { 
        strBuilder0.append("", (-1), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("0$");
      int int0 = strBuilder0.indexOf((StrMatcher) null, 2963);
      StringBuffer stringBuffer0 = new StringBuffer(1581);
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight(1581, 1581, 'H');
      Object[] objectArray0 = new Object[8];
      StringBuffer stringBuffer1 = strBuilder1.toStringBuffer();
      objectArray0[0] = (Object) stringBuffer0;
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) strBuilder0;
      objectArray0[3] = (Object) strBuilder1;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadLeft(object0, 1581, 'H');
      StrBuilder strBuilder4 = strBuilder3.setNullText("user.timezone");
      String string0 = strBuilder4.substring(468, 468);
      objectArray0[4] = (Object) strBuilder2;
      objectArray0[5] = (Object) "0$";
      objectArray0[6] = (Object) strBuilder1;
      objectArray0[7] = (Object) strBuilder1;
      StrBuilder strBuilder5 = strBuilder1.appendWithSeparators(objectArray0, "hkzM*xTX");
      StrBuilder strBuilder6 = strBuilder2.delete(1581, 1581);
      StrBuilder strBuilder7 = strBuilder6.deleteFirst('B');
      String string1 = strBuilder6.toString();
      StrBuilder strBuilder8 = strBuilder1.setLength(0);
      String string2 = strBuilder8.toString();
      StrBuilder strBuilder9 = strBuilder2.append((-967));
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.capacity();
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder strBuilder2 = strBuilder0.append(object0);
      StrBuilder strBuilder3 = strBuilder2.append(strBuilder0, 32, 32);
      // Undeclared exception!
      try { 
        strBuilder0.insert(779, (double) 32);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 779
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("Invalid startIndex: ");
      int int0 = 0;
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "Invalid startIndex: ");
      StrBuilder strBuilder2 = strBuilder1.trim();
      StrBuilder strBuilder3 = strBuilder0.append(stringBuffer0);
      int int1 = strBuilder3.validateRange(0, 0);
      char char0 = 'J';
      StrBuilder strBuilder4 = strBuilder1.appendFixedWidthPadRight(0, 0, 'J');
      int int2 = 760;
      // Undeclared exception!
      try { 
        strBuilder0.substring(760, Integer.MAX_VALUE);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      Iterator<Object> iterator0 = linkedList0.iterator();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(iterator0, "GiN*%F.(g`98]a");
      Writer writer0 = strBuilder1.asWriter();
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Object[]) null, (String) null);
      linkedList0.addLast(strBuilder1);
      Reader reader0 = strBuilder2.asReader();
      int int0 = 41;
      int int1 = strBuilder2.lastIndexOf((String) null, 41);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      char[] charArray0 = new char[4];
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder2);
      charArray0[0] = '';
      charArray0[1] = '';
      charArray0[2] = '0';
      charArray0[3] = 'k';
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance(charArray0);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.previous();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("pi7m!s:^");
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) "pi7m!s:^";
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) strBuilder0;
      objectArray0[3] = (Object) strBuilder0;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      objectArray0[4] = object0;
      objectArray0[5] = (Object) strBuilder0;
      objectArray0[6] = (Object) strBuilder0;
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset("<UVVrpopGYCvwJ*6");
      objectArray0[7] = (Object) "pi7m!s:^";
      objectArray0[8] = (Object) "pi7m!s:^";
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "pi7m!s:^");
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrBuilder strBuilder2 = strBuilder0.deleteAll(strMatcher0);
      StrBuilder strBuilder3 = strBuilder1.append((-2334));
      int int0 = strBuilder1.lastIndexOf((String) null, (-1631));
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("W");
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance("W");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      StrBuilder strBuilder1 = strBuilder0.append(object0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      strBuilder_StrBuilderTokenizer0.forEachRemaining(consumer0);
      StrBuilder strBuilder2 = strBuilder1.append('F');
      String string0 = strBuilder2.midString((-67), 48);
      StrBuilder strBuilder3 = strBuilder1.deleteAll("W");
      StrBuilder strBuilder4 = strBuilder3.appendNewLine();
      StrBuilder strBuilder5 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "W");
      String string1 = strBuilder3.midString(0, 0);
      StrBuilder strBuilder6 = strBuilder0.appendFixedWidthPadLeft((Object) "W", 0, ';');
      StrBuilder strBuilder7 = strBuilder6.deleteFirst('F');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder6.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      StrBuilder strBuilder8 = strBuilder2.ensureCapacity((-67));
      int int0 = strBuilder5.lastIndexOf("Worg.apache.commons.lang.text.StrBuilder$StrBuil");
      StrBuilder strBuilder9 = strBuilder0.appendNewLine();
      // Undeclared exception!
      try { 
        strBuilder9.insert((-67), 'P');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -67
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(0);
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      strBuilder_StrBuilderReader0.reset();
      StrMatcher strMatcher1 = StrMatcher.commaMatcher();
      StrMatcher strMatcher2 = StrMatcher.charMatcher('5');
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher1, "=yIiU!{CN!");
      String string0 = strBuilder1.leftString(0);
      String string1 = strBuilder0.substring(0);
      StrMatcher strMatcher3 = StrMatcher.charSetMatcher("=yIiU!{CN!");
      char[] charArray0 = new char[3];
      charArray0[0] = '\'';
      charArray0[1] = 'X';
      StringBuffer stringBuffer0 = new StringBuffer();
      StringBuffer stringBuffer1 = new StringBuffer(stringBuffer0);
      StringBuffer stringBuffer2 = stringBuffer1.insert(0, 'X');
      StrBuilder strBuilder2 = strBuilder0.append(stringBuffer1);
      StrTokenizer strTokenizer0 = strBuilder2.asTokenizer();
      charArray0[2] = 't';
      StrBuilder strBuilder3 = strBuilder1.append(charArray0);
      StrBuilder strBuilder4 = strBuilder1.append((float) 0);
      strBuilder1.validateIndex(0);
      StrBuilder strBuilder5 = strBuilder3.deleteAll(strMatcher1);
      StrBuilder strBuilder6 = strBuilder1.insert(0, (-2687L));
      String string2 = strBuilder1.getNullText();
      StrBuilder strBuilder7 = strBuilder6.deleteFirst((String) null);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 32, (-1));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.append(0.0);
      String string0 = strBuilder1.toString();
      StrBuilder strBuilder2 = strBuilder1.deleteAll((String) null);
      StrBuilder strBuilder3 = strBuilder0.append((String) null, 9, 9);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder strBuilder1 = strBuilder0.setNullText("");
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      String string0 = strBuilder1.leftString(0);
      StrBuilder strBuilder2 = strBuilder1.replaceFirst(strMatcher0, "");
      StrBuilder strBuilder3 = strBuilder2.appendNewLine();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[8];
      charArray0[0] = 'h';
      charArray0[1] = 'R';
      charArray0[2] = 'w';
      charArray0[3] = '[';
      charArray0[4] = 'm';
      charArray0[5] = '\'';
      charArray0[6] = '^';
      charArray0[7] = '%';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0, 4, 0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      int int0 = 1678;
      StrBuilder strBuilder0 = new StrBuilder(1678);
      int int1 = 0;
      StrBuilder strBuilder1 = new StrBuilder(0);
      int int2 = 0;
      String string0 = strBuilder1.rightString(1678);
      char char0 = ']';
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight((Object) strBuilder1, 0, ']');
      int int3 = 115;
      // Undeclared exception!
      try { 
        strBuilder2.insert(115, 0.0F);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 115
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((-1L));
      StrBuilder strBuilder2 = strBuilder0.append(0.0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[5];
      charArray0[0] = 'm';
      charArray0[1] = '7';
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      charArray0[2] = '3';
      charArray0[3] = '`';
      charArray0[4] = 'Y';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 4440, 4440);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder strBuilder2 = strBuilder0.append(object0);
      int int0 = 2096;
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize((char[]) null, 2096, (-1072));
      int int1 = strBuilder0.indexOf(strMatcher0, 2096);
      int int2 = strBuilder0.size();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      boolean boolean0 = linkedList0.remove((Object) strMatcher0);
      String string0 = null;
      StrBuilder strBuilder3 = strBuilder0.appendWithSeparators((Collection) linkedList0, (String) null);
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder1.insert(2096, charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2096
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("end < start");
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      StrMatcher strMatcher1 = StrMatcher.charMatcher('P');
      int int0 = strBuilder0.lastIndexOf(strMatcher1);
      int int1 = strBuilder0.indexOf('P');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[4];
      charArray0[0] = 'P';
      charArray0[1] = 'P';
      charArray0[2] = 'P';
      charArray0[3] = 'P';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, (-1), (-1798));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      StrBuilder strBuilder1 = strBuilder0.append(')');
      StrBuilder strBuilder2 = strBuilder1.append(0);
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setTrimmerMatcher(strMatcher0);
      String[] stringArray0 = strBuilder_StrBuilderTokenizer0.getTokenArray();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("StrTokenizer");
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      StrTokenizer strTokenizer1 = StrTokenizer.getTSVInstance(":8/7gJ'");
      StrMatcher strMatcher3 = StrMatcher.stringMatcher("VM>[]x2?B'");
      StrBuilder strBuilder3 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      Writer writer0 = strBuilder3.asWriter();
      // Undeclared exception!
      try { 
        strBuilder0.delete(354, 354);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      char[] charArray0 = new char[8];
      charArray0[0] = '>';
      charArray0[1] = 'K';
      charArray0[2] = 'r';
      charArray0[3] = 'f';
      charArray0[4] = 'f';
      char char0 = '+';
      charArray0[5] = '+';
      charArray0[6] = '(';
      charArray0[7] = 'u';
      strBuilder0.buffer = charArray0;
      int int0 = strBuilder0.indexOf('&', 508);
      StrBuilder strBuilder1 = strBuilder0.append("4.0");
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher((String) null);
      int int1 = strBuilder0.lastIndexOf(strMatcher0, (-1));
      String string0 = strBuilder0.getNewLineText();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(strBuilder0.buffer, (-1), 0);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("", "[%#\"t}");
      Reader reader0 = strBuilder0.asReader();
      int int0 = strBuilder0.lastIndexOf("org.apache.commons.lang.text.StrBuilder");
      StrBuilder strBuilder2 = strBuilder0.append((long) (-1));
      StringBuffer stringBuffer0 = new StringBuffer("AIX");
      StrBuilder strBuilder3 = strBuilder1.minimizeCapacity();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("");
      int int1 = strBuilder3.indexOf(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder1.append(stringBuffer0, 0, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((-4147), (-4147), '\'');
      StrBuilder strBuilder2 = strBuilder0.setLength(144);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) null, (-3976), '9');
      StrBuilder strBuilder2 = strBuilder0.minimizeCapacity();
      String string0 = "";
      StrBuilder strBuilder3 = strBuilder2.setNewLineText("");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      char[] charArray0 = new char[4];
      StrBuilder strBuilder4 = strBuilder3.clear();
      charArray0[1] = '9';
      charArray0[2] = '9';
      charArray0[3] = '9';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder5 = strBuilder1.replaceAll(strMatcher0, (String) null);
      strBuilder_StrBuilderWriter0.flush();
      // Undeclared exception!
      try { 
        strBuilder1.charAt((-2116));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2116
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.endsWith("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      StrBuilder strBuilder1 = strBuilder0.append((char[]) null, (-1748), 108);
      int int0 = strBuilder0.lastIndexOf((StrMatcher) null, 0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("seb(evvWEnK?>7W)u2");
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("seb(evvWEnK?>7W)u2");
      StrMatcher strMatcher0 = StrMatcher.charMatcher('c');
      StrMatcher strMatcher1 = StrMatcher.charMatcher('c');
      StrBuilder strBuilder1 = strBuilder0.replaceFirst((StrMatcher) strMatcher_StringMatcher0, "seb(evvWEnK?>7W)u2");
      String string0 = strBuilder1.leftString(2);
      char[] charArray0 = new char[8];
      charArray0[0] = '5';
      charArray0[1] = 'c';
      charArray0[2] = 'p';
      charArray0[3] = 'c';
      charArray0[4] = 'c';
      charArray0[5] = ']';
      charArray0[6] = 'c';
      charArray0[7] = 'c';
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder2 = strBuilder1.append(strBuilder0, 0, 0);
      StrBuilder strBuilder3 = strBuilder0.append(1L);
      int int0 = strBuilder3.capacity();
      StrBuilder strBuilder4 = strBuilder1.insert(0, 'c');
      strBuilder4.size = 9;
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[4];
      charArray0[0] = ',';
      charArray0[1] = 'V';
      charArray0[2] = '^';
      StrBuilder strBuilder1 = strBuilder0.insert(0, charArray0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      int int0 = 57;
      StrBuilder strBuilder0 = new StrBuilder(57);
      int int1 = 39;
      // Undeclared exception!
      try { 
        strBuilder0.validateRange(39, 39);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.indexOf('k', (-494));
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      char[] charArray0 = new char[8];
      charArray0[0] = 'k';
      charArray0[1] = 'k';
      charArray0[2] = '+';
      charArray0[3] = 'k';
      charArray0[4] = 'k';
      charArray0[5] = 'k';
      charArray0[6] = 'k';
      charArray0[7] = 'k';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher("YtKi)j4K<Iq6o;");
      StrMatcher strMatcher3 = StrMatcher.charSetMatcher("F7Ww:([7V+-'Co/SY");
      int int1 = strBuilder0.indexOf(strMatcher0);
      boolean boolean0 = strBuilder0.contains(strMatcher2);
      StrBuilder strBuilder1 = strBuilder0.clear();
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      String string0 = "@Kj9+SQ";
      StrBuilder strBuilder0 = new StrBuilder("@Kj9+SQ");
      StrBuilder strBuilder1 = strBuilder0.replaceAll("@Kj9+SQ", (String) null);
      int int0 = (-1665);
      char[] charArray0 = new char[0];
      int int1 = 2;
      // Undeclared exception!
      try { 
        strBuilder1.insert((-1665), charArray0, 2, 2);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1665
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteAll('n');
      int int0 = strBuilder0.hashCode();
      String string0 = strBuilder0.rightString((-3619));
      Writer writer0 = strBuilder1.asWriter();
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      int int1 = strBuilder1.lastIndexOf(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.replaceAll('T', 'u');
      char[] charArray0 = new char[9];
      charArray0[0] = 'u';
      charArray0[1] = 'u';
      StrBuilder strBuilder3 = strBuilder2.deleteAll("");
      charArray0[2] = 'T';
      charArray0[3] = 'T';
      charArray0[4] = 'u';
      charArray0[5] = 'T';
      charArray0[6] = 'n';
      charArray0[7] = 'T';
      charArray0[8] = 'n';
      // Undeclared exception!
      try { 
        strBuilder2.insert((-3619), charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3619
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2020);
      String string0 = strBuilder0.rightString(2020);
      String string1 = strBuilder0.midString(2020, 31);
      StrBuilder strBuilder1 = strBuilder0.append(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      StrBuilder strBuilder2 = strBuilder1.insert(0, object0);
      StrBuilder strBuilder3 = strBuilder1.deleteFirst("");
      StrBuilder strBuilder4 = strBuilder3.append(false);
      StrBuilder strBuilder5 = strBuilder4.setNewLineText("");
      char[] charArray0 = new char[7];
      charArray0[0] = 'k';
      charArray0[1] = '6';
      charArray0[2] = '[';
      charArray0[3] = 'A';
      charArray0[4] = '4';
      charArray0[5] = '@';
      charArray0[6] = '\'';
      // Undeclared exception!
      try { 
        strBuilder5.insert(31, charArray0, 0, 1130);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 1130
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      // Undeclared exception!
      try { 
        strBuilder0.replaceAll(strMatcher0, "length must be valid");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2020);
      String string0 = strBuilder0.rightString(2020);
      String string1 = strBuilder0.midString(2020, 31);
      StrBuilder strBuilder1 = strBuilder0.append(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      StrBuilder strBuilder2 = strBuilder1.insert(0, object0);
      StrBuilder strBuilder3 = strBuilder1.deleteFirst("");
      StrBuilder strBuilder4 = strBuilder3.append(false);
      StrBuilder strBuilder5 = strBuilder4.setNewLineText("");
      char[] charArray0 = new char[7];
      charArray0[0] = 'k';
      charArray0[1] = '6';
      charArray0[2] = '[';
      charArray0[3] = 'A';
      charArray0[4] = '6';
      charArray0[5] = '@';
      charArray0[6] = '\'';
      // Undeclared exception!
      try { 
        strBuilder5.insert(31, charArray0, 0, 1130);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 1130
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      int int0 = 108;
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[5];
      charArray0[0] = 'M';
      charArray0[1] = '/';
      charArray0[2] = '/';
      charArray0[3] = '9';
      charArray0[1] = 'g';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.deleteAll((StrMatcher) strMatcher_CharSetMatcher0);
      int int1 = 0;
      String string0 = strBuilder0.midString(0, 9);
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      // Undeclared exception!
      try { 
        strBuilder2.insert(9, (-24.413515));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 9
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("r");
      StrBuilder strBuilder1 = strBuilder0.deleteAll('I');
      int int0 = strBuilder0.lastIndexOf("r");
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("r");
      StrBuilder strBuilder2 = strBuilder0.deleteAll(strMatcher0);
      String string0 = strBuilder1.toString();
      // Undeclared exception!
      try { 
        strBuilder1.append("r", 171, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      String string0 = "@Kj=+SQ";
      StrBuilder strBuilder0 = new StrBuilder("@Kj=+SQ");
      StrBuilder strBuilder1 = strBuilder0.replaceAll("@Kj=+SQ", (String) null);
      char[] charArray0 = new char[0];
      StrBuilder strBuilder2 = strBuilder1.setLength(542);
      StrBuilder strBuilder3 = strBuilder2.append("Invalid offset: ");
      int int0 = 4300;
      // Undeclared exception!
      try { 
        strBuilder0.insert(4300, '(');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 4300
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.toString();
      String string1 = strBuilder0.leftString(330);
      StrMatcher strMatcher0 = StrMatcher.charMatcher('3');
      char[] charArray0 = new char[4];
      charArray0[0] = '3';
      charArray0[1] = '3';
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("");
      StrMatcher strMatcher2 = StrMatcher.charMatcher('r');
      charArray0[2] = '3';
      charArray0[3] = '3';
      StrMatcher strMatcher3 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder0.indexOf(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      int int1 = strBuilder1.lastIndexOf(strMatcher0, 783);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(783);
      strBuilder_StrBuilderWriter0.close();
      boolean boolean0 = strBuilder0.contains(strMatcher2);
      StrBuilder strBuilder2 = strBuilder0.replaceAll('O', 'l');
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("-R~m.R9%Y;c3\"UcLW");
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrBuilder strBuilder2 = strBuilder0.appendNewLine();
      String string0 = strBuilder1.rightString(3);
      StrBuilder strBuilder3 = strBuilder2.append((-862L));
      int int0 = (-571);
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder3.getChars((-571), (-571), charArray0, (-571));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -571
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(34);
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("AfO)yOx%");
      StrBuilder strBuilder1 = strBuilder0.deleteAll("AfO)yOx%");
      StrBuilder strBuilder2 = strBuilder1.trim();
      char[] charArray0 = new char[7];
      charArray0[0] = '<';
      charArray0[1] = '/';
      charArray0[2] = 'C';
      charArray0[3] = 'V';
      charArray0[4] = '1';
      charArray0[5] = 'Z';
      charArray0[6] = 'm';
      int int0 = strMatcher0.isMatch(charArray0, 34, 34, 34);
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("AfO)yOx%");
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      StrBuilder strBuilder3 = strBuilder0.appendNull();
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(237);
      StrBuilder strBuilder1 = strBuilder0.append((-1.0));
      char[] charArray0 = new char[6];
      charArray0[0] = 'l';
      charArray0[1] = 'v';
      charArray0[2] = 'l';
      charArray0[3] = 'F';
      charArray0[4] = 'I';
      charArray0[5] = '7';
      // Undeclared exception!
      try { 
        strBuilder1.getChars(237, 115, charArray0, 237);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 115
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "?wQ@:6";
      int int0 = strBuilder0.lastIndexOf("?wQ@:6", 0);
      String string1 = strBuilder0.getNullText();
      int int1 = 1579;
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex(1579);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1579
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrBuilder strBuilder2 = strBuilder0.insert(15, 'e');
      int int0 = 0;
      String string0 = strBuilder0.midString(0, 32);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("Invalid offset:e ");
      int int1 = strBuilder_StrBuilderTokenizer0.size();
      StrBuilder strBuilder3 = strBuilder0.replaceAll(strMatcher0, "8%wEm'i}m778q*R_OI");
      StrBuilder strBuilder4 = strBuilder3.append(15);
      Writer writer0 = strBuilder0.asWriter();
      int int2 = (-2165);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-2165), (Object) writer0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2165
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = strBuilder0.substring(0);
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("");
      StrBuilder strBuilder1 = strBuilder0.replace((StrMatcher) strMatcher_StringMatcher0, "length must be valid", 0, 0, 0);
      strBuilder0.validateIndex(0);
      boolean boolean0 = strBuilder0.startsWith("BH*");
      StrBuilder strBuilder2 = new StrBuilder("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      // Undeclared exception!
      try { 
        strBuilder2.deleteCharAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      strBuilder0.size = 0;
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('W');
      int int1 = strBuilder0.indexOf((StrMatcher) strMatcher_CharMatcher0);
      char[] charArray0 = new char[2];
      charArray0[0] = 'W';
      charArray0[1] = 'W';
      // Undeclared exception!
      try { 
        strBuilder0.insert(0, charArray0, (-413), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: -413
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      String string0 = strBuilder0.toString();
      // Undeclared exception!
      try { 
        strBuilder0.substring(31);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.replaceAll((String) null, "3tD`*)");
      int int0 = strBuilder1.indexOf((StrMatcher) null);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.append((-1259L));
      StrBuilder strBuilder2 = strBuilder0.replace(0, 0, "");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      char[] charArray0 = new char[8];
      charArray0[0] = 'J';
      charArray0[1] = 'm';
      charArray0[2] = 'Y';
      charArray0[3] = 'h';
      charArray0[4] = 'g';
      charArray0[5] = 'S';
      charArray0[6] = '-';
      charArray0[7] = 'l';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0, 0, 0);
      int int1 = strBuilder_StrBuilderReader0.read();
      int int2 = strBuilder2.validateRange(0, 45);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4.9");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(5080, 0, ',');
      boolean boolean0 = strBuilder1.contains("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 97;
      // Undeclared exception!
      try { 
        strBuilder0.insert(97, "H1U><)t");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 97
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(300);
      int int0 = strBuilder0.indexOf("", 300);
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("1.6");
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "[7J8Qw|rw71}c>X");
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) "1.6";
      objectArray0[1] = (Object) strMatcher0;
      objectArray0[2] = (Object) strMatcher0;
      objectArray0[3] = (Object) strBuilder0;
      objectArray0[4] = (Object) "";
      StrBuilder strBuilder2 = strBuilder1.appendPadding((-1), ')');
      objectArray0[5] = (Object) "[7J8Qw|rw71}c>X";
      StrBuilder strBuilder3 = strBuilder1.appendWithSeparators(objectArray0, (String) null);
      StrBuilder strBuilder4 = strBuilder1.deleteAll('[');
      StrBuilder strBuilder5 = strBuilder4.replaceFirst("3~", (String) null);
      // Undeclared exception!
      try { 
        strBuilder4.append(strBuilder2, Integer.MAX_VALUE, 355);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("  .~#UiQu|u");
      Object[] objectArray0 = new Object[0];
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "  .~#UiQu|u");
      StringBuffer stringBuffer0 = strBuilder1.toStringBuffer();
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight(3, 3, 'n');
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadLeft((Object) "  .~#UiQu|u", 3, '{');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      StrBuilder strBuilder4 = new StrBuilder((-4135));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder4.new StrBuilderTokenizer();
      char[] charArray0 = new char[3];
      List list0 = strBuilder_StrBuilderTokenizer0.getTokenList();
      int int0 = strBuilder4.lastIndexOf((StrMatcher) null, 102);
      charArray0[0] = '.';
      char[] charArray1 = new char[9];
      charArray1[0] = 'n';
      charArray1[1] = '!';
      charArray1[2] = '.';
      charArray1[3] = '{';
      charArray1[4] = 'n';
      charArray1[5] = 'n';
      charArray1[6] = '.';
      charArray1[7] = '.';
      charArray1[8] = 'n';
      // Undeclared exception!
      try { 
        strBuilder4.append(charArray1, (-971), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 5;
      StrBuilder strBuilder1 = strBuilder0.setNullText("&-h<");
      StrBuilder strBuilder2 = strBuilder0.replace(0, 5, "os.arch");
      StrMatcher strMatcher0 = null;
      int int1 = strBuilder2.lastIndexOf((StrMatcher) null, 0);
      boolean boolean0 = strBuilder0.contains('4');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher1 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      String string0 = "E7";
      StrBuilder strBuilder3 = strBuilder2.replaceFirst(strMatcher1, "E7");
      StrBuilder strBuilder4 = strBuilder3.appendFixedWidthPadLeft(2, 5, 'O');
      Writer writer0 = strBuilder4.asWriter();
      char char0 = '_';
      char char1 = '9';
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(283);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 283
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.startsWith("9!'V@`F^oZFJT]i");
      boolean boolean1 = strBuilder0.contains("yb_*')nWBQ)\"l31&");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      StrBuilder strBuilder1 = new StrBuilder("9!'V@`F^oZFJT]i");
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1, 0, 0);
      long long0 = strBuilder_StrBuilderReader0.skip((-3398L));
      int int1 = strBuilder_StrBuilderReader0.read();
      int int2 = strBuilder0.length();
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadRight((-1), 96, 'l');
      char[] charArray0 = new char[8];
      charArray0[0] = 'l';
      charArray0[1] = 'l';
      charArray0[2] = 'l';
      charArray0[3] = 'l';
      charArray0[4] = 'l';
      charArray0[5] = 'l';
      charArray0[6] = '(';
      charArray0[7] = 'l';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder4 = strBuilder0.replaceFirst(strMatcher0, "9!'V@`F^oZFJT]i");
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "");
      Object[] objectArray0 = new Object[1];
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      objectArray0[0] = object0;
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators(objectArray0, "Invalid startIndex: ");
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.size();
      String string0 = "";
      StrBuilder strBuilder1 = new StrBuilder("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrBuilder strBuilder2 = strBuilder0.deleteFirst(strMatcher0);
      strBuilder2.size = 0;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer1 = strBuilder0.new StrBuilderTokenizer();
      String string1 = strBuilder_StrBuilderTokenizer1.getContent();
      StrBuilder strBuilder3 = strBuilder1.deleteFirst("");
      StrBuilder strBuilder4 = strBuilder3.deleteFirst(strMatcher0);
      StrBuilder strBuilder5 = strBuilder4.replaceFirst("", "");
      StrBuilder strBuilder6 = strBuilder1.replaceFirst("", "");
      String string2 = "i^] 7$OZ`6V*^";
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoredMatcher(strMatcher0);
      int int1 = 101;
      boolean boolean0 = strBuilder_StrBuilderTokenizer0.hasNext();
      int int2 = strBuilder0.lastIndexOf("i^] 7$OZ`6V*^", 101);
      boolean boolean1 = strBuilder6.contains(strMatcher0);
      StrBuilder strBuilder7 = strBuilder6.reverse();
      StrBuilder strBuilder8 = strBuilder7.setNullText("");
      StrBuilder strBuilder9 = strBuilder1.append((double) 0);
      // Undeclared exception!
      try { 
        strBuilder7.insert((-1), 656);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.insert(0, "000CdCmj7zfMqG-<Lq%");
      StrBuilder strBuilder2 = strBuilder0.ensureCapacity(0);
      int int1 = 0;
      StrBuilder strBuilder3 = strBuilder0.append(0);
      StrBuilder strBuilder4 = strBuilder2.appendPadding(0, 'H');
      StrBuilder strBuilder5 = strBuilder0.deleteFirst("ny>8HixF>YyBZkmx^|@");
      StringBuffer stringBuffer0 = strBuilder5.toStringBuffer();
      char[] charArray0 = new char[3];
      charArray0[0] = 'C';
      charArray0[1] = 'l';
      charArray0[2] = 'o';
      StrBuilder strBuilder6 = strBuilder1.append(charArray0);
      StrBuilder strBuilder7 = strBuilder5.replace(0, 97, "p .J-uYC<>Rc{&a");
      // Undeclared exception!
      try { 
        strBuilder1.insert((-733), (-1235L));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -733
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("l5+KK0ef%pCjA");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) "l5+KK0ef%pCjA", (-2416), ',');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      StrBuilder strBuilder2 = strBuilder0.replaceFirst(strMatcher0, "l5+KK0ef%pCjA");
      StrBuilder strBuilder3 = strBuilder1.setNewLineText("l5+KK0ef%pCjA");
      boolean boolean0 = strBuilder3.contains(strMatcher0);
      StrBuilder strBuilder4 = strBuilder2.replaceAll(strMatcher0, "l5+KK0ef%pCjA");
      StrBuilder strBuilder5 = strBuilder2.append((double) (-2416));
      StrBuilder strBuilder6 = strBuilder0.deleteFirst("5");
      char[] charArray0 = new char[5];
      charArray0[0] = ',';
      charArray0[1] = ',';
      charArray0[2] = ',';
      charArray0[3] = ',';
      charArray0[4] = ',';
      int int0 = 0;
      // Undeclared exception!
      try { 
        strBuilder1.insert(4, charArray0, 0, (-2416));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: -2416
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      int int0 = 5;
      StrBuilder strBuilder0 = new StrBuilder(5);
      int int1 = 0;
      char char0 = '0';
      StrBuilder strBuilder1 = strBuilder0.appendPadding(0, '0');
      int int2 = (-1484);
      StrBuilder strBuilder2 = strBuilder1.clear();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.next();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      int int0 = strBuilder0.indexOf("");
      StrBuilder strBuilder1 = strBuilder0.appendPadding(1167, 'e');
      Writer writer0 = strBuilder1.asWriter();
      boolean boolean0 = strBuilder0.startsWith((String) null);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      String string0 = strBuilder0.leftString(102);
      StringBuffer stringBuffer0 = new StringBuffer("E)F");
      StringBuffer stringBuffer1 = stringBuffer0.appendCodePoint(102);
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, (-1), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1076));
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("H5", "s*620");
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      String string0 = "StrTokenizer";
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("StrTokenizer");
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.appendNewLine();
      // Undeclared exception!
      try { 
        strBuilder0.insert(4, 4);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 4
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("-YO[o-ALIrFOjX|6^#N");
      StrMatcher strMatcher0 = StrMatcher.charMatcher('>');
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.size = (-521);
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity((-521));
      Writer writer0 = strBuilder1.asWriter();
      int int0 = strBuilder0.capacity();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[7];
      charArray0[0] = 'r';
      charArray0[1] = 'y';
      charArray0[2] = '^';
      charArray0[3] = '%';
      charArray0[4] = 'H';
      charArray0[5] = '$';
      charArray0[6] = 'D';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int1 = strBuilder_StrBuilderReader0.read(charBuffer0);
      int int2 = strBuilder_StrBuilderReader0.read();
      // Undeclared exception!
      try { 
        strBuilder0.append("&");
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("k,M9Bk.(ru9QR(i");
      StrBuilder strBuilder1 = strBuilder0.replaceAll("", "java.vm.specification.name");
      int int0 = 114;
      strBuilder1.size = 114;
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      boolean boolean0 = strBuilder1.contains(strMatcher0);
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher((char[]) null);
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher((char[]) null);
      StrBuilder strBuilder2 = strBuilder0.replaceFirst(strMatcher0, "");
      StrBuilder strBuilder3 = strBuilder1.replaceAll(strMatcher0, "Sy.88lu(p%>\"'u");
      int int1 = 2;
      char char0 = 'm';
      // Undeclared exception!
      try { 
        strBuilder3.insert(0, 'k');
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(882);
      Writer writer0 = strBuilder0.asWriter();
      char[] charArray0 = new char[7];
      charArray0[0] = 'T';
      charArray0[1] = '_';
      charArray0[2] = '6';
      charArray0[3] = 'V';
      charArray0[4] = 'J';
      charArray0[5] = 'G';
      charArray0[6] = '6';
      // Undeclared exception!
      try { 
        strBuilder0.getChars((-2503), (-2503), charArray0, 882);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2503
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[4];
      charArray0[0] = 'i';
      StrBuilder strBuilder1 = strBuilder0.delete(0, 2);
      charArray0[1] = 'w';
      charArray0[2] = 'i';
      charArray0[3] = 'G';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0);
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      StrBuilder strBuilder2 = strBuilder0.append("java.class.path", 0, 0);
      StrBuilder strBuilder3 = strBuilder1.ensureCapacity(102);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(charArray0);
      StrBuilder strBuilder4 = strBuilder3.clear();
      char[] charArray1 = new char[2];
      charArray1[0] = 'i';
      charArray1[1] = 'i';
      char[] charArray2 = strBuilder1.getChars(charArray1);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      strBuilder0.size = 0;
      StrBuilder strBuilder1 = strBuilder0.insert(0, true);
      String string0 = "[T 1aK,<lC<|<:q:.";
      StrBuilder strBuilder2 = strBuilder1.setNullText("[T 1aK,<lC<|<:q:.");
      boolean boolean0 = strBuilder1.equalsIgnoreCase(strBuilder0);
      StrBuilder strBuilder3 = strBuilder0.trim();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) "[T 1aK,<lC<|<:q:.");
      char char0 = '8';
      Writer writer1 = strBuilder_StrBuilderWriter0.append('8');
      strBuilder_StrBuilderWriter0.close();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder3.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "[T 1aK,<lC<|<:q:.");
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charBuffer0);
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.StringCharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("j [r5.");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      int int0 = 680;
      StrBuilder strBuilder1 = new StrBuilder(680);
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      // Undeclared exception!
      try { 
        strBuilder2.insert(680, (long) 680);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 680
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder(0);
      StrMatcher strMatcher0 = StrMatcher.charMatcher('W');
      char[] charArray0 = new char[8];
      charArray0[0] = 'W';
      charArray0[1] = 'W';
      charArray0[2] = 'W';
      charArray0[3] = 'W';
      charArray0[4] = 'W';
      charArray0[5] = 'W';
      charArray0[6] = 'W';
      charArray0[7] = 'W';
      int int0 = strMatcher0.isMatch(charArray0, 0, 0, (-2952));
      int int1 = strBuilder1.indexOf(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      int int2 = strBuilder1.lastIndexOf('W');
      int int3 = (-2352);
      StrBuilder strBuilder3 = strBuilder0.append((-2352));
      // Undeclared exception!
      try { 
        strBuilder2.insert((-1), (float) (-2352));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2);
      StrBuilder strBuilder1 = strBuilder0.reverse();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      int int0 = strBuilder1.lastIndexOf(strMatcher0, 1068);
      int int1 = strBuilder1.hashCode();
      StrBuilder strBuilder2 = strBuilder0.replaceFirst(strMatcher0, (String) null);
      int int2 = strBuilder0.lastIndexOf("", 537);
      // Undeclared exception!
      try { 
        strBuilder2.toCharArray(108, (-4104));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      char[] charArray0 = new char[0];
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      // Undeclared exception!
      try { 
        strBuilder1.insert((-2095), (-2769L));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2095
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      String string0 = null;
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(2755);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2755
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      int int0 = strBuilder1.indexOf(strMatcher0, 605);
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Iterator) null, (String) null);
      int int1 = (-2664);
      // Undeclared exception!
      try { 
        strBuilder2.setLength((-2664));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2664
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "j1`i']i#z%");
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append('y');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[7];
      charArray0[0] = 'y';
      charArray0[1] = 'y';
      charArray0[2] = 'y';
      charArray0[3] = 'y';
      charArray0[4] = 'y';
      charArray0[5] = 'y';
      charArray0[6] = 'y';
      strBuilder_StrBuilderWriter0.write(charArray0, 3, 3);
      strBuilder_StrBuilderWriter0.close();
      char[] charArray1 = new char[3];
      StrBuilder strBuilder2 = strBuilder1.appendNull();
      charArray1[0] = 'y';
      charArray1[1] = 'y';
      charArray1[2] = 'y';
      char[] charArray2 = strBuilder1.getChars(charArray1);
      int int0 = strBuilder1.size();
      boolean boolean0 = strBuilder0.contains("Invalid startIndex: ");
      Reader reader0 = strBuilder1.asReader();
      StrBuilder strBuilder3 = strBuilder2.append(4);
      int int1 = strBuilder2.lastIndexOf('o');
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("xfl:R*Aiv;'v");
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.replace(strMatcher0, "", 0, 699, 0);
      StrBuilder strBuilder2 = strBuilder0.insert(0, "");
      // Undeclared exception!
      try { 
        strBuilder2.delete(1610, 1610);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid startIndex: ");
      String string0 = "";
      StrBuilder strBuilder1 = strBuilder0.setNullText("");
      int int0 = 2;
      StrBuilder strBuilder2 = strBuilder1.insert(2, true);
      int int1 = 3086;
      StrBuilder strBuilder3 = strBuilder0.clear();
      int int2 = strBuilder0.lastIndexOf('+', 3086);
      // Undeclared exception!
      try { 
        strBuilder0.insert(3086, (Object) "Invalid startIndex: ");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3086
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      int int0 = (-1947);
      StrBuilder strBuilder0 = new StrBuilder((-1947));
      StrBuilder strBuilder1 = strBuilder0.setNullText("");
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      char[] charArray0 = null;
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher((char[]) null);
      int int1 = strBuilder0.indexOf(strMatcher0);
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "");
      StrBuilder strBuilder2 = strBuilder0.append(stringBuffer0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder3 = strBuilder0.appendWithSeparators((Collection) linkedList0, "C");
      Reader reader0 = strBuilder3.asReader();
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, (-1947), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("*_E/#E)wU`6&>I[-");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterChar('H');
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("user.language");
      StrMatcher strMatcher1 = StrMatcher.charMatcher(':');
      StrMatcher strMatcher2 = StrMatcher.charMatcher('Q');
      StrMatcher strMatcher3 = StrMatcher.charMatcher(':');
      StrTokenizer strTokenizer1 = strBuilder_StrBuilderTokenizer0.setIgnoredMatcher(strMatcher0);
      StrMatcher strMatcher4 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      char[] charArray0 = new char[4];
      charArray0[0] = ':';
      charArray0[1] = ':';
      charArray0[2] = ':';
      charArray0[3] = ':';
      StrTokenizer strTokenizer2 = strBuilder_StrBuilderTokenizer0.setTrimmerMatcher(strMatcher3);
      StrMatcher strMatcher5 = StrMatcher.charSetMatcher(charArray0);
      strBuilder0.validateIndex(0);
      String string0 = strBuilder0.midString(0, (-716));
      int int0 = strBuilder0.indexOf(strMatcher4, (-716));
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(485);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark((-716));
      // Undeclared exception!
      try { 
        strBuilder1.setLength((-716));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -716
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(31);
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0, 31);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(31);
      boolean boolean0 = strBuilder0.contains('K');
      char[] charArray0 = new char[9];
      charArray0[0] = 'K';
      charArray0[1] = 'K';
      charArray0[2] = 'K';
      charArray0[3] = 'K';
      charArray0[4] = 'K';
      charArray0[5] = 'K';
      charArray0[6] = 'K';
      charArray0[7] = 'K';
      charArray0[8] = 'K';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(4);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      int int1 = strBuilder_StrBuilderReader0.read();
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      int int2 = strBuilder0.hashCode();
      int int3 = strBuilder0.lastIndexOf("/ot W", 0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("&\")vLfFh@'M5m&");
      StrBuilder strBuilder1 = strBuilder0.setNewLineText(" 4%Q");
      char[] charArray0 = strBuilder0.toCharArray();
      StrBuilder strBuilder2 = strBuilder0.clear();
      StrBuilder strBuilder3 = strBuilder2.append("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder3.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      int int0 = strBuilder3.indexOf(strMatcher0, (-1652));
      strBuilder2.size = 3306;
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      int int1 = strBuilder_StrBuilderReader0.read();
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 506;
      // Undeclared exception!
      try { 
        strBuilder0.charAt(506);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 506
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = strBuilder0.lastIndexOf("", 0);
      StrBuilder strBuilder1 = strBuilder0.append(true);
      // Undeclared exception!
      try { 
        strBuilder1.append("", 101, 348);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-875);
      // Undeclared exception!
      try { 
        strBuilder0.delete((-875), (-875));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -875
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      // Undeclared exception!
      try { 
        strBuilder0.charAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      int int0 = (-1763);
      StrBuilder strBuilder0 = new StrBuilder((-1763));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[7];
      charArray0[0] = '>';
      charArray0[1] = 'v';
      charArray0[2] = 'r';
      charArray0[3] = '@';
      charArray0[4] = 'U';
      charArray0[5] = 'k';
      charArray0[6] = 'l';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, (-1763), (-1763));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -1763
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("DaSD(b7N>G");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      Writer writer0 = strBuilder_StrBuilderWriter0.append('Q');
      strBuilder_StrBuilderWriter0.write(9);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.append('c');
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(".nr8N@");
      int int0 = 0;
      int int1 = 114;
      // Undeclared exception!
      try { 
        strBuilder0.append(".nr8N@", 0, 114);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = strBuilder0.lastIndexOf("", 0);
      StrBuilder strBuilder1 = strBuilder0.append(true);
      // Undeclared exception!
      try { 
        strBuilder1.append("", 0, 348);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      String string0 = null;
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      int int0 = (-3485);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-3485), (Object) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3485
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.append(0);
      StrBuilder strBuilder2 = strBuilder0.replaceAll((String) null, "#|vt[GY?i");
      StrBuilder strBuilder3 = strBuilder0.clear();
      StrBuilder strBuilder4 = strBuilder0.append(false);
      // Undeclared exception!
      try { 
        strBuilder4.insert(823, (Object) strBuilder3);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 823
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("XMS+`k2sX<");
      StringBuffer stringBuffer0 = new StringBuffer("XMS+`k2sX<");
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 0, 230);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = strBuilder0.toString();
      char char0 = 'o';
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(2, 'o');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = '*';
      StrBuilder strBuilder1 = strBuilder0.deleteAll('*');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      String string0 = "org.apache.commons.lang.text.StrBuilder$StrBuilderReader";
      // Undeclared exception!
      try { 
        strBuilder1.replace(strMatcher0, "org.apache.commons.lang.text.StrBuilder$StrBuilderReader", (-305), (-305), (-458));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -305
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(2095, 'W');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2095
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt((-2816), ')');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2816
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceAll("ip&)^lr;j|:Vhk]^2${", "ip&)^lr;j|:Vhk]^2${");
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrBuilder strBuilder2 = strBuilder1.deleteAll(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder0.charAt((-2395));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2395
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.lastIndexOf("{4i1F.", 117);
      StringBuffer stringBuffer0 = new StringBuffer("");
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 1929, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "0";
      StrBuilder strBuilder1 = strBuilder0.replaceFirst((StrMatcher) null, "0");
      StrBuilder strBuilder2 = strBuilder0.appendNull();
      StrBuilder strBuilder3 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      StrBuilder strBuilder4 = strBuilder3.deleteFirst("yij8DoXyyp");
      StrBuilder strBuilder5 = strBuilder2.appendFixedWidthPadRight((Object) strBuilder3, (-3344), 'Q');
      String string1 = "Linux";
      StrBuilder strBuilder6 = strBuilder1.appendWithSeparators((Collection) null, "Linux");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      StrBuilder strBuilder7 = strBuilder2.deleteFirst((StrMatcher) null);
      strBuilder_StrBuilderReader0.reset();
      strBuilder_StrBuilderReader0.reset();
      int int0 = (-4876);
      // Undeclared exception!
      try { 
        strBuilder0.substring((-4876), 1041);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -4876
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      String string0 = "org.apache.commons.lang.text.StrMatcher$StringMatcher";
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrMatcher$StringMatcher");
      String string1 = "9\"\"'";
      StrBuilder strBuilder1 = strBuilder0.replaceAll("9\"\"'", "9\"\"'");
      StrBuilder strBuilder2 = strBuilder0.replaceAll("org.apache.commons.lang.text.StrMatcher$StringMatcher", "`b_d)H$$|i}=WPT(lE");
      StringBuffer stringBuffer0 = new StringBuffer("");
      StringBuffer stringBuffer1 = stringBuffer0.append(false);
      int int0 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, (-4257), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.replaceAll("java.io.tmpdir", "");
      StrBuilder strBuilder2 = strBuilder1.append("");
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.charAt((-2849));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2849
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(0L);
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "");
      int int0 = strBuilder_StrBuilderReader0.read(charBuffer0);
      strBuilder_StrBuilderReader0.reset();
      int int1 = strBuilder_StrBuilderReader0.read();
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("m+B[=pjBNX)W");
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.append(true);
      StringBuffer stringBuffer0 = strBuilder1.toStringBuffer();
      StrBuilder strBuilder2 = strBuilder1.trim();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("m+B[=pjBNX)W");
      char[] charArray0 = new char[7];
      StrBuilder strBuilder3 = strBuilder2.append(charArray0);
      charArray0[0] = '|';
      charArray0[1] = '}';
      charArray0[2] = ')';
      charArray0[3] = 'Q';
      charArray0[4] = 'c';
      charArray0[5] = 'v';
      charArray0[6] = 'N';
      // Undeclared exception!
      try { 
        strBuilder2.insert((-910), charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -910
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[6];
      charArray0[0] = 'B';
      charArray0[1] = 'r';
      charArray0[2] = '_';
      charArray0[3] = 'h';
      charArray0[4] = 'c';
      charArray0[5] = '1';
      strBuilder0.getChars(0, 0, charArray0, 0);
      StrBuilder strBuilder1 = strBuilder0.append((-69L));
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      boolean boolean0 = strBuilder1.contains(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.appendNewLine();
      StrBuilder strBuilder3 = strBuilder0.append("4^z+SD!");
      int int0 = 44;
      char char0 = '=';
      // Undeclared exception!
      try { 
        strBuilder3.append(charArray0, (-1641), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = strBuilder0.getNullText();
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      char[] charArray0 = new char[3];
      charArray0[0] = ';';
      charArray0[1] = 'W';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("z.");
      charArray0[2] = 'r';
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, (-1070), (-1070));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -1070
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-472));
      String string0 = strBuilder0.leftString((-472));
      // Undeclared exception!
      try { 
        strBuilder0.insert((-472), false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -472
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Fou'&uC5");
      StrBuilder strBuilder1 = strBuilder0.append(0L);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      char[] charArray0 = new char[2];
      charArray0[0] = '.';
      charArray0[1] = 'E';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 778, 714);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 714
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-407));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[4];
      charArray0[0] = 'y';
      charArray0[1] = 'C';
      strBuilder_StrBuilderReader0.mark((-407));
      charArray0[2] = '\\';
      StrBuilder strBuilder1 = strBuilder0.insert(0, (-1739.9198753));
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("");
      int int0 = strBuilder0.indexOf(strMatcher0);
      int int1 = strBuilder_StrBuilderReader0.read(charArray0);
      charArray0[3] = 'E';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, (-407), (-407));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1498);
      char[] charArray0 = new char[6];
      charArray0[0] = 'K';
      charArray0[1] = 'T';
      char char0 = '(';
      // Undeclared exception!
      try { 
        strBuilder0.insert(39, 472.964568814324);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 39
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      String string0 = null;
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      int int0 = strBuilder1.lastIndexOf(strMatcher0, 97);
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      boolean boolean0 = strBuilder0.isEmpty();
      boolean boolean1 = strBuilder1.startsWith("^^");
      // Undeclared exception!
      try { 
        strBuilder1.deleteCharAt((-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      String string0 = ", Length: 0";
      StrBuilder strBuilder0 = new StrBuilder(", Length: 0");
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('g', 'M');
      StrBuilder strBuilder2 = strBuilder0.appendNull();
      StrBuilder strBuilder3 = strBuilder2.append((Object) ", Length: 0");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrBuilder strBuilder4 = strBuilder3.appendNewLine();
      char[] charArray0 = null;
      int int0 = 1802;
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read((char[]) null, 1802, 1802);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.appendPadding((-1615), 'C');
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((-155), (-1615), 'Q');
      char[] charArray0 = new char[8];
      charArray0[0] = 'Q';
      charArray0[1] = 'b';
      charArray0[2] = '^';
      charArray0[3] = 'Q';
      charArray0[4] = 'C';
      charArray0[5] = 'C';
      charArray0[6] = 'Q';
      charArray0[7] = 'Q';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      StrBuilder strBuilder3 = strBuilder2.deleteFirst((StrMatcher) strMatcher_CharSetMatcher0);
      StrBuilder strBuilder4 = strBuilder0.replaceFirst('-', 'b');
      StrBuilder strBuilder5 = strBuilder2.minimizeCapacity();
      StrBuilder strBuilder6 = strBuilder1.ensureCapacity((-1516));
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((-9.176F));
      StrTokenizer strTokenizer0 = strBuilder1.asTokenizer();
      StrBuilder strBuilder2 = strBuilder0.replaceFirst('!', '!');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      StrBuilder strBuilder3 = strBuilder2.deleteFirst(strMatcher0);
      StrBuilder strBuilder4 = strBuilder3.minimizeCapacity();
      String string0 = strBuilder2.leftString((-1963));
      int int0 = strBuilder2.size();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder4.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
      // Undeclared exception!
      try { 
        strBuilder0.append("Linux", 97, (-1963));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-464));
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      int int0 = strBuilder0.length();
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      boolean boolean0 = strBuilder0.isEmpty();
      boolean boolean1 = strBuilder1.startsWith("^^");
      int int0 = strBuilder1.indexOf("");
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      int int1 = 900;
      char char0 = '4';
      StrBuilder strBuilder2 = new StrBuilder((-939));
      StrBuilder strBuilder3 = strBuilder0.append((Object) strBuilder2);
      char[] charArray0 = new char[2];
      charArray0[0] = '4';
      charArray0[1] = '4';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrMatcher strMatcher2 = StrMatcher.stringMatcher((String) null);
      // Undeclared exception!
      try { 
        strBuilder2.validateIndex(900);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 900
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid length: ");
      int int0 = strBuilder0.lastIndexOf(',', (-3280));
      char[] charArray0 = strBuilder0.toCharArray();
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder1 = strBuilder0.append("Invalid length: ");
      StrBuilder strBuilder2 = strBuilder1.append(strBuilder0);
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) "Invalid length: ";
      objectArray0[1] = (Object) reader0;
      objectArray0[2] = (Object) strBuilder0;
      objectArray0[3] = (Object) strBuilder0;
      objectArray0[4] = (Object) strBuilder0;
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators(objectArray0, "k|r0 E?bpg");
      int int1 = strBuilder0.indexOf("Invalid length: ", 0);
      StrBuilder strBuilder4 = strBuilder1.minimizeCapacity();
      String string0 = strBuilder1.midString((-2019), 2740);
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('#');
      boolean boolean0 = strBuilder2.contains((StrMatcher) strMatcher_CharMatcher0);
      String string1 = strBuilder3.getNewLineText();
      int int2 = strBuilder2.lastIndexOf('#', 2509);
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("");
      boolean boolean1 = strBuilder2.equals((Object) "Invalid length: Invalid length: Invalid length: Invalid length: java.lang.String@0000000003k|r0 E?bpgorg.apache.commons.lang.text.StrBuilder$StrBuilderReader@0000000002k|r0 E?bpgorg.apache.commons.lang.text.StrBuilder@0000000001k|r0 E?bpgorg.apache.commons.lang.text.StrBuilder@0000000001k|r0 E?bpgorg.apache.commons.lang.text.StrBuilder@0000000001");
      Writer writer0 = strBuilder3.asWriter();
      StrBuilder strBuilder5 = strBuilder1.replaceFirst((StrMatcher) strMatcher_CharMatcher0, "Invalid length: ");
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1);
      char[] charArray0 = new char[2];
      charArray0[0] = '[';
      charArray0[1] = 'e';
      StrBuilder strBuilder1 = strBuilder0.clear();
      String string0 = strBuilder1.rightString(683);
      // Undeclared exception!
      try { 
        strBuilder0.insert(1, charArray0, 1, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2023));
      StrBuilder strBuilder1 = strBuilder0.append((Object) "Invalid length: ");
      String string0 = strBuilder0.rightString((-2023));
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      boolean boolean0 = linkedList0.add("");
      boolean boolean1 = linkedList0.add("org.apache.commons.lang.SystemUtils");
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      int int0 = strBuilder1.lastIndexOf((StrMatcher) null, (-1067));
      char[] charArray0 = strBuilder1.toCharArray();
      int int1 = strBuilder1.size();
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("R");
      StrBuilder strBuilder1 = strBuilder0.replaceAll((String) null, "@8^,6ahsCNS-+6;");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      boolean boolean0 = linkedList0.add("N[/Wd\"| zrJn<=E.S");
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(48);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
      StrBuilder strBuilder2 = strBuilder0.clear();
      StrTokenizer strTokenizer0 = strBuilder1.asTokenizer();
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("&\")vLfFh@'M5m&");
      StrBuilder strBuilder1 = strBuilder0.setNewLineText(" 4%Q");
      char[] charArray0 = strBuilder0.toCharArray();
      StrBuilder strBuilder2 = strBuilder0.clear();
      strBuilder2.size = 3306;
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      int int0 = strBuilder_StrBuilderReader0.read();
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = strBuilder0.toCharArray();
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(4710);
      char[] charArray0 = new char[6];
      charArray0[0] = '?';
      charArray0[1] = '9';
      charArray0[2] = 'l';
      charArray0[3] = 'D';
      charArray0[4] = '/';
      charArray0[5] = ')';
      char[] charArray1 = strBuilder0.getChars(charArray0);
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("d7Kppxn^N#2j");
      StrBuilder strBuilder1 = strBuilder0.deleteAll('o');
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.delete(0, 0);
      StrBuilder strBuilder2 = strBuilder1.insert(0, 0);
      int int1 = strBuilder2.capacity();
      StrBuilder strBuilder3 = strBuilder1.ensureCapacity(0);
      StrBuilder strBuilder4 = strBuilder1.trim();
      StrBuilder strBuilder5 = strBuilder4.deleteCharAt(0);
      // Undeclared exception!
      try { 
        strBuilder5.replace((-3271), 0, "Xwt #f0AYm!*p9i#vC");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3271
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      int int0 = 4;
      StrBuilder strBuilder0 = new StrBuilder(4);
      int int1 = 97;
      char[] charArray0 = new char[7];
      charArray0[0] = '_';
      charArray0[1] = '*';
      charArray0[2] = 'x';
      charArray0[3] = '4';
      charArray0[4] = 'x';
      charArray0[5] = 'z';
      charArray0[6] = '@';
      // Undeclared exception!
      try { 
        strBuilder0.insert(4, charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 4
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      String string0 = "java.vendor";
      StrBuilder strBuilder0 = new StrBuilder("java.vendor");
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      int int0 = (-311);
      float float0 = 2744.6038F;
      StrMatcher strMatcher0 = StrMatcher.charMatcher('m');
      int int1 = 1379;
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray((-311), 1379);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -311
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(34);
      char[] charArray0 = new char[3];
      charArray0[0] = ':';
      charArray0[1] = 'N';
      charArray0[2] = '|';
      char[] charArray1 = strBuilder0.getChars(charArray0);
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2333));
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("]u{_kR+");
      // Undeclared exception!
      try { 
        strBuilder0.insert((-2333), (-2333));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2333
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.awt.printerjob");
      boolean boolean0 = strBuilder0.contains('d');
      StrBuilder strBuilder1 = strBuilder0.delete(0, 0);
      StrBuilder strBuilder2 = strBuilder1.trim();
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder strBuilder3 = strBuilder0.deleteCharAt(0);
      int int0 = strBuilder0.lastIndexOf(" \t\n\r\f");
      String string0 = strBuilder0.leftString((-1));
      char[] charArray0 = new char[0];
      StrBuilder strBuilder4 = strBuilder0.append(charArray0);
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt((-1045));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1045
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.insert(1152, '8');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1152
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2247));
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      // Undeclared exception!
      try { 
        strBuilder0.replace(strMatcher0, "o|O<^OEo_z2]I", (-2247), (-2247), (-2247));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2247
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-484));
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight((-484), (-484), 'n');
      StrBuilder strBuilder3 = strBuilder2.append(0);
      int int0 = strBuilder0.hashCode();
      StrBuilder strBuilder4 = strBuilder0.insert(0, (double) 0);
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("=TO;f<~");
      boolean boolean0 = strBuilder0.endsWith("=TO;f<~");
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.size = 0;
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("9)j} zt5-+");
      StrBuilder strBuilder2 = new StrBuilder((String) null);
      StrBuilder strBuilder3 = strBuilder0.append(0.0F);
      int int0 = Integer.MAX_VALUE;
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder2, 731, Integer.MAX_VALUE);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1843);
      StrBuilder strBuilder1 = new StrBuilder();
      char char0 = ' ';
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((Object) strBuilder1, 7650, ' ');
      int int0 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.substring(7650, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.replace(strMatcher0, "k>h@eaCTVvJ\"7=V_dK", 0, 0, 0);
      int int1 = 116;
      // Undeclared exception!
      try { 
        strBuilder0.append("k>h@eaCTVvJ\"7=V_dK", 116, 116);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(758);
      StrBuilder strBuilder1 = strBuilder0.append((-1.0F));
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder("l>$");
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, 32, 2805);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      String string0 = "org.apache.commons.lang.text.StrMatcher$TrimMatcher";
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrMatcher$TrimMatcher");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(1L);
      StrBuilder strBuilder1 = new StrBuilder("org.apache.commons.lang.text.StrMatcher$TrimMatcher");
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, 0, 1669);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("");
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1);
      // Undeclared exception!
      try { 
        strBuilder0.substring(1);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1189);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(object0, 1189, '\'');
      StrBuilder strBuilder2 = strBuilder1.appendPadding((-764), '\'');
      Reader reader0 = strBuilder1.asReader();
      StrBuilder strBuilder3 = strBuilder0.deleteAll((String) null);
      StrBuilder strBuilder4 = strBuilder0.deleteFirst('t');
      StrBuilder strBuilder5 = strBuilder0.setNullText("{");
      StrBuilder strBuilder6 = strBuilder0.append("{");
      StrBuilder strBuilder7 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder7.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      StrBuilder strBuilder8 = strBuilder4.appendFixedWidthPadLeft(1189, 508, 'h');
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) "";
      objectArray0[1] = (Object) strBuilder0;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "");
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "");
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      int int0 = 97;
      StrBuilder strBuilder0 = new StrBuilder(97);
      int int1 = strBuilder0.indexOf('B');
      String string0 = strBuilder0.getNullText();
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      int int2 = 1130;
      // Undeclared exception!
      try { 
        strBuilder1.insert(1130, (Object) "LHE.Zg0]BR@86JrGF58");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1130
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3719);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      int int0 = 1276;
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("Solaris", 3719, 1276);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrBuilder strBuilder2 = strBuilder1.appendNull();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      int int0 = strBuilder1.lastIndexOf("Z\"bBgw wIr(u{", 329);
      StrBuilder strBuilder3 = strBuilder1.replace(0, 0, "Xs=hjR>*/U=m@uR%");
      StrBuilder strBuilder4 = strBuilder2.setCharAt(0, '-');
      int int1 = strBuilder1.capacity();
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      StrBuilder strBuilder5 = strBuilder2.insert(0, (char[]) null, 1832, (-119));
      char[] charArray0 = new char[2];
      charArray0[0] = 'h';
      charArray0[1] = 'f';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder6 = strBuilder1.replaceAll(strMatcher0, "Z\"bBgw wIr(u{");
      int int2 = strBuilder6.hashCode();
      StrBuilder strBuilder7 = strBuilder2.reverse();
      int int3 = strBuilder7.lastIndexOf(strMatcher0, 0);
      boolean boolean0 = strBuilder6.startsWith("startIndex must be valid");
      StrBuilder strBuilder8 = strBuilder4.setNullText("startIndex must be valid");
      char[] charArray1 = strBuilder4.toCharArray(0, 1037);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder4.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("wlYS0Eb", 1, (-119));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("r");
      StrBuilder strBuilder1 = strBuilder0.deleteAll('I');
      int int0 = strBuilder0.lastIndexOf("r");
      // Undeclared exception!
      try { 
        strBuilder1.append("r", 171, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("W");
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance("W");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      StrBuilder strBuilder1 = strBuilder0.append(object0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      strBuilder_StrBuilderTokenizer0.forEachRemaining(consumer0);
      StrBuilder strBuilder2 = strBuilder1.append('F');
      String string0 = strBuilder2.midString((-67), 48);
      StrBuilder strBuilder3 = strBuilder1.deleteAll("W");
      StrBuilder strBuilder4 = strBuilder3.appendNewLine();
      StrBuilder strBuilder5 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "W");
      String string1 = strBuilder3.midString(0, 0);
      StrBuilder strBuilder6 = strBuilder0.appendFixedWidthPadLeft((Object) "W", 0, ';');
      StrBuilder strBuilder7 = strBuilder6.deleteFirst('F');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder6.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      StrBuilder strBuilder8 = strBuilder2.ensureCapacity((-67));
      int int0 = strBuilder5.lastIndexOf("Worg.apache.commons.lang.text.StrBuilder$StrBuil");
      StrBuilder strBuilder9 = strBuilder0.appendNewLine();
      StrBuilder strBuilder10 = strBuilder9.insert(48, false);
      char[] charArray0 = strBuilder10.toCharArray();
      // Undeclared exception!
      try { 
        strBuilder9.insert((-67), 'P');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -67
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(0);
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      strBuilder_StrBuilderReader0.reset();
      StrMatcher strMatcher1 = StrMatcher.commaMatcher();
      StrMatcher strMatcher2 = StrMatcher.charMatcher('5');
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher1, "=yIiU!{CN!");
      String string0 = strBuilder1.leftString(0);
      String string1 = strBuilder0.substring(0);
      StrMatcher strMatcher3 = StrMatcher.charSetMatcher("=yIiU!{CN!");
      char[] charArray0 = new char[3];
      charArray0[0] = '\'';
      charArray0[1] = 'X';
      StringBuffer stringBuffer0 = new StringBuffer();
      StringBuffer stringBuffer1 = new StringBuffer("");
      StringBuffer stringBuffer2 = stringBuffer1.insert(0, 'X');
      StrBuilder strBuilder2 = strBuilder0.append(stringBuffer1);
      StrTokenizer strTokenizer0 = strBuilder2.asTokenizer();
      charArray0[2] = 't';
      StrBuilder strBuilder3 = strBuilder1.append(charArray0);
      StrBuilder strBuilder4 = strBuilder1.append((float) 0);
      strBuilder1.validateIndex(0);
      StrBuilder strBuilder5 = strBuilder3.deleteAll(strMatcher1);
      StrBuilder strBuilder6 = strBuilder1.insert(0, (-2687L));
      String string2 = strBuilder1.getNullText();
      StrBuilder strBuilder7 = strBuilder6.deleteFirst((String) null);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 32, (-1));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[4];
      charArray0[0] = 'P';
      charArray0[1] = 'P';
      charArray0[2] = 'h';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StrBuilder strBuilder2 = strBuilder1.trim();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 120, 1);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Object object0 = new Object();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("*U,\"/NjnB6");
      int int0 = 0;
      StrBuilder strBuilder2 = strBuilder0.insert(0, (double) 0);
      StrTokenizer strTokenizer0 = strBuilder2.asTokenizer();
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadLeft(object0, (-3386), '{');
      String string0 = strBuilder3.substring(0);
      String string1 = strBuilder3.toString();
      String string2 = "";
      StrBuilder strBuilder4 = strBuilder0.replaceFirst("", "");
      char[] charArray0 = new char[0];
      StrBuilder strBuilder5 = strBuilder0.insert(0, charArray0);
      StrBuilder strBuilder6 = strBuilder5.appendFixedWidthPadLeft((-3386), 0, '{');
      int int1 = (-968);
      // Undeclared exception!
      try { 
        strBuilder6.setLength((-968));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -968
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrBuilder strBuilder2 = strBuilder1.appendNull();
      Object[] objectArray0 = new Object[9];
      objectArray0[2] = (Object) strBuilder1;
      objectArray0[3] = (Object) strBuilder0;
      objectArray0[4] = (Object) strBuilder2;
      objectArray0[5] = (Object) strBuilder0;
      Object object0 = new Object();
      objectArray0[6] = object0;
      objectArray0[7] = (Object) strBuilder0;
      objectArray0[8] = (Object) strBuilder1;
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators(objectArray0, "{[");
      StrBuilder strBuilder4 = strBuilder2.appendFixedWidthPadLeft((-1038), 2, '2');
      StrBuilder strBuilder5 = strBuilder4.insert(0, (long) 39);
      StrTokenizer strTokenizer0 = strBuilder5.asTokenizer();
      int int0 = strBuilder1.hashCode();
      int int1 = strBuilder1.capacity();
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.startsWith("9!'V@`F^oZFJT]i");
      boolean boolean1 = strBuilder0.contains("yb_*')nWBQ)\"l31&");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      StrBuilder strBuilder1 = new StrBuilder("9!'V@`F^oZFJT]i");
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1, 0, 0);
      long long0 = strBuilder_StrBuilderReader0.skip((-3398L));
      int int1 = strBuilder_StrBuilderReader0.read();
      int int2 = StrBuilder.CAPACITY;
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadRight((-1), 96, 'l');
      char[] charArray0 = new char[8];
      charArray0[0] = 'l';
      charArray0[1] = 'l';
      charArray0[2] = 'l';
      charArray0[3] = 'l';
      charArray0[4] = 'l';
      charArray0[5] = 'l';
      charArray0[6] = '(';
      charArray0[7] = 'l';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder4 = strBuilder0.replaceFirst(strMatcher0, "9!'V@`F^oZFJT]i");
  }
}
