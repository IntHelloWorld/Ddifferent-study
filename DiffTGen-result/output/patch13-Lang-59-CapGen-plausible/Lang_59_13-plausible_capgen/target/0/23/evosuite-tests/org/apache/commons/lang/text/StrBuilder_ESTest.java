/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 31 17:12:11 GMT 2020
 */

package org.apache.commons.lang.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.Writer;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.NoSuchElementException;
import org.apache.commons.lang.text.StrBuilder;
import org.apache.commons.lang.text.StrMatcher;
import org.apache.commons.lang.text.StrTokenizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StrBuilder_ESTest extends StrBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('f');
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("*W)n(cHC");
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("Array element ");
      StrMatcher strMatcher2 = StrMatcher.stringMatcher("Lk/!Z!P!M");
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((char[]) null);
      char[] charArray0 = new char[2];
      charArray0[0] = '[';
      charArray0[1] = 'f';
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      String string0 = "R'";
      StrBuilder strBuilder2 = strBuilder0.replaceAll((StrMatcher) null, "Hp)!m1b7\"4yKX");
      boolean boolean0 = strBuilder0.endsWith("R'");
      char char0 = 'y';
      // Undeclared exception!
      try { 
        strBuilder0.insert((-2063), 'y');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2063
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append("java.vendor");
      StrBuilder strBuilder2 = strBuilder0.clear();
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder1);
      char[] charArray0 = strBuilder3.toCharArray(0, 0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = strBuilder_StrBuilderReader0.read(charBuffer0);
      strBuilder_StrBuilderReader0.close();
      StrBuilder strBuilder4 = strBuilder3.replace(0, 0, "java.vendor");
      StrBuilder strBuilder5 = strBuilder4.appendNewLine();
      StrBuilder strBuilder6 = strBuilder4.append(true);
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      int int1 = strBuilder6.lastIndexOf(strMatcher0);
      String string0 = strBuilder6.substring(0);
      int int2 = strBuilder3.lastIndexOf("java.vendor");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoredChar(',');
      String string1 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder strBuilder7 = strBuilder4.trim();
      StrTokenizer strTokenizer1 = strBuilder_StrBuilderTokenizer0.setIgnoredChar('2');
      StrBuilder strBuilder8 = strBuilder6.replaceAll("java.vendor\ntrue", "Invalid length: ");
      String string2 = strBuilder_StrBuilderTokenizer0.getContent();
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      StrBuilder strBuilder9 = strBuilder0.deleteFirst((StrMatcher) strMatcher_CharSetMatcher0);
      Writer writer0 = strBuilder9.asWriter();
      StrBuilder strBuilder10 = strBuilder5.append((float) 0);
      boolean boolean0 = strBuilder1.endsWith("Invalid length: ");
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append("java.vendor");
      StrBuilder strBuilder2 = strBuilder0.clear();
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder1);
      char[] charArray0 = strBuilder3.toCharArray(0, 0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = strBuilder_StrBuilderReader0.read(charBuffer0);
      strBuilder_StrBuilderReader0.close();
      StrBuilder strBuilder4 = strBuilder3.replace(0, 0, "java.vendor");
      StrBuilder strBuilder5 = strBuilder4.appendNewLine();
      StrBuilder strBuilder6 = strBuilder4.append(true);
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      int int1 = strBuilder6.lastIndexOf(strMatcher0);
      String string0 = strBuilder6.substring(0);
      int int2 = strBuilder3.lastIndexOf("java.vendor");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoredChar(',');
      String string1 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder strBuilder7 = strBuilder4.trim();
      StrBuilder strBuilder8 = strBuilder6.replaceAll("java.vendor\ntrue", "Invalid length: ");
      String string2 = strBuilder_StrBuilderTokenizer0.getContent();
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      StrBuilder strBuilder9 = strBuilder0.deleteFirst((StrMatcher) strMatcher_CharSetMatcher0);
      // Undeclared exception!
      try { 
        strBuilder3.insert(0, charArray0, 11, (-1803));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: 11
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("startIndex must be valid");
      StrBuilder strBuilder1 = strBuilder0.append((-4342));
      StrBuilder strBuilder2 = new StrBuilder((-4342));
      int int0 = strBuilder0.length();
      int int1 = strBuilder1.validateRange(0, 1450);
      boolean boolean0 = strBuilder1.contains('g');
      StrBuilder strBuilder3 = strBuilder1.insert(29, 0.0F);
      String string0 = strBuilder2.getNullText();
      Writer writer0 = strBuilder1.asWriter();
      StrBuilder strBuilder4 = new StrBuilder("startIndex must be valid");
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      int int2 = strBuilder0.indexOf(strMatcher0, (-685));
      StringBuffer stringBuffer0 = strBuilder2.toStringBuffer();
      StrBuilder strBuilder5 = strBuilder3.insert(0, 'g');
      char[] charArray0 = new char[1];
      charArray0[0] = 'g';
      // Undeclared exception!
      try { 
        strBuilder4.getChars(10, 44, charArray0, (-3067));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 44
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceAll('X', 'X');
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance();
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Iterator) strTokenizer0, (String) null);
      StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("gcO{0qA\u0007*%=");
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("gcO{0qA\u0007*%=");
      int int0 = strBuilder0.lastIndexOf("", 0);
      StrBuilder strBuilder4 = strBuilder1.trim();
      // Undeclared exception!
      try { 
        strBuilder3.charAt(44);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 44
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      char char0 = 'W';
      StrBuilder strBuilder1 = strBuilder0.deleteAll('W');
      StrBuilder strBuilder2 = strBuilder1.append(strBuilder0);
      StrBuilder strBuilder3 = strBuilder0.clear();
      char char1 = ')';
      StrTokenizer strTokenizer0 = strBuilder2.asTokenizer();
      StrBuilder strBuilder4 = strBuilder0.replaceFirst("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter", (String) null);
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher(')');
      int int0 = (-2018);
      int int1 = strBuilder0.indexOf((StrMatcher) strMatcher_CharMatcher0, (-2018));
      // Undeclared exception!
      try { 
        strBuilder2.insert((-1), 'x');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      int int0 = (-701);
      StrBuilder strBuilder0 = new StrBuilder((-701));
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterMatcher(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "");
      String string0 = "BI";
      StrBuilder strBuilder3 = strBuilder0.appendWithSeparators((Collection) null, "BI");
      StringBuffer stringBuffer0 = new StringBuffer("YTPn`7Q(#wrAQ}]");
      // Undeclared exception!
      try { 
        strBuilder3.append(stringBuffer0, (-701), (-701));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder();
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) strBuilder1;
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) strBuilder1;
      String string0 = "=j(e+@Q\\~$j}n%xvc@";
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators(objectArray0, "=j(e+@Q~$j}n%xvc@");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      char[] charArray0 = new char[8];
      charArray0[0] = '!';
      charArray0[1] = 'l';
      charArray0[2] = 'x';
      char[] charArray1 = strBuilder2.toCharArray(2, 116);
      charArray0[3] = 'r';
      charArray0[4] = 'r';
      charArray0[5] = '9';
      charArray0[6] = '0';
      charArray0[7] = 'p';
      // Undeclared exception!
      try { 
        strMatcher0.isMatch(charArray0, 630, 630, 630);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Y@{>!#LjTFh0");
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrBuilder strBuilder2 = new StrBuilder();
      boolean boolean0 = strBuilder0.equals(strBuilder2);
      boolean boolean1 = strBuilder0.equalsIgnoreCase(strBuilder2);
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      StrBuilder strBuilder3 = strBuilder2.replaceFirst(strMatcher0, "");
      StrBuilder strBuilder4 = strBuilder3.append(0L);
      StrBuilder strBuilder5 = strBuilder4.append((char[]) null, (-1823), (-1823));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder3.new StrBuilderWriter();
      char[] charArray0 = new char[6];
      charArray0[0] = '#';
      charArray0[1] = 's';
      charArray0[2] = ')';
      charArray0[3] = '#';
      StrBuilder strBuilder6 = strBuilder3.appendFixedWidthPadRight(0, 0, '#');
      charArray0[4] = 'U';
      charArray0[5] = 'n';
      char char0 = strBuilder5.charAt(0);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 32, 690);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 690
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append("java.vendor");
      StrBuilder strBuilder2 = strBuilder0.clear();
      StrBuilder strBuilder3 = new StrBuilder();
      char[] charArray0 = strBuilder3.toCharArray(0, 0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = strBuilder_StrBuilderReader0.read(charBuffer0);
      strBuilder_StrBuilderReader0.close();
      StrBuilder strBuilder4 = new StrBuilder("java.vendor");
      StrBuilder strBuilder5 = strBuilder4.appendNewLine();
      StrBuilder strBuilder6 = strBuilder4.append(true);
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      int int1 = strBuilder6.lastIndexOf(strMatcher0);
      String string0 = strBuilder6.substring(0);
      int int2 = strBuilder3.lastIndexOf("java.vendor");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoredChar(',');
      String string1 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder strBuilder7 = strBuilder4.trim();
      StrBuilder strBuilder8 = strBuilder6.replaceAll("java.vendor\ntrue", "Invalid length: ");
      String string2 = strBuilder_StrBuilderTokenizer0.getContent();
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      StrBuilder strBuilder9 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read((char[]) null, 0, (-2017));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(true);
      StrBuilder strBuilder2 = strBuilder1.appendNewLine();
      StrBuilder strBuilder3 = strBuilder2.deleteFirst('?');
      StrBuilder strBuilder4 = strBuilder1.append('!');
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("");
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      StrBuilder strBuilder5 = strBuilder2.replace(strMatcher0, "", 5, 74, 0);
      String string0 = strBuilder4.leftString(Integer.MAX_VALUE);
      char[] charArray0 = new char[2];
      charArray0[0] = '!';
      charArray0[1] = '!';
      // Undeclared exception!
      try { 
        strBuilder0.getChars((-1288), (-1288), charArray0, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1288
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceAll('X', 'X');
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance();
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Iterator) strTokenizer0, (String) null);
      StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
      StrBuilder strBuilder4 = new StrBuilder("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder4.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrBuilder strBuilder5 = strBuilder0.deleteFirst(strMatcher0);
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("gcO{0qA\u0007*%=");
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher("gcO{0qA\u0007*%=");
      int int0 = strBuilder0.indexOf(strMatcher1, (-3846));
      int int1 = strBuilder0.lastIndexOf("", 0);
      int int2 = strBuilder0.capacity();
      StrBuilder strBuilder6 = strBuilder0.replace(0, 0, "");
      int int3 = strBuilder6.indexOf('X');
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append("java.vendor");
      StrBuilder strBuilder2 = strBuilder0.clear();
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder1);
      char[] charArray0 = strBuilder3.toCharArray(0, 0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = strBuilder_StrBuilderReader0.read(charBuffer0);
      strBuilder_StrBuilderReader0.close();
      StrBuilder strBuilder4 = strBuilder3.replace(0, 0, "java.vendor");
      StrBuilder strBuilder5 = strBuilder4.appendNewLine();
      StrBuilder strBuilder6 = strBuilder4.append(true);
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      int int1 = strBuilder6.lastIndexOf(strMatcher0);
      String string0 = strBuilder6.substring(0);
      int int2 = strBuilder3.lastIndexOf("java.vendor");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoredChar(',');
      String string1 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder strBuilder7 = strBuilder4.trim();
      StrBuilder strBuilder8 = strBuilder6.replaceAll("java.vendor\ntrue", "Invalid length: ");
      String string2 = strBuilder_StrBuilderTokenizer0.getContent();
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      StrBuilder strBuilder9 = strBuilder0.deleteFirst((StrMatcher) strMatcher_CharSetMatcher0);
      int int3 = strBuilder2.length();
      char[] charArray1 = strBuilder3.toCharArray();
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(44);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      strBuilder0.size = 44;
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance("fb/:%I/CF%`sFAPN");
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      boolean boolean0 = strBuilder_StrBuilderTokenizer0.hasNext();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder strBuilder1 = strBuilder0.insert(44, 44);
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("");
      int int0 = strBuilder0.indexOf(strMatcher0, 44);
      StrBuilder strBuilder2 = strBuilder0.clear();
      boolean boolean1 = strBuilder2.contains(strMatcher0);
      String string1 = strBuilder2.substring(0);
      StrBuilder strBuilder3 = strBuilder2.deleteAll('t');
      StrBuilder strBuilder4 = strBuilder2.appendNewLine();
      String string2 = strBuilder0.getNullText();
      StrBuilder strBuilder5 = new StrBuilder("fb/:%I/CF%`sFAPN");
      StrBuilder strBuilder6 = strBuilder4.append((Object) strBuilder5);
      StrBuilder strBuilder7 = strBuilder2.append(false);
      boolean boolean2 = strBuilder1.contains('n');
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("71GVB~PZFB_ DLo");
      char char0 = '7';
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('7');
      StrBuilder strBuilder2 = strBuilder1.appendNewLine();
      StrBuilder strBuilder3 = strBuilder0.minimizeCapacity();
      int int0 = 128;
      char char1 = 'R';
      // Undeclared exception!
      try { 
        strBuilder3.appendFixedWidthPadRight(128, 9, 'R');
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceAll('X', 'X');
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance();
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Iterator) strTokenizer0, (String) null);
      StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
      StrMatcher strMatcher0 = StrMatcher.stringMatcher((String) null);
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      int int0 = strBuilder0.indexOf(strMatcher0, (-3846));
      int int1 = strBuilder0.capacity();
      StrBuilder strBuilder4 = strBuilder0.replace(0, 0, "");
      StrBuilder strBuilder5 = strBuilder1.deleteFirst("");
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1531));
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      char[] charArray0 = new char[9];
      charArray0[0] = '>';
      charArray0[1] = 'Y';
      charArray0[2] = 'U';
      charArray0[3] = 'm';
      charArray0[4] = '-';
      charArray0[5] = 'Y';
      charArray0[6] = 'G';
      charArray0[7] = ';';
      charArray0[8] = '2';
      int int0 = strMatcher0.isMatch(charArray0, (-1531), (-1531), (-1531));
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("9mk2Vna%RGGJ{^;,2p!");
      StrMatcher strMatcher1 = StrMatcher.charMatcher('\"');
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(2975, 114, '\"');
      StrBuilder strBuilder2 = new StrBuilder("9mk2Vna%RGGJ{^;,2p!");
      StrBuilder strBuilder3 = strBuilder0.append((StringBuffer) null);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("K$C26]#I");
      StrBuilder strBuilder1 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrBuilder strBuilder2 = strBuilder0.replaceFirst(strMatcher0, "");
      String string0 = strBuilder2.toString();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset("K$C26]#I");
      StrBuilder strBuilder3 = strBuilder1.appendWithSeparators((Iterator) strTokenizer0, "K$C26]#I");
      StrTokenizer strTokenizer1 = strBuilder1.asTokenizer();
      StrBuilder strBuilder4 = strBuilder1.appendFixedWidthPadRight(102, 102, '`');
      String string1 = strBuilder4.substring(102, 102);
      StrBuilder strBuilder5 = strBuilder4.append(false);
      char[] charArray0 = new char[7];
      charArray0[0] = '`';
      charArray0[1] = '`';
      charArray0[2] = '`';
      charArray0[3] = '|';
      charArray0[4] = '`';
      charArray0[5] = '`';
      charArray0[6] = '`';
      StrBuilder strBuilder6 = strBuilder5.append(charArray0);
      boolean boolean0 = strBuilder0.equals((Object) strBuilder1);
      String string2 = strBuilder4.getNewLineText();
      boolean boolean1 = strBuilder1.equals(strBuilder4);
      StrBuilder strBuilder7 = strBuilder2.append((String) null);
      char[] charArray1 = new char[1];
      charArray1[0] = '`';
      // Undeclared exception!
      try { 
        strBuilder3.getChars(3, (-1), charArray1, 3);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[1];
      strBuilder_StrBuilderReader0.mark((-538));
      charArray0[0] = '0';
      int int0 = StrBuilder.CAPACITY;
      strBuilder_StrBuilderReader0.reset();
      StrBuilder strBuilder1 = new StrBuilder((String) null);
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrBuilder strBuilder2 = strBuilder1.deleteAll('-');
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("\"CI]oAb=C SQY");
      int int1 = 108;
      StrBuilder strBuilder3 = strBuilder1.replace(strMatcher0, (String) null, 0, 108, (-538));
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      StrBuilder strBuilder4 = strBuilder0.ensureCapacity((-538));
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder5 = new StrBuilder((String) null);
      boolean boolean1 = linkedList0.offerFirst(strBuilder5);
      StrBuilder strBuilder6 = strBuilder4.appendWithSeparators((Collection) linkedList0, (String) null);
      // Undeclared exception!
      try { 
        strBuilder2.insert(108, '#');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 108
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 2234;
      strBuilder0.size = 2234;
      char[] charArray0 = new char[9];
      charArray0[0] = 'c';
      charArray0[1] = 'm';
      charArray0[2] = 'R';
      charArray0[3] = '?';
      charArray0[4] = ',';
      charArray0[5] = '3';
      charArray0[6] = '|';
      charArray0[7] = '~';
      char char0 = 'A';
      charArray0[8] = 'A';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("");
      // Undeclared exception!
      try { 
        strBuilder0.lastIndexOf((StrMatcher) strMatcher_CharSetMatcher0, 2234);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.validateRange(0, 543);
      StrBuilder strBuilder1 = strBuilder0.append(0);
      StrBuilder strBuilder2 = strBuilder0.replaceAll("java.vm.specification.version", "java.vm.specification.version");
      StrBuilder strBuilder3 = strBuilder2.appendPadding(0, 'V');
      int int1 = (-1501);
      char char0 = 'k';
      char[] charArray0 = new char[9];
      charArray0[0] = 'k';
      charArray0[1] = 'k';
      charArray0[2] = 'K';
      charArray0[3] = 'V';
      charArray0[4] = 'Y';
      charArray0[5] = 'V';
      charArray0[6] = 'V';
      charArray0[7] = 'k';
      charArray0[8] = 'w';
      strBuilder0.buffer = charArray0;
      StrBuilder strBuilder4 = strBuilder2.appendFixedWidthPadRight((-1501), (-1501), 'k');
      strBuilder4.buffer = null;
      boolean boolean0 = strBuilder0.contains("t^$e7BMh7HNK}_iNft");
      // Undeclared exception!
      try { 
        strBuilder2.substring(0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      String string0 = "z.7Zoo`70Dzlx(hQi~=";
      StrBuilder strBuilder0 = new StrBuilder("z.7Zoo`70Dzlx(hQi~=");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      char[] charArray0 = new char[3];
      long long0 = strBuilder_StrBuilderReader0.skip(122);
      charArray0[0] = ' ';
      charArray0[1] = '~';
      Object object0 = new Object();
      strBuilder_StrBuilderReader0.mark((-390));
      StrBuilder strBuilder1 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder1.substring(122, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("%;!6}");
      StrBuilder strBuilder1 = new StrBuilder();
      StringBuffer stringBuffer0 = strBuilder1.toStringBuffer();
      StrBuilder strBuilder2 = strBuilder0.append((Object) strBuilder1);
      char[] charArray0 = new char[3];
      charArray0[0] = 's';
      charArray0[1] = 'q';
      charArray0[2] = 's';
      StrBuilder strBuilder3 = strBuilder2.append(charArray0);
      int int0 = strBuilder0.indexOf('s');
      StrBuilder strBuilder4 = new StrBuilder("ja]Lh?n>Tab");
      StrBuilder strBuilder5 = strBuilder2.appendFixedWidthPadLeft((Object) strBuilder4, (-1), 's');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      char[] charArray1 = new char[1];
      charArray1[0] = 's';
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset(charArray1);
      StrBuilder strBuilder6 = strBuilder1.appendWithSeparators((Iterator) strTokenizer0, "ja]Lh?n>Tab");
      StrBuilder strBuilder7 = strBuilder1.append("%;!6}");
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      String string0 = strBuilder0.toString();
      StrBuilder strBuilder1 = strBuilder0.insert(0, 1114);
      StrBuilder strBuilder2 = strBuilder1.append("");
      StrBuilder strBuilder3 = strBuilder1.deleteAll('p');
      int int0 = strBuilder1.size();
      char[] charArray0 = new char[6];
      charArray0[0] = 'p';
      charArray0[1] = 'p';
      charArray0[2] = 'p';
      charArray0[3] = 'p';
      charArray0[4] = 'p';
      charArray0[5] = 'p';
      char[] charArray1 = strBuilder1.getChars(charArray0);
      int int1 = strBuilder0.lastIndexOf("`", 0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.deleteAll('z');
      StrBuilder strBuilder2 = strBuilder1.append('\\');
      boolean boolean0 = strBuilder0.equals(strBuilder1);
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      char[] charArray0 = new char[7];
      StrMatcher strMatcher0 = StrMatcher.charMatcher('+');
      charArray0[0] = '(';
      charArray0[1] = 'z';
      charArray0[2] = 'z';
      charArray0[3] = 'z';
      charArray0[4] = 'z';
      charArray0[5] = 'z';
      charArray0[6] = 'z';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder3 = strBuilder0.replaceAll((StrMatcher) strMatcher_TrimMatcher0, "FKS5Nw[>GS|6`4");
      StrBuilder strBuilder4 = strBuilder0.append(strBuilder3, 0, 0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("u[T8`|");
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceAll((StrMatcher) strMatcher_TrimMatcher0, "u[T8`|");
      StrBuilder strBuilder2 = strBuilder0.minimizeCapacity();
      boolean boolean0 = strBuilder0.startsWith("u[T8`|");
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = new StringBuffer("Gc#2hZW8'DW");
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0, 0, 0);
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder2 = strBuilder0.append("java.vm.vendor");
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) "Gc#2hZW8'DW";
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) "Gc#2hZW8'DW";
      objectArray0[3] = (Object) strBuilder0;
      objectArray0[4] = (Object) stringBuffer0;
      objectArray0[5] = (Object) "java.vm.vendor";
      objectArray0[6] = (Object) stringBuffer0;
      objectArray0[7] = (Object) strBuilder1;
      objectArray0[8] = (Object) stringBuffer0;
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators(objectArray0, "+ Z@Sz6X?Ana8Si");
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      int int0 = 2746;
      int int1 = strBuilder0.lastIndexOf(", '", 2746);
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) ", '";
      objectArray0[1] = (Object) strBuilder0;
      StrBuilder strBuilder1 = strBuilder0.append(2);
      objectArray0[2] = (Object) ", '";
      int int2 = 97;
      String string0 = strBuilder0.leftString(97);
      objectArray0[3] = objectArray0[1];
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators(objectArray0, ", '");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.previous();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      char[] charArray0 = new char[8];
      charArray0[0] = '*';
      charArray0[1] = '2';
      String string0 = strBuilder0.midString((-896), 1065);
      charArray0[2] = 'z';
      charArray0[3] = '^';
      charArray0[4] = 'e';
      charArray0[5] = 'u';
      charArray0[6] = 'e';
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder0.indexOf(strMatcher0, 9);
      charArray0[7] = 'o';
      char[] charArray1 = strBuilder0.getChars(charArray0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "=}4zk";
      char[] charArray0 = new char[4];
      charArray0[0] = 'G';
      charArray0[1] = ',';
      charArray0[2] = 'm';
      charArray0[3] = 't';
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance(charArray0);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("=}4zk");
      boolean boolean0 = strBuilder0.isEmpty();
      int int0 = strBuilder0.indexOf("=}4zk");
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((-1), (-1011), 'L');
      String string1 = "";
      int int1 = (-1147);
      StrBuilder strBuilder3 = strBuilder1.minimizeCapacity();
      StrBuilder strBuilder4 = strBuilder2.deleteFirst('i');
      // Undeclared exception!
      try { 
        strBuilder1.append("", (-1147), 2156);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      int int0 = strBuilder0.validateRange(0, 0);
      StringBuffer stringBuffer0 = new StringBuffer("'?v");
      strBuilder0.validateIndex(0);
      StrBuilder strBuilder1 = strBuilder0.replaceAll("Invalid startIndex: ", "");
      StrBuilder strBuilder2 = strBuilder0.trim();
      StringBuffer stringBuffer1 = stringBuffer0.delete(0, 2502);
      StrBuilder strBuilder3 = strBuilder0.append(stringBuffer0);
      boolean boolean0 = strBuilder3.contains("");
      StrBuilder strBuilder4 = strBuilder3.insert(0, (long) 0);
      // Undeclared exception!
      try { 
        strBuilder0.insert(2502, (Object) "'?v");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2502
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Y@{>!#LjTFh0");
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrBuilder strBuilder2 = new StrBuilder();
      boolean boolean0 = strBuilder0.equals(strBuilder2);
      boolean boolean1 = strBuilder0.equalsIgnoreCase(strBuilder2);
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      StrBuilder strBuilder3 = strBuilder2.replaceFirst(strMatcher0, "");
      StrBuilder strBuilder4 = strBuilder3.append(0L);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder3.new StrBuilderWriter();
      char[] charArray0 = new char[6];
      charArray0[0] = '#';
      charArray0[1] = 's';
      charArray0[2] = ')';
      charArray0[3] = '#';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder5 = strBuilder3.appendFixedWidthPadRight(0, 0, '#');
      charArray0[4] = 'U';
      charArray0[5] = 'n';
      int int0 = strBuilder1.indexOf((String) null, (-1799));
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 32, 690);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 690
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(" ' ");
      boolean boolean0 = strBuilder0.endsWith("4.0");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      int int0 = strBuilder_StrBuilderTokenizer0.size();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder strBuilder1 = new StrBuilder(" ' ");
      boolean boolean1 = strBuilder0.equalsIgnoreCase(strBuilder1);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int1 = 101;
      // Undeclared exception!
      try { 
        strBuilder1.delete((-324), 101);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -324
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      List list0 = strBuilder_StrBuilderTokenizer0.getTokenList();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "");
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      Writer writer0 = strBuilder0.asWriter();
      char char0 = 'x';
      boolean boolean0 = strBuilder1.contains('x');
      StrBuilder strBuilder2 = strBuilder0.appendNull();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      int int0 = 115;
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.append((CharSequence) "", 179, 115);
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 1);
      StrBuilder strBuilder1 = strBuilder0.deleteAll('M');
      StrMatcher strMatcher1 = StrMatcher.charMatcher('M');
      StrBuilder strBuilder2 = strBuilder1.replaceFirst(strMatcher1, (String) null);
      // Undeclared exception!
      try { 
        strBuilder0.replace(5, 114, "org.apache.commons.lang.text.StrBuilder");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      String string0 = "7:t@$;Bw/ink+O\"";
      StrBuilder strBuilder0 = new StrBuilder("7:t@$;Bw/ink+O\"");
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      int int0 = 0;
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("");
      int int1 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_NoMatcher0, 0);
      int int2 = 101;
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex(101);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 101
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(":)BoJ-QDUSA1");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(":)BoJ-QDUSA1");
      char[] charArray0 = new char[3];
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) ":)BoJ-QDUSA1");
      int int0 = 0;
      strBuilder_StrBuilderWriter0.write(":)BoJ-QDUSA1", 0, 0);
      charArray0[0] = '\'';
      strBuilder_StrBuilderWriter0.write(":)BoJ-QDUSA1");
      charArray0[1] = 'S';
      charArray0[2] = '?';
      strBuilder_StrBuilderWriter0.write(charArray0);
      StrBuilder strBuilder1 = strBuilder0.append("org.apache.commons.lang.text.StrBuilder");
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("Invalid offset: ");
      // Undeclared exception!
      try { 
        strBuilder0.replaceAll(strMatcher0, "xnOmK(@1Cf}~c");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("L:N");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("L:N");
      StrBuilder strBuilder2 = strBuilder0.append(false);
      StrBuilder strBuilder3 = strBuilder1.setNullText("");
      // Undeclared exception!
      try { 
        strBuilder1.deleteCharAt((-860));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -860
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.leftString((-2109));
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('3', '3');
      boolean boolean0 = strBuilder0.isEmpty();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(0);
      strBuilder_StrBuilderWriter0.write((-2109));
      char[] charArray0 = new char[2];
      charArray0[0] = '3';
      String string1 = strBuilder0.leftString((-2109));
      charArray0[1] = '3';
      StrBuilder strBuilder2 = strBuilder0.append(charArray0);
      StrBuilder strBuilder3 = strBuilder1.append((double) 0);
      int int0 = strBuilder3.lastIndexOf('#', 0);
      int int1 = (-2326);
      // Undeclared exception!
      try { 
        strBuilder2.setLength((-2326));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2326
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-4615));
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder1 = strBuilder0.deleteAll("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      Writer writer0 = strBuilder1.asWriter();
      strBuilder_StrBuilderReader0.reset();
      int int0 = strBuilder0.capacity();
      int int1 = (-1014);
      strBuilder_StrBuilderReader0.mark((-4615));
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((Object) strBuilder_StrBuilderReader0, (-1014), '!');
      // Undeclared exception!
      try { 
        strBuilder0.replace(57, 32, "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("startIndex must be valid");
      int int0 = strBuilder0.indexOf((StrMatcher) strMatcher_TrimMatcher0, 3);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("#g%M~*VJHK-nSAuL[/");
      StrBuilder strBuilder1 = strBuilder0.deleteAll("#g%M~*VJHK-nSAuL[/");
      String string0 = strBuilder0.midString(3965, (-1652));
      StrBuilder strBuilder2 = strBuilder0.deleteFirst("#g%M~*VJHK-nSAuL[/");
      StrTokenizer strTokenizer0 = strBuilder2.asTokenizer();
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      String string1 = "";
      StrMatcher strMatcher1 = StrMatcher.doubleQuoteMatcher();
      StrMatcher strMatcher2 = StrMatcher.charMatcher('4');
      // Undeclared exception!
      try { 
        strBuilder0.replace(strMatcher1, "sunsT0=g,:%a.u", 2391, 3965, (-1652));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 39;
      strBuilder0.size = 39;
      int int1 = 251;
      // Undeclared exception!
      try { 
        strBuilder0.append(251);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[8];
      charArray0[0] = ']';
      charArray0[1] = 'k';
      charArray0[2] = 'n';
      charArray0[3] = 'v';
      charArray0[4] = '}';
      charArray0[5] = 'D';
      charArray0[6] = 'n';
      charArray0[7] = 'k';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0);
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      int int1 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.charAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.deleteAll('z');
      boolean boolean0 = strBuilder0.equals(strBuilder1);
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      char[] charArray0 = new char[7];
      StrMatcher strMatcher0 = StrMatcher.charMatcher('+');
      charArray0[0] = '(';
      charArray0[1] = 'z';
      charArray0[2] = 'z';
      charArray0[3] = 'z';
      charArray0[4] = 'z';
      charArray0[5] = 'z';
      charArray0[6] = 'z';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder2 = strBuilder0.replaceAll((StrMatcher) strMatcher_TrimMatcher0, "FKS5Nw[>GS|6`4");
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder2, 0, 0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      char char0 = 'H';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(119, 119, 'H');
      char char1 = 'g';
      StrBuilder strBuilder2 = strBuilder1.setCharAt(119, 'g');
      int int0 = 0;
      String string0 = strBuilder0.leftString(0);
      char char2 = 'r';
      // Undeclared exception!
      try { 
        strBuilder1.appendFixedWidthPadLeft((Object) null, 119, 'r');
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("user.timezone");
      StrBuilder strBuilder1 = strBuilder0.insert(5, ',');
      StrBuilder strBuilder2 = strBuilder1.clear();
      int int0 = strBuilder0.indexOf("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder3 = strBuilder2.appendPadding(5, '<');
      Reader reader0 = strBuilder2.asReader();
      boolean boolean0 = strBuilder0.contains("");
      StrBuilder strBuilder4 = strBuilder1.append('*');
      StrBuilder strBuilder5 = strBuilder4.insert(0, (String) null);
      boolean boolean1 = strBuilder2.contains(',');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      boolean boolean2 = strBuilder_StrBuilderReader0.markSupported();
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      int int1 = (-1824);
      String string0 = null;
      StrBuilder strBuilder1 = new StrBuilder();
      int int2 = 114;
      char[] charArray0 = new char[4];
      // Undeclared exception!
      try { 
        strBuilder1.insert(4323, (Object) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 4323
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.append((-791.0F));
      StrBuilder strBuilder2 = strBuilder0.setLength(0);
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder3 = strBuilder2.append(stringBuffer0, 0, 0);
      int int1 = (-2872);
      char char0 = 'o';
      StrBuilder strBuilder4 = strBuilder0.deleteAll('o');
      // Undeclared exception!
      try { 
        strBuilder0.insert((-2872), (float) 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2872
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      int int0 = (-152);
      StrBuilder strBuilder0 = new StrBuilder((-152));
      String string0 = strBuilder0.leftString(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.replaceFirst("", "");
      StrBuilder strBuilder3 = strBuilder1.insert(0, 0L);
      StringBuffer stringBuffer0 = new StringBuffer(0);
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 0, 34);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = new StrBuilder(0);
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher(":1ag_\"d;aAV= #p SQ");
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_StringMatcher0, 0);
      boolean boolean0 = strBuilder0.equals((Object) strBuilder1);
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("t'FoU");
      int int1 = strBuilder1.indexOf(strMatcher0, 0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[6];
      charArray0[0] = '%';
      charArray0[1] = 's';
      charArray0[2] = '{';
      charArray0[3] = 'd';
      char char0 = 'f';
      charArray0[4] = 'f';
      charArray0[5] = '4';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 187, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1081);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoreEmptyTokens(false);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "user.region");
      char[] charArray0 = new char[6];
      charArray0[0] = 'A';
      charArray0[1] = '\'';
      charArray0[2] = 'q';
      charArray0[3] = 'e';
      charArray0[4] = 'G';
      charArray0[5] = 'W';
      strBuilder1.buffer = charArray0;
      StrTokenizer strTokenizer1 = strBuilder_StrBuilderTokenizer0.setEmptyTokenAsNull(false);
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      boolean boolean0 = strBuilder0.equals(object0);
      int int0 = strBuilder0.indexOf("", 1081);
      char[] charArray1 = strBuilder0.toCharArray();
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append("");
      int int0 = strBuilder0.lastIndexOf("TO", (-929));
      Reader reader0 = strBuilder0.asReader();
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.appendPadding((-1), 'L');
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("");
      int int0 = strBuilder1.lastIndexOf(strMatcher0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(4808);
      StrBuilder strBuilder2 = strBuilder1.deleteAll("");
      int int1 = strBuilder0.indexOf('L');
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadLeft((Object) strMatcher0, (-1), 'p');
      StrBuilder strBuilder4 = strBuilder0.append(344.70236F);
      StrBuilder strBuilder5 = strBuilder0.append(strBuilder2, 0, 0);
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) strBuilder3;
      objectArray0[1] = (Object) strBuilder1;
      objectArray0[2] = (Object) strBuilder_StrBuilderReader0;
      objectArray0[3] = (Object) strBuilder2;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      objectArray0[4] = object0;
      objectArray0[5] = (Object) strBuilder_StrBuilderReader0;
      objectArray0[6] = (Object) strBuilder4;
      Object object1 = strBuilder_StrBuilderTokenizer0.next();
      objectArray0[7] = (Object) "344.70236";
      objectArray0[8] = (Object) strMatcher1;
      StrBuilder strBuilder6 = strBuilder0.appendWithSeparators(objectArray0, "");
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("jcI");
      String string0 = "org.apache.commons.lang.SystemUtils";
      StrBuilder strBuilder1 = strBuilder0.replaceAll("6?PQ4", "org.apache.commons.lang.SystemUtils");
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      int int0 = strBuilder1.lastIndexOf(strMatcher0, (-1814));
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("6?PQ4");
      int int1 = (-2448);
      strBuilder1.size = (-2448);
      // Undeclared exception!
      try { 
        strBuilder0.appendNewLine();
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Eob(iqH.S!N*4L^gPB");
      String string0 = strBuilder0.toString();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(841);
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) "Eob(iqH.S!N*4L^gPB");
      char[] charArray0 = new char[0];
      strBuilder_StrBuilderWriter0.write(charArray0);
      int int0 = (-1);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1), 3261L);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      String string0 = "";
      StrBuilder strBuilder2 = strBuilder0.replaceAll((StrMatcher) null, "Hp)!m1b7\"4yKX");
      boolean boolean0 = strBuilder0.endsWith("");
      char char0 = 'y';
      // Undeclared exception!
      try { 
        strBuilder0.insert((-2063), 'y');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2063
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.reverse();
      // Undeclared exception!
      try { 
        strBuilder0.insert(759, 3127.883248);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 759
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      String string0 = "wc BK#,{< [z";
      StrBuilder strBuilder0 = new StrBuilder("wc BK#,{< [z");
      int int0 = strBuilder0.hashCode();
      StrBuilder strBuilder1 = strBuilder0.replaceAll("wc BK#,{< [z", "wc BK#,{< [z");
      int int1 = (-35);
      // Undeclared exception!
      try { 
        strBuilder0.append("wc BK#,{< [z", 2, (-35));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.toString();
      int int0 = 1499;
      // Undeclared exception!
      try { 
        strBuilder0.charAt(1499);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1499
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[4];
      charArray0[0] = '';
      charArray0[1] = 'W';
      charArray0[2] = '7';
      charArray0[3] = '4';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, (-159), (-159));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-292);
      StrBuilder strBuilder1 = new StrBuilder((-292));
      int int1 = 0;
      StrMatcher strMatcher0 = null;
      int int2 = 0;
      int int3 = strBuilder0.lastIndexOf((StrMatcher) null, 0);
      String string0 = "java.vm.specification.version";
      // Undeclared exception!
      try { 
        strBuilder1.replace(632, 632, "java.vm.specification.version");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) null, "y1'i$(9k8y8Km=7h");
      StrBuilder strBuilder2 = strBuilder1.append((Object) strBuilder_StrBuilderReader0);
      int int0 = strBuilder0.indexOf('|', 0);
      StrBuilder strBuilder3 = strBuilder1.append((Object) "y1'i$(9k8y8Km=7h");
      StrBuilder strBuilder4 = strBuilder0.append((long) 0);
      char[] charArray0 = new char[4];
      charArray0[0] = 'C';
      charArray0[1] = '|';
      charArray0[2] = 'W';
      charArray0[3] = '|';
      // Undeclared exception!
      try { 
        strBuilder4.insert((-1), charArray0, (-1), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) null, "y1'i$(9k8y8Km=7h");
      StrBuilder strBuilder2 = strBuilder1.append((Object) strBuilder_StrBuilderReader0);
      int int0 = strBuilder0.indexOf('|', 0);
      StrBuilder strBuilder3 = strBuilder1.append((Object) "y1'i$(9k8y8Km=7h");
      StrBuilder strBuilder4 = strBuilder0.append((long) 0);
      char[] charArray0 = new char[4];
      charArray0[0] = '|';
      charArray0[1] = '|';
      charArray0[2] = 'W';
      charArray0[3] = '|';
      // Undeclared exception!
      try { 
        strBuilder4.insert((-1), charArray0, (-1), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[1];
      Reader reader0 = strBuilder0.asReader();
      char char0 = 'q';
      charArray0[0] = 'q';
      StrBuilder strBuilder1 = strBuilder0.insert(0, charArray0);
      StrBuilder strBuilder2 = strBuilder1.replaceFirst((String) null, (String) null);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(0);
      StrBuilder strBuilder3 = strBuilder0.append((-1L));
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('q');
      int int1 = strBuilder3.lastIndexOf((StrMatcher) strMatcher_CharMatcher0);
      int int2 = (-4036);
      int int3 = 4;
      // Undeclared exception!
      try { 
        strBuilder0.substring(4, 347);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.replaceAll("", "U)m/GOz4%");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      int int0 = (-884);
      StrBuilder strBuilder2 = new StrBuilder((-884));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.nextToken();
      char[] charArray0 = new char[5];
      charArray0[0] = '^';
      charArray0[1] = 'J';
      charArray0[2] = 'g';
      charArray0[3] = 'm';
      charArray0[4] = '|';
      // Undeclared exception!
      try { 
        strBuilder1.insert((-884), charArray0, 0, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -884
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      String string0 = "%}nF,B2z/`bGY)XS";
      StrBuilder strBuilder0 = new StrBuilder("%}nF,B2z/`bGY)XS");
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.deleteAll(strMatcher0);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      int int0 = (-2670);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-2670), "%}nF,B2z/`bGY)XS");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2670
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.size();
      int int1 = (-734);
      StrBuilder strBuilder1 = new StrBuilder((-734));
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, 0, (-734));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "java.vendor");
      StrBuilder strBuilder2 = strBuilder0.setNullText("java.vendor");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      int int0 = strBuilder1.lastIndexOf(strMatcher0);
      StrBuilder strBuilder3 = strBuilder1.replace(0, 0, "java.vendor");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      int int1 = strBuilder_StrBuilderReader0.read();
      StrBuilder strBuilder4 = strBuilder2.replaceAll(',', 'O');
      StrBuilder strBuilder5 = strBuilder1.replaceAll(strMatcher0, "java.vendor");
      int int2 = strBuilder_StrBuilderReader0.read();
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Aw#");
      int int0 = Integer.MAX_VALUE;
      char char0 = 'g';
      // Undeclared exception!
      try { 
        strBuilder0.appendPadding(Integer.MAX_VALUE, 'g');
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 35
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("JFn?BM\u0000");
      // Undeclared exception!
      try { 
        strBuilder1.insert((-715), (Object) "JFn?BM\u0000");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -715
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(114);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(114);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 114
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(4);
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      char[] charArray0 = new char[6];
      charArray0[0] = 'p';
      charArray0[1] = '.';
      charArray0[2] = '9';
      charArray0[3] = 'c';
      charArray0[4] = 'B';
      charArray0[5] = 'v';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder0.indexOf((StrMatcher) strMatcher_NoMatcher0);
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder1.append((double) 4);
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      StrBuilder strBuilder3 = strBuilder2.append('A');
      // Undeclared exception!
      try { 
        strBuilder3.append(strBuilder0, 4, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("aM5HRNin'Zkk");
      StrBuilder strBuilder1 = strBuilder0.append(false);
      int int0 = 108;
      // Undeclared exception!
      try { 
        strBuilder1.deleteCharAt(108);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 108
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrBuilder strBuilder2 = strBuilder1.setLength(0);
      StrBuilder strBuilder3 = strBuilder2.replaceAll((String) null, (String) null);
      String string0 = strBuilder0.substring(0, 57);
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder4 = strBuilder0.deleteAll((StrMatcher) strMatcher_TrimMatcher0);
      char[] charArray0 = new char[4];
      charArray0[0] = 'g';
      charArray0[1] = 'M';
      charArray0[2] = '.';
      String string1 = strBuilder4.substring(0);
      StrBuilder strBuilder5 = strBuilder0.append(0.0);
      charArray0[3] = '0';
      StrBuilder strBuilder6 = strBuilder0.insert(1, charArray0, 0, 0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder6.new StrBuilderTokenizer();
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 0, 4);
      String string2 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder strBuilder7 = strBuilder4.appendFixedWidthPadLeft(1, 1, '0');
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(119);
      char[] charArray0 = new char[7];
      charArray0[0] = '=';
      charArray0[1] = 'e';
      charArray0[2] = '\\';
      charArray0[3] = ' ';
      charArray0[4] = 'E';
      charArray0[5] = 'O';
      charArray0[6] = '<';
      // Undeclared exception!
      try { 
        strBuilder0.insert(119, charArray0, 119, (-816));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 119
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("zZ-V:&");
      int int0 = strBuilder0.lastIndexOf("zZ-V:&", 0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      char[] charArray0 = new char[5];
      charArray0[0] = 'n';
      charArray0[1] = 'X';
      charArray0[2] = '?';
      charArray0[3] = '~';
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("");
      charArray0[4] = '<';
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "zZ-V:&");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Collection) linkedList0, "f'FxFylzc~z-KD");
      StrBuilder strBuilder3 = strBuilder1.delete(0, 0);
      StrBuilder strBuilder4 = strBuilder3.replaceFirst("zZ-V:&", "'; the SystemUtils property value will default to null.");
      StrBuilder strBuilder5 = strBuilder3.insert(0, (-2301.68));
      // Undeclared exception!
      try { 
        strBuilder1.substring(972);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      StrBuilder strBuilder1 = strBuilder0.append((String) null, 0, 0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrBuilder strBuilder2 = strBuilder1.append((-596));
      StrBuilder strBuilder3 = strBuilder0.reverse();
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Y@{>!#LjTFh0");
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrBuilder strBuilder2 = new StrBuilder();
      boolean boolean0 = strBuilder0.equals(strBuilder2);
      boolean boolean1 = strBuilder0.equalsIgnoreCase(strBuilder2);
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      StrBuilder strBuilder3 = strBuilder2.replaceFirst(strMatcher0, "");
      StrBuilder strBuilder4 = strBuilder3.append(0L);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder3.new StrBuilderWriter();
      char[] charArray0 = new char[6];
      charArray0[0] = '#';
      charArray0[1] = 's';
      charArray0[2] = ')';
      charArray0[3] = '#';
      StrBuilder strBuilder5 = strBuilder3.appendFixedWidthPadRight(0, 0, '#');
      charArray0[4] = 'U';
      charArray0[5] = 'n';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 32, 690);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 690
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      int int0 = (-1);
      char char0 = 'M';
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder((-1));
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      StrBuilder strBuilder2 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder2.validateRange((-1), (-1941));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      // Undeclared exception!
      try { 
        strBuilder0.delete(39, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(0L);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("S8~UF");
      int int0 = strBuilder0.lastIndexOf('A');
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = strBuilder0.toString();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      int int1 = 0;
      String string1 = strBuilder0.substring(0);
      Writer writer0 = strBuilder0.asWriter();
      int int2 = (-1);
      char char0 = 'E';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((-1), 0, 'E');
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.next();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      String string0 = "iv0d<Y'F";
      StrBuilder strBuilder0 = new StrBuilder("iv0d<Y'F");
      char char0 = '6';
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder1.minimizeCapacity();
      // Undeclared exception!
      try { 
        strBuilder2.insert((-1558), (-1834.2891F));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1558
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "=}4zk";
      char[] charArray0 = new char[4];
      charArray0[0] = 'G';
      charArray0[1] = ',';
      charArray0[2] = 'm';
      charArray0[3] = 't';
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance(charArray0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "=}4zk");
      StrBuilder strBuilder2 = strBuilder0.deleteFirst("=}4zk");
      boolean boolean0 = strBuilder0.isEmpty();
      int int0 = strBuilder0.indexOf("=}4zk");
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadLeft((-1), (-1011), 'L');
      String string1 = "";
      int int1 = (-1147);
      StrBuilder strBuilder4 = strBuilder3.deleteFirst('i');
      // Undeclared exception!
      try { 
        strBuilder2.append("", (-1147), 2156);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1918);
      boolean boolean0 = strBuilder0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Reader reader0 = strBuilder0.asReader();
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder strBuilder1 = strBuilder0.appendPadding(97, '/');
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft(97, (-85), '/');
      int int0 = strBuilder1.indexOf("p.mI4t6rN");
      StrBuilder strBuilder3 = strBuilder1.appendNull();
      StrBuilder strBuilder4 = strBuilder3.deleteAll("I-5");
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      String string0 = "`,;<m HBE#Yx)k";
      StrBuilder strBuilder0 = new StrBuilder("`,;<m HBE#Yx)k");
      StrBuilder strBuilder1 = strBuilder0.append("`,;<m HBE#Yx)k");
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft((Object) strBuilder0, 0, ' ');
      int int0 = strBuilder1.lastIndexOf(strMatcher0);
      StrBuilder strBuilder3 = strBuilder1.append('g');
      // Undeclared exception!
      try { 
        strBuilder0.validateRange((-1), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.replace(5, 5, "?=+G b1*A");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(48);
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(48);
      StrBuilder strBuilder2 = strBuilder1.setNullText((String) null);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[8];
      charArray0[0] = '1';
      charArray0[1] = ':';
      charArray0[2] = 'j';
      charArray0[3] = '&';
      charArray0[4] = 't';
      charArray0[5] = '[';
      charArray0[6] = 'd';
      charArray0[7] = 'K';
      int int0 = 32;
      int int1 = 2009;
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 32, 2009);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 2009
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      String string0 = "z.7Zoo`70Dzlx(hQi~=";
      StrBuilder strBuilder0 = new StrBuilder("z.7Zoo`70Dzlx(hQi~=");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      strBuilder_StrBuilderReader0.reset();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      char[] charArray0 = new char[3];
      charArray0[0] = ' ';
      charArray0[1] = '~';
      Object object0 = new Object();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(object0, 5, 'P');
      charArray0[2] = 'c';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(122, 122, charArray0, 3327);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 122
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1123);
      int int0 = 0;
      int int1 = 9;
      StrBuilder strBuilder1 = strBuilder0.append(9);
      StrBuilder strBuilder2 = strBuilder0.append("~4r]bjhD&m;X&Q");
      StrBuilder strBuilder3 = strBuilder2.append(false);
      StrBuilder strBuilder4 = strBuilder0.insert(0, true);
      StrBuilder strBuilder5 = strBuilder0.replaceAll("", "");
      // Undeclared exception!
      try { 
        strBuilder0.getChars(0, 0, (char[]) null, 0);
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      String string0 = "C-H5}J1}";
      StrBuilder strBuilder0 = new StrBuilder("C-H5}J1}");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[2];
      char char0 = 'D';
      strBuilder_StrBuilderWriter0.write("C-H5}J1}");
      int int0 = 881;
      int int1 = strBuilder0.validateRange(0, 881);
      StringBuffer stringBuffer0 = new StringBuffer();
      strBuilder_StrBuilderWriter0.write("C-H5}J1}");
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 881, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[5];
      charArray0[0] = '\"';
      charArray0[1] = '*';
      charArray0[2] = 'U';
      charArray0[3] = 'G';
      charArray0[4] = '$';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.replaceAll((StrMatcher) strMatcher_CharSetMatcher0, "");
      boolean boolean0 = strBuilder0.startsWith("w");
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder strBuilder1 = strBuilder0.append("");
      StrBuilder strBuilder2 = strBuilder0.deleteFirst((String) null);
      StrBuilder strBuilder3 = new StrBuilder("YY");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder3.new StrBuilderReader();
      char[] charArray0 = new char[9];
      charArray0[0] = 'L';
      charArray0[1] = 't';
      charArray0[2] = '\'';
      charArray0[3] = '$';
      charArray0[4] = 'o';
      charArray0[5] = '+';
      charArray0[6] = '';
      charArray0[7] = '[';
      charArray0[8] = 'u';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0, 0, 5);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceAll("", "=I}f-S");
      String string0 = strBuilder0.getNullText();
      StrBuilder strBuilder2 = strBuilder0.trim();
      StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(972);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      char[] charArray0 = new char[4];
      charArray0[0] = '5';
      charArray0[1] = '^';
      charArray0[2] = 'F';
      charArray0[3] = 'S';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StrBuilder strBuilder2 = strBuilder0.setLength(1091);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "-V>7}-%Uy";
      StrBuilder strBuilder1 = strBuilder0.setNullText("-V>7}-%Uy");
      StrBuilder strBuilder2 = strBuilder0.clear();
      StrBuilder strBuilder3 = strBuilder2.clear();
      StrBuilder strBuilder4 = strBuilder2.setNullText("-V>7}-%Uy");
      StrBuilder strBuilder5 = strBuilder2.append(0.0F);
      String string1 = strBuilder1.rightString(3153);
      int int0 = strBuilder2.indexOf('e');
      StrBuilder strBuilder6 = strBuilder2.append((float) 3153);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder3.new StrBuilderReader();
      int int1 = strBuilder_StrBuilderReader0.read();
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      int int2 = strBuilder0.lastIndexOf(strMatcher0, (-1));
      Object[] objectArray0 = new Object[0];
      StrBuilder strBuilder7 = strBuilder6.appendWithSeparators(objectArray0, "{R)Iqp}+}a4z3|");
      char[] charArray0 = new char[8];
      charArray0[0] = 'e';
      charArray0[1] = 'e';
      charArray0[2] = 'e';
      charArray0[3] = 'e';
      charArray0[4] = 'e';
      charArray0[5] = 'e';
      charArray0[6] = 'e';
      charArray0[7] = 'e';
      // Undeclared exception!
      try { 
        strBuilder6.getChars(0, (-1911), charArray0, 1009);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1911
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[8];
      charArray0[0] = '@';
      charArray0[1] = 'h';
      charArray0[2] = 'G';
      charArray0[3] = 'Y';
      charArray0[4] = 'A';
      charArray0[5] = 'o';
      charArray0[6] = '.';
      charArray0[7] = '5';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(0, (-903), charArray0, (-903));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -903
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("user.country");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      char[] charArray0 = new char[3];
      charArray0[0] = '~';
      charArray0[1] = '.';
      charArray0[2] = 'O';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(0, 32, charArray0, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      boolean boolean0 = strBuilder0.contains((StrMatcher) null);
      int int0 = strBuilder0.capacity();
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("StrTokenizer[not tokenized yet]");
      StrBuilder strBuilder2 = strBuilder0.deleteAll((StrMatcher) strMatcher_StringMatcher0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2);
      int int0 = strBuilder0.indexOf('y', 2);
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) strBuilder1;
      objectArray0[1] = (Object) strBuilder0;
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators(objectArray0, "");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      char[] charArray0 = new char[4];
      charArray0[0] = 'y';
      charArray0[1] = 'y';
      charArray0[2] = 'y';
      charArray0[3] = 'y';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 1957, 0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2563));
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      // Undeclared exception!
      try { 
        strBuilder0.append("path.separator", 1908, (-2563));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      int int0 = 1991;
      StrBuilder strBuilder0 = new StrBuilder(1991);
      String string0 = strBuilder0.toString();
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      StrBuilder strBuilder2 = strBuilder0.append((long) 1991);
      StrBuilder strBuilder3 = strBuilder0.append('\"');
      // Undeclared exception!
      try { 
        strBuilder3.substring(1991, Integer.MAX_VALUE);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(117);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('(');
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setEmptyTokenAsNull(false);
      StrTokenizer strTokenizer1 = strBuilder_StrBuilderTokenizer0.setTrimmerMatcher(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strBuilder_StrBuilderTokenizer0, (String) null);
      char[] charArray0 = strBuilder0.toCharArray();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(4112);
      int int0 = strBuilder0.length();
      StrBuilder strBuilder2 = strBuilder1.append((float) 4112);
      StrBuilder strBuilder3 = strBuilder0.replaceFirst((String) null, "OtVLGugfE]]6H9E=B");
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = "\\&M=Gb **.| M<*[*L";
      StrBuilder strBuilder1 = strBuilder0.insert(0, "&M=Gb **.| M<*[*L");
      StrBuilder strBuilder2 = strBuilder0.minimizeCapacity();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      StrBuilder strBuilder3 = strBuilder1.trim();
      StrBuilder strBuilder4 = strBuilder3.setCharAt(0, '');
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("Fh8 |\"1gg{iZ7`", 1602, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[1];
      StrBuilder strBuilder1 = strBuilder0.append(true);
      char char0 = 'P';
      charArray0[0] = 'P';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 1403, 1403);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2795));
      String string0 = strBuilder0.getNewLineText();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("ban:nT.`C.PN ");
      StrBuilder strBuilder1 = strBuilder0.replaceAll('g', 'H');
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = 421;
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex(421);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 421
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("N+*btm^K>w(tI");
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      char[] charArray0 = new char[4];
      charArray0[0] = 'n';
      charArray0[1] = 'f';
      charArray0[2] = '$';
      charArray0[3] = '?';
      strBuilder1.buffer = charArray0;
      // Undeclared exception!
      try { 
        strBuilder0.append(false);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("o");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) "o", 102, 'a');
      char[] charArray0 = new char[0];
      StrBuilder strBuilder2 = strBuilder1.insert(102, charArray0);
      StrBuilder strBuilder3 = strBuilder2.deleteAll("o");
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      char[] charArray1 = new char[9];
      charArray1[0] = 'v';
      charArray1[1] = 'a';
      charArray1[2] = 'a';
      charArray1[3] = 'a';
      charArray1[4] = 'a';
      charArray1[5] = 'a';
      charArray1[6] = 'a';
      charArray1[7] = 'a';
      charArray1[8] = 'a';
      int int0 = (-2694);
      // Undeclared exception!
      try { 
        strMatcher0.isMatch(charArray1, 102, (-2694), 102);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1674);
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      char[] charArray0 = new char[1];
      charArray0[0] = '@';
      StrBuilder strBuilder1 = strBuilder0.insert(0, charArray0);
      int int0 = 0;
      StrBuilder strBuilder2 = strBuilder0.appendPadding(0, 'H');
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators((Iterator) strTokenizer0, "StrTokenizer[not tokenized yet]");
      StrBuilder strBuilder4 = strBuilder3.append((Object) strBuilder0);
      StrBuilder strBuilder5 = strBuilder0.insert(0, 0);
      StrBuilder strBuilder6 = strBuilder5.append('@');
      StrBuilder strBuilder7 = strBuilder2.insert(0, "");
      StrBuilder strBuilder8 = strBuilder0.deleteCharAt(0);
      StrBuilder strBuilder9 = strBuilder8.insert(0, (double) 1674);
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("");
      int int1 = strBuilder1.lastIndexOf(strMatcher0, (-368));
      String string0 = strBuilder5.rightString(4009);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.previous();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt((-2234));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2234
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceAll('X', 'X');
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance();
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Iterator) strTokenizer0, (String) null);
      StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("gcO{0qA\u0007*%=");
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("gcO{0qA\u0007*%=");
      int int0 = strBuilder0.indexOf(strMatcher0, (-3846));
      int int1 = strBuilder0.lastIndexOf("", 0);
      int int2 = strBuilder0.capacity();
      StrBuilder strBuilder4 = strBuilder0.replace(0, 0, "");
      int int3 = strBuilder4.indexOf('X');
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("/zA:MtFJb@aF\"&<M~");
      int int0 = strBuilder0.capacity();
      Writer writer0 = strBuilder0.asWriter();
      int int1 = (-2075);
      char[] charArray0 = new char[6];
      charArray0[0] = ':';
      charArray0[1] = '6';
      charArray0[2] = '1';
      // Undeclared exception!
      try { 
        strBuilder0.insert(32, 32);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.append((Object) "");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      int int0 = strBuilder0.indexOf('3');
      StringBuffer stringBuffer0 = null;
      try {
        stringBuffer0 = new StringBuffer((-1));
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(4);
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('<', '$');
      char[] charArray0 = new char[7];
      charArray0[0] = '<';
      charArray0[1] = '<';
      charArray0[2] = '<';
      charArray0[3] = '$';
      charArray0[4] = '<';
      charArray0[5] = '$';
      charArray0[6] = '$';
      strBuilder1.buffer = charArray0;
      StrBuilder strBuilder2 = strBuilder0.replaceFirst("s$f&xY2ZI|", "");
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = new StrBuilder(0);
      boolean boolean0 = strBuilder0.equals(strBuilder1);
      Writer writer0 = strBuilder0.asWriter();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Collection) linkedList0, "");
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrBuilder strBuilder3 = strBuilder0.replaceFirst(strMatcher0, "1d4azX/[n)=Hu?L");
      StrBuilder strBuilder4 = strBuilder0.replaceAll(strMatcher0, "");
      StrBuilder strBuilder5 = strBuilder1.insert(0, "");
      StrBuilder strBuilder6 = strBuilder1.insert(0, (long) 0);
      int int0 = strBuilder4.indexOf(':');
      int int1 = strBuilder0.indexOf(']', (-1));
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) strBuilder1;
      StrBuilder strBuilder7 = strBuilder5.appendWithSeparators(objectArray0, "");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder5.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(34);
      LinkedList<String> linkedList1 = new LinkedList<String>();
      boolean boolean1 = linkedList1.add("");
      StrBuilder strBuilder8 = strBuilder5.appendWithSeparators((Collection) linkedList1, "");
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('w');
      StrBuilder strBuilder2 = strBuilder1.clear();
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) strBuilder2;
      objectArray0[1] = (Object) null;
      objectArray0[2] = (Object) strBuilder2;
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators(objectArray0, "");
      StrBuilder strBuilder4 = strBuilder0.replaceFirst((StrMatcher) null, "mZ*$CE!q'V#BfF:qI^");
      int int0 = strBuilder4.indexOf((StrMatcher) null, (-2092));
      StrBuilder strBuilder5 = strBuilder0.ensureCapacity(315);
      int int1 = strBuilder0.size();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
      StrBuilder strBuilder6 = strBuilder4.replaceFirst('w', 'f');
      // Undeclared exception!
      try { 
        strBuilder6.insert((-1), (String) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      boolean boolean0 = strBuilder0.endsWith("length must be valid");
      char[] charArray0 = new char[3];
      charArray0[0] = '1';
      charArray0[1] = '4';
      charArray0[2] = '.';
      char[] charArray1 = strBuilder0.getChars(charArray0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(object0, 57, '4');
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = "";
      StrBuilder strBuilder1 = strBuilder0.append((Object) "");
      int int1 = 0;
      StrBuilder strBuilder2 = strBuilder1.insert(0, 0);
      StrBuilder strBuilder3 = strBuilder0.insert(0, (long) 0);
      String string1 = "aefQK/x+EVpq~j%";
      StrMatcher strMatcher0 = null;
      String string2 = "";
      int int2 = (-630);
      // Undeclared exception!
      try { 
        strBuilder3.insert((-630), (long) (-630));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -630
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setNewLineText((String) null);
      StrBuilder strBuilder2 = strBuilder0.setNewLineText("org.apache.commons.lang.text.StrMatcher$StringMatcher");
      StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
      int int0 = 3265;
      // Undeclared exception!
      try { 
        strBuilder0.insert(3265, (double) 3265);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3265
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 97;
      StrBuilder strBuilder1 = strBuilder0.clear();
      // Undeclared exception!
      try { 
        strBuilder0.insert(97, 97);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 97
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder(0);
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1, 0, 0);
      StrBuilder strBuilder3 = strBuilder1.append(strBuilder2);
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      int int0 = strBuilder3.indexOf(strMatcher0, 0);
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('e');
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("user.name");
      boolean boolean0 = strBuilder2.contains((StrMatcher) strMatcher_CharMatcher0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(1L);
      StrBuilder strBuilder4 = strBuilder0.replaceFirst("", "java.awt.graphicsenv");
      int int1 = strBuilder_StrBuilderReader0.read();
      int int2 = strBuilder1.lastIndexOf('e', 44);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      int int0 = 32;
      StrBuilder strBuilder0 = new StrBuilder(32);
      StrBuilder strBuilder1 = new StrBuilder((String) null);
      StrBuilder strBuilder2 = strBuilder1.append(32);
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, 32, 32);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      int int0 = (-1803);
      StrBuilder strBuilder0 = new StrBuilder((-1803));
      StrBuilder strBuilder1 = strBuilder0.append('~');
      int int1 = strBuilder0.capacity();
      String string0 = strBuilder0.leftString(32);
      StrBuilder strBuilder2 = strBuilder0.insert(0, (long) 0);
      char[] charArray0 = new char[3];
      charArray0[0] = '~';
      charArray0[1] = '~';
      charArray0[2] = '~';
      strBuilder2.buffer = charArray0;
      StrBuilder strBuilder3 = strBuilder2.append((-1803));
      StrBuilder strBuilder4 = strBuilder1.appendNewLine();
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(strBuilder2.buffer);
      boolean boolean0 = strBuilder4.contains(strMatcher0);
      StringBuffer stringBuffer0 = new StringBuffer(295);
      StringBuffer stringBuffer1 = stringBuffer0.append('$');
      // Undeclared exception!
      try { 
        strBuilder1.append(stringBuffer0, (-4202), 32);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      String string0 = "hK )eijI,";
      StrBuilder strBuilder0 = new StrBuilder("hK )eijI,");
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, (-1911), (-1911));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(176);
      int int0 = strBuilder0.lastIndexOf("user.timezone");
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      char[] charArray0 = new char[3];
      charArray0[0] = '6';
      charArray0[1] = 't';
      charArray0[2] = '/';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setQuoteMatcher(strMatcher_CharSetMatcher0);
      StrBuilder strBuilder3 = strBuilder2.append("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter", 0, 48);
      boolean boolean0 = strBuilder_StrBuilderTokenizer0.hasNext();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.previous();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.validateRange(0, 543);
      StrBuilder strBuilder1 = strBuilder0.replaceAll("java.vm.specification.version", "java.vm.specification.version");
      StrBuilder strBuilder2 = strBuilder1.appendPadding(0, 'V');
      char[] charArray0 = new char[9];
      charArray0[0] = 'k';
      charArray0[1] = 'k';
      charArray0[2] = 'B';
      charArray0[3] = 'V';
      charArray0[4] = 'Y';
      charArray0[5] = 'V';
      charArray0[6] = 'V';
      charArray0[7] = 'k';
      charArray0[8] = 'w';
      strBuilder0.buffer = charArray0;
      StrBuilder strBuilder3 = strBuilder1.appendFixedWidthPadRight((-1501), (-1501), 'k');
      boolean boolean0 = strBuilder0.contains("t^$e7BMh7HNK}_iNft");
      String string0 = strBuilder1.substring(0);
      StrBuilder strBuilder4 = strBuilder0.appendPadding((-1501), 'k');
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      int int0 = (-957);
      StrBuilder strBuilder0 = new StrBuilder((-957));
      char char0 = '3';
      StrBuilder strBuilder1 = strBuilder0.deleteAll('3');
      char[] charArray0 = new char[5];
      charArray0[0] = '3';
      charArray0[1] = '3';
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight((Object) strBuilder0, (-957), '3');
      // Undeclared exception!
      try { 
        strBuilder0.validateRange((-957), (-957));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -957
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.validateIndex(0);
      Writer writer0 = strBuilder0.asWriter();
      char char0 = '\'';
      StrBuilder strBuilder1 = strBuilder0.appendPadding(0, '\'');
      StrMatcher strMatcher0 = null;
      StrBuilder strBuilder2 = strBuilder1.replace((StrMatcher) null, "D9u[}z+pc", 0, 0, 0);
      // Undeclared exception!
      try { 
        strBuilder0.charAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      int int0 = 39;
      String string0 = strBuilder0.midString(39, 0);
      int int1 = (-966);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("", 0, (-966));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 48;
      // Undeclared exception!
      try { 
        strBuilder0.validateRange(57, 48);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      String string0 = "?M$^GJB81$-Qf";
      StrBuilder strBuilder0 = new StrBuilder("?M$^GJB81$-Qf");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char char0 = 'c';
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterChar('c');
      String string1 = "Caught a SecurityException reading the system property '";
      boolean boolean0 = strBuilder_StrBuilderTokenizer0.hasNext();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "Caught a SecurityException reading the system property '");
      int int0 = (-252);
      StrBuilder strBuilder2 = strBuilder1.appendPadding((-252), 'c');
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder strBuilder3 = strBuilder0.append(object0);
      // Undeclared exception!
      try { 
        strBuilder1.replace((-252), (-252), "Caught a SecurityException reading the system property '");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -252
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceAll('X', 'X');
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance();
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Iterator) strTokenizer0, (String) null);
      StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("gcO{0qA\u0007*%=");
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("gcO{0qA\u0007*%=");
      int int0 = strBuilder0.indexOf(strMatcher0, (-3846));
      int int1 = strBuilder0.lastIndexOf("", 0);
      int int2 = strBuilder0.capacity();
      StrBuilder strBuilder4 = new StrBuilder("");
      int int3 = strBuilder4.indexOf('X');
      boolean boolean0 = strBuilder0.contains((String) null);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.midString((-700), (-2026));
      StrBuilder strBuilder1 = strBuilder0.append("");
      StrBuilder strBuilder2 = strBuilder0.append(1L);
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrBuilder strBuilder3 = strBuilder1.deleteAll(strMatcher0);
      StrBuilder strBuilder4 = strBuilder2.append('7');
      StrBuilder strBuilder5 = strBuilder2.deleteFirst('/');
      // Undeclared exception!
      try { 
        strBuilder4.append("$q3[ Gj;IlZF@bY", (-2684), (-700));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      int int0 = strBuilder0.indexOf("", (-3067));
      StrBuilder strBuilder2 = new StrBuilder((String) null);
      StrBuilder strBuilder3 = strBuilder2.replaceAll("", "");
      StrBuilder strBuilder4 = strBuilder0.append(strBuilder2);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(0);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      StrBuilder strBuilder1 = strBuilder0.append(object0);
      StrBuilder strBuilder2 = strBuilder1.appendNewLine();
      boolean boolean0 = strBuilder1.equals(strBuilder0);
      String string0 = strBuilder0.toString();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder3 = strBuilder0.appendWithSeparators((Collection) linkedList0, "file.encoding");
      char[] charArray0 = new char[1];
      charArray0[0] = '^';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, (-1462), (-1462));
      StrBuilder strBuilder4 = strBuilder3.insert(0, '^');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder3.new StrBuilderReader();
      boolean boolean1 = strBuilder_StrBuilderReader0.markSupported();
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2);
      // Undeclared exception!
      try { 
        strBuilder0.insert(1728, 'V');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1728
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setNewLineText((String) null);
      StrBuilder strBuilder2 = strBuilder0.append((StrBuilder) null);
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadRight((Object) "java.vm.info", 0, '0');
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      StrBuilder strBuilder4 = strBuilder2.appendWithSeparators((Collection) linkedList0, "org.apache.commons.lang.text.StrMatcher$NoMatcher");
      StrBuilder strBuilder5 = strBuilder0.minimizeCapacity();
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      int int0 = (-1);
      StrBuilder strBuilder0 = new StrBuilder((-1));
      // Undeclared exception!
      try { 
        strBuilder0.substring((-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("b''di<i{lGh(]");
      StrBuilder strBuilder1 = strBuilder0.append(false);
      StrBuilder strBuilder2 = strBuilder1.replace(0, 0, "b''di<i{lGh(]");
      StrBuilder strBuilder3 = strBuilder0.insert(0, (Object) "b''di<i{lGh(]");
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      int int0 = strBuilder3.indexOf(strMatcher0);
      char[] charArray0 = new char[0];
      char[] charArray1 = strBuilder0.getChars(charArray0);
      StrBuilder strBuilder4 = strBuilder1.appendFixedWidthPadRight((-1774), 3965, 'I');
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.runtime.version");
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      String string0 = null;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoredMatcher(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "M");
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher((String) null);
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.append(2387.0);
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt((-1), 'l');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(114);
      StrBuilder strBuilder1 = strBuilder0.append('H');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrBuilder strBuilder2 = strBuilder1.deleteFirst(strMatcher0);
      StrMatcher strMatcher1 = StrMatcher.tabMatcher();
      // Undeclared exception!
      try { 
        strBuilder2.replace(strMatcher1, "sfCJY9RTajL H_qsG@", (-4004), 114, (-4004));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -4004
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(175);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoredMatcher(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, (String) null);
      StrBuilder strBuilder2 = strBuilder0.deleteFirst('Z');
      strBuilder2.buffer = null;
      StrBuilder strBuilder3 = strBuilder0.deleteFirst('~');
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(175, '1');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 175
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("%TKjMOD)`t#zv?9$`");
      StrBuilder strBuilder1 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      int int0 = strBuilder0.lastIndexOf("Invalid offset: ");
      int int1 = strBuilder0.indexOf("Invalid offset: ", (-1));
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read((char[]) null, 0, 0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(31);
      // Undeclared exception!
      try { 
        strBuilder0.insert(2031, false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2031
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.midString(689, 689);
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('K', 'K');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      char[] charArray0 = new char[8];
      charArray0[0] = 'K';
      charArray0[1] = 'K';
      charArray0[2] = 'K';
      charArray0[3] = 'K';
      charArray0[4] = 'K';
      charArray0[5] = 'Y';
      charArray0[6] = '%';
      charArray0[7] = 'K';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 689, (-1445));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -1445
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.minimizeCapacity();
      boolean boolean0 = strBuilder1.equalsIgnoreCase(strBuilder2);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("", 0, (-1385));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("oL|");
      boolean boolean0 = strBuilder0.contains('^');
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = (-3538);
      String string0 = strBuilder0.rightString((-3538));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder0.append((Object) strBuilder1);
      char[] charArray0 = new char[1];
      StrBuilder strBuilder3 = strBuilder0.setNewLineText((String) null);
      charArray0[0] = '<';
      Reader reader0 = strBuilder2.asReader();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      String string1 = "";
      StrBuilder strBuilder4 = strBuilder2.deleteAll(strMatcher0);
      StrMatcher strMatcher2 = StrMatcher.stringMatcher("");
      StrBuilder strBuilder5 = strBuilder2.replaceFirst(strMatcher0, "");
      int int1 = strBuilder5.indexOf(strMatcher0, 48);
      StrBuilder strBuilder6 = strBuilder2.setNullText("({]rCVK2}&ouI`QQAb{");
      // Undeclared exception!
      try { 
        strBuilder6.insert((-1), charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = (-192);
      // Undeclared exception!
      try { 
        strBuilder0.charAt((-192));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -192
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("TDI*+&w/_W");
      char[] charArray0 = new char[7];
      charArray0[0] = '\'';
      charArray0[1] = 'Y';
      charArray0[2] = '{';
      charArray0[3] = 'x';
      charArray0[4] = 'y';
      charArray0[5] = ')';
      charArray0[6] = '|';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 3253, 3253);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 3253
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("%-j.wGT2legJm.,Da%");
      StrBuilder strBuilder1 = new StrBuilder(2185);
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder1;
      objectArray0[2] = (Object) strBuilder0;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      objectArray0[3] = object0;
      objectArray0[4] = (Object) strBuilder1;
      Object object1 = new Object();
      objectArray0[5] = object1;
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators(objectArray0, "");
      // Undeclared exception!
      try { 
        strBuilder2.toCharArray((-1419), 1413);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1419
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.deleteAll("");
      String string0 = strBuilder0.rightString(0);
      StrBuilder strBuilder2 = strBuilder0.appendNewLine();
      Object[] objectArray0 = new Object[0];
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators(objectArray0, "i=<YUuZP= &QFQ\"g");
      char[] charArray0 = new char[7];
      charArray0[0] = 'n';
      charArray0[1] = '/';
      charArray0[2] = 'K';
      charArray0[3] = '5';
      charArray0[4] = '+';
      charArray0[5] = 'r';
      charArray0[6] = '3';
      strBuilder3.buffer = charArray0;
      StrBuilder strBuilder4 = strBuilder3.replaceAll("", "i=<YUuZP= &QFQ\"g");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1222), object0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1222
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteAll("");
      StrBuilder strBuilder2 = strBuilder1.deleteFirst("xGQq~SV");
      StrBuilder strBuilder3 = strBuilder1.trim();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("", 0, 0);
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
      int int0 = strBuilder0.capacity();
      StrBuilder strBuilder1 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      char[] charArray0 = new char[2];
      charArray0[0] = 'd';
      StrBuilder strBuilder2 = strBuilder1.setLength(114);
      StrBuilder strBuilder3 = strBuilder2.clear();
      charArray0[1] = 'r';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 32, 32);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = (-18);
      // Undeclared exception!
      try { 
        strBuilder0.charAt((-18));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -18
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      String string0 = strBuilder0.rightString((-3538));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder0.append((Object) strBuilder1);
      char[] charArray0 = new char[1];
      StrBuilder strBuilder3 = strBuilder0.setNewLineText((String) null);
      Reader reader0 = strBuilder1.asReader();
      charArray0[0] = '<';
      Reader reader1 = strBuilder2.asReader();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      String string1 = strBuilder1.rightString((-3538));
      StrBuilder strBuilder4 = strBuilder2.deleteAll(strMatcher0);
      StrMatcher strMatcher2 = StrMatcher.stringMatcher("");
      StrBuilder strBuilder5 = strBuilder2.replaceFirst(strMatcher0, "");
      int int0 = strBuilder5.indexOf(strMatcher0, 48);
      StrBuilder strBuilder6 = strBuilder2.setNullText("({]rCVK2}&ouI`QQAb{");
      // Undeclared exception!
      try { 
        strBuilder6.insert((-1), charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.vm.specification.vendor");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark((-2104));
      String string0 = strBuilder0.toString();
      char[] charArray0 = new char[3];
      charArray0[0] = 'Q';
      charArray0[1] = 'd';
      charArray0[2] = '*';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, (-2104), (-2104));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -2104
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-1101);
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray((-1101), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1101
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      int int0 = 0;
      StrBuilder strBuilder1 = new StrBuilder(0);
      int int1 = 4;
      char char0 = '$';
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight((Object) strBuilder1, 4, '$');
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceAll("sE:&n6dkqK ?z%G_RPr", "");
      StringBuffer stringBuffer0 = strBuilder1.toStringBuffer();
      int int0 = 115;
      int int1 = 2;
      // Undeclared exception!
      try { 
        strBuilder0.substring(115, 2);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(48);
      StrBuilder strBuilder1 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight((Object) strBuilder1, 48, 'o');
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("nC9>Tp@V");
      StrBuilder strBuilder1 = strBuilder0.append((double) 193);
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((Object) "nC9>Tp@V", 193, '2');
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('2');
      StrBuilder strBuilder3 = strBuilder0.appendNewLine();
      StrBuilder strBuilder4 = strBuilder2.insert(193, (float) 193);
      int int0 = strBuilder0.indexOf((StrMatcher) strMatcher_CharMatcher0);
      int int1 = strBuilder2.indexOf((StrMatcher) strMatcher_CharMatcher0);
      StrBuilder strBuilder5 = strBuilder3.trim();
      int int2 = strBuilder2.indexOf("nC9>Tp@V");
      StrBuilder strBuilder6 = strBuilder1.replaceAll('-', ')');
      int int3 = strBuilder3.indexOf('-', 0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder5.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
      int int4 = strBuilder5.lastIndexOf("");
      char[] charArray0 = new char[3];
      charArray0[0] = '2';
      charArray0[1] = '-';
      charArray0[2] = '-';
      char[] charArray1 = strBuilder2.getChars(charArray0);
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      char[] charArray0 = new char[1];
      charArray0[0] = '5';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 0);
      StrBuilder strBuilder1 = strBuilder0.append((-2332.76));
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("wg=zn3, Mt|LN/f^");
      StrBuilder strBuilder1 = new StrBuilder("wg=zn3, Mt|LN/f^");
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      StrBuilder strBuilder3 = strBuilder1.appendNewLine();
      // Undeclared exception!
      try { 
        strBuilder1.insert(48, (Object) strBuilder2);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 48
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-631));
      StrBuilder strBuilder1 = new StrBuilder("]T.:*;}Xs");
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      StrBuilder strBuilder3 = strBuilder2.deleteFirst((StrMatcher) null);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      char[] charArray0 = new char[1];
      charArray0[0] = '%';
      char[] charArray1 = strBuilder2.getChars(charArray0);
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[3];
      charArray0[0] = 'z';
      charArray0[1] = '{';
      charArray0[2] = 'M';
      char[] charArray1 = strBuilder0.getChars(charArray0);
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = new StringBuffer("end < start");
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder2 = new StrBuilder("BB20sP^qnBeX");
      char[] charArray0 = new char[3];
      charArray0[0] = 'T';
      StrBuilder strBuilder3 = strBuilder0.setCharAt(0, 'O');
      charArray0[1] = '!';
      charArray0[2] = 'h';
      StringBuffer stringBuffer1 = stringBuffer0.append(charArray0);
      StrBuilder strBuilder4 = strBuilder1.appendFixedWidthPadLeft((Object) strBuilder2, 1308, '/');
      StrBuilder strBuilder5 = strBuilder0.clear();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      String string0 = strBuilder2.rightString(1308);
      StrBuilder strBuilder6 = strBuilder4.deleteFirst('%');
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.append((-2816L));
      String string0 = strBuilder0.toString();
      int int0 = strBuilder0.size();
      StrBuilder strBuilder2 = strBuilder0.appendPadding(5, '>');
      StrBuilder strBuilder3 = strBuilder2.setCharAt(5, '>');
      StrBuilder strBuilder4 = strBuilder1.setLength(5);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder4.new StrBuilderTokenizer();
      String string1 = strBuilder_StrBuilderTokenizer0.getContent();
      char char0 = strBuilder2.charAt(0);
      StrBuilder strBuilder5 = strBuilder1.insert(0, (double) 0);
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("F;qLi},7e<tJV?=W");
      char char0 = strBuilder0.charAt(0);
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('a');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.previous();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      // Undeclared exception!
      try { 
        strBuilder0.insert((-2783), object0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2783
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid startIndex: ");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(22);
      String string0 = strBuilder0.rightString(22);
      LinkedList<StrBuilder> linkedList0 = new LinkedList<StrBuilder>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "IjWCShW*oixPYYde}");
      int int0 = strBuilder0.lastIndexOf('*', 22);
      String string1 = strBuilder0.getNewLineText();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(22);
      StrBuilder strBuilder2 = strBuilder0.append(0L);
      int int1 = 8;
      // Undeclared exception!
      try { 
        strBuilder0.insert(8, false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 8
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("startIndex must be valid");
      StrBuilder strBuilder1 = strBuilder0.append((-4342));
      StrBuilder strBuilder2 = strBuilder1.deleteAll("startIndex must be valid");
      int int0 = strBuilder0.length();
      char char0 = 'g';
      int int1 = strBuilder1.validateRange(0, 1450);
      boolean boolean0 = strBuilder1.contains('g');
      StrBuilder strBuilder3 = strBuilder1.insert(5, 0.0F);
      String string0 = strBuilder2.getNullText();
      Writer writer0 = strBuilder1.asWriter();
      int int2 = (-685);
      // Undeclared exception!
      try { 
        strBuilder2.setLength((-685));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -685
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Object object0 = new Object();
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(object0, 2709, '\\');
      StrBuilder strBuilder2 = strBuilder0.clear();
      int int0 = strBuilder0.lastIndexOf('<');
      int int1 = strBuilder2.indexOf("j.N,qr]L!insZcx[", 2709);
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) strBuilder2;
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = object0;
      objectArray0[3] = object0;
      objectArray0[4] = (Object) "j.N,qr]L!insZcx[";
      objectArray0[5] = (Object) strBuilder1;
      objectArray0[6] = (Object) strBuilder2;
      StrBuilder strBuilder3 = strBuilder1.appendWithSeparators(objectArray0, "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrBuilder strBuilder2 = strBuilder1.setLength(0);
      StrBuilder strBuilder3 = strBuilder2.replaceAll((String) null, (String) null);
      String string0 = strBuilder0.substring(0, 57);
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder4 = strBuilder0.deleteAll((StrMatcher) strMatcher_TrimMatcher0);
      char[] charArray0 = new char[4];
      charArray0[2] = 'g';
      charArray0[1] = 'M';
      charArray0[2] = '.';
      String string1 = strBuilder4.substring(0);
      StrBuilder strBuilder5 = strBuilder0.append(0.0);
      charArray0[3] = '0';
      StrBuilder strBuilder6 = strBuilder0.insert(1, charArray0, 0, 0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder6.new StrBuilderTokenizer();
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 0, 4);
      String string2 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder strBuilder7 = strBuilder4.appendFixedWidthPadLeft(1, 1, '0');
      int int0 = strBuilder2.indexOf((StrMatcher) strMatcher_TrimMatcher0, (-2079));
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder("");
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      int int0 = (-2659);
      // Undeclared exception!
      try { 
        strBuilder2.delete((-2659), (-2659));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2659
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("zZ-V:&");
      int int0 = strBuilder0.lastIndexOf("zZ-V:&", 0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      char[] charArray0 = new char[5];
      charArray0[0] = 'n';
      charArray0[1] = 'X';
      charArray0[3] = '~';
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("");
      charArray0[4] = '<';
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "zZ-V:&");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Collection) linkedList0, "f'FxFylzc~z-KD");
      StrBuilder strBuilder3 = strBuilder1.delete(0, 0);
      StrBuilder strBuilder4 = strBuilder3.replaceFirst("zZ-V:&", "'; the SystemUtils property value will default to null.");
      StrBuilder strBuilder5 = strBuilder3.insert(0, (-2301.68));
      // Undeclared exception!
      try { 
        strBuilder1.substring(972);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoredChar('U');
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      char[] charArray0 = new char[5];
      charArray0[3] = 'C';
      String string0 = strBuilder0.getNullText();
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Aw#");
      // Undeclared exception!
      try { 
        strBuilder0.append("Aw#", 9, 9);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(true);
      StrBuilder strBuilder2 = strBuilder1.appendNewLine();
      StrBuilder strBuilder3 = strBuilder2.deleteFirst('A');
      char char0 = '!';
      StrBuilder strBuilder4 = strBuilder1.append('!');
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("");
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      // Undeclared exception!
      try { 
        strBuilder2.replace(strMatcher0, "", (int) 'A', 2, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append("java.vendor");
      StrBuilder strBuilder2 = strBuilder0.clear();
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder1);
      char[] charArray0 = strBuilder3.toCharArray(0, 0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = strBuilder_StrBuilderReader0.read(charBuffer0);
      strBuilder_StrBuilderReader0.close();
      StrBuilder strBuilder4 = strBuilder3.replace(0, 0, "java.vendor");
      StrBuilder strBuilder5 = strBuilder4.appendNewLine();
      StrBuilder strBuilder6 = strBuilder4.append(true);
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      int int1 = strBuilder6.lastIndexOf(strMatcher0);
      String string0 = strBuilder6.substring(0);
      int int2 = strBuilder3.lastIndexOf("java.vendor");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoredChar(',');
      String string1 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder strBuilder7 = strBuilder4.trim();
      StrBuilder strBuilder8 = strBuilder7.append(2146.8103F);
      StrBuilder strBuilder9 = strBuilder6.replaceAll("java.vendor\ntrue", "Invalid length: ");
      String string2 = strBuilder_StrBuilderTokenizer0.getContent();
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      StrBuilder strBuilder10 = strBuilder0.deleteFirst((StrMatcher) strMatcher_CharSetMatcher0);
      int int3 = strBuilder5.lastIndexOf('_', 109);
  }
}
