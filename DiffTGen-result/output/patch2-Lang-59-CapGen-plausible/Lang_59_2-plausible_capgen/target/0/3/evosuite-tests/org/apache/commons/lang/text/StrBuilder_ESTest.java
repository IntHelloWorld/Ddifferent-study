/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 28 18:12:19 GMT 2020
 */

package org.apache.commons.lang.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.Writer;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.NoSuchElementException;
import java.util.stream.IntStream;
import org.apache.commons.lang.text.StrBuilder;
import org.apache.commons.lang.text.StrMatcher;
import org.apache.commons.lang.text.StrTokenizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StrBuilder_ESTest extends StrBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[9];
      charArray0[0] = '|';
      charArray0[1] = '|';
      charArray0[2] = ']';
      charArray0[3] = '`';
      StrBuilder strBuilder1 = strBuilder0.deleteFirst((String) null);
      charArray0[4] = 'u';
      charArray0[5] = 'B';
      charArray0[6] = 'W';
      charArray0[7] = 'J';
      charArray0[8] = '>';
      // Undeclared exception!
      try { 
        strBuilder0.insert((-2600), charArray0, (-2600), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2600
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      strBuilder0.size = 2473;
      int int0 = StrBuilder.CAPACITY;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setQuoteChar('[');
      // Undeclared exception!
      try { 
        strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "0");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst((StrMatcher) null);
      StrBuilder strBuilder2 = strBuilder1.setLength(116);
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      boolean boolean0 = strBuilder0.equals(object0);
      StrBuilder strBuilder3 = strBuilder2.trim();
      StringBuffer stringBuffer0 = strBuilder3.toStringBuffer();
      String string0 = strBuilder2.midString(0, 0);
      int int0 = strBuilder3.hashCode();
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 0, 102);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("O!|lWzz3A6\"m");
      char[] charArray0 = new char[2];
      charArray0[0] = '\'';
      charArray0[1] = 'C';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "(\"W");
      String string0 = strBuilder1.toString();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.next();
      boolean boolean0 = strBuilder1.equals((Object) "O!|lWzz3A6\"m");
      String string1 = strBuilder1.midString(838, 102);
      StrBuilder strBuilder2 = strBuilder0.setNullText(" \t\n\r\f");
      int int0 = strBuilder2.indexOf('\'', 838);
      StrBuilder strBuilder3 = strBuilder1.replaceAll("Invalid startIndex: ", "LLK**=h7&l");
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoredMatcher((StrMatcher) null);
      String string0 = strBuilder_StrBuilderTokenizer0.previousToken();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst((StrMatcher) null);
      StrBuilder strBuilder2 = strBuilder1.setLength(116);
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      boolean boolean0 = strBuilder0.equals(object0);
      int int0 = strBuilder2.lastIndexOf((StrMatcher) null, 1827);
      StrBuilder strBuilder3 = strBuilder2.trim();
      StringBuffer stringBuffer0 = strBuilder3.toStringBuffer();
      String string1 = strBuilder2.midString(1827, 31);
      int int1 = strBuilder3.hashCode();
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 0, 102);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2478);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      strBuilder0.size = 2478;
      int int0 = strBuilder0.lastIndexOf('[');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setQuoteChar('[');
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, (String) null);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("E|f$/#%:#+fu");
      Object[] objectArray0 = new Object[0];
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "1.4");
      char[] charArray0 = new char[7];
      charArray0[0] = 'N';
      charArray0[1] = 'w';
      charArray0[2] = '&';
      charArray0[3] = 'n';
      charArray0[4] = 'K';
      charArray0[5] = '}';
      charArray0[6] = 'E';
      strBuilder1.buffer = charArray0;
      // Undeclared exception!
      try { 
        strBuilder1.deleteFirst('p');
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(",FHudi>K");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterMatcher((StrMatcher) null);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "KZio4hyN");
      StrBuilder strBuilder2 = strBuilder0.replaceFirst(",FHudi>K", "un");
      StrBuilder strBuilder3 = strBuilder2.replaceFirst(",FHudi>K", "4.9");
      StringBuffer stringBuffer0 = new StringBuffer();
      char[] charArray0 = new char[5];
      charArray0[0] = 'V';
      charArray0[1] = '%';
      charArray0[2] = 'e';
      charArray0[3] = '+';
      charArray0[4] = 'l';
      StrBuilder strBuilder4 = strBuilder1.append(charArray0);
      StrBuilder strBuilder5 = strBuilder3.append(stringBuffer0);
      StrBuilder strBuilder6 = strBuilder5.append(0.0F);
      int int0 = strBuilder5.indexOf((StrMatcher) null);
      int int1 = strBuilder5.indexOf('X');
      int int2 = strBuilder3.lastIndexOf('i');
      StrTokenizer strTokenizer1 = strBuilder0.asTokenizer();
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder1;
      objectArray0[2] = (Object) stringBuffer0;
      objectArray0[3] = (Object) null;
      objectArray0[4] = (Object) "KZio4hyN";
      StrBuilder strBuilder7 = strBuilder2.appendWithSeparators(objectArray0, (String) null);
      StrBuilder strBuilder8 = strBuilder1.deleteFirst('J');
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      int int0 = (-628);
      StrBuilder strBuilder1 = strBuilder0.append((String) null, (-2247), (-628));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      char[] charArray0 = new char[6];
      charArray0[0] = '7';
      charArray0[1] = ':';
      charArray0[2] = 'G';
      charArray0[3] = 'q';
      charArray0[4] = 'C';
      charArray0[5] = 'Y';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, (-2247), (-2247));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2053);
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      char[] charArray0 = new char[6];
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      int int0 = 103;
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft(object0, 103, 'O');
      StrBuilder strBuilder3 = strBuilder2.append((Object) strBuilder1);
      StrBuilder strBuilder4 = strBuilder3.deleteFirst("startIndex must be valid");
      charArray0[0] = 'O';
      charArray0[1] = 'B';
      charArray0[2] = 'H';
      Writer writer0 = strBuilder1.asWriter();
      charArray0[3] = '#';
      charArray0[4] = 'p';
      charArray0[5] = '>';
      strBuilder1.buffer = charArray0;
      String string0 = strBuilder0.getNewLineText();
      // Undeclared exception!
      try { 
        strBuilder1.appendFixedWidthPadLeft((Object) null, 103, '*');
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = '<';
      charArray0[1] = '<';
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.insert(0, charArray0);
      StrBuilder strBuilder2 = new StrBuilder("");
      int int0 = strBuilder2.length();
      charArray0[2] = '<';
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("mxuq[f@)[twx n");
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      char[] charArray0 = new char[6];
      charArray0[0] = ']';
      charArray0[1] = 'M';
      charArray0[2] = '8';
      charArray0[3] = 'W';
      charArray0[4] = ' ';
      charArray0[5] = 'D';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder0.replace(12, (-1794), "mxuq[f@)[twx n");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("<vNZ]slT/._;(Pc");
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher((String) null);
      StrMatcher strMatcher3 = StrMatcher.charMatcher('@');
      int int0 = strBuilder0.lastIndexOf(strMatcher0, (-4436));
      Object object0 = new Object();
      StrBuilder strBuilder1 = strBuilder0.append(object0);
      StrBuilder strBuilder2 = strBuilder0.append(true);
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt((-741), 'B');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -741
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.lastIndexOf('c', 32);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder(2);
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, 2, 2);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      char char0 = 'Q';
      StrBuilder strBuilder1 = strBuilder0.appendPadding(0, 'Q');
      String string0 = strBuilder1.toString();
      StrMatcher strMatcher0 = StrMatcher.charMatcher('Q');
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 0);
      StringBuffer stringBuffer1 = new StringBuffer();
      StrBuilder strBuilder2 = strBuilder0.append(stringBuffer1);
      String string1 = strBuilder2.midString(0, (-1));
      StrBuilder strBuilder3 = strBuilder0.insert(0, 0);
      String string2 = strBuilder1.toString();
      int int1 = strBuilder2.lastIndexOf(strMatcher0, 0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      char[] charArray0 = new char[0];
      int int2 = 337;
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 3137, 337);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      String string0 = "length must be valid";
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrBuilder strBuilder2 = strBuilder1.minimizeCapacity();
      char[] charArray0 = new char[2];
      charArray0[0] = 'u';
      charArray0[1] = 'a';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      // Undeclared exception!
      try { 
        strBuilder2.replaceAll((StrMatcher) strMatcher_CharSetMatcher0, "t(");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      boolean boolean0 = strBuilder0.isEmpty();
      int int0 = 44;
      String string0 = null;
      // Undeclared exception!
      try { 
        strBuilder0.insert(44, (Object) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 44
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[5];
      charArray0[0] = '(';
      charArray0[1] = '8';
      charArray0[2] = '\'';
      charArray0[3] = 'w';
      charArray0[4] = 'Y';
      StrBuilder strBuilder1 = strBuilder0.insert(0, charArray0, 0, 0);
      StrBuilder strBuilder2 = new StrBuilder();
      StrBuilder strBuilder3 = strBuilder2.append("A8ChW/=6+?p\u0002p]2'E;");
      StrBuilder strBuilder4 = strBuilder1.insert(0, (Object) strBuilder2);
      Writer writer0 = strBuilder4.asWriter();
      StrBuilder strBuilder5 = strBuilder0.insert(0, 'l');
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrTokenizer strTokenizer0 = strBuilder2.asTokenizer();
      Reader reader0 = strBuilder1.asReader();
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      char[] charArray0 = new char[1];
      StrBuilder strBuilder1 = strBuilder0.insert(0, (long) 0);
      StrBuilder strBuilder2 = strBuilder1.setNullText("'\"");
      charArray0[0] = '1';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(0, 0, charArray0, 3);
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("cQG&RScR");
      char[] charArray0 = strBuilder0.toCharArray(0, 0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(charArray0, 0, 0);
      StrBuilder strBuilder1 = strBuilder0.insert(0, true);
      char[] charArray1 = strBuilder0.toCharArray(0, 0);
      StrBuilder strBuilder2 = strBuilder0.deleteAll("");
      Writer writer0 = strBuilder2.asWriter();
      StrBuilder strBuilder3 = strBuilder2.insert(0, (Object) "-d@`f");
      StrBuilder strBuilder4 = strBuilder0.trim();
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) strBuilder_StrBuilderWriter0;
      objectArray0[1] = (Object) strBuilder3;
      objectArray0[2] = (Object) strBuilder3;
      objectArray0[3] = (Object) strBuilder0;
      StrBuilder strBuilder5 = strBuilder4.appendWithSeparators(objectArray0, "-d@`f");
      StrBuilder strBuilder6 = strBuilder0.replaceFirst('T', 'T');
      StrBuilder strBuilder7 = strBuilder6.setNewLineText("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      boolean boolean0 = strBuilder1.endsWith("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder6.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(0);
      StrBuilder strBuilder8 = strBuilder0.deleteFirst('`');
      StrBuilder strBuilder9 = strBuilder3.insert(0, (double) 0L);
      StrBuilder strBuilder10 = strBuilder1.trim();
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(5);
      StrBuilder strBuilder1 = strBuilder0.insert(0, false);
      StrBuilder strBuilder2 = strBuilder0.insert(0, "`");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      String string0 = strBuilder2.getNewLineText();
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("startIndex must be valid");
      char[] charArray0 = new char[5];
      charArray0[0] = 'U';
      charArray0[1] = 'o';
      charArray0[2] = '\'';
      charArray0[3] = ')';
      charArray0[4] = 'Q';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst((StrMatcher) strMatcher_CharSetMatcher0);
      StrBuilder strBuilder2 = strBuilder1.replaceFirst("java.awt.printerjob", "startIndex must be valid");
      StrBuilder strBuilder3 = strBuilder1.append(charArray0);
      boolean boolean0 = strBuilder1.contains("startIndex must be valid");
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.validateRange(0, 0);
      String string0 = strBuilder0.substring(0);
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(0, 0, '0');
      StringBuffer stringBuffer0 = strBuilder1.toStringBuffer();
      StrBuilder strBuilder2 = new StrBuilder(0);
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder2);
      StrBuilder strBuilder4 = strBuilder3.appendPadding(0, 'i');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      StrBuilder strBuilder5 = strBuilder3.append(object0);
      StrBuilder strBuilder6 = strBuilder1.replaceFirst('?', '1');
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      int int0 = (-1723);
      StrBuilder strBuilder0 = new StrBuilder((-1723));
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      String string0 = "m*WUPu";
      char[] charArray0 = new char[7];
      charArray0[0] = 'F';
      charArray0[1] = 'D';
      strBuilder0.size = (-983);
      charArray0[2] = '9';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      charArray0[3] = '>';
      // Undeclared exception!
      try { 
        strBuilder0.deleteFirst(strMatcher1);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      int int1 = strBuilder0.validateRange(0, 2425);
      StrBuilder strBuilder1 = new StrBuilder((String) null);
      StrBuilder strBuilder2 = strBuilder0.setNullText((String) null);
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadLeft((Object) strBuilder1, 3963, 'W');
      StrBuilder strBuilder4 = strBuilder3.appendFixedWidthPadRight((-2245), (-2245), 'W');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      StrBuilder strBuilder5 = strBuilder1.append(object0);
      // Undeclared exception!
      try { 
        strBuilder5.validateIndex((-1682));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1682
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("user.home");
      StrBuilder strBuilder1 = strBuilder0.deleteAll("pIA(e,[\"`7#Rb3");
      StrBuilder strBuilder2 = strBuilder0.append(0.0F);
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance("user.home");
      char[] charArray0 = new char[3];
      char char0 = '2';
      charArray0[0] = '2';
      charArray0[1] = '9';
      charArray0[2] = '.';
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators((Object[]) null, "pIA(e,[\"`7#Rb3");
      StrBuilder strBuilder4 = strBuilder0.append(charArray0);
      String string0 = "/\\Y$Ly-QZS;;P#&7Y";
      StrBuilder strBuilder5 = strBuilder2.appendWithSeparators((Iterator) strTokenizer0, "/Y$Ly-QZS;;P#&7Y");
      int int0 = (-323);
      StringBuffer stringBuffer0 = null;
      try {
        stringBuffer0 = new StringBuffer((-323));
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder0.toString();
      StrBuilder strBuilder1 = new StrBuilder();
      int int0 = 0;
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1, 0, 0);
      int int1 = (-1579);
      StrBuilder strBuilder3 = strBuilder1.trim();
      // Undeclared exception!
      try { 
        strBuilder0.replace((StrMatcher) null, "", (-1579), (-6781), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1579
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      int int0 = strBuilder0.validateRange(0, 5);
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray(408, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.awt.graphicsenv");
      char[] charArray0 = new char[2];
      charArray0[0] = 'z';
      charArray0[1] = '=';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      int int0 = (-376);
      int int1 = 937;
      String string0 = strBuilder0.midString((-376), 937);
      StrBuilder strBuilder2 = strBuilder0.clear();
      char[] charArray1 = new char[8];
      charArray1[0] = '=';
      charArray1[1] = 'z';
      charArray1[2] = 'z';
      charArray1[3] = '=';
      charArray1[4] = 'z';
      charArray1[5] = 'z';
      charArray1[6] = 'z';
      charArray1[7] = '=';
      // Undeclared exception!
      try { 
        strBuilder1.getChars(3252, 3252, charArray1, 937);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3252
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      String string0 = "'$'k,HTcy`0k$:1?FZp";
      StrBuilder strBuilder0 = new StrBuilder("'$'k,HTcy`0k$:1?FZp");
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      int int0 = 4;
      char char0 = 's';
      StrBuilder strBuilder2 = strBuilder1.appendNewLine();
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadRight((Object) "'$'k,HTcy`0k$:1?FZp", 4, 's');
      char char1 = 'e';
      boolean boolean0 = strBuilder0.contains('e');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.previous();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("(h\"(\"s@Pte");
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrMatcher strMatcher0 = StrMatcher.charMatcher('o');
      StrBuilder strBuilder2 = strBuilder1.replaceFirst(strMatcher0, ":");
      int int0 = 9;
      int int1 = strBuilder2.indexOf(strMatcher0, 9);
      StrBuilder strBuilder3 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder4 = strBuilder1.deleteFirst(":");
      char[] charArray0 = new char[8];
      charArray0[0] = 'o';
      charArray0[1] = 'o';
      charArray0[2] = 'o';
      charArray0[3] = 'o';
      charArray0[4] = 'o';
      charArray0[5] = 'o';
      charArray0[6] = 'o';
      charArray0[7] = 'o';
      // Undeclared exception!
      try { 
        strMatcher0.isMatch(charArray0, 1150, (-1934), (-1934));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1150
         //
         verifyException("org.apache.commons.lang.text.StrMatcher$CharMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      int int0 = 3152;
      StrBuilder strBuilder0 = new StrBuilder(3152);
      // Undeclared exception!
      try { 
        strBuilder0.insert(3152, (double) 3152);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3152
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2858));
      StrBuilder strBuilder1 = strBuilder0.append((long) (-2858));
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("java.vm.info");
      StrBuilder strBuilder2 = strBuilder1.appendNewLine();
      StrBuilder strBuilder3 = strBuilder2.replace((StrMatcher) strMatcher_StringMatcher0, "java.vm.info", 5, 5, 32);
      StrBuilder strBuilder4 = strBuilder1.replaceFirst((StrMatcher) strMatcher_StringMatcher0, "set() is unsupported");
      StrBuilder strBuilder5 = strBuilder0.replaceAll('[', '[');
      StrBuilder strBuilder6 = strBuilder1.setNullText("java.vm.info");
      StrBuilder strBuilder7 = strBuilder1.append((Object) strBuilder2);
      StrBuilder strBuilder8 = strBuilder6.clear();
      StrBuilder strBuilder9 = strBuilder5.appendPadding(114, '[');
      int int0 = strBuilder1.lastIndexOf("$*Jz\"\u0004j;+CzMm[o");
      Writer writer0 = strBuilder5.asWriter();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("set() is unsupported");
      int int1 = strBuilder4.lastIndexOf("set() is unsupported");
      int int2 = strBuilder4.indexOf("$*Jz\"\u0004j;+CzMm[o", 114);
      int int3 = strBuilder4.lastIndexOf((StrMatcher) strMatcher_StringMatcher0);
      // Undeclared exception!
      try { 
        strBuilder0.append("", (-2858), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = strBuilder0.toCharArray();
      String string0 = "7GC";
      int int0 = strBuilder0.indexOf("7GC");
      int int1 = 0;
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) "7GC", 0, '[');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray1 = new char[0];
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray1);
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterMatcher(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "7GC");
      StrBuilder strBuilder3 = strBuilder1.appendPadding((-1), '|');
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadRight((-912), (-4139), ' ');
      int int2 = 911;
      // Undeclared exception!
      try { 
        strBuilder4.replace(strMatcher0, "org.apache.commons.lang.text.StrBuilder", (-745), 2031, 2031);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -745
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = 944;
      int int1 = 57;
      char char0 = '/';
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight((-349), 57, '/');
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 561;
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight(561, 561, 'p');
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("t(-oj!");
      boolean boolean0 = strBuilder0.contains('r');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[5];
      charArray0[0] = 'r';
      charArray0[1] = 'r';
      charArray0[2] = 'r';
      charArray0[3] = 'r';
      charArray0[4] = '`';
      strBuilder_StrBuilderWriter0.write(charArray0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Fg#r4E?:xA!`jk");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(0L);
      int int0 = 34;
      char[] charArray0 = new char[6];
      charArray0[0] = '+';
      charArray0[1] = '';
      charArray0[2] = 'x';
      charArray0[3] = 'Q';
      charArray0[4] = '5';
      charArray0[5] = '}';
      int int1 = strBuilder_StrBuilderReader0.read(charArray0);
      // Undeclared exception!
      try { 
        CharBuffer.wrap((CharSequence) "Fg#r4E?:xA!`jk", (-254), (-254));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrBuilder strBuilder2 = strBuilder1.insert(0, 0L);
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder3 = strBuilder0.append(116);
      StrBuilder strBuilder4 = new StrBuilder("Invalid startIndex: ");
      StrBuilder strBuilder5 = strBuilder3.appendFixedWidthPadRight((Object) strBuilder4, 0, ';');
      // Undeclared exception!
      try { 
        strBuilder0.replace((-1250), (-1), "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1250
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1286));
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      int int0 = strBuilder0.indexOf((StrMatcher) strMatcher_TrimMatcher0, (-1937));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("1.6");
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 462;
      // Undeclared exception!
      try { 
        strBuilder0.charAt(462);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 462
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[1];
      Reader reader0 = strBuilder0.asReader();
      charArray0[0] = 'j';
      char[] charArray1 = strBuilder0.getChars(charArray0);
      StrBuilder strBuilder1 = strBuilder0.append(473.768);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 5);
      char char0 = '@';
      int int1 = 116;
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray1, (-1), 116);
      boolean boolean0 = strBuilder0.contains('@');
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      boolean boolean1 = strBuilder0.equals(object0);
      // Undeclared exception!
      try { 
        strBuilder0.insert(116, (long) (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 116
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(703);
      StrBuilder strBuilder1 = strBuilder0.replaceAll("@<#", "Invalid length: ");
      StrBuilder strBuilder2 = strBuilder1.replaceFirst('T', 'V');
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-199));
      int int0 = (-1076);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) null, (-199), '`');
      StrBuilder strBuilder2 = strBuilder1.replaceFirst("X8ScF@", (String) null);
      // Undeclared exception!
      try { 
        strBuilder2.substring((-1076));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1076
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "";
      int int0 = 0;
      int int1 = strBuilder0.lastIndexOf("", 0);
      char[] charArray0 = new char[4];
      StrBuilder strBuilder1 = new StrBuilder((-1566));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      charArray0[0] = 'F';
      char char0 = '8';
      charArray0[1] = '8';
      charArray0[2] = 'k';
      charArray0[3] = 'W';
      int int2 = (-462);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1), charArray0, 0, (-462));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      boolean boolean0 = strBuilder_StrBuilderTokenizer0.hasPrevious();
      char char0 = 'G';
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight(object0, 1553, 'G');
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("oEIl)Nz8] [\"[>");
      StrMatcher strMatcher0 = null;
      StrBuilder strBuilder1 = strBuilder0.replaceFirst((StrMatcher) null, "oEIl)Nz8] [\"[>");
      String string0 = strBuilder1.toString();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrBuilder strBuilder2 = strBuilder1.reverse();
      StrBuilder strBuilder3 = strBuilder0.reverse();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      StrMatcher strMatcher1 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      int int0 = strBuilder3.lastIndexOf(strMatcher1, 2526);
      // Undeclared exception!
      try { 
        strBuilder0.append("oEIl)Nz8] [\"[>", 0, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      StrBuilder strBuilder1 = strBuilder0.insert(0, "length must be valid");
      StrBuilder strBuilder2 = strBuilder1.deleteCharAt(0);
      StrBuilder strBuilder3 = strBuilder1.minimizeCapacity();
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      int int0 = strBuilder3.indexOf(strMatcher0);
      char char0 = '6';
      StrBuilder strBuilder4 = strBuilder0.setCharAt(0, '6');
      int int1 = 0;
      StrBuilder strBuilder5 = strBuilder4.append("&55tiao\"'c+S=yc)|", 0, 0);
      // Undeclared exception!
      try { 
        strBuilder4.appendFixedWidthPadRight(0, 1452, '6');
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.getNullText();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      Writer writer0 = strBuilder0.asWriter();
      int int0 = 95;
      Writer writer1 = strBuilder_StrBuilderWriter0.append('Y');
      strBuilder_StrBuilderWriter0.write(95);
      int int1 = (-479);
      strBuilder_StrBuilderWriter0.write((String) null, (-479), (-479));
      char char0 = ':';
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(':');
      StrBuilder strBuilder2 = strBuilder1.deleteFirst('#');
      StrBuilder strBuilder3 = strBuilder0.appendNewLine();
      // Undeclared exception!
      try { 
        strBuilder1.insert((-479), (String) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -479
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.append((String) null, (-2247), (-628));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip((-628));
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[9];
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('c');
      charArray0[0] = 'g';
      charArray0[1] = 'W';
      charArray0[2] = '$';
      charArray0[3] = 'I';
      charArray0[4] = '@';
      charArray0[5] = 'V';
      charArray0[6] = 'P';
      char char0 = 'f';
      charArray0[7] = 'f';
      charArray0[8] = ']';
      // Undeclared exception!
      try { 
        strBuilder0.insert(0, charArray0, 3592, 3592);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: 3592
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      int int0 = (-3052);
      StrBuilder strBuilder0 = new StrBuilder((-3052));
      String string0 = "";
      StrBuilder strBuilder1 = strBuilder0.deleteAll("");
      int int1 = 2732;
      String string1 = strBuilder1.rightString((-3052));
      String string2 = strBuilder1.leftString(2732);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int2 = strBuilder_StrBuilderReader0.read();
      // Undeclared exception!
      try { 
        strBuilder1.substring((-1), 2732);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      char[] charArray0 = null;
      StrBuilder strBuilder1 = strBuilder0.insert(0, (char[]) null);
      StrBuilder strBuilder2 = new StrBuilder(0);
      char char0 = '|';
      StrBuilder strBuilder3 = strBuilder1.appendPadding(0, '|');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      char char1 = 'I';
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoredChar('I');
      boolean boolean0 = strBuilder_StrBuilderTokenizer0.hasNext();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("org.apache.commons.lang.text.StrBuilder");
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher((char[]) null);
      int int1 = strBuilder0.lastIndexOf(strMatcher0);
      boolean boolean1 = strBuilder1.isEmpty();
      int int2 = 3134;
      String string0 = "W?Y+o_S{X";
      // Undeclared exception!
      try { 
        strBuilder0.replace((-1), 3134, "W?Y+o_S{X");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.toString();
      int int0 = strBuilder0.lastIndexOf('W');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark((-1));
      long long0 = strBuilder_StrBuilderReader0.skip((-1));
      long long1 = strBuilder_StrBuilderReader0.skip((-507L));
      char[] charArray0 = strBuilder0.toCharArray();
      StrBuilder strBuilder1 = strBuilder0.setNullText("qR#OK");
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1));
      StrBuilder strBuilder1 = new StrBuilder((-2853));
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight((-1), 0, '~');
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      int int0 = strBuilder1.lastIndexOf(strMatcher0);
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      boolean boolean1 = strBuilder0.equals(strBuilder1);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      int int0 = 2526;
      char[] charArray0 = new char[2];
      StrBuilder strBuilder1 = strBuilder0.trim();
      strBuilder1.size = 2526;
      charArray0[0] = '=';
      charArray0[1] = 'o';
      strBuilder0.buffer = charArray0;
      // Undeclared exception!
      try { 
        strBuilder0.append(2526);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.lastIndexOf('#', (-4436));
      StrBuilder strBuilder1 = strBuilder0.deleteAll("");
      // Undeclared exception!
      try { 
        strBuilder0.validateRange((-4436), (-2524));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -4436
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      String string0 = "org.apache.commons.lang.text.StrBuilder$StrBuilderReader";
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      int int0 = (-4922);
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt((-4922));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -4922
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[0];
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      int int0 = (-1);
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight((-1), (-1), 'S');
      char[] charArray1 = strBuilder0.getChars(charArray0);
      StrBuilder strBuilder3 = strBuilder0.appendNull();
      StrBuilder strBuilder4 = strBuilder3.deleteFirst('S');
      int int1 = 117;
      // Undeclared exception!
      try { 
        strBuilder4.substring(117);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.validateIndex(0);
      char[] charArray0 = strBuilder0.toCharArray();
      char char0 = 'a';
      StrBuilder strBuilder1 = strBuilder0.deleteAll('a');
      StrMatcher strMatcher0 = StrMatcher.charMatcher('a');
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      int int1 = strBuilder1.lastIndexOf('a');
      String string0 = strBuilder0.rightString((-1));
      char[] charArray1 = new char[8];
      charArray1[0] = 'a';
      charArray1[1] = 'a';
      charArray1[2] = 'a';
      charArray1[3] = 'a';
      charArray1[4] = 'a';
      charArray1[5] = 'a';
      charArray1[6] = 'a';
      // Undeclared exception!
      try { 
        strBuilder1.deleteCharAt((-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.isEmpty();
      char[] charArray0 = new char[8];
      charArray0[0] = 'v';
      charArray0[1] = ',';
      charArray0[2] = 'a';
      charArray0[3] = '/';
      charArray0[4] = 'b';
      charArray0[5] = '\\';
      charArray0[6] = '*';
      charArray0[7] = '#';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StrBuilder strBuilder2 = strBuilder1.setNewLineText("0&'Ya");
      strBuilder1.buffer = charArray0;
      StrBuilder strBuilder3 = new StrBuilder(386);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder3.new StrBuilderReader();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 0, 982);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('O');
      char[] charArray0 = new char[3];
      charArray0[0] = 'O';
      charArray0[1] = 'O';
      charArray0[2] = 'O';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("T?y~");
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_CharMatcher0);
      int int1 = strBuilder0.size();
      int int2 = strBuilder0.length();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StringBuffer stringBuffer0 = new StringBuffer("");
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      strBuilder_StrBuilderReader0.reset();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(charArray0);
      // Undeclared exception!
      try { 
        CharBuffer.wrap(charArray0, 0, 701);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      StrMatcher strMatcher1 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      int int0 = strBuilder0.indexOf(strMatcher1);
      String string0 = strBuilder0.substring(0, 0);
      boolean boolean1 = strBuilder0.contains(strMatcher1);
      StrBuilder strBuilder1 = strBuilder0.append(false);
      Reader reader0 = strBuilder0.asReader();
      strBuilder0.size = (-1);
      StrBuilder strBuilder2 = new StrBuilder("");
      char[] charArray0 = new char[4];
      char char0 = '(';
      charArray0[0] = '(';
      charArray0[1] = 'V';
      char char1 = '>';
      charArray0[2] = '>';
      charArray0[3] = 'K';
      strBuilder1.buffer = charArray0;
      // Undeclared exception!
      try { 
        strBuilder2.setLength((-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("yRT6}Ao}pY]<p#s");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      Writer writer0 = strBuilder_StrBuilderWriter0.append('\"');
      int int0 = (-2227);
      char[] charArray0 = new char[9];
      charArray0[0] = '\"';
      charArray0[1] = '\"';
      charArray0[2] = '\"';
      charArray0[3] = '3';
      charArray0[4] = '\"';
      charArray0[5] = '\"';
      charArray0[6] = '\"';
      charArray0[7] = '\"';
      charArray0[8] = '\"';
      strBuilder_StrBuilderWriter0.write(charArray0);
      // Undeclared exception!
      try { 
        strBuilder0.append("yRT6}Ao}pY]<p#s", 1540, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      int int0 = (-244);
      StrBuilder strBuilder0 = new StrBuilder((-244));
      char char0 = '}';
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('}');
      StrBuilder strBuilder2 = strBuilder1.clear();
      Writer writer0 = strBuilder2.asWriter();
      // Undeclared exception!
      try { 
        strBuilder0.setLength((-244));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -244
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-363));
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) strBuilder0;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      objectArray0[3] = object0;
      Object object1 = strBuilder_StrBuilderTokenizer0.cloneReset();
      objectArray0[4] = object1;
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterMatcher(strMatcher0);
      objectArray0[5] = (Object) strBuilder0;
      StrTokenizer strTokenizer1 = strBuilder_StrBuilderTokenizer0.setIgnoredMatcher(strMatcher0);
      StrTokenizer strTokenizer2 = strBuilder_StrBuilderTokenizer0.setTrimmerMatcher(strMatcher0);
      char[] charArray0 = new char[0];
      StrTokenizer strTokenizer3 = StrTokenizer.getTSVInstance(charArray0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, (String) null);
      StrBuilder strBuilder2 = strBuilder1.setLength(34);
      String string0 = null;
      boolean boolean0 = strBuilder_StrBuilderTokenizer0.hasPrevious();
      char[] charArray1 = new char[6];
      charArray1[0] = ',';
      charArray1[1] = '2';
      charArray1[2] = 'B';
      charArray1[3] = 'A';
      charArray1[4] = 'B';
      charArray1[5] = '[';
      // Undeclared exception!
      try { 
        strMatcher0.isMatch(charArray1, (-3012), (-363), (-4657));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3012
         //
         verifyException("org.apache.commons.lang.text.StrMatcher$CharMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.previousToken();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterChar('+');
      String string1 = strBuilder_StrBuilderTokenizer0.getContent();
      char[] charArray0 = new char[3];
      charArray0[0] = '7';
      charArray0[1] = 'x';
      charArray0[2] = 'r';
      char[] charArray1 = strBuilder0.getChars(charArray0);
      StrBuilder strBuilder1 = strBuilder0.delete(0, 0);
      StrBuilder strBuilder2 = strBuilder1.clear();
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) strBuilder1;
      objectArray0[1] = (Object) strBuilder_StrBuilderTokenizer0;
      objectArray0[2] = (Object) "";
      objectArray0[3] = (Object) strBuilder0;
      objectArray0[4] = (Object) strBuilder1;
      objectArray0[5] = (Object) 'r';
      objectArray0[6] = (Object) 'r';
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators(objectArray0, "a09%0je %_3");
      char[] charArray2 = strBuilder2.toCharArray(0, 0);
      StrBuilder strBuilder4 = strBuilder1.insert(0, 23);
      // Undeclared exception!
      try { 
        strBuilder1.substring((-1094));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1094
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      int int0 = 1032;
      StrBuilder strBuilder0 = new StrBuilder(1032);
      char char0 = '!';
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('!');
      char[] charArray0 = new char[6];
      charArray0[0] = '!';
      charArray0[1] = '!';
      charArray0[2] = '!';
      charArray0[3] = '!';
      char char1 = 'P';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 1032, 595);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 595
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      int int0 = strBuilder0.length();
      StrBuilder strBuilder1 = strBuilder0.append((Object) null);
      StrBuilder strBuilder2 = strBuilder0.deleteAll('E');
      StrBuilder strBuilder3 = strBuilder0.append(1323.8835F);
      StrBuilder strBuilder4 = strBuilder3.append((long) 0);
      // Undeclared exception!
      try { 
        strBuilder0.delete(1906, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.endsWith("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("M;?dB>a<Ik");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterMatcher(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "M;?dB>a<Ik");
      StrTokenizer strTokenizer1 = StrTokenizer.getTSVInstance("M;?dB>a<Ik");
      String string0 = strBuilder_StrBuilderTokenizer0.nextToken();
      char char0 = 'n';
      StrTokenizer strTokenizer2 = strBuilder_StrBuilderTokenizer0.setDelimiterChar('n');
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Iterator) strTokenizer1, "M;?dB>a<Ik");
      StrBuilder strBuilder3 = strBuilder2.trim();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder strBuilder4 = strBuilder0.append(false);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer1 = strBuilder1.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer1.clone();
      // Undeclared exception!
      try { 
        strBuilder4.insert(362, object0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 362
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("end < start");
      int int0 = (-260);
      char char0 = 'u';
      // Undeclared exception!
      try { 
        strBuilder0.insert((-260), 'u');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -260
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceAll("*cJs3V", "*cJs3V");
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      boolean boolean0 = strBuilder1.contains((StrMatcher) strMatcher_NoMatcher0);
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean1 = strBuilder_StrBuilderReader0.ready();
      StrBuilder strBuilder2 = strBuilder0.append(false);
      StrTokenizer strTokenizer1 = strBuilder2.asTokenizer();
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadRight((-3516), 0, 'X');
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      String string0 = null;
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      char[] charArray0 = new char[2];
      charArray0[0] = 'P';
      charArray0[1] = 'V';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder0.indexOf(strMatcher0, 5);
      char char0 = '-';
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight((Object) null, 669, '-');
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight((Object) null, 585, 'o');
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.indexOf("_");
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("8[ TCRkyMU");
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("8[ TCRkyMU");
      boolean boolean0 = strBuilder0.contains((StrMatcher) strMatcher_StringMatcher0);
      StrBuilder strBuilder1 = strBuilder0.append((Object) strMatcher_StringMatcher0);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("8[ TCRkyMU");
      StrBuilder strBuilder2 = strBuilder1.append(strBuilder0, 0, 0);
      // Undeclared exception!
      try { 
        strBuilder0.append("xx&NF/SKs``\"n", 5, 3507);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, 0, (-3923));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      int int0 = 2021;
      StrBuilder strBuilder0 = new StrBuilder(2021);
      char[] charArray0 = new char[3];
      charArray0[0] = 'r';
      charArray0[1] = 'k';
      charArray0[2] = '#';
      // Undeclared exception!
      try { 
        strBuilder0.insert(57, charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 57
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      // Undeclared exception!
      try { 
        strBuilder0.insert(130, true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 130
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst((StrMatcher) strMatcher_StringMatcher0);
      int int0 = 0;
      char[] charArray0 = new char[2];
      charArray0[0] = 'p';
      charArray0[1] = 'p';
      strBuilder1.getChars(0, 0, charArray0, 0);
      StrMatcher strMatcher0 = StrMatcher.charMatcher('p');
      int int1 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_StringMatcher0);
      String string1 = "F4@{6";
      StrBuilder strBuilder2 = strBuilder0.replaceAll("", "F4@{6");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string2 = strBuilder_StrBuilderTokenizer0.getContent();
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(3743);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3743
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset((String) null);
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder strBuilder1 = strBuilder0.append(0L);
      StringBuffer stringBuffer0 = new StringBuffer("");
      StrBuilder strBuilder2 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder3 = strBuilder2.setNullText("Invalid startIndex: ");
      StrBuilder strBuilder4 = strBuilder3.replaceFirst((String) null, "");
      char char0 = 'b';
      // Undeclared exception!
      try { 
        strBuilder2.setCharAt(1, 'b');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("Qm@Gc");
      char[] charArray0 = new char[7];
      charArray0[0] = 'g';
      charArray0[1] = 'S';
      charArray0[2] = '5';
      charArray0[3] = '2';
      charArray0[4] = '?';
      charArray0[5] = 'P';
      charArray0[6] = '9';
      strBuilder0.getChars(0, 0, charArray0, 0);
      strBuilder1.size = 0;
      // Undeclared exception!
      try { 
        strBuilder0.equals((StrBuilder) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = new StrBuilder(0);
      StringBuffer stringBuffer0 = strBuilder1.toStringBuffer();
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("java.library.path");
      strBuilder_StrBuilderWriter0.write("java.library.path");
      strBuilder_StrBuilderWriter0.write("", 0, 0);
      strBuilder_StrBuilderWriter0.close();
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("cB?F!)T>-8kUB$N0j");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.reverse();
      String string0 = strBuilder1.midString(57, (-1));
      String string1 = "";
      StrBuilder strBuilder2 = strBuilder1.replaceAll("", "");
      String string2 = "Z\"$oM[";
      // Undeclared exception!
      try { 
        strBuilder0.append("Z\"$oM[", Integer.MAX_VALUE, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(116);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[6];
      charArray0[0] = '<';
      charArray0[1] = '9';
      charArray0[2] = 'R';
      charArray0[3] = 'd';
      charArray0[4] = 'u';
      charArray0[5] = 'H';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_CharSetMatcher0);
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterChar('D');
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      int int1 = strBuilder0.lastIndexOf(strMatcher0, 116);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(116);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("Invalid length: ");
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-665));
      char[] charArray0 = new char[6];
      charArray0[0] = '^';
      charArray0[1] = 'q';
      charArray0[2] = 'T';
      charArray0[3] = '&';
      charArray0[4] = 'T';
      charArray0[5] = 'y';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StrBuilder strBuilder2 = strBuilder0.setNullText("java.library.path");
      StringBuffer stringBuffer0 = new StringBuffer(";LeC0");
      IntStream intStream0 = stringBuffer0.chars();
      // Undeclared exception!
      try { 
        strBuilder2.append(stringBuffer0, (-665), Integer.MAX_VALUE);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      int int0 = (-446);
      StrBuilder strBuilder0 = new StrBuilder((-446));
      StrBuilder strBuilder1 = strBuilder0.deleteAll('Q');
      // Undeclared exception!
      try { 
        strBuilder1.validateRange(101, 101);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      int int0 = 1145;
      StrBuilder strBuilder0 = new StrBuilder(1145);
      String string0 = strBuilder0.leftString((-506));
      int int1 = (-299);
      // Undeclared exception!
      try { 
        strBuilder0.append("", (-1971), (-299));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("EX_:4BDmGh^#>S\"p6F");
      StrBuilder strBuilder1 = strBuilder0.deleteAll("");
      char[] charArray0 = new char[9];
      charArray0[0] = 'u';
      charArray0[1] = 'l';
      charArray0[2] = 'J';
      charArray0[3] = '/';
      charArray0[4] = '+';
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder2 = strBuilder1.append(stringBuffer0);
      charArray0[5] = 'b';
      charArray0[6] = 'r';
      charArray0[7] = 'y';
      charArray0[8] = 'b';
      // Undeclared exception!
      try { 
        strBuilder1.insert((-1837), charArray0, (-1837), (-1837));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1837
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3698);
      StrBuilder strBuilder1 = strBuilder0.append(3698);
      StrBuilder strBuilder2 = strBuilder0.deleteAll("n9sxVT");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[8];
      charArray0[0] = 'f';
      charArray0[1] = 'E';
      charArray0[2] = 'h';
      charArray0[3] = 'p';
      charArray0[4] = 'o';
      charArray0[5] = '|';
      charArray0[6] = '4';
      charArray0[7] = '*';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 3698, 3698);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 3698
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[5];
      charArray0[0] = 'v';
      charArray0[1] = '^';
      charArray0[2] = 'Y';
      charArray0[3] = 'Z';
      charArray0[4] = 'N';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      // Undeclared exception!
      try { 
        strBuilder0.replace(1444, 1444, "1EN?6\"fwSthL%9Tp");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append("");
      char[] charArray0 = new char[0];
      StrBuilder strBuilder2 = strBuilder1.append(charArray0);
      Writer writer0 = strBuilder1.asWriter();
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadLeft(0, 0, ';');
      int int0 = strBuilder0.indexOf('^', 0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      String string0 = "yRT6}Ao}pY]<p#s";
      StrBuilder strBuilder0 = new StrBuilder("yRT6}Ao}pY]<p#s");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char char0 = '\"';
      Writer writer0 = strBuilder_StrBuilderWriter0.append('\"');
      Writer writer1 = strBuilder_StrBuilderWriter0.append('\"');
      int int0 = (-2227);
      char[] charArray0 = new char[9];
      charArray0[0] = '\"';
      charArray0[1] = '\"';
      charArray0[2] = '\"';
      char char1 = '3';
      StringBuffer stringBuffer0 = new StringBuffer();
      stringBuffer0.setLength(421);
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, (-513), 38);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoredMatcher((StrMatcher) null);
      String string0 = strBuilder_StrBuilderTokenizer0.previousToken();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst((StrMatcher) null);
      StrBuilder strBuilder2 = strBuilder1.setLength(116);
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      boolean boolean0 = strBuilder0.equals(object0);
      int int0 = strBuilder2.lastIndexOf((StrMatcher) null, 1827);
      StrBuilder strBuilder3 = strBuilder2.trim();
      StringBuffer stringBuffer0 = strBuilder3.toStringBuffer();
      String string1 = strBuilder2.midString(0, 31);
      int int1 = strBuilder3.hashCode();
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 0, 102);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      char char0 = ' ';
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(' ');
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("Invalid offset: ");
      Object[] objectArray0 = new Object[0];
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators(objectArray0, "Vwa8 r`8F9D");
      StrBuilder strBuilder3 = strBuilder1.replace((StrMatcher) strMatcher_StringMatcher0, "XL78d\"jD$$pV=", 0, 1529, 0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrBuilder strBuilder4 = strBuilder0.deleteAll("Invalid offset: ");
      strBuilder_StrBuilderWriter0.write(2225);
      strBuilder_StrBuilderWriter0.flush();
      // Undeclared exception!
      try { 
        strBuilder1.insert(2225, (float) 2225);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2225
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.clear();
      char[] charArray0 = new char[3];
      charArray0[0] = '4';
      charArray0[1] = 'R';
      charArray0[2] = '%';
      StrBuilder strBuilder2 = strBuilder1.insert(0, charArray0, 3, 0);
      // Undeclared exception!
      try { 
        strBuilder1.insert(670, (Object) strBuilder0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 670
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Jx*ebRkD");
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      char[] charArray0 = new char[2];
      charArray0[0] = 'b';
      charArray0[1] = '7';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher("Jx*ebRkD");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "Jx*ebRkD");
      // Undeclared exception!
      try { 
        strBuilder0.delete(114, 97);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      char[] charArray0 = new char[2];
      charArray0[0] = '\'';
      charArray0[1] = 'a';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "");
      // Undeclared exception!
      try { 
        strBuilder0.charAt((-3612));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3612
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2906);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[2];
      charArray0[0] = '=';
      charArray0[1] = '@';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 0, 117);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 117
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(97);
      StrBuilder strBuilder1 = strBuilder0.setLength(5);
      strBuilder0.validateIndex(5);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-729), 816L);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -729
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = new StrBuilder(0);
      boolean boolean0 = strBuilder0.equals(strBuilder1);
      StrBuilder strBuilder2 = strBuilder1.replace(0, 1160, "Xp8i!0DSLx_Xeu%T `");
      char[] charArray0 = new char[8];
      charArray0[0] = 'Z';
      charArray0[1] = '!';
      charArray0[2] = 'G';
      charArray0[3] = '@';
      charArray0[4] = ',';
      charArray0[5] = 'b';
      charArray0[6] = '7';
      charArray0[7] = '1';
      // Undeclared exception!
      try { 
        strBuilder2.getChars(0, 115, charArray0, 115);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 115
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1);
      strBuilder0.size = 1;
      StrBuilder strBuilder1 = strBuilder0.insert(0, 1);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[3];
      charArray0[0] = ':';
      charArray0[1] = '[';
      charArray0[2] = 'C';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 1, (-2404));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(116);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      String string0 = "org.apache.commons.lang.text.StrBuilder$StrBuilderReader";
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrBuilder strBuilder2 = strBuilder0.append((char[]) null);
      // Undeclared exception!
      try { 
        strBuilder0.delete(116, 116);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[4];
      charArray0[0] = '=';
      charArray0[1] = 'K';
      charArray0[2] = 'O';
      charArray0[3] = 'V';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 1925, (-741));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      int int0 = 2458;
      StrBuilder strBuilder0 = new StrBuilder(2458);
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      char[] charArray0 = new char[2];
      charArray0[0] = 'I';
      charArray0[1] = '.';
      String string0 = strBuilder0.leftString(1398);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      int int1 = strBuilder0.indexOf((StrMatcher) strMatcher_NoMatcher0);
      String string1 = strBuilder0.getNewLineText();
      int int2 = strBuilder0.capacity();
      int int3 = 295;
      int int4 = strBuilder0.indexOf((String) null, 295);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.replaceFirst(strMatcher0, "EQ3}$@GX");
      int int5 = (-1935);
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, (-1935), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher((char[]) null);
      StrMatcher strMatcher2 = StrMatcher.stringMatcher((String) null);
      StrMatcher strMatcher3 = StrMatcher.charSetMatcher("K|GR");
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.replaceAll("K|GR", "K|GR");
      StrMatcher strMatcher4 = StrMatcher.stringMatcher((String) null);
      StrBuilder strBuilder2 = strBuilder1.insert(0, (double) 0);
      StrBuilder strBuilder3 = strBuilder0.deleteAll('s');
      StrBuilder strBuilder4 = strBuilder3.replaceAll(strMatcher3, (String) null);
      StrBuilder strBuilder5 = strBuilder0.replaceAll("K|GR", "?oOr]^Ur`|fQ%`.w");
      StrBuilder strBuilder6 = strBuilder2.append(0L);
      StrBuilder strBuilder7 = strBuilder6.append((-297.102732583));
      char char0 = strBuilder4.charAt(0);
      StrBuilder strBuilder8 = strBuilder2.replaceAll(strMatcher0, (String) null);
      StrBuilder strBuilder9 = strBuilder4.appendFixedWidthPadLeft((Object) strBuilder0, 1186, 's');
      String string0 = strBuilder5.rightString(1186);
      StrBuilder strBuilder10 = strBuilder2.minimizeCapacity();
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrBuilder strBuilder2 = strBuilder1.deleteFirst("");
      boolean boolean0 = strBuilder0.equals((Object) strBuilder1);
      StrBuilder strBuilder3 = strBuilder1.ensureCapacity(0);
      StrBuilder strBuilder4 = strBuilder0.append(2747);
      StrBuilder strBuilder5 = strBuilder4.clear();
      StrBuilder strBuilder6 = strBuilder1.appendFixedWidthPadLeft((Object) strBuilder4, 556, 'x');
      int int0 = strBuilder2.hashCode();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder6.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      int int1 = strBuilder6.indexOf(strMatcher0);
      String string0 = strBuilder3.rightString(1130);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder4.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("q\"Xw'8`v<`M(q?{");
      char[] charArray0 = strBuilder0.getChars((char[]) null);
      StrBuilder strBuilder1 = strBuilder0.insert(0, (Object) "q\"Xw'8`v<`M(q?{");
      char char0 = strBuilder0.charAt(0);
      StrBuilder strBuilder2 = strBuilder0.appendNewLine();
      StrBuilder strBuilder3 = strBuilder0.append((StringBuffer) null);
      Writer writer0 = strBuilder1.asWriter();
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceAll("iZ4F-Ic\u0005,j", (String) null);
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      // Undeclared exception!
      try { 
        strBuilder0.charAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(' ');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[3];
      charArray0[0] = ' ';
      charArray0[1] = ' ';
      charArray0[2] = ' ';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 39, 39);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 39
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      String string0 = "h<U&#=0m IGcn3";
      StrBuilder strBuilder0 = new StrBuilder("h<U&#=0m IGcn3");
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((Object) strBuilder1, (-807), 'i');
      Reader reader0 = strBuilder0.asReader();
      // Undeclared exception!
      try { 
        strBuilder0.insert((-2042), true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2042
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = strBuilder0.toCharArray();
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2372);
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) strBuilder0;
      objectArray0[3] = (Object) strBuilder0;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance((char[]) null);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(2372, 1, 'm');
      objectArray0[4] = object0;
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators(objectArray0, "length must be valid");
      String string0 = strBuilder2.leftString(2671);
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      boolean boolean0 = strBuilder0.endsWith("length must be valid");
      StrBuilder strBuilder3 = strBuilder0.appendWithSeparators((Iterator) strBuilder_StrBuilderTokenizer0, "length must be valid");
      int int1 = strBuilder3.indexOf(strMatcher0, 2671);
      int int2 = strBuilder0.lastIndexOf(strMatcher0, 66);
      // Undeclared exception!
      try { 
        strBuilder1.replace((-1), (-1714), "java.class.path");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) strBuilder0;
      objectArray0[3] = (Object) strBuilder0;
      objectArray0[4] = (Object) strBuilder0;
      Object object0 = new Object();
      objectArray0[5] = object0;
      objectArray0[6] = (Object) strBuilder0;
      objectArray0[7] = (Object) strBuilder0;
      objectArray0[8] = (Object) strBuilder0;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "8vT58<F4");
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      Object[] objectArray0 = new Object[0];
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators(objectArray0, "");
      int int0 = strBuilder0.indexOf("", 0);
      String string0 = strBuilder0.rightString((-238));
      boolean boolean0 = strBuilder0.isEmpty();
      StrBuilder strBuilder3 = strBuilder0.append(678.9901);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.rightString((-1834));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0, 0);
      // Undeclared exception!
      try { 
        strBuilder0.getChars((-134), (-134), (char[]) null, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -134
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("TNBt");
      Reader reader0 = strBuilder0.asReader();
      // Undeclared exception!
      try { 
        strBuilder0.getChars(32, 0, (char[]) null, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('!');
      StrBuilder strBuilder2 = strBuilder1.insert(0, (float) 0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<String> linkedList1 = new LinkedList<String>(linkedList0);
      boolean boolean0 = linkedList1.add("Co8|jj$C-cgL!MQ");
      StrBuilder strBuilder3 = strBuilder0.appendWithSeparators((Collection) linkedList1, "xDzsOrLvzL$u)ZFZS");
      boolean boolean1 = linkedList1.offerLast("xDzsOrLvzL$u)ZFZS");
      StrBuilder strBuilder4 = strBuilder3.deleteFirst("&_");
      StrBuilder strBuilder5 = strBuilder4.clear();
      String string0 = strBuilder4.rightString(0);
      String string1 = strBuilder2.leftString(0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      char[] charArray0 = new char[6];
      charArray0[0] = '!';
      charArray0[1] = '`';
      charArray0[2] = '!';
      charArray0[3] = '!';
      charArray0[4] = '!';
      charArray0[5] = '1';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0, 0, 0);
      linkedList0.clear();
      strBuilder_StrBuilderReader0.reset();
      StrBuilder strBuilder6 = strBuilder4.append('$');
      int int1 = strBuilder4.lastIndexOf("tve|;%YY_'");
      // Undeclared exception!
      try { 
        strBuilder3.insert((-1), 114);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-239));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[4];
      charArray0[0] = ',';
      charArray0[1] = 'O';
      charArray0[2] = '*';
      charArray0[3] = 'I';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0);
      int int1 = strBuilder_StrBuilderReader0.read();
      StrBuilder strBuilder1 = strBuilder0.append((Object) strBuilder_StrBuilderReader0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[2];
      charArray0[0] = '+';
      charArray0[1] = 'e';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 470, 4819);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendPadding(4, 'g');
      StrBuilder strBuilder2 = strBuilder0.appendPadding(0, 'N');
      StrBuilder strBuilder3 = strBuilder2.insert(4, 0.0);
      String string0 = strBuilder0.leftString(0);
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder4 = strBuilder0.clear();
      StrBuilder strBuilder5 = strBuilder0.appendPadding(4, 'g');
      StrBuilder strBuilder6 = strBuilder5.clear();
      StrBuilder strBuilder7 = strBuilder5.insert(0, (long) 0);
      String string1 = strBuilder7.substring(0, 0);
      int int0 = strBuilder7.lastIndexOf("org.apache.commons.lang.text.StrMatcher$TrimMatcher", 4);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("XC7blD)g8H<Cj^]");
      StrBuilder strBuilder1 = strBuilder0.setLength(0);
      StrBuilder strBuilder2 = strBuilder0.deleteFirst("XC7blD)g8H<Cj^]");
      StrBuilder strBuilder3 = strBuilder2.replaceAll("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter", "");
      strBuilder0.validateIndex(0);
      StrBuilder strBuilder4 = strBuilder0.trim();
      StrBuilder strBuilder5 = strBuilder0.appendFixedWidthPadLeft(0, 0, '>');
      String string0 = strBuilder0.getNewLineText();
      StrBuilder strBuilder6 = strBuilder5.replaceFirst('>', '>');
      StrBuilder strBuilder7 = strBuilder1.append("!$ejySF", 0, 0);
      int int0 = strBuilder5.indexOf('Q');
      int int1 = strBuilder5.hashCode();
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(834);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("");
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      int int0 = strBuilder0.indexOf((StrMatcher) null);
      int int1 = strBuilder0.lastIndexOf((StrMatcher) null, (-1273));
      StrBuilder strBuilder1 = strBuilder0.appendPadding(0, 'u');
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder2 = strBuilder1.ensureCapacity(0);
      boolean boolean0 = linkedList0.offer("#%?i{");
      StrBuilder strBuilder3 = strBuilder0.insert(0, (-2231L));
      StrBuilder strBuilder4 = strBuilder1.appendWithSeparators((Collection) linkedList0, "uS,{c@ssaOWfGNxX!:");
      Object object0 = new Object();
      StrBuilder strBuilder5 = strBuilder4.append(object0);
      StrBuilder strBuilder6 = strBuilder0.append(true);
      StrBuilder strBuilder7 = strBuilder6.deleteAll('1');
      StrBuilder strBuilder8 = strBuilder7.minimizeCapacity();
      StrBuilder strBuilder9 = strBuilder0.setLength(108);
      char[] charArray0 = strBuilder0.toCharArray();
      String string0 = strBuilder9.rightString(0);
      StrBuilder strBuilder10 = strBuilder0.appendWithSeparators((Collection) null, "T#wW");
      String string1 = strBuilder6.getNewLineText();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder9.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder7.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("~I6");
      char[] charArray0 = new char[9];
      charArray0[0] = 'D';
      charArray0[1] = 'I';
      charArray0[2] = 'x';
      charArray0[3] = ']';
      charArray0[4] = 'T';
      charArray0[5] = '`';
      charArray0[6] = '#';
      charArray0[7] = 'N';
      charArray0[8] = 'b';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "~I6");
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      StrBuilder strBuilder2 = strBuilder1.replaceAll("", "java.home");
      int int0 = (-3684);
      // Undeclared exception!
      try { 
        strBuilder2.substring((-3684));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3684
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "java.awt.headless");
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft(1571, 1571, '%');
      StrBuilder strBuilder3 = strBuilder0.appendNewLine();
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrBuilder strBuilder2 = strBuilder0.append("org.apache.commons.lang.text.StrMatcher$NoMatcher", 0, 0);
      boolean boolean0 = strBuilder0.contains("");
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrBuilder strBuilder3 = strBuilder1.replaceAll(strMatcher0, "");
      StrTokenizer strTokenizer0 = strBuilder3.asTokenizer();
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 1310;
      // Undeclared exception!
      try { 
        strBuilder0.insert(1310, true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1310
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("KQ_]5*sc");
      // Undeclared exception!
      try { 
        strBuilder0.substring(1452);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceAll("", "2r:K# 3=($-h[<Y*?");
      StrBuilder strBuilder2 = strBuilder1.replaceFirst("2r:K# 3=($-h[<Y*?", "6pS#[34~");
      StrBuilder strBuilder3 = strBuilder2.setNewLineText("So'4");
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        strBuilder0.insert(2026, (-1806.166141534));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2026
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.append(0L);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.substring((-2128));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2128
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      int int0 = 941;
      StrBuilder strBuilder0 = new StrBuilder(941);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder0.leftString(941);
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      StrBuilder strBuilder1 = strBuilder0.append(object0);
      String string1 = strBuilder0.leftString(941);
      char char0 = ']';
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(941, ']');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 941
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("\"y]#5pS=S8,@8h");
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder strBuilder1 = strBuilder0.append((char[]) null);
      int int0 = strBuilder0.lastIndexOf((StrMatcher) null, 2);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      boolean boolean0 = strBuilder0.contains('I');
      StrBuilder strBuilder2 = strBuilder0.setNewLineText("\"y]#5pS=S8,@8h");
      strBuilder2.buffer = null;
      // Undeclared exception!
      try { 
        strBuilder2.leftString(2);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2157);
      char[] charArray0 = new char[3];
      charArray0[0] = 'e';
      charArray0[1] = '|';
      charArray0[2] = 'm';
      strBuilder0.buffer = charArray0;
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(2157, 'u');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2157
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("[P");
      int int0 = strBuilder0.lastIndexOf("[P");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('h');
      StrBuilder strBuilder2 = strBuilder1.append((String) null);
      StrBuilder strBuilder3 = strBuilder0.setCharAt(0, 'c');
      boolean boolean0 = strBuilder1.isEmpty();
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("J&0");
      int int0 = 2430;
      StrBuilder strBuilder1 = strBuilder0.setLength(2430);
      char char0 = '^';
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('^');
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("org.apache.commons.lang.text.StrBuilder");
      int int1 = strBuilder1.indexOf((StrMatcher) strMatcher_CharMatcher0, 2430);
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder2 = strBuilder0.replaceFirst("J&0", "G}Y");
      StrBuilder strBuilder3 = strBuilder0.deleteAll('^');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      StrBuilder strBuilder4 = strBuilder1.clear();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('>');
      char[] charArray0 = new char[7];
      charArray0[0] = '^';
      StrMatcher strMatcher2 = StrMatcher.stringMatcher("spb");
      StrBuilder strBuilder5 = strBuilder3.clear();
      String string0 = "org.apache.commons.lang.text.StrBuilder$StrBuilderReader";
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", (-1641), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("^");
      String string0 = strBuilder0.getNullText();
      StrBuilder strBuilder1 = strBuilder0.deleteAll('L');
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Collection) null, "J(.(:e$&&w");
      int int0 = strBuilder0.capacity();
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(",FHudi>K");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = null;
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterMatcher((StrMatcher) null);
      String string0 = "KZio4hyN";
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "KZio4hyN");
      StrBuilder strBuilder2 = strBuilder0.replaceFirst(",FHudi>K", ",FHudi>K");
      StrBuilder strBuilder3 = strBuilder2.replaceFirst(",FHudi>K", "4.9");
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder4 = strBuilder3.append(stringBuffer0);
      StrBuilder strBuilder5 = strBuilder4.append(0.0F);
      // Undeclared exception!
      try { 
        strBuilder2.substring(1649, 9);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer", (-14), (-14));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((-339));
      StrBuilder strBuilder2 = strBuilder0.setLength(39);
      Reader reader0 = strBuilder0.asReader();
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(",FHudi>K");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = null;
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterMatcher((StrMatcher) null);
      String string0 = "KZio4hyN";
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "KZio4hyN");
      StrBuilder strBuilder2 = strBuilder0.replaceFirst(",FHudi>K", "un");
      StrBuilder strBuilder3 = strBuilder2.replaceFirst(",FHudi>K", "4.9");
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder4 = strBuilder3.append(stringBuffer0);
      StrBuilder strBuilder5 = strBuilder4.append(0.0F);
      // Undeclared exception!
      try { 
        strBuilder2.substring(1649, 9);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      boolean boolean0 = strBuilder0.endsWith("");
      StrBuilder strBuilder1 = strBuilder0.append(true);
      StrBuilder strBuilder2 = strBuilder0.replace(3, 2088, "[%19tqQ-5]0");
      StrBuilder strBuilder3 = strBuilder0.setNullText("");
      StrBuilder strBuilder4 = strBuilder3.append((Object) "");
      StrBuilder strBuilder5 = strBuilder4.replaceFirst((String) null, "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      StrBuilder strBuilder6 = strBuilder5.insert(5, "");
      char[] charArray0 = strBuilder0.toCharArray();
      int int0 = strBuilder0.lastIndexOf("b_~,J[sN", (-1296));
      int int1 = strBuilder3.lastIndexOf('e');
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("ny1B`sRsY>nV");
      StrBuilder strBuilder1 = strBuilder0.replaceAll("ny1B`sRsY>nV", "");
      // Undeclared exception!
      try { 
        strBuilder1.insert(211, (Object) "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 211
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("e{4yvk#!~m_U&");
      int int0 = strBuilder0.lastIndexOf('H');
      strBuilder0.validateIndex(0);
      String string0 = strBuilder0.rightString(0);
      StrBuilder strBuilder1 = strBuilder0.deleteAll((String) null);
      // Undeclared exception!
      try { 
        strBuilder1.insert(755, (-516.4F));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 755
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrBuilder strBuilder2 = strBuilder0.clear();
      StrBuilder strBuilder3 = strBuilder0.replaceAll('x', 'x');
      // Undeclared exception!
      try { 
        strBuilder3.insert(9, (float) 9);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 9
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("eQ?++{dc");
      // Undeclared exception!
      try { 
        strBuilder0.insert((-5001), (-137));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -5001
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      String string0 = "[C4(J9,{1";
      int int0 = (-252);
      // Undeclared exception!
      try { 
        strBuilder0.replace(strMatcher0, "[C4(J9,{1", (-252), (-252), (-252));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -252
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray((-54), (-54));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -54
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = 'C';
      StrBuilder strBuilder1 = strBuilder0.append('C');
      StrBuilder strBuilder2 = strBuilder1.trim();
      // Undeclared exception!
      try { 
        strBuilder2.validateIndex((-2857));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2857
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteAll('N');
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft(1350, 1350, 'V');
      StrBuilder strBuilder3 = strBuilder0.trim();
      StrBuilder strBuilder4 = strBuilder3.clear();
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      int int0 = strBuilder4.indexOf(strMatcher0);
      StrBuilder strBuilder5 = strBuilder3.append('V');
      int int1 = strBuilder0.length();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder4.new StrBuilderWriter();
      StrTokenizer strTokenizer0 = strBuilder4.asTokenizer();
      String string0 = "";
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("", 1, 1350);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.toString();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      boolean boolean0 = strBuilder0.equals(object0);
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("Toj'3d~\"yx'c6");
      int int0 = strBuilder0.indexOf((StrMatcher) strMatcher_StringMatcher0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "Toj'3d~\"yx'c6");
      StrTokenizer strTokenizer0 = strBuilder1.asTokenizer();
      StrBuilder strBuilder2 = strBuilder0.deleteAll((StrMatcher) strMatcher_StringMatcher0);
      StrBuilder strBuilder3 = strBuilder2.setNewLineText("Toj'3d~\"yx'c6");
      // Undeclared exception!
      try { 
        strBuilder0.replace((-1), (-1), "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteAll((StrMatcher) null);
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      StrBuilder strBuilder3 = strBuilder2.setNewLineText("(de:,9;Om");
      int int0 = strBuilder0.lastIndexOf('P', (-1));
      Writer writer0 = strBuilder1.asWriter();
      StrBuilder strBuilder4 = strBuilder2.clear();
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
      boolean boolean0 = strBuilder1.contains('2');
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-801));
      StrBuilder strBuilder1 = strBuilder0.replaceAll('V', 'i');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip((-1912L));
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark((-1075));
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.append("\"oTE^*", 0, 0);
      int int0 = strBuilder0.length();
      StrBuilder strBuilder2 = strBuilder0.insert(0, '\\');
      StrBuilder strBuilder3 = strBuilder2.append(32);
      StrBuilder strBuilder4 = strBuilder3.append(true);
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrBuilder strBuilder5 = strBuilder4.replaceAll((StrMatcher) strMatcher_NoMatcher0, "_KcPt");
      StrBuilder strBuilder6 = strBuilder5.appendFixedWidthPadRight(0, 0, '\\');
      StrBuilder strBuilder7 = strBuilder2.setLength(1712);
      StrBuilder strBuilder8 = strBuilder2.delete(32, 109);
      StrBuilder strBuilder9 = strBuilder2.append((-1));
      StrBuilder strBuilder10 = strBuilder0.append(strBuilder3);
      boolean boolean0 = strBuilder9.contains("user.country");
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      int int1 = strBuilder10.indexOf(strMatcher0);
      int int2 = strBuilder4.lastIndexOf("2 89whJ3U?/MF%,C%", (-1102));
      int int3 = strBuilder6.size();
      StrBuilder strBuilder11 = strBuilder10.setNewLineText("");
      int int4 = StrBuilder.CAPACITY;
      // Undeclared exception!
      try { 
        strBuilder9.toCharArray(199, (-2027));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      int int0 = strBuilder0.indexOf((StrMatcher) null);
      int int1 = strBuilder0.lastIndexOf((StrMatcher) null, (-1273));
      StrBuilder strBuilder1 = strBuilder0.appendPadding(0, 'u');
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder2 = strBuilder1.ensureCapacity(0);
      boolean boolean0 = linkedList0.offer("#%?i{");
      StrBuilder strBuilder3 = strBuilder0.insert(0, (-2231L));
      StrBuilder strBuilder4 = strBuilder1.appendWithSeparators((Collection) linkedList0, "uS,{c@ssaOWfGNxX!:");
      Object object0 = new Object();
      StrBuilder strBuilder5 = strBuilder4.append(object0);
      StrBuilder strBuilder6 = strBuilder0.append(true);
      StrBuilder strBuilder7 = strBuilder6.deleteAll('1');
      StrBuilder strBuilder8 = strBuilder7.minimizeCapacity();
      StrBuilder strBuilder9 = strBuilder0.setLength(108);
      char[] charArray0 = strBuilder0.toCharArray();
      String string0 = strBuilder9.rightString(0);
      StrBuilder strBuilder10 = strBuilder0.appendWithSeparators((Collection) null, "T#wW");
      String string1 = strBuilder6.getNewLineText();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder9.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      strBuilder_StrBuilderReader0.close();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder7.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
      StrBuilder strBuilder11 = strBuilder8.appendNewLine();
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder("");
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1743), (Object) strBuilder1);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1743
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('T');
      StrMatcher strMatcher2 = StrMatcher.stringMatcher("<Hu");
      StrMatcher strMatcher3 = StrMatcher.stringMatcher("', is neither of type Map.Entry nor an Array");
      int int0 = strBuilder0.indexOf(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(0);
      char[] charArray0 = new char[0];
      StrBuilder strBuilder2 = strBuilder0.append(charArray0, 0, 0);
      strBuilder2.validateIndex(0);
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "startndex must be valid");
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Collection) linkedList0, "startndex must be valid");
      int int0 = strBuilder1.lastIndexOf(strMatcher0);
      String string0 = strBuilder0.rightString((-1));
      StrBuilder strBuilder3 = strBuilder0.append(97);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(0L);
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[2];
      char char0 = 'v';
      // Undeclared exception!
      try { 
        strBuilder0.insert(311, true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 311
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("Qm@Gc");
      char[] charArray0 = new char[7];
      charArray0[0] = 'g';
      charArray0[1] = 'S';
      charArray0[2] = '5';
      charArray0[3] = '2';
      charArray0[4] = '?';
      charArray0[5] = 'P';
      charArray0[6] = '9';
      strBuilder1.size = (int) '2';
      // Undeclared exception!
      try { 
        strBuilder0.equals((StrBuilder) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("9H'<MV");
      strBuilder0.validateIndex(0);
      char[] charArray0 = strBuilder0.toCharArray();
      StrBuilder strBuilder1 = strBuilder0.deleteAll('a');
      StrMatcher strMatcher0 = StrMatcher.charMatcher('a');
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      int int1 = strBuilder1.lastIndexOf('a');
      String string0 = strBuilder0.rightString((-1));
      char[] charArray1 = new char[8];
      charArray1[0] = 'a';
      charArray1[1] = 'a';
      charArray1[2] = 'a';
      charArray1[3] = 'a';
      charArray1[4] = 'a';
      charArray1[5] = 'a';
      charArray1[6] = 'a';
      charArray1[7] = 'a';
      // Undeclared exception!
      try { 
        strBuilder1.insert((-1), charArray1);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setNullText("org.apache.commons.lang.text.StrBuilder");
      StrBuilder strBuilder2 = strBuilder0.append((-1116.2F));
      Writer writer0 = strBuilder1.asWriter();
      StrBuilder strBuilder3 = strBuilder0.replaceAll('\"', 'I');
      StrBuilder strBuilder4 = strBuilder1.replaceFirst("org.apache.commons.lang.text.StrBuilder", "user.name");
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      char[] charArray0 = new char[7];
      charArray0[0] = '\"';
      charArray0[1] = '\"';
      charArray0[2] = 'I';
      charArray0[3] = 'I';
      charArray0[4] = '\"';
      charArray0[5] = 'I';
      charArray0[6] = 'I';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder5 = strBuilder4.deleteFirst(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder2.append(strBuilder3, (-3059), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }
}
