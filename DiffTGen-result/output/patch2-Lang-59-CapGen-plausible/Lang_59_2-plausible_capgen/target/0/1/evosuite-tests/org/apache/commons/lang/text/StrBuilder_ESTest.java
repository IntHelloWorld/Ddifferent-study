/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 28 18:12:17 GMT 2020
 */

package org.apache.commons.lang.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.Writer;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.NoSuchElementException;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import org.apache.commons.lang.text.StrBuilder;
import org.apache.commons.lang.text.StrMatcher;
import org.apache.commons.lang.text.StrTokenizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StrBuilder_ESTest extends StrBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      char[] charArray0 = new char[2];
      charArray0[0] = 'j';
      charArray0[1] = 'Z';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      int int0 = strBuilder0.size();
      StrBuilder strBuilder2 = strBuilder1.append((float) 2);
      int int1 = strBuilder1.indexOf("");
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      char[] charArray0 = new char[3];
      charArray0[0] = 'o';
      charArray0[1] = '<';
      charArray0[2] = 'M';
      strBuilder0.buffer = charArray0;
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      char[] charArray1 = new char[9];
      charArray1[0] = '<';
      charArray1[1] = 'M';
      charArray1[2] = '<';
      charArray1[3] = 'M';
      charArray1[4] = 'M';
      charArray1[5] = '<';
      charArray1[6] = 'o';
      charArray1[7] = 'M';
      charArray1[8] = 'o';
      char[] charArray2 = strBuilder0.getChars(charArray1);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = new StrBuilder("_5VVp,");
      StrBuilder strBuilder2 = new StrBuilder("_5VVp,");
      boolean boolean0 = strBuilder0.equals((Object) strBuilder1);
      StringBuffer stringBuffer0 = new StringBuffer("WF:K4)?S$uT");
      StrBuilder strBuilder3 = strBuilder1.append(stringBuffer0, 0, 0);
      int int0 = strBuilder0.lastIndexOf((String) null);
      StrBuilder strBuilder4 = new StrBuilder("_5VVp,");
      StrBuilder strBuilder5 = strBuilder4.append('c');
      Object object0 = new Object();
      StrBuilder strBuilder6 = strBuilder5.insert(0, object0);
      boolean boolean1 = strBuilder1.contains('c');
      StrBuilder strBuilder7 = strBuilder5.trim();
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      int int1 = 15;
      char char0 = 'K';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(0, 15, 'K');
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      int int2 = strBuilder1.indexOf((StrMatcher) strMatcher_NoMatcher0);
      StrBuilder strBuilder2 = strBuilder1.insert(0, 'K');
      // Undeclared exception!
      try { 
        strBuilder2.insert((-1), false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(488);
      StrBuilder strBuilder1 = strBuilder0.setLength(488);
      StrBuilder strBuilder2 = new StrBuilder("W-oyC`q*<7v?;lY");
      int int0 = strBuilder2.length();
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder2, 488, 488);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2698);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder0.toString();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      char[] charArray0 = new char[1];
      String[] stringArray0 = strBuilder_StrBuilderTokenizer0.getTokenArray();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('%');
      charArray0[0] = '%';
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterChar('t');
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder0.indexOf(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) "", 2698, 'M');
      Writer writer0 = strBuilder1.asWriter();
      StrBuilder strBuilder2 = strBuilder0.appendNewLine();
      StrBuilder strBuilder3 = strBuilder2.deleteAll((String) null);
      boolean boolean0 = strBuilder1.contains("");
      Object[] objectArray0 = new Object[0];
      StrBuilder strBuilder4 = strBuilder1.appendWithSeparators(objectArray0, "");
      // Undeclared exception!
      try { 
        strBuilder0.getChars(Integer.MAX_VALUE, 1457, charArray0, 42);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder1.append(0.0F);
      String string0 = strBuilder0.midString((-254), 31);
      StrBuilder strBuilder3 = strBuilder0.append(false);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      char[] charArray0 = new char[7];
      charArray0[0] = '(';
      charArray0[1] = '?';
      charArray0[2] = ':';
      charArray0[3] = 'X';
      charArray0[4] = 'f';
      charArray0[5] = '&';
      charArray0[6] = 'z';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 5, 0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      char[] charArray0 = null;
      StrBuilder strBuilder1 = strBuilder0.append((char[]) null);
      char char0 = '|';
      int int0 = strBuilder0.lastIndexOf('|');
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight((Object) strBuilder1, (-3175), '|');
      int int1 = (-23);
      // Undeclared exception!
      try { 
        strBuilder1.delete((-23), (-23));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -23
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      String string0 = null;
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.appendPadding((-3), 'q');
      int int0 = 651;
      StringBuffer stringBuffer0 = strBuilder1.toStringBuffer();
      // Undeclared exception!
      try { 
        strBuilder1.append(stringBuffer0, 651, 192);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[8];
      charArray0[0] = 'q';
      charArray0[1] = 'q';
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("");
      StrBuilder strBuilder2 = strBuilder1.deleteAll('q');
      charArray0[2] = '&';
      charArray0[3] = 'T';
      charArray0[4] = 'b';
      charArray0[5] = '4';
      charArray0[6] = 'z';
      charArray0[7] = 'k';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("java.runtime.version");
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder3 = strBuilder0.replaceFirst(strMatcher0, "length must be valid");
      StringBuffer stringBuffer0 = strBuilder3.toStringBuffer();
      StrBuilder strBuilder4 = strBuilder3.append(0L);
      String string0 = strBuilder0.leftString(0);
      int int0 = strBuilder3.length();
      String string1 = strBuilder0.substring(0, 1);
      int int1 = strBuilder4.indexOf('T', 963);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.endsWith("");
      int int0 = strBuilder0.lastIndexOf("");
      // Undeclared exception!
      try { 
        strBuilder0.validateRange(2315, 1549);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("The Array must not be null");
      StrBuilder strBuilder1 = strBuilder0.deleteCharAt(0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      StrBuilder strBuilder1 = strBuilder0.replace(strMatcher0, "", 0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrBuilder strBuilder1 = strBuilder0.append("`H");
      long long0 = strBuilder_StrBuilderReader0.skip(721L);
      char[] charArray0 = new char[6];
      charArray0[0] = 'e';
      charArray0[1] = 'l';
      charArray0[2] = 'k';
      charArray0[3] = '&';
      charArray0[3] = '!';
      charArray0[5] = 'M';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder0.indexOf(strMatcher0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("`H");
      StrBuilder strBuilder2 = strBuilder1.replaceFirst(strMatcher0, "`H");
      strBuilder_StrBuilderWriter0.close();
      int int1 = strBuilder1.indexOf(strMatcher0, 4);
      StrBuilder strBuilder3 = new StrBuilder();
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) strBuilder0;
      objectArray0[3] = (Object) strBuilder0;
      objectArray0[4] = (Object) strBuilder0;
      objectArray0[5] = (Object) strBuilder0;
      objectArray0[6] = (Object) strBuilder0;
      objectArray0[7] = (Object) strBuilder0;
      String string0 = strBuilder0.leftString(0);
      objectArray0[8] = (Object) strBuilder0;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "+rQ\"BZ");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      char[] charArray0 = new char[9];
      charArray0[0] = 'x';
      charArray0[1] = 'i';
      charArray0[2] = '\'';
      charArray0[3] = 'U';
      charArray0[4] = '~';
      charArray0[5] = 'W';
      charArray0[6] = '#';
      charArray0[7] = '_';
      charArray0[8] = '%';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder2 = strBuilder1.replaceFirst(strMatcher0, "");
      StrBuilder strBuilder3 = strBuilder1.replace(402, 4390, "g>");
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      String string0 = "r";
      StrBuilder strBuilder0 = new StrBuilder("r");
      StrBuilder strBuilder1 = new StrBuilder("r");
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("r");
      StrBuilder strBuilder2 = strBuilder1.replaceFirst(strMatcher0, "r");
      int int0 = 313;
      char char0 = '{';
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight((Object) strBuilder1, 313, '{');
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      int int0 = (-1677);
      StrBuilder strBuilder0 = new StrBuilder((-1677));
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) null, "length must be valid");
      boolean boolean0 = strBuilder0.equals((Object) ",^u#DgU}Z'nKHVk");
      char char0 = 'N';
      int int1 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.charAt(902);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 902
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setNullText("I']',&~}tkf{Z|`.P");
      CharBuffer charBuffer0 = CharBuffer.allocate(401);
      StrBuilder strBuilder2 = new StrBuilder();
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder2);
      StringBuffer stringBuffer0 = new StringBuffer();
      StringBuffer stringBuffer1 = stringBuffer0.append("startIndex must be valid");
      StrBuilder strBuilder4 = strBuilder0.append(stringBuffer0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      StrBuilder strBuilder5 = strBuilder2.appendWithSeparators((Collection) null, "I']',&~}tkf{Z|`.P");
      int int1 = strBuilder_StrBuilderReader0.read();
      // Undeclared exception!
      try { 
        strBuilder2.setCharAt(44, 'I');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 44
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("y_8R1yDU");
      int int0 = 1595;
      StrBuilder strBuilder1 = new StrBuilder("y_8R1yDU");
      StrBuilder strBuilder2 = strBuilder1.ensureCapacity(1595);
      // Undeclared exception!
      try { 
        strBuilder0.insert(1595, (Object) strBuilder1);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1595
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("dK71bqf?I-&F");
      int int0 = (-1202);
      StrBuilder strBuilder1 = strBuilder0.trim();
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight(2005, 1897, 'I');
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[8];
      charArray0[0] = 'q';
      charArray0[1] = '.';
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("");
      charArray0[2] = '&';
      charArray0[3] = 'T';
      charArray0[4] = 'b';
      charArray0[5] = '4';
      charArray0[6] = 'z';
      charArray0[7] = 'k';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("java.runtime.version");
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder2 = strBuilder0.replaceFirst(strMatcher0, "length must be valid");
      StringBuffer stringBuffer0 = strBuilder2.toStringBuffer();
      StrBuilder strBuilder3 = strBuilder2.append(0L);
      String string0 = strBuilder0.leftString(0);
      int int0 = strBuilder2.length();
      String string1 = strBuilder0.substring(0, 1);
      int int1 = strBuilder3.indexOf('T', 963);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("startIndex must be valid");
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      String string0 = strBuilder0.leftString((-2195));
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("F)-:]$s_");
      StrBuilder strBuilder1 = strBuilder0.setLength(0);
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher("F)-:]$s_");
      int int0 = strBuilder0.indexOf(strMatcher0, (-862));
      StrBuilder strBuilder2 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      int int1 = strBuilder_StrBuilderReader0.read();
      int int2 = strBuilder_StrBuilderReader0.read();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      StrBuilder strBuilder3 = strBuilder2.replaceFirst("++jlufOc:%5u'OkX%%c", "++jlufOc:%5u'OkX%%c");
      boolean boolean1 = strBuilder0.isEmpty();
      int int3 = strBuilder3.indexOf('-', 0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(382);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "c");
      StrBuilder strBuilder2 = strBuilder0.replaceAll('J', 'J');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      char[] charArray0 = new char[9];
      charArray0[0] = 'J';
      charArray0[1] = 'J';
      charArray0[2] = 'J';
      charArray0[3] = '/';
      charArray0[4] = 'J';
      charArray0[5] = 'J';
      charArray0[6] = 'J';
      charArray0[7] = 'J';
      charArray0[8] = 'J';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, (-1828), 0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(382);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "c");
      StrBuilder strBuilder2 = strBuilder0.replaceAll('J', 'J');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      char[] charArray0 = new char[9];
      charArray0[1] = 'J';
      charArray0[2] = 'J';
      charArray0[3] = '/';
      charArray0[4] = 'J';
      charArray0[5] = 'J';
      charArray0[6] = 'J';
      charArray0[7] = 'J';
      charArray0[8] = 'J';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, (-1828), 0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-178));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[6];
      charArray0[0] = 'M';
      charArray0[1] = ';';
      charArray0[2] = 's';
      charArray0[3] = '*';
      charArray0[4] = ':';
      charArray0[5] = '{';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = strBuilder_StrBuilderReader0.read(charBuffer0);
      strBuilder_StrBuilderReader0.close();
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = '2';
      int int0 = 2286;
      StrBuilder strBuilder1 = strBuilder0.setNullText("1.5");
      String string0 = null;
      StrBuilder strBuilder2 = strBuilder1.replaceFirst((String) null, "1.5");
      // Undeclared exception!
      try { 
        strBuilder0.charAt(2286);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2286
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setNullText("JKa&mG +clB%K3c");
      StrBuilder strBuilder2 = strBuilder0.replaceFirst('#', '+');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      StrBuilder strBuilder3 = strBuilder0.deleteAll("java.vendor.url");
      char[] charArray0 = new char[8];
      charArray0[0] = '+';
      charArray0[1] = '#';
      charArray0[2] = 'z';
      charArray0[3] = '#';
      strBuilder_StrBuilderWriter0.write("JKa&mG +clB%K3c", 0, 0);
      charArray0[4] = '+';
      charArray0[5] = '#';
      charArray0[6] = '#';
      charArray0[7] = '+';
      strBuilder_StrBuilderWriter0.write(charArray0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, (-578), (-578));
      StrBuilder strBuilder4 = strBuilder1.replaceAll("?7xTP2kgXr%3", ";b~@*q~T:Vb>o:");
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.replaceAll("", "");
      StrBuilder strBuilder2 = strBuilder1.append((-243));
      StrBuilder strBuilder3 = strBuilder1.setNullText("");
      String string0 = strBuilder0.leftString(0);
      StrBuilder strBuilder4 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder4.new StrBuilderTokenizer();
      char[] charArray0 = new char[7];
      charArray0[0] = '@';
      charArray0[1] = 'C';
      charArray0[2] = '5';
      charArray0[3] = 'N';
      charArray0[4] = 'K';
      charArray0[5] = 'd';
      charArray0[6] = 'V';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 48, (-1));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder4.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 48, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder1 = strBuilder0.append(1505L);
      double double0 = 1093.327126381471;
      int int0 = 543;
      // Undeclared exception!
      try { 
        strBuilder1.charAt(543);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 543
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3785);
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.insert(0, (-1L));
      char char0 = ']';
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft(0, 0, ']');
      StrBuilder strBuilder3 = strBuilder2.insert(0, ", '");
      // Undeclared exception!
      try { 
        strBuilder0.replace(1449, 453, "C~,");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-787));
      StrBuilder strBuilder1 = strBuilder0.appendPadding(108, 'Y');
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft((Object) null, (-787), 'Y');
      // Undeclared exception!
      try { 
        strBuilder1.appendFixedWidthPadRight(108, 1693, 'd');
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      int int0 = (-264);
      StrBuilder strBuilder0 = new StrBuilder((-264));
      String string0 = "05o\\uf>{bFfa?:=aZ0I";
      // Undeclared exception!
      try { 
        strBuilder0.insert((-264), "java.ext.dirs");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -264
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.indexOf((String) null, (-789));
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      int int0 = 117;
      StrBuilder strBuilder0 = new StrBuilder(117);
      String string0 = "-Q?s O!$";
      boolean boolean0 = strBuilder0.startsWith("-Q?s O!$");
      Integer integer0 = new Integer(117);
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray(117, 117);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      int int0 = 117;
      StrBuilder strBuilder0 = new StrBuilder(117);
      int int1 = (-1405);
      StrBuilder strBuilder1 = strBuilder0.append((char[]) null, (-1405), (-1405));
      Writer writer0 = strBuilder0.asWriter();
      // Undeclared exception!
      try { 
        strBuilder1.insert(117, (float) 117);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 117
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      char[] charArray0 = new char[3];
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "?(au=");
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1, 0, 0);
      StrMatcher strMatcher0 = StrMatcher.charMatcher('K');
      StrBuilder strBuilder3 = strBuilder2.replaceFirst(strMatcher0, (String) null);
      Reader reader0 = strBuilder1.asReader();
      charArray0[0] = 'K';
      charArray0[1] = '=';
      charArray0[2] = 'Q';
      strBuilder0.buffer = charArray0;
      boolean boolean0 = strBuilder0.endsWith("~jth4b8T]70UzX!]#R");
      boolean boolean1 = strBuilder0.contains('~');
      StrBuilder strBuilder4 = strBuilder0.append(true);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      char[] charArray0 = new char[3];
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "?(au=");
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1, 0, 0);
      Reader reader0 = strBuilder1.asReader();
      charArray0[0] = 'K';
      charArray0[1] = '=';
      charArray0[2] = 'Q';
      strBuilder0.buffer = charArray0;
      StrBuilder strBuilder3 = strBuilder0.append(true);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = null;
      StrBuilder strBuilder1 = strBuilder0.replace(0, 0, (String) null);
      StrBuilder strBuilder2 = strBuilder1.clear();
      StrBuilder strBuilder3 = strBuilder2.insert(0, 0);
      StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
      int int1 = 502;
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder4.insert(502, charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 502
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(838);
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('Q');
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("o$;ig&");
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_CharMatcher0, 1215);
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(1215);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1215
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((-1215));
      String string0 = strBuilder1.rightString((-2129));
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      boolean boolean0 = strBuilder0.contains((StrMatcher) null);
      StrBuilder strBuilder2 = strBuilder0.replaceFirst((StrMatcher) null, "");
      int int0 = strBuilder2.lastIndexOf('b', 0);
      StrBuilder strBuilder3 = strBuilder1.append(true);
      StrBuilder strBuilder4 = strBuilder3.append((long) 0);
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) "";
      objectArray0[1] = (Object) stringBuffer0;
      objectArray0[2] = (Object) "";
      objectArray0[3] = (Object) null;
      objectArray0[4] = (Object) strBuilder0;
      objectArray0[5] = (Object) "";
      objectArray0[6] = (Object) "";
      StrBuilder strBuilder5 = strBuilder0.appendWithSeparators(objectArray0, "aiKV");
      // Undeclared exception!
      try { 
        strBuilder0.insert((-3173), 'b');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3173
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      int int0 = 32;
      StrBuilder strBuilder0 = new StrBuilder(32);
      char[] charArray0 = new char[3];
      charArray0[0] = 'g';
      charArray0[1] = '';
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance(charArray0);
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      StrBuilder strBuilder1 = strBuilder0.append(object0);
      Object object1 = strBuilder_StrBuilderTokenizer0.cloneReset();
      charArray0[2] = 'm';
      StrBuilder strBuilder2 = strBuilder0.insert(32, charArray0);
      boolean boolean0 = strBuilder0.equals((Object) strBuilder2);
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder strBuilder3 = strBuilder1.insert(0, 116);
      StrBuilder strBuilder4 = strBuilder1.appendPadding(32, '!');
      char[] charArray1 = strBuilder1.toCharArray();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder4.new StrBuilderReader();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 0, 116);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2515));
      StrBuilder strBuilder1 = strBuilder0.append('U');
      StrBuilder strBuilder2 = strBuilder1.setNewLineText("");
      StrBuilder strBuilder3 = strBuilder2.appendNewLine();
      // Undeclared exception!
      try { 
        strBuilder0.delete(680, 97);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendPadding(0, '(');
      Integer integer0 = new Integer(0);
      boolean boolean0 = strBuilder0.equals((Object) integer0);
      StrBuilder strBuilder2 = new StrBuilder("<)");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(2362);
      StrBuilder strBuilder3 = strBuilder2.replaceAll("<)", "<)");
      char[] charArray0 = new char[1];
      charArray0[0] = '6';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder4 = strBuilder2.replaceAll(strMatcher0, "end < start");
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Z");
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex(34);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 34
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(725);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      List list0 = strBuilder_StrBuilderTokenizer0.getTokenList();
      StrBuilder strBuilder2 = strBuilder0.deleteFirst('S');
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterChar('S');
      int int0 = strBuilder0.indexOf(strMatcher0, 0);
      // Undeclared exception!
      try { 
        strBuilder0.validateRange(725, 725);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[9];
      charArray0[0] = '|';
      charArray0[1] = 'c';
      charArray0[2] = 'V';
      charArray0[3] = 'T';
      charArray0[4] = 'E';
      charArray0[5] = '>';
      charArray0[6] = '8';
      charArray0[7] = 'v';
      charArray0[8] = 'Q';
      StrBuilder strBuilder1 = strBuilder0.insert(0, charArray0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      String[] stringArray0 = strBuilder_StrBuilderTokenizer0.getTokenArray();
      char[] charArray0 = new char[7];
      charArray0[0] = '%';
      charArray0[1] = ']';
      charArray0[2] = 'z';
      charArray0[3] = 'b';
      charArray0[4] = 'A';
      charArray0[5] = 'r';
      charArray0[6] = 'y';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      StrMatcher strMatcher1 = StrMatcher.commaMatcher();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setQuoteMatcher(strMatcher1);
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft(object0, (-1894), 't');
      StrBuilder strBuilder3 = strBuilder2.setNullText("SuA_\"2+c~D7");
      StrMatcher strMatcher2 = StrMatcher.charMatcher('i');
      StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "|+<bfpi&BOyu4J:");
      int int0 = strBuilder4.indexOf("SuA_\"2+c~D7", 1202);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrBuilder strBuilder1 = strBuilder0.append("`H");
      long long0 = strBuilder_StrBuilderReader0.skip(721L);
      char[] charArray0 = new char[6];
      charArray0[0] = 'e';
      charArray0[1] = 'l';
      charArray0[2] = 'k';
      charArray0[3] = '&';
      charArray0[4] = '!';
      charArray0[5] = 'R';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder0.indexOf(strMatcher0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("`H");
      StrBuilder strBuilder2 = strBuilder1.replaceFirst(strMatcher0, "`H");
      strBuilder_StrBuilderWriter0.close();
      int int1 = strBuilder1.indexOf(strMatcher0, 4);
      StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "Invalid offset: ");
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.getNullText();
      StrBuilder strBuilder1 = strBuilder0.append(false);
      StrBuilder strBuilder2 = strBuilder0.setNewLineText((String) null);
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance();
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators((Iterator) strTokenizer0, (String) null);
      int int0 = 44;
      StrBuilder strBuilder4 = strBuilder1.append(44);
      StrBuilder strBuilder5 = strBuilder4.append(1211.5F);
      StrBuilder strBuilder6 = strBuilder0.replaceFirst("8{2%Dk?3k@`36", "8{2%Dk?3k@`36");
      StrBuilder strBuilder7 = strBuilder4.replaceFirst((String) null, (String) null);
      // Undeclared exception!
      try { 
        strBuilder7.insert((-3975), (Object) strBuilder6);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3975
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.lastIndexOf('W', 199);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setQuoteMatcher(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "-tt>[R\u0005X6V QzX<&z");
      // Undeclared exception!
      try { 
        strBuilder1.insert((-1), false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      int int0 = (-1416);
      StrBuilder strBuilder0 = new StrBuilder((-1416));
      Integer integer0 = new Integer(0);
      StrBuilder strBuilder1 = strBuilder0.append((Object) integer0);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder2 = strBuilder1.append(strBuilder0);
      char char0 = 'O';
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadLeft((Object) strTokenizer0, 0, 'O');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder strBuilder4 = strBuilder2.append(object0);
      boolean boolean0 = strBuilder1.equalsIgnoreCase(strBuilder0);
      // Undeclared exception!
      try { 
        strBuilder1.insert((-1416), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1416
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip((-2999L));
      strBuilder_StrBuilderReader0.reset();
      int int0 = (-992);
      StrBuilder strBuilder1 = new StrBuilder((-992));
      StrBuilder strBuilder2 = strBuilder0.append('<');
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt((-992), 'e');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -992
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      boolean boolean0 = strBuilder0.endsWith("9bjV^~4YQ.=RCi");
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrMatcher strMatcher0 = StrMatcher.charMatcher('W');
      char[] charArray0 = new char[1];
      charArray0[0] = 'v';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.append((-1404L));
      StrBuilder strBuilder2 = strBuilder1.append("_M");
      int int0 = strBuilder1.indexOf(strMatcher1);
      StrMatcher strMatcher3 = StrMatcher.charMatcher('v');
      StrBuilder strBuilder3 = strBuilder0.deleteAll((StrMatcher) strMatcher_NoMatcher0);
      StrMatcher strMatcher4 = StrMatcher.charMatcher('\\');
      StrTokenizer strTokenizer0 = strBuilder2.asTokenizer();
      char char0 = strBuilder2.charAt(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer1 = StrTokenizer.getTSVInstance();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder strBuilder4 = strBuilder2.append(charArray0);
      StringBuffer stringBuffer0 = strBuilder4.toStringBuffer();
      StrBuilder strBuilder5 = strBuilder3.append((long) (-1));
      StrTokenizer strTokenizer2 = strBuilder5.asTokenizer();
      StrBuilder strBuilder6 = strBuilder3.append((Object) strMatcher0);
      StrBuilder strBuilder7 = strBuilder0.insert(0, (float) (-1404L));
      StrBuilder strBuilder8 = strBuilder7.deleteAll('v');
      boolean boolean1 = strBuilder5.endsWith("_M");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder9 = strBuilder1.appendWithSeparators((Collection) linkedList0, "-1404_M");
      int int1 = strBuilder0.size();
      String string1 = strBuilder1.getNewLineText();
      int int2 = strBuilder7.indexOf(strMatcher1);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("startIndex must be valid");
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      int int0 = 0;
      int int1 = strBuilder0.lastIndexOf(strMatcher0, 0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(0);
      // Undeclared exception!
      try { 
        CharBuffer.wrap((CharSequence) "startIndex must be valid", (-1), 0);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1758));
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder2 = strBuilder0.clear();
      IntStream intStream0 = stringBuffer0.chars();
      int int0 = 0;
      // Undeclared exception!
      try { 
        strBuilder1.append(stringBuffer0, (-1758), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) strMatcher_TrimMatcher0;
      objectArray0[1] = (Object) "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter";
      objectArray0[2] = (Object) "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter";
      objectArray0[3] = (Object) strBuilder0;
      objectArray0[4] = (Object) strMatcher0;
      objectArray0[5] = (Object) strBuilder0;
      objectArray0[6] = (Object) strBuilder0;
      objectArray0[7] = (Object) "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter";
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "QNy/&1%AaU");
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_TrimMatcher0, (-1620));
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      boolean boolean0 = strBuilder0.contains('0');
      StrBuilder strBuilder2 = strBuilder0.replaceAll("+QVSM`Ncawg@f q", "_)XwilYBa~s");
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) strMatcher_TrimMatcher0;
      objectArray0[1] = (Object) "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter";
      objectArray0[2] = (Object) "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter";
      objectArray0[3] = (Object) strBuilder0;
      objectArray0[4] = (Object) strMatcher0;
      objectArray0[5] = (Object) strBuilder0;
      objectArray0[6] = (Object) strBuilder0;
      objectArray0[7] = (Object) "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter";
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "QNy/&1%AaU");
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_TrimMatcher0, (-1620));
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder2 = strBuilder0.replaceAll("+QVSM`Ncawg@f q", "_)XwilYBa~s");
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("#)BIT@:% I_OAn,0U2(");
      StrBuilder strBuilder1 = strBuilder0.deleteAll("#)BIT@:% I_OAn,0U2(");
      StrBuilder strBuilder2 = strBuilder0.trim();
      StrBuilder strBuilder3 = new StrBuilder((-5201));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder3.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((-5201));
      StrBuilder strBuilder4 = strBuilder2.append(false);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder3.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      StrBuilder strBuilder1 = strBuilder0.append(0);
      StrBuilder strBuilder2 = strBuilder0.trim();
      StrBuilder strBuilder3 = strBuilder2.append("Invalid offset: ");
      StrBuilder strBuilder4 = strBuilder3.deleteFirst("n{!");
      StrBuilder strBuilder5 = strBuilder4.insert(0, 9);
      StrBuilder strBuilder6 = strBuilder3.deleteAll("");
      StrBuilder strBuilder7 = strBuilder1.replaceFirst('G', 'T');
      StrBuilder strBuilder8 = strBuilder6.insert(9, false);
      StrBuilder strBuilder9 = strBuilder3.replace(9, 9, "n{!");
      StrBuilder strBuilder10 = new StrBuilder("Invalid offset: ");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder10.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      // Undeclared exception!
      try { 
        strBuilder6.replace((StrMatcher) null, "", 101, 205, 205);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("OLR{O>)|4SB^");
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceAll("", "");
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher((String) null);
      int int0 = strBuilder0.indexOf(strMatcher0, 2579);
      // Undeclared exception!
      try { 
        strBuilder1.insert((-1811), 0.0F);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1811
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Q;`=Iz5sa(");
      CharBuffer charBuffer0 = CharBuffer.allocate(2643);
      StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) stringBuffer0, 1792, 'C');
      StringBuffer stringBuffer1 = stringBuffer0.append(1792);
      StrBuilder strBuilder2 = strBuilder0.setCharAt(0, 'g');
      StrBuilder strBuilder3 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder4 = strBuilder0.deleteAll(';');
      StrBuilder strBuilder5 = strBuilder0.append((long) 2643);
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) strBuilder1;
      objectArray0[1] = (Object) strBuilder4;
      StrBuilder strBuilder6 = strBuilder5.appendWithSeparators(objectArray0, "\"j");
      String string0 = strBuilder4.substring(2643);
      StrBuilder strBuilder7 = strBuilder3.replaceAll('6', 'a');
      StrBuilder strBuilder8 = strBuilder7.append(strBuilder1);
      strBuilder8.size = 2643;
      StrBuilder strBuilder9 = strBuilder8.clear();
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('a');
      StrBuilder strBuilder10 = strBuilder3.deleteAll(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder3.getChars(1, 2643, (char[]) null, (-2395));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2643
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.append((float) 0);
      boolean boolean0 = true;
      StrBuilder strBuilder2 = strBuilder1.append(true);
      StrBuilder strBuilder3 = strBuilder0.replaceAll('{', '/');
      // Undeclared exception!
      try { 
        strBuilder3.toCharArray(39, 5);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(337);
      char[] charArray0 = strBuilder0.toCharArray(0, 117);
      boolean boolean0 = strBuilder0.contains("");
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(337);
      StrBuilder strBuilder2 = strBuilder1.appendNull();
      StringBuffer stringBuffer0 = new StringBuffer(337);
      StringBuffer stringBuffer1 = stringBuffer0.insert(0, '6');
      StrBuilder strBuilder3 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder4 = strBuilder3.append(true);
      // Undeclared exception!
      try { 
        strBuilder3.getChars(337, 117, charArray0, 117);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 117
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceAll("", "");
      int int0 = strBuilder0.size();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Collection) linkedList0, "2zi`");
      StrBuilder strBuilder3 = strBuilder1.deleteFirst("");
      String string0 = strBuilder3.toString();
      strBuilder0.size = 0;
      int int1 = strBuilder1.indexOf('>');
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      char[] charArray0 = new char[8];
      charArray0[0] = '>';
      charArray0[1] = '>';
      charArray0[2] = '>';
      charArray0[3] = '>';
      charArray0[4] = '>';
      charArray0[5] = '>';
      charArray0[6] = '>';
      charArray0[7] = '>';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      Stream<Object> stream0 = linkedList0.stream();
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      Stream<Object> stream1 = linkedList0.parallelStream();
      int int2 = strBuilder0.lastIndexOf("  #;", 39);
      int int3 = strBuilder2.indexOf('F', 0);
      Object object0 = new Object();
      StrBuilder strBuilder4 = strBuilder0.append(object0);
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "");
      StrBuilder strBuilder5 = strBuilder1.append(stringBuffer0);
      StrBuilder strBuilder6 = strBuilder4.replaceFirst("140@%k", "");
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-162));
      StrBuilder strBuilder1 = strBuilder0.deleteFirst((String) null);
      StrBuilder strBuilder2 = strBuilder1.deleteAll((String) null);
      String string0 = strBuilder0.midString((-162), 0);
      StrBuilder strBuilder3 = strBuilder0.append((float) (-162));
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      String string0 = "1.4";
      char char0 = 'K';
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(0, 'K');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = null;
      // Undeclared exception!
      try { 
        strBuilder0.getChars(0, 0, (char[]) null, 0);
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("SunOS");
      StrBuilder strBuilder1 = strBuilder0.setNullText("|vE");
      StrTokenizer strTokenizer0 = strBuilder1.asTokenizer();
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      StrBuilder strBuilder2 = strBuilder1.deleteFirst(strMatcher0);
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder1.append(charArray0, 4, 4);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 4
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[4];
      charArray0[0] = 'J';
      charArray0[1] = '<';
      charArray0[2] = '`';
      charArray0[3] = '';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0, 0, 0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoreEmptyTokens(true);
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      StrBuilder strBuilder2 = strBuilder0.insert(0, object0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(0);
      StrBuilder strBuilder3 = strBuilder0.deleteFirst("java.home");
      char[] charArray1 = new char[4];
      charArray1[0] = '}';
      charArray1[1] = '%';
      charArray1[2] = '}';
      charArray1[3] = '.';
      strBuilder3.buffer = charArray1;
      // Undeclared exception!
      try { 
        strBuilder2.deleteAll('Y');
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2093);
      Integer integer0 = new Integer(510);
      StrBuilder strBuilder1 = strBuilder0.append((Object) integer0);
      StrBuilder strBuilder2 = strBuilder1.clear();
      int int0 = strBuilder0.indexOf('n');
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      int int1 = strBuilder2.lastIndexOf(strMatcher0);
      boolean boolean0 = strBuilder1.contains(strMatcher0);
      String string0 = strBuilder0.getNewLineText();
      int int2 = strBuilder1.lastIndexOf(".piHpUi|Tl?1N s8Z~^");
      int int3 = strBuilder2.indexOf("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      int int4 = strBuilder1.indexOf("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      int int0 = (-590);
      StrBuilder strBuilder0 = new StrBuilder((-590));
      int int1 = 34;
      char char0 = 'P';
      StrBuilder strBuilder1 = strBuilder0.appendPadding(34, 'P');
      StrBuilder strBuilder2 = strBuilder1.append(strBuilder0);
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      char[] charArray0 = new char[4];
      charArray0[0] = 'P';
      // Undeclared exception!
      try { 
        strBuilder2.getChars(32, 34, charArray0, (-590));
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(117);
      char char0 = 'w';
      StrMatcher strMatcher0 = StrMatcher.stringMatcher((String) null);
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      int int0 = strBuilder0.indexOf('w', (-1445));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[6];
      charArray0[0] = 'w';
      charArray0[1] = 'w';
      charArray0[2] = 'w';
      charArray0[3] = 'w';
      charArray0[4] = 'w';
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) null);
      charArray0[5] = 'w';
      strBuilder_StrBuilderWriter0.write(charArray0);
      StrBuilder strBuilder1 = strBuilder0.clear();
      int int1 = strBuilder1.lastIndexOf("$!{", 117);
      // Undeclared exception!
      try { 
        strBuilder1.substring((-1), (-1454));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.appendPadding(1, 's');
      int int0 = strBuilder0.lastIndexOf((StrMatcher) null);
      String string0 = strBuilder0.rightString(1);
      StrBuilder strBuilder2 = strBuilder0.append(1135);
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, 0, 596);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.capacity();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(32);
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      int int1 = strBuilder0.lastIndexOf(strMatcher0, 32);
      boolean boolean0 = strBuilder0.endsWith("java.vendor");
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity((-1040));
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      int int0 = 101;
      StrBuilder strBuilder0 = new StrBuilder(101);
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray(50, 50);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((Object) null);
      String string0 = strBuilder0.midString(0, 0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
      StrBuilder strBuilder3 = strBuilder2.replaceAll("", "U!HV>y7,g>{>u,j;");
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      int int0 = (-3174);
      StrBuilder strBuilder0 = new StrBuilder((-3174));
      StrBuilder strBuilder1 = strBuilder0.deleteAll("~rw6WTitmSrfy\"");
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      int int1 = strBuilder1.indexOf(strMatcher0);
      strBuilder1.buffer = null;
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder2 = strBuilder1.deleteFirst((StrMatcher) strMatcher_TrimMatcher0);
      // Undeclared exception!
      try { 
        strBuilder0.append((float) (-3174));
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "|]P!~");
      StrBuilder strBuilder2 = strBuilder0.clear();
      boolean boolean0 = strBuilder0.contains('o');
      StrBuilder strBuilder3 = strBuilder2.replaceAll(strMatcher0, "|]P!~");
      String string0 = strBuilder2.toString();
      StrBuilder strBuilder4 = strBuilder0.deleteAll("java.specification.version");
      boolean boolean1 = strBuilder2.contains((StrMatcher) null);
      int int0 = strBuilder0.indexOf("", 0);
      String string1 = strBuilder4.leftString((-1));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "");
      StrBuilder strBuilder5 = strBuilder1.append(stringBuffer0);
      StrBuilder strBuilder6 = strBuilder5.append("|]P!~", 0, 0);
      // Undeclared exception!
      try { 
        strBuilder0.insert(596, 0L);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 596
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      int int0 = (-3106);
      StrBuilder strBuilder0 = new StrBuilder((-3106));
      StrBuilder strBuilder1 = strBuilder0.append(0L);
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft((Object) strBuilder0, (-3106), 'J');
      String string0 = "";
      StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
      char[] charArray0 = strBuilder0.toCharArray();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      // Undeclared exception!
      try { 
        strBuilder0.setLength((-3106));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3106
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.capacity();
      StrBuilder strBuilder1 = strBuilder0.append(1.0);
      StrBuilder strBuilder2 = strBuilder1.replaceAll("", "");
      StrBuilder strBuilder3 = strBuilder1.deleteAll("V");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = StrMatcher.charMatcher('2');
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setQuoteMatcher(strMatcher0);
      StrBuilder strBuilder4 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "path.separator");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(0);
      StrBuilder strBuilder5 = strBuilder4.replace(strMatcher0, "A0", 0, 34, 0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("4wI9Uh_Zagd", 0, 108);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      char[] charArray0 = null;
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher((char[]) null);
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.append("");
      String string0 = strBuilder1.leftString((-1534));
      String string1 = strBuilder0.midString(0, (-1));
      char char0 = 't';
      StrBuilder strBuilder2 = strBuilder0.deleteFirst('t');
      // Undeclared exception!
      try { 
        strBuilder2.validateIndex((-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.trim();
      Writer writer0 = strBuilder1.asWriter();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Collection) linkedList0, "]");
      // Undeclared exception!
      try { 
        strBuilder1.setLength((-1768));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1768
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll((StrMatcher) strMatcher_NoMatcher0);
      StrBuilder strBuilder2 = strBuilder1.delete(0, 0);
      int int0 = 48;
      StrBuilder strBuilder3 = strBuilder0.append("PNJ}");
      int int1 = 39;
      int int2 = strBuilder0.indexOf((StrMatcher) strMatcher_NoMatcher0);
      // Undeclared exception!
      try { 
        strBuilder0.delete(48, 39);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid startIndex: ");
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('\"');
      StrMatcher strMatcher2 = StrMatcher.stringMatcher("Invalid startIndex: ");
      int int0 = (-64);
      String string0 = "DMZ,k,*$/,";
      // Undeclared exception!
      try { 
        strBuilder0.replace((-64), 0, "DMZ,k,*$/,");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -64
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[9];
      charArray0[0] = '_';
      StrBuilder strBuilder1 = strBuilder0.append((double) 0);
      charArray0[1] = '';
      charArray0[2] = '+';
      charArray0[3] = 'R';
      charArray0[4] = '{';
      charArray0[5] = 'K';
      StrBuilder strBuilder2 = strBuilder0.append((Object) strBuilder1);
      charArray0[6] = '=';
      charArray0[7] = 's';
      charArray0[8] = '5';
      // Undeclared exception!
      try { 
        strBuilder0.insert(0, charArray0, 0, 108);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 108
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      char[] charArray0 = new char[4];
      charArray0[0] = '}';
      charArray0[1] = '\"';
      charArray0[2] = '%';
      charArray0[3] = '/';
      // Undeclared exception!
      try { 
        strBuilder0.insert(0, charArray0, 0, (-1195));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: -1195
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("@g2pbLrR(B");
      StrMatcher strMatcher0 = null;
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrBuilder strBuilder2 = strBuilder0.deleteFirst((StrMatcher) null);
      int int0 = 0;
      int int1 = 4;
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder1, 0, 4);
      StrBuilder strBuilder4 = strBuilder3.clear();
      StrBuilder strBuilder5 = strBuilder3.deleteFirst("@g2pbLrR(B");
      Writer writer0 = strBuilder0.asWriter();
      char char0 = '7';
      int int2 = strBuilder0.lastIndexOf('7');
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1), (Object) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.insert(0, (double) 0);
      char char0 = '.';
      StrBuilder strBuilder2 = strBuilder0.deleteAll('.');
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrBuilder strBuilder3 = strBuilder0.appendNull();
      StrBuilder strBuilder4 = strBuilder0.replaceFirst(strMatcher0, "");
      char char1 = strBuilder4.charAt(0);
      boolean boolean0 = strBuilder2.isEmpty();
      StrBuilder strBuilder5 = strBuilder0.append(strBuilder2);
      int int0 = strBuilder1.lastIndexOf("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      // Undeclared exception!
      try { 
        strBuilder0.insert(1618, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1618
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.charAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder strBuilder1 = strBuilder0.insert(0, 0.0F);
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      int int1 = strBuilder0.indexOf(strMatcher0, 0);
      char[] charArray0 = new char[2];
      charArray0[0] = 'S';
      charArray0[1] = 'N';
      // Undeclared exception!
      try { 
        strBuilder1.getChars((-1), 2087, charArray0, (-537));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(958);
      int int0 = strBuilder0.capacity();
      StrBuilder strBuilder1 = strBuilder0.replaceAll("O?%2e7mmG-okBWu,`", "O?%2e7mmG-okBWu,`");
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(":`");
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrBuilder strBuilder1 = strBuilder0.replace(strMatcher0, "VM\"+o7Tv", 0, 0, 0);
      StrMatcher strMatcher1 = StrMatcher.noneMatcher();
      StrBuilder strBuilder2 = strBuilder0.deleteAll(strMatcher1);
      int int0 = strBuilder0.lastIndexOf(":`", 0);
      StrBuilder strBuilder3 = strBuilder2.append(":`");
      String string0 = strBuilder2.toString();
      // Undeclared exception!
      try { 
        strBuilder2.append(strBuilder0, (-1), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-916));
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) "";
      objectArray0[1] = (Object) "";
      objectArray0[2] = (Object) "";
      objectArray0[3] = (Object) "";
      objectArray0[4] = (Object) strBuilder0;
      objectArray0[5] = (Object) "";
      objectArray0[6] = (Object) "";
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "");
      StrBuilder strBuilder2 = strBuilder0.setNullText("Invalid length: ");
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      int int0 = strBuilder2.lastIndexOf(strMatcher0);
      StrBuilder strBuilder3 = strBuilder0.setNewLineText("");
      String string0 = strBuilder0.midString((-916), (-118));
      StrBuilder strBuilder4 = strBuilder2.append(objectArray0[5]);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1210));
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Object[]) null, "9$^cNrrQ>XqN Ovs");
      StrBuilder strBuilder3 = new StrBuilder((-1455));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder3.new StrBuilderWriter();
      Writer writer0 = strBuilder_StrBuilderWriter0.append('D');
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("9$^cNrrQ>XqN Ovs", 32, 582);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2015));
      char char0 = 'Q';
      StrMatcher strMatcher0 = StrMatcher.charMatcher('Q');
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("e");
      StrMatcher strMatcher2 = StrMatcher.charMatcher('Q');
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 32);
      StrBuilder strBuilder1 = strBuilder0.append((char[]) null);
      StrBuilder strBuilder2 = strBuilder1.replaceFirst(strMatcher1, "e");
      int int1 = strBuilder1.indexOf("#zv", (-843));
      // Undeclared exception!
      try { 
        strBuilder2.append("e", (-1), (-1940));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      String string0 = strBuilder0.getNullText();
      StrBuilder strBuilder1 = strBuilder0.insert(0, 0L);
      Integer integer0 = new Integer(117);
      StrBuilder strBuilder2 = strBuilder1.insert(0, (Object) integer0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      char[] charArray0 = new char[7];
      charArray0[0] = 'K';
      charArray0[1] = '\\';
      charArray0[2] = '(';
      charArray0[3] = 'V';
      charArray0[4] = '4';
      charArray0[5] = '3';
      charArray0[6] = '4';
      StrBuilder strBuilder3 = strBuilder2.append(charArray0);
      String string1 = strBuilder2.rightString(0);
      strBuilder_StrBuilderWriter0.write((char[]) null, 97, 117);
      char[] charArray1 = strBuilder2.toCharArray();
      int int0 = strBuilder2.indexOf('Z', (-763));
      strBuilder_StrBuilderWriter0.flush();
      StrBuilder strBuilder4 = strBuilder0.append(strBuilder1);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      String string0 = "java.vendor";
      StrBuilder strBuilder0 = new StrBuilder("java.vendor");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "java.vendor");
      int int0 = strBuilder0.indexOf("java.vendor", 4);
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      int int1 = strBuilder0.indexOf(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.append(false);
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder2);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder3.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(2);
      Object[] objectArray0 = new Object[6];
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder3.new StrBuilderTokenizer();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.previous();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrBuilder strBuilder2 = strBuilder0.replaceFirst("Windows", "Invalid offset: ");
      boolean boolean0 = strBuilder0.endsWith("Invalid offset: ");
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder2);
      int int0 = strBuilder2.indexOf(strMatcher0, 0);
      StrTokenizer strTokenizer0 = strBuilder2.asTokenizer();
      StrBuilder strBuilder4 = strBuilder0.setNewLineText("Windows");
      String string0 = strBuilder4.substring(0);
      StrBuilder strBuilder5 = strBuilder3.minimizeCapacity();
      int int1 = strBuilder3.indexOf('&', (-1));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder3.new StrBuilderTokenizer();
      char[] charArray0 = new char[2];
      charArray0[0] = '&';
      charArray0[1] = '&';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, (-1), Integer.MAX_VALUE);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      char[] charArray0 = new char[5];
      charArray0[0] = '}';
      charArray0[1] = 'f';
      charArray0[2] = '.';
      charArray0[3] = '}';
      charArray0[4] = '\'';
      // Undeclared exception!
      try { 
        strBuilder0.insert(32, charArray0, 0, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2);
      // Undeclared exception!
      try { 
        strBuilder0.insert(39, 3135.6025258345903);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 39
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid length: ");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) "Invalid length: ", 121, 'X');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-969));
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer0 = new Integer(911);
      boolean boolean0 = linkedList0.add(integer0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, (String) null);
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      boolean boolean1 = strBuilder0.contains(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.deleteFirst('J');
      int int0 = strBuilder0.length();
      int int1 = strBuilder0.indexOf(strMatcher0, (-969));
      boolean boolean2 = strBuilder0.equals((Object) strBuilder1);
      int int2 = strBuilder1.lastIndexOf("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      int int3 = strBuilder1.size();
      String string0 = strBuilder1.leftString(911);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      StrBuilder strBuilder3 = strBuilder0.append(true);
      strBuilder_StrBuilderReader0.close();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string1 = strBuilder_StrBuilderTokenizer0.getContent();
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.vm.vendor");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "java.vm.vendor");
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4.9");
      char[] charArray0 = new char[3];
      charArray0[0] = 'm';
      charArray0[1] = 'r';
      charArray0[2] = '*';
      // Undeclared exception!
      try { 
        strBuilder0.insert(203, charArray0, 5, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 203
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.runtime.version");
      String string0 = strBuilder0.toString();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) "java.runtime.version", 0, 'r');
      StrBuilder strBuilder2 = strBuilder0.clear();
      char[] charArray0 = new char[8];
      String string1 = strBuilder0.toString();
      charArray0[0] = 'r';
      charArray0[1] = '2';
      charArray0[2] = 'r';
      charArray0[3] = 'r';
      charArray0[4] = 'r';
      charArray0[5] = 'r';
      charArray0[6] = '\\';
      Reader reader0 = strBuilder0.asReader();
      charArray0[7] = 'r';
      String string2 = strBuilder0.substring(0);
      // Undeclared exception!
      try { 
        strBuilder2.insert(2616, charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2616
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.getNullText();
      StrBuilder strBuilder1 = strBuilder0.append(false);
      StrBuilder strBuilder2 = strBuilder0.setNewLineText((String) null);
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance();
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators((Iterator) strTokenizer0, (String) null);
      StrBuilder strBuilder4 = strBuilder1.append(44);
      StrBuilder strBuilder5 = strBuilder4.append(1211.5F);
      StrBuilder strBuilder6 = strBuilder0.replaceFirst("8{2%Dk?3k@`36", "8{2%Dk?3k@`36");
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(":");
      StrBuilder strBuilder1 = new StrBuilder();
      char[] charArray0 = new char[2];
      charArray0[0] = 'D';
      charArray0[1] = 'E';
      strBuilder0.buffer = charArray0;
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, (-3069), 108);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("(T*G%Kz=r=^yF");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(0L);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      int int0 = 2452;
      StrBuilder strBuilder0 = new StrBuilder(2452);
      int int1 = 2821;
      // Undeclared exception!
      try { 
        strBuilder0.insert(2821, ']');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2821
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.contains('D');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight((Object) strBuilder_StrBuilderWriter0, 0, '9');
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(1, 0, '~');
      String string0 = "";
      StrBuilder strBuilder2 = strBuilder0.replace(0, 990, "");
      StrBuilder strBuilder3 = strBuilder1.reverse();
      int int0 = (-705);
      // Undeclared exception!
      try { 
        strBuilder3.append(strBuilder2, 0, (-463));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder1 = strBuilder0.append((String) null, 518, 1630);
      StrBuilder strBuilder2 = strBuilder0.deleteAll((StrMatcher) null);
      Object object0 = new Object();
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadLeft(object0, (-2699), '%');
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        strBuilder1.append(stringBuffer0, 9, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("abS:q#h[8L>U >j");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      char char0 = '^';
      char[] charArray0 = new char[8];
      int int1 = strBuilder_StrBuilderReader0.read(charArray0);
      charArray0[0] = '^';
      charArray0[1] = '^';
      charArray0[2] = '^';
      charArray0[3] = '^';
      charArray0[4] = '<';
      charArray0[5] = '^';
      charArray0[6] = '^';
      charArray0[7] = '^';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 2263, 2263);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(488);
      StrBuilder strBuilder1 = new StrBuilder("W-oyC`q*<7v?;lY");
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, 488, 488);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(5772);
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder strBuilder1 = strBuilder0.append(1.0);
      // Undeclared exception!
      try { 
        strBuilder0.append("", 5772, 5772);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.reverse();
      int int0 = strBuilder1.indexOf('z', (-1636));
      int int1 = strBuilder0.length();
      StrBuilder strBuilder2 = strBuilder1.ensureCapacity(1701);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      int int0 = 4;
      StrBuilder strBuilder0 = new StrBuilder(4);
      int int1 = (-2297);
      // Undeclared exception!
      try { 
        strBuilder0.substring((-2297), 102);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2297
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      String string0 = "11yQ;,={BN$";
      StrBuilder strBuilder0 = new StrBuilder("11yQ;,={BN$");
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder1.setNullText("11yQ;,={BN$");
      int int0 = 0;
      String string1 = strBuilder2.substring(0);
      boolean boolean0 = strBuilder0.equals(strBuilder1);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("");
      char char0 = '%';
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterChar('%');
      StrTokenizer strTokenizer1 = strBuilder_StrBuilderTokenizer0.setTrimmerMatcher(strMatcher0);
      String string2 = strBuilder_StrBuilderTokenizer0.getContent();
      int int1 = 3299;
      char char1 = 'c';
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(3299, 'c');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3299
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      int int0 = 1382;
      StrBuilder strBuilder0 = new StrBuilder(1382);
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      String string0 = null;
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, (String) null);
      StrBuilder strBuilder2 = strBuilder1.append((-1.0F));
      // Undeclared exception!
      try { 
        strBuilder1.insert(3572, (-1495.6847F));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3572
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = new StringBuffer("a");
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 0, 101);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-204));
      StrBuilder strBuilder1 = new StrBuilder("&y*MWn");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft(object0, 973, '*');
      boolean boolean0 = strBuilder1.equals(strBuilder0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[6];
      charArray0[0] = '*';
      charArray0[1] = '*';
      charArray0[2] = '*';
      charArray0[3] = '9';
      charArray0[4] = '*';
      charArray0[5] = '*';
      strBuilder_StrBuilderWriter0.write(charArray0);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = new StrBuilder("");
      StrBuilder strBuilder2 = strBuilder1.minimizeCapacity();
      boolean boolean0 = strBuilder0.equals((Object) strBuilder1);
      StringBuffer stringBuffer0 = new StringBuffer("WF:K4)?S$uT");
      StrBuilder strBuilder3 = strBuilder1.append(stringBuffer0, 0, 0);
      int int0 = strBuilder0.lastIndexOf((String) null);
      StrBuilder strBuilder4 = strBuilder1.append("");
      StrBuilder strBuilder5 = strBuilder4.append('c');
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, ">K6");
      int int0 = strBuilder0.lastIndexOf('@');
      StrBuilder strBuilder2 = strBuilder0.setNewLineText(">K6");
      StrBuilder strBuilder3 = strBuilder2.deleteFirst("@=$x<l4FzZ%h`U");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      StrBuilder strBuilder4 = strBuilder2.replaceAll("", ">K6");
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1004);
      // Undeclared exception!
      try { 
        strBuilder0.insert(2927, false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2927
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(true);
      int int0 = strBuilder0.lastIndexOf('s', 2);
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("##hZkLE");
      StrBuilder strBuilder2 = strBuilder0.deleteFirst(strMatcher0);
      int int1 = (-1229);
      // Undeclared exception!
      try { 
        strBuilder2.append(strBuilder0, 2, (-1229));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrBuilder strBuilder1 = strBuilder0.deleteAll("");
      strBuilder_StrBuilderWriter0.write("M8\"j", 0, 0);
      strBuilder_StrBuilderWriter0.flush();
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight(0, 2, 'N');
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("$105(4%&o@1O_MWbAH4");
      boolean boolean0 = strBuilder0.endsWith("java.vm.info");
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      int int0 = 0;
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("", 0, 3154);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(0, 4, '*');
      StrBuilder strBuilder2 = strBuilder0.deleteFirst("'; the SystemUtils property value will default to null.");
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(31);
      int int0 = 485;
      // Undeclared exception!
      try { 
        strBuilder0.substring(97);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("end < start");
      StrBuilder strBuilder1 = strBuilder0.appendPadding(2218, 'w');
      char[] charArray0 = new char[1];
      charArray0[0] = 'w';
      StrBuilder strBuilder2 = strBuilder1.setNullText("end < start");
      StrBuilder strBuilder3 = strBuilder1.append(charArray0);
      StrBuilder strBuilder4 = strBuilder3.deleteFirst('w');
      StrBuilder strBuilder5 = strBuilder0.append((-766L));
      boolean boolean0 = strBuilder0.contains("7YhT$_sV#@lyVF<pV3^");
      int int0 = strBuilder1.lastIndexOf("end < start", 0);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2);
      StrBuilder strBuilder1 = strBuilder0.appendPadding(2660, 'i');
      StrBuilder strBuilder2 = strBuilder0.deleteFirst('i');
      String string0 = strBuilder2.rightString(4870);
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadLeft(2, 117, '`');
      StrBuilder strBuilder4 = strBuilder3.append(2777.0249555279765);
      int int0 = strBuilder0.indexOf((StrMatcher) null, 2);
      char[] charArray0 = strBuilder0.toCharArray();
      boolean boolean0 = strBuilder1.equals((Object) null);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder");
      int int0 = strBuilder0.hashCode();
      StrBuilder strBuilder1 = strBuilder0.trim();
      int int1 = strBuilder1.lastIndexOf("org.apache.commons.lang.text.StrBuilder", 0);
      StrBuilder strBuilder2 = strBuilder0.setCharAt(0, ' ');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      char[] charArray0 = new char[1];
      charArray0[0] = ' ';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, (-274), 1710);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      strBuilder0.validateIndex(0);
      String string0 = strBuilder0.toString();
      StrBuilder strBuilder2 = strBuilder1.append("java.runtime.name");
      StrBuilder strBuilder3 = strBuilder0.appendNull();
      Writer writer0 = strBuilder3.asWriter();
      StrBuilder strBuilder4 = strBuilder2.setNewLineText("java.runtime.name");
      char char0 = strBuilder3.charAt(0);
      boolean boolean0 = strBuilder1.equals(strBuilder4);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[5];
      charArray0[0] = 'W';
      charArray0[1] = 'x';
      charArray0[2] = '9';
      charArray0[3] = 'd';
      charArray0[4] = '^';
      strBuilder0.buffer = charArray0;
      String string0 = strBuilder0.leftString(114);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.deleteAll("HP-UX");
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      String string0 = null;
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      int int0 = 410;
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        strBuilder0.insert(410, object0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 410
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      int int0 = (-2103);
      StrBuilder strBuilder0 = new StrBuilder((-2103));
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrBuilder strBuilder2 = strBuilder1.trim();
      char char0 = 'J';
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt((-2103), 'J');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2103
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(',');
      int int0 = strBuilder0.hashCode();
      String string0 = strBuilder1.toString();
      char[] charArray0 = new char[6];
      charArray0[0] = ',';
      charArray0[1] = ',';
      charArray0[2] = ',';
      charArray0[3] = ',';
      charArray0[4] = ',';
      charArray0[5] = ',';
      StrBuilder strBuilder2 = strBuilder1.append(charArray0);
      StrBuilder strBuilder3 = strBuilder2.insert(0, (Object) "");
      StrBuilder strBuilder4 = strBuilder2.insert(0, (float) 0);
      StrBuilder strBuilder5 = strBuilder2.minimizeCapacity();
      StrBuilder strBuilder6 = strBuilder5.insert(0, ',');
      int int1 = strBuilder6.validateRange(0, 0);
      StringBuffer stringBuffer0 = new StringBuffer("");
      StrBuilder strBuilder7 = strBuilder1.append(stringBuffer0);
      StrBuilder strBuilder8 = strBuilder7.append("", 0, 0);
      StrBuilder strBuilder9 = strBuilder3.deleteAll("");
      // Undeclared exception!
      try { 
        strBuilder9.insert(3423, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3423
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      String string0 = "Af>f]I]0K^u";
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt((-1130), 'h');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1130
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-3357));
      String string0 = strBuilder0.rightString((-3357));
      StrBuilder strBuilder1 = strBuilder0.append((Object) "");
      StrBuilder strBuilder2 = strBuilder0.deleteAll('H');
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      boolean boolean0 = strBuilder2.contains(strMatcher0);
      int int0 = strBuilder0.indexOf('7', (-3357));
      boolean boolean1 = strBuilder2.startsWith("");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 4, 4);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 4
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1));
      char[] charArray0 = new char[4];
      charArray0[0] = 'y';
      charArray0[1] = 'a';
      charArray0[2] = 'f';
      charArray0[3] = 'K';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, (-323), (-3206));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -3206
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[0];
      StrBuilder strBuilder1 = strBuilder0.append(charArray0, 0, 0);
      String string0 = strBuilder0.rightString(2440);
      StrBuilder strBuilder2 = strBuilder0.setNullText("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 4027, 0);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.hashCode();
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrBuilder strBuilder2 = strBuilder1.deleteFirst('?');
      StrBuilder strBuilder3 = strBuilder0.append(4370L);
      // Undeclared exception!
      try { 
        strBuilder3.insert(361, (double) 361);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 361
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-3869));
      String string0 = strBuilder0.midString((-3869), (-3869));
      // Undeclared exception!
      try { 
        strBuilder0.insert((-3869), (float) (-3869));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3869
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[0];
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrBuilder strBuilder2 = strBuilder1.clear();
      // Undeclared exception!
      try { 
        strBuilder2.insert(3861, (Object) strBuilder1);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3861
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("startIndex must be valid");
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrBuilder strBuilder2 = strBuilder1.append("", 0, 0);
      String string0 = strBuilder2.midString(0, 0);
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "");
      StrBuilder strBuilder3 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder4 = strBuilder3.append('4');
      StrBuilder strBuilder5 = strBuilder3.deleteAll('S');
      String string1 = strBuilder2.toString();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      // Undeclared exception!
      try { 
        strBuilder0.insert(418, (Object) strBuilder2);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 418
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((StringBuffer) null, (-23), (-1502));
      char[] charArray0 = new char[3];
      charArray0[0] = '_';
      charArray0[1] = 'x';
      charArray0[2] = '9';
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance(charArray0);
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Iterator) strTokenizer0, (String) null);
      StrBuilder strBuilder3 = strBuilder0.append((StringBuffer) null);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("os.arch", 0, 0);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(206);
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      String string0 = strBuilder0.rightString(0);
      String string1 = strBuilder0.getNewLineText();
      StrBuilder strBuilder2 = strBuilder0.append(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string2 = strBuilder_StrBuilderTokenizer0.getContent();
      int int0 = strBuilder0.indexOf('i', 887);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      String string0 = "|wYo]vCO";
      StrBuilder strBuilder0 = new StrBuilder("|wYo]vCO");
      int int0 = 1366;
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(1366, 'k');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1366
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(", Length: ");
      int int0 = (-1073741823);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1073741823), (double) (-1073741823));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1073741823
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = strBuilder0.substring(0, 0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder strBuilder1 = strBuilder0.append(0);
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterString("");
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "");
      int int0 = strBuilder0.indexOf('2', 0);
      boolean boolean0 = strBuilder0.isEmpty();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[6];
      charArray0[0] = '2';
      charArray0[1] = '2';
      charArray0[2] = '2';
      charArray0[3] = '2';
      charArray0[4] = '2';
      charArray0[5] = '2';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, (-3385), 1629);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("fDCkmKZfn#qCS6");
      int int0 = 5;
      char[] charArray0 = strBuilder0.toCharArray(5, 5);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("fDCkmKZfn#qCS6");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      StrBuilder strBuilder2 = strBuilder1.trim();
      strBuilder_StrBuilderWriter0.write("fDCkmKZfn#qCS6");
      Reader reader0 = strBuilder1.asReader();
      char char0 = ')';
      Reader reader1 = strBuilder2.asReader();
      boolean boolean0 = strBuilder1.contains(')');
      StrBuilder strBuilder3 = strBuilder0.append((long) 5);
      int int1 = 226;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder3.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setTrimmerMatcher(strMatcher0);
      StrBuilder strBuilder4 = strBuilder3.appendWithSeparators((Iterator) strTokenizer0, "");
      StrBuilder strBuilder5 = strBuilder3.delete(5, 226);
      StrBuilder strBuilder6 = strBuilder1.appendNewLine();
      StrBuilder strBuilder7 = strBuilder2.insert(5, 5);
      StrBuilder strBuilder8 = strBuilder2.setLength(5);
      // Undeclared exception!
      try { 
        strBuilder8.deleteCharAt(226);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 226
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "|]P!~");
      StrBuilder strBuilder2 = strBuilder0.clear();
      boolean boolean0 = strBuilder0.contains('o');
      StrBuilder strBuilder3 = strBuilder2.replaceAll(strMatcher0, "|]P!~");
      String string0 = strBuilder2.toString();
      StrBuilder strBuilder4 = strBuilder0.deleteAll("java.specification.version");
      boolean boolean1 = strBuilder2.contains((StrMatcher) null);
      int int0 = strBuilder0.indexOf("", 0);
      String string1 = strBuilder4.leftString((-1));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "");
      StrBuilder strBuilder5 = strBuilder1.append(stringBuffer0);
      StrBuilder strBuilder6 = strBuilder5.append("|]P!~", 0, 0);
      char char0 = 'K';
      // Undeclared exception!
      try { 
        strBuilder4.charAt(646);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 646
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.getNullText();
      int int0 = 0;
      strBuilder0.validateIndex(0);
      char[] charArray0 = new char[2];
      charArray0[0] = ')';
      charArray0[1] = '8';
      strBuilder0.buffer = charArray0;
      StrBuilder strBuilder1 = strBuilder0.insert(0, (double) 0);
      StrBuilder strBuilder2 = strBuilder1.append((Object) null);
      StrBuilder strBuilder3 = strBuilder1.setNullText("?=ad/F");
      String string1 = strBuilder3.substring(0, 0);
      StrBuilder strBuilder4 = strBuilder1.insert(0, 'D');
      StrBuilder strBuilder5 = strBuilder0.append(0.0);
      StrBuilder strBuilder6 = strBuilder2.deleteAll("");
      int int1 = 785;
      StrBuilder strBuilder7 = strBuilder4.appendPadding(785, 'D');
      int int2 = 4;
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      int int3 = strBuilder5.indexOf(strMatcher0);
      String string2 = "java.lang.Object";
      // Undeclared exception!
      try { 
        strBuilder5.getChars(0, 356, strBuilder0.buffer, (-1));
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "@qsU{eUs";
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("@qsU{eUs");
      // Undeclared exception!
      try { 
        strBuilder0.insert(2147483641, (double) 2147483641);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2147483641
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      int int0 = 3133;
      StrBuilder strBuilder0 = new StrBuilder(3133);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(3133);
      int int1 = strBuilder_StrBuilderReader0.read();
      StrBuilder strBuilder1 = strBuilder0.append(false);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      strBuilder_StrBuilderReader0.mark(3133);
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance();
      String string0 = "BNfVr";
      StrTokenizer strTokenizer1 = strBuilder_StrBuilderTokenizer0.reset("BNfVr");
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      String string1 = null;
      char[] charArray0 = new char[5];
      charArray0[0] = '_';
      charArray0[1] = 'V';
      charArray0[2] = ',';
      charArray0[3] = 'M';
      charArray0[4] = '~';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrTokenizer strTokenizer2 = strBuilder_StrBuilderTokenizer0.setTrimmerMatcher(strMatcher0);
      boolean boolean0 = strBuilder_StrBuilderTokenizer0.hasNext();
      // Undeclared exception!
      try { 
        strBuilder1.replace(strMatcher0, (String) null, 3133, 3133, 3133);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[0];
      int int0 = 1353;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.nextToken();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.next();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      int int0 = 102;
      StrBuilder strBuilder0 = new StrBuilder(102);
      StrBuilder strBuilder1 = strBuilder0.trim();
      Integer integer0 = new Integer(102);
      StrBuilder strBuilder2 = strBuilder1.append((Object) integer0);
      StrBuilder strBuilder3 = strBuilder2.trim();
      String string0 = strBuilder0.getNewLineText();
      StrBuilder strBuilder4 = strBuilder0.replaceFirst('X', 'X');
      StrBuilder strBuilder5 = strBuilder4.append((float) 102);
      char[] charArray0 = new char[9];
      charArray0[0] = 'X';
      charArray0[1] = 'X';
      charArray0[2] = 'X';
      charArray0[3] = 'X';
      charArray0[4] = 'X';
      charArray0[5] = 'X';
      charArray0[6] = 'X';
      charArray0[7] = 'X';
      charArray0[8] = 'X';
      // Undeclared exception!
      try { 
        strBuilder5.insert(3932, charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3932
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("M;EyLA", "");
      String string0 = "";
      StrBuilder strBuilder2 = strBuilder0.append("");
      StrBuilder strBuilder3 = strBuilder0.replace(0, 0, "wRfxCQk3y");
      int int0 = strBuilder2.length();
      int int1 = strBuilder2.capacity();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder3.new StrBuilderTokenizer();
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = null;
      try {
        strMatcher_StringMatcher0 = new StrMatcher.StringMatcher((String) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrMatcher$StringMatcher", e);
      }
  }
}
