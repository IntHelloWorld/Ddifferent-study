* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.math3.optimization.linear.SimplexTableau
* Starting client
* Connecting to master process on port 13283
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/patch1-Math-33-CapGen/Math_33_1_capgen/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math3.optimization.linear.SimplexTableau
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 189
  - Branch 154
  - Exception 0
  - MutationFactory 545
  - Output 72
  - Method 27
  - MethodNoException 27
  - CBranchFitnessFactory 154
* Using seed 1585452299172
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%][Progress:==>                           8%] [Cov:=>                                 4%][Progress:==>                           8%] [Cov:==>                                6%][Progress:==>                           8%] [Cov:======>                            18%][Progress:==>                           8%] [Cov:=======>                           21%][Progress:===>                          10%] [Cov:=======>                           22%][Progress:===>                          10%] [Cov:========>                          23%][Progress:===>                          10%] [Cov:========>                          25%][Progress:===>                          10%] [Cov:=========>                         26%][Progress:===>                          10%] [Cov:=========>                         27%][Progress:====>                         15%] [Cov:==>                                7%][Progress:====>                         15%] [Cov:===>                               11%][Progress:====>                         15%] [Cov:========>                          24%][Progress:====>                         15%] [Cov:===========>                       32%][Progress:====>                         15%] [Cov:===========>                       34%][Progress:====>                         15%] [Cov:=============>                     39%][Progress:====>                         15%] [Cov:===============>                   44%][Progress:====>                         16%] [Cov:================>                  46%][Progress:=====>                        18%] [Cov:====>                              12%][Progress:=====>                        18%] [Cov:=======>                           20%][Progress:=====>                        18%] [Cov:========>                          25%][Progress:=====>                        18%] [Cov:=========>                         26%][Progress:=====>                        18%] [Cov:==========>                        31%][Progress:=====>                        18%] [Cov:============>                      35%][Progress:=====>                        18%] [Cov:============>                      36%][Progress:======>                       20%] [Cov:=>                                 4%][Progress:======>                       20%] [Cov:==>                                7%][Progress:======>                       20%] [Cov:=======>                           20%][Progress:======>                       20%] [Cov:========>                          24%][Progress:======>                       20%] [Cov:========>                          25%][Progress:======>                       20%] [Cov:=========>                         28%][Progress:======>                       20%] [Cov:==========>                        31%][Progress:======>                       20%] [Cov:===========>                       32%][Progress:======>                       21%] [Cov:=>                                 3%][Progress:======>                       23%] [Cov:=>                                 5%][Progress:======>                       23%] [Cov:======>                            18%][Progress:======>                       23%] [Cov:=======>                           21%][Progress:======>                       23%] [Cov:========>                          23%][Progress:======>                       23%] [Cov:========>                          25%][Progress:======>                       23%] [Cov:=========>                         26%][Progress:======>                       23%] [Cov:=========>                         27%][Progress:======>                       23%] [Cov:=========>                         28%][Progress:======>                       23%] [Cov:==========>                        29%][Progress:=======>                      25%] [Cov:========>                          25%][Progress:=======>                      25%] [Cov:===========>                       33%][Progress:=======>                      25%] [Cov:===========>                       34%][Progress:=======>                      25%] [Cov:=============>                     38%][Progress:=======>                      25%] [Cov:==============>                    42%][Progress:=======>                      25%] [Cov:===============>                   45%][Progress:=========>                    30%] [Cov:=>                                 4%][Progress:=========>                    30%] [Cov:==>                                7%][Progress:=========>                    30%] [Cov:=======>                           20%][Progress:=========>                    30%] [Cov:========>                          23%][Progress:=========>                    30%] [Cov:========>                          24%][Progress:=========>                    30%] [Cov:=========>                         26%][Progress:=========>                    30%] [Cov:=========>                         28%][Progress:=========>                    30%] [Cov:==========>                        31%][Progress:=========>                    30%] [Cov:===========>                       34%][Progress:=========>                    30%] [Cov:============>                      37%][Progress:=========>                    30%] [Cov:===============>                   44%][Progress:=========>                    30%] [Cov:=================>                 51%][Progress:=========>                    30%] [Cov:===================>               55%][Progress:=========>                    31%] [Cov:========>                          24%][Progress:=========>                    31%] [Cov:=========>                         27%][Progress:=========>                    31%] [Cov:==========>                        29%][Progress:=========>                    31%] [Cov:==========>                        31%][Progress:=========>                    31%] [Cov:============>                      35%][Progress:=========>                    31%] [Cov:============>                      36%][Progress:=========>                    31%] [Cov:=============>                     38%][Progress:=========>                    31%] [Cov:==============>                    40%][Progress:=========>                    33%] [Cov:=>                                 4%][Progress:=========>                    33%] [Cov:==>                                6%][Progress:=========>                    33%] [Cov:======>                            18%][Progress:=========>                    33%] [Cov:=======>                           21%][Progress:=========>                    33%] [Cov:========>                          23%][Progress:=========>                    33%] [Cov:========>                          24%][Progress:=========>                    33%] [Cov:========>                          25%][Progress:=========>                    33%] [Cov:=========>                         26%][Progress:=========>                    33%] [Cov:=========>                         27%][Progress:=========>                    33%] [Cov:==========>                        31%][Progress:=========>                    33%] [Cov:============>                      36%][Progress:=========>                    33%] [Cov:============>                      37%][Progress:============>                 40%] [Cov:==>                                6%][Progress:============>                 40%] [Cov:===>                               11%][Progress:============>                 40%] [Cov:========>                          23%][Progress:============>                 40%] [Cov:==========>                        31%][Progress:============>                 40%] [Cov:===========>                       33%][Progress:============>                 40%] [Cov:=============>                     39%][Progress:============>                 40%] [Cov:===============>                   44%][Progress:============>                 40%] [Cov:================>                  47%][Progress:===============>              50%] [Cov:=>                                 4%][Progress:===============>              50%] [Cov:==>                                6%][Progress:===============>              50%] [Cov:======>                            19%][Progress:===============>              50%] [Cov:========>                          23%][Progress:===============>              50%] [Cov:========>                          25%][Progress:===============>              50%] [Cov:=========>                         26%][Progress:===============>              50%] [Cov:=========>                         27%][Progress:===============>              50%] [Cov:==========>                        30%][Progress:===============>              50%] [Cov:==========>                        31%][Progress:===============>              50%] [Cov:===========>                       34%][Progress:===============>              50%] [Cov:=============>                     38%][Progress:===============>              50%] [Cov:=============>                     39%][Progress:===============>              51%] [Cov:=>                                 4%][Progress:===============>              51%] [Cov:==>                                7%][Progress:===============>              51%] [Cov:=======>                           20%][Progress:===============>              51%] [Cov:========>                          25%][Progress:===============>              51%] [Cov:=========>                         28%][Progress:===============>              51%] [Cov:==========>                        31%][Progress:===============>              51%] [Cov:===========>                       32%][Progress:===============>              51%] [Cov:===========>                       34%][Progress:===============>              51%] [Cov:============>                      37%][Progress:===============>              51%] [Cov:=============>                     39%][Progress:===============>              51%] [Cov:==============>                    42%][Progress:===============>              51%] [Cov:===================>               55%][Progress:===============>              53%] [Cov:============>                      36%][Progress:===============>              53%] [Cov:==============>                    41%][Progress:===============>              53%] [Cov:================>                  47%][Progress:================>             55%] [Cov:==============>                    41%][Progress:================>             55%] [Cov:================>                  47%][Progress:================>             55%] [Cov:==================>                52%][Progress:================>             55%] [Cov:===================>               55%][Progress:================>             56%] [Cov:=========>                         26%][Progress:================>             56%] [Cov:=========>                         27%][Progress:================>             56%] [Cov:==============>                    42%][Progress:================>             56%] [Cov:==================>                52%][Progress:================>             56%] [Cov:===================>               55%][Progress:=================>            58%] [Cov:=========>                         26%][Progress:=================>            58%] [Cov:===========>                       32%][Progress:=================>            58%] [Cov:================>                  47%][Progress:=================>            58%] [Cov:===================>               55%][Progress:==================>           60%] [Cov:==========>                        31%][Progress:==================>           60%] [Cov:============>                      37%][Progress:==================>           61%] [Cov:=========================>         74%][Progress:==================>           61%] [Cov:==========================>        75%][Progress:==================>           63%] [Cov:=========================>         74%][Progress:===================>          65%] [Cov:=========================>         73%][Progress:===================>          65%] [Cov:=========================>         74%][Progress:===================>          65%] [Cov:==========================>        75%][Progress:===================>          66%] [Cov:=========================>         73%][Progress:===================>          66%] [Cov:=========================>         74%][Progress:====================>         68%] [Cov:==========================>        75%][Progress:=====================>        70%] [Cov:=========================>         74%][Progress:=====================>        70%] [Cov:==========================>        75%][Progress:=====================>        71%] [Cov:=========================>         73%][Progress:=====================>        71%] [Cov:=========================>         74%][Progress:=====================>        71%] [Cov:==========================>        75%][Progress:=====================>        71%] [Cov:==========================>        75%][Progress:=====================>        73%] [Cov:==========================>        75%][Progress:======================>       75%] [Cov:==========================>        75%][Progress:======================>       76%] [Cov:=========================>         72%][Progress:======================>       76%] [Cov:=========================>         74%][Progress:======================>       76%] [Cov:==========================>        75%][Progress:=======================>      78%] [Cov:=========================>         73%][Progress:=======================>      78%] [Cov:=========================>         74%][Progress:=======================>      78%] [Cov:==========================>        75%][Progress:========================>     80%] [Cov:==========================>        75%][Progress:========================>     81%] [Cov:==========================>        75%][Progress:========================>     83%] [Cov:=========================>         74%][Progress:========================>     83%] [Cov:==========================>        75%][Progress:=========================>    85%] [Cov:=========================>         74%][Progress:=========================>    85%] [Cov:==========================>        75%][Progress:=========================>    85%] [Cov:==========================>        75%][Progress:=========================>    86%] [Cov:==========================>        75%][Progress:==========================>   88%] [Cov:==========================>        75%][Progress:===========================>  90%] [Cov:==========================>        75%][Progress:===========================>  91%] [Cov:=========================>         74%][Progress:===========================>  91%] [Cov:==========================>        75%][Progress:===========================>  93%] [Cov:==========================>        75%][Progress:===========================>  93%] [Cov:==========================>        76%][Progress:============================> 95%] [Cov:==========================>        75%][Progress:============================> 96%] [Cov:==========================>        75%][Progress:============================> 96%] [Cov:==========================>        76%][Progress:==============================100%] [Cov:==========================>        75%][Progress:==============================100%] [Cov:==========================>        76%][Progress:==============================100%] [Cov:==========================>        76%][Progress:==============================100%] [Cov:==========================>        76%][Progress:==============================100%] [Cov:==========================>        76%][Progress:==============================100%] [Cov:===========================>       78%]
* Search finished after 62s and 8 generations, 8129 statements, best individual has fitness: 341.8775422047336
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 78%
* Total number of goals: 189
* Number of covered goals: 148
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 71%
* Total number of goals: 154
* Number of covered goals: 109
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 79%
* Total number of goals: 545
* Number of covered goals: 431
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 43%
* Total number of goals: 72
* Number of covered goals: 31
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 27
* Number of covered goals: 27
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 89%
* Total number of goals: 27
* Number of covered goals: 24
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 71%
* Total number of goals: 154
* Number of covered goals: 109
* Generated 50 tests with total length 309
* Resulting test suite's coverage: 79% (average coverage for all fitness functions)
* Compiling and checking tests
* Writing JUnit test case 'SimplexTableau_ESTest' to evosuite-tests
* Done!

* Computation finished
