* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer
* Starting client
* Connecting to master process on port 15040
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/patch1-Math-65-CapGen/Math_65_1_capgen/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 97
  - Branch 40
  - Exception 0
  - MutationFactory 398
  - Output 31
  - Method 17
  - MethodNoException 17
  - CBranchFitnessFactory 40
[Progress:>                             0%] [Cov:>                                  0%]* Using seed 1585453944990
* Starting evolution
[Progress:===>                          11%] [Cov:=>                                 4%][Progress:===>                          11%] [Cov:==>                                7%][Progress:===>                          11%] [Cov:=======>                           20%][Progress:===>                          11%] [Cov:=======>                           22%][Progress:===>                          13%] [Cov:=========>                         28%][Progress:===>                          13%] [Cov:==========>                        31%][Progress:===>                          13%] [Cov:===========>                       32%][Progress:===>                          13%] [Cov:============>                      35%][Progress:====>                         15%] [Cov:==============>                    40%][Progress:====>                         15%] [Cov:==============>                    42%][Progress:====>                         15%] [Cov:===============>                   43%][Progress:====>                         15%] [Cov:===============>                   45%][Progress:====>                         16%] [Cov:=>                                 5%][Progress:====>                         16%] [Cov:===>                               9%][Progress:====>                         16%] [Cov:=======>                           21%][Progress:====>                         16%] [Cov:========>                          25%][Progress:====>                         16%] [Cov:=========>                         26%][Progress:====>                         16%] [Cov:===========>                       32%][Progress:====>                         16%] [Cov:============>                      36%][Progress:====>                         16%] [Cov:=============>                     38%][Progress:=====>                        18%] [Cov:=======>                           22%][Progress:=====>                        18%] [Cov:========>                          23%][Progress:=====>                        18%] [Cov:=========>                         27%][Progress:=====>                        18%] [Cov:==========>                        29%][Progress:=====>                        18%] [Cov:==========>                        30%][Progress:=====>                        18%] [Cov:==========>                        31%][Progress:======>                       20%] [Cov:>                                  2%][Progress:======>                       20%] [Cov:=>                                 5%][Progress:======>                       20%] [Cov:=====>                             17%][Progress:======>                       20%] [Cov:======>                            19%][Progress:======>                       20%] [Cov:========>                          23%][Progress:======>                       20%] [Cov:========>                          24%][Progress:======>                       20%] [Cov:========>                          25%][Progress:======>                       20%] [Cov:=========>                         26%][Progress:======>                       21%] [Cov:==========>                        30%][Progress:======>                       21%] [Cov:==========>                        31%][Progress:======>                       21%] [Cov:============>                      35%][Progress:======>                       21%] [Cov:=============>                     39%][Progress:======>                       21%] [Cov:==============>                    41%][Progress:======>                       23%] [Cov:========>                          23%][Progress:======>                       23%] [Cov:========>                          24%][Progress:======>                       23%] [Cov:=========>                         28%][Progress:======>                       23%] [Cov:==========>                        30%][Progress:======>                       23%] [Cov:==========>                        31%][Progress:======>                       23%] [Cov:===========>                       33%][Progress:=======>                      25%] [Cov:=>                                 3%][Progress:=======>                      25%] [Cov:==>                                6%][Progress:=======>                      25%] [Cov:======>                            18%][Progress:=======>                      25%] [Cov:======>                            19%][Progress:=======>                      25%] [Cov:========>                          23%][Progress:=======>                      25%] [Cov:========>                          25%][Progress:=======>                      25%] [Cov:=========>                         28%][Progress:=======>                      25%] [Cov:===========>                       32%][Progress:=======>                      25%] [Cov:===========>                       33%][Progress:=======>                      26%] [Cov:========>                          23%][Progress:=======>                      26%] [Cov:========>                          24%][Progress:=======>                      26%] [Cov:==========>                        29%][Progress:=======>                      26%] [Cov:===========>                       32%][Progress:=======>                      26%] [Cov:===========>                       33%][Progress:=======>                      26%] [Cov:============>                      35%][Progress:=======>                      26%] [Cov:============>                      37%][Progress:=======>                      26%] [Cov:===============>                   45%][Progress:========>                     28%] [Cov:==============>                    40%][Progress:========>                     28%] [Cov:==============>                    41%][Progress:=========>                    30%] [Cov:=====>                             17%][Progress:=========>                    30%] [Cov:======>                            19%][Progress:=========>                    30%] [Cov:=======>                           20%][Progress:=========>                    30%] [Cov:=========>                         26%][Progress:=========>                    30%] [Cov:==========>                        31%][Progress:=========>                    30%] [Cov:===========>                       32%][Progress:=========>                    30%] [Cov:===========>                       33%][Progress:=========>                    31%] [Cov:===========>                       33%][Progress:=========>                    31%] [Cov:============>                      35%][Progress:=========>                    31%] [Cov:============>                      36%][Progress:=========>                    31%] [Cov:=============>                     38%][Progress:=========>                    33%] [Cov:======>                            19%][Progress:=========>                    33%] [Cov:===========>                       32%][Progress:=========>                    33%] [Cov:============>                      35%][Progress:=========>                    33%] [Cov:============>                      36%][Progress:=========>                    33%] [Cov:==============>                    40%][Progress:=========>                    33%] [Cov:==============>                    41%][Progress:=========>                    33%] [Cov:===============>                   43%][Progress:=========>                    33%] [Cov:===============>                   44%][Progress:==========>                   36%] [Cov:=====>                             17%][Progress:==========>                   36%] [Cov:============>                      35%][Progress:==========>                   36%] [Cov:===============>                   44%][Progress:===========>                  38%] [Cov:====================>              58%][Progress:============>                 40%] [Cov:====================>              58%][Progress:============>                 40%] [Cov:====================>              59%][Progress:============>                 41%] [Cov:===================>               56%][Progress:============>                 41%] [Cov:===================>               57%][Progress:============>                 41%] [Cov:====================>              58%][Progress:============>                 43%] [Cov:====================>              59%][Progress:=============>                45%] [Cov:====================>              59%][Progress:=============>                46%] [Cov:===================>               57%][Progress:=============>                46%] [Cov:====================>              58%][Progress:=============>                46%] [Cov:====================>              59%][Progress:==============>               48%] [Cov:====================>              58%][Progress:==============>               48%] [Cov:====================>              59%][Progress:===============>              50%] [Cov:====================>              58%][Progress:===============>              50%] [Cov:====================>              59%][Progress:===============>              51%] [Cov:====================>              59%][Progress:===============>              53%] [Cov:====================>              58%][Progress:===============>              53%] [Cov:====================>              59%][Progress:===============>              53%] [Cov:=====================>             60%][Progress:================>             55%] [Cov:====================>              59%][Progress:================>             55%] [Cov:=====================>             60%][Progress:================>             56%] [Cov:=====================>             62%][Progress:=================>            58%] [Cov:=====================>             60%][Progress:=================>            58%] [Cov:=====================>             61%][Progress:=================>            58%] [Cov:=====================>             62%][Progress:==================>           60%] [Cov:=====================>             62%][Progress:==================>           61%] [Cov:=====================>             61%][Progress:==================>           61%] [Cov:=====================>             62%][Progress:==================>           63%] [Cov:=====================>             61%][Progress:==================>           63%] [Cov:=====================>             62%][Progress:===================>          65%] [Cov:=====================>             60%][Progress:===================>          65%] [Cov:=====================>             61%][Progress:===================>          65%] [Cov:=====================>             62%][Progress:===================>          66%] [Cov:=====================>             62%][Progress:====================>         68%] [Cov:=====================>             61%][Progress:====================>         68%] [Cov:=====================>             62%][Progress:====================>         68%] [Cov:=====================>             62%][Progress:=====================>        70%] [Cov:=====================>             61%][Progress:=====================>        70%] [Cov:=====================>             62%][Progress:=====================>        71%] [Cov:=====================>             61%][Progress:=====================>        71%] [Cov:=====================>             62%][Progress:=====================>        73%] [Cov:=====================>             62%][Progress:======================>       75%] [Cov:=====================>             62%][Progress:======================>       76%] [Cov:=====================>             62%][Progress:=======================>      78%] [Cov:=====================>             62%][Progress:========================>     80%] [Cov:=====================>             62%][Progress:========================>     81%] [Cov:=====================>             62%][Progress:========================>     83%] [Cov:=====================>             61%][Progress:========================>     83%] [Cov:=====================>             62%][Progress:========================>     83%] [Cov:=====================>             62%][Progress:=========================>    85%] [Cov:=====================>             62%][Progress:=========================>    85%] [Cov:======================>            63%][Progress:===========================>  90%] [Cov:=====================>             62%][Progress:===========================>  90%] [Cov:======================>            63%][Progress:===========================>  91%] [Cov:=====================>             62%][Progress:===========================>  91%] [Cov:======================>            63%][Progress:===========================>  93%] [Cov:=====================>             62%][Progress:===========================>  93%] [Cov:======================>            63%][Progress:============================> 95%] [Cov:======================>            64%][Progress:============================> 96%] [Cov:======================>            63%][Progress:============================> 96%] [Cov:======================>            64%][Progress:============================> 96%] [Cov:======================>            64%][Progress:=============================>98%] [Cov:======================>            63%][Progress:=============================>98%] [Cov:======================>            64%][Progress:==============================100%] [Cov:======================>            64%][Progress:==============================100%] [Cov:======================>            63%][Progress:==============================100%] [Cov:======================>            64%][Progress:==============================100%] [Cov:=======================>           66%]
* Search finished after 63s and 18 generations, 10744 statements, best individual has fitness: 316.6978707870787
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 67%
* Total number of goals: 97
* Number of covered goals: 65
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 60%
* Total number of goals: 40
* Number of covered goals: 24
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 44%
* Total number of goals: 398
* Number of covered goals: 175
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 32%
* Total number of goals: 31
* Number of covered goals: 10
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 17
* Number of covered goals: 17
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 71%
* Total number of goals: 17
* Number of covered goals: 12
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 57%
* Total number of goals: 40
* Number of covered goals: 23
* Generated 26 tests with total length 81
* Resulting test suite's coverage: 66% (average coverage for all fitness functions)
* Compiling and checking tests
* Writing JUnit test case 'AbstractLeastSquaresOptimizer_ESTest' to evosuite-tests
* Done!

* Computation finished
