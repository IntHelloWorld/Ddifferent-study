/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 28 18:54:40 GMT 2020
 */

package org.apache.commons.lang.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.Writer;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.NoSuchElementException;
import java.util.function.Consumer;
import org.apache.commons.lang.text.StrBuilder;
import org.apache.commons.lang.text.StrMatcher;
import org.apache.commons.lang.text.StrTokenizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StrBuilder_ESTest extends StrBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      char[] charArray0 = new char[2];
      charArray0[0] = 'u';
      charArray0[1] = 'y';
      int int0 = 48;
      StrBuilder strBuilder0 = new StrBuilder(48);
      // Undeclared exception!
      try { 
        strBuilder0.insert(48, (Object) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 48
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      StrBuilder strBuilder1 = strBuilder0.append((String) null, (-1246), 34);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      boolean boolean0 = strBuilder0.equals(strBuilder1);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      Object object0 = new Object();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(object0, 34, '?');
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight((Object) "Index: ", 34, '!');
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators((Collection) linkedList0, "^?iv:#G0Tx9Qq5HhF/");
      StrBuilder strBuilder4 = strBuilder1.replaceFirst("Index: ", "Index: ");
      char[] charArray0 = strBuilder0.toCharArray();
      String string0 = strBuilder4.getNullText();
      StrBuilder strBuilder5 = strBuilder2.replaceFirst('!', ':');
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      strBuilder0.validateIndex(0);
      boolean boolean0 = strBuilder0.isEmpty();
      StrBuilder strBuilder1 = strBuilder0.deleteAll('E');
      StringBuffer stringBuffer0 = strBuilder1.toStringBuffer();
      char[] charArray0 = new char[3];
      StrBuilder strBuilder2 = strBuilder0.append(1L);
      charArray0[0] = 'E';
      charArray0[1] = 'E';
      charArray0[2] = 'g';
      char[] charArray1 = strBuilder0.getChars(charArray0);
      int int0 = strBuilder0.hashCode();
      StrBuilder strBuilder3 = strBuilder0.replaceFirst("{Dn&!eR", (String) null);
      StrBuilder strBuilder4 = strBuilder3.insert(0, true);
      boolean boolean1 = strBuilder1.equals(strBuilder0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("', is neither of type Map.Entry nor an Array");
      StrBuilder strBuilder1 = strBuilder0.setNullText("");
      StrBuilder strBuilder2 = strBuilder0.insert(0, true);
      StrBuilder strBuilder3 = strBuilder1.deleteAll("', is neither of type Map.Entry nor an Array");
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrBuilder strBuilder4 = strBuilder1.replaceAll(strMatcher0, "', is neither of type Map.Entry nor an Array");
      StrBuilder strBuilder5 = strBuilder0.ensureCapacity(0);
      StrBuilder strBuilder6 = strBuilder4.appendFixedWidthPadLeft(0, 0, 'j');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      char char0 = 'r';
      int int0 = 0;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[8];
      charArray0[0] = 'r';
      charArray0[1] = 'r';
      charArray0[2] = 'r';
      charArray0[3] = 'r';
      charArray0[4] = 'r';
      charArray0[5] = 'r';
      charArray0[6] = 'r';
      charArray0[7] = 'r';
      // Undeclared exception!
      try { 
        strBuilder1.getChars(39, 0, charArray0, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      Object object0 = new Object();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(object0, 15, '?');
      String string0 = "Index: ";
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight((Object) "Index: ", 15, '!');
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setNullText("7jW$%=\"0D'aaCM");
      String string0 = strBuilder1.leftString(108);
      StrBuilder strBuilder2 = strBuilder0.append("");
      StrBuilder strBuilder3 = strBuilder2.append((char[]) null, (-1713), 108);
      // Undeclared exception!
      try { 
        strBuilder1.insert((-1713), '8');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1713
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("LINUX");
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("g|Y N&_a");
      int int0 = strBuilder0.indexOf(strMatcher0, 598);
      int int1 = strBuilder0.capacity();
      char[] charArray0 = new char[8];
      charArray0[0] = '&';
      charArray0[1] = 'j';
      charArray0[2] = 'b';
      charArray0[3] = '~';
      charArray0[4] = '#';
      charArray0[5] = '&';
      charArray0[6] = 'Q';
      charArray0[7] = '~';
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher(charArray0);
      char[] charArray1 = new char[0];
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "w[46Cz=kVadsnw2]6.y");
      StrBuilder strBuilder2 = strBuilder0.append(charArray1);
      StrMatcher strMatcher3 = StrMatcher.charSetMatcher(charArray1);
      // Undeclared exception!
      try { 
        strBuilder2.replace(strMatcher3, "J/NSIRy?2b-H{xz", 37, 598, 598);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(213);
      StrBuilder strBuilder1 = strBuilder0.append((Object) null);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      int int0 = strBuilder1.lastIndexOf(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.append('f');
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      String string0 = "";
      strBuilder0.size = 902;
      StrMatcher strMatcher0 = strTokenizer0.getIgnoredMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder0.insert(50, false);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) "org.apache.commons.lang.text.StrBuilder", (-1087), 'j');
      StrBuilder strBuilder2 = strBuilder1.setNewLineText("org.apache.commons.lang.text.StrBuilder");
      char[] charArray0 = new char[0];
      StrBuilder strBuilder3 = strBuilder0.appendPadding(3389, '^');
      int int0 = strBuilder0.indexOf('Q');
      String string0 = strBuilder0.rightString((-271));
      StrBuilder strBuilder4 = strBuilder3.insert(2062, (-879.2F));
      // Undeclared exception!
      try { 
        strBuilder4.validateRange((-1248), (-512));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1248
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("', is neither of type Map.Entry nor an Array");
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.insert(0, true);
      StrBuilder strBuilder2 = strBuilder1.append(strBuilder0, 0, 0);
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      // Undeclared exception!
      try { 
        strBuilder0.replaceAll(strMatcher0, "', is neither of type Map.Entry nor an Array");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 76
         //
         verifyException("org.apache.commons.lang.text.StrMatcher$CharMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      int int0 = 2760;
      int int1 = strBuilder0.lastIndexOf(strMatcher0, 2760);
      // Undeclared exception!
      try { 
        strBuilder0.equalsIgnoreCase((StrBuilder) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "";
      StringBuffer stringBuffer0 = new StringBuffer("");
      int int0 = 1;
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, (-1574), 1);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Pd>");
      StrBuilder strBuilder1 = new StrBuilder((-2432));
      StrBuilder strBuilder2 = strBuilder1.minimizeCapacity();
      // Undeclared exception!
      try { 
        strBuilder2.validateRange((-2432), (-2432));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2432
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("5j:g.6N");
      StrBuilder strBuilder1 = new StrBuilder("Invalid offset: ");
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder3 = strBuilder0.appendWithSeparators((Collection) linkedList0, "=XcWOvNCE.CV/C<n");
      Object object0 = linkedList0.pollFirst();
      StrBuilder strBuilder4 = strBuilder3.replaceFirst("=XcWOvNCE.CV/C<n", "");
      int int0 = 9;
      StrBuilder strBuilder5 = strBuilder3.insert(9, false);
      StringBuffer stringBuffer0 = null;
      try {
        stringBuffer0 = new StringBuffer((String) null);
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      char[] charArray0 = strBuilder0.toCharArray(0, 0);
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1));
      int int0 = strBuilder0.lastIndexOf((String) null);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder("N{CA||Vw*|X'6@DOdyh");
      boolean boolean0 = strBuilder0.equals(strBuilder1);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setQuoteMatcher(strMatcher_NoMatcher0);
      char[] charArray0 = new char[0];
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "N{CA||Vw*|X'6@DOdyh");
      StrBuilder strBuilder3 = strBuilder1.append(0.0);
      StrBuilder strBuilder4 = strBuilder2.clear();
      String string0 = strBuilder1.leftString(101);
      int int0 = strBuilder1.lastIndexOf("0", 101);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        strBuilder2.insert(2453, object0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2453
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2952));
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((-2952), 1671, 'M');
      StrBuilder strBuilder2 = strBuilder1.append("9{|C");
      int int0 = strBuilder0.size();
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("}Y.");
      char char0 = 'P';
      int int0 = 9;
      int int1 = strBuilder0.indexOf('P', 9);
      StrBuilder strBuilder1 = strBuilder0.append(1.0F);
      // Undeclared exception!
      try { 
        strBuilder1.deleteCharAt(9);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 9
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.insert(0, (long) 0);
      StrBuilder strBuilder2 = strBuilder1.setCharAt(0, '\'');
      StrBuilder strBuilder3 = strBuilder2.insert(0, (-2078.056925583));
      StrBuilder strBuilder4 = strBuilder2.ensureCapacity(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder4.new StrBuilderTokenizer();
      StrBuilder strBuilder5 = strBuilder2.setNullText("");
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "-2078.056925583'");
      String string1 = strBuilder_StrBuilderTokenizer0.getContent();
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setQuoteMatcher(strMatcher0);
      int int1 = 5;
      // Undeclared exception!
      try { 
        strBuilder4.append(stringBuffer0, 5, 102);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      int int0 = (-2859);
      StrBuilder strBuilder0 = new StrBuilder((-2859));
      char[] charArray0 = new char[8];
      charArray0[0] = 'v';
      String string0 = strBuilder0.leftString(0);
      charArray0[1] = 'e';
      charArray0[2] = ']';
      charArray0[3] = 'j';
      charArray0[4] = 'v';
      charArray0[5] = 'e';
      charArray0[6] = 'j';
      charArray0[7] = 'o';
      // Undeclared exception!
      try { 
        strBuilder0.insert(0, charArray0, (-2859), 101);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: -2859
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = strBuilder0.toCharArray();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = 57;
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 57, 57);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      String string0 = "";
      strBuilder0.size = 902;
      // Undeclared exception!
      try { 
        strBuilder0.append('\\');
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Writer writer0 = strBuilder0.asWriter();
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      int int0 = 1901;
      StrBuilder strBuilder1 = strBuilder0.replace(strMatcher0, " GKd", 0, 1901, (-1));
      char[] charArray0 = new char[5];
      charArray0[0] = 'O';
      charArray0[1] = '\\';
      charArray0[2] = ':';
      charArray0[3] = '>';
      charArray0[4] = 'k';
      int int1 = strMatcher0.isMatch(charArray0, 0, 1901, 0);
      StrBuilder strBuilder2 = strBuilder1.deleteFirst((String) null);
      StrBuilder strBuilder3 = strBuilder2.deleteFirst((String) null);
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      // Undeclared exception!
      try { 
        strBuilder0.charAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      strBuilder_StrBuilderWriter0.write((char[]) null, (-1604), 101);
      Integer integer0 = new Integer(0);
      boolean boolean0 = linkedList0.add(integer0);
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
      String string0 = strBuilder2.substring(0, 0);
      StrBuilder strBuilder3 = strBuilder2.append('v');
      StrBuilder strBuilder4 = strBuilder2.setNewLineText("obab1)8|+8xO_mI!(");
      StrBuilder strBuilder5 = strBuilder1.replaceAll("", "obab1)8|+8xO_mI!(");
      StrBuilder strBuilder6 = strBuilder0.insert(0, 0L);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder5.new StrBuilderReader();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "");
      StrBuilder strBuilder7 = strBuilder5.deleteFirst("lX*B&0[KQ");
      int int0 = strBuilder_StrBuilderReader0.read(charBuffer0);
      strBuilder_StrBuilderReader0.close();
      StrBuilder strBuilder8 = strBuilder0.appendNewLine();
      boolean boolean1 = strBuilder8.contains("");
      StrBuilder strBuilder9 = strBuilder1.appendNull();
      strBuilder_StrBuilderReader0.reset();
      strBuilder_StrBuilderWriter0.flush();
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) strBuilder_StrBuilderReader0;
      objectArray0[1] = (Object) strBuilder5;
      objectArray0[2] = (Object) strBuilder2;
      StrBuilder strBuilder10 = strBuilder4.appendWithSeparators(objectArray0, "");
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((StringBuffer) null);
      char[] charArray0 = new char[7];
      charArray0[0] = 'L';
      charArray0[1] = 'o';
      charArray0[2] = 'H';
      charArray0[3] = '\'';
      charArray0[4] = '5';
      charArray0[5] = 'H';
      charArray0[6] = 'r';
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0, 2);
      StrBuilder strBuilder2 = strBuilder0.append(charArray0);
      char[] charArray1 = strBuilder2.toCharArray(0, 0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      int int0 = 1504;
      StrBuilder strBuilder0 = new StrBuilder(1504);
      StrBuilder strBuilder1 = strBuilder0.append(0.0F);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((char[]) null);
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance();
      String string0 = "";
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "");
      StrBuilder strBuilder3 = strBuilder2.append('H');
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('i');
      int int1 = strBuilder0.lastIndexOf(strMatcher0, 1504);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read((char[]) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.midString(4, (-6722));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string1 = strBuilder_StrBuilderTokenizer0.getContent();
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      String string0 = "uSBYDO:Vi";
      StrBuilder strBuilder0 = new StrBuilder("uSBYDO:Vi");
      char char0 = '\'';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(1, 1, '\'');
      int int0 = (-2608);
      int int1 = strBuilder0.indexOf('o', (-2608));
      StrMatcher strMatcher0 = null;
      StrBuilder strBuilder2 = strBuilder1.ensureCapacity(1);
      StrBuilder strBuilder3 = strBuilder2.append((String) null);
      int int2 = strBuilder1.lastIndexOf((StrMatcher) null);
      // Undeclared exception!
      try { 
        strBuilder1.setCharAt((-1929), '\'');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1929
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(909);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("Invalid length: ");
      StrBuilder strBuilder2 = strBuilder1.setNullText("Invalid length: ");
      int int0 = 0;
      StrBuilder strBuilder3 = strBuilder1.appendFixedWidthPadLeft(0, 0, '1');
      int int1 = 102;
      // Undeclared exception!
      try { 
        strBuilder0.insert(102, (long) 909);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 102
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "");
      StringBuffer stringBuffer1 = stringBuffer0.appendCodePoint(1990);
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrBuilder strBuilder2 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder3 = strBuilder2.appendNewLine();
      StrBuilder strBuilder4 = strBuilder1.replaceFirst('/', 'c');
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = "qzT{ZJMQD&E.~=G";
      StrBuilder strBuilder1 = strBuilder0.insert(0, "*'!T-Gmc_}34j.M!.P");
      boolean boolean0 = strBuilder0.endsWith("qzT{ZJMQD&E.~=G");
      char char0 = strBuilder0.charAt(0);
      int int0 = 1908;
      int int1 = 0;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.previous();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid length: ");
      char char0 = strBuilder0.charAt(0);
      int int0 = strBuilder0.validateRange(0, 0);
      StrBuilder strBuilder1 = strBuilder0.append((double) 0);
      StrBuilder strBuilder2 = strBuilder1.replaceAll("\"w", "");
      StrBuilder strBuilder3 = strBuilder1.clear();
      boolean boolean0 = strBuilder1.endsWith("Invalid length: ");
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("[`fl>l).5)}ilG,");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(811, 97, '%');
      StrTokenizer strTokenizer0 = strBuilder1.asTokenizer();
      strBuilder_StrBuilderWriter0.write("Solaris");
      StrBuilder strBuilder2 = strBuilder0.replaceFirst("", "Solaris");
      String string0 = strBuilder1.toString();
      String string1 = strBuilder2.substring(9);
      StrBuilder strBuilder3 = strBuilder1.setNullText("#");
      boolean boolean0 = strBuilder1.startsWith("");
      StrBuilder strBuilder4 = strBuilder0.insert(0, (double) 0);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1);
      StrBuilder strBuilder1 = strBuilder0.reverse();
      StrBuilder strBuilder2 = strBuilder1.replaceFirst("", "}-b/FWUu}!a}I");
      StrBuilder strBuilder3 = strBuilder1.replaceAll("'i", "'i");
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('.');
      int int0 = strBuilder1.lastIndexOf(strMatcher0);
      int int1 = strBuilder0.lastIndexOf("");
      int int2 = strBuilder0.capacity();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      char[] charArray0 = new char[8];
      charArray0[0] = '.';
      charArray0[1] = '.';
      charArray0[2] = '.';
      charArray0[3] = '.';
      charArray0[4] = '.';
      charArray0[5] = ')';
      charArray0[6] = '.';
      charArray0[7] = '.';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int3 = strBuilder_StrBuilderReader0.read(charBuffer0);
      long long0 = strBuilder_StrBuilderReader0.skip(32);
      strBuilder_StrBuilderReader0.reset();
      // Undeclared exception!
      try { 
        strBuilder0.replace((-1), 31, "user.timezone");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.append((float) 0);
      String string0 = strBuilder1.rightString(0);
      StrBuilder strBuilder2 = strBuilder1.insert(0, 0);
      StrBuilder strBuilder3 = strBuilder2.deleteAll("");
      StrBuilder strBuilder4 = strBuilder3.append('t');
      String string1 = strBuilder0.midString(250, (-555));
      // Undeclared exception!
      try { 
        strBuilder1.getChars(250, 250, (char[]) null, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 250
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      String string0 = null;
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      int int0 = 0;
      int int1 = 0;
      char[] charArray0 = new char[2];
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Object[]) null, "-=3!y`$c8");
      charArray0[0] = '.';
      charArray0[1] = ':';
      int int2 = 48;
      // Undeclared exception!
      try { 
        strBuilder0.getChars(0, 0, charArray0, 48);
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      char[] charArray0 = new char[8];
      charArray0[0] = 'C';
      charArray0[1] = ']';
      charArray0[2] = '?';
      charArray0[3] = 'A';
      charArray0[4] = 'x';
      charArray0[5] = '(';
      charArray0[6] = '1';
      charArray0[7] = 'G';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0, 0, 2);
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Collection) null, "");
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.insert(0, (double) 0);
      Writer writer0 = strBuilder1.asWriter();
      StrBuilder strBuilder2 = strBuilder0.delete(0, 0);
      StrBuilder strBuilder3 = strBuilder2.insert(0, (String) null);
      int int1 = Integer.MAX_VALUE;
      int int2 = strBuilder0.indexOf((String) null, Integer.MAX_VALUE);
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(Integer.MAX_VALUE);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2147483647
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.indexOf((String) null, 32);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) "org.apache.commons.lang.text.StrBuilder", (-1087), 'j');
      long long0 = strBuilder_StrBuilderReader0.skip(1772L);
      char[] charArray0 = new char[0];
      StrBuilder strBuilder2 = strBuilder0.appendPadding(3389, '^');
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, (-271), (-271));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, (-419), 32);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      int int0 = (-1697);
      StrBuilder strBuilder0 = new StrBuilder((-1697));
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder2 = strBuilder1.minimizeCapacity();
      StrBuilder strBuilder3 = strBuilder0.clear();
      StrBuilder strBuilder4 = strBuilder3.deleteFirst('2');
      StrBuilder strBuilder5 = strBuilder0.deleteFirst("~eog8)qz\"c&LEAC<");
      Writer writer0 = strBuilder5.asWriter();
      StrBuilder strBuilder6 = strBuilder5.appendNewLine();
      int int1 = (-1907);
      String string0 = strBuilder0.midString((-1697), (-1907));
      StrBuilder strBuilder7 = strBuilder5.deleteFirst("X4pRQ+7uJUm");
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) "";
      objectArray0[1] = (Object) strBuilder7;
      objectArray0[2] = (Object) strBuilder1;
      StrBuilder strBuilder8 = strBuilder0.appendWithSeparators(objectArray0, "7D%)l");
      // Undeclared exception!
      try { 
        strBuilder7.appendFixedWidthPadRight(97, 1, 'A');
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 1727;
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex((-373));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -373
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("os.version");
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      StrBuilder strBuilder1 = strBuilder0.append(true);
      char[] charArray0 = new char[2];
      charArray0[0] = 'P';
      charArray0[1] = 'p';
      StrBuilder strBuilder2 = strBuilder0.delete(0, 0);
      int int0 = strMatcher0.isMatch(charArray0, 0, (-4376), (-4376));
      StrBuilder strBuilder3 = strBuilder0.replaceFirst(strMatcher0, "B@_<E*HD");
      StrBuilder strBuilder4 = strBuilder3.append(strBuilder1);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      boolean boolean0 = strBuilder3.equals(strBuilder0);
      StrBuilder strBuilder5 = strBuilder0.setNullText("");
      StrBuilder strBuilder6 = strBuilder5.replaceAll((String) null, "a`&vZ9/Uw,8Q]741:");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      char[] charArray1 = new char[5];
      charArray1[0] = 'p';
      charArray1[1] = 'P';
      charArray1[2] = 'P';
      charArray1[3] = 'p';
      charArray1[4] = 'P';
      strBuilder_StrBuilderWriter0.write(charArray1);
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) "");
      strBuilder_StrBuilderWriter0.close();
      int int1 = strBuilder1.lastIndexOf('(');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
      char char0 = strBuilder3.charAt(0);
      int int2 = strBuilder4.capacity();
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.vendor");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("HEv");
      StrBuilder strBuilder1 = strBuilder0.delete(1, 1);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = '\"';
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('\"', '\"');
      int int0 = 1537;
      StrBuilder strBuilder2 = strBuilder1.insert(0, (long) 0);
      // Undeclared exception!
      try { 
        strBuilder0.insert(1537, (double) 1537);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1537
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(39);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(" Q?yKT}5y95");
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(" Q?yKT}5y95", 0, 39);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      char[] charArray0 = new char[8];
      charArray0[0] = ')';
      charArray0[1] = 'Z';
      charArray0[2] = '&';
      charArray0[3] = 'j';
      charArray0[4] = 'f';
      charArray0[5] = '=';
      charArray0[6] = ' ';
      charArray0[7] = '5';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoreEmptyTokens(true);
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "");
      StrMatcher strMatcher0 = null;
      // Undeclared exception!
      try { 
        strBuilder2.append("", 2598, 1404);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrMatcher strMatcher0 = StrMatcher.charMatcher('^');
      StrBuilder strBuilder1 = strBuilder0.replaceFirst((StrMatcher) strMatcher_TrimMatcher0, "JXw");
      boolean boolean0 = strBuilder1.equals(strBuilder0);
      char[] charArray0 = new char[3];
      charArray0[0] = '^';
      charArray0[1] = '^';
      charArray0[2] = '^';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder2 = strBuilder0.replaceFirst("java.awt.headless", "VC/J");
      StrBuilder strBuilder3 = strBuilder1.replaceAll('^', '^');
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder4 = strBuilder2.appendWithSeparators((Collection) linkedList0, "");
      boolean boolean1 = strBuilder1.contains('4');
      int int0 = strBuilder2.indexOf('^', 0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      boolean boolean2 = strBuilder_StrBuilderReader0.ready();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      Writer writer0 = strBuilder_StrBuilderWriter0.append('$');
      strBuilder_StrBuilderWriter0.flush();
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = new StrBuilder(",<ZeMPPl_.");
      StrBuilder strBuilder2 = strBuilder0.insert(0, (Object) strBuilder1);
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder1);
      int int0 = strBuilder0.length();
      StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder4.new StrBuilderReader();
      int int1 = 1049;
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) strBuilder_StrBuilderReader0;
      objectArray0[1] = (Object) null;
      objectArray0[2] = (Object) null;
      objectArray0[3] = (Object) strBuilder0;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      objectArray0[4] = object0;
      String string0 = "";
      StrBuilder strBuilder5 = strBuilder1.appendWithSeparators(objectArray0, "");
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder6 = strBuilder5.replaceAll((StrMatcher) strMatcher_TrimMatcher0, "");
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = null;
      try {
        strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher((char[]) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrMatcher$CharSetMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      boolean boolean0 = linkedList0.add((Integer) null);
      Integer integer0 = new Integer(32);
      boolean boolean1 = linkedList0.add(integer0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "length must be valid");
      StrBuilder strBuilder2 = strBuilder0.clear();
      StrBuilder strBuilder3 = strBuilder0.trim();
      StrBuilder strBuilder4 = strBuilder0.setNewLineText("length must be valid");
      char[] charArray0 = new char[6];
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      int int0 = strBuilder4.indexOf((StrMatcher) strMatcher_TrimMatcher0);
      charArray0[0] = ')';
      charArray0[1] = 'g';
      charArray0[2] = '$';
      charArray0[3] = 'v';
      StrBuilder strBuilder5 = strBuilder4.append(0L);
      charArray0[4] = '';
      charArray0[5] = 'm';
      // Undeclared exception!
      try { 
        strBuilder2.insert(32, charArray0, (-1551), (-44));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      boolean boolean1 = strBuilder0.endsWith("");
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      int int0 = (-1180);
      StrBuilder strBuilder0 = new StrBuilder((-1180));
      int int1 = 97;
      char char0 = '\\';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(97, (-1180), '\\');
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      int int2 = strBuilder1.lastIndexOf(strMatcher0, 97);
      String string0 = strBuilder1.toString();
      StrBuilder strBuilder2 = strBuilder1.append(strBuilder0, 0, 0);
      StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
      char[] charArray0 = new char[4];
      charArray0[0] = '\\';
      charArray0[1] = '\\';
      charArray0[2] = '\\';
      charArray0[3] = '\\';
      // Undeclared exception!
      try { 
        strBuilder3.append(charArray0, 0, 57);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 57
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = new StrBuilder("");
      StrBuilder strBuilder2 = strBuilder0.append('o');
      StrBuilder strBuilder3 = strBuilder0.deleteAll('o');
      StrBuilder strBuilder4 = strBuilder3.insert(0, 2531L);
      char[] charArray0 = new char[1];
      charArray0[0] = 'o';
      StrBuilder strBuilder5 = strBuilder3.replaceFirst((StrMatcher) null, "");
      StrBuilder strBuilder6 = strBuilder0.append(true);
      StrBuilder strBuilder7 = strBuilder3.insert(0, charArray0);
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, 0, 553);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      String string0 = "XM5";
      StrBuilder strBuilder0 = new StrBuilder("XM5");
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "XM5");
      int int0 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 0, (-1225));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.rightString(1490);
      // Undeclared exception!
      try { 
        strBuilder0.setLength((-1191));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1191
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(32);
      StrBuilder strBuilder1 = new StrBuilder(0);
      StrBuilder strBuilder2 = strBuilder1.append(504.1531269136);
      strBuilder2.size = 0;
      StrBuilder strBuilder3 = strBuilder1.insert(0, "Invalid length: ");
      StrBuilder strBuilder4 = strBuilder1.setCharAt(0, '4');
      StrBuilder strBuilder5 = strBuilder0.append(strBuilder1, 0, 0);
      StrBuilder strBuilder6 = strBuilder5.deleteAll("Invalid length: ");
      StrBuilder strBuilder7 = strBuilder4.appendFixedWidthPadRight(9, (-502), 'z');
      StrBuilder strBuilder8 = strBuilder3.reverse();
      StrTokenizer strTokenizer0 = strBuilder8.asTokenizer();
      Integer integer0 = new Integer((-502));
      // Undeclared exception!
      try { 
        strBuilder3.insert(108, (Object) integer0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 108
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(44);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char char0 = '}';
      Consumer<Integer> consumer0 = (Consumer<Integer>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      strBuilder_StrBuilderTokenizer0.forEachRemaining(consumer0);
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterChar('}');
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "");
      StrBuilder strBuilder2 = strBuilder0.deleteFirst("TI8JpL=-/ue;J7ih'");
      StrBuilder strBuilder3 = strBuilder1.setNullText("user.timezone");
      boolean boolean0 = strBuilder_StrBuilderTokenizer0.hasNext();
      String string0 = strBuilder3.midString(0, 0);
      StrBuilder strBuilder4 = strBuilder0.append((-771));
      // Undeclared exception!
      try { 
        strBuilder1.insert(44, "?^jP*6");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 44
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = new StrBuilder();
      char[] charArray0 = new char[8];
      charArray0[0] = 'T';
      charArray0[1] = '3';
      charArray0[2] = ' ';
      charArray0[3] = 'a';
      charArray0[4] = '\'';
      charArray0[5] = 'Z';
      charArray0[6] = 'C';
      charArray0[7] = 'R';
      StrBuilder strBuilder2 = strBuilder1.append(charArray0);
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      StrBuilder strBuilder3 = strBuilder1.trim();
      String string0 = strBuilder0.midString((-3524), 0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-578));
      int int0 = 1090;
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder1.getChars(0, 0, charArray0, 56);
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      String string0 = null;
      int int0 = 1127;
      // Undeclared exception!
      try { 
        strBuilder0.replace(strMatcher0, (String) null, 1127, 48, 1127);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      String string0 = "fq9>w,=T7z";
      StrBuilder strBuilder0 = new StrBuilder("fq9>w,=T7z");
      int int0 = strBuilder0.length();
      int int1 = (-2445);
      int int2 = strBuilder0.lastIndexOf('h', (-2445));
      StrBuilder strBuilder1 = strBuilder0.append('h');
      // Undeclared exception!
      try { 
        strBuilder1.charAt((-553));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -553
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.charMatcher('%');
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      String string0 = strBuilder0.leftString(114);
      String string1 = strBuilder0.getNullText();
      boolean boolean0 = strBuilder1.startsWith((String) null);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      boolean boolean1 = strBuilder_StrBuilderReader0.markSupported();
      char[] charArray0 = new char[3];
      charArray0[0] = '%';
      charArray0[1] = '%';
      charArray0[2] = '`';
      // Undeclared exception!
      try { 
        strBuilder0.insert(520, charArray0, 0, 520);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 520
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = strBuilder0.toCharArray(0, 0);
      int int0 = strBuilder0.indexOf('W');
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      char[] charArray0 = strBuilder0.toCharArray();
      Reader reader0 = strBuilder0.asReader();
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher((String) null);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher1);
      StrMatcher strMatcher2 = StrMatcher.charMatcher('5');
      StrMatcher strMatcher3 = StrMatcher.charMatcher('5');
      StrMatcher strMatcher4 = StrMatcher.stringMatcher("startIndex must be valid");
      StrMatcher strMatcher5 = StrMatcher.charSetMatcher((String) null);
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight(115, 115, '@');
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadLeft(1, 0, '\'');
      int int0 = strBuilder2.lastIndexOf('5', 34);
      StrBuilder strBuilder4 = strBuilder2.insert(34, "");
      StrBuilder strBuilder5 = strBuilder0.appendNull();
      StrBuilder strBuilder6 = new StrBuilder();
      StrBuilder strBuilder7 = strBuilder5.appendFixedWidthPadLeft((Object) strBuilder6, (-1), 'b');
      StringBuffer stringBuffer0 = strBuilder5.toStringBuffer();
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) strMatcher5;
      objectArray0[1] = (Object) strMatcher3;
      objectArray0[2] = (Object) strTokenizer0;
      StrBuilder strBuilder8 = strBuilder4.appendWithSeparators(objectArray0, (String) null);
      StrBuilder strBuilder9 = strBuilder0.append(2572L);
      int int1 = strBuilder3.lastIndexOf("");
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      char char0 = 's';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(0, 0, 's');
      StrBuilder strBuilder2 = strBuilder1.append(strBuilder0);
      char[] charArray0 = strBuilder0.toCharArray();
      String string0 = "\\";
      // Undeclared exception!
      try { 
        strBuilder2.insert(3, "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      int int0 = 114;
      StrBuilder strBuilder0 = new StrBuilder(114);
      char[] charArray0 = null;
      char[] charArray1 = strBuilder0.getChars((char[]) null);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int1 = strBuilder_StrBuilderReader0.read();
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray1, 114, 114);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 114
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(97);
      int int0 = strBuilder0.indexOf('a', (-594));
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.append(false);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      char[] charArray0 = new char[0];
      int int0 = strBuilder_StrBuilderReader0.read(charArray0, 0, 0);
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      char[] charArray1 = new char[5];
      charArray1[0] = 'u';
      charArray1[1] = '\\';
      charArray1[2] = '4';
      // Undeclared exception!
      try { 
        strBuilder0.replace(1473, 0, "Solaris");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-745));
      StrBuilder strBuilder1 = strBuilder0.append((float) (-745));
      StrBuilder strBuilder2 = strBuilder0.ensureCapacity((-745));
      StrBuilder strBuilder3 = strBuilder1.append(101);
      char[] charArray0 = new char[9];
      charArray0[0] = 'U';
      charArray0[1] = 'B';
      charArray0[2] = '-';
      charArray0[3] = '0';
      charArray0[4] = 'o';
      charArray0[5] = '{';
      charArray0[6] = 'G';
      charArray0[7] = '?';
      charArray0[8] = '/';
      // Undeclared exception!
      try { 
        strBuilder2.insert(1038, charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1038
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-241));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      String string0 = strBuilder_StrBuilderTokenizer0.nextToken();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('\\');
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "startIndex must be valid");
      int int0 = strBuilder1.indexOf("startIndex must be valid");
      boolean boolean0 = strBuilder1.equalsIgnoreCase(strBuilder0);
      StrBuilder strBuilder2 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      char[] charArray0 = new char[7];
      charArray0[0] = '\\';
      charArray0[1] = '\\';
      charArray0[2] = '\\';
      charArray0[3] = '\\';
      charArray0[4] = '\\';
      charArray0[5] = '\\';
      charArray0[6] = 'T';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 1, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("X{@YVkLZ8mv4");
      char[] charArray0 = strBuilder0.toCharArray(0, 0);
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrBuilder strBuilder2 = strBuilder0.replaceAll(strMatcher0, "X{@YVkLZ8mv4");
      StrBuilder strBuilder3 = strBuilder2.insert(0, charArray0, 0, 0);
      StrBuilder strBuilder4 = strBuilder0.setNewLineText("X{@YVkLZ8mv4");
      String string0 = strBuilder0.substring(4);
      String string1 = strBuilder3.leftString(0);
      StrBuilder strBuilder5 = strBuilder4.replaceFirst(strMatcher0, "+");
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrBuilder strBuilder2 = strBuilder0.append((float) 0);
      int int1 = strBuilder2.validateRange(0, 0);
      String string0 = null;
      StrBuilder strBuilder3 = strBuilder2.setNullText((String) null);
      StrBuilder strBuilder4 = strBuilder0.insert(0, 0.0F);
      int int2 = (-207);
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder0.insert((-207), charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -207
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(903);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(903);
      long long0 = strBuilder_StrBuilderReader0.skip(903);
      char[] charArray0 = new char[0];
      int int0 = strBuilder_StrBuilderReader0.read(charArray0);
      strBuilder_StrBuilderReader0.reset();
      int int1 = strBuilder0.lastIndexOf('=');
      StrBuilder strBuilder1 = strBuilder0.append((long) 903);
      String string0 = strBuilder0.leftString((-1163));
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight((-1163), 0, 'L');
      StrBuilder strBuilder3 = strBuilder2.clear();
      long long1 = strBuilder_StrBuilderReader0.skip(903);
      long long2 = strBuilder_StrBuilderReader0.skip(0L);
      StrBuilder strBuilder4 = strBuilder2.setNewLineText((String) null);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1735));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      char[] charArray0 = new char[3];
      charArray0[0] = '*';
      charArray0[1] = 'w';
      charArray0[2] = 'y';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 0, (-3354));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.clear();
      strBuilder0.validateIndex(0);
      String string0 = strBuilder0.rightString(0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.midString((-1112), 114);
      StrBuilder strBuilder1 = new StrBuilder("");
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, (-1112), (-1112));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst((StrMatcher) null);
      String string0 = strBuilder1.substring(0, 0);
      StrBuilder strBuilder2 = strBuilder1.replaceFirst("java.specification.version", "J2");
      StrBuilder strBuilder3 = strBuilder0.replaceFirst((StrMatcher) null, "J2");
      StrBuilder strBuilder4 = strBuilder0.appendNewLine();
      StrBuilder strBuilder5 = strBuilder4.deleteFirst("");
      StrBuilder strBuilder6 = new StrBuilder("J2");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder6.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      StrBuilder strBuilder7 = strBuilder5.appendFixedWidthPadLeft(115, 115, ',');
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = new StrBuilder();
      int int0 = Integer.MAX_VALUE;
      float float0 = 1205.0F;
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      Reader reader0 = strBuilder1.asReader();
      // Undeclared exception!
      try { 
        strBuilder1.insert(Integer.MAX_VALUE, 1205.0F);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2147483647
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(1L);
      char[] charArray0 = new char[3];
      charArray0[0] = 'L';
      charArray0[1] = '&';
      charArray0[2] = '\'';
      StrBuilder strBuilder1 = strBuilder0.insert(0, charArray0, 0, 0);
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      StrBuilder strBuilder2 = strBuilder1.deleteFirst((StrMatcher) strMatcher_CharSetMatcher0);
      StrBuilder strBuilder3 = strBuilder1.append("r~{tO$E3MQ ");
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.isEmpty();
      char char0 = '/';
      String string0 = "'k?;G";
      StrBuilder strBuilder1 = strBuilder0.append("'k?;G");
      char[] charArray0 = new char[1];
      charArray0[0] = '/';
      int int0 = 1092;
      StrBuilder strBuilder2 = strBuilder0.appendNull();
      StrBuilder strBuilder3 = strBuilder2.replaceFirst("'k?;G", "'k?;G");
      // Undeclared exception!
      try { 
        strBuilder1.append(charArray0, 1092, 1092);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 1092
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('=');
      int int0 = strBuilder0.indexOf(strMatcher0, (-2241));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StringBuffer stringBuffer0 = new StringBuffer();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) stringBuffer0);
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) charBuffer0);
      strBuilder_StrBuilderWriter0.flush();
      int int1 = (-2463);
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt((-2463), '^');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2463
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("path.separator");
      String string0 = strBuilder1.getNewLineText();
      char[] charArray0 = new char[8];
      charArray0[0] = '^';
      charArray0[1] = 'B';
      charArray0[2] = 'H';
      charArray0[3] = '*';
      charArray0[4] = 'p';
      charArray0[5] = 'n';
      charArray0[6] = '\\';
      charArray0[7] = 'W';
      // Undeclared exception!
      try { 
        strBuilder1.getChars(5, 1294, charArray0, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1294
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('=');
      int int0 = strBuilder0.indexOf(strMatcher0, (-2241));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StringBuffer stringBuffer0 = new StringBuffer();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) stringBuffer0);
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) charBuffer0);
      int int1 = (-2463);
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt((-2463), '^');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2463
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder2 = strBuilder0.append(false);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("");
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("1P+Dc&J/-C8^G%H6!\"x");
      StrBuilder strBuilder1 = strBuilder0.append((float) 0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      int int0 = strBuilder1.indexOf(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.setCharAt(0, 'N');
      StrBuilder strBuilder3 = strBuilder0.appendWithSeparators((Iterator) strBuilder_StrBuilderTokenizer0, "1P+Dc&J/-C8^G%H6!\"x");
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) strBuilder1;
      objectArray0[1] = (Object) strBuilder1;
      objectArray0[2] = (Object) strBuilder1;
      objectArray0[3] = (Object) strBuilder1;
      StrBuilder strBuilder4 = strBuilder2.appendWithSeparators(objectArray0, "");
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("'\"");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("'\"");
      StrBuilder strBuilder2 = strBuilder0.append("'\"");
      StrBuilder strBuilder3 = strBuilder2.append(false);
      StrBuilder strBuilder4 = strBuilder1.deleteAll('D');
      StrBuilder strBuilder5 = strBuilder2.clear();
      StrBuilder strBuilder6 = strBuilder0.append((StringBuffer) null, 5, (-1525));
      // Undeclared exception!
      try { 
        strBuilder2.insert(5, (-391L));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 5
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("");
      StrBuilder strBuilder2 = strBuilder1.deleteFirst('');
      char[] charArray0 = new char[5];
      charArray0[0] = '';
      charArray0[1] = '';
      charArray0[4] = '';
      strBuilder2.buffer = charArray0;
      int int0 = strBuilder0.hashCode();
      int int1 = (-1393);
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex((-1393));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1393
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(39);
      char[] charArray0 = new char[7];
      charArray0[0] = 'B';
      charArray0[1] = 'i';
      charArray0[2] = 'w';
      charArray0[3] = 'n';
      charArray0[4] = 'Y';
      charArray0[5] = '6';
      charArray0[6] = 'b';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      // Undeclared exception!
      try { 
        strBuilder1.getChars(39, 39, charArray0, 39);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 39
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("', is neither of type Map.Entry nor an Array");
      StrBuilder strBuilder1 = strBuilder0.setNullText("");
      int int0 = 0;
      StrBuilder strBuilder2 = strBuilder0.insert(0, true);
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      // Undeclared exception!
      try { 
        strBuilder1.replaceAll(strMatcher0, "', is neither of type Map.Entry nor an Array");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 76
         //
         verifyException("org.apache.commons.lang.text.StrMatcher$CharMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setLength(259);
      StrBuilder strBuilder2 = strBuilder1.append(259);
      StrBuilder strBuilder3 = strBuilder2.append((float) 259);
      StrBuilder strBuilder4 = strBuilder2.insert(259, (-2718L));
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder5 = strBuilder3.append(false);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("n<8{Dm=nblD fs.");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) null, (-226), '\'');
      boolean boolean0 = strBuilder0.contains((StrMatcher) null);
      StrBuilder strBuilder2 = strBuilder0.append(0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.specification.version");
      char char0 = '7';
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('7');
      boolean boolean0 = strBuilder0.contains((StrMatcher) strMatcher_CharMatcher0);
      String string0 = "";
      int int0 = strBuilder0.indexOf("", (-769));
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight(object0, 1960, '7');
      StrBuilder strBuilder3 = strBuilder1.ensureCapacity(1960);
      long long0 = 0L;
      StringBuffer stringBuffer0 = null;
      try {
        stringBuffer0 = new StringBuffer((-769));
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.insert(32, (long) 32);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      char[] charArray0 = new char[1];
      charArray0[0] = '2';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("remove() is unsupported");
      StrBuilder strBuilder1 = strBuilder0.replaceAll((StrMatcher) strMatcher_NoMatcher0, "remove() is unsupported");
      StrBuilder strBuilder2 = strBuilder1.replaceFirst("", (String) null);
      int int0 = strBuilder1.lastIndexOf('=', 0);
      StrBuilder strBuilder3 = strBuilder2.deleteAll('=');
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("");
      StrBuilder strBuilder2 = strBuilder0.append(9);
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrBuilder strBuilder3 = strBuilder0.deleteFirst((StrMatcher) strMatcher_StringMatcher0);
      char[] charArray0 = new char[3];
      charArray0[0] = '6';
      charArray0[1] = '_';
      charArray0[2] = '5';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder4 = strBuilder2.append(0.0F);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder3.new StrBuilderReader();
      StrBuilder strBuilder5 = strBuilder2.append("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      String string0 = strBuilder2.midString(1716, 34);
      strBuilder_StrBuilderReader0.reset();
      int int0 = strBuilder4.lastIndexOf('1', 9);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[1];
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      charArray0[0] = 'B';
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1655), charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1655
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrBuilder strBuilder2 = strBuilder1.append(5519.67);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      int int0 = strBuilder1.indexOf(strMatcher0);
      char[] charArray0 = new char[7];
      charArray0[0] = '*';
      charArray0[1] = '-';
      charArray0[2] = 'A';
      charArray0[3] = 'J';
      charArray0[4] = '\'';
      charArray0[5] = 'D';
      charArray0[6] = 'g';
      strBuilder0.buffer = charArray0;
      strBuilder_StrBuilderWriter0.flush();
      boolean boolean0 = strBuilder0.isEmpty();
      StrBuilder strBuilder3 = strBuilder0.minimizeCapacity();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder4 = strBuilder3.appendNewLine();
      StrBuilder strBuilder5 = strBuilder3.appendWithSeparators((Collection) linkedList0, "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      strBuilder3.buffer = charArray0;
      boolean boolean1 = strBuilder3.equalsIgnoreCase(strBuilder1);
      // Undeclared exception!
      try { 
        strBuilder0.midString(0, 66);
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      String string0 = "FvD$";
      StrBuilder strBuilder0 = new StrBuilder("FvD$");
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrBuilder strBuilder2 = strBuilder1.minimizeCapacity();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "FvD$");
      StrBuilder strBuilder3 = strBuilder1.insert(0, "FvD$");
      int int0 = (-1880);
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      int int1 = strBuilder3.indexOf(strMatcher0, 0);
      // Undeclared exception!
      try { 
        strBuilder3.insert((-1880), 117);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1880
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      int int0 = 2;
      StrBuilder strBuilder0 = new StrBuilder(2);
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      int int1 = strBuilder0.indexOf(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder0.insert(2, 'J');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.append((-1.0F));
      boolean boolean0 = strBuilder0.isEmpty();
      StrBuilder strBuilder2 = strBuilder0.append((Object) "");
      String string0 = strBuilder0.leftString(1334);
      StrBuilder strBuilder3 = strBuilder0.minimizeCapacity();
      char[] charArray0 = new char[7];
      charArray0[0] = '?';
      charArray0[1] = 'M';
      charArray0[2] = 'O';
      charArray0[3] = 'y';
      charArray0[4] = '9';
      charArray0[5] = '4';
      charArray0[6] = ')';
      // Undeclared exception!
      try { 
        strBuilder1.getChars(0, 0, charArray0, 1334);
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      int int0 = (-1697);
      StrBuilder strBuilder0 = new StrBuilder((-1697));
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder2 = strBuilder1.minimizeCapacity();
      StrBuilder strBuilder3 = strBuilder0.clear();
      StrBuilder strBuilder4 = strBuilder3.deleteFirst('2');
      StrBuilder strBuilder5 = strBuilder0.deleteFirst("~eog8)qz\"c&LEAC<");
      Writer writer0 = strBuilder5.asWriter();
      StrBuilder strBuilder6 = strBuilder5.appendNewLine();
      int int1 = (-1907);
      String string0 = strBuilder0.midString((-1697), (-1907));
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) "";
      objectArray0[1] = (Object) strBuilder3;
      objectArray0[2] = (Object) strBuilder1;
      StrBuilder strBuilder7 = strBuilder0.appendWithSeparators(objectArray0, "7D%)l");
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("");
      StrBuilder strBuilder8 = strBuilder3.deleteAll(strMatcher0);
      int int2 = strBuilder6.indexOf("");
      // Undeclared exception!
      try { 
        strBuilder0.substring((-1907));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1907
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      int int0 = 39;
      // Undeclared exception!
      try { 
        strBuilder1.insert(39, 39);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 39
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2418));
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_TrimMatcher0, 1336);
      StrBuilder strBuilder1 = strBuilder0.appendPadding((-2418), 'E');
      StrBuilder strBuilder2 = strBuilder1.deleteAll("java.home");
      StrBuilder strBuilder3 = strBuilder0.minimizeCapacity();
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      int int0 = 32;
      StrBuilder strBuilder0 = new StrBuilder(32);
      // Undeclared exception!
      try { 
        strBuilder0.insert(32, "path.separator");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(32);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(32, 32, 'u');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      Object[] objectArray0 = new Object[0];
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators(objectArray0, "o9W71P");
      char[] charArray0 = new char[2];
      charArray0[0] = 'u';
      charArray0[1] = 'y';
      StrBuilder strBuilder3 = strBuilder1.append(0L);
      strBuilder_StrBuilderWriter0.write(charArray0);
      char[] charArray1 = strBuilder0.toCharArray();
      String string0 = strBuilder0.midString(32, 3314);
      StrBuilder strBuilder4 = strBuilder1.append(charArray1);
      int int0 = strBuilder0.lastIndexOf((StrMatcher) null, 32);
      StrBuilder strBuilder5 = strBuilder0.appendNewLine();
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = strBuilder0.midString(44, 44);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      char[] charArray0 = new char[1];
      charArray0[0] = '~';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, (-761), (-761));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -761
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[5];
      charArray0[0] = 'O';
      charArray0[1] = 'J';
      charArray0[2] = 'z';
      charArray0[3] = '%';
      charArray0[4] = 'W';
      StrBuilder strBuilder1 = strBuilder0.insert(0, charArray0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setLength(0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Collection) linkedList0, "java.compiler");
      StrBuilder strBuilder3 = new StrBuilder("java.compiler");
      StrBuilder strBuilder4 = strBuilder2.append((Object) strBuilder3);
      LinkedList<StrBuilder> linkedList1 = new LinkedList<StrBuilder>();
      boolean boolean0 = linkedList1.offerFirst(strBuilder0);
      StrBuilder strBuilder5 = strBuilder0.appendWithSeparators((Collection) linkedList1, "");
      StringBuffer stringBuffer0 = strBuilder5.toStringBuffer();
      StrTokenizer strTokenizer0 = strBuilder5.asTokenizer();
      Reader reader0 = strBuilder5.asReader();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean1 = strBuilder_StrBuilderReader0.markSupported();
      StrBuilder strBuilder6 = strBuilder5.append((-1.0F));
      StringBuffer stringBuffer1 = strBuilder3.toStringBuffer();
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "";
      StrBuilder strBuilder1 = strBuilder0.deleteAll("");
      StrBuilder strBuilder2 = strBuilder0.append(false);
      Writer writer0 = strBuilder2.asWriter();
      int int0 = (-1462);
      // Undeclared exception!
      try { 
        strBuilder2.insert((-1462), true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1462
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 1984;
      StringBuffer stringBuffer0 = new StringBuffer(1);
      int int1 = 4225;
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 4225, 1984);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.getChars(0, 0, (char[]) null, 0);
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(48);
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("QcscfUs/N", "QcscfUs/N");
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 48, 48);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("end < start");
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "end < start");
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0, 0, 0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      int int0 = (-2612);
      StrBuilder strBuilder0 = new StrBuilder((-2612));
      int int1 = (-1971);
      char[] charArray0 = new char[3];
      char char0 = ';';
      charArray0[0] = ';';
      charArray0[1] = 'Y';
      charArray0[2] = 'c';
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1971), charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1971
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3086);
      String string0 = strBuilder0.getNewLineText();
      int int0 = 0;
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher((String) null);
      char[] charArray0 = new char[5];
      charArray0[0] = '^';
      charArray0[1] = 'X';
      charArray0[2] = 'r';
      charArray0[3] = 'T';
      charArray0[4] = 'B';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      int int1 = strBuilder0.lastIndexOf(strMatcher0);
      StrBuilder strBuilder1 = new StrBuilder(0);
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      // Undeclared exception!
      try { 
        strBuilder1.append(strBuilder0, 3086, 3089);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.append(0.0);
      StrBuilder strBuilder2 = strBuilder0.append(true);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteAll("");
      int int0 = strBuilder1.lastIndexOf("]%:-u-CXB*Tp0ho$'");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("");
      strBuilder_StrBuilderWriter0.write((String) null);
      boolean boolean0 = strBuilder1.equalsIgnoreCase(strBuilder0);
      StrBuilder strBuilder2 = new StrBuilder("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark((-1));
      strBuilder_StrBuilderReader0.reset();
      StrBuilder strBuilder3 = strBuilder2.append(strBuilder0);
      strBuilder_StrBuilderReader0.reset();
      StrBuilder strBuilder4 = strBuilder2.append((String) null);
      boolean boolean1 = strBuilder3.equals((Object) null);
      strBuilder_StrBuilderWriter0.close();
      // Undeclared exception!
      try { 
        strBuilder2.append("length must be valid", (-1), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.append("");
      StrBuilder strBuilder2 = strBuilder1.replaceAll("", "");
      int int0 = strBuilder0.lastIndexOf("rS!FYpiy ?;,k");
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "";
      int int0 = strBuilder0.indexOf("", 208);
      int int1 = 4;
      char char0 = '5';
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(4, '5');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 4
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance("A/,~u{");
      StrTokenizer strTokenizer1 = strBuilder_StrBuilderTokenizer0.setDelimiterChar(']');
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrTokenizer strTokenizer2 = strBuilder_StrBuilderTokenizer0.setIgnoredChar(']');
      StrBuilder strBuilder1 = strBuilder0.append((-250.0F));
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 0);
      StrBuilder strBuilder2 = strBuilder0.trim();
      StrBuilder strBuilder3 = strBuilder0.deleteFirst('R');
      StrBuilder strBuilder4 = strBuilder3.appendNewLine();
      // Undeclared exception!
      try { 
        strBuilder1.substring((-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid length: ");
      int int0 = strBuilder0.indexOf("tm9^");
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(853);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "&8";
      int int0 = strBuilder0.lastIndexOf("&8");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      boolean boolean0 = strBuilder0.equals(object0);
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      int int1 = strBuilder0.indexOf(strMatcher0, (-1));
      StrBuilder strBuilder1 = strBuilder0.replaceAll('0', '0');
      // Undeclared exception!
      try { 
        strBuilder1.insert(783, true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 783
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(970);
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      StrBuilder strBuilder2 = strBuilder1.replaceFirst(strMatcher0, (String) null);
      int int0 = strBuilder0.size();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3);
      StrBuilder strBuilder1 = new StrBuilder((-3438));
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      int int0 = strBuilder2.indexOf("Invalid offset: ", (-3438));
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("1.1");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      String string0 = null;
      strBuilder_StrBuilderWriter0.write((String) null);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.append((CharSequence) null, (-2553), (-1073));
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "OS/2";
      char[] charArray0 = new char[0];
      int int0 = 4;
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "OS/2");
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 4, 102);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 102
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      String string0 = "pm(;dZq&A[Bl";
      StrBuilder strBuilder0 = new StrBuilder("pm(;dZq&A[Bl");
      // Undeclared exception!
      try { 
        strBuilder0.delete((-3660), (-3660));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3660
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("LtJ.uNR");
      StringBuffer stringBuffer0 = new StringBuffer("LtJ.uNR");
      StringBuffer stringBuffer1 = stringBuffer0.append(0);
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray((-1264), (-1264));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1264
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 0);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
      StrBuilder strBuilder2 = strBuilder1.deleteAll("");
      String string0 = "?g*k?ozQONJCn[<&Yf";
      StrBuilder strBuilder3 = strBuilder0.ensureCapacity((-1));
      StrBuilder strBuilder4 = new StrBuilder(1706);
      // Undeclared exception!
      try { 
        strBuilder3.append(strBuilder4, 1706, 102);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("!$#<%|c9g)");
      Reader reader0 = strBuilder0.asReader();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark((-983));
      strBuilder_StrBuilderReader0.reset();
      strBuilder_StrBuilderReader0.close();
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.deleteAll((String) null);
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight(1118, 1118, 'U');
      int int0 = strBuilder0.size();
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder("");
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, (-171), (-171));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(97);
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("");
      StrBuilder strBuilder2 = strBuilder0.replaceFirst('E', '\'');
      StrTokenizer strTokenizer0 = strBuilder2.asTokenizer();
      int int0 = strBuilder0.lastIndexOf("");
      StrBuilder strBuilder3 = strBuilder0.setNewLineText("");
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[2];
      charArray0[0] = '0';
      charArray0[1] = 'k';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder0.indexOf(strMatcher0, 116);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      String string0 = "N";
      StrBuilder strBuilder0 = new StrBuilder("N");
      char[] charArray0 = null;
      int int0 = 0;
      Reader reader0 = strBuilder0.asReader();
      int int1 = 3443;
      // Undeclared exception!
      try { 
        strBuilder0.append("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter", 3443, 3443);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      // Undeclared exception!
      try { 
        strBuilder0.insert(97, 0.0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 97
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      String string0 = "java.vm.specification.vendor";
      StrBuilder strBuilder0 = new StrBuilder("java.vm.specification.vendor");
      int int0 = strBuilder0.capacity();
      StrBuilder strBuilder1 = new StrBuilder(60);
      StrBuilder strBuilder2 = strBuilder1.replaceFirst("java.vm.specification.vendor", "java.vm.specification.vendor");
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      // Undeclared exception!
      try { 
        strBuilder0.append("java.vm.specification.vendor", (-1112), 60);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("-d*%D4[_");
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      char[] charArray0 = new char[1];
      charArray0[0] = '|';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder0.indexOf(strMatcher0, (-1972));
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1972), "SunOS");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1972
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.insert(0, 0.0F);
      int int0 = 0;
      char[] charArray0 = new char[1];
      charArray0[0] = 'X';
      int int1 = (-1718);
      StrBuilder strBuilder3 = strBuilder0.appendNull();
      // Undeclared exception!
      try { 
        strBuilder0.insert(0, charArray0, 0, (-1718));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: -1718
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(57, 3275, '<');
      StrBuilder strBuilder2 = strBuilder1.setCharAt(3275, '|');
      int int0 = strBuilder1.lastIndexOf("Invalid startIndex: ");
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Reader reader0 = strBuilder0.asReader();
      int int0 = strBuilder0.lastIndexOf("", (-3490));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(0);
      StrBuilder strBuilder1 = strBuilder0.append("");
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.append(false);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      char[] charArray0 = new char[0];
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      char[] charArray1 = new char[5];
      charArray1[0] = 'u';
      charArray1[1] = '\\';
      charArray1[2] = '4';
      charArray1[3] = '^';
      charArray1[4] = '$';
      strBuilder_StrBuilderWriter0.write(charArray1);
      int int0 = strBuilder1.lastIndexOf('^');
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.validateRange(0, 0);
      char[] charArray0 = new char[0];
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      boolean boolean0 = strBuilder0.contains((StrMatcher) strMatcher_CharSetMatcher0);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("O/JIOl{?|JhR");
      strBuilder0.validateIndex(0);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst((StrMatcher) strMatcher_CharSetMatcher0);
      StrBuilder strBuilder2 = strBuilder0.replace(0, 0, "SrnongL}\"5V;");
      StrBuilder strBuilder3 = strBuilder1.append('!');
      StrBuilder strBuilder4 = strBuilder0.deleteAll('{');
      StrBuilder strBuilder5 = strBuilder1.delete(0, 2);
      int int1 = strBuilder5.lastIndexOf('d', 117);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.lastIndexOf('S', 0);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      String string0 = strBuilder0.leftString(116);
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(116, 't');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 116
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 34;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder0.rightString(5);
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      // Undeclared exception!
      try { 
        strBuilder0.insert(34, object0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 34
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance("kedZ[");
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "kedZ[");
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      StrBuilder strBuilder2 = strBuilder0.deleteAll(strMatcher0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      String string0 = strBuilder0.toString();
      String string1 = strBuilder0.getNewLineText();
      Writer writer0 = strBuilder0.asWriter();
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("8E/");
      StrBuilder strBuilder1 = strBuilder0.append(false);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      StrBuilder strBuilder2 = strBuilder1.append((Object) "");
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.isEmpty();
      StrBuilder strBuilder1 = strBuilder0.clear();
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      // Undeclared exception!
      try { 
        strBuilder0.append("", 806, 32);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('=');
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.next();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("<S");
      StrBuilder strBuilder1 = strBuilder0.insert(0, 1.0F);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[2];
      charArray0[0] = 'Y';
      charArray0[1] = '2';
      // Undeclared exception!
      try { 
        strBuilder0.insert(0, charArray0, 0, 32);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.append((double) 0);
      StrBuilder strBuilder2 = strBuilder0.insert(0, (char[]) null, 473, 0);
      StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1);
      String string0 = strBuilder0.rightString(1);
      Reader reader0 = strBuilder0.asReader();
      // Undeclared exception!
      try { 
        strBuilder0.charAt(1);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(")*aeaHR");
      // Undeclared exception!
      try { 
        strBuilder0.charAt(1814);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1814
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3898);
      StrBuilder strBuilder1 = new StrBuilder("");
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight((Object) strBuilder1, 3898, '\'');
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      int int0 = 1337;
      StrBuilder strBuilder0 = new StrBuilder(1337);
      StrBuilder strBuilder1 = strBuilder0.trim();
      String string0 = null;
      int int1 = 3;
      // Undeclared exception!
      try { 
        strBuilder0.replace(1337, 3, "vb)r#mC i`h7`");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char char0 = '7';
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('7');
      // Undeclared exception!
      try { 
        strBuilder1.deleteCharAt((-1088));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1088
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[6];
      char char0 = ' ';
      char[] charArray1 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray1, 0, 117);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 117
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("O:2s7X~");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(0, 0, 'b');
      StrBuilder strBuilder2 = strBuilder1.setNullText("");
      StrBuilder strBuilder3 = strBuilder0.insert(0, '6');
      StrBuilder strBuilder4 = strBuilder0.append(false);
      StrBuilder strBuilder5 = strBuilder4.trim();
      char[] charArray0 = strBuilder1.toCharArray();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder3.new StrBuilderTokenizer();
      char[] charArray1 = new char[6];
      charArray1[0] = 'b';
      charArray1[1] = 'b';
      charArray1[2] = '6';
      charArray1[3] = 'b';
      charArray1[4] = 'b';
      charArray1[5] = '6';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray1, 0, (-314));
      StrBuilder strBuilder6 = strBuilder2.replaceFirst((StrMatcher) null, "");
      StringBuffer stringBuffer0 = null;
      try {
        stringBuffer0 = new StringBuffer((-314));
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1903);
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(1);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("1J+~avPQI");
      char[] charArray0 = new char[7];
      charArray0[0] = 'Z';
      charArray0[1] = '=';
      charArray0[2] = 'K';
      charArray0[3] = '>';
      charArray0[4] = 'G';
      charArray0[5] = '4';
      charArray0[6] = 'G';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 0, (-2463));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: -2463
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("ZYI-WGK7$S");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[0];
      strBuilder_StrBuilderWriter0.write(charArray0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("7qi}x-u&).7>432 B");
      // Undeclared exception!
      try { 
        strBuilder0.substring(1377, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      int int0 = 1709;
      StrBuilder strBuilder0 = new StrBuilder(1709);
      char[] charArray0 = new char[1];
      charArray0[0] = ']';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrMatcher strMatcher1 = StrMatcher.charMatcher(']');
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      StrTokenizer strTokenizer0 = strBuilder1.asTokenizer();
      StrBuilder strBuilder2 = strBuilder0.trim();
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        strBuilder2.insert(1709, false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1709
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.replace(0, 798, "java.vm.specification.name");
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft((Object) strMatcher0, (-2389), 'M');
      StrBuilder strBuilder3 = strBuilder0.appendPadding((-1), 'M');
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder3, 0, 69);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      String string0 = "5fNhL";
      StrBuilder strBuilder0 = new StrBuilder("5fNhL");
      StrBuilder strBuilder1 = strBuilder0.append(0.0F);
      StrBuilder strBuilder2 = strBuilder0.append((-1194));
      char[] charArray0 = new char[6];
      charArray0[0] = 'W';
      charArray0[1] = '|';
      charArray0[2] = 'D';
      charArray0[3] = 'U';
      charArray0[4] = 'L';
      charArray0[5] = ')';
      // Undeclared exception!
      try { 
        strBuilder2.getChars((-1194), 1498, charArray0, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1194
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("JtRh|`6");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.replaceFirst(strMatcher0, "uRhqIZq/");
      StrBuilder strBuilder3 = strBuilder2.appendPadding(3809, '@');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      StrBuilder strBuilder4 = strBuilder0.replaceAll("JtRh|`6", ".");
      long long0 = strBuilder_StrBuilderReader0.skip(1L);
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      long long1 = strBuilder_StrBuilderReader0.skip((-431L));
      String string0 = strBuilder0.substring(3809);
      StrBuilder strBuilder5 = strBuilder4.appendPadding(3809, '^');
      char[] charArray0 = new char[3];
      charArray0[0] = '^';
      charArray0[1] = '^';
      charArray0[2] = '^';
      StrBuilder strBuilder6 = strBuilder1.insert(2086, charArray0);
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.replaceFirst(strMatcher0, "uRhqIZq/");
      StrBuilder strBuilder3 = strBuilder2.appendPadding(3809, '@');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      StrBuilder strBuilder4 = strBuilder0.replaceAll("JtRh|`6", ".");
      long long0 = strBuilder_StrBuilderReader0.skip(1L);
      char[] charArray0 = new char[6];
      charArray0[0] = '@';
      charArray0[1] = '@';
      charArray0[2] = '@';
      charArray0[3] = '@';
      charArray0[4] = '@';
      charArray0[5] = '@';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = strBuilder_StrBuilderReader0.read(charBuffer0);
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      long long1 = strBuilder_StrBuilderReader0.skip((-431L));
      String string0 = strBuilder0.substring(3809);
      StrBuilder strBuilder5 = strBuilder4.appendPadding(3809, '^');
      char[] charArray1 = new char[3];
      charArray1[0] = '^';
      charArray1[1] = '^';
      charArray1[2] = '^';
      StrBuilder strBuilder6 = strBuilder1.insert(2119, charArray1);
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.validateRange(0, 0);
      boolean boolean0 = strBuilder0.contains((String) null);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(14, 0, '7');
      StrBuilder strBuilder2 = strBuilder0.append(false);
      StrBuilder strBuilder3 = strBuilder2.insert(0, (double) 0);
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      int int1 = strBuilder2.indexOf((StrMatcher) strMatcher_NoMatcher0, 0);
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadRight(0, 0, 'f');
      StrBuilder strBuilder5 = strBuilder2.append(0.0);
      char[] charArray0 = new char[8];
      charArray0[0] = '7';
      charArray0[1] = 'f';
      charArray0[2] = 'f';
      charArray0[3] = 'f';
      charArray0[4] = '7';
      charArray0[5] = 'f';
      charArray0[6] = '7';
      charArray0[7] = 'f';
      StrBuilder strBuilder6 = strBuilder2.append(charArray0);
      Reader reader0 = strBuilder5.asReader();
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("#.J:veM3");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((String) null, 14, (-1));
      StrBuilder strBuilder7 = strBuilder2.deleteFirst('L');
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder8 = strBuilder3.appendWithSeparators((Collection) linkedList0, "#.J:veM3");
      char[] charArray1 = strBuilder0.toCharArray();
      StrBuilder strBuilder9 = strBuilder4.append((double) 0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder9.new StrBuilderReader();
      int int2 = strBuilder_StrBuilderReader0.read();
      StrBuilder strBuilder10 = strBuilder8.append(']');
      int int3 = strBuilder2.indexOf('L');
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      int int0 = 250;
      StrBuilder strBuilder0 = new StrBuilder(250);
      char char0 = 'G';
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(250, 'G');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 250
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "FSXTi:1WUwXW";
      int int0 = (-1589);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) "FSXTi:1WUwXW", (-1589), 'S');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      char[] charArray0 = new char[3];
      charArray0[0] = 'S';
      charArray0[1] = 'S';
      charArray0[2] = 'S';
      int int1 = 1101;
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 1101, 116);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 116
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      strBuilder0.validateIndex(0);
      boolean boolean0 = strBuilder0.isEmpty();
      StrBuilder strBuilder1 = strBuilder0.deleteAll('E');
      StringBuffer stringBuffer0 = strBuilder1.toStringBuffer();
      char[] charArray0 = new char[3];
      charArray0[0] = 'E';
      charArray0[1] = 'E';
      charArray0[2] = 'g';
      char[] charArray1 = strBuilder0.getChars(charArray0);
      int int0 = strBuilder0.hashCode();
      StrBuilder strBuilder2 = strBuilder0.replaceFirst("{Dn&!eR", (String) null);
      StrBuilder strBuilder3 = strBuilder2.insert(0, true);
  }
}
