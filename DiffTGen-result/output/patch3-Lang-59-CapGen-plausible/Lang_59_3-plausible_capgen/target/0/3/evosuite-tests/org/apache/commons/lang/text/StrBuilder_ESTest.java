/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 31 16:44:26 GMT 2020
 */

package org.apache.commons.lang.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.Writer;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.NoSuchElementException;
import org.apache.commons.lang.text.StrBuilder;
import org.apache.commons.lang.text.StrMatcher;
import org.apache.commons.lang.text.StrTokenizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StrBuilder_ESTest extends StrBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("1.6");
      String string0 = strBuilder0.rightString(39);
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("1.6", "t");
      String string1 = strBuilder0.leftString(39);
      StrBuilder strBuilder2 = strBuilder0.append(123.32);
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadRight(39, 39, '5');
      StrBuilder strBuilder4 = strBuilder0.append(123.32);
      StrBuilder strBuilder5 = new StrBuilder('5');
      String string2 = strBuilder2.getNewLineText();
      int int0 = strBuilder0.lastIndexOf("1.6");
      StrBuilder strBuilder6 = strBuilder0.appendNull();
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1);
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(1);
      StrBuilder strBuilder2 = strBuilder0.appendNull();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "");
      StringBuffer stringBuffer1 = stringBuffer0.append((double) 1);
      StrBuilder strBuilder3 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder4 = strBuilder3.insert(1, 'F');
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance();
      String string1 = strBuilder1.rightString(1);
      StrBuilder strBuilder5 = strBuilder1.append((-2412L));
      StrBuilder strBuilder6 = strBuilder3.insert(1, true);
      StrBuilder strBuilder7 = strBuilder6.insert(1, (Object) "bxl:X%&<dx");
      StrTokenizer strTokenizer1 = strBuilder_StrBuilderTokenizer0.reset();
      StrBuilder strBuilder8 = strBuilder5.ensureCapacity((-533));
      boolean boolean0 = strBuilder2.contains('m');
      StrBuilder strBuilder9 = strBuilder6.ensureCapacity((-533));
      StrBuilder strBuilder10 = strBuilder7.deleteAll((String) null);
      int int0 = strBuilder1.lastIndexOf("+1iZ:EZkvF", 1);
      boolean boolean1 = strBuilder0.startsWith("0");
      Writer writer0 = strBuilder7.asWriter();
      // Undeclared exception!
      try { 
        strBuilder4.insert(50, "bxl:X%&<dx");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 50
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[0];
      StrBuilder strBuilder1 = strBuilder0.insert(0, charArray0);
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher((String) null);
      StrMatcher strMatcher1 = StrMatcher.stringMatcher((String) null);
      StrMatcher strMatcher2 = StrMatcher.charMatcher('2');
      StrBuilder strBuilder2 = strBuilder1.replaceAll((StrMatcher) strMatcher_CharSetMatcher0, "^X8");
      StrBuilder strBuilder3 = new StrBuilder((String) null);
      StrBuilder strBuilder4 = strBuilder3.setNewLineText((String) null);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder3.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((String) null);
      char[] charArray1 = strBuilder3.getChars(charArray0);
      StrBuilder strBuilder5 = strBuilder4.appendFixedWidthPadRight(0, 0, '}');
      char[] charArray2 = new char[8];
      charArray2[0] = '}';
      charArray2[1] = '}';
      charArray2[2] = '}';
      charArray2[3] = '}';
      charArray2[4] = '}';
      charArray2[5] = '}';
      charArray2[6] = '}';
      charArray2[7] = '}';
      StringBuffer stringBuffer0 = new StringBuffer("");
      // Undeclared exception!
      try { 
        strBuilder4.append(stringBuffer0, 0, (-1150));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      boolean boolean0 = strBuilder0.equals((Object) null);
      char[] charArray0 = new char[0];
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StrBuilder strBuilder2 = strBuilder0.append(charArray0);
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadRight((Object) null, (-1037), '|');
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      boolean boolean0 = strBuilder0.equals(object0);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean1 = strBuilder_StrBuilderReader0.ready();
      int int0 = strBuilder0.lastIndexOf('p');
      String string0 = strBuilder0.toString();
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      boolean boolean2 = strBuilder0.contains((StrMatcher) strMatcher_TrimMatcher0);
      StrBuilder strBuilder1 = strBuilder0.insert(0, 1.0F);
      boolean boolean3 = strBuilder0.startsWith("");
      StrBuilder strBuilder2 = strBuilder0.replaceFirst('!', 'p');
      int int1 = strBuilder2.indexOf("", 0);
      int int2 = strBuilder0.size();
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadLeft(17, 7247, '!');
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[0];
      StrBuilder strBuilder1 = strBuilder0.insert(0, charArray0);
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher((String) null);
      StrMatcher strMatcher1 = StrMatcher.stringMatcher((String) null);
      StrBuilder strBuilder2 = strBuilder1.replaceAll((StrMatcher) strMatcher_CharSetMatcher0, "^X8");
      StrBuilder strBuilder3 = new StrBuilder((String) null);
      StrBuilder strBuilder4 = strBuilder3.setNewLineText((String) null);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder3.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((String) null);
      char[] charArray1 = strBuilder3.getChars(charArray0);
      StrBuilder strBuilder5 = strBuilder4.appendFixedWidthPadRight(0, 0, '}');
      char[] charArray2 = new char[8];
      charArray2[0] = '}';
      charArray2[1] = '}';
      charArray2[2] = '}';
      charArray2[3] = '}';
      charArray2[4] = '}';
      charArray2[5] = '}';
      charArray2[6] = '}';
      charArray2[7] = '}';
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      String string0 = strBuilder0.substring(0);
      StrBuilder strBuilder1 = strBuilder0.setNullText("");
      StrBuilder strBuilder2 = strBuilder1.append('\'');
      StrBuilder strBuilder3 = strBuilder1.deleteAll("wEof\"-J6@y");
      Writer writer0 = strBuilder3.asWriter();
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder4 = strBuilder3.append(stringBuffer0);
      StrBuilder strBuilder5 = new StrBuilder();
      char char0 = 'b';
      StrBuilder strBuilder6 = strBuilder1.appendFixedWidthPadLeft((Object) strBuilder5, 0, 'b');
      char[] charArray0 = new char[5];
      charArray0[0] = 'b';
      String string1 = strBuilder3.toString();
      charArray0[1] = 'b';
      int int1 = (-386);
      String string2 = strBuilder0.leftString((-386));
      String string3 = strBuilder4.substring(0, 5002);
      StrBuilder strBuilder7 = strBuilder1.deleteAll('B');
      charArray0[2] = 'b';
      charArray0[3] = 'b';
      // Undeclared exception!
      try { 
        stringBuffer0.insert((-115), (-579L));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -115
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("1.6");
      String string0 = strBuilder0.rightString(39);
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("1.6", "");
      StrBuilder strBuilder2 = strBuilder0.append(0.0);
      String string1 = strBuilder2.leftString(39);
      StrBuilder strBuilder3 = strBuilder0.append(123.32);
      StrBuilder strBuilder4 = strBuilder3.appendFixedWidthPadRight(39, 39, '5');
      StrBuilder strBuilder5 = strBuilder2.append(123.32);
      StrBuilder strBuilder6 = new StrBuilder('5');
      String string2 = strBuilder3.getNewLineText();
      int int0 = strBuilder2.lastIndexOf("");
      boolean boolean0 = strBuilder0.endsWith("1.6");
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("1.6");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("1.6", "1.6");
      double double0 = 123.32;
      StrBuilder strBuilder2 = strBuilder0.append(0.0);
      StrBuilder strBuilder3 = strBuilder0.append(123.32);
      // Undeclared exception!
      try { 
        strBuilder3.appendFixedWidthPadLeft((Object) null, 424, 'J');
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(2956.312537348363);
      StrBuilder strBuilder2 = strBuilder0.setLength(1);
      StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "`|V6+BQaJHszkg");
      StrBuilder strBuilder4 = strBuilder2.setNullText("`|V6+BQaJHszkg");
      String string0 = strBuilder4.getNewLineText();
      char[] charArray0 = new char[8];
      charArray0[0] = 'D';
      charArray0[1] = '/';
      charArray0[2] = 'N';
      charArray0[3] = '<';
      charArray0[4] = 'T';
      StrBuilder strBuilder5 = strBuilder2.appendNull();
      String string1 = strBuilder5.substring(1, 1);
      charArray0[5] = 'W';
      charArray0[6] = 'q';
      charArray0[7] = 'H';
      StrBuilder strBuilder6 = strBuilder1.insert(1, charArray0, 1, 1);
      StrBuilder strBuilder7 = strBuilder4.appendNewLine();
      boolean boolean0 = strBuilder2.isEmpty();
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('(');
      StrMatcher strMatcher0 = StrMatcher.charMatcher('0');
      StrMatcher strMatcher1 = StrMatcher.stringMatcher((String) null);
      char[] charArray0 = new char[5];
      charArray0[0] = '(';
      charArray0[1] = '0';
      charArray0[2] = '(';
      charArray0[3] = '(';
      charArray0[4] = '0';
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.setNullText((String) null);
      StrBuilder strBuilder2 = new StrBuilder((String) null);
      StrBuilder strBuilder3 = strBuilder0.append((Object) strBuilder2);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      StrBuilder strBuilder1 = new StrBuilder();
      boolean boolean0 = strBuilder0.startsWith("length must be valid");
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("UM/kE_U>C~eM(e");
      StringBuffer stringBuffer0 = new StringBuffer("?LYsp<Ft(d FF;1YHk");
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(0);
      int int0 = strBuilder_StrBuilderReader0.read();
      int int1 = strBuilder1.indexOf("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer", (-1628));
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder");
      char[] charArray0 = new char[7];
      charArray0[0] = 'Z';
      charArray0[1] = 'a';
      charArray0[2] = 'A';
      charArray0[3] = 'D';
      charArray0[4] = 'E';
      charArray0[5] = 'R';
      charArray0[6] = 'h';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "org.apache.commons.lang.text.StrBuilder");
      String string0 = strBuilder1.leftString(2);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder");
      StrBuilder strBuilder1 = new StrBuilder("]6u<u]Vr5");
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('B');
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      int int0 = strBuilder0.lastIndexOf('B');
      StrMatcher strMatcher2 = StrMatcher.charMatcher('D');
      boolean boolean0 = strBuilder0.isEmpty();
      int int1 = strBuilder1.indexOf(strMatcher1);
      char[] charArray0 = new char[8];
      charArray0[0] = 'B';
      charArray0[1] = 'B';
      charArray0[2] = 'B';
      charArray0[3] = 'B';
      charArray0[4] = 'B';
      charArray0[5] = 'B';
      charArray0[6] = 'B';
      charArray0[7] = 'B';
      StrMatcher strMatcher3 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder2 = strBuilder0.replaceAll(strMatcher0, "");
      StringBuffer stringBuffer0 = new StringBuffer(0);
      StrBuilder strBuilder3 = strBuilder2.append(stringBuffer0);
      int int2 = strMatcher0.isMatch(charArray0, 0, 5, 0);
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder strBuilder4 = strBuilder1.append("GB51", 0, 0);
      StrBuilder strBuilder5 = strBuilder3.replaceFirst(']', 'B');
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("C");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('B');
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      int int0 = strBuilder0.lastIndexOf('B');
      String string0 = strBuilder0.midString((-1), 1326);
      boolean boolean0 = strBuilder0.isEmpty();
      int int1 = strBuilder1.indexOf(strMatcher1);
      char[] charArray0 = new char[8];
      charArray0[0] = 'B';
      charArray0[1] = 'B';
      charArray0[2] = 'B';
      charArray0[3] = 'B';
      charArray0[4] = 'B';
      charArray0[0] = 'B';
      charArray0[6] = 'B';
      charArray0[7] = 'B';
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder2 = strBuilder0.replaceAll(strMatcher0, "C");
      StringBuffer stringBuffer0 = new StringBuffer(0);
      StrBuilder strBuilder3 = strBuilder2.append(stringBuffer0);
      int int2 = strMatcher0.isMatch(charArray0, 0, 5, 0);
      String string1 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder strBuilder4 = strBuilder1.append("GB51", 0, 0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      char[] charArray0 = new char[7];
      StrBuilder strBuilder0 = new StrBuilder("a(,2d.^@w1o;7; .$");
      StrBuilder strBuilder1 = strBuilder0.setLength(102);
      charArray0[0] = '5';
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance("");
      charArray0[1] = '_';
      charArray0[2] = 'z';
      charArray0[3] = 'p';
      charArray0[4] = 'Z';
      charArray0[5] = '/';
      charArray0[6] = '[';
      LinkedList<StrBuilder> linkedList0 = new LinkedList<StrBuilder>();
      boolean boolean0 = linkedList0.add(strBuilder1);
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
      StrBuilder strBuilder3 = strBuilder0.appendPadding(48, '/');
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder(58);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[8];
      charArray0[0] = 'M';
      charArray0[1] = '\\';
      charArray0[2] = 'M';
      charArray0[3] = 'M';
      charArray0[4] = 'M';
      charArray0[5] = 'M';
      charArray0[6] = 'M';
      charArray0[7] = 'M';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 4, 5);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("d7Djn0T,$B?[=Q");
      StrBuilder strBuilder1 = new StrBuilder("");
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      char[] charArray0 = new char[8];
      charArray0[0] = 'K';
      charArray0[1] = 'K';
      charArray0[2] = 'K';
      charArray0[3] = 'K';
      charArray0[4] = 'K';
      charArray0[5] = 'K';
      charArray0[6] = 'K';
      charArray0[7] = 'K';
      StrBuilder strBuilder3 = strBuilder2.insert(6, charArray0);
      int int0 = strBuilder0.lastIndexOf('K');
      StrBuilder strBuilder4 = strBuilder0.deleteFirst("L'\u0002bszdOy'y-_@");
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder(1331);
      char char0 = 'B';
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight(2, 1331, 'B');
      StrBuilder strBuilder3 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, 1331, (-2728));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(974);
      Object object0 = new Object();
      StrBuilder strBuilder1 = strBuilder0.append(object0);
      StrBuilder strBuilder2 = strBuilder0.insert(9, (-2211.302446630883));
      strBuilder0.size = 974;
      // Undeclared exception!
      try { 
        strBuilder0.insert(2230, '+');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2230
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(116);
      StrBuilder strBuilder1 = new StrBuilder();
      StringBuffer stringBuffer0 = strBuilder1.toStringBuffer();
      StrBuilder strBuilder2 = strBuilder0.appendPadding(116, 'R');
      StringBuffer stringBuffer1 = new StringBuffer(stringBuffer0);
      StrBuilder strBuilder3 = strBuilder0.append(stringBuffer1);
      String string0 = strBuilder0.leftString(0);
      StrBuilder strBuilder4 = strBuilder0.append((char[]) null);
      StrBuilder strBuilder5 = strBuilder2.append(116);
      StrBuilder strBuilder6 = strBuilder5.insert(0, 4926L);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrBuilder strBuilder2 = strBuilder1.insert(0, true);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("");
      int int0 = strBuilder2.indexOf(strMatcher0, 0);
      StrMatcher strMatcher1 = StrMatcher.charMatcher('G');
      int int1 = strBuilder2.hashCode();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      StringBuffer stringBuffer0 = new StringBuffer("tz/rS_v");
      StringBuffer stringBuffer1 = new StringBuffer(stringBuffer0);
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) stringBuffer1);
      strBuilder_StrBuilderWriter0.flush();
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      Writer writer0 = strBuilder0.asWriter();
      String string0 = strBuilder0.getNullText();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "");
      char[] charArray0 = new char[7];
      charArray0[0] = ';';
      charArray0[1] = 'd';
      charArray0[2] = '.';
      charArray0[3] = '2';
      charArray0[4] = ')';
      charArray0[5] = '{';
      charArray0[6] = '9';
      StrBuilder strBuilder2 = strBuilder1.append(charArray0);
      StrBuilder strBuilder3 = strBuilder0.replaceAll(strMatcher0, (String) null);
      StrBuilder strBuilder4 = strBuilder3.replaceAll('d', 'q');
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll((StrMatcher) strMatcher_TrimMatcher0);
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      StrBuilder strBuilder3 = strBuilder0.setNewLineText("\"(*k')76/JnA`x`?ww");
      StrBuilder strBuilder4 = strBuilder0.appendPadding(34, '_');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder4.new StrBuilderTokenizer();
      char[] charArray0 = new char[3];
      charArray0[0] = 's';
      charArray0[1] = '_';
      charArray0[2] = '_';
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset(charArray0);
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder strBuilder5 = strBuilder4.append(0.0);
      boolean boolean0 = strBuilder0.startsWith("file.separator");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      int int1 = strBuilder3.lastIndexOf('s', (-2173));
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('-');
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Iterator) strBuilder_StrBuilderTokenizer0, "java.version");
      StringBuffer stringBuffer0 = new StringBuffer(1);
      stringBuffer0.setLength(1);
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 1, 1);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.insert(0, true);
      int int0 = strBuilder0.indexOf('z');
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid length: ");
      StrBuilder strBuilder1 = strBuilder0.deleteAll("");
      StrBuilder strBuilder2 = strBuilder0.replaceAll('(', ';');
      StrBuilder strBuilder3 = strBuilder2.clear();
      StrBuilder strBuilder4 = strBuilder3.append("");
      String string0 = strBuilder4.toString();
      strBuilder3.buffer = null;
      StrBuilder strBuilder5 = strBuilder1.setNullText("Invalid length: ");
      StrBuilder strBuilder6 = strBuilder2.deleteAll("Invalid length: ");
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher((char[]) null);
      StrBuilder strBuilder7 = strBuilder2.appendFixedWidthPadLeft((Object) strBuilder5, (-4169), '\\');
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      int int0 = strBuilder5.lastIndexOf(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      String string0 = "length must be valid";
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder strBuilder1 = strBuilder0.insert(0, (float) 0);
      StrBuilder strBuilder2 = strBuilder0.appendNewLine();
      StrBuilder strBuilder3 = strBuilder2.insert(0, (String) null);
      StrBuilder strBuilder4 = strBuilder2.setNullText("java.awt.fonts");
      StrBuilder strBuilder5 = strBuilder4.append((char[]) null, 0, 730);
      char[] charArray0 = new char[3];
      charArray0[0] = 'V';
      StrBuilder strBuilder6 = strBuilder0.append((String) null);
      charArray0[1] = 'D';
      charArray0[2] = 'O';
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1209), charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1209
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((String) null);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) strBuilder_StrBuilderWriter0;
      strBuilder_StrBuilderReader0.reset();
      char[] charArray0 = new char[5];
      charArray0[0] = ' ';
      charArray0[1] = '&';
      charArray0[2] = '2';
      charArray0[3] = '_';
      charArray0[4] = 'P';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0);
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[5] = (Object) strBuilder_StrBuilderWriter0;
      objectArray0[3] = (Object) strBuilder_StrBuilderReader0;
      Object object0 = new Object();
      objectArray0[4] = object0;
      objectArray0[5] = (Object) strBuilder_StrBuilderReader0;
      objectArray0[6] = (Object) strBuilder0;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setTrimmerMatcher(strMatcher0);
      Object object1 = strBuilder_StrBuilderTokenizer0.clone();
      StrTokenizer strTokenizer1 = StrTokenizer.getCSVInstance();
      objectArray0[7] = object1;
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrBuilder strBuilder2 = strBuilder0.reverse();
      StrBuilder strBuilder3 = strBuilder2.deleteFirst(strMatcher0);
      StrBuilder strBuilder4 = strBuilder3.deleteAll("");
      StrBuilder strBuilder5 = strBuilder3.append(0L);
      StrBuilder strBuilder6 = strBuilder5.appendNull();
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3446);
      StrBuilder strBuilder1 = strBuilder0.append(3446);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft(object0, 0, 'J');
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadLeft(2120, 0, ':');
      StrBuilder strBuilder4 = strBuilder3.ensureCapacity(1544);
      StrBuilder strBuilder5 = strBuilder4.appendPadding(1544, 'W');
      int int0 = strBuilder3.indexOf("38B+mfFM1Ab>/:");
      Reader reader0 = strBuilder1.asReader();
      char[] charArray0 = new char[4];
      charArray0[0] = 'W';
      charArray0[1] = 'J';
      charArray0[2] = 'W';
      charArray0[3] = 'W';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      int int1 = strBuilder1.indexOf(strMatcher0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder5.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      int int0 = 144;
      StrBuilder strBuilder0 = new StrBuilder(144);
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight(144, 144, '~');
      StrBuilder strBuilder3 = strBuilder2.deleteAll('~');
      String string0 = "end < start";
      StrBuilder strBuilder4 = strBuilder2.deleteFirst("end < start");
      StrBuilder strBuilder5 = strBuilder1.appendNull();
      StrMatcher strMatcher0 = StrMatcher.charMatcher('X');
      StrBuilder strBuilder6 = strBuilder5.replaceFirst(strMatcher0, "0G,+;CIG");
      StrBuilder strBuilder7 = strBuilder5.appendFixedWidthPadLeft(144, 144, '2');
      StrBuilder strBuilder8 = strBuilder0.deleteFirst('~');
      StrBuilder strBuilder9 = strBuilder8.clear();
      boolean boolean0 = strBuilder0.isEmpty();
      // Undeclared exception!
      try { 
        strBuilder1.insert(144, (double) 144);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 144
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      int int1 = 0;
      StrBuilder strBuilder1 = strBuilder0.delete(0, 0);
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Object[]) null, (String) null);
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      char[] charArray0 = new char[7];
      charArray0[0] = 'O';
      charArray0[1] = 'Q';
      charArray0[2] = 'e';
      charArray0[3] = '`';
      charArray0[4] = 'p';
      charArray0[5] = 'Y';
      charArray0[6] = ')';
      StrBuilder strBuilder3 = strBuilder0.deleteFirst("");
      int int2 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1455), charArray0, 1627, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1455
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder("");
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Collection) null, "");
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('(');
      boolean boolean0 = strBuilder2.contains((StrMatcher) strMatcher_CharMatcher0);
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder1);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 5, 727);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("l|yC8J6,'B9/Q");
      int int0 = (-705);
      StrBuilder strBuilder1 = strBuilder0.append((StrBuilder) null, (-705), (-705));
      int int1 = 0;
      char[] charArray0 = new char[8];
      charArray0[0] = 'F';
      charArray0[1] = '}';
      charArray0[2] = 'o';
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt((-705));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -705
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2304));
      StrBuilder strBuilder1 = strBuilder0.replaceAll('@', '?');
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      String string0 = "1.6";
      StrBuilder strBuilder0 = new StrBuilder("1.6");
      int int0 = 39;
      String string1 = strBuilder0.rightString(39);
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("1.6", "");
      StrBuilder strBuilder2 = strBuilder0.append(0.0);
      String string2 = strBuilder2.leftString(39);
      StrBuilder strBuilder3 = strBuilder0.append(123.32);
      StrBuilder strBuilder4 = strBuilder3.appendFixedWidthPadRight(39, 39, '5');
      int int1 = 0;
      StrBuilder strBuilder5 = strBuilder2.append(123.32);
      int int2 = 0;
      // Undeclared exception!
      try { 
        strBuilder2.insert(299, 'A');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 299
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("!e");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((-1343), (-1343), '&');
      StrBuilder strBuilder2 = strBuilder1.append((StringBuffer) null, (-1343), (-1343));
      StrBuilder strBuilder3 = strBuilder1.minimizeCapacity();
      StrBuilder strBuilder4 = strBuilder3.deleteAll("!e");
      String string0 = strBuilder2.toString();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder4.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrBuilder strBuilder5 = strBuilder1.replaceFirst(strMatcher0, "!e");
      Reader reader0 = strBuilder1.asReader();
      String string1 = strBuilder2.rightString((-1343));
      boolean boolean0 = strBuilder1.endsWith((String) null);
      StrBuilder strBuilder6 = strBuilder1.clear();
      char[] charArray0 = new char[5];
      charArray0[0] = '&';
      charArray0[1] = '[';
      charArray0[2] = '&';
      charArray0[3] = '&';
      charArray0[4] = '&';
      StrBuilder strBuilder7 = strBuilder6.append(charArray0);
      int int0 = strBuilder0.indexOf("", 3);
      StrBuilder strBuilder8 = strBuilder3.reverse();
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.size();
      char[] charArray0 = new char[9];
      charArray0[0] = '_';
      charArray0[1] = 'X';
      charArray0[2] = 'N';
      charArray0[3] = 'B';
      charArray0[4] = 'W';
      charArray0[5] = 'z';
      charArray0[6] = 'B';
      charArray0[7] = '^';
      charArray0[8] = ':';
      char[] charArray1 = strBuilder0.getChars(charArray0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "set() is unsupported");
      boolean boolean0 = linkedList0.add((Object) strBuilder1);
      String string0 = strBuilder1.leftString(48);
      int int1 = strBuilder0.indexOf("set() is unsupported");
      StrBuilder strBuilder2 = strBuilder1.append((double) 48);
      StrBuilder strBuilder3 = strBuilder1.insert(0, 'u');
      StrBuilder strBuilder4 = strBuilder1.deleteFirst("java.vm.specification.vendor");
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1805);
      char[] charArray0 = new char[5];
      charArray0[0] = '2';
      charArray0[1] = '(';
      charArray0[2] = 'Y';
      charArray0[3] = '\'';
      charArray0[4] = 'd';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.replaceAll((StrMatcher) strMatcher_CharSetMatcher0, "");
      boolean boolean0 = strBuilder1.isEmpty();
      StrMatcher strMatcher0 = StrMatcher.charMatcher('W');
      boolean boolean1 = strBuilder1.contains("");
      StrBuilder strBuilder2 = strBuilder1.replaceAll("", (String) null);
      char[] charArray1 = strBuilder2.getChars(charArray0);
      StrBuilder strBuilder3 = strBuilder0.deleteAll((StrMatcher) strMatcher_CharSetMatcher0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "2K\"C6nmx;'d?@Nc_=*";
      int int0 = 5;
      int int1 = 1259;
      // Undeclared exception!
      try { 
        strBuilder0.append("2K\"C6nmx;'d?@Nc_=*", 5, 1259);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("$+5z.");
      int int0 = strBuilder0.size();
      char char0 = 'N';
      // Undeclared exception!
      try { 
        strBuilder0.insert(239, 239);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 239
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder1 = strBuilder0.insert(0, 0);
      strBuilder0.size = 117;
      // Undeclared exception!
      try { 
        strBuilder0.append(1L);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('B');
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      int int0 = strBuilder0.lastIndexOf('B');
      String string0 = strBuilder0.midString((-1), 1326);
      boolean boolean0 = strBuilder0.isEmpty();
      int int1 = strBuilder1.indexOf(strMatcher1);
      char[] charArray0 = new char[8];
      charArray0[0] = 'B';
      charArray0[1] = 'B';
      charArray0[2] = 'B';
      charArray0[3] = 'B';
      charArray0[4] = 'B';
      charArray0[5] = 'B';
      charArray0[6] = 'B';
      charArray0[7] = 'B';
      StrBuilder strBuilder2 = strBuilder0.replaceAll(strMatcher0, "");
      StringBuffer stringBuffer0 = new StringBuffer(0);
      StrBuilder strBuilder3 = strBuilder2.append(stringBuffer0);
      int int2 = strMatcher0.isMatch(charArray0, 0, 5, 0);
      String string1 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder strBuilder4 = strBuilder1.append("GB51", 0, 0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-41));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[9];
      charArray0[0] = 'g';
      charArray0[1] = ',';
      charArray0[2] = 'W';
      charArray0[3] = '{';
      charArray0[4] = '$';
      charArray0[5] = 'w';
      charArray0[6] = '0';
      charArray0[7] = '-';
      charArray0[8] = '#';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, (-1421), (-1421));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      char char0 = 'f';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(0, 0, 'f');
      StrBuilder strBuilder2 = strBuilder0.append(0.0);
      String string0 = "|1!fx";
      StrBuilder strBuilder3 = strBuilder0.deleteFirst("|1!fx");
      char[] charArray0 = new char[5];
      charArray0[0] = 'f';
      charArray0[1] = 'f';
      charArray0[2] = 'f';
      charArray0[3] = 'f';
      charArray0[4] = 'f';
      // Undeclared exception!
      try { 
        strBuilder3.insert(48, charArray0, 0, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 48
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[9];
      charArray0[0] = 'g';
      charArray0[1] = '{';
      charArray0[2] = 'b';
      charArray0[3] = ';';
      charArray0[4] = '[';
      charArray0[5] = '+';
      charArray0[6] = '+';
      charArray0[7] = '}';
      charArray0[8] = '(';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StrBuilder strBuilder2 = strBuilder1.insert(0, 0);
      StrBuilder strBuilder3 = strBuilder0.setCharAt(3, '');
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrMatcher strMatcher0 = StrMatcher.charMatcher('b');
      int int0 = strBuilder0.indexOf(strMatcher0, (-234));
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      String string0 = "9,*8<";
      StrBuilder strBuilder0 = new StrBuilder("9,*8<");
      // Undeclared exception!
      try { 
        strBuilder0.equals((StrBuilder) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder("");
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((Object) strBuilder1, 102, '8');
      StrBuilder strBuilder3 = strBuilder2.deleteAll("j.");
      StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      int int0 = strBuilder3.lastIndexOf(strMatcher0, (-4741));
      StrBuilder strBuilder5 = strBuilder3.deleteAll(strMatcher0);
      char[] charArray0 = new char[9];
      StrBuilder strBuilder6 = strBuilder3.insert(102, '8');
      charArray0[0] = '8';
      charArray0[1] = '8';
      charArray0[2] = '\'';
      charArray0[3] = '8';
      charArray0[4] = '8';
      charArray0[5] = '8';
      charArray0[6] = '8';
      charArray0[7] = '8';
      charArray0[8] = '';
      char[] charArray1 = strBuilder5.getChars(charArray0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder4.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(0);
      strBuilder_StrBuilderWriter0.write(charArray1);
      StrBuilder strBuilder7 = strBuilder0.append("Fd");
      int int1 = 2035;
      // Undeclared exception!
      try { 
        strBuilder4.setCharAt(2035, '8');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2035
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      int int0 = strBuilder_StrBuilderTokenizer0.size();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(object0, 2128, 'h');
      StrBuilder strBuilder2 = strBuilder0.minimizeCapacity();
      int int1 = StrBuilder.CAPACITY;
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(5);
      Writer writer0 = strBuilder0.asWriter();
      String string0 = strBuilder0.leftString(5);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("<Xqo-", 5, 0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[1];
      charArray0[0] = 'v';
      strBuilder0.buffer = charArray0;
      StrBuilder strBuilder1 = strBuilder0.append((StringBuffer) null, 0, 0);
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('+');
      StrMatcher strMatcher0 = StrMatcher.charMatcher('v');
      StrBuilder strBuilder2 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder3 = strBuilder0.deleteAll((StrMatcher) strMatcher_CharMatcher0);
      // Undeclared exception!
      try { 
        strBuilder3.deleteCharAt(5);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 5
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2482));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance((char[]) null);
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(object0, 1236, 'F');
      Reader reader0 = strBuilder0.asReader();
      char char0 = 'x';
      StrBuilder strBuilder2 = strBuilder1.deleteFirst('x');
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher((char[]) null);
      String string0 = strBuilder2.leftString((-2482));
      StrBuilder strBuilder3 = strBuilder2.replaceFirst(strMatcher0, "0");
      StrBuilder strBuilder4 = strBuilder1.appendFixedWidthPadLeft(9, 11, 'F');
      StrBuilder strBuilder5 = strBuilder4.replaceAll((String) null, "");
      StrBuilder strBuilder6 = strBuilder5.insert(11, 'x');
      StrBuilder strBuilder7 = strBuilder5.deleteFirst('x');
      StrMatcher strMatcher2 = StrMatcher.quoteMatcher();
      StrBuilder strBuilder8 = strBuilder1.replaceFirst(strMatcher2, (String) null);
      boolean boolean0 = strBuilder1.contains((String) null);
      StrMatcher strMatcher3 = StrMatcher.doubleQuoteMatcher();
      StrBuilder strBuilder9 = strBuilder4.replaceFirst(strMatcher3, (String) null);
      StrBuilder strBuilder10 = strBuilder8.append(false);
      StrBuilder strBuilder11 = strBuilder9.deleteAll(strMatcher0);
      StrBuilder strBuilder12 = strBuilder8.deleteAll(strMatcher2);
      StrBuilder strBuilder13 = strBuilder0.replaceFirst("", "6wW&ygx1CFH9Qs9R");
      // Undeclared exception!
      try { 
        strBuilder12.validateRange((-1), (-2482));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) "", 5048, 'M');
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("_tN9");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      LinkedList<Object> linkedList1 = new LinkedList<Object>(linkedList0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList1, "");
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      int int0 = strBuilder0.indexOf((StrMatcher) strMatcher_NoMatcher0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      String string0 = "|6/]z||#k@ec";
      StrBuilder strBuilder0 = new StrBuilder("|6/]z||#k@ec");
      char[] charArray0 = new char[2];
      charArray0[0] = 'F';
      charArray0[1] = 'E';
      strBuilder0.buffer = charArray0;
      int int0 = (-99);
      // Undeclared exception!
      try { 
        strBuilder0.insert(0, 'E');
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[1];
      charArray0[0] = 'i';
      strBuilder_StrBuilderWriter0.write(charArray0);
      strBuilder_StrBuilderWriter0.write(">S#p*yI4<'wUYs>i-");
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      String string0 = "Index: ";
      StrBuilder strBuilder0 = new StrBuilder("Index: ");
      StrBuilder strBuilder1 = strBuilder0.trim();
      char char0 = '~';
      StrBuilder strBuilder2 = strBuilder1.deleteAll('~');
      StringBuffer stringBuffer0 = new StringBuffer();
      int int0 = (-264);
      // Undeclared exception!
      try { 
        strBuilder2.append(stringBuffer0, (-264), (-264));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[8];
      charArray0[0] = 'b';
      charArray0[1] = 'd';
      charArray0[2] = 'v';
      charArray0[3] = 't';
      charArray0[4] = 'V';
      charArray0[5] = '{';
      charArray0[6] = 'a';
      charArray0[7] = 'Q';
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset(charArray0);
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      char[] charArray1 = strBuilder0.toCharArray();
      char[] charArray2 = new char[5];
      charArray2[0] = 'a';
      charArray2[1] = 'b';
      charArray2[2] = 'Q';
      charArray2[3] = 'Q';
      charArray2[4] = 'v';
      StrBuilder strBuilder1 = strBuilder0.insert(0, charArray2, 0, 0);
      int int0 = strBuilder0.indexOf((StrMatcher) null);
      String string0 = strBuilder0.leftString((-1));
      char[] charArray3 = new char[5];
      charArray3[0] = 'Q';
      charArray3[1] = 'b';
      charArray3[2] = '{';
      charArray3[3] = 'd';
      charArray3[4] = 'Q';
      StrBuilder strBuilder2 = strBuilder0.append(charArray3);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      String string0 = "{n*3(N}):oYP:b#bY";
      StrBuilder strBuilder0 = new StrBuilder("{n*3(N}):oYP:b#bY");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(2246L);
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      int int0 = (-1967);
      StrBuilder strBuilder2 = strBuilder1.ensureCapacity((-1967));
      StrBuilder strBuilder3 = strBuilder2.replaceFirst("{n*3(N}):oYP:b#bY", "{n*3(N}):oYP:b#bY");
      StrBuilder strBuilder4 = strBuilder1.replaceFirst("{n*3(N}):oYP:b#bY", "{n*3(N}):oYP:b#bY");
      char[] charArray0 = new char[2];
      charArray0[0] = 'M';
      StrBuilder strBuilder5 = strBuilder4.insert(0, 767.8903F);
      charArray0[1] = 'g';
      StrBuilder strBuilder6 = strBuilder1.insert(0, charArray0, 2, 0);
      // Undeclared exception!
      try { 
        strBuilder1.insert(31, (float) 2246L);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 31
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      int int0 = 2201;
      StrBuilder strBuilder0 = new StrBuilder(2201);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = null;
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setQuoteMatcher((StrMatcher) null);
      boolean boolean0 = strBuilder_StrBuilderTokenizer0.hasPrevious();
      int int1 = strBuilder_StrBuilderTokenizer0.size();
      int int2 = strBuilder_StrBuilderTokenizer0.size();
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize((char[]) null, 2201, 2201);
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      int int3 = (-1189);
      StrBuilder strBuilder2 = strBuilder1.insert(0, (char[]) null, 0, (-1189));
      StrBuilder strBuilder3 = strBuilder1.deleteAll('}');
      Reader reader0 = strBuilder1.asReader();
      String string0 = "dW%vT$wi_Odu>Db";
      // Undeclared exception!
      try { 
        strBuilder0.insert(2201, "dW%vT$wi_Odu>Db");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2201
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("^K");
      char[] charArray0 = new char[3];
      charArray0[0] = 'h';
      charArray0[1] = '5';
      charArray0[2] = 'q';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      char char0 = strBuilder0.charAt(0);
      StrBuilder strBuilder2 = strBuilder0.ensureCapacity((-284));
      StrBuilder strBuilder3 = strBuilder2.append(false);
      char[] charArray1 = new char[3];
      charArray1[0] = '^';
      charArray1[1] = '^';
      charArray1[2] = '^';
      // Undeclared exception!
      try { 
        strBuilder0.insert(0, charArray1, (-284), (-284));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: -284
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.replaceAll((String) null, "end < start");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      String string0 = strBuilder_StrBuilderTokenizer0.toString();
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 0);
      StrBuilder strBuilder2 = strBuilder0.deleteFirst(strMatcher0);
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("end < start");
      String string1 = strBuilder1.toString();
      StrBuilder strBuilder3 = new StrBuilder(0);
      char[] charArray0 = new char[3];
      charArray0[0] = '_';
      charArray0[1] = 'N';
      charArray0[2] = 'C';
      // Undeclared exception!
      try { 
        strBuilder1.insert((-617), charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -617
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(44);
      int int0 = 2347;
      strBuilder0.size = 2347;
      char[] charArray0 = new char[3];
      char char0 = 'g';
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      // Undeclared exception!
      try { 
        strBuilder0.lastIndexOf(strMatcher0, 44);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 44
         //
         verifyException("org.apache.commons.lang.text.StrMatcher$TrimMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("EvcbC9G*R# _f,,hK");
      String string0 = strBuilder1.toString();
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      StrBuilder strBuilder2 = strBuilder0.replaceAll(strMatcher0, "java.vm.specification.vendor");
      StrBuilder strBuilder3 = strBuilder1.replaceAll(strMatcher0, "EvcbC9G*R# _f,,hK");
      boolean boolean0 = strBuilder1.endsWith("end < start");
      char[] charArray0 = new char[3];
      charArray0[0] = '8';
      charArray0[1] = 'c';
      charArray0[2] = '(';
      StrBuilder strBuilder4 = strBuilder1.append(charArray0, 0, 0);
      Object[] objectArray0 = new Object[4];
      StrBuilder strBuilder5 = new StrBuilder("Y(W#F@p('=N.L");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder5.new StrBuilderTokenizer();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.previous();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      boolean boolean0 = strBuilder0.equals(strBuilder1);
      char char0 = '$';
      StrBuilder strBuilder2 = strBuilder1.minimizeCapacity();
      StrBuilder strBuilder3 = strBuilder2.append(strBuilder1);
      char char1 = '_';
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("end < start");
      StrBuilder strBuilder4 = strBuilder1.replaceFirst('$', '_');
      int int0 = 168;
      int int1 = 1;
      char[] charArray0 = new char[3];
      // Undeclared exception!
      try { 
        strBuilder3.substring(1, 168);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('|');
      int int0 = strBuilder0.indexOf(':', 0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Y^/kphYq");
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      boolean boolean0 = strBuilder0.contains((StrMatcher) strMatcher_TrimMatcher0);
      StrBuilder strBuilder1 = strBuilder0.append(473.1916F);
      StrBuilder strBuilder2 = strBuilder0.deleteAll('');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadLeft(102, 102, '2');
      StrBuilder strBuilder4 = strBuilder0.append((float) 102);
      boolean boolean1 = strBuilder4.contains((StrMatcher) strMatcher_TrimMatcher0);
      StrBuilder strBuilder5 = strBuilder4.clear();
      boolean boolean2 = strBuilder0.contains("Y^/kphYq");
      StrBuilder strBuilder6 = strBuilder4.append((float) 102);
      boolean boolean3 = strBuilder1.contains('l');
      StrBuilder strBuilder7 = strBuilder3.replaceFirst("Y^/kphYq", "Y^/kphYq");
      Object object0 = new Object();
      StrBuilder strBuilder8 = strBuilder2.appendFixedWidthPadLeft(object0, 102, 'w');
      long long0 = strBuilder_StrBuilderReader0.skip((-2412L));
      StrBuilder strBuilder9 = strBuilder1.append(false);
      StrBuilder strBuilder10 = strBuilder9.deleteAll((StrMatcher) strMatcher_TrimMatcher0);
      boolean boolean4 = strBuilder8.equalsIgnoreCase(strBuilder9);
      char[] charArray0 = strBuilder6.toCharArray();
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = (-794);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-794), true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -794
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((String) null, 0, 0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.append("IC}=M");
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = strBuilder0.leftString(0);
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      String string1 = strBuilder0.substring(0);
      // Undeclared exception!
      try { 
        strBuilder0.charAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      String string0 = "0i5H}cVA3AxDar8Ty1";
      StrBuilder strBuilder0 = new StrBuilder("0i5H}cVA3AxDar8Ty1");
      int int0 = (-1967);
      StrBuilder strBuilder1 = strBuilder0.deleteAll("Invalid length: ");
      StrBuilder strBuilder2 = strBuilder1.append(')');
      String string1 = strBuilder1.rightString((-1967));
      StrBuilder strBuilder3 = strBuilder1.appendNull();
      StrBuilder strBuilder4 = strBuilder0.appendNull();
      StrBuilder strBuilder5 = strBuilder4.appendNewLine();
      StrBuilder strBuilder6 = strBuilder0.replaceAll("", "Invalid length: ");
      // Undeclared exception!
      try { 
        strBuilder5.append("G", (-1967), (-1967));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-1);
      int int1 = 0;
      char[] charArray0 = new char[0];
      StrBuilder strBuilder1 = strBuilder0.insert(0, charArray0);
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher((String) null);
      StrMatcher strMatcher1 = StrMatcher.stringMatcher((String) null);
      StrBuilder strBuilder2 = strBuilder1.replaceAll((StrMatcher) strMatcher_CharSetMatcher0, "^X8");
      char char0 = '}';
      StrBuilder strBuilder3 = strBuilder1.appendFixedWidthPadLeft((-1), (-583), '}');
      // Undeclared exception!
      try { 
        strBuilder3.getChars((-1), (-1150), charArray0, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      String string0 = strBuilder0.substring(0);
      StrBuilder strBuilder1 = strBuilder0.setNullText("");
      StrBuilder strBuilder2 = strBuilder1.append('\'');
      StrBuilder strBuilder3 = strBuilder1.deleteAll("wEof\"-J6@y");
      Writer writer0 = strBuilder3.asWriter();
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder4 = strBuilder3.append(stringBuffer0);
      StrBuilder strBuilder5 = new StrBuilder();
      char char0 = 'b';
      StrBuilder strBuilder6 = strBuilder1.appendFixedWidthPadLeft((Object) strBuilder5, 0, 'b');
      char[] charArray0 = new char[5];
      charArray0[0] = 'b';
      String string1 = strBuilder3.toString();
      charArray0[1] = 'b';
      int int1 = (-386);
      String string2 = strBuilder0.leftString((-386));
      StrBuilder strBuilder7 = strBuilder1.deleteAll('B');
      charArray0[2] = 'b';
      charArray0[3] = 'b';
      // Undeclared exception!
      try { 
        stringBuffer0.insert((-115), (-579L));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -115
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      int int0 = 1045;
      StrBuilder strBuilder0 = new StrBuilder(1045);
      int int1 = (-4855);
      String string0 = strBuilder0.rightString((-4855));
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      char[] charArray0 = new char[2];
      StrBuilder strBuilder2 = strBuilder0.appendNull();
      charArray0[0] = 'v';
      charArray0[1] = 'P';
      Writer writer0 = strBuilder2.asWriter();
      String string1 = strBuilder2.rightString(2289);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 0, (-811));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: -811
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(284);
      StrBuilder strBuilder1 = strBuilder0.append("$r[fo2\"4", 0, 0);
      int int0 = strBuilder1.indexOf((StrMatcher) null);
      StrBuilder strBuilder2 = strBuilder0.appendNewLine();
      StrBuilder strBuilder3 = strBuilder2.append(284);
      StrBuilder strBuilder4 = strBuilder2.append("$r[fo2\"4", 0, 0);
      StrBuilder strBuilder5 = strBuilder2.appendPadding((-1), 'D');
      Writer writer0 = strBuilder4.asWriter();
      StrBuilder strBuilder6 = strBuilder4.append(false);
      StrBuilder strBuilder7 = strBuilder4.append(2646.1066);
      String string0 = strBuilder2.toString();
      int int1 = strBuilder0.hashCode();
      Writer writer1 = strBuilder0.asWriter();
      String string1 = strBuilder3.getNullText();
      // Undeclared exception!
      try { 
        strBuilder5.charAt((-1821));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1821
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrBuilder strBuilder2 = strBuilder1.insert(0, true);
      StrMatcher strMatcher0 = StrMatcher.charMatcher('G');
      boolean boolean0 = strBuilder2.contains(strMatcher0);
      int int0 = strBuilder2.hashCode();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      StringBuffer stringBuffer0 = new StringBuffer("tz/rS_v");
      StringBuffer stringBuffer1 = new StringBuffer(stringBuffer0);
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) stringBuffer1);
      strBuilder_StrBuilderWriter0.flush();
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-762));
      StrBuilder strBuilder1 = strBuilder0.replaceFirst((String) null, (String) null);
      StrBuilder strBuilder2 = strBuilder1.deleteAll((StrMatcher) null);
      StrBuilder strBuilder3 = new StrBuilder((-762));
      StrBuilder strBuilder4 = strBuilder0.append(strBuilder3);
      // Undeclared exception!
      try { 
        strBuilder1.charAt(5);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 5
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("$/&W_kje]B");
      StrMatcher strMatcher0 = StrMatcher.charMatcher('9');
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      StrBuilder strBuilder1 = strBuilder0.insert(0, true);
      boolean boolean0 = strBuilder0.startsWith("length must be valid");
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      int int0 = 974;
      StrBuilder strBuilder0 = new StrBuilder(974);
      // Undeclared exception!
      try { 
        strBuilder0.insert(974, 1533.91);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 974
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst((String) null, (String) null);
      StringBuffer stringBuffer0 = new StringBuffer();
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("/wJmC -^`NSLi^");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[1];
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder2 = strBuilder1.replaceAll((StrMatcher) null, "/wJmC -^`NSLi^");
      // Undeclared exception!
      try { 
        strBuilder1.validateIndex(504);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 504
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "]\"))lPIp\"K";
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("]\"))lPIp\"K");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      boolean boolean0 = strBuilder1.isEmpty();
      boolean boolean1 = strBuilder0.contains(strMatcher0);
      char[] charArray0 = new char[2];
      charArray0[0] = 'q';
      charArray0[1] = '\\';
      StrBuilder strBuilder2 = strBuilder0.deleteAll("Z");
      // Undeclared exception!
      try { 
        strBuilder0.insert((-457), charArray0, (-457), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -457
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(115);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('6');
      int int0 = strBuilder1.hashCode();
      int int1 = strBuilder0.length();
      String string0 = strBuilder1.getNewLineText();
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((Object) strBuilder1, 0, '=');
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceAll('M', 'k');
      StrBuilder strBuilder2 = strBuilder1.replaceFirst("A9ymy_|Ery", "A9ymy_|Ery");
      char[] charArray0 = new char[2];
      charArray0[0] = 'M';
      charArray0[1] = 'k';
      // Undeclared exception!
      try { 
        strBuilder1.insert((-3116), charArray0, 0, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3116
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(989);
      boolean boolean0 = strBuilder0.contains(".gkU.Jc\"*;I");
      boolean boolean1 = strBuilder0.isEmpty();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("fvt<  ?!';\"Ev", "org.apache.commons.lang.SystemUtils");
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      boolean boolean0 = strBuilder0.contains('*');
      char[] charArray0 = new char[8];
      charArray0[0] = '*';
      charArray0[1] = '*';
      charArray0[2] = '*';
      charArray0[3] = '*';
      charArray0[4] = '*';
      charArray0[5] = '*';
      charArray0[6] = '*';
      charArray0[7] = '-';
      int int0 = 1;
      StrBuilder strBuilder1 = strBuilder0.append(charArray0, 0, 1);
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('-');
      StrBuilder strBuilder2 = strBuilder1.deleteFirst(strMatcher0);
      String string0 = strBuilder2.substring(1);
      // Undeclared exception!
      try { 
        strBuilder1.append(charArray0, 0, (-2319));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: -2319
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      char char0 = '@';
      strBuilder_StrBuilderReader0.reset();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(object0, (-1176), '@');
      int int0 = strBuilder_StrBuilderReader0.read();
      int int1 = (-1);
      strBuilder_StrBuilderReader0.mark((-1));
      StrBuilder strBuilder2 = strBuilder0.appendNull();
      char char1 = 'b';
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadLeft((-1), (-1), 'b');
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setEmptyTokenAsNull(false);
      boolean boolean0 = strBuilder0.startsWith("");
      StrBuilder strBuilder4 = strBuilder1.deleteAll("");
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder4.insert((-1), (Object) "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      int int0 = (-3263);
      StrBuilder strBuilder0 = new StrBuilder((-3263));
      // Undeclared exception!
      try { 
        strBuilder0.setLength((-3263));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3263
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      int int0 = (-2326);
      // Undeclared exception!
      try { 
        strBuilder0.setLength((-2326));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2326
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.append((char[]) null, 31, 31);
      char[] charArray0 = new char[4];
      charArray0[0] = '9';
      charArray0[1] = '+';
      charArray0[2] = 'r';
      charArray0[3] = 'F';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_CharSetMatcher0, 0);
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) '9';
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) '9';
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.next();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) strBuilder0;
      objectArray0[3] = (Object) strBuilder0;
      String string0 = strBuilder0.toString();
      objectArray0[4] = (Object) strBuilder0;
      StrBuilder strBuilder1 = new StrBuilder(0);
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      StrBuilder strBuilder3 = strBuilder0.appendWithSeparators(objectArray0, "");
      char[] charArray0 = strBuilder3.getChars((char[]) null);
      StrBuilder strBuilder4 = strBuilder2.deleteFirst('Y');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      char char0 = strBuilder2.charAt(0);
      strBuilder_StrBuilderWriter0.write((-98));
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("");
      StrBuilder strBuilder5 = strBuilder1.deleteFirst((StrMatcher) strMatcher_NoMatcher0);
      int int0 = strBuilder3.lastIndexOf((StrMatcher) strMatcher_NoMatcher0, 0);
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      boolean boolean1 = strBuilder2.contains('b');
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        strBuilder4.append(stringBuffer0, 2, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.io.tmpdir");
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("");
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_StringMatcher0, 3);
      StrBuilder strBuilder1 = strBuilder0.append((-423));
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      Object object0 = new Object();
      StrBuilder strBuilder1 = strBuilder0.append(object0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder strBuilder2 = strBuilder1.deleteFirst('d');
      StrBuilder strBuilder3 = strBuilder2.deleteFirst((String) null);
      StrBuilder strBuilder4 = strBuilder1.append(0);
      int int0 = strBuilder1.lastIndexOf("OOYl`mox", 57);
      StrBuilder strBuilder5 = strBuilder1.append(strBuilder4);
      char[] charArray0 = new char[6];
      charArray0[0] = 'd';
      charArray0[1] = '~';
      charArray0[2] = 'd';
      charArray0[3] = 'd';
      charArray0[4] = 'd';
      charArray0[5] = 'd';
      char[] charArray1 = strBuilder2.getChars(charArray0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("8v0[_q8rhIQ");
      char[] charArray0 = new char[9];
      charArray0[0] = 'u';
      charArray0[1] = '!';
      charArray0[2] = '^';
      charArray0[3] = 'W';
      charArray0[4] = 'g';
      charArray0[5] = 'Z';
      charArray0[6] = 't';
      charArray0[7] = 'O';
      charArray0[8] = 'e';
      char[] charArray1 = strBuilder0.getChars(charArray0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.clear();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      String string0 = "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter";
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Collection) linkedList0, "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      char char0 = 'M';
      StrBuilder strBuilder3 = strBuilder0.replaceFirst('M', 'M');
      // Undeclared exception!
      try { 
        strBuilder2.deleteCharAt(1934);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1934
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      // Undeclared exception!
      try { 
        strBuilder0.validateRange(0, (-1024));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(true);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      String string0 = "0a2Y\"h,!%[DqH";
      int int0 = 1;
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      StrBuilder strBuilder3 = new StrBuilder();
      strBuilder_StrBuilderWriter0.write(114);
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("0a2Y\"h,!%[DqH");
      int int1 = strBuilder3.lastIndexOf(strMatcher0, 1);
      char char0 = 'e';
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadLeft((Object) strBuilder3, 114, 'e');
      char[] charArray0 = new char[3];
      charArray0[0] = 'e';
      charArray0[1] = 'e';
      charArray0[2] = 'e';
      // Undeclared exception!
      try { 
        strBuilder4.getChars(1, (-997), charArray0, 114);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -997
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      boolean boolean0 = strBuilder0.equals(object0);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder0.lastIndexOf('p');
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      boolean boolean1 = strBuilder0.contains((StrMatcher) strMatcher_TrimMatcher0);
      StrBuilder strBuilder1 = strBuilder0.insert(0, 1.0F);
      StrBuilder strBuilder2 = strBuilder0.replaceFirst('p', 'p');
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(true);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      StrBuilder strBuilder3 = new StrBuilder();
      char char0 = 'e';
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadLeft((Object) strBuilder3, 114, 'e');
      char[] charArray0 = new char[3];
      charArray0[0] = 'e';
      charArray0[1] = 'e';
      charArray0[2] = 'e';
      // Undeclared exception!
      try { 
        strBuilder4.getChars(1, (-997), charArray0, 114);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -997
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      String string0 = null;
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      int int0 = 1;
      char char0 = 'i';
      StrBuilder strBuilder1 = strBuilder0.append(true);
      StrBuilder strBuilder2 = strBuilder0.appendPadding(1, 'i');
      StrBuilder strBuilder3 = strBuilder2.clear();
      int int1 = (-269);
      // Undeclared exception!
      try { 
        strBuilder0.delete((-269), (-269));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -269
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.setLength(0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      StrBuilder strBuilder2 = strBuilder1.deleteAll(strMatcher0);
      StrBuilder strBuilder3 = strBuilder2.insert(0, true);
      String string0 = strBuilder_StrBuilderTokenizer0.previousToken();
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) null);
      StrBuilder strBuilder4 = strBuilder0.append(strBuilder1);
      strBuilder_StrBuilderWriter0.write(0);
      strBuilder_StrBuilderWriter0.close();
      StrBuilder strBuilder5 = strBuilder0.replaceAll('q', 'q');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder5.new StrBuilderReader();
      // Undeclared exception!
      try { 
        CharBuffer.wrap((CharSequence) null, (-850), (-850));
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.StringCharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      int int0 = strBuilder2.hashCode();
      StrMatcher strMatcher0 = null;
      // Undeclared exception!
      try { 
        strBuilder0.insert(117, 'e');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 117
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      int int0 = 101;
      StrBuilder strBuilder0 = new StrBuilder(101);
      int int1 = 5;
      char char0 = 'p';
      StrBuilder strBuilder1 = strBuilder0.deleteAll('p');
      // Undeclared exception!
      try { 
        strBuilder0.getChars(5, 5, (char[]) null, 5);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 5
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.size();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(0);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) "VWTBDwN5f:g,O>~zCR", 0, 'r');
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 102;
      int int1 = 1;
      String string0 = "org.apache.commons.lang.text.StrBuilder$StrBuilderReader";
      // Undeclared exception!
      try { 
        strBuilder0.insert(1, "org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("?!s[JbK|0l*b,L%!");
      StrBuilder strBuilder1 = strBuilder0.setNullText("'\"");
      StrBuilder strBuilder2 = strBuilder1.append('$');
      String string0 = "";
      char char0 = '9';
      StrBuilder strBuilder3 = strBuilder1.appendPadding((-614), '9');
      StrBuilder strBuilder4 = strBuilder3.append('$');
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("");
      StrBuilder strBuilder5 = strBuilder0.deleteFirst(strMatcher0);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      int int0 = (-1253);
      char[] charArray0 = new char[3];
      char char1 = '<';
      charArray0[0] = '<';
      charArray0[1] = '_';
      char char2 = 'm';
      // Undeclared exception!
      try { 
        strBuilder1.delete((-1253), (-1253));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1253
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      int int0 = strBuilder0.indexOf((StrMatcher) null, 0);
      StrBuilder strBuilder1 = strBuilder0.insert(0, (-742.43243F));
      int int1 = strBuilder1.indexOf("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      StrBuilder strBuilder2 = new StrBuilder((-3811));
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder2, (-1), 10);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-118));
      int int0 = 101;
      StrBuilder strBuilder1 = strBuilder0.insert(0, "");
      // Undeclared exception!
      try { 
        strBuilder1.append(strBuilder0, 34, 101);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter";
      String string1 = "os.name";
      StrBuilder strBuilder1 = strBuilder0.replaceAll("os.name", "org.apache.commons.lang.text.StrBuilder");
      StrBuilder strBuilder2 = strBuilder0.minimizeCapacity();
      StrTokenizer strTokenizer0 = strBuilder2.asTokenizer();
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      StrBuilder strBuilder3 = strBuilder0.deleteFirst(strMatcher0);
      StrBuilder strBuilder4 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      int int0 = 292;
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder4, 0, 292);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "=<'Z'.");
      int int0 = 1643;
      char char0 = '1';
      // Undeclared exception!
      try { 
        strBuilder1.setCharAt(1643, '1');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1643
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "K;b?g#]d--w3";
      StrBuilder strBuilder1 = strBuilder0.append("K;b?g#]d--w3");
      int int0 = strBuilder0.length();
      int int1 = 18;
      // Undeclared exception!
      try { 
        strBuilder1.setCharAt(18, 'd');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 18
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(0, 0, 'd');
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Collection) linkedList0, "cQODQxC.wW=z/s");
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) null, "");
      StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
      char char0 = ']';
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt((-440), ']');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -440
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 5;
      // Undeclared exception!
      try { 
        strBuilder0.insert(5, (-2360.178F));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 5
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      int int0 = strBuilder0.indexOf('z');
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      Writer writer0 = strBuilder_StrBuilderWriter0.append('\'');
      strBuilder_StrBuilderWriter0.write((char[]) null);
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(44);
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher((char[]) null);
      StrBuilder strBuilder2 = strBuilder0.replaceFirst(strMatcher0, "");
      // Undeclared exception!
      try { 
        strBuilder2.replace(strMatcher1, "", 0, (-3210), 1822);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("d^PKa!zgzn");
      char[] charArray0 = new char[3];
      charArray0[0] = 'c';
      charArray0[1] = '6';
      charArray0[2] = '7';
      // Undeclared exception!
      try { 
        strBuilder0.insert(115, charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 115
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("", "");
      int int0 = 1503;
      // Undeclared exception!
      try { 
        strBuilder0.substring(1503);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "java.io.tmpdir";
      // Undeclared exception!
      try { 
        strBuilder0.replace(589, 589, "java.io.tmpdir");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      String string0 = "K2+s";
      StrBuilder strBuilder0 = new StrBuilder("K2+s");
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex(34);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 34
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[0];
      int int0 = (-1273);
      int int1 = (-1827);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1273), (-1827));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1273
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.substring(4982);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      int int0 = 1583;
      StrBuilder strBuilder0 = new StrBuilder(1583);
      char[] charArray0 = new char[8];
      charArray0[0] = 'r';
      charArray0[1] = 'I';
      charArray0[2] = 'k';
      charArray0[3] = '4';
      charArray0[4] = '\'';
      char char0 = 'o';
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(1583);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1583
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(">Ued$KccRx06{LcofOM");
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrMatcher strMatcher1 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher1);
      boolean boolean0 = strBuilder_StrBuilderTokenizer0.hasPrevious();
      StrMatcher strMatcher2 = StrMatcher.stringMatcher(">Ued$KccRx06{LcofOM");
      int int1 = strBuilder0.indexOf(strMatcher0);
      strBuilder0.validateIndex(0);
      StrBuilder strBuilder2 = strBuilder0.deleteFirst('p');
      StrMatcher strMatcher3 = StrMatcher.stringMatcher(">Ued$KccRx06{LcofOM");
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadRight(0, 0, ']');
      StringBuffer stringBuffer0 = new StringBuffer();
      StringBuffer stringBuffer1 = stringBuffer0.append('p');
      StrBuilder strBuilder4 = strBuilder2.append(stringBuffer0, 0, 0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark((-1));
      long long0 = strBuilder_StrBuilderReader0.skip(0);
      StrBuilder strBuilder5 = strBuilder1.clear();
      boolean boolean1 = strBuilder1.endsWith(">Ued$KccRx06{LcofOM");
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = new StringBuffer(1906);
      int int0 = (-427);
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, (-427), 727);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      String string0 = "length must be valid";
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder strBuilder1 = strBuilder0.insert(0, (float) 0);
      StrBuilder strBuilder2 = strBuilder0.appendNewLine();
      StrBuilder strBuilder3 = strBuilder2.setNullText("java.awt.fonts");
      char[] charArray0 = new char[3];
      charArray0[0] = 'V';
      charArray0[1] = 'D';
      charArray0[2] = 'O';
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1209), charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1209
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append("", 0, 0);
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      StrBuilder strBuilder2 = strBuilder0.deleteAll(strMatcher0);
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadRight(0, 0, 'Z');
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      int int0 = 0;
      StrBuilder strBuilder4 = strBuilder3.insert(0, 0);
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(1637);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1637
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("'8,7DQl}k");
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("");
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("path.separator");
      int int0 = 1071;
      // Undeclared exception!
      try { 
        strBuilder0.insert(1071, (long) 1071);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1071
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.insert(0, (-1L));
      StrBuilder strBuilder2 = strBuilder0.replace(0, 1361, "~9{{Xw)EvipXP");
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder");
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0, 3467);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      String string0 = ">vt)Bj%O\\eNgqY~7@hT";
      StrBuilder strBuilder0 = new StrBuilder(">vt)Bj%OeNgqY~7@hT");
      int int0 = 116;
      // Undeclared exception!
      try { 
        strBuilder0.charAt(116);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 116
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1763);
      StrBuilder strBuilder1 = strBuilder0.deleteAll('f');
      // Undeclared exception!
      try { 
        strBuilder0.charAt(1763);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1763
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1956);
      StrBuilder strBuilder1 = strBuilder0.insert(0, "3pC8:{}ISn'**akv2");
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.size = 0;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      int int0 = strBuilder0.lastIndexOf((StrMatcher) null);
      boolean boolean0 = strBuilder0.endsWith("*MB7rKK]Hm");
      String string0 = strBuilder0.midString(2646, 2646);
      char[] charArray0 = new char[9];
      charArray0[0] = 'l';
      charArray0[1] = '`';
      charArray0[2] = '(';
      charArray0[3] = 'p';
      charArray0[4] = '&';
      charArray0[5] = 'z';
      charArray0[6] = 'q';
      charArray0[7] = 'D';
      int int1 = strBuilder0.indexOf((StrMatcher) null);
      charArray0[8] = 'T';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 2646, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("INkca");
      char[] charArray0 = new char[5];
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      charArray0[0] = '?';
      charArray0[1] = '/';
      charArray0[2] = 't';
      charArray0[3] = 'Z';
      charArray0[4] = '1';
      int int0 = 1352;
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 1352, 1352);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 1352
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(object0, 5, 'i');
      int int0 = strBuilder1.length();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      char[] charArray0 = new char[6];
      charArray0[0] = 'i';
      charArray0[1] = 'i';
      charArray0[2] = 'i';
      charArray0[3] = 'i';
      charArray0[4] = 'i';
      charArray0[5] = 'i';
      // Undeclared exception!
      try { 
        strBuilder1.append(charArray0, 5, 5);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 5
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 8;
      String string0 = strBuilder0.midString(1, 8);
      int int1 = 97;
      // Undeclared exception!
      try { 
        strBuilder0.insert(97, (float) 1);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 97
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-3083));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder strBuilder1 = new StrBuilder((-3083));
      int int0 = strBuilder0.indexOf((StrMatcher) null, 4192);
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.next();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.lastIndexOf((StrMatcher) null);
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "org.apache.commons.lang.text.StrBuilder");
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight(1217, 5, 'm');
      int int1 = strBuilder1.indexOf("org.apache.commons.lang.text.StrBuilder", 44);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(")KuhN' -rGUOw_");
      StrMatcher strMatcher2 = StrMatcher.stringMatcher(")KuhN' -rGUOw_");
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(0, (-1), '-');
      Object[] objectArray0 = new Object[0];
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators(objectArray0, "#kVVkIWA)K#");
      String string0 = strBuilder1.midString(0, 0);
      StrBuilder strBuilder3 = strBuilder1.append((-661L));
      // Undeclared exception!
      try { 
        strBuilder0.append("7", 0, (-39));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      boolean boolean0 = strBuilder1.endsWith("SunOS");
      StrBuilder strBuilder2 = strBuilder1.deleteAll((String) null);
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("|A3r]G0{&`SN|~h");
      int int0 = strBuilder2.indexOf((StrMatcher) strMatcher_StringMatcher0);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(938);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(938);
      char[] charArray0 = new char[6];
      charArray0[0] = ':';
      charArray0[1] = 'p';
      charArray0[2] = '5';
      charArray0[3] = 'D';
      charArray0[4] = '5';
      charArray0[5] = '%';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = strBuilder_StrBuilderReader0.read(charBuffer0);
      long long1 = strBuilder_StrBuilderReader0.skip((-1L));
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("");
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrBuilder strBuilder2 = strBuilder1.deleteFirst(strMatcher0);
      int int1 = strBuilder0.capacity();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setTrimmerMatcher(strMatcher0);
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, (-3329), 32);
      // Undeclared exception!
      try { 
        strBuilder2.toCharArray(0, (-1279));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.append((float) 0);
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight(0, 0, '!');
      StrBuilder strBuilder3 = strBuilder2.replaceAll("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer", "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      StrBuilder strBuilder4 = strBuilder3.deleteCharAt(0);
      StrBuilder strBuilder5 = strBuilder0.append(false);
      StrBuilder strBuilder6 = strBuilder5.insert(0, (String) null);
      Reader reader0 = strBuilder5.asReader();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      char[] charArray0 = new char[2];
      charArray0[0] = '!';
      int int1 = strBuilder_StrBuilderReader0.read(charArray0);
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      int int2 = strBuilder0.indexOf(strMatcher0);
      StrBuilder strBuilder7 = strBuilder4.deleteAll("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      int int3 = (-1516);
      // Undeclared exception!
      try { 
        strBuilder0.insert(889, (-179.20510197107));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 889
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceAll("$-", "$-");
      StrBuilder strBuilder2 = strBuilder1.append(0);
      StrBuilder strBuilder3 = strBuilder2.insert(0, 'z');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder strBuilder4 = strBuilder0.replaceAll('.', '.');
      StrBuilder strBuilder5 = strBuilder4.append('.');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      char[] charArray0 = new char[6];
      charArray0[0] = '.';
      charArray0[1] = 'z';
      charArray0[2] = '.';
      charArray0[3] = '.';
      charArray0[4] = 'z';
      charArray0[5] = '.';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0, 5, 0);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("/wJmC -^`NSLi^");
      String string0 = strBuilder0.substring(9, 9);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 9, 1898);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder(0);
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[6];
      charArray0[0] = '>';
      charArray0[1] = 'A';
      charArray0[2] = 'M';
      charArray0[3] = 'e';
      charArray0[4] = 'w';
      charArray0[5] = '+';
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset(charArray0);
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Iterator) strTokenizer0, "z<aY9Z=aF?'5LCg\"");
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) '+';
      objectArray0[1] = (Object) strTokenizer0;
      objectArray0[2] = (Object) '+';
      objectArray0[3] = (Object) strBuilder2;
      StrBuilder strBuilder3 = strBuilder0.appendWithSeparators(objectArray0, "z<aY9Z=aF?'5LCg\"");
      boolean boolean1 = strBuilder0.contains('e');
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrBuilder strBuilder4 = strBuilder2.replaceFirst(strMatcher0, "\"y{W{v");
      Reader reader0 = strBuilder2.asReader();
      int int0 = strBuilder3.lastIndexOf('>');
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(32);
      // Undeclared exception!
      try { 
        strBuilder0.replace(32, 32, "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray((-418), (-418));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -418
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(44, 51, '>');
      String string0 = strBuilder0.leftString(0);
      int int0 = strBuilder0.indexOf("Invalid offset: ", 0);
      StrBuilder strBuilder2 = strBuilder1.deleteFirst("Invalid offset: ");
      StrBuilder strBuilder3 = strBuilder0.appendNewLine();
      StrBuilder strBuilder4 = strBuilder0.trim();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder4.new StrBuilderWriter();
      StrBuilder strBuilder5 = strBuilder4.delete(0, 0);
      StrBuilder strBuilder6 = strBuilder0.trim();
      strBuilder_StrBuilderWriter0.write(Integer.MAX_VALUE);
      boolean boolean0 = strBuilder3.contains("");
      int int1 = strBuilder3.capacity();
      char[] charArray0 = new char[5];
      charArray0[0] = '>';
      charArray0[1] = '>';
      charArray0[2] = '>';
      charArray0[3] = '>';
      charArray0[4] = '>';
      StrBuilder strBuilder7 = strBuilder2.append(charArray0);
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('y');
      long long0 = strBuilder_StrBuilderReader0.skip(0L);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      StrBuilder strBuilder2 = strBuilder1.insert(0, (Object) strBuilder_StrBuilderWriter0);
      StrBuilder strBuilder3 = strBuilder1.append("LINUX", 0, 0);
      strBuilder_StrBuilderWriter0.write(32);
      StrMatcher strMatcher0 = StrMatcher.charMatcher('1');
      StrBuilder strBuilder4 = strBuilder2.deleteAll('1');
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("LINUX");
      StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
      StrBuilder strBuilder6 = strBuilder2.replaceAll(strMatcher0, "2");
      StrBuilder strBuilder7 = strBuilder6.appendPadding(0, 'y');
      char char0 = 'l';
      int int0 = strBuilder5.indexOf('l');
      StrBuilder strBuilder8 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder1.appendFixedWidthPadRight((Object) strBuilder8, 4, 'L');
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2242));
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('(');
      StrBuilder strBuilder1 = strBuilder0.appendPadding((-2242), ')');
      StrMatcher strMatcher0 = StrMatcher.charMatcher('0');
      StrMatcher strMatcher1 = StrMatcher.stringMatcher((String) null);
      StrBuilder strBuilder2 = strBuilder0.deleteFirst((StrMatcher) strMatcher_CharMatcher0);
      StrBuilder strBuilder3 = strBuilder2.appendNewLine();
      boolean boolean0 = strBuilder0.contains('(');
      char[] charArray0 = new char[5];
      charArray0[0] = '(';
      charArray0[1] = '0';
      charArray0[2] = '(';
      charArray0[3] = '(';
      charArray0[4] = '0';
      // Undeclared exception!
      try { 
        strBuilder1.append(charArray0, (-2242), (-1197));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -1197
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      boolean boolean0 = strBuilder0.equals(object0);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean1 = strBuilder_StrBuilderReader0.ready();
      int int0 = strBuilder0.lastIndexOf('p');
      String string0 = strBuilder0.toString();
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      boolean boolean2 = strBuilder0.contains((StrMatcher) strMatcher_TrimMatcher0);
      StrBuilder strBuilder1 = strBuilder0.insert(0, 1.0F);
      boolean boolean3 = strBuilder0.startsWith("");
      StrBuilder strBuilder2 = strBuilder0.replaceFirst('!', 'p');
      int int1 = strBuilder2.indexOf("", 2815);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrBuilder strBuilder2 = strBuilder1.deleteAll('.');
      int int0 = 1797;
      // Undeclared exception!
      try { 
        strBuilder1.append("%wlj t5JTLBS.9_", 1797, 1797);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2482));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance((char[]) null);
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      StrBuilder strBuilder1 = new StrBuilder((-2482));
      Reader reader0 = strBuilder0.asReader();
      char char0 = 'x';
      StrBuilder strBuilder2 = strBuilder1.deleteFirst('x');
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher((char[]) null);
      String string0 = strBuilder2.leftString((-2482));
      StrBuilder strBuilder3 = strBuilder2.replaceFirst(strMatcher0, "0");
      StrBuilder strBuilder4 = strBuilder1.appendFixedWidthPadLeft(9, 11, 'F');
      StrBuilder strBuilder5 = strBuilder4.replaceAll((String) null, "");
      StrBuilder strBuilder6 = strBuilder5.insert(11, 'x');
      StrBuilder strBuilder7 = strBuilder5.deleteFirst('x');
      StrMatcher strMatcher2 = StrMatcher.quoteMatcher();
      StrBuilder strBuilder8 = strBuilder1.replaceFirst(strMatcher2, (String) null);
      boolean boolean0 = strBuilder1.contains((String) null);
      StrMatcher strMatcher3 = StrMatcher.doubleQuoteMatcher();
      StrBuilder strBuilder9 = strBuilder4.replaceFirst(strMatcher3, (String) null);
      StrBuilder strBuilder10 = strBuilder8.append(false);
      StrBuilder strBuilder11 = strBuilder9.deleteAll(strMatcher0);
      StrBuilder strBuilder12 = strBuilder8.deleteAll(strMatcher2);
      StrBuilder strBuilder13 = strBuilder0.replaceFirst("", "6wW&ygx1CFH9Qs9R");
      // Undeclared exception!
      try { 
        strBuilder12.validateRange((-1), (-2482));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-915));
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder1 = new StrBuilder();
      boolean boolean0 = strBuilder0.equals(strBuilder1);
      StrBuilder strBuilder2 = strBuilder1.trim();
      String string0 = strBuilder2.rightString(711);
      StrBuilder strBuilder3 = strBuilder2.setLength(32);
      StrBuilder strBuilder4 = strBuilder3.deleteAll("");
      StrBuilder strBuilder5 = strBuilder2.appendFixedWidthPadLeft((-915), (-915), '\'');
      StrBuilder strBuilder6 = strBuilder1.replaceAll('\'', 'C');
      strBuilder6.validateIndex(0);
      Writer writer0 = strBuilder6.asWriter();
      StrBuilder strBuilder7 = strBuilder3.append((char[]) null, 0, 711);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder4.new StrBuilderReader();
      boolean boolean1 = strBuilder_StrBuilderReader0.markSupported();
      StrBuilder strBuilder8 = strBuilder3.append((long) 32);
      StrBuilder strBuilder9 = strBuilder8.appendWithSeparators((Iterator) strTokenizer0, "");
      boolean boolean2 = strBuilder_StrBuilderReader0.markSupported();
      String string1 = strBuilder3.getNullText();
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      // Undeclared exception!
      try { 
        strMatcher0.isMatch((char[]) null, 1958, (-2794), (-915));
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      int int0 = strBuilder0.indexOf("");
  }
}
