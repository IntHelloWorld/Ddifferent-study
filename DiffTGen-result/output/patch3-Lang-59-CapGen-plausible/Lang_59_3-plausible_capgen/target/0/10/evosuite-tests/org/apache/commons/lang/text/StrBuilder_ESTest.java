/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 28 18:54:29 GMT 2020
 */

package org.apache.commons.lang.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.Writer;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.NoSuchElementException;
import org.apache.commons.lang.text.StrBuilder;
import org.apache.commons.lang.text.StrMatcher;
import org.apache.commons.lang.text.StrTokenizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StrBuilder_ESTest extends StrBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      int int0 = 41;
      StrBuilder strBuilder0 = new StrBuilder(41);
      Object[] objectArray0 = new Object[9];
      Object object0 = new Object();
      objectArray0[0] = object0;
      objectArray0[1] = (Object) strBuilder0;
      char char0 = '3';
      StrBuilder strBuilder1 = strBuilder0.appendPadding((-192), '3');
      objectArray0[2] = (Object) strBuilder0;
      objectArray0[3] = (Object) strBuilder0;
      objectArray0[4] = (Object) strBuilder0;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterMatcher((StrMatcher) null);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.next();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-69));
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) strBuilder0;
      objectArray0[3] = (Object) strBuilder0;
      objectArray0[4] = (Object) strBuilder0;
      objectArray0[5] = (Object) strBuilder0;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      objectArray0[6] = object0;
      objectArray0[7] = (Object) strBuilder0;
      objectArray0[8] = (Object) strBuilder0;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "");
      char[] charArray0 = new char[8];
      charArray0[0] = '_';
      charArray0[1] = 'U';
      charArray0[2] = 'R';
      charArray0[3] = 'B';
      charArray0[4] = '';
      charArray0[5] = 'X';
      charArray0[6] = '-';
      charArray0[7] = '{';
      strBuilder0.buffer = charArray0;
      StrBuilder strBuilder2 = new StrBuilder(":$?a");
      boolean boolean0 = strBuilder0.equals(strBuilder2);
      char char0 = strBuilder2.charAt(1);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder2 = strBuilder1.ensureCapacity(0);
      char[] charArray0 = new char[5];
      charArray0[0] = 'i';
      charArray0[1] = '?';
      charArray0[2] = 'M';
      charArray0[3] = ':';
      charArray0[4] = '7';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder3 = strBuilder2.replaceFirst(strMatcher0, "~x7<89-b`");
      StrBuilder strBuilder4 = strBuilder3.deleteAll('?');
      StrBuilder strBuilder5 = strBuilder4.appendWithSeparators((Collection) null, "");
      StrBuilder strBuilder6 = strBuilder0.setNewLineText(".)IlU'{)M*6X`5_");
      StrBuilder strBuilder7 = strBuilder1.replaceAll('*', '`');
      boolean boolean0 = strBuilder6.isEmpty();
      int int0 = strBuilder0.hashCode();
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrBuilder strBuilder1 = strBuilder0.append(0);
      String string0 = strBuilder1.toString();
      StrBuilder strBuilder2 = strBuilder1.replaceAll("0", "0");
      StrBuilder strBuilder3 = strBuilder0.trim();
      StrBuilder strBuilder4 = strBuilder0.append((-972.2955F));
      StrBuilder strBuilder5 = strBuilder0.setCharAt(0, '[');
      boolean boolean0 = strBuilder4.endsWith("0");
      int int0 = strBuilder5.indexOf('G');
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((StrBuilder) null);
      StrBuilder strBuilder2 = strBuilder0.insert(0, (-1760.8));
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrBuilder strBuilder2 = strBuilder0.append('.');
      StrBuilder strBuilder3 = strBuilder0.insert(0, (Object) null);
      StrBuilder strBuilder4 = new StrBuilder(")");
      StrBuilder strBuilder5 = strBuilder3.ensureCapacity(57);
      boolean boolean0 = strBuilder0.startsWith("wi8~[VGzqvSg}yhn");
      String string0 = strBuilder3.getNewLineText();
      char[] charArray0 = new char[6];
      charArray0[0] = '.';
      charArray0[1] = '.';
      charArray0[2] = '.';
      charArray0[3] = '}';
      charArray0[4] = '}';
      String string1 = strBuilder0.leftString(101);
      charArray0[5] = '}';
      // Undeclared exception!
      try { 
        strBuilder2.insert(57, charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 57
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(34);
      int int0 = 0;
      StrBuilder strBuilder2 = strBuilder0.insert(0, (double) 0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      int int1 = 0;
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadLeft(0, 389, '*');
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance();
      boolean boolean0 = strBuilder_StrBuilderTokenizer0.hasNext();
      StrBuilder strBuilder4 = strBuilder0.replace(strMatcher0, "A", 4, 34, 4);
      boolean boolean1 = strBuilder0.endsWith("A");
      String string0 = strBuilder1.substring(0);
      String string1 = strBuilder0.toString();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("A");
      int int2 = (-3329);
      // Undeclared exception!
      try { 
        strBuilder0.validateRange((-3329), 1459);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3329
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      Object object0 = new Object();
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder1.appendNewLine();
      StrBuilder strBuilder3 = strBuilder0.appendNull();
      char[] charArray0 = new char[6];
      charArray0[0] = 'G';
      charArray0[1] = '|';
      charArray0[2] = 'M';
      charArray0[3] = 'Z';
      charArray0[4] = 'B';
      StrMatcher strMatcher0 = StrMatcher.charMatcher('B');
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 1695);
      charArray0[5] = 'c';
      strBuilder1.validateIndex(0);
      StrBuilder strBuilder4 = strBuilder3.append(charArray0, 0, 0);
      StrBuilder strBuilder5 = strBuilder4.insert(0, true);
      boolean boolean0 = strBuilder0.equals(strBuilder4);
      int int1 = strBuilder2.lastIndexOf(strMatcher0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder4.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("");
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      int int0 = 517;
      StrBuilder strBuilder0 = new StrBuilder(517);
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrBuilder strBuilder2 = strBuilder0.deleteFirst("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      int int1 = strBuilder1.length();
      int int2 = 30;
      int int3 = 5;
      char char0 = '/';
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadRight(30, 5, '/');
      StrBuilder strBuilder4 = strBuilder2.replaceFirst("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer", "");
      StrBuilder strBuilder5 = strBuilder0.append(strBuilder1);
      StringBuffer stringBuffer0 = new StringBuffer("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      stringBuffer0.ensureCapacity(517);
      StrBuilder strBuilder6 = strBuilder0.append(stringBuffer0);
      StrMatcher strMatcher0 = StrMatcher.charMatcher('6');
      StrBuilder strBuilder7 = strBuilder6.replaceAll(strMatcher0, "1AELkM:<!5");
      int int4 = strBuilder7.indexOf(strMatcher0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.remove();
      } catch(UnsupportedOperationException e) {
         //
         // remove() is unsupported
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.deleteAll((String) null);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      boolean boolean0 = linkedList0.add((String) null);
      // Undeclared exception!
      try { 
        linkedList0.listIterator(1791);
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1791, Size: 1
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-431));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((String) null);
      strBuilder_StrBuilderWriter0.write((-431));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.next();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) "\uFE51", (-431), 'b');
      strBuilder_StrBuilderWriter0.write(2012);
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('b');
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_CharMatcher0, 27);
      int int1 = strBuilder1.indexOf('(', (-815));
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) strBuilder1;
      objectArray0[1] = (Object) strBuilder_StrBuilderWriter0;
      objectArray0[2] = (Object) null;
      objectArray0[3] = (Object) strMatcher_CharMatcher0;
      objectArray0[4] = (Object) strBuilder_StrBuilderTokenizer0;
      objectArray0[5] = (Object) null;
      objectArray0[6] = (Object) strBuilder0;
      objectArray0[7] = (Object) strBuilder1;
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators(objectArray0, (String) null);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.getNullText();
      StrBuilder strBuilder1 = new StrBuilder(0);
      StrBuilder strBuilder2 = strBuilder0.append(0);
      StrBuilder strBuilder3 = strBuilder2.replaceFirst("user.region", ", Length: ");
      StrBuilder strBuilder4 = strBuilder1.append(strBuilder0);
      StrBuilder strBuilder5 = strBuilder4.append(strBuilder1);
      StrBuilder strBuilder6 = strBuilder1.appendFixedWidthPadLeft((Object) null, 0, 'Q');
      StrBuilder strBuilder7 = strBuilder0.append(strBuilder1);
      char char0 = strBuilder1.charAt(0);
      StrBuilder strBuilder8 = strBuilder7.setLength(0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder5.new StrBuilderWriter();
      char[] charArray0 = new char[9];
      charArray0[0] = 'Q';
      charArray0[1] = '0';
      charArray0[2] = 'Q';
      charArray0[3] = '0';
      charArray0[4] = 'Q';
      charArray0[5] = 'Q';
      charArray0[6] = '0';
      charArray0[7] = 'Q';
      charArray0[8] = 'Q';
      strBuilder_StrBuilderWriter0.write(charArray0);
      StringBuffer stringBuffer0 = strBuilder4.toStringBuffer();
      StrBuilder strBuilder9 = new StrBuilder();
      boolean boolean0 = strBuilder3.equals((Object) strBuilder9);
      boolean boolean1 = strBuilder9.contains("(jW");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder10 = strBuilder7.appendWithSeparators((Collection) linkedList0, (String) null);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder6.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder2 = strBuilder1.ensureCapacity(0);
      char[] charArray0 = new char[5];
      charArray0[0] = 'i';
      charArray0[1] = '?';
      charArray0[2] = 'M';
      charArray0[3] = ':';
      charArray0[4] = '7';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder3 = strBuilder2.replaceFirst(strMatcher0, "~x7<89-b`");
      StrBuilder strBuilder4 = strBuilder3.deleteAll('?');
      StrBuilder strBuilder5 = strBuilder0.setNewLineText(".)IlU'{)M*6X`5_");
      StrBuilder strBuilder6 = strBuilder1.replaceAll('*', '`');
      boolean boolean0 = strBuilder5.isEmpty();
      int int0 = strBuilder0.hashCode();
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.getNullText();
      StrBuilder strBuilder1 = new StrBuilder((String) null);
      StrBuilder strBuilder2 = strBuilder0.append(0);
      StrBuilder strBuilder3 = strBuilder2.replaceFirst("user.region", ", Length: ");
      StrBuilder strBuilder4 = strBuilder1.append(strBuilder0);
      StrBuilder strBuilder5 = strBuilder4.append(strBuilder1);
      StrBuilder strBuilder6 = strBuilder1.appendFixedWidthPadLeft((Object) null, 0, 'Q');
      StrBuilder strBuilder7 = strBuilder0.append(strBuilder1);
      char char0 = strBuilder1.charAt(0);
      StrBuilder strBuilder8 = strBuilder7.setLength(0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder5.new StrBuilderWriter();
      char[] charArray0 = new char[9];
      charArray0[0] = 'Q';
      charArray0[1] = '0';
      charArray0[2] = 'Q';
      charArray0[3] = '0';
      charArray0[4] = 'Q';
      charArray0[5] = 'Q';
      charArray0[6] = '0';
      charArray0[7] = 'Q';
      charArray0[8] = 'Q';
      strBuilder_StrBuilderWriter0.write(charArray0);
      StringBuffer stringBuffer0 = strBuilder4.toStringBuffer();
      StrBuilder strBuilder9 = new StrBuilder();
      boolean boolean0 = strBuilder3.equals((Object) strBuilder9);
      boolean boolean1 = strBuilder9.contains("(jW");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder10 = strBuilder7.appendWithSeparators((Collection) linkedList0, (String) null);
      StrBuilder strBuilder11 = strBuilder3.trim();
      StrTokenizer strTokenizer0 = strBuilder11.asTokenizer();
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder((-2015));
      boolean boolean0 = strBuilder0.equals(strBuilder1);
      // Undeclared exception!
      try { 
        strBuilder1.charAt((-789));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -789
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.length();
      boolean boolean0 = strBuilder0.endsWith("startIndex must be valid");
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder1 = strBuilder0.clear();
      String string0 = strBuilder1.rightString(0);
      StrBuilder strBuilder2 = strBuilder0.appendNewLine();
      StrBuilder strBuilder3 = strBuilder0.appendNewLine();
      StrBuilder strBuilder4 = strBuilder2.setNewLineText("startIndex must be valid");
      StrBuilder strBuilder5 = strBuilder4.append("");
      StrTokenizer strTokenizer0 = strBuilder2.asTokenizer();
      StrBuilder strBuilder6 = strBuilder0.append((double) 0);
      char[] charArray0 = new char[2];
      charArray0[0] = '\\';
      charArray0[1] = 'm';
      // Undeclared exception!
      try { 
        strBuilder4.append(strBuilder2, 0, (-3253));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.size();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      int int1 = (-1903);
      int int2 = 5;
      char char0 = 'P';
      StrBuilder strBuilder1 = strBuilder0.appendPadding(731, 'P');
      // Undeclared exception!
      try { 
        strBuilder1.append(strBuilder0, 731, (-1903));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[0];
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StrBuilder strBuilder2 = strBuilder0.replaceAll("", "");
      boolean boolean0 = strBuilder0.equals((Object) strBuilder2);
      StrBuilder strBuilder3 = strBuilder1.insert(0, (Object) strBuilder2);
      StrBuilder strBuilder4 = strBuilder1.insert(0, '}');
      char[] charArray1 = new char[0];
      StrBuilder strBuilder5 = strBuilder0.append(charArray1, 0, 0);
      StrBuilder strBuilder6 = strBuilder5.appendNewLine();
      String string0 = strBuilder6.midString('}', '}');
      StrBuilder strBuilder7 = strBuilder0.setCharAt(0, '\'');
      StrBuilder strBuilder8 = strBuilder1.append((long) 0);
      StrBuilder strBuilder9 = strBuilder1.replaceAll(')', '@');
      StrBuilder strBuilder10 = strBuilder3.reverse();
      StrBuilder strBuilder11 = new StrBuilder("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder11.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      int int1 = strBuilder9.hashCode();
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("rq2");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(3064, 3064, 'x');
      StrBuilder strBuilder2 = strBuilder1.insert(41, (long) 3064);
      StrBuilder strBuilder3 = strBuilder2.appendNewLine();
      int int0 = strBuilder2.lastIndexOf('A');
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("D7T_gvS)j*");
      StrBuilder strBuilder1 = strBuilder0.append("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      StrBuilder strBuilder2 = strBuilder1.deleteAll('t');
      char[] charArray0 = strBuilder0.toCharArray();
      StrBuilder strBuilder3 = strBuilder1.trim();
      StrBuilder strBuilder4 = strBuilder3.append(charArray0);
      boolean boolean0 = strBuilder3.isEmpty();
      StrBuilder strBuilder5 = strBuilder3.appendFixedWidthPadLeft((Object) strBuilder0, 31, 't');
      StrMatcher strMatcher0 = StrMatcher.charMatcher('6');
      StrBuilder strBuilder6 = strBuilder4.deleteFirst(strMatcher0);
      StrBuilder strBuilder7 = strBuilder3.reverse();
      StrBuilder strBuilder8 = strBuilder7.appendNull();
      boolean boolean1 = strBuilder7.endsWith((String) null);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      boolean boolean2 = strBuilder_StrBuilderReader0.ready();
      StringBuffer stringBuffer0 = strBuilder4.toStringBuffer();
      StrBuilder strBuilder9 = strBuilder6.replace(strMatcher0, "", 31, 115, (-1842));
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(", Length: ");
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      StrBuilder strBuilder2 = strBuilder0.append((-4460.014F));
      StrBuilder strBuilder3 = strBuilder0.deleteCharAt(0);
      StrBuilder strBuilder4 = strBuilder0.append(true);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(4);
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      String string0 = strBuilder0.getNullText();
      // Undeclared exception!
      try { 
        strBuilder1.appendFixedWidthPadRight((Object) null, 4, 'a');
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      int int0 = 108;
      StrBuilder strBuilder0 = new StrBuilder(108);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[3];
      char char0 = 'k';
      charArray0[0] = 'k';
      Writer writer0 = strBuilder0.asWriter();
      charArray0[1] = 'w';
      strBuilder_StrBuilderReader0.reset();
      charArray0[2] = ';';
      int int1 = strBuilder_StrBuilderReader0.read(charArray0);
      strBuilder_StrBuilderReader0.close();
      StrBuilder strBuilder1 = new StrBuilder(0);
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      int int2 = 0;
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 0, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2614));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(object0, (-2614), 'V');
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("o[J");
      StrMatcher strMatcher0 = StrMatcher.charMatcher('R');
      StrBuilder strBuilder2 = strBuilder0.deleteAll((StrMatcher) strMatcher_StringMatcher0);
      StrBuilder strBuilder3 = strBuilder0.deleteAll('V');
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadLeft((Object) strBuilder2, (-2483), 'R');
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceAll((StrMatcher) null, "30fd");
      StrBuilder strBuilder2 = strBuilder0.append("");
      StrBuilder strBuilder3 = new StrBuilder();
      String string0 = strBuilder3.toString();
      int int0 = 5;
      // Undeclared exception!
      try { 
        strBuilder2.append(strBuilder3, 5, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      Object object0 = new Object();
      StrBuilder strBuilder1 = strBuilder0.insert(0, object0);
      StrBuilder strBuilder2 = strBuilder1.appendNewLine();
      StrBuilder strBuilder3 = strBuilder0.appendNull();
      char[] charArray0 = new char[6];
      charArray0[0] = '@';
      charArray0[1] = '|';
      charArray0[2] = 'M';
      charArray0[3] = 'Z';
      charArray0[4] = 'B';
      StrMatcher strMatcher0 = StrMatcher.charMatcher('B');
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 1695);
      charArray0[5] = 'S';
      strBuilder1.validateIndex(0);
      StrBuilder strBuilder4 = strBuilder3.append(charArray0, 0, 0);
      StrBuilder strBuilder5 = strBuilder4.insert(0, true);
      boolean boolean0 = strBuilder0.equals(strBuilder4);
      int int1 = strBuilder2.lastIndexOf(strMatcher0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder4.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("");
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("", "_4C {;]\"t_cljB");
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      int int0 = strBuilder1.indexOf('7');
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft((Object) strTokenizer0, 0, '[');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadLeft(object0, 0, ']');
      StrBuilder strBuilder4 = strBuilder0.replaceFirst("", "_4C {;]\"t_cljB");
      String string0 = strBuilder4.substring(0);
      boolean boolean0 = strBuilder1.contains((String) null);
      StrBuilder strBuilder5 = strBuilder1.appendNull();
      String string1 = strBuilder1.rightString(417);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      int int0 = 9;
      StrBuilder strBuilder0 = new StrBuilder(9);
      String string0 = null;
      StrBuilder strBuilder1 = strBuilder0.setNullText((String) null);
      int int1 = 32;
      double double0 = 3269.176761;
      // Undeclared exception!
      try { 
        strBuilder1.insert(32, 3269.176761);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Windows 9");
      StrBuilder strBuilder1 = new StrBuilder();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder2 = strBuilder1.append((String) null, 1519, 1519);
      StrBuilder strBuilder3 = strBuilder1.append((long) 1519);
      StrBuilder strBuilder4 = strBuilder2.replaceAll("xC&1J[", "java.class.path");
      StrBuilder strBuilder5 = strBuilder0.appendFixedWidthPadRight((Object) strBuilder1, 1519, '.');
      StrBuilder strBuilder6 = strBuilder4.append('.');
      boolean boolean0 = strBuilder2.equals((Object) strTokenizer0);
      StrBuilder strBuilder7 = strBuilder3.setNullText((String) null);
      Reader reader0 = strBuilder4.asReader();
      boolean boolean1 = strBuilder0.isEmpty();
      StrBuilder strBuilder8 = strBuilder3.append(249.068F);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.validateIndex(0);
      StrBuilder strBuilder1 = strBuilder0.insert(0, false);
      StrBuilder strBuilder2 = strBuilder0.insert(0, (float) 0);
      int int0 = strBuilder0.indexOf((StrMatcher) null, (-490));
      int int1 = strBuilder0.capacity();
      int int2 = strBuilder0.lastIndexOf((StrMatcher) null);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(32);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("", (-1), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(395.041395);
      int int0 = (-1);
      // Undeclared exception!
      try { 
        strBuilder0.substring((-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      int int0 = 0;
      String string0 = strBuilder_StrBuilderTokenizer0.toString();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(object0, 0, '9');
      char[] charArray0 = strBuilder0.toCharArray();
      String string1 = strBuilder1.substring(0, 0);
      Object object1 = new Object();
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight(object1, 0, '9');
      boolean boolean0 = strBuilder0.endsWith("length must be valid");
      char char0 = 'M';
      int int1 = strBuilder1.indexOf('M');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray1 = new char[1];
      // Undeclared exception!
      try { 
        strBuilder1.validateRange((-1), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("/");
      int int0 = 0;
      int int1 = 0;
      char char0 = '-';
      StrBuilder strBuilder1 = strBuilder0.append('-');
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        strBuilder1.append(stringBuffer0, 0, 3306);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('=');
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      int int1 = 544;
      StringBuffer stringBuffer0 = new StringBuffer(544);
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      int int2 = strBuilder1.length();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      String string0 = "";
      StrBuilder strBuilder2 = strBuilder0.setNewLineText("");
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) strBuilder2;
      objectArray0[1] = (Object) strBuilder0;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      objectArray0[2] = object0;
      objectArray0[3] = (Object) strMatcher1;
      objectArray0[4] = (Object) strBuilder1;
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.previous();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceAll('B', '+');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('B');
      int int0 = strBuilder0.indexOf((StrMatcher) strMatcher_CharMatcher0, 2027);
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("6|w<l%)Y;&x{xAu@");
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.append('P');
      Writer writer0 = strBuilder1.asWriter();
      String string0 = strBuilder0.toString();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(587L);
      int int0 = strBuilder_StrBuilderReader0.read();
      StrBuilder strBuilder2 = strBuilder0.appendNull();
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1998);
      int int0 = 0;
      StrBuilder strBuilder1 = new StrBuilder(0);
      StrBuilder strBuilder2 = strBuilder1.deleteAll((StrMatcher) null);
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, (-2454), 1998);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      int int0 = 39;
      StrBuilder strBuilder0 = new StrBuilder(39);
      char char0 = 'h';
      int int1 = strBuilder0.lastIndexOf('h', 39);
      String string0 = strBuilder0.getNewLineText();
      char[] charArray0 = new char[4];
      // Undeclared exception!
      try { 
        strBuilder0.delete(5, 57);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.append(false);
      int int1 = 34;
      // Undeclared exception!
      try { 
        strBuilder0.charAt(34);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 34
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-3900));
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(0);
      StrBuilder strBuilder2 = strBuilder0.append((String) null);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("u U]X.~ZN1E 57&}mUP");
      int int0 = 3698;
      StrBuilder strBuilder1 = new StrBuilder(3698);
      char[] charArray0 = new char[1];
      charArray0[0] = ',';
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance(charArray0);
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Iterator) strTokenizer0, (String) null);
      int int1 = 32;
      StrBuilder strBuilder3 = strBuilder0.append("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, 32, 32);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      char[] charArray0 = new char[8];
      charArray0[0] = 'N';
      charArray0[1] = 'I';
      charArray0[2] = 'j';
      charArray0[3] = '#';
      charArray0[4] = '\'';
      charArray0[5] = 'T';
      charArray0[6] = 'K';
      charArray0[7] = '1';
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance(charArray0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "skD");
      // Undeclared exception!
      try { 
        strBuilder0.insert(2815, "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2815
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      boolean boolean0 = strBuilder0.endsWith("");
      String string0 = strBuilder0.getNewLineText();
      char char0 = 'U';
      int int0 = strBuilder0.lastIndexOf('U');
      String string1 = strBuilder0.midString((-1), (-1));
      int int1 = 0;
      StrBuilder strBuilder1 = strBuilder0.append(0);
      // Undeclared exception!
      try { 
        strBuilder1.insert((-1), (-1.0F));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = new StringBuffer(0);
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder2 = strBuilder1.ensureCapacity(0);
      char[] charArray0 = new char[5];
      charArray0[0] = 'i';
      charArray0[1] = '?';
      charArray0[2] = 'M';
      charArray0[3] = ':';
      charArray0[4] = '7';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder3 = strBuilder2.replaceFirst(strMatcher0, "~x7<89-b`");
      StrBuilder strBuilder4 = strBuilder0.setNewLineText(".)IlU'{)M*6X`5_");
      StrBuilder strBuilder5 = strBuilder1.replaceAll('*', '`');
      boolean boolean0 = strBuilder4.isEmpty();
      int int0 = strBuilder0.hashCode();
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((-2189.7F));
      String string0 = strBuilder0.leftString(0);
      int int0 = 116;
      // Undeclared exception!
      try { 
        strBuilder1.insert(116, ">rvzS.j`bf");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 116
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-514);
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt((-514));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -514
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      int int0 = 1823;
      StrBuilder strBuilder0 = new StrBuilder(1823);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[2];
      StrBuilder strBuilder1 = strBuilder0.append((long) 1823);
      charArray0[0] = 'M';
      char char0 = 'X';
      Writer writer0 = strBuilder_StrBuilderWriter0.append('M');
      StrBuilder strBuilder2 = strBuilder0.append(1823);
      // Undeclared exception!
      try { 
        strBuilder2.appendFixedWidthPadLeft(0, Integer.MAX_VALUE, 'K');
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(48);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(9, 48, '^');
      String string0 = strBuilder0.toString();
      String string1 = strBuilder1.rightString(3333);
      // Undeclared exception!
      try { 
        strBuilder1.deleteCharAt((-8));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -8
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      int int0 = 102;
      StrMatcher strMatcher0 = StrMatcher.stringMatcher((String) null);
      int int1 = strBuilder0.lastIndexOf(strMatcher0, 102);
      strBuilder_StrBuilderWriter0.write((String) null, 102, 102);
      String string0 = "qljCY";
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("qljCY", (-3294), 998);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = new StrBuilder();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder2 = strBuilder1.append((String) null, 1519, 1519);
      StrBuilder strBuilder3 = strBuilder1.append((long) 1519);
      StrBuilder strBuilder4 = strBuilder2.replaceAll("xC&1J[", "java.class.path");
      StrBuilder strBuilder5 = strBuilder0.appendFixedWidthPadRight((Object) strBuilder1, 1519, '.');
      boolean boolean0 = strBuilder2.equals((Object) strTokenizer0);
      Reader reader0 = strBuilder4.asReader();
      boolean boolean1 = strBuilder0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[3];
      charArray0[0] = 'l';
      charArray0[2] = 'E';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, (-257), (-257));
      String string0 = strBuilder0.leftString((-257));
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = 'i';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(1252, 31, 'i');
      int int0 = 649;
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(649, 's');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 649
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      char char0 = '}';
      StrBuilder strBuilder2 = strBuilder1.append('}');
      char char1 = '.';
      StrBuilder strBuilder3 = strBuilder0.append('.');
      StrBuilder strBuilder4 = strBuilder0.insert(0, (Object) null);
      // Undeclared exception!
      try { 
        strBuilder4.insert(100, ")");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 100
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.contains((StrMatcher) null);
      // Undeclared exception!
      try { 
        strBuilder0.substring((-1362), (-2465));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1362
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(114);
      StringBuffer stringBuffer0 = new StringBuffer(114);
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("{ft");
      char[] charArray0 = new char[6];
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      int int0 = 0;
      int int1 = strBuilder0.lastIndexOf(strMatcher0, 0);
      charArray0[0] = '?';
      charArray0[1] = '?';
      charArray0[2] = '#';
      charArray0[3] = ';';
      charArray0[4] = 'Z';
      charArray0[5] = 'Z';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      int int2 = strMatcher0.isMatch(charArray0, 0, 2839, 0);
      // Undeclared exception!
      try { 
        strBuilder1.insert((-1), '?');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      StringBuffer stringBuffer0 = new StringBuffer(0);
      StrBuilder strBuilder0 = new StrBuilder(854);
      StrBuilder strBuilder1 = strBuilder0.append("$*'s}l");
      int int0 = strBuilder1.lastIndexOf(strMatcher0, 0);
      // Undeclared exception!
      try { 
        strBuilder1.replace(3, 0, ">rA");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("UYp=2");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) "E~Bz1XFz", 115, 'D');
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      int int0 = strBuilder1.lastIndexOf((StrMatcher) strMatcher_NoMatcher0);
      StrBuilder strBuilder2 = strBuilder0.setNewLineText("l!W=0?=9'^& {.aF");
      StrBuilder strBuilder3 = strBuilder0.appendNull();
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadLeft(0, 0, 'B');
      StrBuilder strBuilder5 = strBuilder4.deleteFirst('B');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder5.new StrBuilderWriter();
      Writer writer0 = strBuilder0.asWriter();
      strBuilder_StrBuilderWriter0.write("UYp=2");
      boolean boolean0 = strBuilder2.contains("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      String string0 = strBuilder0.rightString(0);
      Writer writer1 = strBuilder3.asWriter();
      char[] charArray0 = new char[7];
      charArray0[0] = 'D';
      charArray0[1] = 'D';
      charArray0[2] = 'B';
      charArray0[3] = 'D';
      charArray0[4] = 'z';
      charArray0[5] = 'B';
      charArray0[6] = 'D';
      StrBuilder strBuilder6 = strBuilder3.append(charArray0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.append((float) 0);
      StrBuilder strBuilder2 = strBuilder1.replaceFirst("9AP.5sA%2Z-o", "9AP.5sA%2Z-o");
      StrBuilder strBuilder3 = strBuilder0.append(true);
      String string0 = strBuilder0.leftString(1);
      StrBuilder strBuilder4 = strBuilder0.deleteFirst("");
      StrBuilder strBuilder5 = strBuilder4.deleteFirst('3');
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('o');
      StrBuilder strBuilder2 = strBuilder1.deleteFirst("Krx[");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset(".g[gRIVfJ`|>");
      StrBuilder strBuilder3 = strBuilder1.append("os.name");
      StrBuilder strBuilder4 = strBuilder1.appendFixedWidthPadLeft(1488, 0, 'o');
      StrBuilder strBuilder5 = strBuilder4.insert(0, 0);
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) strBuilder0;
      StrBuilder strBuilder6 = strBuilder5.appendWithSeparators(objectArray0, "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      boolean boolean0 = strBuilder0.equals(object0);
      StrBuilder strBuilder7 = strBuilder1.replaceFirst("7'/", "7'/");
      Reader reader0 = strBuilder7.asReader();
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder strBuilder8 = strBuilder7.appendFixedWidthPadRight((Object) strBuilder0, 2299, 'o');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder5.new StrBuilderReader();
      char[] charArray0 = new char[5];
      charArray0[0] = '|';
      charArray0[1] = 'o';
      charArray0[2] = 'o';
      charArray0[3] = 'o';
      charArray0[4] = 'o';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 95, (-186));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("ap.u2Q");
      strBuilder0.size = 9;
      strBuilder0.validateIndex(2);
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(149);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 149
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-815));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[0];
      int int0 = strBuilder_StrBuilderReader0.read(charArray0);
      int int1 = strBuilder_StrBuilderReader0.read();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 0, (-4035));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      String string0 = null;
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      char[] charArray0 = new char[7];
      charArray0[0] = 'T';
      charArray0[1] = 'e';
      charArray0[2] = 'O';
      charArray0[3] = '0';
      charArray0[4] = '.';
      charArray0[5] = '7';
      charArray0[6] = '5';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      int int0 = 1795;
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(1795);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1795
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('A', 'K');
      int int0 = strBuilder1.indexOf('A');
      StrBuilder strBuilder2 = new StrBuilder("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      char[] charArray0 = new char[5];
      charArray0[0] = 'A';
      charArray0[1] = 'A';
      charArray0[2] = 'A';
      charArray0[3] = 'A';
      StrBuilder strBuilder3 = strBuilder1.append((Object) strBuilder_StrBuilderReader0);
      charArray0[4] = 'K';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, (-353), (-1));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[1];
      charArray0[0] = 'C';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StrBuilder strBuilder2 = strBuilder1.insert(0, 886.762677351);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      boolean boolean0 = strBuilder0.equals(object0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrBuilder strBuilder1 = strBuilder0.append("1.3");
      char[] charArray0 = new char[3];
      int int0 = strBuilder_StrBuilderReader0.read(charArray0);
      charArray0[0] = 'N';
      strBuilder_StrBuilderReader0.reset();
      charArray0[1] = 'd';
      char char0 = 'g';
      charArray0[2] = 'g';
      int int1 = 44;
      // Undeclared exception!
      try { 
        CharBuffer.wrap(charArray0, 44, 3654);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[2];
      int int0 = 0;
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
      strBuilder0.validateIndex(0);
      charArray0[0] = 'Z';
      StrBuilder strBuilder2 = strBuilder0.append(0.0F);
      charArray0[1] = '+';
      strBuilder0.buffer = charArray0;
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      int int1 = strBuilder0.lastIndexOf((StrMatcher) null);
      int int2 = 1;
      // Undeclared exception!
      try { 
        strBuilder0.midString(1, 3);
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(")7vY1*=q &*sx81VO>=");
      char[] charArray0 = new char[0];
      char[] charArray1 = strBuilder0.getChars(charArray0);
      // Undeclared exception!
      try { 
        strBuilder0.insert(668, ")7vY1*=q &*sx81VO>=");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 668
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.insert(0, (double) 0);
      StrBuilder strBuilder2 = strBuilder0.append((Object) "|TB|+&gCgV50^qFg\"N");
      StrBuilder strBuilder3 = strBuilder1.ensureCapacity(193);
      boolean boolean0 = strBuilder3.isEmpty();
      // Undeclared exception!
      try { 
        strBuilder1.substring(193);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('[');
      int int0 = strBuilder0.indexOf((StrMatcher) strMatcher_CharMatcher0);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(814, 165, '*');
      int int1 = strBuilder0.indexOf('*');
      boolean boolean0 = strBuilder1.contains((String) null);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append('s');
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrBuilder strBuilder2 = strBuilder1.insert(0, (double) 0);
      String string0 = strBuilder2.toString();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      StrMatcher strMatcher2 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      StrBuilder strBuilder3 = strBuilder0.deleteFirst(strMatcher2);
      StrBuilder strBuilder4 = strBuilder3.append(strBuilder1);
      StrBuilder strBuilder5 = strBuilder1.replaceFirst(strMatcher0, "");
      boolean boolean0 = strBuilder2.contains(strMatcher0);
      String string1 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder strBuilder6 = new StrBuilder((-2278));
      StrBuilder strBuilder7 = strBuilder5.append((Object) strBuilder6);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      String string0 = strBuilder0.getNewLineText();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[6];
      charArray0[0] = 'p';
      charArray0[1] = 'A';
      charArray0[2] = '3';
      charArray0[3] = '';
      charArray0[4] = '^';
      charArray0[5] = '^';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 1602, 1415);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(927);
      StrBuilder strBuilder1 = strBuilder0.reverse();
      StrBuilder strBuilder2 = strBuilder1.setNullText("/a-5[R[ud\"ciB8Km!4");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[2];
      charArray0[0] = 't';
      StrBuilder strBuilder3 = strBuilder2.deleteFirst("/a-5[R[ud\"ciB8Km!4");
      charArray0[1] = 'y';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 927, 927);
      StrBuilder strBuilder4 = strBuilder1.deleteAll("length must be valid");
      StrBuilder strBuilder5 = strBuilder2.replaceFirst("JJkI1bTa:An|zP", (String) null);
      StrBuilder strBuilder6 = strBuilder0.minimizeCapacity();
      boolean boolean0 = strBuilder4.contains("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder5.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      String string0 = strBuilder4.leftString(927);
      // Undeclared exception!
      try { 
        strBuilder4.substring(5, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder1 = strBuilder0.setNullText("");
      int int0 = strBuilder0.lastIndexOf("");
      char[] charArray0 = new char[9];
      charArray0[0] = ' ';
      charArray0[1] = '%';
      charArray0[2] = 'O';
      charArray0[3] = '$';
      charArray0[4] = 'Z';
      charArray0[5] = '+';
      charArray0[6] = '$';
      charArray0[7] = 'Q';
      charArray0[8] = 'h';
      StrBuilder strBuilder2 = strBuilder1.append(charArray0);
      // Undeclared exception!
      try { 
        strBuilder1.insert((-1), 0.0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(5);
      String string0 = strBuilder0.leftString(3);
      int int0 = strBuilder0.hashCode();
      // Undeclared exception!
      try { 
        strBuilder0.insert(3, (Object) "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("7vGqX1qH#izhlsF\"o ");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("7vGqX1qH#izhlsF\"o ");
      int int0 = 514;
      StrBuilder strBuilder2 = strBuilder0.ensureCapacity(514);
      StrBuilder strBuilder3 = strBuilder1.append('\'');
      // Undeclared exception!
      try { 
        strBuilder1.insert(32, 32);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("/#\"^T");
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.append("Windows NT", 0, 0);
      StrBuilder strBuilder2 = strBuilder1.setNullText("/#\"^T");
      int int1 = 115;
      // Undeclared exception!
      try { 
        strBuilder0.replace((-1225), 115, "Invalid offset: ");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1225
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 5;
      char[] charArray0 = new char[3];
      charArray0[0] = '_';
      charArray0[1] = 'd';
      charArray0[2] = 'x';
      // Undeclared exception!
      try { 
        strBuilder0.getChars((-213), 5, charArray0, 5);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -213
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("O>/,NlDfecXp_6MM'~");
      char[] charArray0 = new char[5];
      charArray0[0] = '9';
      charArray0[1] = 'p';
      charArray0[2] = 'B';
      charArray0[3] = '8';
      charArray0[4] = 'S';
      // Undeclared exception!
      try { 
        strBuilder0.getChars((-2424), (-2424), charArray0, (-331));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2424
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.size = (-3161);
      // Undeclared exception!
      try { 
        strBuilder0.appendNewLine();
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("t&`sAqI'OU;");
      char char0 = '8';
      StrBuilder strBuilder1 = strBuilder0.append('8');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrBuilder strBuilder2 = strBuilder1.deleteAll('8');
      strBuilder_StrBuilderReader0.reset();
      StrBuilder strBuilder3 = strBuilder1.insert(0, (float) 0);
      String string0 = null;
      int int0 = strBuilder3.lastIndexOf((String) null, 854);
      StrBuilder strBuilder4 = strBuilder1.insert(0, (double) 854);
      // Undeclared exception!
      try { 
        strBuilder3.insert(854, '8');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 854
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-935);
      int int1 = 911;
      String string0 = "StrTokenizer[not tokenized yet]";
      StrBuilder strBuilder1 = strBuilder0.replace(0, 911, "StrTokenizer[not tokenized yet]");
      // Undeclared exception!
      try { 
        strBuilder0.insert(911, '-');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 911
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(9);
      StrBuilder strBuilder1 = strBuilder0.deleteAll("org.apache.commons.lang.SystemUtils");
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray(1389, (-1633));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteAll("");
      int int0 = 0;
      char char0 = 'w';
      // Undeclared exception!
      try { 
        strBuilder1.replace((-1175), (-1175), "X vOg^OU|R8");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1175
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.append(true);
      char[] charArray0 = new char[7];
      charArray0[0] = 'o';
      charArray0[1] = 'w';
      charArray0[2] = 'Y';
      charArray0[3] = 'U';
      charArray0[4] = 'K';
      charArray0[5] = 'Z';
      charArray0[6] = ' ';
      // Undeclared exception!
      try { 
        strBuilder1.insert(0, charArray0, 0, 5018);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 5018
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      String string0 = "+";
      StrBuilder strBuilder0 = new StrBuilder("+");
      int int0 = (-2177);
      char char0 = 'c';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) "+", (-2177), 'c');
      String string1 = "6PE9eon,>:pm061OoM";
      int int1 = strBuilder1.lastIndexOf("6PE9eon,>:pm061OoM", (-2177));
      // Undeclared exception!
      try { 
        strBuilder1.insert((-1), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((-1649.7F));
      char[] charArray0 = new char[8];
      charArray0[0] = '\'';
      charArray0[1] = '9';
      charArray0[2] = '~';
      charArray0[3] = 'a';
      charArray0[4] = ' ';
      charArray0[5] = 'M';
      charArray0[6] = 'K';
      charArray0[7] = '^';
      StrBuilder strBuilder2 = strBuilder1.append(charArray0, 0, 0);
      StrBuilder strBuilder3 = strBuilder2.insert(0, 0);
      int int0 = strBuilder1.lastIndexOf("", 607);
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray(0, (-1281));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 65;
      char[] charArray0 = new char[2];
      int int1 = 1342;
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(1342);
      // Undeclared exception!
      try { 
        strBuilder0.insert(1342, true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1342
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(48);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(0, 48, '^');
      int int0 = strBuilder0.indexOf("]fahR670z.", (-2769));
      String string0 = strBuilder0.toString();
      StringBuffer stringBuffer0 = null;
      try {
        stringBuffer0 = new StringBuffer((-1273));
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("W(a");
      int int0 = strBuilder0.indexOf('N');
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) "W(a", 5, '_');
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) strBuilder1;
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) strBuilder1;
      objectArray0[3] = (Object) strBuilder1;
      objectArray0[4] = (Object) strBuilder0;
      objectArray0[5] = (Object) strBuilder1;
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators(objectArray0, "*{V]n]uRz7(o&Mjn");
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadLeft((Object) strBuilder1, 5, 'N');
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("9,p\"?(&s");
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('2');
      char char0 = 'K';
      StrBuilder strBuilder1 = strBuilder0.deleteAll((StrMatcher) strMatcher_CharMatcher0);
      // Undeclared exception!
      try { 
        strBuilder0.insert(3635, false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3635
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(0, 0, '\"');
      StrBuilder strBuilder2 = strBuilder1.appendNewLine();
      Reader reader0 = strBuilder2.asReader();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      int int0 = 756;
      int int1 = 116;
      StrBuilder strBuilder1 = new StrBuilder("RGY'x");
      StrBuilder strBuilder2 = strBuilder0.append((Object) strBuilder1);
      // Undeclared exception!
      try { 
        strBuilder0.insert(116, (-1L));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 116
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[3];
      charArray0[0] = 'l';
      charArray0[1] = '!';
      charArray0[2] = 'E';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, (-257), (-257));
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1093);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterMatcher(strMatcher0);
      StrTokenizer strTokenizer1 = StrTokenizer.getCSVInstance("q54$TK6D@}");
      StrTokenizer strTokenizer2 = strBuilder_StrBuilderTokenizer0.reset();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(1093, 27, '/');
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1278));
      StrBuilder strBuilder1 = strBuilder0.append('U');
      StrBuilder strBuilder2 = strBuilder1.replaceAll("", "");
      // Undeclared exception!
      try { 
        strBuilder1.append("user.home", (-1278), (-1278));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      int int1 = 449;
      StrBuilder strBuilder1 = strBuilder0.insert(0, 449);
      int int2 = 3;
      StrBuilder strBuilder2 = strBuilder0.insert(3, (float) 3);
      // Undeclared exception!
      try { 
        strBuilder1.append(strBuilder2, 0, 449);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrBuilder strBuilder2 = strBuilder0.append(0.0F);
      boolean boolean0 = strBuilder0.contains('<');
      int int0 = (-3032);
      char[] charArray0 = new char[9];
      charArray0[0] = 'q';
      charArray0[1] = '<';
      charArray0[2] = '<';
      charArray0[3] = '<';
      charArray0[4] = '<';
      charArray0[5] = '<';
      charArray0[6] = '<';
      charArray0[7] = '<';
      charArray0[8] = '<';
      StrBuilder strBuilder3 = strBuilder2.append(charArray0);
      // Undeclared exception!
      try { 
        strBuilder2.setLength((-3032));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3032
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      String string0 = "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer";
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      int int0 = (-3288);
      char[] charArray0 = new char[2];
      charArray0[0] = '`';
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      int int1 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_StringMatcher0);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      charArray0[1] = '8';
      strBuilder0.buffer = charArray0;
      // Undeclared exception!
      try { 
        strBuilder0.insert((-3288), (-1.0F));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3288
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2019);
      StrBuilder strBuilder1 = strBuilder0.delete(0, 2019);
      StrBuilder strBuilder2 = strBuilder0.appendPadding(2019, 'Y');
      int int0 = 0;
      char[] charArray0 = new char[3];
      charArray0[0] = 'Y';
      charArray0[1] = 'K';
      charArray0[2] = '~';
      StrBuilder strBuilder3 = strBuilder2.insert(0, charArray0);
      StrBuilder strBuilder4 = strBuilder3.appendFixedWidthPadRight((Object) strBuilder0, 2019, 'F');
      StrBuilder strBuilder5 = strBuilder2.insert(0, charArray0);
      int int1 = 57;
      // Undeclared exception!
      try { 
        strBuilder4.setCharAt((-312), 'r');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -312
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("i@)L?3}");
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("i@)L?3}");
      StrMatcher strMatcher1 = StrMatcher.charMatcher('i');
      char[] charArray0 = new char[2];
      charArray0[0] = '{';
      charArray0[1] = 'i';
      int int0 = strMatcher0.isMatch(charArray0, 2, 2, (-260));
      int int1 = strBuilder0.lastIndexOf(strMatcher0, 31);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      int int2 = strBuilder0.indexOf('5');
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("XGE");
      StrBuilder strBuilder1 = strBuilder0.appendPadding(243, 'g');
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("6/uGK )bs1");
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("t|Z^l|078^;$lk");
      Reader reader0 = strBuilder0.asReader();
      boolean boolean0 = strBuilder1.equals(strBuilder0);
      StrBuilder strBuilder2 = strBuilder1.minimizeCapacity();
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadRight((-595), 448, ')');
      StrBuilder strBuilder4 = strBuilder0.trim();
      StrMatcher strMatcher0 = StrMatcher.charMatcher('A');
      int int0 = strBuilder3.lastIndexOf(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.append((float) 0);
      StrBuilder strBuilder2 = strBuilder1.replaceFirst("9AP.5sA%2Z-o", "9AP.5sA%2Z-o");
      String string0 = strBuilder0.leftString(1);
      StrBuilder strBuilder3 = strBuilder0.deleteFirst("");
      StrBuilder strBuilder4 = strBuilder3.deleteFirst('3');
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(0.0F);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.insert(0, '`');
      int int1 = strBuilder1.lastIndexOf('U');
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      int int0 = 2766;
      StrBuilder strBuilder0 = new StrBuilder(2766);
      int int1 = 0;
      char char0 = 'Q';
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(0, 'Q');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Writer writer0 = strBuilder0.asWriter();
      Reader reader0 = strBuilder0.asReader();
      int int0 = strBuilder0.indexOf(',');
      char[] charArray0 = new char[3];
      charArray0[0] = ',';
      charArray0[1] = ',';
      charArray0[2] = ',';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, (-2026), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.setNullText("");
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.toString();
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      int int0 = 115;
      // Undeclared exception!
      try { 
        strBuilder0.replace(strMatcher0, "l h=/0@IG-7", 115, 115, 115);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.insert(109, (double) 109);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 109
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-3374));
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      int int0 = strBuilder0.indexOf('m', 32);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      int int0 = (-1245);
      StrBuilder strBuilder0 = new StrBuilder((-1245));
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) strBuilder0;
      StrBuilder strBuilder1 = strBuilder0.insert(0, objectArray0[1]);
      objectArray0[3] = (Object) strBuilder0;
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators(objectArray0, "pw");
      int int1 = 0;
      StrBuilder strBuilder3 = new StrBuilder(0);
      // Undeclared exception!
      try { 
        strBuilder3.validateIndex(5);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 5
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrBuilder strBuilder2 = strBuilder0.append(5222L);
      StrBuilder strBuilder3 = strBuilder2.replaceFirst("", "");
      StrBuilder strBuilder4 = strBuilder2.replaceAll("", "Invalid length: ");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("Invalid length: ", 0, (-3597));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0, 115);
      Object[] objectArray0 = new Object[2];
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      objectArray0[0] = object0;
      objectArray0[1] = (Object) strMatcher0;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, ".5zQ9'P)sAyc9");
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder(0);
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      int int0 = strBuilder1.indexOf(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("P60");
      StrBuilder strBuilder1 = new StrBuilder();
      StringBuffer stringBuffer0 = new StringBuffer(7076);
      // Undeclared exception!
      try { 
        strBuilder1.append(stringBuffer0, 7076, 7076);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      StringBuffer stringBuffer0 = new StringBuffer();
      StringBuffer stringBuffer1 = stringBuffer0.append("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, (-2730), 246);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-4267));
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "Jwlx{g");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("P8X' ", 0, (-4267));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-431));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("j\"B92F_jSwZ3=z");
      strBuilder_StrBuilderWriter0.write((-431));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.next();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) "j\"B92F_jSwZ3=z\uFE51", (-431), 'b');
      strBuilder_StrBuilderWriter0.write(2012);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-2106);
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      String string0 = "VLy3})%]B";
      // Undeclared exception!
      try { 
        strBuilder0.replace((StrMatcher) strMatcher_TrimMatcher0, "VLy3})%]B", (-2106), (-150), (-150));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2106
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2015));
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst((StrMatcher) strMatcher_TrimMatcher0);
      StrBuilder strBuilder2 = strBuilder1.replaceFirst((StrMatcher) strMatcher_TrimMatcher0, (String) null);
      StrBuilder strBuilder3 = strBuilder0.deleteAll('\\');
      StrBuilder strBuilder4 = strBuilder0.append((-2015));
      StrBuilder strBuilder5 = strBuilder3.setNullText("s9\"w+.I6GoA-LH");
      // Undeclared exception!
      try { 
        strBuilder5.substring((-2015));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2015
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(5);
      char[] charArray0 = strBuilder0.toCharArray();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(0);
      StringBuffer stringBuffer0 = new StringBuffer();
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) stringBuffer0);
      strBuilder_StrBuilderWriter0.write(charArray0);
      char[] charArray1 = strBuilder0.getChars(charArray0);
      int int0 = strBuilder0.capacity();
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, (String) null);
      StrBuilder strBuilder2 = strBuilder1.reverse();
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Writer writer0 = strBuilder0.asWriter();
      int int0 = strBuilder0.indexOf('?', (-4));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((-1058));
      StrBuilder strBuilder1 = new StrBuilder("494VH%;Y");
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      StrBuilder strBuilder2 = strBuilder1.deleteAll('4');
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      String string0 = strBuilder0.getNullText();
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight((Object) null, 0, 'a');
      boolean boolean0 = strBuilder2.endsWith("Invalid startIndex: ");
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder1 = strBuilder0.clear();
      String string0 = strBuilder1.getNullText();
      int int0 = strBuilder0.indexOf('');
      StrBuilder strBuilder2 = strBuilder1.insert(0, (Object) strBuilder0);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(5);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      String string0 = "";
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
      // Undeclared exception!
      try { 
        strBuilder0.replace(5, 5, "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("PuB]9~ej\"R");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[6];
      charArray0[0] = 'B';
      charArray0[1] = ',';
      charArray0[2] = 'D';
      charArray0[3] = '4';
      charArray0[4] = 'q';
      charArray0[5] = '0';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 1453, 1453);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 1453
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.util.prefs.PreferencesFactory");
      StrBuilder strBuilder1 = strBuilder0.setNullText("java.util.prefs.PreferencesFactory");
      char[] charArray0 = new char[7];
      charArray0[0] = '0';
      charArray0[1] = 'K';
      charArray0[2] = 'Q';
      charArray0[3] = '`';
      charArray0[4] = 'q';
      charArray0[5] = 'M';
      charArray0[6] = 'F';
      // Undeclared exception!
      try { 
        strBuilder1.append(charArray0, 0, (-1291));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: -1291
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = 507;
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((-2344), 507, 'z');
      String string0 = strBuilder0.getNewLineText();
      StrBuilder strBuilder2 = strBuilder0.append("");
      String string1 = strBuilder1.getNewLineText();
      StrBuilder strBuilder3 = strBuilder2.insert(507, (String) null);
      char[] charArray0 = new char[9];
      charArray0[0] = 'z';
      charArray0[1] = 'z';
      charArray0[2] = 'z';
      charArray0[3] = 'z';
      charArray0[4] = 'z';
      charArray0[5] = 'z';
      charArray0[6] = 'z';
      charArray0[7] = 'V';
      charArray0[8] = 'z';
      StrBuilder strBuilder4 = strBuilder0.insert(507, charArray0);
      // Undeclared exception!
      try { 
        strBuilder3.replace((-1683), 507, "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1683
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.insert(0, (-1143.0F));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(0);
      strBuilder_StrBuilderWriter0.write(34);
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft(0, (-490), 'l');
      strBuilder_StrBuilderWriter0.flush();
      StrBuilder strBuilder3 = strBuilder1.minimizeCapacity();
      strBuilder3.validateIndex(0);
      String string0 = strBuilder3.getNewLineText();
      int int0 = strBuilder1.size();
      int int1 = strBuilder1.indexOf((String) null);
      StrBuilder strBuilder4 = strBuilder3.append((String) null);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Windows 9");
      int int0 = strBuilder0.indexOf("Invalid length: ", 723);
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder strBuilder1 = strBuilder0.replaceAll("Windows 9", "Invalid length: ");
      int int1 = 226;
      // Undeclared exception!
      try { 
        strBuilder1.delete(226, 226);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      strBuilder_StrBuilderReader0.mark(778);
      int int1 = 0;
      strBuilder_StrBuilderReader0.mark(0);
      long long0 = strBuilder_StrBuilderReader0.skip(0);
      strBuilder_StrBuilderReader0.reset();
      int int2 = 1190;
      strBuilder_StrBuilderReader0.mark(1190);
      StrBuilder strBuilder1 = strBuilder0.append(0);
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight((-1), 1, 'M');
      StrBuilder strBuilder3 = new StrBuilder(1324);
      StrBuilder strBuilder4 = strBuilder2.append((Object) strBuilder3);
      StrBuilder strBuilder5 = strBuilder2.append((Object) "WsT)AN;vD7RxPoNp>0d");
      // Undeclared exception!
      try { 
        strBuilder1.toCharArray((-515), 1);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -515
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip((-676L));
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.insert(0, (long) 0);
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      char[] charArray0 = new char[7];
      charArray0[0] = '5';
      charArray0[1] = 'd';
      charArray0[2] = 'Y';
      charArray0[3] = 'e';
      charArray0[4] = 'B';
      charArray0[5] = 'L';
      charArray0[6] = '+';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      int int1 = strBuilder0.lastIndexOf('x');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("org.apache.commons.lang.text.StrBuilder");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      String string0 = strBuilder0.rightString(0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(39);
      char[] charArray0 = new char[6];
      charArray0[0] = 'U';
      char char0 = 'w';
      StrBuilder strBuilder1 = strBuilder0.setNullText("Q+");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset();
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Iterator) strTokenizer0, "Q+");
      StrBuilder strBuilder3 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder2.appendFixedWidthPadRight((Object) strBuilder3, 39, 'o');
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1093);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.validateRange(3800, 57);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-3410);
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray((-3410), (-3410));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3410
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      String string0 = "length must be valid";
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      char[] charArray0 = new char[3];
      charArray0[0] = 'E';
      StrBuilder strBuilder1 = strBuilder0.insert(0, "length must be valid");
      Writer writer0 = strBuilder1.asWriter();
      charArray0[1] = 'n';
      String string1 = "CI8W>27M";
      StrBuilder strBuilder2 = new StrBuilder("CI8W>27M");
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder2, (-696), (-696));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 108;
      // Undeclared exception!
      try { 
        strBuilder0.append("OS/2", 108, 108);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      String string0 = "+EGt#";
      StrBuilder strBuilder0 = new StrBuilder("+EGt#");
      int int0 = 1129;
      // Undeclared exception!
      try { 
        strBuilder0.insert(1129, (float) 1129);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1129
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(4239);
      // Undeclared exception!
      try { 
        strBuilder0.insert(4239, (-687));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 4239
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(5);
      String string0 = strBuilder0.leftString(3);
      int int0 = strBuilder0.hashCode();
      StrBuilder strBuilder1 = new StrBuilder("");
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, (-271), 22);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceAll("\"4bPDhy|h<+u~cp", "<e#iXdHl2");
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray((-867), (-867));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -867
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-626));
      String string0 = strBuilder0.toString();
      StrBuilder strBuilder1 = strBuilder0.append((-626));
      StrBuilder strBuilder2 = strBuilder0.replaceFirst("", "");
      String string1 = strBuilder2.toString();
      char char0 = 'I';
      boolean boolean0 = strBuilder1.contains('I');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder2.delete(102, (-626));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("Lm7e");
      boolean boolean0 = strBuilder0.contains('&');
      StrBuilder strBuilder2 = strBuilder1.ensureCapacity(0);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.isEmpty();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(964L);
      strBuilder_StrBuilderReader0.mark(3591);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("tF6ye");
      StrBuilder strBuilder1 = strBuilder0.delete(0, 3591);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(345);
      char[] charArray0 = new char[3];
      charArray0[1] = 'a';
      charArray0[2] = '}';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StrBuilder strBuilder2 = strBuilder0.minimizeCapacity();
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder2, 345, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.append((-1.0));
      StrBuilder strBuilder2 = new StrBuilder("N{1cZuv@zUi");
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder2, 0, 0);
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.startsWith("Y%l6u2-.zbR..~");
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("SI:", 37, 37);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      String string0 = "java.version";
      StrBuilder strBuilder0 = new StrBuilder("java.version");
      StrBuilder strBuilder1 = strBuilder0.append((Object) "java.version");
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      StrBuilder strBuilder3 = strBuilder0.append(96);
      String string1 = strBuilder3.midString(96, 2203);
      int int0 = (-1328);
      StrBuilder strBuilder4 = strBuilder2.appendPadding((-1328), 'f');
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1328), (float) 96);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1328
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(39);
      strBuilder0.buffer = null;
      String string0 = "";
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(0, 0, ')');
      boolean boolean0 = strBuilder0.contains("");
      StrBuilder strBuilder2 = strBuilder0.deleteFirst('i');
      int int0 = strBuilder2.indexOf('m');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize((char[]) null, 0, (-1));
      StrBuilder strBuilder3 = strBuilder2.replaceAll('i', 'i');
      char[] charArray0 = new char[7];
      charArray0[0] = 'i';
      charArray0[1] = 'i';
      charArray0[2] = ')';
      charArray0[3] = 'b';
      charArray0[4] = 'i';
      charArray0[5] = ')';
      charArray0[6] = ')';
      // Undeclared exception!
      try { 
        strBuilder3.insert((-1), charArray0, 2809, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1777));
      StrBuilder strBuilder1 = strBuilder0.reverse();
      // Undeclared exception!
      try { 
        strBuilder1.insert((-1777), (char[]) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1777
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3267);
      int int0 = 527;
      int int1 = 119;
      float float0 = 0.0F;
      // Undeclared exception!
      try { 
        strBuilder0.charAt(798);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 798
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(39);
      strBuilder0.buffer = null;
      String string0 = "";
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(0, 0, ')');
      boolean boolean0 = strBuilder0.contains("");
      int int0 = strBuilder1.indexOf('m');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize((char[]) null, 0, (-1));
      StrBuilder strBuilder2 = strBuilder1.replaceAll('i', 'i');
      char[] charArray0 = new char[10];
      charArray0[1] = 'i';
      charArray0[2] = ')';
      charArray0[3] = 'b';
      charArray0[4] = 'i';
      charArray0[5] = ')';
      charArray0[6] = ')';
      // Undeclared exception!
      try { 
        strBuilder2.insert((-1), charArray0, 2809, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(4);
      StrBuilder strBuilder1 = strBuilder0.replaceAll("Hwp3r5k2(A7I", (String) null);
      int int0 = strBuilder0.lastIndexOf('4');
      boolean boolean0 = strBuilder1.equalsIgnoreCase(strBuilder0);
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("U");
      int int0 = strBuilder0.size();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      boolean boolean0 = strBuilder0.contains("U");
      char[] charArray0 = new char[0];
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      int int1 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_CharSetMatcher0, 1516);
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("8O&9C-3", "8O&9C-3");
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('');
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder0.insert(1, charArray0, 1, (-623));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1093);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((-1067), 1093, '%');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[0];
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StrBuilder strBuilder2 = strBuilder0.replaceAll("", "");
      boolean boolean0 = strBuilder0.equals((Object) strBuilder2);
      StrBuilder strBuilder3 = strBuilder2.insert(0, 0);
      StrBuilder strBuilder4 = strBuilder1.insert(0, (Object) strBuilder2);
      StrBuilder strBuilder5 = strBuilder3.insert(0, '}');
      char[] charArray1 = new char[0];
      StrBuilder strBuilder6 = strBuilder0.append(charArray1, 0, 0);
      StrBuilder strBuilder7 = strBuilder6.appendNewLine();
      String string0 = strBuilder7.midString(0, 0);
      StrBuilder strBuilder8 = strBuilder0.setCharAt(0, '\'');
      StrBuilder strBuilder9 = strBuilder1.append((long) 0);
      StrBuilder strBuilder10 = strBuilder1.replaceAll(')', '@');
      StrBuilder strBuilder11 = strBuilder4.reverse();
      // Undeclared exception!
      try { 
        strBuilder4.insert((-2346), '`');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2346
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(0, '|');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity((-1254));
      StrBuilder strBuilder2 = strBuilder1.replaceFirst("", "");
      StrBuilder strBuilder3 = strBuilder0.reverse();
      char[] charArray0 = new char[2];
      charArray0[0] = '\'';
      charArray0[1] = '8';
      StrBuilder strBuilder4 = strBuilder3.insert(0, charArray0);
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.append("");
      // Undeclared exception!
      try { 
        strBuilder1.charAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.lastIndexOf("{t>q50+dZVH");
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance("{t>q50+dZVH");
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "{t>q50+dZVH");
      StrBuilder strBuilder2 = strBuilder0.replaceFirst("{t>q50+dZVH", "{t>q50+dZVH");
      int int1 = 105;
      StrBuilder strBuilder3 = strBuilder2.clear();
      // Undeclared exception!
      try { 
        strBuilder3.insert((-1), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrBuilder strBuilder1 = strBuilder0.append(0);
      String string0 = strBuilder1.toString();
      StrBuilder strBuilder2 = strBuilder1.replaceAll("0", "java.lang.Object");
      StrBuilder strBuilder3 = strBuilder0.trim();
      StrBuilder strBuilder4 = strBuilder0.append((-972.2955F));
      StrBuilder strBuilder5 = strBuilder0.setCharAt(0, '[');
      boolean boolean0 = strBuilder4.endsWith("0");
      int int0 = strBuilder5.indexOf('G');
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.append(0);
      int int1 = 3558;
      // Undeclared exception!
      try { 
        strBuilder0.append("", 0, 3558);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(34);
      StrBuilder strBuilder2 = strBuilder0.insert(0, (double) 0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      int int0 = 0;
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadLeft(0, 389, '*');
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance();
      boolean boolean0 = strBuilder_StrBuilderTokenizer0.hasNext();
      StrBuilder strBuilder4 = strBuilder0.replace(strMatcher0, "", 4, 34, 4);
      boolean boolean1 = strBuilder0.endsWith("");
      String string0 = strBuilder1.substring(0);
      String string1 = strBuilder0.toString();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("");
      int int1 = (-3329);
      // Undeclared exception!
      try { 
        strBuilder0.validateRange((-3329), 1459);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3329
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1797));
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_NoMatcher0);
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex((-1797));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1797
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      String string0 = strBuilder1.leftString(31);
      char char0 = '}';
      StrBuilder strBuilder2 = strBuilder1.append('}');
      char char1 = '.';
      StrBuilder strBuilder3 = strBuilder2.append('.');
      StrBuilder strBuilder4 = strBuilder0.insert(0, (Object) null);
      StrBuilder strBuilder5 = strBuilder4.trim();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      int int0 = strBuilder4.lastIndexOf(strMatcher0, 100);
      String string1 = strBuilder0.leftString(0);
      // Undeclared exception!
      try { 
        strBuilder4.insert(100, ")");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 100
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.getNullText();
      StrBuilder strBuilder1 = new StrBuilder(0);
      StrBuilder strBuilder2 = strBuilder0.append(0);
      String string1 = strBuilder1.midString(1498, 1361);
      StrBuilder strBuilder3 = strBuilder2.replaceFirst("user.region", ", Length: ");
      StrBuilder strBuilder4 = strBuilder1.append(strBuilder0);
      StrBuilder strBuilder5 = strBuilder4.append(strBuilder1);
      StrBuilder strBuilder6 = strBuilder1.appendFixedWidthPadLeft((Object) null, 0, 'Q');
      StrBuilder strBuilder7 = strBuilder0.append(strBuilder1);
      char char0 = strBuilder1.charAt(0);
      StrBuilder strBuilder8 = new StrBuilder('0');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder5.new StrBuilderWriter();
      char[] charArray0 = new char[9];
      charArray0[0] = 'Q';
      charArray0[1] = '0';
      charArray0[2] = 'Q';
      charArray0[3] = '0';
      charArray0[4] = 'Q';
      charArray0[5] = 'Q';
      charArray0[6] = '0';
      charArray0[7] = 'Q';
      charArray0[8] = 'Q';
      strBuilder_StrBuilderWriter0.write(charArray0);
      StringBuffer stringBuffer0 = strBuilder4.toStringBuffer();
      StrBuilder strBuilder9 = new StrBuilder();
      boolean boolean0 = strBuilder3.equals((Object) strBuilder9);
      boolean boolean1 = strBuilder9.contains("(jW");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder10 = strBuilder7.appendWithSeparators((Collection) linkedList0, (String) null);
      StrBuilder strBuilder11 = strBuilder0.insert(0, 'J');
  }
}
