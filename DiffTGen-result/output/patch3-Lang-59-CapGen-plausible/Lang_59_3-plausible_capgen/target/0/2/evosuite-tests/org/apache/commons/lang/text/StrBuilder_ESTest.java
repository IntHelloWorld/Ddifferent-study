/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 31 16:44:27 GMT 2020
 */

package org.apache.commons.lang.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.Writer;
import java.nio.BufferOverflowException;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.NoSuchElementException;
import org.apache.commons.lang.text.StrBuilder;
import org.apache.commons.lang.text.StrMatcher;
import org.apache.commons.lang.text.StrTokenizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StrBuilder_ESTest extends StrBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(43);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(object0, 3, ']');
      char[] charArray0 = new char[20];
      charArray0[0] = 'E';
      charArray0[1] = ']';
      charArray0[2] = '3';
      charArray0[3] = ']';
      charArray0[4] = '[';
      charArray0[5] = ']';
      charArray0[6] = '[';
      charArray0[7] = '[';
      charArray0[8] = ']';
      StrBuilder strBuilder2 = strBuilder0.append(charArray0);
      Reader reader0 = strBuilder2.asReader();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      int int0 = strBuilder1.indexOf(strMatcher0, 116);
      boolean boolean0 = strBuilder0.startsWith("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      int int1 = strBuilder0.indexOf("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter", (-1));
      char[] charArray1 = new char[5];
      charArray1[0] = '[';
      charArray1[1] = '[';
      charArray1[2] = '[';
      charArray1[3] = '[';
      charArray1[4] = '[';
      // Undeclared exception!
      try { 
        strBuilder0.insert((-483), charArray1, (-1), 3);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -483
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[8];
      charArray0[0] = 'r';
      charArray0[1] = '\'';
      charArray0[2] = 'i';
      charArray0[3] = 'g';
      charArray0[4] = 'q';
      charArray0[5] = '5';
      charArray0[6] = 'Y';
      charArray0[7] = '&';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      String string0 = strBuilder1.rightString(2);
      StrBuilder strBuilder2 = strBuilder0.appendNewLine();
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("-6@$(ilN>@}tUDC.x");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[6];
      charArray0[0] = ';';
      charArray0[1] = 'l';
      charArray0[2] = 'e';
      charArray0[3] = '[';
      charArray0[4] = '2';
      charArray0[5] = '7';
      strBuilder_StrBuilderWriter0.write(charArray0);
      StrBuilder strBuilder1 = strBuilder0.insert(0, 'a');
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrBuilder strBuilder2 = strBuilder1.replaceAll(strMatcher0, "-6@$(ilN>@}tUDC.x");
      StrBuilder strBuilder3 = strBuilder1.setNullText("length must be valid");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder4 = strBuilder3.appendWithSeparators((Collection) linkedList0, "length must be valid");
      char char0 = strBuilder0.charAt(0);
      strBuilder0.validateIndex(0);
      LinkedList<String> linkedList1 = new LinkedList<String>();
      StrBuilder strBuilder5 = strBuilder0.appendWithSeparators((Collection) linkedList1, "\bZP#s+'0gBik,");
      StrBuilder strBuilder6 = strBuilder0.replaceAll(';', 'a');
      StrMatcher strMatcher1 = StrMatcher.tabMatcher();
      StrBuilder strBuilder7 = strBuilder0.deleteAll(strMatcher1);
      StrBuilder strBuilder8 = strBuilder7.insert(0, 1678.945309333306);
      StrBuilder strBuilder9 = strBuilder5.appendNull();
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.size();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('{');
      StrBuilder strBuilder2 = strBuilder1.append('{');
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrBuilder strBuilder3 = strBuilder0.replace(strMatcher0, "=DL$", 0, 0, 0);
      StrBuilder strBuilder4 = strBuilder2.deleteFirst("e@8_EhAQ#");
      StrBuilder strBuilder5 = strBuilder4.appendFixedWidthPadLeft((Object) "I5ohv6rNI&X6*Z4(Y~", 0, '{');
      boolean boolean0 = strBuilder1.contains(' ');
      boolean boolean1 = strBuilder1.startsWith((String) null);
      StrBuilder strBuilder6 = strBuilder3.appendPadding(0, '{');
      int int1 = strBuilder1.lastIndexOf('y', 0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("-6@$(ilN>@}tUDC.x");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[6];
      char char0 = ';';
      charArray0[0] = ';';
      charArray0[1] = 'l';
      charArray0[2] = 'e';
      charArray0[3] = '[';
      charArray0[4] = '2';
      charArray0[5] = '7';
      strBuilder_StrBuilderWriter0.write(charArray0);
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.insert(0, 'a');
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('a');
      StrBuilder strBuilder2 = strBuilder1.replaceAll((StrMatcher) strMatcher_CharMatcher0, "-6@$(ilN>@}tUDC.x");
      StrBuilder strBuilder3 = strBuilder1.setNullText("length must be valid");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder4 = strBuilder3.appendWithSeparators((Collection) linkedList0, "length must be valid");
      char char1 = strBuilder0.charAt(0);
      strBuilder0.validateIndex(0);
      LinkedList<String> linkedList1 = new LinkedList<String>();
      // Undeclared exception!
      try { 
        linkedList1.pop();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("B`JqcM-vQ");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[0];
      strBuilder_StrBuilderWriter0.write(charArray0);
      StrBuilder strBuilder1 = strBuilder0.trim();
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder2 = new StrBuilder("B`JqcM-vQ");
      StringBuffer stringBuffer1 = stringBuffer0.append(true);
      strBuilder_StrBuilderWriter0.write(charArray0);
      boolean boolean0 = strBuilder2.equalsIgnoreCase(strBuilder1);
      StrBuilder strBuilder3 = strBuilder2.replaceFirst("B`JqcM-vQ", "M:D");
      strBuilder2.validateIndex(0);
      StrBuilder strBuilder4 = strBuilder0.replaceAll(", '", "dQI[,I3K#(Eov`LdU");
      boolean boolean1 = strBuilder4.equals(strBuilder1);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("-@$(ilN@}tUDC.x");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[6];
      charArray0[0] = ';';
      charArray0[1] = 'l';
      charArray0[2] = 'e';
      charArray0[3] = '[';
      charArray0[4] = '2';
      charArray0[5] = '7';
      strBuilder_StrBuilderWriter0.write(charArray0);
      StrBuilder strBuilder1 = strBuilder0.insert(0, 'a');
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('[');
      StrBuilder strBuilder2 = strBuilder1.replaceAll((StrMatcher) strMatcher_CharMatcher0, "-@$(ilN@}tUDC.x");
      StrBuilder strBuilder3 = strBuilder1.setNullText("length must be valid");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder4 = strBuilder3.appendWithSeparators((Collection) linkedList0, "length must be valid");
      char char0 = strBuilder0.charAt(0);
      strBuilder0.validateIndex(0);
      LinkedList<String> linkedList1 = new LinkedList<String>();
      StrBuilder strBuilder5 = strBuilder0.appendWithSeparators((Collection) linkedList1, "\bZP#s+'0gBik,");
      StrBuilder strBuilder6 = strBuilder0.replaceAll(';', 'a');
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrBuilder strBuilder7 = strBuilder0.deleteAll(strMatcher0);
      StrBuilder strBuilder8 = strBuilder7.insert(0, 1678.945309333306);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("-6@$(ilN>@}tUDC.x");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[6];
      charArray0[1] = 'l';
      charArray0[3] = '[';
      charArray0[4] = '2';
      charArray0[5] = '7';
      strBuilder_StrBuilderWriter0.write(charArray0);
      StrBuilder strBuilder1 = strBuilder0.insert(0, 'a');
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrBuilder strBuilder2 = strBuilder1.replaceAll(strMatcher0, "-6@$(ilN>@}tUDC.x");
      StrBuilder strBuilder3 = strBuilder1.setNullText("length must be valid");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder4 = strBuilder3.appendWithSeparators((Collection) linkedList0, "length must be valid");
      char char0 = strBuilder0.charAt(0);
      strBuilder0.validateIndex(0);
      LinkedList<String> linkedList1 = new LinkedList<String>();
      StrBuilder strBuilder5 = strBuilder0.appendWithSeparators((Collection) linkedList1, "\bZP#s+'0gBik,");
      StrBuilder strBuilder6 = strBuilder0.replaceAll(';', 'a');
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('2');
      StrBuilder strBuilder7 = strBuilder0.deleteAll((StrMatcher) strMatcher_CharMatcher0);
      StrBuilder strBuilder8 = strBuilder7.insert(0, 1678.945309333306);
      StrBuilder strBuilder9 = strBuilder0.setNullText("\bZP#s+'0gBik,");
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      char[] charArray0 = new char[2];
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.insert(0, "Invalid offset: ");
      charArray0[0] = 'M';
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) 'M';
      objectArray0[2] = (Object) "Index: ";
      StrBuilder strBuilder2 = new StrBuilder();
      StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(0L);
      boolean boolean0 = strBuilder0.contains("k(");
      char[] charArray0 = new char[8];
      charArray0[0] = 'e';
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("&;}wnfNHs3r?@9");
      StrBuilder strBuilder2 = strBuilder1.deleteFirst((StrMatcher) strMatcher_StringMatcher0);
      charArray0[1] = 'I';
      charArray0[2] = 'N';
      charArray0[3] = '/';
      charArray0[4] = 'E';
      charArray0[5] = '<';
      charArray0[6] = 'w';
      boolean boolean1 = strBuilder2.contains("");
      String string0 = strBuilder0.leftString((-3000));
      charArray0[7] = '<';
      // Undeclared exception!
      try { 
        strBuilder1.insert((-3000), charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3000
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[9];
      charArray0[0] = '\"';
      charArray0[1] = 'R';
      charArray0[2] = 'u';
      charArray0[3] = ' ';
      charArray0[4] = '/';
      charArray0[5] = 'e';
      charArray0[6] = 'd';
      charArray0[7] = ';';
      charArray0[8] = '}';
      StrBuilder strBuilder1 = strBuilder0.insert(0, charArray0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4{EQFw|+uF.&E:%");
      StrBuilder strBuilder1 = strBuilder0.setCharAt(0, '5');
      StrBuilder strBuilder2 = strBuilder0.append((StringBuffer) null);
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("_?");
      StrBuilder strBuilder3 = strBuilder2.replaceFirst((StrMatcher) strMatcher_StringMatcher0, "4{EQFw|+uF.&E:%");
      String string0 = strBuilder1.rightString(510);
      StrBuilder strBuilder4 = strBuilder1.setNullText("CYYps,g");
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      StrBuilder strBuilder5 = strBuilder2.appendWithSeparators((Collection) linkedList0, "CYYps,g");
      StringBuffer stringBuffer0 = strBuilder5.toStringBuffer();
      StrBuilder strBuilder6 = strBuilder1.insert(0, 0);
      StrTokenizer strTokenizer0 = strBuilder2.asTokenizer();
      StrBuilder strBuilder7 = new StrBuilder("4{EQFw|+uF.&E:%");
      int int0 = strBuilder2.lastIndexOf('g');
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      String string0 = "yx2RQ\\";
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[5];
      charArray0[0] = 'r';
      charArray0[1] = 'E';
      charArray0[2] = ' ';
      charArray0[3] = 'y';
      charArray0[4] = 't';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, (-3111), (-3111));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1);
      Reader reader0 = strBuilder0.asReader();
      Writer writer0 = strBuilder0.asWriter();
      char char0 = 'D';
      String string0 = null;
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher((String) null);
      int int0 = strBuilder0.indexOf((StrMatcher) null);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('D');
      StrBuilder strBuilder2 = strBuilder1.appendNull();
      int int1 = 5;
      StrBuilder strBuilder3 = strBuilder2.setNullText("4sY'I#tR&2G#I");
      int int2 = strBuilder0.lastIndexOf(strMatcher0, 0);
      // Undeclared exception!
      try { 
        strBuilder3.insert(1, (double) 1);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.substring(0);
      int int0 = strBuilder0.indexOf("5R*D\"qqe*m|?yA");
      StrBuilder strBuilder1 = strBuilder0.append((char[]) null);
      StrBuilder strBuilder2 = strBuilder1.insert(0, (char[]) null, 63, 0);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      StrBuilder strBuilder3 = strBuilder0.appendWithSeparators((Collection) linkedList0, (String) null);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder3.new StrBuilderTokenizer();
      Reader reader0 = strBuilder0.asReader();
      Object object0 = new Object();
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadLeft(object0, 1100, 'q');
      StrBuilder strBuilder5 = strBuilder4.deleteAll('j');
      int int1 = strBuilder0.indexOf('Q');
      String string1 = strBuilder4.toString();
      char[] charArray0 = strBuilder3.getChars((char[]) null);
      StrBuilder strBuilder6 = strBuilder5.append(charArray0);
      Writer writer0 = strBuilder4.asWriter();
      StrBuilder strBuilder7 = strBuilder3.replaceAll((String) null, "1.3");
      // Undeclared exception!
      try { 
        strBuilder6.append(string1, (-1), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("1.2");
      StrBuilder strBuilder1 = strBuilder0.append(0);
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft(2, 2, '[');
      StrBuilder strBuilder3 = strBuilder1.appendNewLine();
      StrBuilder strBuilder4 = strBuilder2.appendFixedWidthPadLeft((-297), (-297), 'G');
      boolean boolean0 = strBuilder3.contains("3? ");
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "1.2");
      StringBuffer stringBuffer1 = stringBuffer0.append((double) 2);
      StrBuilder strBuilder5 = new StrBuilder("3? ");
      int int0 = strBuilder1.size();
      StrBuilder strBuilder6 = strBuilder3.deleteFirst("org.apache.commons.lang.text.StrBuilder");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      char[] charArray0 = new char[8];
      charArray0[0] = '[';
      charArray0[1] = '>';
      charArray0[2] = '[';
      charArray0[3] = 'G';
      charArray0[4] = 'p';
      charArray0[5] = '[';
      charArray0[6] = '|';
      charArray0[7] = 'G';
      int int1 = strBuilder_StrBuilderReader0.read(charArray0, 2, 0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.size();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('{');
      StrBuilder strBuilder2 = strBuilder1.append('{');
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators((Collection) linkedList0, "I5ohv6rNI&X6*Z4(Y~");
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrBuilder strBuilder4 = strBuilder0.replace(strMatcher0, "=DL$", 0, 0, 0);
      StrBuilder strBuilder5 = strBuilder2.deleteFirst("e@8_EhAQ#");
      StrBuilder strBuilder6 = strBuilder5.appendFixedWidthPadLeft((Object) "I5ohv6rNI&X6*Z4(Y~", 0, '{');
      boolean boolean0 = strBuilder1.contains(' ');
      boolean boolean1 = strBuilder1.startsWith((String) null);
      StrBuilder strBuilder7 = strBuilder4.appendPadding(0, '{');
      StrBuilder strBuilder8 = strBuilder6.append('{');
      char[] charArray0 = new char[4];
      charArray0[0] = ' ';
      charArray0[1] = ' ';
      charArray0[2] = '{';
      charArray0[3] = '{';
      StrBuilder strBuilder9 = strBuilder3.append(charArray0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[4];
      charArray0[0] = '0';
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      charArray0[1] = 'o';
      charArray0[2] = 'i';
      charArray0[3] = '%';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder2 = strBuilder0.deleteFirst(strMatcher1);
      char[] charArray1 = new char[1];
      charArray1[0] = 'M';
      strBuilder0.getChars(0, 0, charArray1, 0);
      int int0 = strBuilder0.indexOf('M', (-2028));
      StrBuilder strBuilder3 = strBuilder0.deleteAll((String) null);
      String string0 = strBuilder0.midString(167, 0);
      int int1 = strBuilder0.hashCode();
      StrBuilder strBuilder4 = strBuilder0.reverse();
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) 'M';
      objectArray0[1] = (Object) strBuilder4;
      StrBuilder strBuilder5 = strBuilder4.appendWithSeparators(objectArray0, "");
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[7];
      charArray0[0] = 'W';
      charArray0[1] = 'H';
      charArray0[2] = ']';
      charArray0[3] = ';';
      charArray0[4] = '\'';
      charArray0[5] = 'g';
      charArray0[6] = 'O';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 823, (-520));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = ' ';
      int int0 = strBuilder0.lastIndexOf(' ', (-873));
      String string0 = strBuilder0.rightString((-873));
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((-873), (-1), ' ');
      char[] charArray0 = new char[2];
      StrBuilder strBuilder2 = strBuilder1.append(' ');
      charArray0[0] = ' ';
      charArray0[1] = ' ';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      int int1 = strBuilder1.lastIndexOf(strMatcher0);
      int int2 = 1119;
      // Undeclared exception!
      try { 
        strBuilder1.append(strBuilder0, (-873), 1119);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.size = (-952);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrBuilder strBuilder1 = new StrBuilder(0);
      String string0 = strBuilder0.midString(0, (-3266));
      StrBuilder strBuilder2 = strBuilder1.insert(0, (Object) null);
      int int0 = 4;
      int int1 = strBuilder2.indexOf("", 4);
      // Undeclared exception!
      try { 
        strBuilder1.insert((-952), (-3266));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -952
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      int int0 = 582;
      StrBuilder strBuilder0 = new StrBuilder(582);
      boolean boolean0 = strBuilder0.contains(')');
      String string0 = "";
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      char[] charArray0 = new char[3];
      charArray0[0] = '9';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      charArray0[1] = ')';
      charArray0[2] = ')';
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher(charArray0);
      int int1 = strBuilder0.indexOf(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrBuilder strBuilder2 = strBuilder1.trim();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.previous();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(43);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      int int0 = 3;
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(object0, 3, ']');
      char char0 = '[';
      char[] charArray0 = new char[9];
      charArray0[0] = 'P';
      charArray0[1] = ']';
      charArray0[2] = '3';
      charArray0[3] = ']';
      charArray0[4] = '[';
      charArray0[5] = ']';
      charArray0[6] = '[';
      charArray0[7] = '[';
      charArray0[8] = ']';
      StrBuilder strBuilder2 = strBuilder0.append(charArray0);
      // Undeclared exception!
      try { 
        strBuilder1.setCharAt(43, '[');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 43
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder strBuilder1 = new StrBuilder(0);
      char[] charArray0 = new char[6];
      charArray0[0] = 'G';
      charArray0[1] = 'I';
      charArray0[2] = '.';
      charArray0[3] = '$';
      charArray0[4] = 'b';
      charArray0[5] = '0';
      // Undeclared exception!
      try { 
        strBuilder0.insert(0, charArray0, 101, 9);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: 101
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      int int0 = 1260;
      StrBuilder strBuilder0 = new StrBuilder(1260);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder strBuilder1 = strBuilder0.append((-579.9648302052822));
      char[] charArray0 = new char[3];
      charArray0[0] = 'V';
      charArray0[1] = '\\';
      charArray0[2] = 'R';
      // Undeclared exception!
      try { 
        strBuilder0.getChars((-2224), 3829, charArray0, 3829);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2224
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      int int0 = 25;
      StrBuilder strBuilder0 = new StrBuilder(25);
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(25);
      String string0 = null;
      StrBuilder strBuilder2 = strBuilder0.deleteFirst((String) null);
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      boolean boolean0 = strBuilder2.contains(strMatcher0);
      StrBuilder strBuilder3 = strBuilder0.append((long) 25);
      Writer writer0 = strBuilder3.asWriter();
      int int1 = (-3941);
      // Undeclared exception!
      try { 
        strBuilder3.delete((-3941), (-3941));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3941
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      char[] charArray0 = new char[4];
      charArray0[0] = '>';
      charArray0[2] = '+';
      charArray0[3] = '+';
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('i', 'i');
      StrBuilder strBuilder2 = strBuilder0.appendNull();
      StrBuilder strBuilder3 = strBuilder0.ensureCapacity(32);
      // Undeclared exception!
      try { 
        strBuilder0.insert(32, 0L);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("-6@$(ilN>@}tUDC.x");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[6];
      charArray0[0] = ';';
      charArray0[1] = 'l';
      charArray0[2] = 'e';
      charArray0[3] = '[';
      charArray0[4] = '2';
      charArray0[5] = '7';
      strBuilder_StrBuilderWriter0.write(charArray0);
      StrBuilder strBuilder1 = strBuilder0.insert(0, 'a');
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrBuilder strBuilder2 = strBuilder1.replaceAll(strMatcher0, "-6@$(ilN>@}tUDC.x");
      StrBuilder strBuilder3 = strBuilder1.setNullText("length must be valid");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder4 = strBuilder3.appendWithSeparators((Collection) linkedList0, "length must be valid");
      char char0 = strBuilder0.charAt(0);
      strBuilder0.validateIndex(0);
      LinkedList<String> linkedList1 = new LinkedList<String>();
      StrBuilder strBuilder5 = strBuilder0.appendWithSeparators((Collection) linkedList1, "\bZP#s+'0gBik,");
      StrBuilder strBuilder6 = strBuilder0.replaceAll(';', 'a');
      StrMatcher strMatcher1 = StrMatcher.tabMatcher();
      StrBuilder strBuilder7 = strBuilder0.deleteAll(strMatcher1);
      StrBuilder strBuilder8 = strBuilder7.insert(0, 1678.945309333306);
      StrBuilder strBuilder9 = strBuilder3.deleteAll("-6@$(ilN>@}tUDC.x");
      // Undeclared exception!
      try { 
        strBuilder3.insert((-345), 'x');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -345
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      char[] charArray0 = new char[1];
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('a', 'a');
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.lastIndexOf('}', 5);
      StrBuilder strBuilder1 = strBuilder0.append('8');
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("bFxji\"SL2Q");
      int int1 = strBuilder1.indexOf(strMatcher0);
      boolean boolean0 = strBuilder1.equals(strBuilder0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = null;
      StrBuilder strBuilder1 = strBuilder0.insert(0, (String) null);
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder2 = strBuilder0.deleteFirst((StrMatcher) strMatcher_TrimMatcher0);
      StrBuilder strBuilder3 = new StrBuilder();
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) null;
      objectArray0[1] = (Object) null;
      objectArray0[2] = (Object) strBuilder1;
      StrBuilder strBuilder4 = strBuilder3.appendWithSeparators(objectArray0, (String) null);
      StrBuilder strBuilder5 = strBuilder3.insert(0, (String) null);
      int int0 = (-1);
      StrBuilder strBuilder6 = new StrBuilder();
      StrBuilder strBuilder7 = strBuilder4.ensureCapacity(78);
      String string1 = "jm2qUF7";
      // Undeclared exception!
      try { 
        strBuilder6.append("jm2qUF7", 0, 4005);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      int int0 = (-1117);
      StrBuilder strBuilder0 = new StrBuilder((-1117));
      boolean boolean0 = strBuilder0.isEmpty();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("X+.=3`#DeM@Y", (-1110), 415);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1571));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((-964));
      strBuilder_StrBuilderWriter0.write("");
      strBuilder_StrBuilderWriter0.flush();
      StringBuffer stringBuffer0 = new StringBuffer(1152);
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      char[] charArray0 = new char[5];
      charArray0[0] = 'v';
      charArray0[1] = '\"';
      charArray0[2] = 'y';
      charArray0[3] = 'K';
      charArray0[4] = 'X';
      // Undeclared exception!
      try { 
        stringBuffer0.append(charArray0, (-964), 0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 32;
      char char0 = 'p';
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadLeft((Object) null, 32, 'p');
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("os.arch");
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(0);
      StrBuilder strBuilder2 = strBuilder1.deleteFirst("os.arch");
      StrBuilder strBuilder3 = strBuilder2.append("os.arch", 0, 0);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("os.arch");
      StrBuilder strBuilder4 = strBuilder1.deleteAll(strMatcher0);
      char[] charArray0 = new char[3];
      charArray0[0] = 'R';
      charArray0[1] = ' ';
      charArray0[2] = 'o';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(0);
      StrMatcher strMatcher2 = StrMatcher.stringMatcher((String) null);
      long long0 = strBuilder_StrBuilderReader0.skip(0);
      String string0 = strBuilder0.getNullText();
      // Undeclared exception!
      try { 
        strBuilder4.charAt(1);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-855));
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrBuilder strBuilder2 = strBuilder1.trim();
      int int0 = 0;
      StrBuilder strBuilder3 = strBuilder0.insert(0, 0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(0);
      StrBuilder strBuilder4 = strBuilder0.trim();
      int int1 = 4;
      StrBuilder strBuilder5 = strBuilder3.ensureCapacity(4);
      // Undeclared exception!
      try { 
        strBuilder5.substring(4);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      int int0 = (-1347);
      StrBuilder strBuilder0 = new StrBuilder((-1347));
      String string0 = strBuilder0.leftString(97);
      char[] charArray0 = new char[4];
      charArray0[0] = ',';
      charArray0[1] = 'u';
      charArray0[2] = 'X';
      StrBuilder strBuilder1 = strBuilder0.append((long) (-1347));
      strBuilder1.buffer = charArray0;
      int int1 = (-218);
      // Undeclared exception!
      try { 
        strBuilder1.append((-218));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(31);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark((-3952));
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("java.vm.vendor");
      char[] charArray0 = new char[3];
      charArray0[0] = '+';
      StrBuilder strBuilder2 = strBuilder1.append('h');
      StrMatcher strMatcher0 = StrMatcher.charMatcher('+');
      int int0 = strBuilder2.indexOf(strMatcher0);
      charArray0[1] = ';';
      charArray0[2] = '3';
      StrBuilder strBuilder3 = strBuilder1.append(charArray0);
      StrBuilder strBuilder4 = strBuilder0.append((-3792));
      int int1 = strBuilder2.indexOf('+');
      boolean boolean1 = strBuilder2.endsWith("%TG);k");
      char char0 = strBuilder1.charAt(0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((-1225));
      char char0 = strBuilder0.charAt(4);
      StrBuilder strBuilder2 = strBuilder0.setNewLineText("Invalid startIndex: ");
      StrBuilder strBuilder3 = strBuilder2.append(34);
      StrBuilder strBuilder4 = strBuilder2.ensureCapacity((-263));
      StrBuilder strBuilder5 = strBuilder2.append("=8RH8#.3CnD&&aR");
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrBuilder strBuilder6 = strBuilder2.deleteAll((StrMatcher) strMatcher_NoMatcher0);
      char[] charArray0 = new char[9];
      charArray0[0] = '5';
      charArray0[1] = '5';
      charArray0[2] = 'P';
      charArray0[3] = '5';
      charArray0[4] = '5';
      charArray0[5] = '5';
      charArray0[6] = 'b';
      charArray0[7] = '5';
      StrBuilder strBuilder7 = strBuilder6.append(charArray0);
      StringBuffer stringBuffer0 = strBuilder5.toStringBuffer();
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(466);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      strBuilder_StrBuilderReader0.mark(2970);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1), true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("$");
      boolean boolean0 = strBuilder0.isEmpty();
      StrBuilder strBuilder1 = strBuilder0.append(0L);
      String string0 = strBuilder0.substring(0, 0);
      StrBuilder strBuilder2 = strBuilder1.append(strBuilder0);
      boolean boolean1 = strBuilder2.equalsIgnoreCase(strBuilder0);
      char[] charArray0 = new char[7];
      String string1 = strBuilder1.leftString(32);
      charArray0[0] = '%';
      charArray0[1] = 'z';
      charArray0[2] = ';';
      charArray0[3] = 'K';
      StrBuilder strBuilder3 = strBuilder0.append((String) null, Integer.MAX_VALUE, 2536);
      charArray0[4] = 'o';
      charArray0[5] = 'Z';
      charArray0[6] = '8';
      char[] charArray1 = strBuilder1.getChars(charArray0);
      StrBuilder strBuilder4 = strBuilder1.appendNull();
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceAll('=', ')');
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[4];
      charArray0[0] = '+';
      charArray0[1] = 'l';
      charArray0[2] = 'b';
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('}');
      StrBuilder strBuilder2 = strBuilder1.setNullText("$nLV");
      charArray0[3] = ';';
      StrBuilder strBuilder3 = strBuilder0.append((long) 0);
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("Windows 9");
      int int0 = strMatcher0.isMatch(charArray0, 0, 0, 0);
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      boolean boolean0 = strBuilder3.contains(strMatcher0);
      strBuilder0.buffer = charArray0;
      int int1 = strBuilder0.hashCode();
      StrBuilder strBuilder4 = strBuilder0.deleteFirst('+');
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "");
      StrBuilder strBuilder5 = strBuilder4.append(stringBuffer0);
      StrBuilder strBuilder6 = strBuilder4.replaceFirst('5', ';');
      StrBuilder strBuilder7 = strBuilder6.insert(0, false);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder6.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(strBuilder0.buffer);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder7.new StrBuilderReader();
      boolean boolean1 = strBuilder_StrBuilderReader0.markSupported();
      StrBuilder strBuilder8 = strBuilder3.deleteFirst("");
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("FzxRS(x");
      StrBuilder strBuilder1 = strBuilder0.append(true);
      boolean boolean0 = strBuilder1.equalsIgnoreCase(strBuilder0);
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      char[] charArray0 = new char[9];
      charArray0[0] = 'n';
      charArray0[1] = '<';
      charArray0[2] = '=';
      charArray0[3] = 'K';
      charArray0[4] = 'I';
      charArray0[5] = ' ';
      charArray0[6] = 'h';
      charArray0[7] = '5';
      charArray0[8] = '';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder1.lastIndexOf((StrMatcher) strMatcher_TrimMatcher0);
      StrBuilder strBuilder2 = strBuilder1.deleteAll('H');
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("FzxRS(x");
      StrBuilder strBuilder3 = strBuilder1.replaceFirst((StrMatcher) strMatcher_TrimMatcher0, "m.hLw");
      StrBuilder strBuilder4 = strBuilder3.append(0.0F);
      int int1 = strBuilder0.indexOf((StrMatcher) strMatcher_TrimMatcher0);
      StrBuilder strBuilder5 = strBuilder1.insert(5, true);
      String string0 = strBuilder0.leftString(117);
      StrBuilder strBuilder6 = strBuilder3.append(3910.5F);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder7 = strBuilder3.appendWithSeparators((Collection) linkedList0, "Invalid length: ");
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder("it>{Y");
      StrTokenizer strTokenizer0 = strBuilder1.asTokenizer();
      boolean boolean0 = strBuilder0.equals(strBuilder1);
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight(0, (-1514), ';');
      StrBuilder strBuilder3 = strBuilder0.deleteFirst('r');
      StrBuilder strBuilder4 = strBuilder2.appendNewLine();
      StrBuilder strBuilder5 = strBuilder0.append((long) 0);
      boolean boolean1 = strBuilder2.endsWith("it>{Y");
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      char[] charArray0 = new char[3];
      char char0 = 'j';
      charArray0[0] = 'j';
      char char1 = '\'';
      charArray0[1] = '\'';
      char char2 = '>';
      charArray0[2] = '>';
      strBuilder0.buffer = charArray0;
      StrBuilder strBuilder1 = strBuilder0.setLength(0);
      StrBuilder strBuilder2 = strBuilder1.replaceAll("", (String) null);
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadRight((Object) null, 0, '>');
      StrBuilder strBuilder4 = strBuilder3.append((long) 0);
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      int int1 = strBuilder0.lastIndexOf(strMatcher0);
      char char3 = '5';
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1), '5');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(4);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst((StrMatcher) null, "Invalid offset: ");
      StrBuilder strBuilder2 = strBuilder1.setNullText("Invalid offset: ");
      int int0 = strBuilder0.indexOf("");
      StrBuilder strBuilder3 = strBuilder1.append("");
      StrBuilder strBuilder4 = strBuilder3.insert(0, 0L);
      boolean boolean0 = strBuilder1.endsWith("#\"DU\"xjU ?fRhpCrRnc");
      StrBuilder strBuilder5 = strBuilder4.append((char[]) null, 0, 0);
      StrBuilder strBuilder6 = strBuilder4.appendWithSeparators((Object[]) null, "");
      // Undeclared exception!
      try { 
        strBuilder1.insert((-551), '4');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -551
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(34);
      String string0 = "(?)7";
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) ", '", 0, ']');
      // Undeclared exception!
      try { 
        strBuilder1.insert(34, '#');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 34
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      int int0 = 2150;
      StrBuilder strBuilder0 = new StrBuilder(2150);
      StrBuilder strBuilder1 = strBuilder0.append(116);
      String string0 = "3~L'&PN7cnW${`";
      StrBuilder strBuilder2 = strBuilder1.deleteFirst("3~L'&PN7cnW${`");
      boolean boolean0 = strBuilder0.endsWith("3~L'&PN7cnW${`");
      StrBuilder strBuilder3 = strBuilder1.setCharAt(0, '>');
      int int1 = strBuilder1.lastIndexOf("3~L'&PN7cnW${`");
      StrBuilder strBuilder4 = strBuilder1.trim();
      StrBuilder strBuilder5 = strBuilder4.append(1L);
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) strBuilder5;
      objectArray0[1] = (Object) strBuilder1;
      objectArray0[2] = (Object) strBuilder1;
      objectArray0[3] = (Object) strBuilder4;
      objectArray0[4] = (Object) strBuilder2;
      objectArray0[5] = (Object) strBuilder4;
      StrBuilder strBuilder6 = strBuilder0.appendWithSeparators(objectArray0, "3~L'&PN7cnW${`");
      Writer writer0 = strBuilder5.asWriter();
      // Undeclared exception!
      try { 
        strBuilder2.substring((-746), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -746
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(0);
      strBuilder_StrBuilderWriter0.write("ejU)x|>");
      strBuilder_StrBuilderWriter0.write("ejU)x|>", 0, 0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(0L);
      char[] charArray0 = new char[7];
      charArray0[0] = 'T';
      charArray0[1] = '4';
      charArray0[2] = ')';
      charArray0[3] = 'p';
      charArray0[4] = 'i';
      charArray0[5] = 'U';
      charArray0[6] = 'J';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0, 0, 0);
      StrBuilder strBuilder1 = strBuilder0.setNullText("ejU)x|>");
      strBuilder_StrBuilderReader0.mark(116);
      int int1 = strBuilder0.lastIndexOf("ejU)x|>");
      String string0 = strBuilder0.toString();
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.substring(0);
      int int0 = strBuilder0.indexOf("5R*D\"qqe*m|?yA");
      char[] charArray0 = null;
      StrBuilder strBuilder1 = strBuilder0.append((char[]) null);
      StrBuilder strBuilder2 = strBuilder1.insert(0, (char[]) null, 63, 0);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      StrBuilder strBuilder3 = strBuilder0.appendWithSeparators((Collection) linkedList0, (String) null);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder3.new StrBuilderTokenizer();
      Reader reader0 = strBuilder0.asReader();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.previous();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      int int0 = 439;
      StrBuilder strBuilder0 = new StrBuilder(439);
      StrBuilder strBuilder1 = strBuilder0.append((char[]) null);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset((String) null);
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, (String) null);
      // Undeclared exception!
      try { 
        strBuilder0.delete(439, 439);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "cj~ucX#RCXC0Q";
      int int0 = strBuilder0.indexOf("cj~ucX#RCXC0Q");
      int int1 = strBuilder0.lastIndexOf("cj~ucX#RCXC0Q");
      int int2 = strBuilder0.indexOf("cj~ucX#RCXC0Q", (-1));
      int int3 = (-4851);
      int int4 = 2;
      char[] charArray0 = new char[1];
      charArray0[0] = 'Q';
      // Undeclared exception!
      try { 
        strBuilder0.insert(2625, false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2625
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-2111);
      // Undeclared exception!
      try { 
        strBuilder0.charAt((-2111));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2111
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(32);
      Writer writer0 = strBuilder0.asWriter();
      int int0 = (-1190);
      char[] charArray0 = new char[6];
      charArray0[0] = 'q';
      charArray0[1] = 'j';
      charArray0[2] = 'W';
      charArray0[3] = '#';
      charArray0[4] = 'Q';
      charArray0[5] = '$';
      // Undeclared exception!
      try { 
        strBuilder0.insert(0, charArray0, 0, 32);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[2];
      charArray0[0] = 'I';
      String string0 = strBuilder0.midString((-834), (-834));
      int int0 = (-1);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) strBuilder_StrBuilderTokenizer0, (-1), 'I');
      charArray0[1] = '%';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, (-2006), (-2006));
      StrBuilder strBuilder2 = strBuilder1.append('%');
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("");
      int int1 = strBuilder2.lastIndexOf((StrMatcher) strMatcher_TrimMatcher0);
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('%');
      int int2 = strBuilder2.lastIndexOf((StrMatcher) strMatcher_CharMatcher0, 1371);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.remove();
      } catch(UnsupportedOperationException e) {
         //
         // remove() is unsupported
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      StrBuilder strBuilder1 = strBuilder0.append((-1.0F));
      strBuilder1.size = 2;
      StrBuilder strBuilder2 = strBuilder1.insert(1, (double) (-1.0F));
      int int0 = strBuilder_StrBuilderReader0.read();
      int int1 = strBuilder0.indexOf("LINUX", 45);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrBuilder strBuilder2 = strBuilder1.deleteAll('s');
      StringBuffer stringBuffer0 = strBuilder2.toStringBuffer();
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) strBuilder1;
      objectArray0[1] = (Object) strBuilder1;
      objectArray0[2] = (Object) stringBuffer0;
      objectArray0[3] = (Object) stringBuffer0;
      objectArray0[4] = (Object) stringBuffer0;
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators(objectArray0, "end < start");
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('p');
      int int0 = strBuilder1.lastIndexOf((StrMatcher) strMatcher_CharMatcher0);
      String string0 = strBuilder1.leftString(1541);
      StrBuilder strBuilder4 = strBuilder0.reverse();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      char[] charArray0 = new char[6];
      charArray0[0] = 'p';
      charArray0[1] = 'p';
      charArray0[2] = 'p';
      charArray0[3] = '0';
      charArray0[4] = 's';
      charArray0[5] = 's';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 1541, 1541);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("0%");
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      Reader reader0 = strBuilder0.asReader();
      Object[] objectArray0 = new Object[0];
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "0%");
      char[] charArray0 = new char[9];
      charArray0[0] = 'Z';
      charArray0[1] = ':';
      charArray0[2] = 'B';
      charArray0[3] = 'I';
      charArray0[4] = 'm';
      charArray0[5] = '7';
      charArray0[6] = 'T';
      charArray0[7] = '\'';
      charArray0[8] = ':';
      // Undeclared exception!
      try { 
        strBuilder0.insert(9, charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 9
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      int int0 = 31;
      StrBuilder strBuilder0 = new StrBuilder(31);
      int int1 = (-2025);
      char[] charArray0 = new char[7];
      char char0 = '3';
      charArray0[0] = '3';
      char char1 = '@';
      charArray0[1] = '@';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(0, 2, '3');
      char char2 = ':';
      charArray0[2] = ':';
      charArray0[3] = 'e';
      charArray0[4] = '_';
      char char3 = 'N';
      charArray0[5] = 'N';
      charArray0[6] = 'j';
      // Undeclared exception!
      try { 
        strBuilder0.insert((-2025), charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2025
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.lang.Object");
      StrBuilder strBuilder1 = strBuilder0.append('#');
      int int0 = 0;
      char[] charArray0 = new char[1];
      char char0 = strBuilder1.charAt(0);
      charArray0[0] = 'o';
      int int1 = 2337;
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      // Undeclared exception!
      try { 
        strBuilder0.getChars(Integer.MAX_VALUE, 0, charArray0, 2337);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("KDkdbqRw");
      String string0 = strBuilder0.toString();
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.setLength(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrBuilder strBuilder2 = strBuilder0.append("");
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setEmptyTokenAsNull(false);
      StrBuilder strBuilder3 = strBuilder1.replaceFirst(strMatcher0, "[O i7}<Wpw");
      // Undeclared exception!
      try { 
        strBuilder0.charAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("1.5");
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrBuilder strBuilder1 = strBuilder0.append(1900L);
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher((char[]) null);
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder1.charAt(102);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 102
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("km~&t/~");
      StrBuilder strBuilder1 = strBuilder0.deleteAll(' ');
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder2 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder3 = strBuilder1.append(stringBuffer0, 0, 0);
      int int0 = (-2309);
      char[] charArray0 = new char[0];
      strBuilder0.buffer = charArray0;
      char char0 = 'W';
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadLeft((-2309), 48, 'W');
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(')');
      StrBuilder strBuilder2 = strBuilder1.setNewLineText("");
      StrBuilder strBuilder3 = strBuilder2.replaceAll("\"I", "startIndex must be valid");
      StrBuilder strBuilder4 = strBuilder2.replaceFirst("", "");
      StrBuilder strBuilder5 = strBuilder4.append(')');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      StrBuilder strBuilder6 = strBuilder5.insert(2, (float) 2);
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      String string0 = strBuilder_StrBuilderTokenizer0.nextToken();
      StrBuilder strBuilder7 = strBuilder5.replace(strMatcher0, "*q", 2, 2, 2);
      StrBuilder strBuilder8 = strBuilder2.replace(2, 1478, "");
      StrBuilder strBuilder9 = strBuilder8.deleteCharAt(0);
      StrBuilder strBuilder10 = strBuilder9.append((Object) "org.apache.commons.lang.text.StrBuilder");
      int int0 = strBuilder0.size();
      int int1 = strBuilder0.length();
      int int2 = (-7);
      // Undeclared exception!
      try { 
        strBuilder1.insert((-7), 0.0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -7
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[4];
      charArray0[0] = '>';
      charArray0[1] = 'y';
      charArray0[2] = '+';
      charArray0[3] = '+';
      int int0 = 0;
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 0, 167);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("c?36d6izfZ7&Sd&");
      StrBuilder strBuilder1 = strBuilder0.replaceAll('L', 'L');
      String string0 = strBuilder1.midString(7, 1049);
      String string1 = strBuilder1.midString((-746), 0);
      StrBuilder strBuilder2 = strBuilder0.minimizeCapacity();
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrBuilder strBuilder3 = strBuilder2.replaceFirst(strMatcher0, "zfZ7&Sd&");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(617);
      StrBuilder strBuilder4 = strBuilder0.clear();
      char[] charArray0 = new char[5];
      charArray0[0] = 'L';
      charArray0[1] = 'L';
      charArray0[2] = 'L';
      charArray0[3] = 'L';
      charArray0[4] = 'L';
      // Undeclared exception!
      try { 
        strBuilder2.getChars(7, 7, charArray0, (-169));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 7
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4>m`Gjk~dK");
      strBuilder0.validateIndex(0);
      // Undeclared exception!
      try { 
        strBuilder0.getChars(2, 101, (char[]) null, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 101
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      int int0 = 3950;
      StrBuilder strBuilder0 = new StrBuilder(3950);
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      int int1 = 980;
      String string0 = strBuilder0.rightString(980);
      char[] charArray0 = new char[6];
      charArray0[0] = '8';
      charArray0[1] = '6';
      char char0 = '@';
      int int2 = (-650);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-650), (String) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -650
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(3371L);
      strBuilder_StrBuilderReader0.reset();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer1 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher1 = strBuilder_StrBuilderTokenizer1.getTrimmerMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher1);
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher("nO4M#s:X,$5%4$");
      int int0 = strBuilder0.indexOf(strMatcher0);
      StrBuilder strBuilder2 = new StrBuilder("java.lang.Object");
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder2);
      boolean boolean0 = strBuilder0.equals(strBuilder2);
      StrBuilder strBuilder4 = strBuilder0.clear();
      StrBuilder strBuilder5 = strBuilder0.append("nO4M#s:X,$5%4$");
      StrBuilder strBuilder6 = strBuilder0.reverse();
      char[] charArray0 = new char[7];
      charArray0[0] = 'W';
      charArray0[1] = 'h';
      charArray0[2] = 's';
      charArray0[3] = '{';
      charArray0[4] = '6';
      charArray0[5] = '<';
      charArray0[6] = 'n';
      int int1 = strMatcher0.isMatch(charArray0, (-1), (-1), (-1));
      strBuilder_StrBuilderReader0.reset();
      int int2 = strBuilder4.indexOf((String) null);
      String string0 = strBuilder4.rightString((-1));
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-576));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(object0, (-650), ']');
      char[] charArray0 = new char[9];
      charArray0[0] = ']';
      charArray0[1] = ']';
      charArray0[2] = 'j';
      charArray0[3] = ']';
      charArray0[4] = ']';
      charArray0[5] = ']';
      charArray0[6] = 'r';
      charArray0[7] = ']';
      charArray0[8] = ']';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      boolean boolean0 = strBuilder1.contains((StrMatcher) strMatcher_CharSetMatcher0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = 1803;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher((String) null);
      StrBuilder strBuilder1 = strBuilder0.append("");
      StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
      StrBuilder strBuilder3 = strBuilder0.replace(strMatcher0, "", 0, 0, 0);
      // Undeclared exception!
      try { 
        strBuilder0.append("", 1803, 1803);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(0, '{');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.rightString((-771));
      char char0 = ';';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((-771), (-771), ';');
      // Undeclared exception!
      try { 
        strBuilder1.setCharAt((-771), 'k');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -771
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceAll("startIndex must be valid", ",.l5s,)RJa[|LC9");
      char[] charArray0 = new char[1];
      charArray0[0] = 'X';
      strBuilder0.getChars(0, 0, charArray0, 0);
      StrMatcher strMatcher0 = StrMatcher.charMatcher('X');
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.endsWith("r");
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) "", 451, '1');
      StrBuilder strBuilder2 = strBuilder0.replaceFirst("AlBXQMI", "");
      StrBuilder strBuilder3 = strBuilder0.trim();
      StrBuilder strBuilder4 = strBuilder3.replaceFirst("", "{)]urWTW-.,ShxdTs");
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      StrBuilder strBuilder5 = strBuilder3.deleteAll(strMatcher0);
      int int0 = strBuilder2.hashCode();
      int int1 = strBuilder3.indexOf("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder4.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      StrBuilder strBuilder6 = strBuilder5.append(object0);
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "");
      StrBuilder strBuilder7 = strBuilder3.append(stringBuffer0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("&#5lt[ga+xZvKaLY7L,");
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) "&#5lt[ga+xZvKaLY7L,";
      objectArray0[1] = (Object) "&#5lt[ga+xZvKaLY7L,";
      objectArray0[2] = (Object) "&#5lt[ga+xZvKaLY7L,";
      objectArray0[3] = (Object) "&#5lt[ga+xZvKaLY7L,";
      objectArray0[4] = (Object) strBuilder0;
      objectArray0[5] = (Object) "&#5lt[ga+xZvKaLY7L,";
      objectArray0[6] = (Object) strBuilder0;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "Mac");
      int int0 = strBuilder1.indexOf("", 0);
      String string0 = strBuilder1.leftString(0);
      // Undeclared exception!
      try { 
        strBuilder0.delete((-5170), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -5170
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.replaceAll("L<lC86>&D\"t[Rz>$B", "BzNKBv");
      boolean boolean0 = strBuilder0.equals(strBuilder1);
      StrBuilder strBuilder2 = strBuilder0.appendPadding((-413), 'N');
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("B`JqcM-vQ");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[0];
      strBuilder_StrBuilderWriter0.write(charArray0);
      StrBuilder strBuilder1 = strBuilder0.trim();
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder2 = strBuilder1.append(stringBuffer0);
      StringBuffer stringBuffer1 = stringBuffer0.append(true);
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadLeft((Object) ", '", 910, 'L');
      strBuilder_StrBuilderWriter0.write(charArray0);
      boolean boolean0 = strBuilder2.equalsIgnoreCase(strBuilder1);
      StrBuilder strBuilder4 = strBuilder2.replaceFirst("B`JqcM-vQ", "M:D");
      strBuilder2.validateIndex(0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = strBuilder0.midString((-2048), 1);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(';');
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft(1, 1060, 'p');
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.leftString(32);
      StrBuilder strBuilder1 = strBuilder0.insert(0, (Object) "");
      char[] charArray0 = new char[7];
      strBuilder0.validateIndex(0);
      charArray0[0] = 'k';
      charArray0[1] = 'q';
      charArray0[2] = 'r';
      charArray0[3] = 'p';
      charArray0[4] = '2';
      charArray0[5] = 'c';
      charArray0[6] = 'p';
      StrBuilder strBuilder2 = strBuilder0.append(charArray0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators((Collection) linkedList0, "");
      boolean boolean0 = strBuilder0.startsWith("");
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.specification.vendor");
      StrBuilder strBuilder1 = new StrBuilder("");
      StrBuilder strBuilder2 = strBuilder1.append(0.0F);
      boolean boolean0 = strBuilder0.equals(strBuilder1);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1155));
      StrBuilder strBuilder1 = strBuilder0.appendNull();
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.deleteAll((String) null);
      // Undeclared exception!
      try { 
        strBuilder1.delete((-775), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -775
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      int int0 = 2;
      StrBuilder strBuilder0 = new StrBuilder(2);
      // Undeclared exception!
      try { 
        strBuilder0.substring(1888);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.insert(0, (float) 0);
      int int0 = (-1183);
      // Undeclared exception!
      try { 
        strBuilder0.getChars(0, 0, (char[]) null, 1244);
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      boolean boolean0 = strBuilder0.contains('d');
      char char0 = 'F';
      int int0 = strBuilder0.lastIndexOf('F', (-2683));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(566);
      boolean boolean1 = strBuilder_StrBuilderReader0.markSupported();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("xb`JpJmZTE}H", (-1160), 44);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      int int0 = (-664);
      StrBuilder strBuilder0 = new StrBuilder((-664));
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst((StrMatcher) strMatcher_TrimMatcher0);
      StrBuilder strBuilder2 = new StrBuilder((-664));
      StrBuilder strBuilder3 = strBuilder2.deleteAll((StrMatcher) strMatcher_TrimMatcher0);
      StrBuilder strBuilder4 = strBuilder1.append((Object) strBuilder2);
      char[] charArray0 = new char[3];
      charArray0[0] = ']';
      charArray0[1] = 'U';
      charArray0[2] = '4';
      strBuilder4.buffer = charArray0;
      StrBuilder strBuilder5 = strBuilder0.appendPadding((-664), 'M');
      boolean boolean0 = strBuilder4.isEmpty();
      // Undeclared exception!
      try { 
        strBuilder5.toCharArray(0, (-664));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("O3");
      String string0 = strBuilder0.leftString(1745);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.class.path");
      StrBuilder strBuilder1 = strBuilder0.append("java.class.path", 0, 0);
      char[] charArray0 = new char[6];
      charArray0[0] = 'J';
      charArray0[1] = ' ';
      StrBuilder strBuilder2 = strBuilder1.append((Object) strBuilder0);
      charArray0[2] = '3';
      StrBuilder strBuilder3 = strBuilder1.append(false);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("Mac OS X");
      StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher0, "Mac OS X");
      charArray0[3] = 'N';
      charArray0[4] = 'M';
      charArray0[5] = 'R';
      StrBuilder strBuilder5 = strBuilder0.insert(0, charArray0);
      boolean boolean0 = strBuilder1.equals((Object) "");
      String string0 = strBuilder1.rightString(0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      String string0 = "Invalid startIndex: ";
      StrBuilder strBuilder0 = new StrBuilder("Invalid startIndex: ");
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.insert(0, false);
      StrBuilder strBuilder2 = strBuilder0.setNullText("Invalid startIndex: ");
      int int1 = 3166;
      StrBuilder strBuilder3 = strBuilder2.appendNewLine();
      int int2 = 0;
      StrBuilder strBuilder4 = strBuilder1.append(strBuilder2, 0, 0);
      StrBuilder strBuilder5 = strBuilder3.deleteAll('{');
      // Undeclared exception!
      try { 
        strBuilder2.insert(3166, '\\');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3166
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = (-1953);
      int int1 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.append("", (-1953), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.append("0t", 0, 0);
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder2 = strBuilder1.append(stringBuffer0, 0, 0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      StrBuilder strBuilder3 = strBuilder0.append('3');
      Reader reader0 = strBuilder3.asReader();
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("end < start");
      // Undeclared exception!
      try { 
        strBuilder0.append("", (-1798), (-1798));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Pv\"|/83(P~w");
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("Pv\"|/83(P~w");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "Pv\"|/83(P~w");
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("pK]");
      StrBuilder strBuilder2 = strBuilder0.trim();
      StrBuilder strBuilder3 = strBuilder1.appendPadding(1187, 'x');
      int int0 = 0;
      // Undeclared exception!
      try { 
        strBuilder1.append(strBuilder3, (-27), 1187);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.append("n*4M^yb", 1682, 1682);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.class.path");
      String string0 = strBuilder0.substring(2);
      StrBuilder strBuilder1 = strBuilder0.insert(0, false);
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      StrBuilder strBuilder2 = strBuilder0.replaceAll(strMatcher0, "0");
      StrBuilder strBuilder3 = strBuilder0.replaceAll("java.class.path", (String) null);
      StrBuilder strBuilder4 = strBuilder3.reverse();
      int int0 = strBuilder1.indexOf((String) null);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("(m", "aY4|#? aOO=tSii9");
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "?qF=lEe");
      StrBuilder strBuilder3 = strBuilder0.replaceAll("?qF=lEe", "?qF=lEe");
      StrBuilder strBuilder4 = strBuilder0.deleteAll((StrMatcher) null);
      StrBuilder strBuilder5 = strBuilder1.replaceFirst((StrMatcher) null, "");
      StrBuilder strBuilder6 = strBuilder0.append(strBuilder5, 0, 0);
      Writer writer0 = strBuilder6.asWriter();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      StrBuilder strBuilder7 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
      StrBuilder strBuilder8 = strBuilder0.deleteFirst("file.encoding");
      boolean boolean0 = strBuilder4.equals(strBuilder8);
      StrBuilder strBuilder9 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder5.append(strBuilder9, 0, 4);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      char[] charArray0 = strBuilder0.toCharArray(0, 0);
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      Reader reader0 = strBuilder0.asReader();
      char char0 = 'V';
      int int1 = strBuilder1.lastIndexOf('V');
      String string0 = strBuilder0.rightString(0);
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, (-1), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append('c');
      StrBuilder strBuilder2 = strBuilder1.appendNewLine();
      String string0 = "startIndex must be valid";
      StrBuilder strBuilder3 = strBuilder2.replaceFirst("startIndex must be valid", "startIndex must be valid");
      // Undeclared exception!
      try { 
        strBuilder0.insert(775, (long) 775);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 775
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      String string0 = strBuilder0.substring(0, 0);
      // Undeclared exception!
      try { 
        strBuilder0.insert(910, (long) 910);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 910
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = strBuilder0.toCharArray(0, 0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      int int0 = 3433;
      StrBuilder strBuilder0 = new StrBuilder(3433);
      Writer writer0 = strBuilder0.asWriter();
      char[] charArray0 = new char[0];
      int int1 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 3433, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("n4E?f@tL-y6V>`G");
      StrBuilder strBuilder1 = strBuilder0.deleteAll('(');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrBuilder strBuilder2 = strBuilder1.replaceFirst(strMatcher0, "java.runtime.name");
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      int int0 = 114;
      StrBuilder strBuilder0 = new StrBuilder(114);
      int int1 = (-132);
      char[] charArray0 = new char[6];
      charArray0[0] = 'E';
      charArray0[1] = 'b';
      charArray0[2] = 'z';
      charArray0[3] = 'A';
      charArray0[4] = '!';
      charArray0[5] = 'Q';
      int int2 = 485;
      // Undeclared exception!
      try { 
        strBuilder0.insert((-132), charArray0, 485, (-132));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -132
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(4);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[3];
      charArray0[0] = '=';
      charArray0[1] = '&';
      charArray0[2] = ' ';
      // Undeclared exception!
      try { 
        strBuilder0.insert(102, charArray0, 2890, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 102
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      String string0 = "ugdzjE3q";
      StrBuilder strBuilder0 = new StrBuilder("ugdzjE3q");
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder0.insert(462, (Object) "ugdzjE3q");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 462
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = 0;
      int int1 = 2003;
      int int2 = strBuilder0.validateRange(0, 2003);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder strBuilder1 = strBuilder0.append(false);
      StrBuilder strBuilder2 = strBuilder1.delete(0, 2003);
      StrBuilder strBuilder3 = strBuilder0.append('~');
      StrBuilder strBuilder4 = strBuilder2.setLength(102);
      int int3 = 2600;
      int int4 = (-1217);
      StrBuilder strBuilder5 = strBuilder1.append((char[]) null, 2600, (-1327));
      // Undeclared exception!
      try { 
        strBuilder5.append(stringBuffer0, (-1217), 1094);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      String string0 = "&B";
      StrBuilder strBuilder0 = new StrBuilder("&B");
      StrBuilder strBuilder1 = strBuilder0.append((StrBuilder) null);
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("&B");
      boolean boolean0 = strBuilder0.contains((StrMatcher) strMatcher_StringMatcher0);
      StrBuilder strBuilder2 = strBuilder1.deleteFirst('Z');
      char char0 = 'c';
      int int0 = strBuilder0.indexOf('c');
      char[] charArray0 = strBuilder0.toCharArray();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      int int1 = strBuilder_StrBuilderReader0.read();
      StrBuilder strBuilder3 = new StrBuilder((-1));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder3.new StrBuilderTokenizer();
      int int2 = strBuilder3.lastIndexOf((StrMatcher) strMatcher_StringMatcher0);
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setEmptyTokenAsNull(true);
      StrTokenizer strTokenizer1 = StrTokenizer.getCSVInstance();
      String string1 = strBuilder_StrBuilderTokenizer0.getContent();
      // Undeclared exception!
      try { 
        strBuilder0.insert(108, (-3938.75F));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 108
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(876);
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) strBuilder0;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      objectArray0[1] = object0;
      objectArray0[2] = (Object) strBuilder0;
      objectArray0[3] = (Object) strBuilder0;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, (String) null);
      StrMatcher strMatcher0 = StrMatcher.charMatcher('T');
      boolean boolean0 = strBuilder1.contains(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.append(1166L);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.append(0.0F);
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      char[] charArray0 = new char[7];
      charArray0[0] = 'o';
      charArray0[1] = 'o';
      charArray0[2] = 'o';
      charArray0[3] = 'o';
      charArray0[4] = 'o';
      charArray0[5] = 'o';
      charArray0[6] = '$';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder2 = strBuilder1.deleteAll(strMatcher0);
      StrBuilder strBuilder3 = strBuilder0.appendPadding(2, 'o');
      int int0 = strBuilder0.indexOf('m');
      StrBuilder strBuilder4 = strBuilder1.setCharAt(2, 'K');
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("<nDs3w)Kr(");
      StrBuilder strBuilder1 = strBuilder0.append((-1050.753F));
      StrBuilder strBuilder2 = strBuilder0.deleteFirst('~');
      StrBuilder strBuilder3 = strBuilder0.replaceFirst((StrMatcher) null, "");
      StrBuilder strBuilder4 = strBuilder3.replaceFirst("", "]@^|6N+sn");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder strBuilder5 = strBuilder4.replaceAll("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer", "");
      StrBuilder strBuilder6 = strBuilder0.clear();
      // Undeclared exception!
      try { 
        strBuilder3.insert((-1225), '6');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1225
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = '~';
      int int0 = strBuilder0.indexOf('~', 0);
      StrBuilder strBuilder1 = strBuilder0.append((StrBuilder) null);
      // Undeclared exception!
      try { 
        strBuilder0.replace((-1), 0, "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      char[] charArray0 = new char[2];
      charArray0[0] = 'l';
      charArray0[1] = '6';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "!B<RYAjy9;");
      StrBuilder strBuilder2 = strBuilder1.append((-106.105));
      char[] charArray1 = strBuilder0.toCharArray();
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      char[] charArray0 = new char[2];
      charArray0[0] = 'l';
      charArray0[1] = '6';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "!B<RYAjy9;");
      char[] charArray1 = strBuilder0.toCharArray();
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-4311));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip((-4311));
      StrBuilder strBuilder1 = strBuilder0.append(true);
      strBuilder_StrBuilderReader0.close();
      StrBuilder strBuilder2 = strBuilder1.setNullText("");
      StrBuilder strBuilder3 = strBuilder2.appendNewLine();
      StrBuilder strBuilder4 = strBuilder0.append((-4311));
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) stringBuffer0);
      char[] charArray0 = new char[3];
      charArray0[0] = 'e';
      charArray0[1] = '/';
      charArray0[2] = 'i';
      // Undeclared exception!
      try { 
        charBuffer0.put(charArray0);
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = null;
      StrBuilder strBuilder1 = strBuilder0.insert(0, (String) null);
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder2 = strBuilder0.deleteFirst((StrMatcher) strMatcher_TrimMatcher0);
      StrBuilder strBuilder3 = strBuilder2.reverse();
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) null;
      objectArray0[1] = (Object) null;
      objectArray0[2] = (Object) strBuilder1;
      StrBuilder strBuilder4 = strBuilder3.appendWithSeparators(objectArray0, (String) null);
      int int0 = 0;
      StrBuilder strBuilder5 = strBuilder3.insert(0, (String) null);
      int int1 = (-1);
      // Undeclared exception!
      try { 
        strBuilder4.append(strBuilder3, 0, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      String string0 = null;
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.append(0.0F);
      Writer writer0 = strBuilder1.asWriter();
      StrMatcher strMatcher0 = StrMatcher.stringMatcher((String) null);
      int int0 = 57;
      // Undeclared exception!
      try { 
        strBuilder0.replace(strMatcher0, (String) null, 57, 1391, 236);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      String string0 = "!~@1DWp";
      StrBuilder strBuilder0 = new StrBuilder("!~@1DWp");
      StrBuilder strBuilder1 = strBuilder0.append((-2422.441F));
      int int0 = (-1289);
      // Undeclared exception!
      try { 
        strBuilder1.insert((-1289), (double) (-2422.441F));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1289
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      int int0 = 540;
      StrBuilder strBuilder0 = new StrBuilder(540);
      StrBuilder strBuilder1 = new StrBuilder(540);
      int int1 = 0;
      strBuilder0.validateIndex(0);
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, 540, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("(m", "aY4|#? aOO=tSii9");
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "(m");
      StrBuilder strBuilder3 = new StrBuilder("(m");
      StrBuilder strBuilder4 = strBuilder0.deleteAll((StrMatcher) null);
      StrBuilder strBuilder5 = strBuilder1.replaceFirst((StrMatcher) null, "");
      StrBuilder strBuilder6 = strBuilder0.append(strBuilder5, 0, 0);
      Writer writer0 = strBuilder6.asWriter();
      StrBuilder strBuilder7 = strBuilder0.deleteFirst("file.encoding");
      boolean boolean0 = strTokenizer0.isIgnoreEmptyTokens();
      StrBuilder strBuilder8 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder5.append(strBuilder8, 0, 4);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-3111));
      boolean boolean0 = strBuilder0.startsWith("yx2RQ");
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("^c6F^$Q(gqSY~paQv");
      StrBuilder strBuilder1 = strBuilder0.append(false);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(853);
      StrBuilder strBuilder1 = strBuilder0.insert(0, '/');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[9];
      charArray0[0] = '/';
      charArray0[1] = '/';
      charArray0[2] = '/';
      charArray0[3] = '/';
      charArray0[4] = '/';
      charArray0[5] = '/';
      charArray0[6] = '/';
      charArray0[7] = '/';
      charArray0[8] = '/';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 853, 0);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, (-509), 1553);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      char[] charArray0 = new char[6];
      charArray0[0] = '|';
      charArray0[1] = 'M';
      charArray0[2] = '0';
      charArray0[3] = 'B';
      charArray0[4] = 'v';
      charArray0[5] = '>';
      strBuilder0.buffer = charArray0;
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[4];
      charArray0[0] = '*';
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 0);
      charArray0[1] = '/';
      charArray0[2] = '8';
      charArray0[3] = 'g';
      strBuilder0.buffer = charArray0;
      String string0 = strBuilder0.toString();
      int int1 = strBuilder0.validateRange(0, 9);
      int int2 = strBuilder0.validateRange(0, 0);
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('5', 'v');
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 116);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrBuilder strBuilder1 = strBuilder0.replaceAll("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", "org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      Object object0 = new Object();
      StrBuilder strBuilder2 = strBuilder1.append(object0);
      StrBuilder strBuilder3 = strBuilder1.replaceFirst('@', 'I');
      StrBuilder strBuilder4 = strBuilder2.replaceAll("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", "");
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      String string0 = "startIndex must be valid";
      StrBuilder strBuilder0 = new StrBuilder("startIndex must be valid");
      int int0 = 108;
      String string1 = "frCcA7D$)IjC{(~";
      // Undeclared exception!
      try { 
        strBuilder0.replace(108, 1464, "frCcA7D$)IjC{(~");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setNullText("i!R");
      StrBuilder strBuilder2 = strBuilder0.replace(0, 3118, "");
      StrBuilder strBuilder3 = strBuilder2.append((char[]) null, 3118, 3118);
      StrBuilder strBuilder4 = strBuilder1.insert(2, (-136.9F));
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "i!R");
      StrBuilder strBuilder5 = strBuilder4.append(stringBuffer0);
      StrBuilder strBuilder6 = strBuilder1.replaceFirst("", "");
      String string0 = strBuilder3.getNewLineText();
      StrBuilder strBuilder7 = strBuilder1.append((-3513));
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      int int0 = 101;
      StrBuilder strBuilder0 = new StrBuilder(101);
      String string0 = strBuilder0.getNewLineText();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrBuilder strBuilder1 = strBuilder0.clear();
      char[] charArray0 = new char[1];
      char char0 = 'T';
      charArray0[0] = 'T';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 101, 48);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.hashCode();
      StrBuilder strBuilder1 = strBuilder0.replace(0, 102, (String) null);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      String string0 = strBuilder0.getNullText();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('y', '\'');
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrBuilder strBuilder2 = strBuilder0.append((String) null);
      int int0 = strBuilder0.indexOf(strMatcher0, 271);
      // Undeclared exception!
      try { 
        strBuilder1.insert((-1), (-723.326F));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      String string0 = null;
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(101);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 101
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-891));
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity((-1261));
      char[] charArray0 = new char[3];
      charArray0[0] = 'e';
      charArray0[1] = 'Y';
      StrBuilder strBuilder2 = strBuilder0.ensureCapacity((-34));
      charArray0[2] = 'r';
      char[] charArray1 = strBuilder0.getChars(charArray0);
      // Undeclared exception!
      try { 
        strBuilder1.insert((-2773), true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2773
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      String string0 = ", Length: 0";
      StrBuilder strBuilder0 = new StrBuilder(", Length: 0");
      StrMatcher strMatcher0 = StrMatcher.charMatcher('#');
      StrMatcher strMatcher1 = StrMatcher.stringMatcher(", Length: 0");
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 0);
      String string1 = strBuilder0.midString(0, (-1));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      char[] charArray0 = new char[4];
      charArray0[0] = '#';
      charArray0[1] = '#';
      charArray0[2] = '#';
      charArray0[3] = '#';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, (-1), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-95);
      char[] charArray0 = new char[7];
      charArray0[0] = 'a';
      StrBuilder strBuilder1 = strBuilder0.append(344L);
      String string0 = strBuilder1.toString();
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      int int1 = strBuilder1.lastIndexOf(strMatcher0);
      charArray0[1] = ';';
      charArray0[2] = 'S';
      charArray0[3] = 'D';
      charArray0[4] = 'H';
      charArray0[5] = '2';
      charArray0[6] = 'f';
      // Undeclared exception!
      try { 
        strBuilder0.insert((-95), charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -95
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      strBuilder_StrBuilderReader0.close();
      StrBuilder strBuilder1 = strBuilder0.append('S');
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      String string0 = strBuilder0.midString(1297, 1297);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(1297, 1297, '@');
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight((Object) "", 1297, '@');
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("&Dc#*E9zlW");
      StrMatcher strMatcher2 = StrMatcher.charMatcher('@');
      boolean boolean0 = strBuilder2.contains(strMatcher0);
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance((String) null);
      StrBuilder strBuilder3 = strBuilder1.appendWithSeparators((Iterator) strTokenizer0, (String) null);
      StrBuilder strBuilder4 = strBuilder1.append((-412.0F));
      int int0 = (-541);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-541), 32);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -541
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("qgS6xB_t");
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('u');
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_CharMatcher0, (-2822));
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("X3H~'q&).}");
      StrBuilder strBuilder2 = strBuilder0.deleteAll((StrMatcher) strMatcher_CharMatcher0);
      StrBuilder strBuilder3 = strBuilder0.replaceAll("YdO2F#~CjL", (String) null);
      StrBuilder strBuilder4 = strBuilder1.append(strBuilder0);
      StrBuilder strBuilder5 = strBuilder1.insert(5, (-80));
      StrBuilder strBuilder6 = strBuilder0.setNullText("qgS6xB_t");
      StrBuilder strBuilder7 = strBuilder5.append(0.0F);
      StrBuilder strBuilder8 = strBuilder1.appendFixedWidthPadLeft((-1), 1, 'g');
      StrBuilder strBuilder9 = strBuilder7.replaceAll((StrMatcher) strMatcher_CharMatcher0, (String) null);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("startIndex must be valid");
      StrBuilder strBuilder1 = strBuilder0.append(0L);
      StrBuilder strBuilder2 = strBuilder1.deleteCharAt(5);
      String string0 = strBuilder2.leftString((-845));
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceAll('I', 'I');
      char[] charArray0 = new char[5];
      charArray0[0] = 'I';
      charArray0[1] = 'f';
      charArray0[2] = 'I';
      charArray0[3] = 'I';
      charArray0[4] = 'I';
      char[] charArray1 = strBuilder0.getChars(charArray0);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(876);
      StrBuilder strBuilder1 = strBuilder0.append(1166L);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1);
      StrBuilder strBuilder1 = strBuilder0.replaceAll("cKVJ-r2BbxQtq'bYMLJ", "%$d'6L]F^s");
      // Undeclared exception!
      try { 
        strBuilder1.delete(1, (-1791));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      int int0 = 2760;
      char[] charArray0 = new char[3];
      charArray0[0] = '=';
      charArray0[1] = '>';
      charArray0[2] = '';
      strBuilder_StrBuilderWriter0.write(charArray0, 1, 1);
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(2760, '^');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2760
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Z0^Q//");
      int int0 = strBuilder0.size();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "Z0^Q//");
      Reader reader0 = strBuilder0.asReader();
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 1, 74);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.replaceAll("u5NDq", "");
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("\"Eru`n8!u");
      StrBuilder strBuilder1 = strBuilder0.insert(0, false);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[1];
      charArray0[0] = 'P';
      strBuilder_StrBuilderWriter0.write(charArray0, 0, 0);
      strBuilder_StrBuilderWriter0.close();
      char[] charArray1 = new char[2];
      charArray1[0] = 'M';
      charArray1[1] = 'L';
      StrBuilder strBuilder2 = strBuilder1.insert(0, charArray1);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("(dMHM>BPsUB");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[5];
      charArray0[0] = 'D';
      charArray0[1] = 'I';
      charArray0[2] = '^';
      charArray0[3] = '\'';
      charArray0[4] = 'P';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 2662, 2662);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 2662
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(83, '%');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 83
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(57);
      StrBuilder strBuilder1 = strBuilder0.clear();
      int int0 = (-3017);
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt((-3017));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3017
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt((-1347));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1347
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(32);
      StrBuilder strBuilder1 = strBuilder0.append((-1154.38F));
      // Undeclared exception!
      try { 
        strBuilder0.insert(2027, 'C');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2027
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-1861);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1861), (float) (-1861));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1861
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("(3H8hyx1h8PP]");
      char[] charArray0 = new char[0];
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      int int0 = strBuilder0.length();
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("end < start");
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder2 = strBuilder0.append(0.0);
      StrBuilder strBuilder3 = strBuilder2.appendNull();
      StrBuilder strBuilder4 = strBuilder2.append("end < start");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      Object object1 = strBuilder_StrBuilderTokenizer0.cloneReset();
      int int0 = 3598;
      char char0 = 'Q';
      StrBuilder strBuilder5 = strBuilder2.appendFixedWidthPadRight(object1, 3598, 'Q');
      boolean boolean0 = strBuilder0.endsWith("");
      String string0 = strBuilder2.getNullText();
      char[] charArray0 = new char[8];
      charArray0[0] = 'Q';
      charArray0[1] = 'Q';
      charArray0[2] = 'Q';
      // Undeclared exception!
      try { 
        strBuilder1.validateRange(3817, 3598);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("))d0aE[:SV;;sFdr");
      Integer integer0 = new Integer((-4303));
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) integer0, 32, 'h');
      StrBuilder strBuilder2 = strBuilder1.deleteAll("))d0aE[:SV;;sFdr");
      String string0 = strBuilder2.midString((-4303), (-662));
      String string1 = strBuilder1.substring(32);
      StrBuilder strBuilder3 = strBuilder0.appendNull();
      StrBuilder strBuilder4 = strBuilder1.insert(0, 0.0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder3.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("%rT=f9L0 !tCF$o_R%");
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.getNullText();
      // Undeclared exception!
      try { 
        strBuilder0.charAt(226);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 226
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      int int0 = (-4633);
      StrBuilder strBuilder0 = new StrBuilder((-4633));
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) strBuilder0;
      objectArray0[3] = (Object) strBuilder0;
      StrBuilder strBuilder1 = strBuilder0.setLength(32);
      objectArray0[4] = (Object) strBuilder0;
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators(objectArray0, "PgbrZNh6Jh\"Zf");
      // Undeclared exception!
      try { 
        strBuilder0.insert((-4633), (-4633));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -4633
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("]H%%5153g!s5QUl");
      StrBuilder strBuilder1 = strBuilder0.setLength(2005);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("]H%%5153g!s5QUl", 4, 4);
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      int int0 = 1060;
      StrBuilder strBuilder0 = new StrBuilder(1060);
      // Undeclared exception!
      try { 
        strBuilder0.insert(1060, (-1.0F));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1060
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = 'W';
      StrBuilder strBuilder1 = strBuilder0.deleteAll('W');
      int int0 = 0;
      // Undeclared exception!
      try { 
        strBuilder1.substring(0, (-1506));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(":3");
      StrBuilder strBuilder1 = strBuilder0.append((Object) ":3");
      StrBuilder strBuilder2 = new StrBuilder(0);
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder2);
      String string0 = strBuilder3.rightString(0);
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      int int0 = 0;
      String string1 = "org.apache.commons.lang.text.StrBuilder";
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadRight((Object) "org.apache.commons.lang.text.StrBuilder", 0, 'S');
      int int1 = strBuilder0.indexOf(strMatcher0, 0);
      Reader reader0 = strBuilder0.asReader();
      // Undeclared exception!
      try { 
        strBuilder1.setLength((-2756));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2756
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.substring(0, (-1230));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrMatcher strMatcher0 = StrMatcher.charMatcher('t');
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "StrTokenizer");
      StrBuilder strBuilder2 = strBuilder1.replaceFirst("StrTokenizer", "StrTokenizer");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      StrBuilder strBuilder3 = strBuilder1.reverse();
      int int0 = strBuilder3.lastIndexOf(strMatcher0);
      StrBuilder strBuilder4 = strBuilder2.minimizeCapacity();
      int int1 = strBuilder3.validateRange(0, 0);
      boolean boolean1 = strBuilder3.startsWith((String) null);
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(34);
      StrBuilder strBuilder1 = new StrBuilder();
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      StrBuilder strBuilder2 = strBuilder0.deleteFirst("Invalid offset: ");
      String string0 = strBuilder2.toString();
      int int0 = (-661);
      StrBuilder strBuilder3 = strBuilder2.setNullText("Invalid offset: ");
      StrBuilder strBuilder4 = strBuilder1.deleteAll("java.specification.vendor");
      // Undeclared exception!
      try { 
        strBuilder2.validateIndex((-661));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -661
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1630);
      int int0 = strBuilder0.length();
      StrBuilder strBuilder1 = strBuilder0.append((double) 4);
      char[] charArray0 = new char[4];
      charArray0[0] = 'c';
      charArray0[1] = 'c';
      charArray0[2] = 'c';
      charArray0[3] = 'c';
      strBuilder1.buffer = charArray0;
      StrBuilder strBuilder2 = strBuilder0.ensureCapacity(4);
      int int1 = strBuilder0.lastIndexOf('c');
      StrBuilder strBuilder3 = strBuilder0.insert(0, (-2433));
      boolean boolean0 = strBuilder3.equalsIgnoreCase(strBuilder0);
      StrBuilder strBuilder4 = strBuilder2.append((float) (-2433));
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.insert(0, (Object) "");
      StrBuilder strBuilder2 = strBuilder1.deleteAll('V');
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      String string0 = strBuilder0.leftString(1);
      StrBuilder strBuilder3 = strBuilder0.insert(1, (char[]) null);
      int int0 = strBuilder0.lastIndexOf('{');
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.append(0.9174759);
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder");
      StrBuilder strBuilder1 = strBuilder0.append(1.0F);
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("'qg");
      StrBuilder strBuilder1 = strBuilder0.appendPadding(273, 'a');
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.deleteAll("X");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrBuilder strBuilder2 = strBuilder1.replaceFirst(strMatcher0, "X");
      Reader reader0 = strBuilder0.asReader();
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      String string0 = strBuilder0.rightString((-2638));
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(0, 0, '5');
      // Undeclared exception!
      try { 
        strBuilder1.delete((-2785), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2785
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-3461));
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      StrBuilder strBuilder3 = strBuilder0.append(true);
      Object object0 = new Object();
      boolean boolean0 = strBuilder0.equals(object0);
      int int0 = strBuilder0.lastIndexOf((String) null);
      char[] charArray0 = new char[4];
      charArray0[0] = '{';
      charArray0[1] = 'c';
      charArray0[2] = 'G';
      charArray0[3] = 'm';
      // Undeclared exception!
      try { 
        strBuilder3.append(charArray0, (-3461), 101);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 101
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      String string0 = strBuilder0.substring(0, 97);
      int int0 = strBuilder0.indexOf((StrMatcher) strMatcher_NoMatcher0);
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance("Invalid length: ");
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "org.apache.commons.lang.text.StrTokenizer");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize((char[]) null, 0, (-1));
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      int int0 = (-1299);
      StrBuilder strBuilder0 = new StrBuilder((-1299));
      // Undeclared exception!
      try { 
        strBuilder0.setLength((-1299));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1299
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      int int0 = 639;
      StrBuilder strBuilder0 = new StrBuilder(639);
      char char0 = 'R';
      StrBuilder strBuilder1 = strBuilder0.deleteAll('R');
      boolean boolean0 = true;
      StrBuilder strBuilder2 = strBuilder1.append(true);
      int int1 = strBuilder0.indexOf('i', 639);
      char[] charArray0 = new char[0];
      strBuilder0.buffer = charArray0;
      String string0 = "";
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1), "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      char[] charArray0 = new char[9];
      charArray0[0] = 'u';
      charArray0[1] = 'R';
      charArray0[2] = 'd';
      charArray0[3] = '\"';
      charArray0[4] = '\\';
      charArray0[5] = '_';
      charArray0[6] = 'N';
      charArray0[7] = 'o';
      StrMatcher strMatcher1 = StrMatcher.charMatcher('\\');
      charArray0[8] = 'Y';
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder1 = new StrBuilder(97);
      StrBuilder strBuilder2 = strBuilder1.append((long) 97);
      StrBuilder strBuilder3 = strBuilder2.append(true);
      int int0 = strMatcher0.isMatch(charArray0, 97, 97, 97);
      StrBuilder strBuilder4 = strBuilder0.append(strBuilder1);
      StrBuilder strBuilder5 = strBuilder4.deleteFirst(strMatcher2);
      // Undeclared exception!
      try { 
        strBuilder4.insert(97, true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 97
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("1.2");
      StrBuilder strBuilder1 = strBuilder0.append(0);
      int int0 = 2;
      char char0 = 'N';
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft(2, 2, 'N');
      StrBuilder strBuilder3 = strBuilder1.appendNewLine();
      char char1 = 'G';
      StrBuilder strBuilder4 = strBuilder2.appendFixedWidthPadLeft((-297), (-297), 'G');
      boolean boolean0 = strBuilder3.contains("3? ");
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "1.2");
      StringBuffer stringBuffer1 = stringBuffer0.append((double) 2);
      // Undeclared exception!
      try { 
        strBuilder2.append(stringBuffer0, 632, (-309));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4{EQFw|+uF.&E:%");
      StrBuilder strBuilder1 = strBuilder0.setCharAt(0, '5');
      StrBuilder strBuilder2 = strBuilder0.append((StringBuffer) null);
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("_?");
      StrBuilder strBuilder3 = strBuilder2.replaceFirst((StrMatcher) strMatcher_StringMatcher0, "4{EQFw|+uF.&E:%");
      StrBuilder strBuilder4 = strBuilder1.setNullText("CYYps,g");
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      StrBuilder strBuilder5 = strBuilder2.appendWithSeparators((Collection) linkedList0, "CYYps,g");
      StringBuffer stringBuffer0 = strBuilder5.toStringBuffer();
      StrBuilder strBuilder6 = strBuilder1.insert(0, 0);
      StrTokenizer strTokenizer0 = strBuilder2.asTokenizer();
      StrBuilder strBuilder7 = strBuilder2.clear();
      int int0 = strBuilder2.lastIndexOf('g');
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(258);
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrBuilder strBuilder2 = strBuilder0.append("");
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadRight(2688, 2688, '!');
      StrBuilder strBuilder4 = strBuilder1.deleteAll("");
      StringBuffer stringBuffer0 = new StringBuffer();
      StringBuffer stringBuffer1 = new StringBuffer(stringBuffer0);
      StrBuilder strBuilder5 = strBuilder0.append(stringBuffer1);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrBuilder strBuilder6 = strBuilder0.replaceFirst("", "vG$ZKuvdG8liM(`;`");
      String string0 = strBuilder5.getNullText();
      String string1 = strBuilder0.midString((-1847), 39);
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      strBuilder0.size = (-952);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder0.insert(0, (double) 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("t-3nbc7g");
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) null, "t-3nbc7g");
      boolean boolean0 = strBuilder0.endsWith("t-3nbc7g");
      char[] charArray0 = new char[5];
      charArray0[0] = '%';
      charArray0[1] = '!';
      charArray0[2] = '<';
      charArray0[3] = '&';
      charArray0[4] = 'i';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      int int0 = strBuilder1.indexOf((StrMatcher) strMatcher_CharSetMatcher0);
      StrBuilder strBuilder2 = strBuilder1.replaceFirst("PC<e2Yl*Qa50v);>4]", "PC<e2Yl*Qa50v);>4]");
      char char0 = strBuilder0.charAt(0);
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder strBuilder3 = new StrBuilder((-1540));
      boolean boolean1 = strBuilder1.equals((Object) strBuilder3);
      StringBuffer stringBuffer0 = new StringBuffer("startIndex must be valid");
      StrBuilder strBuilder4 = strBuilder0.append(stringBuffer0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      // Undeclared exception!
      try { 
        strBuilder1.insert((-2952), object0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2952
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[1];
      charArray0[0] = 'X';
      strBuilder0.getChars(0, 0, charArray0, 0);
      StrMatcher strMatcher0 = StrMatcher.charMatcher('X');
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      int int0 = 2961;
      StrBuilder strBuilder0 = new StrBuilder(2961);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(2961);
      String string0 = "";
      strBuilder_StrBuilderWriter0.write("");
      String string1 = "end < start";
      strBuilder_StrBuilderWriter0.write("end < start");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(2961);
      int int1 = strBuilder_StrBuilderReader0.read();
      int int2 = strBuilder0.indexOf('1');
      char char0 = '=';
      // Undeclared exception!
      try { 
        strBuilder0.delete((-1), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }
}
