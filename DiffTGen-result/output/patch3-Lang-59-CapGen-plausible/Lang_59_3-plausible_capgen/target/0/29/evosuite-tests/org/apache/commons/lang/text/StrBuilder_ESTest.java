/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 28 19:00:57 GMT 2020
 */

package org.apache.commons.lang.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.Writer;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.stream.IntStream;
import org.apache.commons.lang.text.StrBuilder;
import org.apache.commons.lang.text.StrMatcher;
import org.apache.commons.lang.text.StrTokenizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StrBuilder_ESTest extends StrBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(34);
      StrBuilder strBuilder1 = strBuilder0.setLength(34);
      char[] charArray0 = new char[2];
      charArray0[0] = ')';
      charArray0[1] = '+';
      StrBuilder strBuilder2 = strBuilder0.append(charArray0);
      String string0 = strBuilder2.rightString(34);
      StrBuilder strBuilder3 = strBuilder0.append((float) 34);
      StrBuilder strBuilder4 = strBuilder3.appendFixedWidthPadRight(3268, 3268, 'E');
      StrBuilder strBuilder5 = strBuilder3.trim();
      boolean boolean0 = strBuilder1.equals(strBuilder0);
      StrBuilder strBuilder6 = strBuilder4.setNewLineText("\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000)+");
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000)+";
      objectArray0[1] = (Object) strBuilder6;
      objectArray0[4] = (Object) strBuilder0;
      StrBuilder strBuilder7 = strBuilder0.appendWithSeparators(objectArray0, "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000)+");
      // Undeclared exception!
      try { 
        strBuilder6.appendFixedWidthPadRight((Object) strBuilder3, 34, 'E');
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder("Invalid startIndex: ");
      StrBuilder strBuilder2 = strBuilder1.replaceAll((StrMatcher) null, (String) null);
      StrBuilder strBuilder3 = strBuilder1.append(strBuilder0);
      char char0 = strBuilder3.charAt(5);
      StrBuilder strBuilder4 = strBuilder0.append(strBuilder1);
      StrBuilder strBuilder5 = new StrBuilder("");
      StrBuilder strBuilder6 = strBuilder0.append(strBuilder5);
      StrBuilder strBuilder7 = strBuilder5.replaceAll("", "I=kB:fSDj~(+up?");
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('J');
      StrMatcher strMatcher2 = StrMatcher.stringMatcher("java.vendor.url");
      StrBuilder strBuilder8 = strBuilder0.deleteFirst('J');
      int int0 = strBuilder0.lastIndexOf(strMatcher0, (-850));
      StrBuilder strBuilder9 = strBuilder7.setNewLineText("I=kB:fSDj~(+up?");
      StrBuilder strBuilder10 = strBuilder8.appendWithSeparators((Iterator) null, "8}I!/(DBIG`n$<");
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 1306;
      boolean boolean0 = strBuilder0.endsWith("n%*>H1XD~,U@xHD4");
      int int1 = strBuilder0.lastIndexOf('q');
      StrBuilder strBuilder1 = strBuilder0.append((long) (-1));
      int int2 = strBuilder1.hashCode();
      StrBuilder strBuilder2 = strBuilder1.appendNull();
      Object object0 = new Object();
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadRight(object0, 0, 'q');
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex(1883);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1883
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(0, 0, 'g');
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("java.runtime.version");
      StrBuilder strBuilder2 = strBuilder0.replace(0, 215, "java.runtime.version");
      StrBuilder strBuilder3 = strBuilder2.replaceFirst(strMatcher0, "");
      int int0 = strBuilder0.indexOf(strMatcher0, 2446);
      boolean boolean0 = strBuilder1.endsWith("");
      int int1 = strBuilder2.lastIndexOf(strMatcher1);
      // Undeclared exception!
      try { 
        strBuilder3.delete(19, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[7];
      charArray0[0] = '{';
      charArray0[1] = '{';
      charArray0[2] = '-';
      charArray0[3] = '~';
      StrBuilder strBuilder1 = strBuilder0.insert(0, false);
      charArray0[4] = '\\';
      charArray0[5] = '\"';
      charArray0[6] = ':';
      StrBuilder strBuilder2 = strBuilder0.insert(0, charArray0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(34);
      StrBuilder strBuilder1 = strBuilder0.setLength(34);
      char[] charArray0 = new char[2];
      charArray0[0] = ')';
      charArray0[1] = ')';
      StrBuilder strBuilder2 = strBuilder0.append(charArray0);
      StrBuilder strBuilder3 = strBuilder2.append((long) 34);
      String string0 = strBuilder2.rightString(34);
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadRight(3268, 3268, 'E');
      StrBuilder strBuilder5 = strBuilder2.trim();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder strBuilder6 = strBuilder4.setNewLineText("\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000))34");
      StrBuilder strBuilder7 = strBuilder2.appendPadding((-2282), ')');
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[1];
      charArray0[0] = 'H';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0, 0, 0);
      StrBuilder strBuilder2 = strBuilder0.append((double) 0);
      StrBuilder strBuilder3 = strBuilder1.setLength(0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight(0, 0, 'n');
      StrBuilder strBuilder3 = strBuilder1.appendFixedWidthPadLeft(3494, 0, 'n');
      StringBuffer stringBuffer0 = new StringBuffer("%]|%qk6cgBVW/^8@<");
      StrBuilder strBuilder4 = strBuilder2.append(stringBuffer0);
      StrTokenizer strTokenizer0 = strBuilder1.asTokenizer();
      int int0 = strBuilder4.lastIndexOf((StrMatcher) null);
      StrBuilder strBuilder5 = strBuilder3.deleteFirst("%]|%qk6cgBVW/^8@<");
      StrBuilder strBuilder6 = strBuilder4.deleteAll("1MsXAu@,@<+");
      boolean boolean0 = strBuilder0.endsWith("On7)~C07{?%3Sdt2");
      int int1 = strBuilder2.lastIndexOf("On7)~C07{?%3Sdt2", 3451);
      StrBuilder strBuilder7 = strBuilder0.append('n');
      StrBuilder strBuilder8 = strBuilder0.deleteFirst("On7)~C07{?%3Sdt2");
      strBuilder8.validateIndex(0);
      boolean boolean1 = strBuilder0.contains((StrMatcher) null);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      StrTokenizer strTokenizer1 = strBuilder_StrBuilderTokenizer0.setDelimiterString("%]|%qk6cgBVW/^8@<");
      StrBuilder strBuilder9 = strBuilder4.appendWithSeparators((Iterator) strTokenizer1, "=$|NneFE`2b$<yI7%1*");
      StringBuffer stringBuffer1 = stringBuffer0.append((-1));
      // Undeclared exception!
      try { 
        strBuilder9.insert((-558), (float) 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -558
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1612));
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      String string0 = strBuilder0.getNullText();
      Reader reader0 = strBuilder0.asReader();
      int int0 = strBuilder0.lastIndexOf((String) null, (-1612));
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 1540;
      int int1 = (-2097);
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(355);
      // Undeclared exception!
      try { 
        strBuilder0.substring(1540, (-2097));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(120);
      StrBuilder strBuilder1 = strBuilder0.append('4');
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      int int0 = strBuilder1.indexOf(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.trim();
      StrBuilder strBuilder3 = strBuilder0.ensureCapacity(120);
      StrMatcher strMatcher1 = StrMatcher.quoteMatcher();
      StrBuilder strBuilder4 = strBuilder0.replaceFirst(strMatcher1, "");
      int int1 = strBuilder3.lastIndexOf('4', (-1));
      char[] charArray0 = new char[1];
      charArray0[0] = '4';
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance(charArray0);
      StrBuilder strBuilder5 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, (String) null);
      StrBuilder strBuilder6 = strBuilder3.replaceFirst("java.home", "");
      StrBuilder strBuilder7 = strBuilder3.trim();
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[7];
      charArray0[0] = '{';
      charArray0[1] = 'T';
      charArray0[2] = '-';
      charArray0[3] = '~';
      charArray0[4] = '\\';
      charArray0[5] = '\"';
      charArray0[6] = ':';
      StrBuilder strBuilder1 = strBuilder0.insert(0, charArray0);
      StrBuilder strBuilder2 = strBuilder1.append((StringBuffer) null);
      int int0 = strBuilder2.lastIndexOf(';');
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      int int0 = (-1042);
      StrBuilder strBuilder0 = new StrBuilder((-1042));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[9];
      charArray0[0] = 'O';
      charArray0[1] = ';';
      charArray0[2] = '-';
      charArray0[3] = 'K';
      charArray0[4] = 'Y';
      charArray0[5] = '9';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 5, (-1042));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2818);
      LinkedList<StrBuilder> linkedList0 = new LinkedList<StrBuilder>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "Mac");
      Reader reader0 = strBuilder0.asReader();
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      boolean boolean0 = linkedList1.add((Object) strBuilder1);
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Collection) linkedList1, "");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean1 = strBuilder_StrBuilderReader0.ready();
      char[] charArray0 = new char[8];
      charArray0[0] = 'a';
      charArray0[1] = 'a';
      charArray0[2] = 'f';
      charArray0[3] = 'r';
      charArray0[4] = 'V';
      charArray0[5] = 'R';
      charArray0[6] = 'a';
      charArray0[7] = 'p';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder3 = strBuilder0.replaceAll(strMatcher0, "[FA_|8@Cw6p%@c`/4");
      StrBuilder strBuilder4 = strBuilder3.deleteFirst(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.getNewLineText();
      StrBuilder strBuilder1 = new StrBuilder((String) null);
      StrBuilder strBuilder2 = strBuilder0.replaceAll("", (String) null);
      boolean boolean0 = strBuilder2.contains(';');
      int int0 = strBuilder1.lastIndexOf(';', 48);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Reader reader0 = strBuilder0.asReader();
      char[] charArray0 = new char[1];
      charArray0[0] = 'U';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StringBuffer stringBuffer0 = new StringBuffer("yzxBlJ`OJX@X#<oq");
      StrBuilder strBuilder2 = strBuilder0.append(stringBuffer0);
      long long0 = reader0.skip(1001L);
      // Undeclared exception!
      try { 
        strBuilder0.replace(102, 0, "!sI");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("W~fuy+Ye2>h,8");
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrBuilder strBuilder2 = new StrBuilder("W~fuy+Ye2>h,8");
      int int1 = (-579);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      boolean boolean0 = strBuilder2.isEmpty();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance("W~fuy+Ye2>h,8");
      int int2 = strBuilder1.lastIndexOf(strMatcher0, (-579));
      int int3 = strBuilder1.lastIndexOf(strMatcher0, (-579));
      int int4 = strBuilder2.indexOf('R', 0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      StrBuilder strBuilder3 = strBuilder2.append(0.0F);
      strBuilder_StrBuilderWriter0.close();
      char[] charArray0 = new char[5];
      charArray0[0] = 'R';
      charArray0[1] = 'R';
      charArray0[2] = 'R';
      charArray0[3] = 'h';
      charArray0[4] = 'R';
      strBuilder2.buffer = charArray0;
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray((-2013), 1);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2013
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("A7zI~tnb$CO");
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_NoMatcher0, 0);
      StrBuilder strBuilder1 = strBuilder0.append(919);
      String string0 = strBuilder1.leftString(2465);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder strBuilder2 = strBuilder0.insert(0, 0.0);
      int int1 = 0;
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadLeft(0, 0, '\'');
      StrBuilder strBuilder4 = strBuilder0.append(false);
      String string1 = strBuilder0.rightString((-1));
      // Undeclared exception!
      try { 
        strBuilder3.setCharAt(117, ')');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 117
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = '{';
      char char1 = 'y';
      StrBuilder strBuilder1 = strBuilder0.appendPadding(3992, 'y');
      StrBuilder strBuilder2 = strBuilder0.deleteAll('y');
      StrBuilder strBuilder3 = strBuilder2.append(114);
      char[] charArray0 = new char[0];
      char char2 = '(';
      int int0 = (-476);
      // Undeclared exception!
      try { 
        strBuilder0.substring((-476), 2623);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -476
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(34);
      char[] charArray0 = new char[2];
      charArray0[0] = ')';
      charArray0[1] = '+';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      String string0 = strBuilder1.rightString(34);
      StrBuilder strBuilder2 = strBuilder0.append((float) 34);
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadRight(3268, 3268, 'E');
      StrBuilder strBuilder4 = strBuilder2.trim();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      boolean boolean0 = strBuilder0.equals(strBuilder0);
      StrBuilder strBuilder5 = strBuilder3.setNewLineText(")+");
      Object[] objectArray0 = new Object[5];
      objectArray0[1] = (Object) strBuilder5;
      objectArray0[2] = (Object) strBuilder0;
      objectArray0[3] = (Object) strBuilder_StrBuilderTokenizer0;
      objectArray0[4] = (Object) strBuilder0;
      StrBuilder strBuilder6 = strBuilder0.appendWithSeparators(objectArray0, ")+");
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("HcFd");
      int int0 = 57;
      StrBuilder strBuilder1 = new StrBuilder(57);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      int int1 = strBuilder1.indexOf(strMatcher0, 0);
      int int2 = strBuilder_StrBuilderTokenizer0.nextIndex();
      int int3 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.append("length must be valid", 0, 57);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.lastIndexOf("length must be valid", (-1435));
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      int int0 = 32;
      StrBuilder strBuilder0 = new StrBuilder(32);
      StrBuilder strBuilder1 = strBuilder0.append("Windows 9");
      StrBuilder strBuilder2 = strBuilder1.replaceAll("", "");
      StrBuilder strBuilder3 = strBuilder0.ensureCapacity(32);
      StrBuilder strBuilder4 = strBuilder3.appendNewLine();
      StrBuilder strBuilder5 = strBuilder3.deleteFirst('-');
      StrBuilder strBuilder6 = strBuilder3.deleteFirst("Windows 9");
      StrBuilder strBuilder7 = new StrBuilder("Windows 9");
      int int1 = (-1344);
      StrBuilder strBuilder8 = strBuilder3.appendFixedWidthPadRight((Object) strBuilder7, (-1344), '-');
      // Undeclared exception!
      try { 
        strBuilder4.append(strBuilder8, (-1344), 32);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("!sWa~,ot#UO3rV^eh");
      StrBuilder strBuilder1 = strBuilder0.replaceAll('4', '.');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip((-1L));
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceAll("EG{W$oR8<X", (String) null);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("HcFd");
      int int0 = 57;
      StrBuilder strBuilder1 = new StrBuilder("HcFd");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      int int1 = strBuilder1.indexOf(strMatcher0, 0);
      // Undeclared exception!
      try { 
        strBuilder1.validateRange(57, 2809);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Caught a SecurityException reading the system property '");
      StrBuilder strBuilder1 = new StrBuilder("NCVNQ)<IAST{");
      StrBuilder strBuilder2 = strBuilder1.append(4180.7458);
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      StrBuilder strBuilder3 = strBuilder2.deleteFirst(strMatcher0);
      StrBuilder strBuilder4 = strBuilder0.append(strBuilder1);
      StrBuilder strBuilder5 = strBuilder0.minimizeCapacity();
      int int0 = 114;
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(114);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 114
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("vc56");
      boolean boolean0 = strBuilder0.endsWith("");
      StrBuilder strBuilder1 = strBuilder0.replace((StrMatcher) null, "vc56", 4, 540, 3);
      StrBuilder strBuilder2 = strBuilder1.append(strBuilder0);
      Object object0 = new Object();
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadRight(object0, 540, 't');
      StringBuffer stringBuffer0 = new StringBuffer("<n:F`I4Mqbv3");
      StringBuffer stringBuffer1 = stringBuffer0.append('F');
      IntStream intStream0 = stringBuffer0.codePoints();
      StringBuffer stringBuffer2 = stringBuffer0.append('F');
      StrBuilder strBuilder4 = strBuilder1.append(stringBuffer0);
      strBuilder1.validateIndex(4);
      StrBuilder strBuilder5 = strBuilder0.trim();
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-909));
      boolean boolean0 = strBuilder0.endsWith("org.apache.commons.lang.text.StrBuilder");
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      StrBuilder strBuilder2 = strBuilder1.delete(0, 0);
      int int0 = strBuilder_StrBuilderReader0.read();
      int int1 = strBuilder_StrBuilderReader0.read();
      // Undeclared exception!
      try { 
        strBuilder1.insert((-1), "org.apache.commons.lang.text.StrBuilder");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("'\"");
      int int0 = strBuilder0.indexOf('D');
      String string0 = strBuilder0.leftString((-1));
      StrBuilder strBuilder1 = strBuilder0.reverse();
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1), false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      String string0 = "!-%keM?2A Gq.J_>CI}";
      StrBuilder strBuilder0 = new StrBuilder("!-%keM?2A Gq.J_>CI}");
      char char0 = 'r';
      StrBuilder strBuilder1 = strBuilder0.deleteAll('r');
      int int0 = (-1198);
      // Undeclared exception!
      try { 
        strBuilder1.setCharAt((-1198), 'r');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1198
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      int int0 = (-2890);
      StrBuilder strBuilder0 = new StrBuilder((-2890));
      String string0 = null;
      StrBuilder strBuilder1 = strBuilder0.append((String) null, (-2890), (-2890));
      // Undeclared exception!
      try { 
        strBuilder1.setCharAt((-2890), 'u');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2890
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2365);
      int int0 = 761;
      StrBuilder strBuilder1 = strBuilder0.append(761);
      char char0 = '1';
      StrBuilder strBuilder2 = strBuilder0.deleteFirst('1');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance("Sah");
      StrTokenizer strTokenizer1 = strBuilder_StrBuilderTokenizer0.reset("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators((Iterator) strTokenizer1, "org.apache.commons.lang.text.StrBuilder");
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      int int1 = 97;
      char[] charArray0 = new char[4];
      charArray0[0] = '1';
      char char1 = 'U';
      // Undeclared exception!
      try { 
        strBuilder3.replace((StrMatcher) null, "org.apache.commons.lang.text.StrBuilder$StrBuilderReader", 2365, 406, 761);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2818);
      LinkedList<StrBuilder> linkedList0 = new LinkedList<StrBuilder>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "Mac");
      Reader reader0 = strBuilder0.asReader();
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Collection) linkedList1, "");
      String string0 = strBuilder2.rightString(2818);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string1 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      char[] charArray0 = new char[8];
      charArray0[0] = 'a';
      charArray0[1] = '4';
      charArray0[2] = 'f';
      charArray0[3] = 'r';
      charArray0[4] = 'V';
      charArray0[5] = 'R';
      charArray0[6] = 'a';
      charArray0[7] = 'p';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder3 = strBuilder0.replaceAll(strMatcher0, "[FA_|8@Cw6p%@c`/4");
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "");
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, (-1254), (-1254));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("g8q$:x$+Ch6:ObLP)d");
      int int0 = strBuilder0.indexOf('w', (-871));
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((Object) "ZZ#z:%4K]8.1t\"}Q(T8");
      StrBuilder strBuilder2 = strBuilder1.trim();
      String string0 = strBuilder0.getNewLineText();
      StrBuilder strBuilder3 = strBuilder0.append((-1973));
      StrBuilder strBuilder4 = strBuilder0.replaceAll("ZZ#z:%4K]8.1t\"}Q(T8", "s");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder3.new StrBuilderTokenizer();
      String string1 = strBuilder_StrBuilderTokenizer0.getContent();
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-683));
      boolean boolean0 = strBuilder0.contains('c');
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      String string0 = "WI]#9|9F;H";
      StrBuilder strBuilder0 = new StrBuilder("WI]#9|9F;H");
      StrBuilder strBuilder1 = new StrBuilder("WI]#9|9F;H");
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, 0, (-538));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      int int0 = (-153);
      StrBuilder strBuilder0 = new StrBuilder((-153));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      int int1 = 0;
      char char0 = 'x';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(object0, 0, 'x');
      StrBuilder strBuilder2 = strBuilder0.appendNewLine();
      Writer writer0 = strBuilder2.asWriter();
      boolean boolean0 = strBuilder0.endsWith("");
      StrBuilder strBuilder3 = strBuilder2.append((double) 0);
      String string0 = strBuilder0.midString((-153), (-153));
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder2, (-153), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      String string0 = "p..>iv4=Z]^6^!BH7(";
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("");
      Writer writer0 = strBuilder0.asWriter();
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      String string1 = strBuilder0.getNullText();
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      // Undeclared exception!
      try { 
        strBuilder0.insert((-67), (float) 31);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -67
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("g8q$:x$+Ch6:ObLP)d");
      int int0 = strBuilder0.indexOf('v', 108);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.replace(strMatcher0, "", 0, 0, 508);
      char[] charArray0 = new char[3];
      charArray0[0] = 'M';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("~>v-r0pM%U)`1u!S");
      charArray0[1] = 'S';
      charArray0[2] = ':';
      strBuilder1.getChars(0, 0, charArray0, 0);
      StrBuilder strBuilder2 = strBuilder1.insert(0, 1905.4697610243);
      StringBuffer stringBuffer0 = new StringBuffer("");
      strBuilder2.validateIndex(0);
      StrBuilder strBuilder3 = strBuilder2.append(stringBuffer0, 0, 0);
      StrBuilder strBuilder4 = strBuilder1.insert(0, "");
      int int1 = (-1897);
      int int2 = 0;
      StrBuilder strBuilder5 = strBuilder4.insert(0, charArray0, 0, 0);
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        strBuilder4.append(stringBuffer0, (-1897), 945);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1617);
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      char[] charArray0 = new char[9];
      charArray0[0] = '/';
      charArray0[1] = 'B';
      charArray0[2] = 't';
      StrBuilder strBuilder2 = strBuilder0.append('_');
      StrBuilder strBuilder3 = strBuilder2.deleteFirst("");
      charArray0[3] = '[';
      charArray0[4] = 'T';
      charArray0[5] = 'c';
      charArray0[6] = 'Q';
      charArray0[7] = 'e';
      charArray0[8] = 'A';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, (-1064), 1274);
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      // Undeclared exception!
      try { 
        strBuilder1.setCharAt(81, '-');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 81
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("");
      StrBuilder strBuilder2 = strBuilder0.ensureCapacity(0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[9];
      charArray0[0] = 'Y';
      charArray0[1] = 'S';
      charArray0[2] = 'l';
      charArray0[3] = 'T';
      charArray0[4] = 'o';
      charArray0[5] = 'C';
      charArray0[6] = 'b';
      charArray0[7] = 'C';
      charArray0[8] = 'D';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0);
      strBuilder_StrBuilderReader0.close();
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      char[] charArray0 = new char[6];
      charArray0[0] = 'D';
      charArray0[1] = 'o';
      charArray0[2] = 'D';
      charArray0[3] = 'u';
      charArray0[4] = 'u';
      char char0 = '(';
      strBuilder0.size = 521;
      // Undeclared exception!
      try { 
        strBuilder0.append(131);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "j/[7=B%K?^i)r%Z";
      int int0 = strBuilder0.indexOf("j/[7=B%K?^i)r%Z", 58);
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(1201);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1201
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("0F#2-]2v");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("0F#2-]2v", "0F#2-]2v");
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
      String string0 = strBuilder0.midString(818, 818);
      StrBuilder strBuilder2 = strBuilder0.reverse();
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadRight((-593), 117, 'O');
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("", (-593), (-26));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      char[] charArray0 = strBuilder0.toCharArray(0, 0);
      char[] charArray1 = new char[2];
      charArray1[0] = 'h';
      charArray1[1] = 'M';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray1);
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "");
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      String string0 = "yDSEiTf}7C'x";
      StrBuilder strBuilder0 = new StrBuilder("yDSEiTf}7C'x");
      int int0 = 1;
      StrBuilder strBuilder1 = strBuilder0.replace(1, 1, "length must be valid");
      int int1 = strBuilder0.size();
      // Undeclared exception!
      try { 
        strBuilder1.replace(1, (-390), (String) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Caught a SecurityException reading the system property '");
      StrBuilder strBuilder1 = new StrBuilder("NCVNQ)<IT{");
      StrBuilder strBuilder2 = strBuilder1.append(4180.7458);
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      StrBuilder strBuilder3 = strBuilder2.deleteFirst(strMatcher0);
      StrBuilder strBuilder4 = strBuilder0.append(strBuilder1);
      StrBuilder strBuilder5 = strBuilder0.minimizeCapacity();
      int int0 = 114;
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(114);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 114
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      int int0 = 4;
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("t}@i -[H(^1c");
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrBuilder strBuilder2 = strBuilder1.deleteAll(strMatcher0);
      StrBuilder strBuilder3 = strBuilder2.replaceAll((String) null, "");
      String string0 = strBuilder0.midString(4, 4);
      StrBuilder strBuilder4 = strBuilder0.ensureCapacity(0);
      String string1 = strBuilder4.getNullText();
      String string2 = strBuilder0.getNewLineText();
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("t}@i -[H(^1c");
      StrMatcher strMatcher1 = StrMatcher.charMatcher('6');
      int int1 = (-1255);
      // Undeclared exception!
      try { 
        strBuilder1.replace((StrMatcher) strMatcher_StringMatcher0, "java.runtime.name", 4, (-1255), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(4);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[8];
      charArray0[0] = '5';
      charArray0[1] = 'E';
      charArray0[2] = '9';
      charArray0[3] = ';';
      charArray0[4] = '-';
      charArray0[5] = 'K';
      charArray0[6] = 'q';
      charArray0[7] = '1';
      strBuilder_StrBuilderWriter0.write(charArray0);
      strBuilder_StrBuilderWriter0.write("SunOS");
      int int0 = strBuilder0.indexOf('_');
      StrBuilder strBuilder1 = strBuilder0.deleteCharAt(4);
      // Undeclared exception!
      try { 
        strBuilder0.validateRange(4, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(34);
      int int0 = strBuilder0.indexOf('G', 34);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      int int0 = (-1226);
      StrBuilder strBuilder0 = new StrBuilder((-1226));
      StrBuilder strBuilder1 = strBuilder0.append((float) (-1226));
      StrBuilder strBuilder2 = strBuilder0.replaceFirst("", "");
      // Undeclared exception!
      try { 
        strBuilder2.insert((-1226), (long) (-1226));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1226
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("1.4");
      boolean boolean0 = strBuilder0.startsWith("1.4");
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "";
      int int0 = (-1828);
      int int1 = (-1094);
      // Undeclared exception!
      try { 
        strBuilder0.append("", (-1828), (-1094));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      char char0 = '{';
      StrMatcher strMatcher1 = StrMatcher.charMatcher('{');
      int int0 = strBuilder0.indexOf(strMatcher0);
      int int1 = 3992;
      char char1 = 'y';
      StrBuilder strBuilder1 = strBuilder0.appendPadding(3992, 'y');
      // Undeclared exception!
      try { 
        strBuilder1.charAt((-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.lastIndexOf('~', (-4239));
      // Undeclared exception!
      try { 
        strBuilder0.charAt((-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(0L);
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight(0, 0, 'n');
      StrBuilder strBuilder3 = strBuilder1.appendFixedWidthPadLeft(3451, 0, '0');
      StringBuffer stringBuffer0 = new StringBuffer("%]|%qk6cgBVW/^8@<");
      StrBuilder strBuilder4 = strBuilder2.append(stringBuffer0);
      StrTokenizer strTokenizer0 = strBuilder1.asTokenizer();
      int int0 = strBuilder4.lastIndexOf((StrMatcher) null);
      StrBuilder strBuilder5 = strBuilder3.deleteFirst("%]|%qk6cgBVW/^8@<");
      StrBuilder strBuilder6 = strBuilder4.deleteAll("1MsXAu@,@<+");
      boolean boolean0 = strBuilder0.endsWith("On7)~C07{?%3Sdt2");
      int int1 = strBuilder2.lastIndexOf("On7)~C07{?%3Sdt2", 3451);
      StrBuilder strBuilder7 = strBuilder0.append('n');
      StrBuilder strBuilder8 = strBuilder0.deleteFirst("On7)~C07{?%3Sdt2");
      strBuilder8.validateIndex(0);
      boolean boolean1 = strBuilder0.contains((StrMatcher) null);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      StrTokenizer strTokenizer1 = strBuilder_StrBuilderTokenizer0.setDelimiterString("%]|%qk6cgBVW/^8@<");
      StrBuilder strBuilder9 = strBuilder4.appendWithSeparators((Iterator) strTokenizer1, "=$|NneFE`2b$<yI7%1*");
      StringBuffer stringBuffer1 = stringBuffer0.append((-1));
      // Undeclared exception!
      try { 
        strBuilder9.insert((-558), (float) 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -558
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(";/-!C$BasI7");
      StrBuilder strBuilder2 = strBuilder0.deleteAll(";/-!C$BasI7");
      StrBuilder strBuilder3 = strBuilder2.appendPadding(1032, 'u');
      StrBuilder strBuilder4 = strBuilder3.append(0.0F);
      boolean boolean0 = strBuilder0.endsWith(";/-!C$BasI7");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      char[] charArray0 = new char[9];
      charArray0[0] = 'i';
      charArray0[1] = '1';
      charArray0[2] = 'V';
      charArray0[3] = 'B';
      charArray0[4] = 'F';
      charArray0[5] = '/';
      charArray0[6] = 'h';
      charArray0[7] = 'A';
      charArray0[8] = '1';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 287, 287);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 287
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("MtJQpgHty`mlq{1");
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrBuilder strBuilder1 = strBuilder0.append(0);
      char[] charArray0 = new char[2];
      charArray0[0] = 'O';
      char char0 = '}';
      charArray0[1] = '}';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      int int0 = 0;
      int int1 = strBuilder0.lastIndexOf(strMatcher0, 0);
      String string0 = strBuilder0.getNewLineText();
      StrBuilder strBuilder2 = strBuilder1.append((-3250L));
      String string1 = "zDUt6%z";
      StrBuilder strBuilder3 = strBuilder2.setNullText("zDUt6%z");
      StringBuffer stringBuffer0 = strBuilder2.toStringBuffer();
      StrBuilder strBuilder4 = strBuilder2.append(strBuilder0);
      // Undeclared exception!
      try { 
        strBuilder4.replace(strMatcher0, (String) null, (-1697), 851, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1697
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 130;
      String string0 = "a>f&|CEK";
      StrBuilder strBuilder1 = strBuilder0.setNullText("a>f&|CEK");
      strBuilder0.size = 130;
      StrBuilder strBuilder2 = strBuilder0.setNewLineText("?$Qu=G");
      Object object0 = new Object();
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("");
      // Undeclared exception!
      try { 
        strBuilder2.contains(strMatcher0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 32
         //
         verifyException("org.apache.commons.lang.text.StrMatcher$CharMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[7];
      charArray0[0] = 'B';
      char char0 = 'H';
      charArray0[1] = 'H';
      charArray0[2] = '|';
      charArray0[3] = '2';
      charArray0[4] = 'x';
      charArray0[5] = '=';
      charArray0[6] = 'V';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, (-349), (-691));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -691
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(9);
      StrBuilder strBuilder1 = strBuilder0.append("0E6%{9.]");
      StrBuilder strBuilder2 = new StrBuilder(0);
      int int0 = 563;
      StrBuilder strBuilder3 = strBuilder2.setNewLineText("0E6%{9.]");
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrBuilder strBuilder4 = strBuilder3.replaceAll((StrMatcher) strMatcher_NoMatcher0, "0E6%{9.]");
      // Undeclared exception!
      try { 
        strBuilder2.append(strBuilder1, 1810, 563);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      // Undeclared exception!
      try { 
        strBuilder0.insert(115, 'e');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 115
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.insert(102, 1157L);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 102
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3783);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      // Undeclared exception!
      try { 
        strBuilder0.insert(2452, (long) 3783);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2452
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      int int0 = (-1372);
      StrBuilder strBuilder0 = new StrBuilder((-1372));
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrBuilder strBuilder2 = strBuilder0.insert(0, (Object) strBuilder1);
      String string0 = strBuilder0.toString();
      int int1 = 2;
      StrTokenizer strTokenizer0 = strBuilder2.asTokenizer();
      String string1 = strBuilder1.midString(2, 731);
      String string2 = strBuilder1.getNullText();
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      StrBuilder strBuilder3 = strBuilder1.append((-1645L));
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1372), '<');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1372
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.indexOf((String) null);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      boolean boolean0 = strBuilder_StrBuilderTokenizer0.hasPrevious();
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) null);
      strBuilder_StrBuilderWriter0.write((String) null);
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      Writer writer1 = strBuilder_StrBuilderWriter0.append((CharSequence) "null");
      strBuilder_StrBuilderWriter0.write((-195));
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      int int1 = 0;
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(object0, 0, '3');
      char[] charArray0 = null;
      int int2 = 1;
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize((char[]) null, 1, (-1));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read((char[]) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.insert(0, '$');
      StrBuilder strBuilder2 = new StrBuilder("7f IeM\"4U~#3r$");
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder2, 0, 0);
      StrBuilder strBuilder4 = strBuilder0.deleteAll('o');
      StrBuilder strBuilder5 = strBuilder0.insert(0, '}');
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid length: ");
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity((-1710));
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      StrBuilder strBuilder1 = strBuilder0.append("', is neither of type Map.Entry nor an Array");
      StrBuilder strBuilder2 = strBuilder1.setCharAt(2, ':');
      int int0 = strBuilder0.indexOf(strMatcher0);
      StrBuilder strBuilder3 = strBuilder0.append((char[]) null, 39, (-313));
      StrBuilder strBuilder4 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder4.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((String) null);
      StrTokenizer strTokenizer0 = strBuilder4.asTokenizer();
      strBuilder_StrBuilderWriter0.write(0);
      StrBuilder strBuilder5 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder6 = strBuilder1.replaceAll(strMatcher0, (String) null);
      StrBuilder strBuilder7 = strBuilder4.append((char[]) null);
      StrBuilder strBuilder8 = strBuilder5.appendWithSeparators((Object[]) null, "', is neither of type Map.Entry nor an Array");
      StrBuilder strBuilder9 = strBuilder8.setNewLineText("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      boolean boolean0 = strBuilder2.contains(':');
      StrBuilder strBuilder10 = strBuilder7.replaceAll('#', 'B');
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('C');
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight((-4013), (-4013), '.');
      StrBuilder strBuilder3 = strBuilder2.append(strBuilder0);
      String string0 = strBuilder3.toString();
      char[] charArray0 = new char[7];
      charArray0[0] = 'u';
      charArray0[1] = 'C';
      charArray0[2] = 'C';
      charArray0[3] = '.';
      charArray0[4] = 'C';
      charArray0[5] = 'C';
      charArray0[6] = 'C';
      // Undeclared exception!
      try { 
        strBuilder0.insert(0, charArray0, (-712), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: -712
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("X");
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      int int0 = 3;
      int int1 = strBuilder1.indexOf(strMatcher0, 3);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(0);
      char[] charArray0 = new char[1];
      charArray0[0] = 'F';
      strBuilder_StrBuilderWriter0.write(charArray0);
      StrBuilder strBuilder2 = strBuilder0.setLength(0);
      StrBuilder strBuilder3 = strBuilder1.deleteFirst('F');
      StrBuilder strBuilder4 = strBuilder3.appendFixedWidthPadLeft(32, (-1192), 'w');
      // Undeclared exception!
      try { 
        strBuilder2.substring(3, 3);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2427));
      char[] charArray0 = new char[6];
      charArray0[0] = 's';
      charArray0[1] = ':';
      StrBuilder strBuilder1 = strBuilder0.setNullText("");
      String string0 = strBuilder1.toString();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      boolean boolean0 = strBuilder1.contains(strMatcher0);
      charArray0[2] = 'O';
      charArray0[3] = '~';
      charArray0[4] = '$';
      charArray0[5] = '$';
      // Undeclared exception!
      try { 
        strBuilder0.getChars((-1), 39, charArray0, (-2427));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.charAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[5];
      charArray0[0] = 'y';
      charArray0[1] = 'Z';
      charArray0[2] = 'I';
      charArray0[3] = 'u';
      charArray0[4] = 'N';
      StrBuilder strBuilder1 = strBuilder0.insert(0, charArray0, 0, 0);
      StrBuilder strBuilder2 = strBuilder0.append('`');
      StrBuilder strBuilder3 = strBuilder2.setNewLineText("");
      StrMatcher strMatcher0 = StrMatcher.charMatcher('9');
      StrMatcher strMatcher1 = StrMatcher.charMatcher('N');
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
      int int0 = strBuilder3.lastIndexOf((String) null);
      int int1 = strBuilder2.hashCode();
      boolean boolean1 = strBuilder_StrBuilderReader0.markSupported();
      int int2 = strBuilder0.hashCode();
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      int int0 = 745;
      StrBuilder strBuilder0 = new StrBuilder(745);
      char[] charArray0 = new char[6];
      charArray0[0] = 'g';
      charArray0[1] = '9';
      char char0 = 'o';
      String string0 = "";
      int int1 = (-2711);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) "", (-2711), '9');
      // Undeclared exception!
      try { 
        strBuilder1.delete(745, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      int int0 = 1;
      StrBuilder strBuilder0 = new StrBuilder(1);
      StrMatcher strMatcher0 = StrMatcher.charMatcher('t');
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("'; the SystemUtils property value will default to null.");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher1);
      StrMatcher strMatcher2 = StrMatcher.charMatcher('3');
      StrMatcher strMatcher3 = StrMatcher.charMatcher('t');
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      int int1 = 1317;
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray(1317, 1);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      int int0 = 3;
      StrBuilder strBuilder0 = new StrBuilder(3);
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(3);
      // Undeclared exception!
      try { 
        strBuilder0.insert(3, 3);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      int int0 = 1412;
      StrBuilder strBuilder0 = new StrBuilder(1412);
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      Iterator<Object> iterator0 = linkedList0.descendingIterator();
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators(iterator0, "");
      StrBuilder strBuilder3 = strBuilder2.deleteAll((String) null);
      // Undeclared exception!
      try { 
        strBuilder1.insert(1412, (Object) strBuilder2);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1412
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      int int0 = (-2731);
      StrBuilder strBuilder0 = new StrBuilder((-2731));
      StrBuilder strBuilder1 = strBuilder0.deleteAll('q');
      String string0 = null;
      StrBuilder strBuilder2 = strBuilder1.deleteAll((String) null);
      // Undeclared exception!
      try { 
        strBuilder2.insert((-2731), true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2731
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 3;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      // Undeclared exception!
      try { 
        strBuilder0.insert(3, object0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 9;
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) "\"", 9, '&');
      StrBuilder strBuilder2 = strBuilder1.replaceAll("\"", "Invalid startIndex: ");
      StrBuilder strBuilder3 = strBuilder0.appendNewLine();
      int int1 = (-1487);
      // Undeclared exception!
      try { 
        strBuilder0.validateRange((-1487), (-1487));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1487
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrMatcher strMatcher0 = StrMatcher.charMatcher('Z');
      // Undeclared exception!
      try { 
        strBuilder0.replace(strMatcher0, "", (-407), (-407), (-407));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -407
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst((StrMatcher) strMatcher_TrimMatcher0, "");
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 31;
      String string0 = "AIyIs+X{[1NEA>m";
      String string1 = ":";
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("AIyIs+X{[1NEA>m", ":");
      // Undeclared exception!
      try { 
        strBuilder0.insert(31, true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 31
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("p&dbXWw");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[9];
      charArray0[0] = 'a';
      charArray0[1] = 'z';
      charArray0[2] = '';
      charArray0[3] = '3';
      charArray0[4] = '+';
      charArray0[5] = '|';
      charArray0[6] = '#';
      charArray0[7] = 's';
      charArray0[8] = ']';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0, 0, 0);
      int int0 = strBuilder_StrBuilderReader0.read(charBuffer0);
      int int1 = strBuilder_StrBuilderReader0.read();
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.runtime.name");
      StrBuilder strBuilder1 = strBuilder0.append('S');
      StrBuilder strBuilder2 = new StrBuilder(0);
      boolean boolean0 = strBuilder0.equals(strBuilder2);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      char[] charArray0 = new char[9];
      charArray0[0] = 'S';
      charArray0[1] = 'S';
      charArray0[2] = ';';
      charArray0[3] = 'S';
      charArray0[4] = '{';
      charArray0[5] = 'S';
      charArray0[6] = 'S';
      charArray0[7] = 'S';
      charArray0[8] = 'S';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 0, 97);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(57);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[6];
      charArray0[0] = ')';
      charArray0[1] = '/';
      charArray0[2] = 'r';
      charArray0[3] = 'y';
      charArray0[4] = 'p';
      charArray0[5] = '^';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 57, 57);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray1 = new char[6];
      charArray1[0] = '^';
      charArray1[1] = '^';
      charArray1[2] = ')';
      charArray1[3] = 'y';
      charArray1[4] = '/';
      charArray1[5] = 'r';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray1, 0, (-789));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: -789
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-43));
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity((-43));
      StrMatcher strMatcher0 = null;
      int int0 = strBuilder0.indexOf((StrMatcher) null);
      String string0 = "3HnbJ6?b`WKF<+{";
      boolean boolean0 = strBuilder1.contains("3HnbJ6?b`WKF<+{");
      StrBuilder strBuilder2 = new StrBuilder((String) null);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      char[] charArray0 = new char[0];
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset(charArray0);
      String string1 = strBuilder_StrBuilderTokenizer0.toString();
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, (-1), 1063);
      // Undeclared exception!
      try { 
        strBuilder0.replace((StrMatcher) null, "zJG<doU~sxwi=C", 1063, 0, (-43));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(414);
      char[] charArray0 = strBuilder0.toCharArray();
      int int0 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 0, 414);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 414
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("nFOsH`A");
      char[] charArray0 = new char[2];
      charArray0[0] = 'H';
      charArray0[1] = 'T';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 3957, (-1417));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -1417
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.midString((-2825), 0);
      StrBuilder strBuilder1 = new StrBuilder("Pa![|s4");
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      String string1 = strBuilder0.getNewLineText();
      int int0 = strBuilder0.hashCode();
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("/Yj2EHo:lK");
      StrBuilder strBuilder1 = strBuilder0.append('j');
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[9];
      charArray0[0] = 'U';
      charArray0[1] = 'R';
      charArray0[2] = '<';
      charArray0[3] = ';';
      charArray0[4] = 'f';
      charArray0[5] = 'd';
      charArray0[6] = '\"';
      charArray0[7] = 'o';
      charArray0[8] = 'W';
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance(charArray0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "java.class.version");
      StrTokenizer strTokenizer1 = strBuilder0.asTokenizer();
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.setLength(32);
      // Undeclared exception!
      try { 
        strBuilder1.append(strBuilder0, 32, 97);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2251);
      int int0 = strBuilder0.lastIndexOf((StrMatcher) null, 2251);
      StrBuilder strBuilder1 = strBuilder0.deleteAll('u');
      StrBuilder strBuilder2 = new StrBuilder();
      boolean boolean0 = strBuilder0.equals(strBuilder2);
      boolean boolean1 = strBuilder2.equals((Object) "");
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      char char0 = 'j';
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(0, 'j');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(", '");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      int int1 = strBuilder0.indexOf("");
      // Undeclared exception!
      try { 
        strBuilder0.substring(6826);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.charAt(3306);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3306
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      String string0 = strBuilder0.getNullText();
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-3180));
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("");
      // Undeclared exception!
      try { 
        strBuilder0.substring((-2899), (-3180));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2899
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      String string0 = "Irix";
      StrBuilder strBuilder0 = new StrBuilder("Irix");
      StrBuilder strBuilder1 = new StrBuilder("Irix");
      int int0 = (-2282);
      // Undeclared exception!
      try { 
        strBuilder1.validateIndex((-2282));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2282
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("^:");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(3137, 5808, '4');
      StrBuilder strBuilder2 = strBuilder0.appendPadding(3137, '4');
      char[] charArray0 = new char[5];
      charArray0[0] = 'Q';
      charArray0[1] = '4';
      charArray0[2] = '4';
      charArray0[3] = '4';
      charArray0[4] = '4';
      int int0 = (-2947);
      // Undeclared exception!
      try { 
        strBuilder1.insert(3137, charArray0, (-2947), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: -2947
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(0, 0, 'I');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[3];
      charArray0[0] = 'I';
      charArray0[1] = 'I';
      charArray0[2] = 'I';
      strBuilder1.buffer = charArray0;
      strBuilder_StrBuilderWriter0.write((String) null);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      String string0 = strBuilder1.leftString(0);
      StrBuilder strBuilder2 = strBuilder0.append((String) null, 0, 324);
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance();
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrMatcher strMatcher0 = StrMatcher.stringMatcher(",qb5%");
      String string1 = strBuilder1.substring(0);
      StrTokenizer strTokenizer1 = strBuilder_StrBuilderTokenizer0.setTrimmerMatcher(strMatcher_NoMatcher0);
      String string2 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder strBuilder3 = new StrBuilder(39);
      boolean boolean0 = strBuilder2.equals((Object) strBuilder3);
      int int0 = (-620);
      // Undeclared exception!
      try { 
        strBuilder1.substring((-620), 595);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -620
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("{R3y$njxP_");
      StrBuilder strBuilder1 = strBuilder0.append('M');
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.contains("Invalid length: ");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(5, 5, 'w');
      // Undeclared exception!
      try { 
        strBuilder0.insert((-870), (-5082.8765F));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -870
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.isEmpty();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[2];
      charArray0[0] = 'k';
      charArray0[1] = 'Z';
      strBuilder_StrBuilderWriter0.write(charArray0);
      strBuilder_StrBuilderWriter0.close();
      char[] charArray1 = new char[2];
      charArray1[0] = '.';
      charArray1[1] = 'r';
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1), charArray1, (-1), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2092));
      StrBuilder strBuilder1 = strBuilder0.replaceAll((String) null, "H+n_/q");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Ph");
      char[] charArray0 = new char[7];
      charArray0[0] = '_';
      charArray0[1] = '[';
      charArray0[2] = 'M';
      charArray0[3] = 'K';
      charArray0[4] = 'C';
      charArray0[5] = '0';
      charArray0[6] = '-';
      // Undeclared exception!
      try { 
        strBuilder0.insert(1206, charArray0, 32, (-1022));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1206
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      String string0 = "Invalid offset: ";
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      int int0 = 0;
      int int1 = 360;
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(360, 'b');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 360
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.insert(0, 0);
      StrBuilder strBuilder2 = strBuilder0.replaceFirst(".e!q~L3 {dR/]Em8=", (String) null);
      StrBuilder strBuilder3 = strBuilder1.append(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      StrBuilder strBuilder4 = strBuilder1.deleteAll(strMatcher0);
      StrBuilder strBuilder5 = strBuilder0.clear();
      char[] charArray0 = new char[3];
      charArray0[0] = '[';
      charArray0[1] = 'M';
      charArray0[2] = 'S';
      char[] charArray1 = strBuilder3.getChars(charArray0);
      StrBuilder strBuilder6 = strBuilder3.append(".e!q~L3 {dR/]Em8=");
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("end < start");
      int int0 = strBuilder0.lastIndexOf("", 32);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("A7zI~tnb$CO");
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_NoMatcher0, 0);
      StrBuilder strBuilder1 = strBuilder0.append(919);
      String string0 = strBuilder1.leftString(2465);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder strBuilder2 = strBuilder0.insert(0, 0.0);
      int int1 = 0;
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadLeft(0, 0, '\'');
      // Undeclared exception!
      try { 
        strBuilder3.setCharAt(117, ')');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 117
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-825));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      int int1 = 0;
      int int2 = 117;
      char[] charArray0 = null;
      strBuilder_StrBuilderWriter0.write((char[]) null);
      // Undeclared exception!
      try { 
        strBuilder0.append("", 0, 117);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      String string0 = "java.vm.specification.version";
      StrBuilder strBuilder0 = new StrBuilder("java.vm.specification.version");
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('L');
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher("");
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      StrMatcher strMatcher3 = StrMatcher.charSetMatcher("");
      StrBuilder strBuilder1 = new StrBuilder("java.vm.specification.version");
      // Undeclared exception!
      try { 
        strBuilder0.insert(1704, "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1704
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) strMatcher0;
      objectArray0[1] = (Object) "";
      objectArray0[2] = (Object) "";
      objectArray0[3] = (Object) "";
      objectArray0[4] = (Object) strMatcher0;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "");
      StrMatcher strMatcher1 = StrMatcher.charMatcher('\'');
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray(3172, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.replaceAll("", "");
      StrBuilder strBuilder2 = strBuilder1.deleteAll("");
      String string0 = strBuilder2.leftString(0);
      StrBuilder strBuilder3 = strBuilder1.replaceAll('C', 'C');
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(76);
      String string0 = "";
      StrBuilder strBuilder1 = strBuilder0.setNullText("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrBuilder strBuilder2 = strBuilder0.append("");
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        strBuilder2.append(stringBuffer0, 0, 76);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3);
      int int0 = strBuilder0.indexOf("end < start");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(2717, 3, 'Q');
      StrBuilder strBuilder2 = strBuilder1.setNewLineText("java.version");
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("wu");
      int int1 = strBuilder2.lastIndexOf(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.append(0.0F);
      char[] charArray0 = new char[7];
      charArray0[0] = 'S';
      charArray0[1] = '5';
      charArray0[2] = 'E';
      charArray0[3] = 'M';
      charArray0[4] = 'B';
      StrBuilder strBuilder2 = strBuilder1.append(false);
      charArray0[5] = 'D';
      // Undeclared exception!
      try { 
        strBuilder0.insert((-2905), false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2905
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("^E-.,~|s\"<");
      char[] charArray0 = strBuilder0.toCharArray(0, 238);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.setLength(602);
      StrBuilder strBuilder2 = strBuilder1.replaceAll('2', '2');
      String string0 = "\\Rd";
      StringBuffer stringBuffer0 = new StringBuffer(1505);
      StrBuilder strBuilder3 = strBuilder1.append(stringBuffer0);
      StrBuilder strBuilder4 = strBuilder2.insert(602, "Rd");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      char[] charArray0 = new char[2];
      charArray0[0] = '2';
      charArray0[1] = '2';
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.next();
      int int0 = (-2204);
      StrBuilder strBuilder5 = strBuilder1.insert(602, charArray0);
      String string1 = strBuilder1.leftString((-2204));
      StrBuilder strBuilder6 = strBuilder0.append((Object) "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000Rd");
      StrBuilder strBuilder7 = strBuilder6.append(602);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 602, 2178);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("HcFd");
      int int0 = 57;
      StrBuilder strBuilder1 = new StrBuilder(57);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      int int1 = strBuilder1.indexOf(strMatcher0, 0);
      // Undeclared exception!
      try { 
        strBuilder1.validateRange(57, 2809);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      strBuilder0.size = 3182;
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      // Undeclared exception!
      try { 
        strBuilder0.replaceFirst(strMatcher0, "");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 32
         //
         verifyException("org.apache.commons.lang.text.StrMatcher$CharMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((Object) "", (-71), 'q');
      StrBuilder strBuilder3 = strBuilder2.append(true);
      // Undeclared exception!
      try { 
        strBuilder0.substring((-2779), 102);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2779
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(5, 5, '0');
      StringBuffer stringBuffer0 = new StringBuffer(260);
      StrBuilder strBuilder2 = strBuilder1.append(stringBuffer0);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[2];
      charArray0[0] = 'f';
      charArray0[1] = '6';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, (-2929), 0);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(101);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[3];
      charArray0[0] = 'a';
      charArray0[1] = '?';
      charArray0[2] = '#';
      strBuilder_StrBuilderReader0.reset();
      int int0 = strBuilder_StrBuilderReader0.read(charArray0);
      strBuilder_StrBuilderReader0.reset();
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.previousToken();
      StringBuffer stringBuffer0 = null;
      try {
        stringBuffer0 = new StringBuffer((CharSequence) null);
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = new StrBuilder("");
      String string0 = strBuilder1.leftString(0);
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2185));
      char[] charArray0 = new char[6];
      charArray0[0] = 'l';
      charArray0[1] = 's';
      charArray0[2] = 'w';
      charArray0[3] = 'U';
      String string0 = strBuilder0.substring(0);
      charArray0[4] = 'S';
      charArray0[5] = 'n';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StrBuilder strBuilder2 = strBuilder1.replaceAll("", "OseDJY8");
      StrBuilder strBuilder3 = strBuilder0.minimizeCapacity();
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("!sWa~,ot#UO3rV^eh");
      StrBuilder strBuilder1 = strBuilder0.replaceAll('4', '8');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip((-1L));
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((Object) "");
      String string0 = strBuilder0.getNewLineText();
      StrBuilder strBuilder2 = strBuilder0.append((-1973));
      StrBuilder strBuilder3 = strBuilder0.replaceAll("", "s");
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Reader reader0 = strBuilder0.asReader();
      StringBuffer stringBuffer0 = new StringBuffer("yzxBlJ`OJX@X#<oq");
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      // Undeclared exception!
      try { 
        strBuilder0.replace(102, 0, "2");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-3180));
      // Undeclared exception!
      try { 
        strBuilder0.substring((-2899), (-3180));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2899
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      int int0 = 1081;
      char char0 = '7';
      // Undeclared exception!
      try { 
        strBuilder0.insert(1081, '7');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1081
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      int int0 = (-1601);
      StrBuilder strBuilder0 = new StrBuilder((-1601));
      int int1 = 3;
      double double0 = 1.5;
      // Undeclared exception!
      try { 
        strBuilder0.insert(3, 1.5);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-158));
      String string0 = "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter";
      boolean boolean0 = strBuilder0.endsWith("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, (-158), (-158));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = null;
      char[] charArray1 = strBuilder0.getChars((char[]) null);
      int int0 = (-1);
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt((-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(4, 3335, '\\');
      StrBuilder strBuilder2 = strBuilder1.append("nBvP");
      Reader reader0 = strBuilder0.asReader();
      boolean boolean0 = strBuilder0.endsWith("AIX");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder3 = strBuilder0.appendWithSeparators((Collection) linkedList0, "AIX");
      String string0 = strBuilder0.getNewLineText();
      StrBuilder strBuilder4 = strBuilder0.append((StrBuilder) null, 783, 0);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1088), '|');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1088
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      // Undeclared exception!
      try { 
        strBuilder1.insert(147, 147);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 147
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[1];
      char char0 = '{';
      charArray0[0] = '{';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "Invalid length: ");
      // Undeclared exception!
      try { 
        strBuilder1.insert(590, (-1.0));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 590
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll((StrMatcher) strMatcher_NoMatcher0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark((-1576));
      strBuilder_StrBuilderReader0.mark(Integer.MAX_VALUE);
      StrBuilder strBuilder2 = strBuilder0.append((double) Integer.MAX_VALUE);
      char[] charArray0 = new char[4];
      charArray0[0] = 'C';
      charArray0[1] = '=';
      charArray0[2] = 'L';
      charArray0[3] = '1';
      char[] charArray1 = strBuilder2.getChars(charArray0);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      int int0 = (-1874);
      StrBuilder strBuilder0 = new StrBuilder((-1874));
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt((-1874));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1874
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder("Linux");
      boolean boolean0 = strBuilder0.equals(strBuilder1);
      StrBuilder strBuilder2 = strBuilder1.append(true);
      StrBuilder strBuilder3 = strBuilder1.trim();
      StrBuilder strBuilder4 = strBuilder3.append(0L);
      int int0 = strBuilder1.lastIndexOf('<', (-650));
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = true;
      String string0 = "4\"n'AQoB";
      // Undeclared exception!
      try { 
        strBuilder0.append("4\"n'AQoB", 1737, 1737);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.startsWith("4t");
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.lastIndexOf("remove() is unsupported");
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      Writer writer0 = strBuilder_StrBuilderWriter0.append('W');
      StrBuilder strBuilder1 = strBuilder0.trim();
      strBuilder_StrBuilderWriter0.write("");
      StrBuilder strBuilder2 = new StrBuilder(97);
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder2);
      StrBuilder strBuilder4 = strBuilder1.appendFixedWidthPadLeft((Object) strBuilder0, 48, 'k');
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("", (-2389), 2823);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst((StrMatcher) null);
      StrBuilder strBuilder2 = strBuilder0.append("", 0, 0);
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((-2076.5014));
      int int0 = strBuilder0.capacity();
      boolean boolean0 = strBuilder1.startsWith("");
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 4;
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder0.insert(4, charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 4
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.insert(0, 0.0F);
      StringBuffer stringBuffer0 = new StringBuffer(1436);
      StrBuilder strBuilder2 = strBuilder1.append(strBuilder0, 0, 3);
      // Undeclared exception!
      try { 
        strBuilder1.append(stringBuffer0, 32, 1994);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      String string0 = "-9W&Jo#n)";
      StrBuilder strBuilder0 = new StrBuilder("-9W&Jo#n)");
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder0.getChars(5, 5, charArray0, 5);
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.trim();
      int int0 = strBuilder1.indexOf("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter", 0);
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      StrMatcher strMatcher2 = StrMatcher.charMatcher('1');
      int int1 = strBuilder0.indexOf(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.deleteAll("java.awt.printerjob");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((-1));
      StrBuilder strBuilder3 = strBuilder0.clear();
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(0L);
      int int0 = 0;
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight(0, 0, 'n');
      StrBuilder strBuilder3 = strBuilder1.appendFixedWidthPadLeft(3451, 0, '0');
      StringBuffer stringBuffer0 = new StringBuffer("%]|%qk6cgBVW/^8@<");
      StrBuilder strBuilder4 = strBuilder2.append(stringBuffer0);
      StrTokenizer strTokenizer0 = strBuilder1.asTokenizer();
      StrMatcher strMatcher0 = null;
      int int1 = strBuilder4.lastIndexOf((StrMatcher) null);
      StrBuilder strBuilder5 = strBuilder3.deleteFirst("%]|%qk6cgBVW/^8@<");
      StrBuilder strBuilder6 = strBuilder4.deleteAll("1MsXAu@,@<+");
      boolean boolean0 = strBuilder0.endsWith("On7)~C07{?%3Sdt2");
      int int2 = strBuilder2.lastIndexOf("On7)~C07{?%3Sdt2", 3451);
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) strTokenizer0;
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) strBuilder4;
      StrBuilder strBuilder7 = strBuilder4.appendWithSeparators(objectArray0, "startIndex must be valid");
      StrBuilder strBuilder8 = strBuilder0.append('n');
      StrBuilder strBuilder9 = strBuilder0.deleteFirst("On7)~C07{?%3Sdt2");
      strBuilder9.validateIndex(0);
      boolean boolean1 = strBuilder0.contains((StrMatcher) null);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      StrTokenizer strTokenizer1 = strBuilder_StrBuilderTokenizer0.setDelimiterString("%]|%qk6cgBVW/^8@<");
      StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((Iterator) strTokenizer1, "=$|NneFE`2b$<yI7%1*");
      StringBuffer stringBuffer1 = stringBuffer0.append((-1));
      // Undeclared exception!
      try { 
        strBuilder8.setCharAt(3451, '0');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3451
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.setLength(602);
      StrBuilder strBuilder2 = strBuilder1.replaceAll('2', '2');
      String string0 = "\\Rd";
      StrBuilder strBuilder3 = strBuilder2.insert(602, "Rd");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      char[] charArray0 = new char[2];
      charArray0[0] = '2';
      charArray0[1] = '2';
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.next();
      int int0 = (-2204);
      StrBuilder strBuilder4 = strBuilder1.insert(602, charArray0);
      String string1 = strBuilder1.leftString((-2204));
      StrBuilder strBuilder5 = strBuilder0.append((Object) "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000Rd");
      StrBuilder strBuilder6 = strBuilder5.append(602);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 602, 2178);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 1737;
      // Undeclared exception!
      try { 
        strBuilder0.append("4\"n'AQoB", 1737, 1737);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(34);
      StrBuilder strBuilder1 = strBuilder0.setLength(34);
      char[] charArray0 = new char[2];
      charArray0[0] = ')';
      charArray0[1] = '+';
      StrBuilder strBuilder2 = strBuilder0.append(charArray0);
      String string0 = strBuilder2.rightString(34);
      StrBuilder strBuilder3 = strBuilder0.append((float) 34);
      StrBuilder strBuilder4 = strBuilder3.appendFixedWidthPadRight(3268, 3268, 'E');
      StrBuilder strBuilder5 = strBuilder3.trim();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      boolean boolean0 = strBuilder1.equals(strBuilder0);
      StrBuilder strBuilder6 = strBuilder4.setNewLineText("\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000)+");
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000)+";
      objectArray0[1] = (Object) strBuilder6;
      objectArray0[2] = (Object) strBuilder0;
      objectArray0[3] = (Object) strBuilder_StrBuilderTokenizer0;
      objectArray0[4] = (Object) strBuilder0;
      StrBuilder strBuilder7 = strBuilder0.appendWithSeparators(objectArray0, "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000)+");
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 1306;
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder0.getChars(1306, 1306, charArray0, 152);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1306
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((-2076.5014));
      int int0 = strBuilder0.capacity();
      int int1 = 118;
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(118);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 118
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2818);
      LinkedList<StrBuilder> linkedList0 = new LinkedList<StrBuilder>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "Mac");
      Reader reader0 = strBuilder0.asReader();
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Collection) linkedList1, "");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      char[] charArray0 = new char[8];
      charArray0[0] = 'a';
      charArray0[1] = '4';
      charArray0[2] = 'f';
      charArray0[3] = 'r';
      charArray0[4] = 'V';
      charArray0[5] = 'R';
      charArray0[6] = 'a';
      charArray0[7] = 'p';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder3 = strBuilder0.replaceAll(strMatcher0, "[FA_|8@Cw6p%@c`/4");
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) "", (-71), 'q');
      StrBuilder strBuilder2 = strBuilder1.append(true);
      int int0 = 102;
      // Undeclared exception!
      try { 
        strBuilder0.substring((int) 'q', 102);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }
}
