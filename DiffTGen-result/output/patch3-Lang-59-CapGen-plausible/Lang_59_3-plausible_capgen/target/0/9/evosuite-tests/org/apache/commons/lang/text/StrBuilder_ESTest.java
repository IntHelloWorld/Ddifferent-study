/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 31 16:47:45 GMT 2020
 */

package org.apache.commons.lang.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.Writer;
import java.nio.CharBuffer;
import java.nio.ReadOnlyBufferException;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.NoSuchElementException;
import java.util.function.Consumer;
import org.apache.commons.lang.text.StrBuilder;
import org.apache.commons.lang.text.StrMatcher;
import org.apache.commons.lang.text.StrTokenizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StrBuilder_ESTest extends StrBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = 8;
      char[] charArray0 = new char[2];
      charArray0[0] = '4';
      charArray0[1] = 'u';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      int int1 = strBuilder0.indexOf(strMatcher0);
      char char0 = '=';
      int int2 = 4146;
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) "", 8, 'm');
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((-1180), 4146, '>');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray1 = new char[8];
      charArray1[0] = 'm';
      charArray1[1] = 'm';
      charArray1[2] = 'm';
      charArray1[3] = 'm';
      charArray1[4] = '=';
      charArray1[5] = '>';
      charArray1[6] = '=';
      charArray1[7] = 'm';
      // Undeclared exception!
      try { 
        strBuilder2.append(charArray1, (-1180), 100);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 100
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      LinkedList<StrBuilder> linkedList0 = new LinkedList<StrBuilder>();
      boolean boolean0 = linkedList0.add(strBuilder0);
      boolean boolean1 = linkedList0.add(strBuilder0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, (String) null);
      int int0 = strBuilder0.indexOf("dPL>G0\"", 0);
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Collection) linkedList0, "");
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder1, 0, 0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder3.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      int int1 = strBuilder1.indexOf(strMatcher0, 0);
      StrBuilder strBuilder4 = strBuilder1.insert(117, (double) (-1));
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder2 = strBuilder0.setNullText("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      int int0 = strBuilder1.indexOf((StrMatcher) strMatcher_NoMatcher0);
      char[] charArray0 = new char[3];
      StrBuilder strBuilder3 = strBuilder1.setNullText("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      charArray0[2] = ' ';
      int int1 = strBuilder0.capacity();
      StrTokenizer strTokenizer0 = strBuilder2.asTokenizer();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      StrBuilder strBuilder4 = strBuilder0.appendWithSeparators((Collection) linkedList0, "+bR");
      StrBuilder strBuilder5 = strBuilder2.replaceFirst("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", "zFf>q=$g)u\"");
      StrBuilder strBuilder6 = strBuilder1.deleteFirst((StrMatcher) strMatcher_NoMatcher0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.insert(0, '0');
      StrBuilder strBuilder2 = strBuilder1.append(84.9604F);
      int int0 = strBuilder0.lastIndexOf("\u0004_Q5%icf 5J");
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("oS[");
      char[] charArray0 = new char[8];
      charArray0[1] = 'b';
      charArray0[2] = 'a';
      String string0 = strBuilder0.leftString(2);
      charArray0[3] = '+';
      charArray0[4] = '5';
      charArray0[5] = 'O';
      charArray0[6] = '=';
      charArray0[7] = 'k';
      StrBuilder strBuilder1 = new StrBuilder(1898);
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(1.0F);
      StrBuilder strBuilder2 = strBuilder1.setNewLineText("");
      char[] charArray0 = new char[1];
      charArray0[0] = '^';
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance(charArray0);
      StrBuilder strBuilder3 = strBuilder1.appendWithSeparators((Iterator) strTokenizer0, "4.1");
      StrBuilder strBuilder4 = strBuilder1.append("");
      StrBuilder strBuilder5 = strBuilder4.append((Object) null);
      boolean boolean0 = strBuilder0.endsWith("java.vm.vendor");
      int int0 = strBuilder3.length();
      boolean boolean1 = strBuilder4.endsWith("");
      StrBuilder strBuilder6 = strBuilder4.insert(30, 30);
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("cK");
      StrBuilder strBuilder7 = strBuilder2.replace((StrMatcher) strMatcher_StringMatcher0, "9=lz#lrD%Q{c&!", 30, 30, 30);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer("ioQHZ:tL,)FzS$'i");
      StrBuilder strBuilder0 = new StrBuilder("ioQHZ:tL,)FzS$'i");
      int int0 = strBuilder0.lastIndexOf('?');
      char[] charArray0 = new char[3];
      charArray0[0] = 'c';
      charArray0[1] = 'c';
      charArray0[2] = 'c';
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      String string0 = ")vibcd_vc(:]";
      StrBuilder strBuilder0 = new StrBuilder(")vibcd_vc(:]");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(373, 400, ',');
      char[] charArray0 = new char[8];
      charArray0[0] = ',';
      charArray0[1] = ',';
      charArray0[2] = ',';
      charArray0[3] = ',';
      charArray0[4] = ',';
      charArray0[5] = ',';
      charArray0[6] = ',';
      charArray0[7] = ',';
      // Undeclared exception!
      try { 
        strBuilder1.insert(400, charArray0, (-50), 400);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: -50
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1419));
      StrBuilder strBuilder1 = strBuilder0.append((-1070.0F));
      StrBuilder strBuilder2 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder3 = strBuilder0.append("ioQHZ:tL,)FzS$'i");
      StringBuffer stringBuffer0 = new StringBuffer("ioQHZ:tL,)FzS$'i");
      StrBuilder strBuilder4 = strBuilder2.append(stringBuffer0);
      StrBuilder strBuilder5 = strBuilder4.insert(31, (-2975.6896));
      StrBuilder strBuilder6 = strBuilder0.deleteFirst('c');
      StrBuilder strBuilder7 = strBuilder4.setLength(101);
      StrBuilder strBuilder8 = strBuilder0.appendFixedWidthPadLeft(117, 441, 'c');
      char[] charArray0 = new char[3];
      charArray0[0] = 'c';
      charArray0[1] = 'c';
      charArray0[2] = 'c';
      StrBuilder strBuilder9 = strBuilder8.insert(3, charArray0);
      StrBuilder strBuilder10 = strBuilder2.insert(441, (float) 3);
      StrBuilder strBuilder11 = strBuilder2.insert(0, 4713L);
      StrBuilder strBuilder12 = strBuilder11.appendPadding(0, 'c');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder3.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-977));
      int int0 = strBuilder0.indexOf("vB", (-977));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((-4584));
      StrBuilder strBuilder1 = strBuilder0.append((StrBuilder) null);
      StrBuilder strBuilder2 = strBuilder0.appendPadding((-977), 'x');
      StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
      Writer writer0 = strBuilder1.asWriter();
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("u=2T3t\"Yy41&.pi");
      StrBuilder strBuilder1 = new StrBuilder("u=2T3t\"Yy41&.pi");
      StrBuilder strBuilder2 = strBuilder1.setNewLineText("");
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      char[] charArray0 = new char[3];
      String string0 = strBuilder2.midString(2, 2);
      charArray0[0] = '\'';
      charArray0[1] = ' ';
      charArray0[2] = ';';
      StrBuilder strBuilder3 = strBuilder2.append(charArray0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      String string1 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder strBuilder4 = strBuilder0.deleteFirst('\'');
      StrBuilder strBuilder5 = strBuilder4.append(strBuilder0, 2, 2);
      StrBuilder strBuilder6 = strBuilder2.insert(2, ';');
      String string2 = strBuilder6.rightString(2);
      char[] charArray1 = strBuilder4.getChars(charArray0);
      boolean boolean1 = strBuilder2.contains('\'');
      boolean boolean2 = strBuilder4.endsWith("2T");
      StrBuilder strBuilder7 = strBuilder6.append(charArray1, 0, 0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      int int0 = strBuilder1.indexOf(strMatcher0);
      StrBuilder strBuilder2 = new StrBuilder();
      StrBuilder strBuilder3 = strBuilder2.append((char[]) null);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      Writer writer0 = strBuilder_StrBuilderWriter0.append(',');
      strBuilder_StrBuilderWriter0.write(19);
      StrBuilder strBuilder4 = strBuilder0.replaceAll('+', '+');
      String string0 = "NoPo88TG`AqEf";
      // Undeclared exception!
      try { 
        strBuilder1.replace(19, 0, "NoPo88TG`AqEf");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset();
      StrTokenizer strTokenizer1 = StrTokenizer.getCSVInstance();
      StrTokenizer strTokenizer2 = StrTokenizer.getTSVInstance();
      String string0 = null;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, (String) null);
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrBuilder strBuilder2 = strBuilder1.deleteAll(strMatcher0);
      StrBuilder strBuilder3 = strBuilder0.appendNull();
      int int0 = strBuilder0.capacity();
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) null;
      StrBuilder strBuilder4 = strBuilder0.appendWithSeparators(objectArray0, "Mac");
      char char0 = 'U';
      StrBuilder strBuilder5 = strBuilder3.appendPadding(0, 'U');
      StrMatcher strMatcher1 = StrMatcher.splitMatcher();
      int int1 = strBuilder0.lastIndexOf(strMatcher1);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-272), true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -272
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Windows NT");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder strBuilder1 = strBuilder0.setLength(183);
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("Windows NT");
      StrBuilder strBuilder2 = strBuilder0.deleteAll(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.deleteAll('2');
      LinkedList<StrBuilder> linkedList0 = new LinkedList<StrBuilder>();
      boolean boolean0 = linkedList0.add(strBuilder0);
      boolean boolean1 = linkedList0.add(strBuilder0);
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Collection) linkedList0, (String) null);
      int int0 = strBuilder0.indexOf("dPL>G0\"", 0);
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder2, 0, 0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder3.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      int int1 = strBuilder2.indexOf(strMatcher0, 0);
      int int2 = strBuilder3.size();
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      int int0 = 855;
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(855);
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Iterator) null, (String) null);
      char char0 = 'B';
      int int1 = (-1866);
      // Undeclared exception!
      try { 
        strBuilder0.append("", 869, (-1866));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1866));
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      // Undeclared exception!
      try { 
        strBuilder0.equalsIgnoreCase((StrBuilder) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      char[] charArray0 = new char[8];
      charArray0[0] = 'v';
      charArray0[1] = '-';
      charArray0[2] = 'r';
      charArray0[3] = 'J';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) "", 901, 'v');
      charArray0[4] = '}';
      charArray0[5] = '';
      charArray0[6] = 'm';
      charArray0[7] = ':';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder2 = strBuilder0.replace(strMatcher0, "", 0, 0, 0);
      StrBuilder strBuilder3 = strBuilder0.setNullText("org.apache.commons.lang.text.StrBuilder");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 0, Integer.MAX_VALUE);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      char[] charArray0 = new char[8];
      charArray0[0] = '0';
      charArray0[1] = 'n';
      charArray0[2] = 'e';
      charArray0[3] = 'k';
      charArray0[4] = '>';
      charArray0[5] = '$';
      charArray0[6] = 'z';
      charArray0[7] = 'W';
      strBuilder1.buffer = charArray0;
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("Mac OS X");
      strBuilder1.size = 18;
      int int0 = strBuilder1.lastIndexOf((StrMatcher) strMatcher_StringMatcher0, (-3127));
      // Undeclared exception!
      try { 
        strBuilder0.hashCode();
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 17
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Y9l$Z~7T3-}3Z{Dv&");
      StrBuilder strBuilder1 = strBuilder0.insert(1, 1);
      StrBuilder strBuilder2 = strBuilder1.replaceFirst("g", "Y9l$Z~7T3-}3Z{Dv&");
      StringBuffer stringBuffer0 = strBuilder1.toStringBuffer();
      StrBuilder strBuilder3 = strBuilder1.ensureCapacity(1);
      StrBuilder strBuilder4 = strBuilder2.appendPadding(1, 'O');
      StrBuilder strBuilder5 = new StrBuilder(2069);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder5.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset();
      StrBuilder strBuilder6 = strBuilder2.appendWithSeparators((Iterator) strTokenizer0, "g");
      StrBuilder strBuilder7 = strBuilder4.append(strBuilder1);
      char[] charArray0 = new char[2];
      charArray0[0] = 'O';
      charArray0[1] = 'O';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 1, 31);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      int int0 = strBuilder0.lastIndexOf((StrMatcher) null);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher((String) null);
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, (String) null);
      StrBuilder strBuilder2 = strBuilder1.deleteAll("");
      StrBuilder strBuilder3 = strBuilder2.deleteAll('o');
      char[] charArray0 = new char[6];
      charArray0[0] = 'j';
      charArray0[1] = 'o';
      charArray0[2] = 'o';
      charArray0[3] = 'o';
      charArray0[4] = 'o';
      charArray0[5] = 'n';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      int int1 = strBuilder0.lastIndexOf('n', (-1));
      StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder5 = strBuilder0.replaceFirst("v7P*3}~*osqw", (String) null);
      // Undeclared exception!
      try { 
        strBuilder3.insert(3849, false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3849
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("h");
      StrBuilder strBuilder1 = strBuilder0.reverse();
      Writer writer0 = strBuilder0.asWriter();
      boolean boolean0 = strBuilder0.endsWith("@");
      StrBuilder strBuilder2 = strBuilder0.ensureCapacity(0);
      String string0 = strBuilder2.substring(0, 0);
      String string1 = strBuilder2.getNewLineText();
      char[] charArray0 = new char[7];
      charArray0[0] = 'B';
      charArray0[1] = '';
      charArray0[2] = '{';
      charArray0[3] = '{';
      charArray0[4] = '-';
      charArray0[5] = 'X';
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.next();
      StrBuilder strBuilder3 = strBuilder1.insert(0, (Object) "h");
      charArray0[6] = 'Q';
      char[] charArray1 = strBuilder1.getChars(charArray0);
      StrBuilder strBuilder4 = strBuilder3.insert(0, '+');
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("@");
      int int0 = strBuilder1.lastIndexOf(strMatcher0, 97);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[6];
      int int0 = 1919;
      strBuilder_StrBuilderReader0.mark(1919);
      charArray0[0] = '?';
      charArray0[1] = '?';
      charArray0[2] = '5';
      charArray0[3] = 'y';
      StrBuilder strBuilder1 = strBuilder0.append((float) 1919);
      strBuilder_StrBuilderReader0.reset();
      charArray0[5] = '8';
      int int1 = strBuilder_StrBuilderReader0.read(charArray0);
      int int2 = strBuilder_StrBuilderReader0.read();
      strBuilder_StrBuilderReader0.reset();
      // Undeclared exception!
      try { 
        strBuilder1.insert(0, charArray0, 2559, (-3621));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: 2559
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.charAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("W+MU}]m(Y!");
      char[] charArray0 = new char[9];
      charArray0[0] = 'W';
      charArray0[1] = 'b';
      charArray0[2] = 'Z';
      charArray0[3] = '^';
      charArray0[4] = '';
      charArray0[5] = 'i';
      charArray0[6] = 'g';
      charArray0[7] = '\'';
      charArray0[8] = '8';
      strBuilder0.getChars(0, 0, charArray0, 0);
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrBuilder strBuilder2 = strBuilder1.replaceFirst('^', 'D');
      StrBuilder strBuilder3 = strBuilder1.replaceAll("", "1d2a'z\"_MJ*2Q-%V9 ");
      char[] charArray1 = new char[0];
      char[] charArray2 = strBuilder2.getChars(charArray1);
      int int0 = strBuilder0.lastIndexOf("");
      StrBuilder strBuilder4 = strBuilder2.appendFixedWidthPadRight((Object) strBuilder0, 0, 'i');
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = " \t\n\r\f";
      char[] charArray0 = new char[1];
      charArray0[0] = '{';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StrBuilder strBuilder2 = strBuilder0.replaceAll(" \t\n\r\f", " \t\n\r\f");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      char[] charArray1 = new char[0];
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) " \t\n\r\f");
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charBuffer0);
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.StringCharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      String string0 = "7";
      StrBuilder strBuilder0 = new StrBuilder("7");
      StrBuilder strBuilder1 = strBuilder0.append(1.5);
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Collection) null, "7");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(0L);
      int int0 = 121;
      strBuilder_StrBuilderReader0.mark(121);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        strBuilder1.toCharArray(121, 116);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("+CR9?P?8%KUD");
      int int0 = strBuilder0.indexOf("]l>:Dgvq:99/Xmx", 0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("uW<$#xD+'W'yr)y]C");
      int int0 = strBuilder0.indexOf("uW<$#xD+'W'yr)y]C", (-1));
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("IJnc4doH");
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrBuilder strBuilder2 = strBuilder1.setNullText("ScrZ}c4K8Lvwxi");
      char[] charArray0 = new char[0];
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_CharSetMatcher0, 0);
      int int1 = strBuilder0.indexOf((StrMatcher) strMatcher_CharSetMatcher0);
      int int2 = strBuilder0.indexOf((StrMatcher) strMatcher_CharSetMatcher0, 48);
      int int3 = strBuilder1.hashCode();
      // Undeclared exception!
      try { 
        strBuilder1.insert(2096, false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2096
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('i');
      StrBuilder strBuilder2 = strBuilder1.minimizeCapacity();
      int int0 = strBuilder0.indexOf('@', 806);
      StrBuilder strBuilder3 = strBuilder1.insert(0, 'r');
      int int1 = 207;
      // Undeclared exception!
      try { 
        strBuilder3.insert(2763, "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2763
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = 'E';
      int int0 = strBuilder0.indexOf('E');
      LinkedList<StrBuilder> linkedList0 = new LinkedList<StrBuilder>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "01O7X");
      // Undeclared exception!
      try { 
        strBuilder1.append(strBuilder0, (-1), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Ktq$1Lrb<]JD");
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("AIX");
      StrMatcher strMatcher1 = StrMatcher.charMatcher(',');
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_TrimMatcher0);
      StrMatcher strMatcher2 = StrMatcher.stringMatcher("Ktq$1Lrb<]JD");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher2);
      char[] charArray0 = new char[4];
      charArray0[0] = ',';
      charArray0[1] = ',';
      charArray0[2] = ',';
      charArray0[3] = ',';
      int int1 = strMatcher2.isMatch(charArray0, (-1), (-1), 1);
      StrBuilder strBuilder2 = strBuilder1.append(true);
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder2, (-1), 332);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "8K1)vh!Vh470Lrs=";
      StrBuilder strBuilder1 = strBuilder0.deleteAll("8K1)vh!Vh470Lrs=");
      int int0 = 2109;
      char char0 = 'g';
      StrBuilder strBuilder2 = strBuilder1.appendPadding(2109, 'g');
      StrBuilder strBuilder3 = new StrBuilder();
      int int1 = 0;
      // Undeclared exception!
      try { 
        strBuilder2.append(strBuilder3, 0, 2109);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) strBuilder_StrBuilderWriter0;
      objectArray0[1] = (Object) strBuilder0;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "");
      Consumer<StrBuilder> consumer0 = (Consumer<StrBuilder>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      strBuilder_StrBuilderTokenizer0.forEachRemaining(consumer0);
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight((Object) null, 0, '4');
      boolean boolean0 = strBuilder1.isEmpty();
      char[] charArray0 = new char[3];
      charArray0[0] = '4';
      charArray0[1] = '4';
      charArray0[2] = '4';
      StrBuilder strBuilder3 = strBuilder0.append(charArray0, 0, 2);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((long) (-1677));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      StrMatcher strMatcher1 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher1);
      StrBuilder strBuilder2 = strBuilder0.deleteFirst('C');
      StrBuilder strBuilder3 = strBuilder0.insert(0, false);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1677), false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1677
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      char char0 = ':';
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(':');
      int int1 = strBuilder0.indexOf(strMatcher0, (-891));
      char[] charArray0 = null;
      strBuilder0.buffer = null;
      String string0 = "";
      StrBuilder strBuilder2 = strBuilder0.replace(0, 0, "");
      // Undeclared exception!
      try { 
        strBuilder2.appendFixedWidthPadLeft(0, 4, 'u');
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-2053);
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt((-2053));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2053
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.runtime.name");
      char char0 = 'p';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(0, 102, 'p');
      StringBuffer stringBuffer0 = new StringBuffer();
      char[] charArray0 = new char[4];
      charArray0[0] = 'p';
      charArray0[1] = 'p';
      charArray0[2] = 'p';
      charArray0[3] = 'p';
      // Undeclared exception!
      try { 
        strBuilder1.getChars(739, 102, charArray0, 32);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("7am'x(60q=#");
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      char[] charArray0 = new char[9];
      charArray0[0] = 'H';
      charArray0[1] = 'o';
      charArray0[2] = 'X';
      charArray0[3] = '%';
      charArray0[4] = 'E';
      charArray0[5] = '3';
      charArray0[6] = 'o';
      charArray0[7] = 'w';
      charArray0[8] = 'o';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder0.indexOf(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.replaceAll("", "o=YGjLvlAV|");
      String string0 = strBuilder1.midString((-1), (-1257));
      char char0 = strBuilder1.charAt(0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(71);
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      int int0 = strBuilder1.lastIndexOf(strMatcher0);
      int int1 = strBuilder0.lastIndexOf('<', 71);
      // Undeclared exception!
      try { 
        strMatcher0.isMatch((char[]) null, (-872), (-872), 1);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = 'A';
      int int0 = strBuilder0.indexOf('A');
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('A', 'A');
      char char1 = '5';
      StrBuilder strBuilder2 = strBuilder1.replaceFirst('A', '5');
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      char[] charArray0 = new char[4];
      charArray0[0] = '5';
      charArray0[1] = '5';
      charArray0[2] = 'A';
      charArray0[3] = 'A';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder3 = strBuilder2.deleteFirst((StrMatcher) strMatcher_NoMatcher0);
      int int1 = (-1962);
      // Undeclared exception!
      try { 
        strBuilder1.setLength((-1962));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1962
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1871);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) null, "");
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      char[] charArray0 = new char[3];
      charArray0[0] = '`';
      charArray0[1] = '-';
      charArray0[2] = '\\';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder1.indexOf(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("");
      StrBuilder strBuilder2 = strBuilder1.deleteFirst("java.vendor");
      StrBuilder strBuilder3 = strBuilder2.setNewLineText("");
      StrBuilder strBuilder4 = strBuilder3.append(strBuilder0);
      StrBuilder strBuilder5 = strBuilder1.append("LFlqD8");
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrBuilder strBuilder6 = strBuilder0.replaceFirst(strMatcher0, "java.vendor");
      StrBuilder strBuilder7 = strBuilder1.insert(0, 697.3F);
      StrBuilder strBuilder8 = strBuilder7.append((double) 0);
      StrBuilder strBuilder9 = strBuilder7.appendNewLine();
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance("");
      StrBuilder strBuilder10 = strBuilder1.appendWithSeparators((Iterator) strTokenizer0, "");
      String string0 = strBuilder0.toString();
      boolean boolean0 = strBuilder0.contains(',');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder5.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
      StrBuilder strBuilder11 = strBuilder3.replaceAll("drM>$R[4_u", "LFlqD8");
      StrBuilder strBuilder12 = new StrBuilder(32);
      StrBuilder strBuilder13 = strBuilder10.setNullText(")@tV+S'");
      boolean boolean1 = strBuilder2.contains(',');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder10.new StrBuilderTokenizer();
      StrMatcher strMatcher1 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrBuilder strBuilder14 = strBuilder4.replaceFirst(strMatcher1, "");
      String string1 = strBuilder7.leftString(2840);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder("");
      StrBuilder strBuilder2 = strBuilder1.append((Object) "");
      int int0 = 95;
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadRight((Object) "", 95, '{');
      char[] charArray0 = new char[6];
      charArray0[0] = '{';
      charArray0[1] = '{';
      StrTokenizer strTokenizer0 = strBuilder2.asTokenizer();
      charArray0[2] = 'C';
      StrBuilder strBuilder4 = strBuilder3.appendPadding(9, '{');
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrBuilder strBuilder5 = strBuilder4.replaceAll(strMatcher0, "");
      charArray0[3] = '{';
      charArray0[4] = '{';
      charArray0[5] = '{';
      // Undeclared exception!
      try { 
        strBuilder3.getChars(95, 95, charArray0, 95);
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      int int0 = 1571;
      StrBuilder strBuilder0 = new StrBuilder(1571);
      String string0 = "";
      StrBuilder strBuilder1 = new StrBuilder("");
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((Object) strBuilder1, 2595, ',');
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadLeft(2595, 1571, ',');
      StrBuilder strBuilder4 = strBuilder3.deleteFirst(',');
      String string1 = "ygK<'2~+_rx;5~y/'t";
      StrBuilder strBuilder5 = strBuilder2.deleteAll("ygK<'2~+_rx;5~y/'t");
      char[] charArray0 = new char[3];
      charArray0[0] = ',';
      charArray0[1] = '6';
      charArray0[2] = '_';
      strBuilder4.buffer = charArray0;
      // Undeclared exception!
      try { 
        strBuilder0.replaceAll('6', '_');
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "");
      int int0 = strBuilder_StrBuilderReader0.read(charBuffer0);
      strBuilder_StrBuilderReader0.mark(2);
      long long0 = strBuilder_StrBuilderReader0.skip(2);
      StrBuilder strBuilder1 = strBuilder0.replaceAll("", "");
      int int1 = strBuilder1.capacity();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      int int2 = 853;
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.append((CharSequence) "", 0, 853);
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("C#1Q.mcX'lKKO'3");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      String string0 = "java.vendor";
      int int0 = 39;
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("java.vendor", 39, 39);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = "";
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "#Xv5M#e%iO");
      // Undeclared exception!
      try { 
        strBuilder1.setCharAt(0, '3');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(0L);
      int int0 = (-2901);
      // Undeclared exception!
      try { 
        strBuilder0.substring((-2901));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2901
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("C#1Q.mcX'lKKO'3");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("1.1");
      strBuilder_StrBuilderWriter0.write(42);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("java.vendor", 39, 39);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("]A^KvCE1:~H\"i");
      StrBuilder strBuilder1 = new StrBuilder();
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("]A^KvCE1:~H\"i");
      int int0 = strBuilder1.lastIndexOf((StrMatcher) strMatcher_StringMatcher0);
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, 0, (-2249));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1419));
      String string0 = "ioQHZ:tL,)FzS\\$'i";
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      // Undeclared exception!
      try { 
        strBuilder1.delete((-1419), (-1419));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1419
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(", Length: ");
      String string0 = strBuilder0.rightString((-2120));
      boolean boolean0 = strBuilder0.endsWith("org.apache.commons.lang.text.StrTokenizer");
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append('e');
      StrBuilder strBuilder2 = strBuilder0.setNewLineText("]");
      StrBuilder strBuilder3 = strBuilder0.insert(0, "");
      Writer writer0 = strBuilder0.asWriter();
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1031));
      Object object0 = new Object();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(object0, (-1031), 'S');
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray((-1031), (-1031));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1031
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      strBuilder0.size = 5;
      StrBuilder strBuilder1 = strBuilder0.deleteAll("");
      Object[] objectArray0 = new Object[2];
      StrBuilder strBuilder2 = strBuilder0.setNewLineText("");
      StrBuilder strBuilder3 = strBuilder1.appendFixedWidthPadLeft((Object) strBuilder0, 2, '7');
      StrBuilder strBuilder4 = strBuilder2.delete(5, 1187);
      objectArray0[0] = (Object) strBuilder1;
      objectArray0[1] = (Object) strBuilder0;
      StrBuilder strBuilder5 = strBuilder1.appendWithSeparators(objectArray0, "oN1Snez=a");
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      int int0 = 2998;
      StrBuilder strBuilder0 = new StrBuilder(2998);
      char char0 = '-';
      StrBuilder strBuilder1 = strBuilder0.setNullText((String) null);
      // Undeclared exception!
      try { 
        strBuilder1.insert(2998, false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2998
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.replaceAll('!', '!');
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.insert(0, "Vz?Z?D/");
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      char[] charArray0 = new char[4];
      charArray0[0] = 'x';
      charArray0[1] = '%';
      charArray0[2] = '$';
      charArray0[3] = '1';
      char[] charArray1 = strBuilder1.getChars(charArray0);
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder2 = strBuilder0.append(stringBuffer0, 0, 0);
      StrBuilder strBuilder3 = strBuilder2.append(stringBuffer0);
      StrBuilder strBuilder4 = strBuilder3.appendNewLine();
      StrBuilder strBuilder5 = strBuilder3.replaceFirst("java.vendor", "");
      StrBuilder strBuilder6 = strBuilder2.appendFixedWidthPadRight(0, 0, 's');
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("i");
      StrBuilder strBuilder7 = strBuilder6.replace(strMatcher0, "os.name", 0, 0, (-224));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      StrBuilder strBuilder8 = strBuilder6.append(1);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst((StrMatcher) null, "N-");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Collection) linkedList0, "org.apache.commons.lang.text.StrBuilder");
      StringBuffer stringBuffer0 = new StringBuffer("org.apache.commons.lang.text.StrBuilder");
      StrBuilder strBuilder3 = strBuilder2.append(stringBuffer0, 0, 0);
      boolean boolean0 = strBuilder0.contains(')');
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.length();
      char char0 = '.';
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.previous();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "";
      int int0 = (-1041);
      int int1 = strBuilder0.lastIndexOf("", (-1041));
      char[] charArray0 = new char[3];
      charArray0[0] = 'H';
      charArray0[1] = 'C';
      charArray0[2] = '+';
      int int2 = 102;
      StrBuilder strBuilder1 = new StrBuilder(4);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      StrBuilder strBuilder2 = strBuilder1.append(object0);
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators((Object[]) null, "org.apache.commons.lang.text.StrBuilder");
      // Undeclared exception!
      try { 
        strBuilder3.append("org.apache.commons.lang.text.StrBuilder", (-1041), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      int int0 = strBuilder0.lastIndexOf("", 0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      String string0 = "#@ .j8m$Ds2";
      StrBuilder strBuilder0 = new StrBuilder("#@ .j8m$Ds2");
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("#@ .j8m$Ds2");
      int int0 = strBuilder0.indexOf((StrMatcher) strMatcher_StringMatcher0, (-1305));
      StrBuilder strBuilder1 = strBuilder0.append((-1305));
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      String string1 = "";
      int int1 = 4156;
      // Undeclared exception!
      try { 
        strBuilder1.replace(strMatcher0, "", 482, 4156, 4156);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("'\"");
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1, 0, 0);
      int int0 = strBuilder0.length();
      StrMatcher strMatcher0 = StrMatcher.charMatcher('*');
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      StrBuilder strBuilder3 = strBuilder0.clear();
      StrBuilder strBuilder4 = strBuilder0.append(324L);
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) strBuilder2;
      objectArray0[1] = (Object) "'\"";
      StrBuilder strBuilder5 = strBuilder4.appendWithSeparators(objectArray0, "'\"");
      Writer writer0 = strBuilder0.asWriter();
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(true);
      StrBuilder strBuilder2 = strBuilder1.clear();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      String string0 = strBuilder0.rightString(0);
      char[] charArray0 = new char[1];
      charArray0[0] = '7';
      StrBuilder strBuilder3 = strBuilder2.append(charArray0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder3.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      int int1 = strBuilder_StrBuilderReader0.read();
      int int2 = strBuilder0.validateRange(0, 101);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      char[] charArray0 = new char[9];
      charArray0[0] = 'W';
      charArray0[1] = 'J';
      charArray0[2] = 'S';
      charArray0[3] = 'X';
      charArray0[4] = '3';
      charArray0[5] = '3';
      charArray0[6] = '+';
      charArray0[7] = 'R';
      charArray0[8] = '}';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 1764, (-874));
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char char0 = ' ';
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("");
      StrTokenizer strTokenizer1 = strBuilder_StrBuilderTokenizer0.setIgnoredMatcher(strMatcher0);
      StrMatcher strMatcher1 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher1, 0);
      int int1 = strBuilder1.lastIndexOf(strMatcher0, 9);
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((Object) strTokenizer0, 0, ' ');
      StrBuilder strBuilder3 = strBuilder2.ensureCapacity(3111);
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      int int2 = strBuilder1.lastIndexOf("9=Ze*$3+@7NdAF{XG");
      char char1 = '_';
      // Undeclared exception!
      try { 
        strBuilder1.insert(2, '_');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      String string0 = "+g83HaouFBFG|o1mLA";
      StrBuilder strBuilder0 = new StrBuilder("+g83HaouFBFG|o1mLA");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrBuilder strBuilder1 = strBuilder0.append((-1.0F));
      String string1 = strBuilder1.substring(0);
      strBuilder_StrBuilderReader0.reset();
      strBuilder_StrBuilderReader0.mark((-3333));
      char[] charArray0 = new char[9];
      charArray0[0] = '6';
      StrBuilder strBuilder2 = strBuilder0.clear();
      charArray0[1] = 'L';
      charArray0[2] = ':';
      charArray0[3] = 'N';
      charArray0[4] = '@';
      charArray0[5] = 'V';
      charArray0[6] = 'r';
      charArray0[7] = 'q';
      charArray0[8] = ',';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(108, (-3333), charArray0, 108);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3333
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(967L);
      char[] charArray0 = new char[5];
      charArray0[0] = '=';
      charArray0[1] = 'c';
      charArray0[2] = '_';
      charArray0[3] = 'B';
      charArray0[4] = 'e';
      // Undeclared exception!
      try { 
        strBuilder1.getChars(4, (-577), charArray0, 4);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -577
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt((-4651), '{');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -4651
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      char char0 = '8';
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrBuilder strBuilder2 = strBuilder0.deleteAll('8');
      int int0 = strBuilder0.lastIndexOf("");
      StrBuilder strBuilder3 = strBuilder2.trim();
      StrMatcher strMatcher0 = StrMatcher.charMatcher('8');
      int int1 = strBuilder3.indexOf(strMatcher0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark((-1));
      char[] charArray0 = new char[7];
      charArray0[0] = '8';
      charArray0[1] = '8';
      charArray0[2] = '8';
      charArray0[3] = '8';
      charArray0[4] = '8';
      charArray0[5] = 'M';
      charArray0[6] = '8';
      // Undeclared exception!
      try { 
        strMatcher0.isMatch(charArray0, (-1), 0, (-1));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[0];
      StrBuilder strBuilder1 = strBuilder0.append(0.0);
      StrBuilder strBuilder2 = strBuilder0.deleteFirst('@');
      // Undeclared exception!
      try { 
        strBuilder1.getChars(0, 1260, charArray0, (-1593));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1260
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      String string0 = "org.apache.commons.lang.text.StrBuilder$StrBuilderReader";
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((-2745), (-2745), 'S');
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight((-1350), 0, '\"');
      int int0 = 0;
      int int1 = 598;
      char[] charArray0 = strBuilder0.toCharArray(0, 598);
      // Undeclared exception!
      try { 
        strBuilder0.insert(598, charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 598
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.midString((-705), 0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[4];
      charArray0[0] = '6';
      charArray0[1] = ',';
      charArray0[2] = '&';
      charArray0[3] = '5';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 0, Integer.MAX_VALUE);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 2147483647
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.isEmpty();
      int int0 = 1196;
      // Undeclared exception!
      try { 
        strBuilder0.insert(1196, (-1.0));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1196
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      int int0 = 3;
      char char0 = '9';
      char[] charArray0 = new char[8];
      // Undeclared exception!
      try { 
        strBuilder1.insert(3, 3);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-639);
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex((-639));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -639
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      char[] charArray0 = new char[8];
      charArray0[0] = '1';
      charArray0[1] = 'L';
      StrBuilder strBuilder1 = new StrBuilder("");
      StrBuilder strBuilder2 = strBuilder1.deleteFirst('1');
      StrBuilder strBuilder3 = new StrBuilder();
      StrBuilder strBuilder4 = strBuilder2.append(strBuilder3);
      StrBuilder strBuilder5 = strBuilder0.append(strBuilder1);
      charArray0[2] = 'n';
      charArray0[3] = ')';
      boolean boolean0 = strBuilder0.isEmpty();
      StrBuilder strBuilder6 = strBuilder0.setNullText("");
      boolean boolean1 = strBuilder3.isEmpty();
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-137));
      StrBuilder strBuilder1 = strBuilder0.append(']');
      char[] charArray0 = new char[1];
      charArray0[0] = '.';
      StrBuilder strBuilder2 = strBuilder0.append(charArray0);
      StrBuilder strBuilder3 = strBuilder2.append(strBuilder0);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("V4rp<rY+j0`O(Mwnnw");
      int int0 = strBuilder3.indexOf(strMatcher0);
      StrMatcher strMatcher1 = StrMatcher.commaMatcher();
      StrBuilder strBuilder4 = strBuilder2.replaceAll(strMatcher1, "F,Q");
      boolean boolean0 = strBuilder1.isEmpty();
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher(charArray0);
      int int1 = strBuilder2.size();
      // Undeclared exception!
      try { 
        strBuilder4.insert((-137), " O");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -137
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(10);
      StrBuilder strBuilder1 = new StrBuilder(5);
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[8];
      charArray0[0] = '0';
      charArray0[1] = '3';
      charArray0[2] = ',';
      charArray0[3] = '+';
      charArray0[4] = 'x';
      charArray0[5] = '$';
      charArray0[6] = 'j';
      charArray0[7] = '#';
      StrBuilder strBuilder1 = strBuilder0.insert(0, charArray0);
      int int0 = strBuilder0.indexOf((String) null);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      String string0 = "5tI#p;w8nO!mI^%{s";
      StrBuilder strBuilder0 = new StrBuilder("5tI#p;w8nO!mI^%{s");
      // Undeclared exception!
      try { 
        strBuilder0.insert(2044, (double) 2044);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2044
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.trim();
      Writer writer0 = strBuilder0.asWriter();
      String string0 = "WjQP4F+\\UCw'(A9 ]";
      StrBuilder strBuilder2 = strBuilder1.appendNull();
      // Undeclared exception!
      try { 
        strBuilder0.insert(2164, '>');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2164
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("%<L}1}3mW6,]Ukewh");
      StrMatcher strMatcher0 = StrMatcher.charMatcher('Y');
      char[] charArray0 = new char[9];
      charArray0[0] = 'Y';
      charArray0[1] = 'Y';
      charArray0[2] = 'p';
      charArray0[3] = 'Y';
      charArray0[4] = 'Y';
      charArray0[5] = 'Y';
      charArray0[6] = 'Y';
      charArray0[7] = 'Y';
      charArray0[8] = 'Y';
      StrMatcher strMatcher1 = StrMatcher.charMatcher('Y');
      int int0 = strMatcher0.isMatch(charArray0, 3, 3, 3);
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "/");
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder2 = strBuilder1.append(stringBuffer0);
      StringBuffer stringBuffer1 = strBuilder2.toStringBuffer();
      StrBuilder strBuilder3 = strBuilder1.deleteAll(strMatcher0);
      Reader reader0 = strBuilder0.asReader();
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      String string0 = "Mac OS X";
      StrBuilder strBuilder0 = new StrBuilder("Mac OS X");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(1L);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      char[] charArray0 = new char[2];
      charArray0[0] = 'N';
      char char0 = 'T';
      StrMatcher strMatcher0 = null;
      char[] charArray1 = new char[6];
      charArray1[0] = 'N';
      charArray1[1] = 'N';
      charArray1[2] = 'N';
      charArray1[3] = 'N';
      charArray1[4] = 'T';
      charArray1[5] = 'N';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray1, 4935, 4935);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      StringBuffer stringBuffer0 = new StringBuffer(4661);
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[7];
      charArray0[0] = ' ';
      charArray0[1] = '+';
      charArray0[2] = 'J';
      charArray0[3] = 'a';
      charArray0[4] = 'e';
      charArray0[5] = 'N';
      charArray0[6] = 'D';
      StrBuilder strBuilder1 = strBuilder0.insert(0, charArray0, 0, 0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(charArray0, 0, 0);
      StrBuilder strBuilder2 = strBuilder1.setNewLineText("KBN`%-a~f;c\"o 1N");
      boolean boolean0 = strBuilder0.contains((StrMatcher) null);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark((-2361));
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      int int0 = 3660;
      StrBuilder strBuilder0 = new StrBuilder(3660);
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("end < start");
      int int1 = 0;
      StrBuilder strBuilder1 = strBuilder0.appendPadding(0, 'K');
      StrBuilder strBuilder2 = strBuilder0.deleteAll(strMatcher0);
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("RR");
      Writer writer0 = strBuilder2.asWriter();
      StringBuffer stringBuffer0 = strBuilder2.toStringBuffer();
      StrBuilder strBuilder3 = strBuilder1.append((Object) strBuilder2);
      char[] charArray0 = strBuilder0.toCharArray();
      String string0 = strBuilder0.substring(0);
      StrBuilder strBuilder4 = strBuilder1.deleteFirst(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder4.insert(3660, 'K');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3660
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = "92";
      int int0 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.append("92", (-400), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("C`Q+j+FtkRI");
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      String string0 = null;
      StrMatcher strMatcher1 = StrMatcher.stringMatcher((String) null);
      // Undeclared exception!
      try { 
        strBuilder0.setLength((-154));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -154
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.reverse();
      StrBuilder strBuilder2 = strBuilder1.append('N');
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      boolean boolean0 = strBuilder2.contains(strMatcher0);
      int int0 = strBuilder1.indexOf("we");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("u%q", (-1), (-2809));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Y9l$Z~7T3-}3Z{Dv&");
      StrBuilder strBuilder1 = strBuilder0.insert(1, 1);
      StrBuilder strBuilder2 = strBuilder1.replaceFirst("", "Y9l$Z~7T3-}3Z{Dv&");
      StringBuffer stringBuffer0 = strBuilder1.toStringBuffer();
      StrBuilder strBuilder3 = strBuilder1.ensureCapacity(1);
      StrBuilder strBuilder4 = strBuilder2.appendPadding(1, 'O');
      StrBuilder strBuilder5 = new StrBuilder(2069);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder5.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset();
      StrBuilder strBuilder6 = strBuilder2.appendWithSeparators((Iterator) strTokenizer0, "");
      StrBuilder strBuilder7 = strBuilder4.append(strBuilder1);
      char[] charArray0 = new char[2];
      charArray0[0] = 'O';
      charArray0[1] = 'O';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 1, 31);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(108);
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder2 = strBuilder1.append((Object) null);
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadLeft(108, 108, 'u');
      String string0 = strBuilder0.leftString((-1415));
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.replaceAll('i', 'L');
      boolean boolean0 = strBuilder0.contains('L');
      int int0 = 2188;
      int int1 = strBuilder0.indexOf((String) null, 2188);
      char[] charArray0 = strBuilder1.toCharArray();
      // Undeclared exception!
      try { 
        strBuilder0.delete((-1), 2188);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      String string0 = strBuilder0.rightString(0);
      String string1 = strBuilder0.rightString(0);
      char[] charArray0 = strBuilder0.toCharArray();
      StrBuilder strBuilder1 = strBuilder0.append(0);
      StrBuilder strBuilder2 = strBuilder1.append('o');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(charArray0);
      int int0 = strBuilder0.capacity();
      // Undeclared exception!
      try { 
        strBuilder1.insert(2775, (float) 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2775
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-122);
      String string0 = "E";
      String string1 = "^_>";
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("E", "^_>");
      StrBuilder strBuilder2 = strBuilder0.append(1.0F);
      StrBuilder strBuilder3 = strBuilder0.appendNewLine();
      // Undeclared exception!
      try { 
        strBuilder0.insert((-122), "?VelTYZ,2,a-aG");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -122
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("c1.kj&<@!DhI");
      StrMatcher strMatcher0 = StrMatcher.charMatcher('R');
      int int0 = strBuilder0.indexOf(strMatcher0, 2562);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-583));
      StrBuilder strBuilder1 = strBuilder0.append(false);
      int int0 = strBuilder0.lastIndexOf(',', (-583));
      StrBuilder strBuilder2 = strBuilder0.append((-1.0F));
      StrBuilder strBuilder3 = strBuilder2.append((-1));
      StrBuilder strBuilder4 = strBuilder0.append((long) (-1));
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        strBuilder4.append(stringBuffer0, 39, (-583));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[6];
      charArray0[0] = '/';
      charArray0[1] = 'e';
      charArray0[2] = 'U';
      charArray0[3] = '+';
      charArray0[4] = '~';
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.previousToken();
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) null);
      charArray0[5] = 'A';
      strBuilder_StrBuilderWriter0.write(charArray0);
      Writer writer1 = strBuilder0.asWriter();
      StrBuilder strBuilder1 = strBuilder0.deleteAll('C');
      String string1 = strBuilder1.toString();
      StrBuilder strBuilder2 = strBuilder1.trim();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(44);
      strBuilder_StrBuilderWriter0.write(0);
      StrBuilder strBuilder3 = strBuilder1.append(charArray0);
      String string2 = strBuilder1.leftString(0);
      StrBuilder strBuilder4 = strBuilder1.appendFixedWidthPadLeft((Object) strBuilder_StrBuilderWriter0, (-2910), 'r');
      strBuilder_StrBuilderReader0.mark(44);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("=C(iW@uSJ\u0000HW");
      String string0 = strBuilder1.leftString((-615));
      Reader reader0 = strBuilder0.asReader();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[0];
      StrBuilder strBuilder2 = strBuilder0.append(0L);
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance(charArray0);
      StrBuilder strBuilder3 = strBuilder0.appendWithSeparators((Iterator) strBuilder_StrBuilderTokenizer0, "org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrBuilder strBuilder4 = strBuilder3.deleteAll('&');
      // Undeclared exception!
      try { 
        strBuilder0.insert((-615), 747.973063);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -615
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 2;
      StrBuilder strBuilder1 = new StrBuilder(2);
      StrBuilder strBuilder2 = strBuilder1.minimizeCapacity();
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, 2, 2);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0, 0);
      String string0 = strBuilder0.rightString(9);
      StrBuilder strBuilder1 = strBuilder0.setNewLineText((String) null);
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, 9, 34);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      LinkedList<StrBuilder> linkedList0 = new LinkedList<StrBuilder>();
      boolean boolean0 = linkedList0.add(strBuilder0);
      boolean boolean1 = linkedList0.add(strBuilder0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, (String) null);
      int int0 = strBuilder0.indexOf("dPL>G0\"", 0);
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1, 0, 0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      int int1 = strBuilder1.indexOf(strMatcher0, 0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      char[] charArray0 = new char[4];
      charArray0[0] = 'G';
      charArray0[1] = 'p';
      charArray0[2] = '/';
      charArray0[3] = '>';
      strBuilder0.getChars(0, 0, charArray0, 0);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(57, 57, ';');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      // Undeclared exception!
      try { 
        strBuilder1.insert((-1068), 'p');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1068
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("n");
      boolean boolean0 = strBuilder0.contains((StrMatcher) null);
      String string0 = strBuilder0.toString();
      StrBuilder strBuilder1 = new StrBuilder((-1514));
      StrBuilder strBuilder2 = strBuilder1.deleteFirst((StrMatcher) null);
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder1);
      StrBuilder strBuilder4 = strBuilder0.append((char[]) null);
      StrTokenizer strTokenizer0 = strBuilder4.asTokenizer();
      StrBuilder strBuilder5 = strBuilder4.append((char[]) null, (-545), (-545));
      StrBuilder strBuilder6 = strBuilder5.trim();
      int int0 = strBuilder0.lastIndexOf((StrMatcher) null, (-1514));
      String string1 = strBuilder6.getNullText();
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[6];
      int int0 = 1919;
      strBuilder_StrBuilderReader0.mark(1919);
      charArray0[0] = '?';
      charArray0[1] = 'h';
      charArray0[2] = '5';
      charArray0[3] = 'y';
      strBuilder_StrBuilderReader0.reset();
      charArray0[4] = '\\';
      charArray0[5] = '8';
      int int1 = strBuilder_StrBuilderReader0.read(charArray0);
      int int2 = strBuilder_StrBuilderReader0.read();
      // Undeclared exception!
      try { 
        strBuilder0.charAt((-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("6kw@d6~3jEe0XX(CH/");
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrBuilder strBuilder2 = strBuilder1.setNullText("6kw@d6~3jEe0XX(CH/");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      Reader reader0 = strBuilder1.asReader();
      String string0 = strBuilder1.rightString(0);
      char[] charArray0 = new char[0];
      strBuilder_StrBuilderWriter0.write(charArray0);
      StrBuilder strBuilder3 = strBuilder2.append(strBuilder0);
      strBuilder_StrBuilderWriter0.close();
      StrBuilder strBuilder4 = strBuilder2.appendNull();
      String string1 = strBuilder0.toString();
      StrBuilder strBuilder5 = strBuilder1.replaceAll("", "");
      // Undeclared exception!
      try { 
        strBuilder2.charAt((-3469));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3469
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-952);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((-952), (-952), '<');
      String string0 = strBuilder1.rightString((-952));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[3];
      charArray0[0] = '<';
      charArray0[1] = '<';
      StrBuilder strBuilder2 = strBuilder1.setNewLineText("");
      char char0 = 'd';
      String string1 = "E-';F";
      StrBuilder strBuilder3 = strBuilder0.replaceAll("", "E-';F");
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance(charArray0);
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("");
      int int1 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.replace(strMatcher0, (String) null, Integer.MAX_VALUE, Integer.MAX_VALUE, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('>');
      String string0 = strBuilder0.toString();
      char[] charArray0 = new char[3];
      charArray0[0] = '>';
      charArray0[1] = '>';
      charArray0[2] = '>';
      strBuilder1.buffer = charArray0;
      int int0 = strBuilder0.lastIndexOf('>');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int1 = strBuilder_StrBuilderReader0.read();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string1 = strBuilder_StrBuilderTokenizer0.toString();
      // Undeclared exception!
      try { 
        CharBuffer.wrap((CharSequence) "StrTokenizer[not tokenized yet]", (-3411), (-1));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1222);
      char[] charArray0 = new char[3];
      charArray0[0] = 'E';
      charArray0[1] = 'v';
      charArray0[2] = 'C';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      boolean boolean0 = strBuilder1.contains((StrMatcher) strMatcher_TrimMatcher0);
      StrBuilder strBuilder2 = strBuilder0.append("");
      int int0 = strBuilder2.length();
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadLeft(3, 639, 'n');
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder1.append("Cgp Kp#6,N0/njTl");
      // Undeclared exception!
      try { 
        strBuilder2.insert(1082, true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1082
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      String string0 = "?`O:4Ju@PPj*3K";
      StrBuilder strBuilder0 = new StrBuilder("?`O:4Ju@PPj*3K");
      int int0 = 97;
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(97, '1');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 97
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2942));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[4];
      charArray0[0] = 'G';
      charArray0[1] = '<';
      charArray0[2] = 'M';
      charArray0[3] = ' ';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, (-2), 1297);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 1297
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      String string0 = null;
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(69, 'e');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 69
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      int int0 = 101;
      StrBuilder strBuilder0 = new StrBuilder(101);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(101);
      strBuilder_StrBuilderReader0.mark(101);
      strBuilder_StrBuilderReader0.reset();
      String string0 = "HcLG1QSn";
      StrBuilder strBuilder1 = strBuilder0.setNullText("HcLG1QSn");
      // Undeclared exception!
      try { 
        strBuilder1.deleteCharAt(101);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 101
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(32);
      int int0 = strBuilder0.size();
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[7];
      charArray0[0] = 'p';
      charArray0[1] = '+';
      charArray0[2] = 'R';
      StrBuilder strBuilder1 = strBuilder0.append((String) null);
      charArray0[3] = 'f';
      charArray0[4] = 'G';
      charArray0[5] = '^';
      char char0 = '0';
      charArray0[6] = '0';
      strBuilder0.buffer = charArray0;
      StrBuilder strBuilder2 = strBuilder0.append((-1L));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      int int0 = 0;
      int int1 = 1205;
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("line.separator", 0, 1205);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2256));
      StrBuilder strBuilder1 = strBuilder0.append((String) null);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("2:T+urgclv");
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("2:T+urgclv");
      char[] charArray0 = new char[9];
      charArray0[0] = 'h';
      charArray0[1] = 'r';
      charArray0[2] = 'q';
      charArray0[3] = '<';
      charArray0[4] = '\"';
      charArray0[5] = 'Y';
      charArray0[6] = 'f';
      charArray0[7] = 'u';
      charArray0[8] = '_';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      // Undeclared exception!
      try { 
        strBuilder0.replaceAll(strMatcher0, "2:T+urgclv");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      char[] charArray0 = new char[8];
      charArray0[0] = 'v';
      charArray0[1] = '-';
      charArray0[2] = 'r';
      charArray0[3] = 'J';
      charArray0[4] = '}';
      charArray0[5] = '';
      charArray0[6] = 'h';
      charArray0[7] = ':';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.replace(strMatcher0, "", 0, 0, 0);
      StrBuilder strBuilder2 = strBuilder0.setNullText("org.apache.commons.lang.text.StrBuilder");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("startIndex must be valid", "");
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrBuilder strBuilder2 = strBuilder1.deleteAll(strMatcher0);
      char[] charArray0 = new char[1];
      charArray0[0] = 'a';
      // Undeclared exception!
      try { 
        strBuilder2.append(charArray0, (-458), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-4039));
      // Undeclared exception!
      try { 
        strBuilder0.insert((-4039), '\\');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -4039
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-3804));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[9];
      charArray0[0] = 'n';
      charArray0[1] = '7';
      charArray0[2] = 'q';
      charArray0[3] = 'd';
      charArray0[4] = '0';
      charArray0[5] = 't';
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance(charArray0);
      boolean boolean0 = strBuilder0.equals((Object) strBuilder_StrBuilderTokenizer0);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("");
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher((char[]) null);
      int int0 = strBuilder0.indexOf(strMatcher0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer1 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer1.clone();
      // Undeclared exception!
      try { 
        strBuilder0.insert((-4012), object0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -4012
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.append((Object) "");
      StrBuilder strBuilder2 = strBuilder0.replaceAll('S', 'S');
      StrBuilder strBuilder3 = strBuilder0.deleteAll("");
      StrBuilder strBuilder4 = strBuilder3.append('O');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder3.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.next();
      boolean boolean0 = strBuilder0.equals((Object) "java.lang.String@0000000002O");
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.clear();
      boolean boolean0 = strBuilder1.equalsIgnoreCase(strBuilder0);
      StrBuilder strBuilder2 = strBuilder0.append((long) (-2571));
      StrBuilder strBuilder3 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadRight((Object) strBuilder3, 116, 'x');
      StrBuilder strBuilder5 = strBuilder0.appendPadding((-2571), 'x');
      StrBuilder strBuilder6 = strBuilder5.setLength(0);
      // Undeclared exception!
      try { 
        strBuilder0.delete(1437, (-2571));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-3419));
      StrBuilder strBuilder1 = strBuilder0.appendPadding((-3419), 'f');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      StrBuilder strBuilder2 = strBuilder0.deleteFirst("u");
      char[] charArray0 = new char[9];
      charArray0[0] = 'f';
      charArray0[1] = 'G';
      charArray0[2] = 'f';
      charArray0[3] = 'G';
      charArray0[4] = 'f';
      charArray0[5] = 't';
      charArray0[6] = 'f';
      charArray0[7] = 'G';
      charArray0[8] = 'f';
      strBuilder1.buffer = charArray0;
      StrBuilder strBuilder3 = strBuilder1.append('G');
      StrBuilder strBuilder4 = strBuilder1.insert(0, (double) (-3419));
      // Undeclared exception!
      try { 
        strBuilder4.insert((-387), 0.0F);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -387
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[8];
      charArray0[0] = 'L';
      charArray0[1] = '`';
      charArray0[2] = 'C';
      charArray0[3] = 'Z';
      charArray0[4] = '$';
      charArray0[5] = 'g';
      charArray0[6] = ',';
      charArray0[7] = '+';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      int int0 = strBuilder1.indexOf('C', 0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("");
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("");
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_StringMatcher0);
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("");
      int int1 = strBuilder0.indexOf('w');
      StringBuffer stringBuffer0 = new StringBuffer("");
      StrMatcher strMatcher2 = StrMatcher.stringMatcher("");
      StringBuffer stringBuffer1 = stringBuffer0.append(true);
      StringBuffer stringBuffer2 = stringBuffer0.append((Object) strMatcher_StringMatcher0);
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder2 = strBuilder1.append((Object) stringBuffer1);
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadRight(0, (-1), 'm');
      String string0 = strBuilder1.rightString((-1));
      boolean boolean0 = strBuilder1.equalsIgnoreCase(strBuilder0);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(116);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("G38");
      StrBuilder strBuilder2 = strBuilder1.clear();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("G38", 0, 3);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-56);
      char char0 = 'S';
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((Object) "", (-56), 'S');
      // Undeclared exception!
      try { 
        strBuilder0.insert((-56), true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -56
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      int int0 = 97;
      StrBuilder strBuilder0 = new StrBuilder(97);
      long long0 = 0L;
      String string0 = "";
      // Undeclared exception!
      try { 
        strBuilder0.insert(97, "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 97
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      int int0 = (-1);
      StrBuilder strBuilder0 = new StrBuilder((-1));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray((-1233), (-1233));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1233
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.awt.printerjob");
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1175), (long) (-1175));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1175
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      int int0 = (-151);
      StrBuilder strBuilder0 = new StrBuilder((-151));
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int1 = strBuilder_StrBuilderReader0.read();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      int int2 = strBuilder1.length();
      char char0 = 'G';
      String string0 = "XA~Z|MRV*N";
      StringBuffer stringBuffer0 = new StringBuffer("XA~Z|MRV*N");
      StringBuffer stringBuffer1 = stringBuffer0.insert(1, (CharSequence) "XA~Z|MRV*N");
      StringBuffer stringBuffer2 = stringBuffer0.insert(0, (double) (-1));
      int int3 = 880;
      int int4 = strBuilder_StrBuilderReader0.read();
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, (-1295), 880);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2504));
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      char[] charArray0 = new char[9];
      charArray0[0] = '(';
      charArray0[1] = '3';
      charArray0[2] = '\\';
      charArray0[3] = '+';
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "");
      charArray0[4] = 'C';
      charArray0[5] = ')';
      charArray0[6] = '.';
      charArray0[7] = '`';
      charArray0[8] = 'f';
      // Undeclared exception!
      try { 
        strBuilder0.getChars((-2504), (-2504), charArray0, 2607);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2504
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[4];
      charArray0[0] = ';';
      charArray0[1] = 'l';
      int int0 = strBuilder_StrBuilderReader0.read();
      charArray0[2] = 'w';
      strBuilder_StrBuilderReader0.mark((-3605));
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, (-1), 2334);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) strBuilder0;
      objectArray0[3] = (Object) strBuilder0;
      objectArray0[4] = (Object) strBuilder0;
      objectArray0[5] = (Object) strBuilder0;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "d9yN&!o0J$D7\"");
      StrBuilder strBuilder2 = new StrBuilder(57);
      StrBuilder strBuilder3 = strBuilder2.append(strBuilder0);
      boolean boolean0 = strBuilder0.equals(strBuilder2);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      StrBuilder strBuilder4 = strBuilder1.appendFixedWidthPadLeft(object0, 1, ')');
      StrBuilder strBuilder5 = strBuilder1.setNewLineText("d9yN&!o0J$D7\"");
      StrBuilder strBuilder6 = strBuilder3.append(57);
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      int int0 = strBuilder1.indexOf(strMatcher0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      int int1 = strBuilder_StrBuilderReader0.read();
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      StrBuilder strBuilder1 = strBuilder0.append((StringBuffer) null);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      String string0 = strBuilder_StrBuilderTokenizer0.nextToken();
      StrBuilder strBuilder2 = strBuilder1.appendNull();
      StrBuilder strBuilder3 = strBuilder2.clear();
      boolean boolean0 = strBuilder1.equals(object0);
      StrBuilder strBuilder4 = strBuilder0.appendNewLine();
      StrBuilder strBuilder5 = strBuilder4.replaceFirst("", "Invalid offset: ");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      StrBuilder strBuilder6 = strBuilder1.trim();
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrBuilder strBuilder7 = strBuilder6.append('');
      StrBuilder strBuilder8 = strBuilder2.replaceAll(strMatcher0, "Invalid offset: ");
      char[] charArray0 = strBuilder6.toCharArray(0, 0);
      StrBuilder strBuilder9 = strBuilder3.deleteFirst('j');
      StrBuilder strBuilder10 = strBuilder1.insert(0, (Object) null);
      int int0 = strBuilder3.indexOf(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      String string0 = "Invalid length: ";
      StrBuilder strBuilder0 = new StrBuilder("Invalid length: ");
      int int0 = 9;
      char char0 = strBuilder0.charAt(9);
      strBuilder0.validateIndex(9);
      long long0 = (-1L);
      String string1 = "<+Qc";
      StrBuilder strBuilder1 = strBuilder0.deleteAll("<+Qc");
      char[] charArray0 = new char[4];
      charArray0[0] = 'e';
      charArray0[1] = 'e';
      charArray0[2] = 'e';
      charArray0[3] = 'e';
      // Undeclared exception!
      try { 
        strBuilder1.append(charArray0, 9, 9);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 9
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.charAt(173);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 173
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "";
      StrBuilder strBuilder1 = strBuilder0.setNullText("");
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) "";
      objectArray0[1] = (Object) "";
      objectArray0[2] = (Object) strBuilder0;
      objectArray0[3] = (Object) strBuilder0;
      objectArray0[4] = (Object) "";
      objectArray0[5] = (Object) strBuilder0;
      objectArray0[6] = (Object) strBuilder0;
      StrBuilder strBuilder2 = new StrBuilder("");
      StrBuilder strBuilder3 = strBuilder1.append(objectArray0[0]);
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance();
      StrBuilder strBuilder4 = strBuilder3.appendWithSeparators((Iterator) strTokenizer0, "eJ%-");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      objectArray0[7] = object0;
      StrBuilder strBuilder5 = strBuilder1.appendWithSeparators(objectArray0, "");
      char[] charArray0 = new char[1];
      charArray0[0] = 'Z';
      strBuilder5.buffer = charArray0;
      // Undeclared exception!
      try { 
        strBuilder0.toString();
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      int int0 = 1608;
      StrBuilder strBuilder0 = new StrBuilder(1608);
      int int1 = 2125;
      StringBuffer stringBuffer0 = new StringBuffer("java.vm.name");
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 2125, (-117));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      String string0 = "A N=0vXm,";
      char[] charArray0 = new char[7];
      charArray0[0] = 'x';
      charArray0[1] = 'y';
      charArray0[2] = '0';
      charArray0[3] = 'f';
      charArray0[4] = 'r';
      charArray0[5] = '<';
      charArray0[6] = 'k';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0);
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("A N=0vXm,", "U;hr]#$+g<rnDmD|;");
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read((char[]) null, 483, 483);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(829);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance("user.country");
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, (String) null);
      StrBuilder strBuilder2 = strBuilder0.replaceFirst("R1\"", "R1\"");
      strBuilder_StrBuilderReader0.mark(432);
      strBuilder_StrBuilderReader0.mark(829);
      StrBuilder strBuilder3 = strBuilder0.replaceAll('Q', 'Q');
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      int int0 = 114;
      StrBuilder strBuilder0 = new StrBuilder(114);
      StrBuilder strBuilder1 = strBuilder0.replaceAll("HCa$)`", "length must be valid");
      StrBuilder strBuilder2 = strBuilder1.replaceFirst((String) null, "1`gYa,&PgnQvk?'m");
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex(101);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 101
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray((-207), (-207));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -207
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2188));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      // Undeclared exception!
      try { 
        strBuilder0.substring((-2188), (-116));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2188
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      String string0 = strBuilder0.midString(0, 3629);
      // Undeclared exception!
      try { 
        strBuilder0.delete(3629, 5);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1));
      int int0 = strBuilder0.length();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      char[] charArray0 = new char[2];
      charArray0[0] = '|';
      charArray0[1] = ']';
      char[] charArray1 = strBuilder0.getChars(charArray0);
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray1, (-1764), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      char char0 = '&';
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrBuilder strBuilder2 = strBuilder1.deleteAll('&');
      StrBuilder strBuilder3 = strBuilder2.append(false);
      int int0 = 102;
      StrBuilder strBuilder4 = strBuilder2.deleteFirst('&');
      // Undeclared exception!
      try { 
        strBuilder3.validateRange(102, 102);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 999;
      char[] charArray0 = new char[2];
      charArray0[0] = '[';
      charArray0[1] = 'b';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 1882, 1882);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 1882
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      int int0 = (-661);
      StrBuilder strBuilder0 = new StrBuilder((-661));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("u[0yn-3H");
      StrBuilder strBuilder1 = strBuilder0.replaceAll("u[0yn-3H", "u[0yn-3H");
      boolean boolean0 = strBuilder0.equals(strBuilder1);
      StringBuffer stringBuffer0 = new StringBuffer("u[0yn-3H");
      int int1 = 0;
      // Undeclared exception!
      try { 
        stringBuffer0.append((CharSequence) "u[0yn-3H", 0, (-586));
      } catch(IndexOutOfBoundsException e) {
         //
         // start 0, end -586, s.length() 8
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.getNewLineText();
      int int0 = 5;
      char[] charArray0 = new char[1];
      charArray0[0] = 'f';
      // Undeclared exception!
      try { 
        strBuilder0.insert(5, charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 5
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("length must be valid");
      String string0 = strBuilder0.midString(1360, 0);
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("length must be valid");
      StrBuilder strBuilder1 = strBuilder0.replace(strMatcher0, "length must be valid", 0, 492, 0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(3376);
      strBuilder_StrBuilderWriter0.flush();
      StrBuilder strBuilder2 = strBuilder0.deleteAll(strMatcher0);
      StrBuilder strBuilder3 = strBuilder1.append((long) 492);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 3376, 0);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("{I}>s ");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher1 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterString("|v)|wXLGREPI]JR");
      StrTokenizer strTokenizer1 = strBuilder_StrBuilderTokenizer0.setIgnoreEmptyTokens(false);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher("|v)|wXLGREPI]JR");
      StrMatcher strMatcher3 = StrMatcher.stringMatcher("vo8;lHK");
      StrBuilder strBuilder2 = strBuilder0.replace(0, 1198, "");
      StrBuilder strBuilder3 = strBuilder0.replaceFirst(strMatcher1, "");
      String string0 = strBuilder0.toString();
      StrBuilder strBuilder4 = strBuilder0.insert(0, (float) 0);
      StrBuilder strBuilder5 = strBuilder4.replaceFirst(strMatcher1, "[{^g>N5!$X:Lf\"Wm~");
      int int0 = strBuilder4.lastIndexOf('V', 0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder5.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip((-1543L));
      StrBuilder strBuilder6 = strBuilder0.append(strBuilder5);
      StrBuilder strBuilder7 = strBuilder2.replaceAll("", "8Yuw&eIr)g#e9J[E&J}");
      int int1 = strBuilder4.indexOf("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", 1198);
      StrBuilder strBuilder8 = strBuilder6.deleteFirst(strMatcher3);
      boolean boolean0 = strBuilder0.contains("@4=V(r*jVUQW");
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Z4&4f3");
      int int0 = strBuilder0.lastIndexOf('3', (-446));
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("]A^KvCE1:~H\"i");
      StrBuilder strBuilder1 = new StrBuilder();
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("]A^KvCE1:~H\"i");
      int int0 = strBuilder1.lastIndexOf((StrMatcher) strMatcher_StringMatcher0);
      StrBuilder strBuilder2 = strBuilder1.ensureCapacity(0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      char[] charArray0 = new char[7];
      charArray0[0] = '/';
      charArray0[1] = '.';
      charArray0[2] = '+';
      charArray0[3] = 'U';
      charArray0[4] = 'K';
      charArray0[5] = 'l';
      charArray0[6] = '!';
      strBuilder_StrBuilderWriter0.write(charArray0);
      boolean boolean0 = strBuilder2.contains("Invalid offset: ");
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("2j_");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterString("2j_");
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder strBuilder1 = strBuilder0.append((StrBuilder) null);
      StrBuilder strBuilder2 = strBuilder0.replaceAll("2j_", "");
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[5];
      charArray0[0] = ':';
      charArray0[1] = 'V';
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 0);
      charArray0[2] = 'r';
      charArray0[3] = '7';
      charArray0[4] = '7';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0, 2, 0);
      StrBuilder strBuilder2 = strBuilder0.replace(0, 108, "java.class.path");
      strBuilder0.size = 4;
      int int1 = strBuilder0.validateRange(0, 4);
      int int2 = strBuilder1.capacity();
      StrTokenizer strTokenizer0 = strBuilder1.asTokenizer();
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      int int0 = strBuilder1.indexOf(strMatcher0);
      StrBuilder strBuilder2 = new StrBuilder();
      StrBuilder strBuilder3 = strBuilder2.append((char[]) null);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      Writer writer0 = strBuilder_StrBuilderWriter0.append('?');
      strBuilder_StrBuilderWriter0.write(1);
      StrBuilder strBuilder4 = strBuilder0.replaceAll('+', '+');
      String string0 = "NoPo88TG`AqEf";
      // Undeclared exception!
      try { 
        strBuilder1.replace(1, 0, "NoPo88TG`AqEf");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Windows NT");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.charMatcher('R');
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      // Undeclared exception!
      try { 
        strBuilder0.insert(1403, (-758.4099F));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1403
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2182));
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(912);
      char[] charArray0 = new char[4];
      charArray0[0] = 'r';
      charArray0[1] = 'Y';
      charArray0[2] = 'N';
      charArray0[3] = 's';
      // Undeclared exception!
      try { 
        strBuilder0.insert(912, charArray0, 2128, 2128);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 912
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      int int0 = 2252;
      StrBuilder strBuilder0 = new StrBuilder(2252);
      char[] charArray0 = new char[1];
      charArray0[0] = '@';
      // Undeclared exception!
      try { 
        strBuilder0.insert(2252, charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2252
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = 'i';
      StrBuilder strBuilder1 = strBuilder0.append('i');
      StrBuilder strBuilder2 = strBuilder0.insert(0, true);
      StrBuilder strBuilder3 = strBuilder2.append(strBuilder0);
      int int0 = 1084;
      // Undeclared exception!
      try { 
        strBuilder3.insert(1084, 0.0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1084
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Windows NT");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder strBuilder1 = strBuilder0.replaceAll("Windows NT", "Windows NT");
      StrBuilder strBuilder2 = strBuilder0.setLength(183);
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("Windows NT");
      StrBuilder strBuilder3 = strBuilder0.deleteAll(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      int int0 = 923;
      int int1 = (-433);
      // Undeclared exception!
      try { 
        strBuilder0.insert(923, (-433));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 923
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("h");
      StrBuilder strBuilder1 = strBuilder0.reverse();
      Writer writer0 = strBuilder0.asWriter();
      boolean boolean0 = strBuilder0.endsWith("@");
      StrBuilder strBuilder2 = strBuilder0.ensureCapacity(0);
      String string0 = strBuilder2.substring(0, 0);
      String string1 = strBuilder2.getNewLineText();
      char[] charArray0 = new char[7];
      charArray0[0] = 'B';
      charArray0[1] = '';
      charArray0[2] = '{';
      charArray0[3] = 'z';
      charArray0[4] = '-';
      charArray0[5] = 'X';
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.next();
      StrBuilder strBuilder3 = strBuilder1.insert(0, (Object) "h");
      charArray0[6] = 'Q';
      char[] charArray1 = strBuilder1.getChars(charArray0);
      StrBuilder strBuilder4 = strBuilder3.insert(0, '+');
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      String string0 = "org.apache.commons.lang.text.StrBuilder$StrBuilderReader";
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.next();
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft((Object) "org.apache.commons.lang.text.StrBuilder$StrBuilderReaderorg.apache.commons.lang.text.StrBuilder$StrBuilderReader", 0, 'L');
      StringBuffer stringBuffer1 = strBuilder2.toStringBuffer();
      StrBuilder strBuilder3 = strBuilder0.setNullText("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      int int0 = strBuilder1.indexOf((StrMatcher) strMatcher_NoMatcher0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      char[] charArray0 = new char[3];
      StrBuilder strBuilder4 = strBuilder1.setNullText("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      StrBuilder strBuilder5 = strBuilder1.appendFixedWidthPadLeft((-1), 2414, 'L');
      charArray0[0] = 'L';
      int int1 = strBuilder_StrBuilderReader0.read(charArray0);
      charArray0[1] = 'L';
      charArray0[2] = ' ';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 0, (-4620));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      int int0 = strBuilder0.hashCode();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[2];
      charArray0[0] = 'S';
      charArray0[1] = '|';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 115, (-3921));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      int int0 = (-4395);
      int int1 = 2;
      char char0 = 'g';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(2, (-4395), 'g');
      int int2 = (-2409);
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      String string0 = "h[7T";
      StrBuilder strBuilder2 = strBuilder1.replaceFirst((StrMatcher) strMatcher_NoMatcher0, "h[7T");
      StrBuilder strBuilder3 = strBuilder0.append((char[]) null, (-4395), (-2409));
      String string1 = strBuilder0.midString(2, 2);
      StrBuilder strBuilder4 = strBuilder0.append((-2806.17));
      StrBuilder strBuilder5 = strBuilder4.append(false);
      StrBuilder strBuilder6 = strBuilder1.deleteFirst((String) null);
      // Undeclared exception!
      try { 
        strBuilder0.delete((-2409), 2);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2409
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }
}
