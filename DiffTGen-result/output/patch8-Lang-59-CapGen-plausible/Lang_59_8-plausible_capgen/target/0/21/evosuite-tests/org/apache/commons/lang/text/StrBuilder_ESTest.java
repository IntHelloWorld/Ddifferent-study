/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 28 18:44:33 GMT 2020
 */

package org.apache.commons.lang.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.Writer;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import org.apache.commons.lang.text.StrBuilder;
import org.apache.commons.lang.text.StrMatcher;
import org.apache.commons.lang.text.StrTokenizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StrBuilder_ESTest extends StrBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft(102, 102, '@');
      char[] charArray0 = new char[6];
      charArray0[0] = 'k';
      charArray0[1] = 'Q';
      charArray0[2] = '@';
      charArray0[3] = '@';
      charArray0[4] = ',';
      charArray0[5] = '@';
      StrBuilder strBuilder3 = strBuilder1.append(charArray0, 0, 0);
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      char[] charArray1 = new char[5];
      charArray1[0] = '@';
      charArray1[1] = 'k';
      charArray1[2] = '@';
      charArray1[3] = '@';
      charArray1[4] = 'k';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray1);
      int int0 = strBuilder2.indexOf(strMatcher0);
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadRight((Object) "", 0, 'k');
      char[] charArray2 = new char[5];
      charArray2[0] = 'k';
      charArray2[1] = '@';
      charArray2[2] = '@';
      charArray2[3] = '@';
      charArray2[4] = '@';
      strBuilder0.getChars(102, 102, charArray2, 0);
      StrBuilder strBuilder5 = strBuilder2.trim();
      StrBuilder strBuilder6 = strBuilder5.appendNewLine();
      StrBuilder strBuilder7 = strBuilder5.append(charArray1);
      int int1 = strBuilder3.indexOf("", (-193));
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("dCmNpB");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[9];
      charArray0[0] = 'S';
      charArray0[2] = 'w';
      charArray0[3] = 'Q';
      strBuilder_StrBuilderReader0.mark((-1526));
      charArray0[4] = '#';
      int int0 = 0;
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 0, 115);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft(102, 102, '@');
      char[] charArray0 = new char[6];
      charArray0[0] = 'k';
      charArray0[1] = 'Q';
      charArray0[2] = '@';
      charArray0[3] = '@';
      charArray0[4] = ',';
      charArray0[5] = '@';
      StrBuilder strBuilder3 = strBuilder1.append(charArray0, 0, 0);
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      char[] charArray1 = new char[5];
      charArray1[0] = '@';
      charArray1[1] = 'k';
      charArray1[2] = '@';
      charArray1[3] = '@';
      charArray1[4] = 'k';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray1);
      int int0 = strBuilder2.indexOf(strMatcher0);
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadRight((Object) "", 0, 'k');
      StrBuilder strBuilder5 = strBuilder4.deleteFirst(strMatcher1);
      char[] charArray2 = new char[5];
      charArray2[0] = 'k';
      charArray2[1] = '@';
      charArray2[2] = '@';
      charArray2[3] = '@';
      charArray2[4] = '@';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(102, 102, charArray2, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 102
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("dCmNpB");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[9];
      charArray0[0] = 'S';
      charArray0[2] = 'w';
      charArray0[3] = 'Q';
      charArray0[4] = '#';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, (int) '#', (int) '#');
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replace(0, 0, "u>>PhAh*<z1ZTT<}");
      boolean boolean0 = strBuilder0.equals((Object) "3! xFzNoK5n");
      boolean boolean1 = strBuilder0.endsWith("X)G!AT<rlv9%/ft`");
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[1];
      StrBuilder strBuilder1 = strBuilder0.deleteAll((String) null);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      boolean boolean0 = strBuilder1.contains(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft(5, 5, ':');
      charArray0[0] = 'C';
      strBuilder0.buffer = charArray0;
      int int0 = strBuilder0.size();
      StrBuilder strBuilder3 = strBuilder0.appendNull();
      StrBuilder strBuilder4 = strBuilder3.replaceFirst((String) null, (String) null);
      // Undeclared exception!
      try { 
        strBuilder3.leftString(5);
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft(102, 102, '@');
      char[] charArray0 = new char[6];
      charArray0[0] = 'k';
      charArray0[1] = 'Q';
      charArray0[2] = '@';
      charArray0[3] = '@';
      charArray0[4] = ',';
      charArray0[5] = '@';
      StrBuilder strBuilder3 = strBuilder1.append(charArray0, 0, 0);
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      char[] charArray1 = new char[5];
      charArray1[0] = '@';
      charArray1[1] = 'k';
      charArray1[2] = '@';
      charArray1[3] = '@';
      charArray1[4] = 'k';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray1);
      int int0 = strBuilder2.indexOf(strMatcher0);
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadRight((Object) "", 0, 'k');
      char[] charArray2 = new char[5];
      charArray2[0] = 'k';
      charArray2[1] = '@';
      charArray2[2] = '@';
      charArray2[3] = '@';
      charArray2[4] = '@';
      strBuilder0.getChars(102, 102, charArray2, 0);
      StrBuilder strBuilder5 = strBuilder2.trim();
      StrBuilder strBuilder6 = strBuilder5.appendNewLine();
      boolean boolean0 = strBuilder2.contains(',');
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-914));
      StrBuilder strBuilder1 = new StrBuilder(">-E5vW)Cjl");
      boolean boolean0 = strBuilder0.equals(strBuilder1);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0, 635);
      Iterator<String> iterator0 = linkedList0.iterator();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(iterator0, "mis\"B3k$");
      boolean boolean0 = linkedList0.add("OkKJMH2");
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('t');
      int int1 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_CharMatcher0, 635);
      char[] charArray0 = new char[8];
      charArray0[0] = '[';
      charArray0[1] = 't';
      charArray0[2] = 't';
      charArray0[3] = 't';
      charArray0[4] = 't';
      charArray0[5] = 't';
      charArray0[6] = 't';
      charArray0[7] = ',';
      StrBuilder strBuilder2 = strBuilder1.append(charArray0);
      StrBuilder strBuilder3 = strBuilder1.deleteAll('t');
      boolean boolean1 = strBuilder3.endsWith("4F0_2sx-Nk8[z");
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.appendPadding(0, ';');
      StrBuilder strBuilder2 = strBuilder0.setNewLineText("");
      StrBuilder strBuilder3 = strBuilder2.append((char[]) null);
      char[] charArray0 = strBuilder0.toCharArray(0, 0);
      StrBuilder strBuilder4 = strBuilder1.append(1213L);
      StrBuilder strBuilder5 = strBuilder0.append(0L);
      strBuilder0.buffer = charArray0;
      int int1 = strBuilder1.validateRange(0, 0);
      // Undeclared exception!
      try { 
        strBuilder2.replaceFirst("Irix", "<q");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2);
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("org.apache.commons.lang.SystemUtils");
      char[] charArray0 = new char[2];
      charArray0[0] = '.';
      charArray0[1] = 'p';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      char[] charArray1 = new char[0];
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray1);
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_StringMatcher0);
      int int1 = strBuilder0.indexOf((String) null, 2);
      String string0 = strBuilder0.getNullText();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) "org.apache.commons.lang.SystemUtils", 4, '.');
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, (-1), 518);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      char[] charArray0 = new char[3];
      charArray0[0] = '<';
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      charArray0[1] = '9';
      charArray0[2] = 'c';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst((StrMatcher) strMatcher_StringMatcher0);
      StrBuilder strBuilder2 = new StrBuilder(2995);
      StrBuilder strBuilder3 = strBuilder0.insert(0, 'c');
      StrBuilder strBuilder4 = strBuilder2.insert(0, (Object) strBuilder0);
      StrBuilder strBuilder5 = strBuilder4.trim();
      char[] charArray1 = new char[5];
      charArray1[0] = 'c';
      charArray1[1] = '9';
      charArray1[2] = '9';
      charArray1[3] = '9';
      charArray1[4] = '9';
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher(charArray1);
      StrBuilder strBuilder6 = strBuilder1.append(strBuilder0);
      StrMatcher strMatcher3 = StrMatcher.charMatcher('3');
      StrBuilder strBuilder7 = strBuilder1.append(false);
      int int0 = strBuilder1.lastIndexOf('c', 2669);
      StrBuilder strBuilder8 = strBuilder6.insert(0, (double) 1);
      StrBuilder strBuilder9 = strBuilder5.replaceAll('9', 'c');
      StringBuffer stringBuffer0 = strBuilder7.toStringBuffer();
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('t');
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("sF^Xq?SQ@+kAL");
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight(32, 32, 'N');
      int int0 = strBuilder1.lastIndexOf("");
      boolean boolean1 = strBuilder0.startsWith("");
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      String string0 = strBuilder1.leftString(44);
      int int0 = strBuilder0.capacity();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
      char[] charArray0 = new char[2];
      charArray0[0] = 's';
      charArray0[1] = 'K';
      StrBuilder strBuilder3 = strBuilder0.append(charArray0);
      StrBuilder strBuilder4 = strBuilder3.deleteAll('s');
      StrBuilder strBuilder5 = strBuilder4.setNullText("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder4.new StrBuilderReader();
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("b");
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("");
      char[] charArray0 = new char[1];
      charArray0[0] = '=';
      char[] charArray1 = strBuilder1.getChars(charArray0);
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray(2995, 2995);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft(102, 102, '@');
      char[] charArray0 = new char[6];
      charArray0[0] = 'k';
      charArray0[1] = 'Q';
      charArray0[2] = '@';
      charArray0[3] = '@';
      charArray0[4] = ',';
      charArray0[5] = '@';
      StrBuilder strBuilder3 = strBuilder1.append(charArray0, 0, 0);
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      char[] charArray1 = new char[5];
      charArray1[0] = '@';
      charArray1[1] = 'k';
      charArray1[2] = '@';
      charArray1[3] = '@';
      charArray1[4] = 'k';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray1);
      int int0 = strBuilder2.indexOf(strMatcher0);
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadRight((Object) "", 0, 'k');
      char[] charArray2 = new char[5];
      charArray2[0] = 'k';
      charArray2[1] = '@';
      charArray2[2] = '@';
      charArray2[3] = '@';
      charArray2[4] = '@';
      strBuilder0.getChars(102, 102, charArray2, 0);
      StrBuilder strBuilder5 = strBuilder2.trim();
      StrBuilder strBuilder6 = strBuilder5.appendNewLine();
      int int1 = strBuilder2.indexOf('k', (-1));
      String string0 = strBuilder2.getNullText();
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.appendPadding(0, ';');
      StrBuilder strBuilder2 = strBuilder0.setNewLineText("");
      StrBuilder strBuilder3 = strBuilder2.append((char[]) null);
      StrBuilder strBuilder4 = strBuilder1.append((StringBuffer) null, 0, (-2252));
      char[] charArray0 = strBuilder4.toCharArray(0, 0);
      StrBuilder strBuilder5 = strBuilder1.append(1213L);
      StrBuilder strBuilder6 = strBuilder4.append(0L);
      strBuilder0.buffer = charArray0;
      StrBuilder strBuilder7 = strBuilder6.setLength(0);
      int int1 = strBuilder1.validateRange(0, 0);
      StrBuilder strBuilder8 = strBuilder2.replaceFirst("Irix", "<q");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder6.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoreEmptyTokens(false);
      StrBuilder strBuilder9 = strBuilder4.deleteAll('\\');
      StrBuilder strBuilder10 = strBuilder6.appendWithSeparators((Iterator) strTokenizer0, "org.apache.commons.lang.text.StrMatcher$StringMatcher");
      StrBuilder strBuilder11 = strBuilder3.insert(0, 855);
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      boolean boolean0 = strBuilder6.contains(strMatcher0);
      Writer writer0 = strBuilder2.asWriter();
      // Undeclared exception!
      try { 
        strBuilder0.insert(744, false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 744
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-272));
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("', is neither of type Map.Entry nor an Array", "UXtnI");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
      StrBuilder strBuilder2 = strBuilder0.setNewLineText("Invalid offset: ");
      StrBuilder strBuilder3 = strBuilder0.append((-340.99274F));
      StrBuilder strBuilder4 = strBuilder3.minimizeCapacity();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder4.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      StringBuffer stringBuffer0 = new StringBuffer("-340.99274");
      int int0 = (-2035);
      char[] charArray0 = new char[6];
      charArray0[0] = '@';
      charArray0[1] = '^';
      charArray0[2] = 'r';
      charArray0[3] = 'v';
      charArray0[4] = 'x';
      charArray0[5] = 'y';
      // Undeclared exception!
      try { 
        stringBuffer0.append(charArray0, (-272), 86);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append("", 0, 0);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("");
      StrBuilder strBuilder2 = strBuilder1.deleteAll(strMatcher0);
      char[] charArray0 = new char[5];
      charArray0[0] = 's';
      charArray0[1] = '`';
      charArray0[2] = '5';
      charArray0[3] = 'X';
      charArray0[4] = 'a';
      strBuilder2.buffer = charArray0;
      StrBuilder strBuilder3 = strBuilder2.append((double) 0);
      StrBuilder strBuilder4 = strBuilder2.deleteAll("");
      StrBuilder strBuilder5 = strBuilder4.setLength(0);
      int int0 = strBuilder4.lastIndexOf(strMatcher0, 0);
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("mDwhUoAEx{3 3\"G;");
      StrBuilder strBuilder6 = strBuilder3.replaceFirst("", "NK2");
      String string0 = strBuilder2.midString(0, 72);
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(72);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 72
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("p");
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("p");
      char[] charArray0 = strBuilder0.getChars((char[]) null);
      StrBuilder strBuilder2 = strBuilder0.setNewLineText("p");
      StrBuilder strBuilder3 = strBuilder0.setNewLineText("Linux");
      int int0 = strBuilder0.size();
      String string0 = strBuilder0.getNewLineText();
      StrBuilder strBuilder4 = strBuilder0.replaceFirst("", "length must be valid");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset("Linux");
      StrBuilder strBuilder5 = strBuilder4.appendFixedWidthPadLeft(object0, 0, '!');
      StrBuilder strBuilder6 = strBuilder2.append((Object) "length must be valid");
      int int1 = strBuilder5.indexOf("7tEh* 4WXY");
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.size = 100;
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("");
      // Undeclared exception!
      try { 
        strBuilder0.insert(57, (double) 57);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[5];
      int int0 = strBuilder_StrBuilderReader0.read(charArray0);
      charArray0[0] = '5';
      charArray0[1] = '$';
      charArray0[2] = 'I';
      charArray0[3] = '5';
      char char0 = '^';
      charArray0[4] = '^';
      int int1 = strBuilder_StrBuilderReader0.read(charArray0);
      long long0 = strBuilder_StrBuilderReader0.skip((-1));
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read((CharBuffer) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      int int0 = (-522);
      StrBuilder strBuilder0 = new StrBuilder((-522));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int1 = strBuilder_StrBuilderReader0.read();
      long long0 = strBuilder_StrBuilderReader0.skip(1070L);
      char[] charArray0 = new char[2];
      charArray0[0] = 'O';
      charArray0[1] = 'F';
      strBuilder_StrBuilderReader0.reset();
      int int2 = strBuilder_StrBuilderReader0.read(charArray0);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, (-522), (-522));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("dCmNpB");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[5];
      charArray0[0] = 'S';
      charArray0[2] = 'w';
      charArray0[3] = 'Q';
      charArray0[4] = '#';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0, 0, 0);
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('L', '`');
      int int1 = strBuilder0.lastIndexOf('7', 32);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrBuilder strBuilder2 = strBuilder1.minimizeCapacity();
      StringBuffer stringBuffer0 = new StringBuffer(0);
      StrBuilder strBuilder3 = strBuilder2.append(stringBuffer0);
      StrBuilder strBuilder4 = strBuilder3.clear();
      char char0 = '.';
      int int0 = strBuilder0.indexOf('.');
      StrBuilder strBuilder5 = new StrBuilder();
      StringBuffer stringBuffer1 = stringBuffer0.append('');
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder5, (-1), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Uxb>Vm%w7_ K~%Ex");
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("Uxb>Vm%w7_ K~%Ex");
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("Uxb>Vm%w7_ K~%Ex");
      char[] charArray0 = new char[1];
      charArray0[0] = '{';
      int int0 = strMatcher0.isMatch(charArray0, 1573, 1573, (-562));
      StrMatcher strMatcher2 = StrMatcher.charMatcher('{');
      int int1 = strBuilder0.lastIndexOf(strMatcher0);
      String string0 = strBuilder0.leftString((-5397));
      StrBuilder strBuilder1 = strBuilder0.setNullText("");
      StrBuilder strBuilder2 = strBuilder0.appendNull();
      int int2 = strBuilder2.validateRange(0, 3821);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      String string0 = "yd";
      StrBuilder strBuilder0 = new StrBuilder("yd");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[5];
      charArray0[0] = '5';
      charArray0[1] = '$';
      charArray0[2] = 'I';
      charArray0[3] = '5';
      char char0 = '^';
      charArray0[4] = '^';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read((CharBuffer) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft(102, 102, '@');
      char[] charArray0 = new char[6];
      charArray0[0] = 'k';
      charArray0[2] = 'Q';
      charArray0[2] = '@';
      charArray0[3] = '@';
      charArray0[4] = '&';
      charArray0[5] = '@';
      StrBuilder strBuilder3 = strBuilder1.append(charArray0, 0, 0);
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('@');
      char[] charArray1 = new char[5];
      charArray1[0] = '@';
      charArray1[1] = 'k';
      charArray1[2] = '@';
      charArray0[4] = '@';
      charArray1[4] = 'k';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray1);
      int int0 = strBuilder2.indexOf((StrMatcher) strMatcher_CharMatcher0);
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadRight((Object) "", 0, 'k');
      char[] charArray2 = new char[5];
      charArray2[0] = 'k';
      charArray2[1] = '@';
      charArray2[2] = '@';
      charArray2[3] = '@';
      charArray2[4] = '@';
      strBuilder0.getChars(102, 102, charArray2, 0);
      StrBuilder strBuilder5 = strBuilder2.trim();
      StrBuilder strBuilder6 = strBuilder5.appendNewLine();
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("WwJ?'2");
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrBuilder strBuilder2 = strBuilder1.reverse();
      char[] charArray0 = new char[0];
      char[] charArray1 = strBuilder1.getChars(charArray0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.indexOf((String) null);
      StrBuilder strBuilder1 = strBuilder0.append((String) null, (-4169), (-4169));
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      LinkedList<Integer> linkedList1 = new LinkedList<Integer>(linkedList0);
      Integer integer0 = new Integer(2696);
      boolean boolean0 = linkedList1.offerFirst(integer0);
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Collection) linkedList1, (String) null);
      boolean boolean1 = strBuilder1.startsWith((String) null);
      StrBuilder strBuilder3 = strBuilder2.appendNull();
      StrBuilder strBuilder4 = strBuilder2.append(true);
      char[] charArray0 = new char[5];
      charArray0[0] = '0';
      charArray0[1] = '/';
      charArray0[2] = '4';
      charArray0[3] = 'W';
      charArray0[4] = 'z';
      // Undeclared exception!
      try { 
        strBuilder3.insert((-4169), charArray0, 2007, (-4169));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -4169
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      int int0 = 1186;
      StrBuilder strBuilder0 = new StrBuilder(1186);
      Reader reader0 = strBuilder0.asReader();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = null;
      strBuilder_StrBuilderReader0.mark(1186);
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) reader0;
      objectArray0[1] = (Object) reader0;
      objectArray0[2] = (Object) reader0;
      objectArray0[3] = (Object) strBuilder0;
      objectArray0[4] = (Object) strBuilder0;
      objectArray0[5] = (Object) strBuilder0;
      objectArray0[7] = (Object) strBuilder0;
      objectArray0[8] = (Object) strBuilder0;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "");
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read((char[]) null, (-2216), 980);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(4887);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder strBuilder1 = strBuilder0.append(true);
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) strBuilder_StrBuilderTokenizer0;
      Object object0 = new Object();
      objectArray0[3] = object0;
      objectArray0[4] = (Object) strBuilder1;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer1 = (StrBuilder.StrBuilderTokenizer)strBuilder_StrBuilderTokenizer0.clone();
      objectArray0[5] = (Object) strBuilder_StrBuilderTokenizer1;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer2 = (StrBuilder.StrBuilderTokenizer)strBuilder_StrBuilderTokenizer1.setIgnoredChar('~');
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators(objectArray0, "S sCS=6QO~");
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      String string1 = strBuilder0.getNullText();
      StrBuilder strBuilder3 = strBuilder1.appendWithSeparators((Iterator) strBuilder_StrBuilderTokenizer0, "D\"G7p5./");
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex(4887);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 4887
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      char[] charArray0 = new char[7];
      charArray0[0] = 'O';
      charArray0[1] = 'O';
      charArray0[2] = 'S';
      charArray0[3] = 'O';
      charArray0[4] = 'O';
      charArray0[5] = 'O';
      charArray0[6] = 'O';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.append((Object) strMatcher_TrimMatcher0);
      StrMatcher strMatcher1 = StrMatcher.charMatcher('O');
      int int0 = (-1931);
      StrBuilder strBuilder2 = new StrBuilder('O');
      // Undeclared exception!
      try { 
        strBuilder1.append(charArray0, 2313, 1980);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 1980
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.vm.specification.version");
      char[] charArray0 = new char[1];
      charArray0[0] = 'm';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, (int) 'm', 101);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 101
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replace(0, 0, "u>>PhAh*<z1ZTT<}");
      boolean boolean0 = strBuilder0.equals((Object) "3! xFzNoK5n");
      // Undeclared exception!
      try { 
        strBuilder1.validateRange(0, (-2772));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("dCmNpB");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[5];
      charArray0[0] = 'S';
      charArray0[0] = '7';
      charArray0[2] = 'w';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0);
      charArray0[3] = 'w';
      charArray0[4] = '#';
      int int1 = strBuilder_StrBuilderReader0.read(charArray0, 0, 0);
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('L', '`');
      boolean boolean1 = strBuilder1.isEmpty();
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      char[] charArray0 = new char[9];
      charArray0[0] = 'Y';
      charArray0[1] = '=';
      charArray0[2] = 'y';
      charArray0[3] = 'X';
      charArray0[4] = '/';
      charArray0[5] = 'U';
      charArray0[6] = 'E';
      charArray0[7] = 'v';
      charArray0[8] = 'W';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      // Undeclared exception!
      try { 
        strBuilder1.appendFixedWidthPadRight(588, 588, 'H');
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 63
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.stringMatcher(")ob[nEyTk@{,T7]");
      char[] charArray0 = new char[0];
      StrBuilder strBuilder1 = strBuilder0.appendPadding(48, 'G');
      int int0 = strMatcher0.isMatch(charArray0, (-2558), (-2558), (-2558));
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      StrBuilder strBuilder2 = new StrBuilder(")ob[nEyTk@{,T7]");
      StrBuilder strBuilder3 = strBuilder2.deleteFirst("XE@O8<+<3#Ny[");
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadLeft((Object) strBuilder2, (-1164), '(');
      StrBuilder strBuilder5 = strBuilder4.replaceFirst(strMatcher0, "!P");
      StrBuilder strBuilder6 = strBuilder4.ensureCapacity((-1164));
      StrBuilder strBuilder7 = strBuilder0.append((double) (-1164));
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append("", 0, 0);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("");
      StrBuilder strBuilder2 = strBuilder1.deleteAll(strMatcher0);
      strBuilder0.validateIndex(0);
      char[] charArray0 = new char[5];
      charArray0[0] = 's';
      charArray0[1] = '`';
      charArray0[2] = '5';
      charArray0[3] = 'X';
      charArray0[4] = 'a';
      strBuilder2.buffer = charArray0;
      StrBuilder strBuilder3 = strBuilder2.append((double) 0);
      StrBuilder strBuilder4 = strBuilder2.deleteAll("");
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("mDwhUoAEx{3 3\"G;");
      StrBuilder strBuilder5 = strBuilder3.replaceFirst("", "NK2");
      String string0 = strBuilder2.midString(0, 72);
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(72);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 72
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      int int0 = 0;
      String string0 = strBuilder0.leftString(0);
      StrBuilder strBuilder2 = strBuilder0.append(0L);
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt((-2288));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2288
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = 'z';
      StrMatcher strMatcher0 = StrMatcher.charMatcher('z');
      int int0 = 5;
      // Undeclared exception!
      try { 
        strBuilder0.insert(5, (-3046.620018717171));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 5
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder2 = strBuilder0.append(true);
      StrBuilder strBuilder3 = strBuilder2.insert(1, '=');
      StrBuilder strBuilder4 = strBuilder2.deleteFirst("bF^");
      StrBuilder strBuilder5 = strBuilder0.deleteFirst(strMatcher0);
      char[] charArray0 = new char[6];
      charArray0[0] = '\\';
      charArray0[1] = 'A';
      charArray0[2] = '=';
      charArray0[3] = '=';
      charArray0[4] = '=';
      charArray0[5] = '=';
      strBuilder5.getChars(1, 1, charArray0, 1);
      StrBuilder strBuilder6 = strBuilder2.append("");
      StrBuilder strBuilder7 = strBuilder0.setNewLineText("");
      char[] charArray1 = new char[8];
      charArray1[0] = '=';
      charArray1[1] = '=';
      charArray1[2] = '=';
      charArray1[3] = '=';
      charArray1[4] = '=';
      charArray1[5] = 'K';
      charArray1[6] = '=';
      charArray1[7] = '=';
      // Undeclared exception!
      try { 
        strBuilder2.append(charArray1, 0, (-590));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: -590
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-2124);
      StrBuilder strBuilder1 = strBuilder0.appendPadding((-2124), '/');
      int int1 = strBuilder0.indexOf("java.specification.name");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      int int2 = 0;
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) "fCx46@EZ6ujf%tUx");
      StrBuilder strBuilder2 = strBuilder0.append('%');
      StrBuilder strBuilder3 = strBuilder0.append("fCx46@EZ6ujf%tUx");
      // Undeclared exception!
      try { 
        strBuilder2.insert(2483, true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2483
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.isEmpty();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) null, 0, 'I');
      StrBuilder strBuilder2 = strBuilder0.appendPadding((-45), 'I');
      StrBuilder strBuilder3 = strBuilder2.setNewLineText("\"zf0x`n[MHjki-)N#t");
      StrBuilder strBuilder4 = strBuilder1.append((long) 0);
      String string0 = strBuilder0.midString(0, 0);
      boolean boolean1 = strBuilder1.equalsIgnoreCase(strBuilder0);
      StrBuilder strBuilder5 = strBuilder2.append(2385);
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder5.insert((-43), charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -43
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceAll('p', 'd');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      String string0 = strBuilder1.toString();
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft((-1), (-2895), 'p');
      StrBuilder strBuilder3 = strBuilder0.append("");
      StrBuilder strBuilder4 = strBuilder2.appendFixedWidthPadLeft((Object) "", (-2895), 'L');
      StrBuilder strBuilder5 = strBuilder0.replaceFirst("Invalid offset: ", "Invalid offset: ");
      int int1 = strBuilder1.lastIndexOf('J');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("?4HSC?jTt");
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      StrBuilder strBuilder6 = strBuilder5.deleteAll(strMatcher0);
      int int2 = strBuilder5.lastIndexOf((String) null, 0);
      StrBuilder strBuilder7 = strBuilder4.deleteFirst((String) null);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(0);
      StrMatcher strMatcher0 = null;
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadLeft((Object) null, 31, '%');
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "Invalid startIndex: ";
      int int0 = 0;
      Reader reader0 = strBuilder0.asReader();
      int int1 = (-1);
      // Undeclared exception!
      try { 
        strBuilder0.append("Invalid startIndex: ", 0, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      String string0 = "g_N O8#";
      StrBuilder strBuilder0 = new StrBuilder("g_N O8#");
      int int0 = strBuilder0.length();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrBuilder strBuilder1 = strBuilder0.append((Object) "g_N O8#");
      char[] charArray0 = new char[2];
      charArray0[0] = '>';
      char char0 = 'I';
      // Undeclared exception!
      try { 
        strBuilder1.substring((-3932), (-711));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3932
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 521;
      StrBuilder strBuilder1 = new StrBuilder(521);
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, 0, 1366);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.clear();
      Object[] objectArray0 = new Object[0];
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators(objectArray0, "");
      boolean boolean0 = strBuilder1.contains((StrMatcher) null);
      StrBuilder strBuilder3 = strBuilder0.replaceAll("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", (String) null);
      Reader reader0 = strBuilder3.asReader();
      StrBuilder strBuilder4 = strBuilder0.replaceFirst((StrMatcher) null, "BYSc*!qwRhnz+P");
      StrBuilder strBuilder5 = strBuilder1.append(2);
      String string0 = strBuilder4.midString(1974, 1974);
      char[] charArray0 = strBuilder0.toCharArray();
      StrBuilder strBuilder6 = strBuilder1.replaceFirst('R', 'R');
      StrBuilder strBuilder7 = strBuilder3.append((long) 1974);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder3.new StrBuilderTokenizer();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 2757, 3059);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(4);
      char[] charArray0 = new char[0];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0);
      StringBuffer stringBuffer0 = new StringBuffer(charBuffer1);
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      CharBuffer charBuffer2 = CharBuffer.allocate(0);
      int int0 = strBuilder0.validateRange(0, 0);
      StrBuilder strBuilder2 = strBuilder1.setNullText("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      StrBuilder strBuilder3 = strBuilder2.deleteFirst("");
      int int1 = strBuilder2.lastIndexOf('c', 0);
      String string0 = strBuilder2.leftString(116);
      StrBuilder strBuilder4 = strBuilder1.minimizeCapacity();
      StrBuilder strBuilder5 = strBuilder2.insert(0, "");
      boolean boolean0 = strBuilder2.equalsIgnoreCase(strBuilder4);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      int int0 = (-5580);
      StrBuilder strBuilder0 = new StrBuilder((-5580));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setEmptyTokenAsNull(true);
      char char0 = 'K';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((-5580), (-5580), 'K');
      char char1 = '@';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.remove();
      } catch(UnsupportedOperationException e) {
         //
         // remove() is unsupported
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((-388L));
      Writer writer0 = strBuilder1.asWriter();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      strBuilder_StrBuilderReader0.reset();
      int int1 = strBuilder0.indexOf('!', 0);
      StrBuilder strBuilder2 = strBuilder0.insert(0, false);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[8];
      charArray0[0] = '!';
      charArray0[1] = '!';
      charArray0[2] = '!';
      charArray0[3] = '!';
      charArray0[4] = '!';
      charArray0[5] = '!';
      charArray0[6] = '!';
      charArray0[7] = '+';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      StrBuilder strBuilder3 = strBuilder1.deleteFirst((StrMatcher) strMatcher_CharSetMatcher0);
      char[] charArray1 = new char[8];
      charArray1[0] = '!';
      charArray1[1] = '!';
      charArray1[2] = '7';
      charArray1[3] = '!';
      charArray1[4] = '!';
      charArray1[5] = '!';
      charArray1[6] = '!';
      charArray1[7] = '!';
      strBuilder_StrBuilderWriter0.write(charArray1);
      StrBuilder strBuilder4 = strBuilder2.append(0);
      int int2 = strBuilder1.indexOf('5', 45);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("Invalid offset: ", 45, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2764));
      char char0 = 'N';
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('N');
      StrBuilder strBuilder2 = strBuilder0.insert(0, true);
      strBuilder0.validateIndex(0);
      String string0 = strBuilder0.midString((-2764), (-2764));
      int int0 = (-1);
      StrBuilder strBuilder3 = new StrBuilder("");
      Object object0 = new Object();
      StrBuilder strBuilder4 = strBuilder3.append(object0);
      int int1 = 117;
      StrBuilder strBuilder5 = strBuilder1.appendFixedWidthPadLeft((Object) strBuilder3, 117, 'N');
      strBuilder5.size = (-1);
      StrBuilder strBuilder6 = strBuilder0.appendFixedWidthPadLeft(5, 0, 'N');
      // Undeclared exception!
      try { 
        strBuilder1.insert((-1), true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      int int0 = 1806;
      StrBuilder strBuilder0 = new StrBuilder(1806);
      char char0 = 'h';
      StrBuilder strBuilder1 = strBuilder0.append('h');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      int int1 = strBuilder_StrBuilderReader0.read();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      StringBuffer stringBuffer0 = strBuilder1.toStringBuffer();
      // Undeclared exception!
      try { 
        strBuilder1.substring(104, 1806);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-975));
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher((char[]) null);
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(4276);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = '!';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) "3lP.]Kddg'", 1, '!');
      StrBuilder strBuilder2 = strBuilder1.trim();
      char[] charArray0 = new char[7];
      charArray0[0] = '!';
      charArray0[1] = '!';
      charArray0[2] = '!';
      charArray0[3] = '!';
      charArray0[4] = '!';
      charArray0[5] = '!';
      charArray0[6] = '!';
      StrBuilder strBuilder3 = strBuilder2.insert(0, charArray0, 0, 0);
      int int0 = (-1298);
      String string0 = "zV3@";
      // Undeclared exception!
      try { 
        strBuilder0.replace((-1298), (-1298), "zV3@");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1298
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3902);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 3902);
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "e|Pc6BCl>");
      StrBuilder strBuilder2 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder3 = strBuilder0.append((long) 3902);
      StrBuilder strBuilder4 = strBuilder0.deleteAll(strMatcher0);
      StrBuilder strBuilder5 = strBuilder0.append("e|Pc6BCl>", 0, 0);
      StrBuilder strBuilder6 = strBuilder1.appendFixedWidthPadLeft((Object) strMatcher0, 48, '');
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      String string0 = "yu'mxcpDl";
      StrBuilder strBuilder0 = new StrBuilder("yu'mxcpDl");
      int int0 = 114;
      String string1 = strBuilder0.rightString(114);
      // Undeclared exception!
      try { 
        strBuilder0.validateRange((-1987), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1987
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      String string0 = "a;/v";
      StrBuilder strBuilder0 = new StrBuilder("a;/v");
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(117);
      char[] charArray0 = new char[1];
      charArray0[0] = 'x';
      // Undeclared exception!
      try { 
        strBuilder1.insert(117, charArray0, 188, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 117
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = strBuilder0.indexOf("os.name", 2867);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2);
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0, 2);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrMatcher");
      StrBuilder strBuilder1 = strBuilder0.deleteAll('h');
      StrBuilder strBuilder2 = strBuilder1.deleteAll(']');
      StrBuilder strBuilder3 = strBuilder0.setNewLineText("");
      String string0 = strBuilder1.substring(0, 0);
      StrBuilder strBuilder4 = strBuilder1.replaceFirst("org.apache.commons.lang.text.StrMatcher", "");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder4.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      int int0 = strBuilder4.lastIndexOf(strMatcher0, 0);
      StrBuilder strBuilder5 = strBuilder4.append(1.0F);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer1 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher1 = StrMatcher.singleQuoteMatcher();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer1.setIgnoredMatcher(strMatcher1);
      StrBuilder strBuilder6 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "");
      StrBuilder strBuilder7 = strBuilder6.replaceAll("", "org.apache.commons.lang.text.StrMatcher");
      StrBuilder strBuilder8 = strBuilder5.setCharAt(0, 'X');
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      int int0 = 5;
      StrBuilder strBuilder0 = new StrBuilder(5);
      int int1 = strBuilder0.indexOf((StrMatcher) null);
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("Ki K_G`HdVB|]0i");
      int int2 = strBuilder0.indexOf(strMatcher0);
      char char0 = 'E';
      int int3 = strBuilder0.indexOf('E');
      StrBuilder strBuilder2 = strBuilder0.replaceAll('O', '#');
      // Undeclared exception!
      try { 
        strBuilder2.setLength((-2403));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2403
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = null;
      int int0 = 4715;
      char char0 = '(';
      strBuilder0.size = 4715;
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadLeft((Object) null, 4715, '(');
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1912);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
      StrBuilder strBuilder2 = new StrBuilder("");
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0, 0);
      StrBuilder strBuilder3 = strBuilder1.appendFixedWidthPadRight((Object) strBuilder2, 0, 'J');
      StrBuilder strBuilder4 = strBuilder3.appendFixedWidthPadRight(1912, 114, 'A');
      StrBuilder strBuilder5 = strBuilder1.clear();
      StrBuilder strBuilder6 = new StrBuilder(1912);
      StrBuilder strBuilder7 = strBuilder0.append((Object) strBuilder6);
      int int1 = strBuilder2.capacity();
      StrBuilder strBuilder8 = strBuilder1.replaceAll("", "");
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(34);
      // Undeclared exception!
      try { 
        strBuilder0.setLength((-5908));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -5908
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StringBuffer stringBuffer0 = new StringBuffer("");
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0, 0, 0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(0);
      strBuilder_StrBuilderWriter0.write("");
      String string0 = strBuilder1.toString();
      char[] charArray0 = new char[5];
      charArray0[0] = '6';
      charArray0[1] = 'r';
      charArray0[2] = '?';
      charArray0[3] = 'r';
      charArray0[4] = 'l';
      strBuilder1.getChars(0, 0, charArray0, 0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("CPEs");
      StrBuilder strBuilder1 = new StrBuilder("CPEs");
      StrBuilder strBuilder2 = strBuilder0.append((float) 1);
      StrBuilder strBuilder3 = strBuilder1.replaceFirst("Mac OS X", "CPEs");
      StrBuilder strBuilder4 = strBuilder0.insert(1, (Object) strBuilder1);
      String string0 = strBuilder0.midString((-2900), (-299));
      StrBuilder strBuilder5 = strBuilder0.append((Object) "CPEs");
      StrBuilder strBuilder6 = new StrBuilder("");
      StrBuilder strBuilder7 = strBuilder4.append((Object) strBuilder6);
      char[] charArray0 = new char[1];
      charArray0[0] = 'V';
      // Undeclared exception!
      try { 
        strBuilder7.append(charArray0, (-299), 1);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrBuilder strBuilder2 = strBuilder1.minimizeCapacity();
      StringBuffer stringBuffer0 = new StringBuffer(0);
      StrBuilder strBuilder3 = strBuilder2.append(stringBuffer0);
      char char0 = '.';
      int int0 = strBuilder0.indexOf('.');
      StrBuilder strBuilder4 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder4, (-1), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      String string0 = strBuilder1.toString();
      int int0 = (-1098);
      char char0 = '*';
      String string1 = strBuilder1.leftString((-1098));
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight((Object) strBuilder1, (-1098), '*');
      StrBuilder strBuilder3 = strBuilder1.trim();
      StrBuilder strBuilder4 = strBuilder2.setNewLineText("-VGm{tL");
      // Undeclared exception!
      try { 
        strBuilder1.charAt((-1098));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1098
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      String string0 = strBuilder1.toString();
      int int0 = (-1098);
      char char0 = '*';
      String string1 = strBuilder1.leftString((-1098));
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight((Object) strBuilder1, (-1098), '*');
      StrBuilder strBuilder3 = strBuilder2.setNewLineText("-VGm{tL");
      // Undeclared exception!
      try { 
        strBuilder1.charAt((-1098));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1098
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      char[] charArray0 = new char[3];
      charArray0[0] = '<';
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      char char0 = '9';
      charArray0[1] = '9';
      char char1 = 'c';
      charArray0[2] = 'c';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst((StrMatcher) strMatcher_StringMatcher0);
      StrBuilder strBuilder2 = new StrBuilder(2995);
      StrBuilder strBuilder3 = strBuilder0.insert(0, 'c');
      StrBuilder strBuilder4 = strBuilder2.insert(0, (Object) strBuilder0);
      StrBuilder strBuilder5 = strBuilder4.trim();
      int int0 = 0;
      // Undeclared exception!
      try { 
        strBuilder1.append(strBuilder2, (-522), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrMatcher strMatcher0 = StrMatcher.charMatcher('i');
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("`:7M)5:k)Zx0");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst((StrMatcher) strMatcher_TrimMatcher0);
      StrBuilder strBuilder2 = strBuilder1.deleteAll((StrMatcher) strMatcher_TrimMatcher0);
      String string0 = strBuilder0.midString(719, 108);
      String string1 = strBuilder0.getNewLineText();
      int int0 = strBuilder1.indexOf(strMatcher1, (-1668));
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) null, "");
      String string0 = strBuilder0.leftString(31);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[9];
      charArray0[0] = '\\';
      charArray0[1] = '{';
      charArray0[2] = '&';
      charArray0[3] = '*';
      charArray0[4] = '/';
      charArray0[5] = ',';
      charArray0[6] = 'j';
      charArray0[7] = '9';
      charArray0[8] = 'a';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, (-2121), 0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      char[] charArray0 = new char[9];
      charArray0[0] = 's';
      charArray0[1] = '&';
      charArray0[2] = '>';
      charArray0[3] = '3';
      charArray0[4] = 'T';
      charArray0[5] = '5';
      charArray0[6] = 'u';
      charArray0[7] = 'W';
      charArray0[8] = ';';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      StringBuffer stringBuffer0 = new StringBuffer(0);
      StrBuilder strBuilder1 = strBuilder0.insert(0, 1118L);
      StringBuffer stringBuffer1 = stringBuffer0.insert(0, (Object) strBuilder0);
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 34, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.getNullText();
      String string1 = strBuilder0.toString();
      String string2 = strBuilder0.substring(0);
      int int0 = strBuilder0.lastIndexOf("", 0);
      char char0 = '[';
      boolean boolean0 = strBuilder0.contains('[');
      StrBuilder strBuilder1 = strBuilder0.append((Object) "");
      StrBuilder strBuilder2 = strBuilder1.deleteAll('@');
      StrBuilder strBuilder3 = strBuilder1.deleteCharAt(0);
      String string3 = strBuilder0.rightString((-2491));
      char char1 = strBuilder1.charAt(0);
      StrBuilder strBuilder4 = strBuilder0.append(strBuilder1);
      // Undeclared exception!
      try { 
        strBuilder4.insert((-1), (long) (-2491));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.compiler");
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder0;
      char[] charArray0 = new char[0];
      StrBuilder strBuilder1 = strBuilder0.insert(0, charArray0);
      StringBuffer stringBuffer0 = strBuilder1.toStringBuffer();
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators(objectArray0, "tzFoGW");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      boolean boolean0 = linkedList0.add(objectArray0[1]);
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators((Collection) linkedList0, "tzFoGW");
      String string0 = strBuilder0.toString();
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1258));
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      boolean boolean0 = strBuilder0.contains('{');
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Iterator<String> iterator0 = linkedList0.iterator();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(iterator0, "java.class.path");
      String string0 = strBuilder0.getNullText();
      StrBuilder strBuilder2 = strBuilder0.appendPadding(0, '3');
      StrBuilder strBuilder3 = strBuilder2.insert(0, (String) null);
      StrBuilder strBuilder4 = strBuilder0.insert(0, (char[]) null);
      StrBuilder strBuilder5 = strBuilder4.deleteFirst((String) null);
      StrBuilder strBuilder6 = strBuilder0.insert(0, 0);
      StrBuilder strBuilder7 = strBuilder0.deleteCharAt(0);
      int int0 = strBuilder0.lastIndexOf('S', 0);
      String string1 = strBuilder6.midString((-1), 0);
      StrBuilder strBuilder8 = strBuilder1.setNullText("/Y~bid[]~^.Bd-G20# ");
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      int int1 = strBuilder7.lastIndexOf((StrMatcher) strMatcher_TrimMatcher0);
      String string2 = strBuilder4.rightString(0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder5.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(2676);
      // Undeclared exception!
      try { 
        strBuilder3.substring(106);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("dCmNpB");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[5];
      charArray0[0] = 'S';
      charArray0[1] = '7';
      charArray0[2] = 'w';
      charArray0[3] = 'Q';
      charArray0[4] = '#';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0, 0, 0);
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('L', '`');
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      int int0 = 1806;
      StrBuilder strBuilder0 = new StrBuilder(1806);
      char char0 = 'h';
      StrBuilder strBuilder1 = strBuilder0.append('h');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      int int1 = strBuilder_StrBuilderReader0.read();
      StringBuffer stringBuffer0 = strBuilder1.toStringBuffer();
      // Undeclared exception!
      try { 
        strBuilder1.substring(104, 1806);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.vm.specification.version");
      char[] charArray0 = new char[1];
      charArray0[0] = 'm';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 1, 101);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 101
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3678);
      int int0 = strBuilder0.indexOf(',', 3678);
      StrBuilder strBuilder1 = new StrBuilder(0);
      boolean boolean0 = strBuilder0.equals(strBuilder1);
      int int1 = strBuilder0.indexOf("", 0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.isEmpty();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) null, 0, 'I');
      StrBuilder strBuilder2 = strBuilder0.appendPadding(0, 'I');
      StrBuilder strBuilder3 = strBuilder2.setNewLineText("\"zf0x`n[MHjki-)N#t");
      StrBuilder strBuilder4 = strBuilder1.append((long) 0);
      String string0 = strBuilder0.midString(0, 0);
      boolean boolean1 = strBuilder1.equalsIgnoreCase(strBuilder0);
      StrBuilder strBuilder5 = strBuilder2.append(2385);
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder5.insert((-43), charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -43
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[8];
      charArray0[0] = 'o';
      charArray0[1] = '0';
      charArray0[2] = '/';
      charArray0[3] = '1';
      charArray0[4] = 'p';
      charArray0[5] = 'g';
      charArray0[6] = 'W';
      charArray0[7] = 'j';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0);
      int int1 = strBuilder_StrBuilderReader0.read();
      strBuilder_StrBuilderReader0.close();
      char[] charArray1 = new char[6];
      charArray1[0] = '?';
      charArray1[1] = 'C';
      charArray1[2] = '>';
      charArray1[3] = 'z';
      charArray1[4] = '~';
      charArray1[5] = 'I';
      StrBuilder strBuilder1 = strBuilder0.append(charArray1, 0, 0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[5];
      charArray0[0] = '5';
      charArray0[1] = '$';
      charArray0[2] = 'I';
      charArray0[3] = '5';
      char char0 = '^';
      charArray0[4] = '^';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read((CharBuffer) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 32;
      StrBuilder strBuilder1 = strBuilder0.setLength(32);
      StrBuilder strBuilder2 = strBuilder1.append((Object) strBuilder0);
      StrBuilder strBuilder3 = strBuilder0.minimizeCapacity();
      int int1 = (-1);
      int int2 = 2260;
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray((-1), 2260);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      int int0 = 1186;
      StrBuilder strBuilder0 = new StrBuilder(1186);
      Reader reader0 = strBuilder0.asReader();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = null;
      strBuilder_StrBuilderReader0.mark(1186);
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) reader0;
      objectArray0[1] = (Object) reader0;
      objectArray0[2] = (Object) reader0;
      objectArray0[3] = (Object) strBuilder0;
      objectArray0[4] = (Object) strBuilder0;
      objectArray0[5] = (Object) strBuilder0;
      objectArray0[6] = (Object) strBuilder_StrBuilderReader0;
      objectArray0[7] = (Object) strBuilder0;
      objectArray0[8] = (Object) strBuilder0;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "");
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read((char[]) null, (-2216), 980);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      String string0 = strBuilder0.toString();
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-389);
      int int1 = Integer.MAX_VALUE;
      String string0 = null;
      StrBuilder strBuilder1 = strBuilder0.append((double) Integer.MAX_VALUE);
      int int2 = 2;
      StrBuilder strBuilder2 = strBuilder0.append('+');
      StrBuilder strBuilder3 = strBuilder1.insert(2, (Object) null);
      // Undeclared exception!
      try { 
        strBuilder0.replace((-389), Integer.MAX_VALUE, (String) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -389
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      int int0 = (-4204);
      StrBuilder strBuilder0 = new StrBuilder((-4204));
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      int int1 = 44;
      // Undeclared exception!
      try { 
        strBuilder1.insert(44, false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 44
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.reverse();
      StrBuilder strBuilder2 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder strBuilder3 = strBuilder1.insert(0, object0);
      StrBuilder strBuilder4 = strBuilder1.append((Object) strBuilder0);
      StrBuilder strBuilder5 = strBuilder4.deleteAll('M');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      StringBuffer stringBuffer0 = null;
      try {
        stringBuffer0 = new StringBuffer((CharSequence) null);
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrBuilder strBuilder2 = strBuilder0.insert(0, (float) 0);
      LinkedList<StrBuilder> linkedList0 = new LinkedList<StrBuilder>();
      String string0 = "<q-MU(xYY]8I.G";
      StrBuilder strBuilder3 = strBuilder1.appendWithSeparators((Collection) linkedList0, "<q-MU(xYY]8I.G");
      StrBuilder strBuilder4 = strBuilder0.append(strBuilder1);
      StringBuffer stringBuffer0 = new StringBuffer("DqmLEN$B3f");
      StringBuffer stringBuffer1 = stringBuffer0.delete(0, 0);
      StrBuilder strBuilder5 = strBuilder4.append(stringBuffer0);
      StrBuilder strBuilder6 = strBuilder2.replaceFirst('\\', '>');
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      int int0 = strBuilder6.lastIndexOf((StrMatcher) strMatcher_NoMatcher0, (-1431));
      StrBuilder strBuilder7 = strBuilder2.appendFixedWidthPadLeft(609, 609, '\\');
      StrBuilder strBuilder8 = strBuilder6.appendFixedWidthPadLeft((Object) null, (-1431), 'C');
      // Undeclared exception!
      try { 
        strBuilder8.validateRange((-1431), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1431
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      boolean boolean0 = linkedList0.add((Object) strBuilder0);
      linkedList0.addFirst(strBuilder0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "1<vUk9W'nqLiO");
      StringBuffer stringBuffer0 = new StringBuffer();
      StringBuffer stringBuffer1 = new StringBuffer(stringBuffer0);
      // Undeclared exception!
      try { 
        stringBuffer1.insert(3161, (-610.805485491));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3161
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setQuoteMatcher(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "5cd}ncMe:xdt,LI.+.");
      StrBuilder strBuilder2 = strBuilder0.replaceAll('V', 'V');
      StrBuilder strBuilder3 = strBuilder0.replaceFirst('V', 'V');
      char[] charArray0 = new char[6];
      charArray0[0] = 'V';
      charArray0[1] = '\'';
      charArray0[2] = 'C';
      charArray0[3] = 'V';
      charArray0[4] = 'V';
      charArray0[5] = 'V';
      char[] charArray1 = strBuilder3.getChars(charArray0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceAll('C', 'y');
      StrBuilder strBuilder2 = strBuilder1.appendNull();
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.append('T');
      // Undeclared exception!
      try { 
        strBuilder1.substring((-1206));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1206
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid startIndex: ");
      String string0 = strBuilder0.rightString(0);
      int int0 = strBuilder0.indexOf("Invalid startIndex: ", 0);
      StrBuilder strBuilder1 = strBuilder0.setNewLineText((String) null);
      StringBuffer stringBuffer0 = new StringBuffer("");
      StrBuilder strBuilder2 = strBuilder1.append(stringBuffer0);
      boolean boolean0 = strBuilder0.isEmpty();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      char[] charArray0 = new char[0];
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 919, 0);
      StrBuilder strBuilder3 = new StrBuilder();
      StrBuilder strBuilder4 = strBuilder2.appendFixedWidthPadRight((Object) strBuilder3, 0, 'T');
      String string1 = strBuilder1.substring(0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 115;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      String string0 = null;
      int int1 = 1291;
      // Undeclared exception!
      try { 
        strBuilder0.replace(strMatcher0, (String) null, 1291, 102, 1291);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("'C-5zIzx/(-{-B_4");
      String string0 = strBuilder0.getNullText();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(0);
      char[] charArray0 = new char[1];
      charArray0[0] = 'I';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0, 0, 0);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("'C-5zIzx/(-{-B_4");
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.insert(0, (-2554));
      StrBuilder strBuilder2 = new StrBuilder("");
      StrBuilder strBuilder3 = strBuilder0.append((Object) strBuilder2);
      StrBuilder strBuilder4 = strBuilder3.deleteFirst('');
      String string0 = strBuilder3.rightString(0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      String string1 = strBuilder4.getNullText();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder5 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("");
      StrBuilder strBuilder2 = strBuilder1.append(102);
      StrBuilder strBuilder3 = strBuilder0.delete(0, 0);
      StrBuilder strBuilder4 = strBuilder0.deleteAll("\"zzR3");
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[5];
      charArray0[0] = 'j';
      charArray0[1] = 'E';
      charArray0[2] = 'm';
      charArray0[3] = '#';
      StrBuilder strBuilder1 = strBuilder0.append(0L);
      charArray0[4] = 'Y';
      StrBuilder strBuilder2 = strBuilder0.append(charArray0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(charArray0);
      StrBuilder strBuilder3 = strBuilder1.append(184.30775F);
      int int0 = strBuilder2.hashCode();
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) 'j';
      objectArray0[1] = (Object) strBuilder2;
      objectArray0[2] = (Object) 'j';
      objectArray0[3] = (Object) strBuilder0;
      objectArray0[4] = (Object) strBuilder0;
      objectArray0[5] = (Object) strBuilder_StrBuilderWriter0;
      objectArray0[6] = (Object) strBuilder2;
      objectArray0[7] = (Object) 'm';
      objectArray0[8] = (Object) strBuilder1;
      StrBuilder strBuilder4 = strBuilder1.appendWithSeparators(objectArray0, "");
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-549));
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('c');
      char[] charArray0 = new char[4];
      charArray0[0] = 'c';
      StrMatcher strMatcher2 = StrMatcher.charMatcher('3');
      charArray0[1] = 'c';
      charArray0[2] = 'c';
      charArray0[3] = '(';
      StrMatcher strMatcher3 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "'; the SystemUtils property value will default to null.");
      StrBuilder strBuilder2 = strBuilder1.deleteAll(strMatcher0);
      int int0 = strBuilder1.hashCode();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setQuoteMatcher(strMatcher1);
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, (-549), (-549));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -549
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      int int0 = (-1521);
      int int1 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.getChars((-1521), 0, (char[]) null, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1521
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('t');
      int int0 = strBuilder1.lastIndexOf("");
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      String string0 = ":U";
      StrBuilder strBuilder0 = new StrBuilder(":U");
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) ":U";
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string1 = strBuilder_StrBuilderTokenizer0.toString();
      Object object0 = strBuilder_StrBuilderTokenizer0.next();
      StrBuilder strBuilder1 = strBuilder0.append("Invalid offset: ", 0, 0);
      objectArray0[1] = (Object) ":U";
      // Undeclared exception!
      try { 
        strBuilder0.delete(1904, 1904);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      String string0 = "P.4DQpnnXT!>uacTF";
      StrBuilder strBuilder0 = new StrBuilder("P.4DQpnnXT!>uacTF");
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder1 = new StrBuilder();
      int int0 = 1;
      char char0 = '@';
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight((Object) strBuilder1, 1, '@');
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder("9V }<=_-.6):r-");
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      char[] charArray0 = new char[5];
      charArray0[0] = 'o';
      charArray0[1] = '/';
      charArray0[2] = 'E';
      charArray0[3] = 'h';
      charArray0[4] = 's';
      // Undeclared exception!
      try { 
        strBuilder2.insert(3073, charArray0, (-2696), 3073);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3073
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.trim();
      Reader reader0 = strBuilder0.asReader();
      String string0 = "";
      StrBuilder strBuilder2 = new StrBuilder("");
      StrBuilder strBuilder3 = new StrBuilder("");
      int int0 = 1;
      // Undeclared exception!
      try { 
        strBuilder1.appendFixedWidthPadRight((Object) strBuilder3, 1, '');
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-486));
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((-486), 0, 'y');
      int int0 = strBuilder0.indexOf((StrMatcher) null);
      char[] charArray0 = strBuilder0.toCharArray();
      int int1 = (-3340);
      char[] charArray1 = new char[4];
      charArray1[0] = 'y';
      charArray1[1] = 'y';
      charArray1[2] = 'y';
      charArray1[3] = 'y';
      // Undeclared exception!
      try { 
        strBuilder0.insert((-3340), charArray1, 114, (-3340));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3340
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((char[]) null, 0, 32);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      int int0 = 1583;
      StrBuilder strBuilder0 = new StrBuilder(1583);
      int int1 = 0;
      String string0 = strBuilder0.substring(0);
      StrBuilder strBuilder1 = strBuilder0.insert(0, (double) 0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      boolean boolean0 = strBuilder0.contains("");
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      int int2 = (-36);
      char char0 = strBuilder0.charAt(0);
      StringBuffer stringBuffer1 = new StringBuffer(0);
      StrBuilder strBuilder2 = strBuilder0.append(stringBuffer1);
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadLeft(object0, 0, '_');
      char[] charArray0 = new char[3];
      charArray0[0] = '0';
      charArray0[1] = '0';
      charArray0[2] = '0';
      // Undeclared exception!
      try { 
        strBuilder2.insert(0, charArray0, 1583, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: 1583
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.append("Q2k{iog&211T}];whZ", 0, 0);
      int int1 = strBuilder0.length();
      StrBuilder strBuilder2 = strBuilder1.replaceAll("Q2k{iog&211T}];whZ", "Q2k{iog&211T}];whZ");
      int int2 = strBuilder1.indexOf('\'', 0);
      char[] charArray0 = null;
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = null;
      try {
        strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher((char[]) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrMatcher$CharSetMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("");
      char[] charArray0 = strBuilder0.getChars((char[]) null);
      StrBuilder strBuilder2 = strBuilder0.setNewLineText("");
      int int0 = strBuilder0.size();
      String string0 = strBuilder0.getNewLineText();
      StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "length must be valid");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder strBuilder4 = strBuilder3.appendFixedWidthPadLeft(object0, 0, '!');
      StrBuilder strBuilder5 = strBuilder2.append((Object) "length must be valid");
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder();
      char[] charArray0 = new char[4];
      charArray0[0] = '`';
      charArray0[1] = 't';
      charArray0[2] = 'X';
      charArray0[3] = '%';
      // Undeclared exception!
      try { 
        strBuilder1.append(charArray0, (-2180), 890);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 890
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      char char0 = 'i';
      int int1 = 57;
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(57);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 57
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      int int1 = 609;
      StrBuilder strBuilder1 = strBuilder0.append((-153));
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray(609, (-153));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      int int0 = (-549);
      StrBuilder strBuilder0 = new StrBuilder((-549));
      StrMatcher strMatcher0 = StrMatcher.charMatcher('c');
      char[] charArray0 = new char[4];
      charArray0[0] = 'c';
      StrMatcher strMatcher1 = StrMatcher.charMatcher('Z');
      charArray0[1] = 'c';
      charArray0[2] = 'c';
      charArray0[3] = '(';
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, (-549), (-549));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -549
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.midString((-282), (-282));
      String string1 = strBuilder0.toString();
      StrBuilder strBuilder1 = strBuilder0.appendPadding(0, 'n');
      boolean boolean0 = strBuilder0.contains("");
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt((-282));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -282
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3);
      StrBuilder strBuilder1 = strBuilder0.append(2559L);
      String string0 = "n~;";
      StrBuilder strBuilder2 = strBuilder1.deleteFirst("n~;");
      strBuilder2.size = 3;
      int int0 = 39;
      // Undeclared exception!
      try { 
        strBuilder1.append(strBuilder0, 39, 39);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(34);
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[4];
      charArray0[0] = 'v';
      charArray0[1] = 'k';
      charArray0[2] = 'p';
      charArray0[3] = 'L';
      strBuilder_StrBuilderWriter0.write(charArray0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-4169);
      StrBuilder strBuilder1 = new StrBuilder((-4169));
      StrBuilder strBuilder2 = strBuilder1.append((double) (-4169));
      int int1 = 57;
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, 647, 57);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      StrBuilder strBuilder2 = strBuilder1.deleteFirst(strMatcher0);
      StrBuilder strBuilder3 = strBuilder2.replace(strMatcher0, "", 0, 0, (-2983));
      int int0 = 1526;
      // Undeclared exception!
      try { 
        strBuilder0.charAt(1526);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1526
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      int int0 = 152;
      StrBuilder strBuilder0 = new StrBuilder(152);
      char char0 = 'Q';
      // Undeclared exception!
      try { 
        strBuilder0.insert(152, 'Q');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 152
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = " Za,$";
      int int0 = 48;
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex(34);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 34
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      // Undeclared exception!
      try { 
        strBuilder0.append("/TQ}GGAW(dOW3X4(GEI", (-1300), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      strBuilder0.validateIndex(0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("", 0, 108);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("end < start");
      int int0 = (-3416);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-3416), (float) (-3416));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3416
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      Object object0 = null;
      char char0 = ' ';
      StrBuilder strBuilder1 = strBuilder0.appendPadding(115, ' ');
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight((Object) null, 456, '+');
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      String string0 = "";
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "");
      int int0 = 0;
      int int1 = strBuilder0.indexOf(strMatcher0);
      char[] charArray0 = new char[2];
      char char0 = '4';
      // Undeclared exception!
      try { 
        strBuilder1.insert((-844), charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -844
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("[\">[-0UTMENIH");
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      char char0 = '\"';
      StrBuilder strBuilder1 = strBuilder0.deleteAll('\"');
      StrBuilder strBuilder2 = strBuilder0.deleteAll("\"Z9_5?");
      int int0 = 123;
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight((Object) null, 123, '\"');
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) "";
      objectArray0[3] = (Object) strBuilder0;
      String string0 = "";
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "");
      StrBuilder strBuilder2 = strBuilder1.replaceAll("{", "");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrBuilder strBuilder3 = strBuilder2.replaceAll(strMatcher0, "");
      StrBuilder strBuilder4 = strBuilder0.replace(97, 97, "");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer1 = strBuilder0.new StrBuilderTokenizer();
      int int0 = strBuilder_StrBuilderTokenizer1.size();
      StrBuilder strBuilder5 = strBuilder1.insert(10, "{");
      StrMatcher strMatcher1 = strBuilder_StrBuilderTokenizer1.getQuoteMatcher();
      StrBuilder strBuilder6 = strBuilder4.deleteFirst(strMatcher1);
      StrBuilder strBuilder7 = strBuilder1.append(strBuilder6);
      int int1 = 2295;
      // Undeclared exception!
      try { 
        strBuilder7.substring(2295, 97);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("B:P3_v~'9*6P");
      String string0 = strBuilder0.getNullText();
      StrBuilder strBuilder1 = strBuilder0.replaceAll("a[*h", (String) null);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteAll("o\"Z)38GV3M|,eQR.a");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      strBuilder_StrBuilderReader0.close();
      StrBuilder strBuilder2 = strBuilder0.replace(0, 0, "n)");
      StrBuilder strBuilder3 = strBuilder1.deleteFirst("o\"Z)38GV3M|,eQR.a");
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      Writer writer0 = strBuilder3.asWriter();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("n)");
      int int0 = strBuilder1.lastIndexOf(strMatcher0, 3);
      Object[] objectArray0 = new Object[5];
      Object object0 = new Object();
      objectArray0[0] = object0;
      objectArray0[1] = (Object) strBuilder3;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      Object object1 = strBuilder_StrBuilderTokenizer0.clone();
      objectArray0[2] = object1;
      Object object2 = strBuilder_StrBuilderTokenizer0.cloneReset();
      objectArray0[3] = object2;
      objectArray0[4] = (Object) strBuilder1;
      StrBuilder strBuilder4 = strBuilder2.appendWithSeparators(objectArray0, "n)");
      strBuilder_StrBuilderReader0.close();
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[5];
      charArray0[0] = '9';
      charArray0[1] = ';';
      charArray0[2] = ',';
      charArray0[3] = '@';
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      int int0 = strBuilder0.lastIndexOf(strMatcher0, (-757));
      charArray0[4] = 'e';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher("-t='");
      StrBuilder strBuilder2 = strBuilder0.deleteAll(strMatcher1);
      int int1 = strBuilder0.lastIndexOf("org.apache.commons.lang.ArrayUtils", 1397);
      StrBuilder strBuilder3 = strBuilder0.insert(0, (-757));
      // Undeclared exception!
      try { 
        strBuilder0.charAt(1397);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1397
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[4];
      charArray0[0] = '?';
      charArray0[1] = '@';
      charArray0[2] = '%';
      charArray0[3] = '>';
      StrBuilder strBuilder1 = strBuilder0.insert(0, charArray0);
      StrBuilder strBuilder2 = strBuilder0.appendNull();
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("");
      StrBuilder strBuilder2 = strBuilder0.replaceFirst("org.apache.commons.lang.text.StrMatcher$CharSetMatcher", "org.apache.commons.lang.text.StrMatcher$CharSetMatcher");
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder strBuilder1 = strBuilder0.setNullText("");
      StrBuilder strBuilder2 = strBuilder0.append("");
      StrBuilder strBuilder3 = strBuilder2.append(false);
      String string0 = strBuilder3.getNewLineText();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder3.new StrBuilderWriter();
      char[] charArray0 = new char[6];
      charArray0[0] = 'k';
      charArray0[1] = 'V';
      charArray0[2] = '7';
      charArray0[3] = 'T';
      charArray0[4] = 'R';
      Writer writer0 = strBuilder_StrBuilderWriter0.append('*');
      StrBuilder strBuilder4 = strBuilder2.trim();
      charArray0[5] = 'Q';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 0, (-2887));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: -2887
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      boolean boolean0 = strBuilder0.isEmpty();
      // Undeclared exception!
      try { 
        strBuilder0.append("", 532, 5725);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("p");
      int int0 = 209;
      char[] charArray0 = new char[3];
      // Undeclared exception!
      try { 
        strBuilder0.replace(116, 0, "org.apache.commons.lang.text.StrBuilder");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1723);
      StrBuilder strBuilder1 = new StrBuilder(0);
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      boolean boolean0 = strBuilder0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      StrBuilder strBuilder2 = strBuilder1.deleteFirst("");
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.append("", 115, 1136);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("LxFn5/\"Isc");
      boolean boolean0 = strBuilder0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2596));
      char[] charArray0 = strBuilder0.toCharArray();
      StrBuilder strBuilder1 = strBuilder0.append((-3628.78));
      char[] charArray1 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder0.getChars(0, 57, charArray1, (-2596));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 57
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      int int0 = 4;
      StrBuilder strBuilder0 = new StrBuilder(4);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, ".'yB?s?#CAqgG-OZ*/");
      StrBuilder strBuilder2 = strBuilder1.append((Object) "set() is unsupported");
      StrBuilder strBuilder3 = strBuilder0.append(".'yB?s?#CAqgG-OZ*/", 1, 1);
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ".'yB?s?#CAqgG-OZ*/");
      StrBuilder strBuilder4 = strBuilder0.append(stringBuffer0, 4, 4);
      // Undeclared exception!
      try { 
        strBuilder0.insert(1133, 1133);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1133
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      int int0 = strBuilder0.capacity();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
      char[] charArray0 = new char[2];
      charArray0[0] = 's';
      charArray0[1] = 'K';
      StrBuilder strBuilder3 = strBuilder0.append(charArray0);
      StrBuilder strBuilder4 = strBuilder3.deleteAll('s');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder4.new StrBuilderReader();
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      boolean boolean0 = strBuilder4.contains((StrMatcher) strMatcher_NoMatcher0);
      strBuilder_StrBuilderReader0.mark(3219);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("89Po,O0L}lc~2;");
      char[] charArray0 = new char[4];
      charArray0[0] = '=';
      charArray0[1] = 'i';
      charArray0[2] = 'Q';
      charArray0[3] = '2';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-3805);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-3805), (long) (-3805));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3805
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.stringMatcher((String) null);
      StrMatcher strMatcher1 = StrMatcher.stringMatcher((String) null);
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.append("Invalid offset: ");
      String string0 = strBuilder0.leftString((-174));
      StrBuilder strBuilder2 = strBuilder1.setNullText("Invalid offset: ");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      char[] charArray0 = new char[6];
      charArray0[0] = '0';
      charArray0[1] = '8';
      charArray0[2] = 'S';
      charArray0[3] = 'Z';
      charArray0[4] = 's';
      charArray0[5] = '';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, (-1479), 2535);
      // Undeclared exception!
      try { 
        strBuilder2.insert(2535, "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2535
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      int int0 = 101;
      StrBuilder strBuilder0 = new StrBuilder(101);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-163), (long) (-163));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -163
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[1];
      charArray0[0] = 'H';
      char[] charArray1 = strBuilder0.getChars(charArray0);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-4083));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher((char[]) null);
      StrMatcher strMatcher2 = StrMatcher.charMatcher('');
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterString((String) null);
      StrMatcher strMatcher3 = StrMatcher.charMatcher('R');
      int int0 = strBuilder0.indexOf(strMatcher0, (-4083));
      StrBuilder strBuilder1 = new StrBuilder("|-lQ<'%r<1");
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      String string0 = strBuilder2.leftString(4946);
      StrBuilder strBuilder3 = strBuilder0.clear();
      StrMatcher strMatcher4 = StrMatcher.trimMatcher();
      StrMatcher strMatcher5 = StrMatcher.charMatcher(':');
      int int1 = strBuilder1.lastIndexOf(strMatcher4, (-4083));
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) strMatcher4;
      objectArray0[1] = (Object) strMatcher4;
      objectArray0[2] = (Object) strMatcher1;
      objectArray0[3] = (Object) "|-lQ<'%r<1";
      objectArray0[4] = (Object) strMatcher5;
      objectArray0[5] = (Object) strMatcher3;
      StrBuilder strBuilder4 = strBuilder3.appendWithSeparators(objectArray0, (String) null);
      int int2 = strBuilder2.indexOf('Y');
      int int3 = strBuilder2.lastIndexOf('3');
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = true;
      StrBuilder strBuilder1 = strBuilder0.append(true);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.next();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer1 = strBuilder0.new StrBuilderTokenizer();
      String[] stringArray0 = strBuilder_StrBuilderTokenizer1.getTokenArray();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer1.setQuoteMatcher((StrMatcher) null);
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer1.getQuoteMatcher();
      StrTokenizer strTokenizer1 = strBuilder_StrBuilderTokenizer0.setQuoteMatcher(strMatcher0);
      char char0 = '!';
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((Object) "true", 114, '!');
      int int0 = 1122;
      // Undeclared exception!
      try { 
        strBuilder0.charAt(1122);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1122
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      String string1 = "?2r-LAZl%>!1X";
      StrBuilder strBuilder1 = strBuilder0.insert(0, "?2r-LAZl%>!1X");
      StrBuilder strBuilder2 = strBuilder1.clear();
      StrBuilder strBuilder3 = strBuilder2.append("?2r-LAZl%>!1X");
      StrBuilder strBuilder4 = strBuilder1.append('8');
      StrBuilder strBuilder5 = strBuilder0.clear();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      char char0 = '<';
      int int0 = 3325;
      int int1 = 116;
      // Undeclared exception!
      try { 
        strBuilder5.validateRange(3325, 116);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.stringMatcher(")ob[nEyTk@{,T7]");
      StrBuilder strBuilder1 = strBuilder0.appendPadding(48, 'G');
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      StrBuilder strBuilder2 = new StrBuilder();
      StrBuilder strBuilder3 = strBuilder2.deleteFirst("XE@O8<+<3#Ny[");
      StrBuilder strBuilder4 = new StrBuilder(")ob[nEyTk@{,T7]");
      StrBuilder strBuilder5 = strBuilder4.replaceFirst(strMatcher0, "!P");
      StrBuilder strBuilder6 = strBuilder4.ensureCapacity((-1164));
      StrBuilder strBuilder7 = strBuilder0.append((double) (-1164));
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) strBuilder4;
      objectArray0[1] = (Object) strBuilder4;
      StrBuilder strBuilder8 = new StrBuilder("#MXJ");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder8.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      objectArray0[2] = object0;
      objectArray0[3] = (Object) strBuilder5;
      objectArray0[4] = (Object) strBuilder3;
      objectArray0[5] = (Object) ")ob[nEyTk@{,T7]";
      objectArray0[6] = (Object) strBuilder3;
      objectArray0[7] = (Object) "!P";
      objectArray0[8] = (Object) "!P";
      StrBuilder strBuilder9 = strBuilder3.appendWithSeparators(objectArray0, (String) null);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(208);
      StrBuilder strBuilder1 = strBuilder0.appendPadding(208, 'p');
      StrBuilder strBuilder2 = strBuilder1.setLength(208);
      StrBuilder strBuilder3 = strBuilder2.clear();
      int int0 = strBuilder0.lastIndexOf('$');
      StrBuilder strBuilder4 = strBuilder0.append(true);
      char[] charArray0 = new char[8];
      charArray0[0] = '$';
      charArray0[1] = 'p';
      charArray0[2] = 'p';
      charArray0[3] = '$';
      charArray0[4] = 'p';
      charArray0[5] = 'p';
      charArray0[6] = '$';
      charArray0[7] = '$';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder5 = strBuilder4.deleteFirst(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(149);
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst((StrMatcher) strMatcher_TrimMatcher0);
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 149);
      StrMatcher strMatcher1 = StrMatcher.charMatcher('R');
      int int1 = strBuilder0.indexOf('R');
      StrBuilder strBuilder2 = strBuilder0.append(false);
      int int2 = strBuilder1.size();
      StrBuilder strBuilder3 = strBuilder0.replaceFirst(strMatcher0, "/sMf)Na(y_u");
      boolean boolean0 = strBuilder2.equals((Object) strMatcher_TrimMatcher0);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, ",m8|");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher(",m8|");
      strBuilder_StrBuilderWriter0.write((-1382));
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance("");
      StrMatcher strMatcher2 = StrMatcher.stringMatcher("");
      StrTokenizer strTokenizer1 = strBuilder0.asTokenizer();
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Iterator) strTokenizer0, "");
      StrBuilder strBuilder3 = strBuilder0.replaceAll(strMatcher1, ":L](x~j`B29VXqF\"");
      char char0 = '5';
      int int0 = strBuilder2.lastIndexOf('5');
      StrBuilder strBuilder4 = strBuilder2.append(false);
      // Undeclared exception!
      try { 
        strBuilder4.insert((-1), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = 'y';
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      boolean boolean0 = strBuilder0.contains((StrMatcher) strMatcher_TrimMatcher0);
      int int0 = strBuilder0.lastIndexOf('y');
      // Undeclared exception!
      try { 
        strBuilder0.insert((-2599), false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2599
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(", Length: 0");
      int int0 = strBuilder0.indexOf('J');
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) ", Length: 0", (-1), 'c');
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StringBuffer stringBuffer0 = strBuilder1.toStringBuffer();
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Collection) linkedList0, "=%_5");
      StrBuilder strBuilder3 = strBuilder2.setNewLineText(", Length: 0");
      int int1 = strBuilder0.indexOf('J');
      StrBuilder strBuilder4 = new StrBuilder("m[MwJ(UQk{DY=&2Me");
      StrBuilder strBuilder5 = strBuilder0.append((Object) strBuilder4);
      StrBuilder strBuilder6 = strBuilder3.append((-987.7F));
      String string0 = strBuilder1.getNullText();
      StrBuilder strBuilder7 = strBuilder1.appendFixedWidthPadLeft((Object) null, (-1), '3');
      // Undeclared exception!
      try { 
        strBuilder2.insert((-1), false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      String string0 = strBuilder0.leftString(1083);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder("user.name");
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      StrBuilder strBuilder3 = strBuilder2.insert(1, 34);
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      int int0 = strBuilder1.indexOf(strMatcher0, 0);
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      int int0 = 0;
      StrBuilder strBuilder2 = strBuilder0.insert(0, 'f');
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      String string0 = "";
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("");
      StrBuilder strBuilder3 = strBuilder0.replaceFirst(strMatcher0, "yheGG_beCY+vzp?Y");
      int int1 = (-1);
      // Undeclared exception!
      try { 
        strBuilder3.setCharAt((-1), 't');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2);
      int int0 = 1598;
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      int int1 = strBuilder0.indexOf(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder0.insert(1598, '9');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1598
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteAll((StrMatcher) null);
      StrBuilder strBuilder2 = strBuilder1.deleteFirst((StrMatcher) null);
      StrBuilder strBuilder3 = strBuilder1.append((String) null);
      StrBuilder strBuilder4 = strBuilder3.deleteAll("K");
      StrBuilder strBuilder5 = strBuilder4.setNewLineText("K");
      int int0 = strBuilder4.lastIndexOf((StrMatcher) null, (-377));
      String string0 = strBuilder2.substring(0);
      int int1 = strBuilder0.indexOf("56d`~_7");
      int int2 = strBuilder0.lastIndexOf((StrMatcher) null, 116);
      int int3 = (-309);
      StrBuilder strBuilder6 = strBuilder2.appendFixedWidthPadLeft((-309), (-309), '(');
      // Undeclared exception!
      try { 
        strBuilder3.setCharAt(116, 'e');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 116
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder2 = strBuilder0.append((-392.40603880057));
      boolean boolean0 = strBuilder0.equals(strBuilder1);
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      StrBuilder strBuilder3 = strBuilder0.appendPadding(114, 'v');
      int int0 = strBuilder0.validateRange(114, 3326);
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      StrBuilder strBuilder4 = strBuilder0.deleteAll(strMatcher0);
      StrBuilder strBuilder5 = strBuilder4.setCharAt(114, '-');
      int int1 = strBuilder0.lastIndexOf("");
      int int2 = strBuilder5.lastIndexOf(strMatcher1, 129);
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char char0 = ']';
      StrMatcher strMatcher0 = StrMatcher.charMatcher(']');
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, ":VW2WL");
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight((Object) strMatcher0, 0, ']');
      // Undeclared exception!
      try { 
        strBuilder1.charAt(2332);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2332
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("#C");
      char char0 = strBuilder0.charAt(0);
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      String string0 = "A>M";
      StrBuilder strBuilder0 = new StrBuilder("A>M");
      // Undeclared exception!
      try { 
        strBuilder0.insert(2171, (Object) "A>M");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2171
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("Invalid offset: ");
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1633), (Object) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1633
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add(0, "Bn%FjUd\"krD[WTR");
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "#qDhHhU'#");
      Reader reader0 = strBuilder1.asReader();
      StrBuilder strBuilder2 = strBuilder1.setLength(97);
      StrBuilder strBuilder3 = strBuilder1.append("9j9Trkh3y/", 0, 0);
      StrBuilder strBuilder4 = strBuilder1.deleteAll((String) null);
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.trim();
      Reader reader0 = strBuilder0.asReader();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoredChar('?');
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder strBuilder2 = strBuilder1.appendNull();
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      int int0 = 117;
      StrBuilder strBuilder0 = new StrBuilder(117);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      String string0 = "|Tz5.k[xvp@\\b/pY";
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) strBuilder_StrBuilderWriter0, 117, 'd');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('e');
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setTrimmerMatcher(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.appendNewLine();
      StrBuilder strBuilder3 = strBuilder1.appendWithSeparators((Iterator) strTokenizer0, "");
      strBuilder0.size = (-445);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(117);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("p4[]P_13^mWT{Bxq");
      StrBuilder strBuilder1 = strBuilder0.append((-1891));
      StrBuilder strBuilder2 = strBuilder1.ensureCapacity((-1891));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoredChar('m');
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators((Iterator) strTokenizer0, "p4[]P_13^mWT{Bxq");
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer1 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer1.getIgnoredMatcher();
      int int0 = strBuilder1.indexOf(strMatcher0, (-1891));
      strBuilder_StrBuilderReader0.reset();
      int int1 = strBuilder1.capacity();
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append('S');
      StrBuilder strBuilder2 = strBuilder0.deleteFirst('k');
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(101);
      int int0 = strBuilder0.length();
      StrBuilder strBuilder1 = strBuilder0.clear();
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2974);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      char[] charArray0 = new char[6];
      charArray0[0] = '^';
      StrMatcher strMatcher1 = StrMatcher.charMatcher('e');
      charArray0[1] = '';
      charArray0[2] = '0';
      charArray0[3] = '`';
      charArray0[4] = 'K';
      charArray0[5] = '#';
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher(charArray0);
      String string0 = "java.lang.Object";
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "java.lang.Object");
      StrBuilder strBuilder2 = strBuilder0.append("Array element ");
      String string1 = "";
      // Undeclared exception!
      try { 
        strBuilder0.insert(2974, "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2974
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.insert(0, 0.0F);
      StrBuilder strBuilder2 = strBuilder1.appendNewLine();
      StrBuilder strBuilder3 = strBuilder1.appendFixedWidthPadRight((Object) strBuilder0, (-56), 'i');
      StrBuilder strBuilder4 = strBuilder3.appendPadding(32, 'i');
      int int0 = (-76);
      StrBuilder strBuilder5 = strBuilder4.ensureCapacity((-76));
      int int1 = 0;
      strBuilder0.validateIndex(0);
      String string0 = "";
      int int2 = strBuilder0.indexOf("");
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 4, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("H!!-");
      StrBuilder strBuilder1 = strBuilder0.setNullText("H!!-");
      char[] charArray0 = new char[3];
      charArray0[0] = 'W';
      charArray0[1] = 'a';
      charArray0[2] = '-';
      strBuilder0.buffer = charArray0;
      char[] charArray1 = strBuilder1.toCharArray(0, 0);
      int int0 = (-119);
      // Undeclared exception!
      try { 
        strBuilder0.deleteAll('9');
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      int int0 = 4887;
      StrBuilder strBuilder0 = new StrBuilder(4887);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder strBuilder1 = strBuilder0.append(true);
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) strBuilder_StrBuilderTokenizer0;
      Object object0 = new Object();
      objectArray0[3] = object0;
      objectArray0[4] = (Object) strBuilder1;
      Object object1 = strBuilder_StrBuilderTokenizer0.clone();
      objectArray0[5] = object1;
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators(objectArray0, "S sCS=6QO~");
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "trueorg.apache.commons.lang.text.StrBuilder@0000000001S sCS=6QO~org.apache.commons.lang.text.StrBuilder@0000000001S sCS=6QO~org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer@0000000002S sCS=6QO~java.lang.Object@0000000003S sCS=6QO~org.apache.commons.lang.text.StrBuilder@0000000001S sCS=6QO~org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer@0000000004");
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 4887, (-2077));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      String string0 = "3! xFzNoK5n";
      StrBuilder strBuilder0 = new StrBuilder("3! xFzNoK5n");
      StrBuilder strBuilder1 = strBuilder0.deleteAll('h');
      // Undeclared exception!
      try { 
        strBuilder0.replace(0, (-2777), "uo>>PhAh*MC1ZTT<}");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(117);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, (String) null);
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft(117, 117, 'Q');
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(0);
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      StrBuilder strBuilder1 = strBuilder0.delete(0, 0);
      LinkedList<StrBuilder> linkedList0 = new LinkedList<StrBuilder>();
      Integer[] integerArray0 = new Integer[0];
      Integer[] integerArray1 = linkedList0.toArray(integerArray0);
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
      StrBuilder strBuilder3 = strBuilder2.append(false);
      int int0 = strBuilder1.indexOf("");
      char[] charArray0 = new char[3];
      charArray0[0] = 'S';
      charArray0[1] = '#';
      charArray0[2] = 'n';
      strBuilder2.getChars(0, 1, charArray0, 0);
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      String string0 = "Invalid length: ";
      StrBuilder strBuilder0 = new StrBuilder("Invalid length: ");
      int int0 = 866;
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      // Undeclared exception!
      try { 
        strBuilder0.insert(866, 1.0F);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 866
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.insert(0, "co}CF\"M0vp");
      StrBuilder strBuilder2 = strBuilder0.append("", 0, 0);
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      int int0 = strBuilder2.indexOf((StrMatcher) strMatcher_TrimMatcher0, 0);
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(259);
      // Undeclared exception!
      try { 
        strBuilder0.insert(734, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 734
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.toString();
      int int0 = strBuilder0.size();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int1 = strBuilder_StrBuilderReader0.read();
      int int2 = strBuilder_StrBuilderReader0.read();
      int int3 = strBuilder_StrBuilderReader0.read();
      int int4 = (-2701);
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity((-2701));
      int int5 = strBuilder0.indexOf('o');
      LinkedList<StrBuilder> linkedList0 = new LinkedList<StrBuilder>();
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Collection) linkedList0, "");
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        strBuilder2.append(stringBuffer0, (-1), (-2701));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Y");
      StrBuilder strBuilder1 = strBuilder0.delete(0, Integer.MAX_VALUE);
      String string0 = strBuilder1.substring(0);
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1);
      StrBuilder strBuilder1 = strBuilder0.appendPadding(1, '{');
      StrBuilder strBuilder2 = strBuilder0.deleteAll('{');
      int int0 = strBuilder1.lastIndexOf('#', 669);
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-533));
      StrBuilder strBuilder1 = strBuilder0.setNullText("k+<|HQ6PcPz0,[q='e");
      StrBuilder strBuilder2 = strBuilder0.minimizeCapacity();
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1092));
      char[] charArray0 = new char[7];
      charArray0[0] = 'h';
      charArray0[1] = 'Z';
      charArray0[2] = 'x';
      charArray0[3] = 'p';
      charArray0[4] = ',';
      charArray0[5] = '@';
      charArray0[6] = '#';
      StrBuilder strBuilder1 = strBuilder0.insert(0, charArray0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-313));
      boolean boolean0 = strBuilder0.startsWith("Array element ");
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrBuilder strBuilder2 = new StrBuilder((-313));
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder2);
      char char0 = 'Q';
      char[] charArray0 = new char[5];
      charArray0[0] = 'Q';
      charArray0[1] = 'Q';
      charArray0[2] = 'Q';
      charArray0[3] = 'Q';
      charArray0[4] = 'Q';
      // Undeclared exception!
      try { 
        strBuilder2.insert((-313), charArray0, 0, (-313));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -313
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-3003));
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("j-3FFLBy\"u");
      StringBuffer stringBuffer0 = new StringBuffer(44);
      StrBuilder strBuilder2 = strBuilder1.append(stringBuffer0);
      int int0 = strBuilder0.capacity();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrBuilder strBuilder3 = strBuilder0.replaceAll(strMatcher0, "j-3FFLBy\"u");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder3.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
      StrBuilder strBuilder4 = strBuilder2.appendNewLine();
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 116;
      char[] charArray0 = new char[4];
      charArray0[0] = '>';
      char char0 = 'l';
      String string0 = "LuMFrpQ2%E#X0";
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("LuMFrpQ2%E#X0");
      StrBuilder strBuilder2 = strBuilder1.minimizeCapacity();
      StrBuilder strBuilder3 = strBuilder2.setNewLineText("LuMFrpQ2%E#X0");
      // Undeclared exception!
      try { 
        strBuilder1.insert(559, (Object) strBuilder0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 559
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1923);
      StrBuilder strBuilder1 = strBuilder0.append(1923);
      StrBuilder strBuilder2 = strBuilder0.append((float) 1923);
      StrBuilder strBuilder3 = strBuilder0.setLength(1923);
      StrBuilder strBuilder4 = strBuilder0.setNullText("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      boolean boolean0 = strBuilder0.isEmpty();
      StrBuilder strBuilder5 = strBuilder0.setNullText("B");
      StrBuilder strBuilder6 = strBuilder4.append((StringBuffer) null);
      StrBuilder strBuilder7 = strBuilder6.append((StringBuffer) null, 4201, 1923);
      int int0 = strBuilder3.indexOf((String) null);
      StrBuilder strBuilder8 = strBuilder6.append((float) (-1));
      int int1 = strBuilder4.indexOf('P', (-1));
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = 18;
      StrBuilder strBuilder1 = strBuilder0.appendPadding(18, ';');
      StrBuilder strBuilder2 = strBuilder0.setNewLineText("");
      StrBuilder strBuilder3 = strBuilder2.append((char[]) null);
      StrBuilder strBuilder4 = strBuilder1.append((StringBuffer) null, 18, (-2252));
      char[] charArray0 = strBuilder4.toCharArray(0, 18);
      StrBuilder strBuilder5 = strBuilder1.append(1213L);
      StrBuilder strBuilder6 = strBuilder4.append(0L);
      strBuilder0.buffer = charArray0;
      StrBuilder strBuilder7 = strBuilder6.setLength(18);
      int int1 = strBuilder1.validateRange(18, 18);
      StrBuilder strBuilder8 = strBuilder2.replaceFirst("Irix", "<q");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder6.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoreEmptyTokens(true);
      StrBuilder strBuilder9 = strBuilder6.appendWithSeparators((Iterator) strTokenizer0, "org.apache.commons.lang.text.StrMatcher$StringMatcher");
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      boolean boolean0 = strBuilder6.contains(strMatcher0);
      Writer writer0 = strBuilder2.asWriter();
      // Undeclared exception!
      try { 
        strBuilder0.insert(744, false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 744
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.appendPadding(0, ';');
      StrBuilder strBuilder2 = strBuilder0.setNewLineText("");
      StrBuilder strBuilder3 = strBuilder2.append((char[]) null);
      StrBuilder strBuilder4 = strBuilder1.append((StringBuffer) null, 0, (-2252));
      char[] charArray0 = strBuilder4.toCharArray(0, 0);
      StrBuilder strBuilder5 = strBuilder1.append(1213L);
      StrBuilder strBuilder6 = strBuilder4.append(0L);
      strBuilder0.buffer = charArray0;
      StrBuilder strBuilder7 = strBuilder6.setLength(0);
      int int1 = strBuilder1.validateRange(0, 0);
      StrBuilder strBuilder8 = strBuilder2.replaceFirst("Irix", "<q");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder6.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoreEmptyTokens(false);
      StrBuilder strBuilder9 = strBuilder6.appendWithSeparators((Iterator) strTokenizer0, "org.apache.commons.lang.text.StrMatcher$StringMatcher");
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      boolean boolean0 = strBuilder6.contains(strMatcher0);
      Writer writer0 = strBuilder2.asWriter();
      // Undeclared exception!
      try { 
        strBuilder0.insert(744, false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 744
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      String string0 = "3! xFzNoK5n";
      StrBuilder strBuilder0 = new StrBuilder("3! xFzNoK5n");
      // Undeclared exception!
      try { 
        strBuilder0.replace(0, (-2777), "uo>>PhAh*MC1ZTT<}");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1912);
      // Undeclared exception!
      try { 
        strBuilder0.delete(404, 1);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append("", 0, 0);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("");
      StrBuilder strBuilder2 = strBuilder1.deleteAll(strMatcher0);
      strBuilder0.validateIndex(0);
      char[] charArray0 = new char[5];
      charArray0[0] = 's';
      charArray0[1] = '`';
      charArray0[2] = '5';
      charArray0[3] = 'X';
      charArray0[4] = 'a';
      strBuilder2.buffer = charArray0;
      StrBuilder strBuilder3 = strBuilder2.append((double) 0);
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder4 = strBuilder2.deleteAll("");
      int int0 = strBuilder4.lastIndexOf(strMatcher0, 0);
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher("mDwhUoAEx{3 3\"G;");
      StrBuilder strBuilder5 = strBuilder3.replaceFirst("", "NK2");
      String string0 = strBuilder2.midString(0, 72);
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(72);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 72
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }
}
