/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 28 18:44:57 GMT 2020
 */

package org.apache.commons.lang.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.Writer;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.NoSuchElementException;
import org.apache.commons.lang.text.StrBuilder;
import org.apache.commons.lang.text.StrMatcher;
import org.apache.commons.lang.text.StrTokenizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StrBuilder_ESTest extends StrBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("57L)9U06^>9mHJ?]lx?");
      char[] charArray0 = new char[5];
      charArray0[2] = 'C';
      charArray0[1] = 'C';
      charArray0[2] = '+';
      charArray0[3] = '+';
      charArray0[4] = 'i';
      StrBuilder strBuilder1 = strBuilder0.insert(0, charArray0);
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft(0, (-1613), '6');
      StrBuilder strBuilder3 = strBuilder2.append((StringBuffer) null, (-1613), (-1));
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) "";
      objectArray0[3] = (Object) "";
      objectArray0[4] = (Object) "";
      objectArray0[5] = (Object) strBuilder0;
      objectArray0[6] = (Object) "";
      Object object0 = new Object();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "");
      StrMatcher strMatcher0 = StrMatcher.charMatcher('H');
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("{PyQML7!Dt'f=");
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher("startIndex must be valid");
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.replaceFirst(strMatcher0, "");
      StrBuilder strBuilder3 = strBuilder0.replaceFirst("UWQ/>nQXo`^-J\"Sz", "");
      StrBuilder strBuilder4 = strBuilder3.minimizeCapacity();
      int int0 = strBuilder3.indexOf(strMatcher2);
      char char0 = strBuilder3.charAt(97);
      char[] charArray0 = strBuilder0.toCharArray();
      StrBuilder strBuilder5 = strBuilder2.append((Object) strMatcher1);
      String string0 = strBuilder1.substring(97);
      char[] charArray1 = strBuilder1.toCharArray(1, 97);
      int int1 = strBuilder2.indexOf(strMatcher0, 1);
      // Undeclared exception!
      try { 
        strBuilder3.deleteCharAt((-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 1956;
      char[] charArray0 = new char[4];
      charArray0[0] = 'H';
      charArray0[1] = 'a';
      int int1 = 48;
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadLeft((Object) null, 48, 'H');
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      int int0 = strBuilder0.indexOf("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrMatcher strMatcher0 = StrMatcher.stringMatcher((String) null);
      char[] charArray0 = new char[3];
      charArray0[0] = 'k';
      StrBuilder strBuilder1 = strBuilder0.replaceFirst((String) null, "");
      int int0 = strMatcher0.isMatch(charArray0, 116, 31, 0);
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      charArray0[1] = 'k';
      charArray0[2] = '6';
      int int1 = strMatcher0.isMatch(charArray0, (-486), (-486), (-486));
      int int2 = strMatcher0.isMatch(charArray0, (-2052), (-486), 2192);
      StrBuilder strBuilder2 = strBuilder0.append((-741L));
      char[] charArray1 = new char[0];
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher(charArray1);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      int int3 = strBuilder0.indexOf(strMatcher0);
      String string0 = strBuilder2.getNewLineText();
      StrBuilder strBuilder3 = strBuilder0.appendNull();
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("`5($d5$3m{!*Fvpn");
      StrBuilder strBuilder1 = strBuilder0.clear();
      Reader reader0 = strBuilder1.asReader();
      StrBuilder strBuilder2 = strBuilder0.append((-2704.2F));
      StrBuilder strBuilder3 = strBuilder0.append((-775.2714F));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder3.new StrBuilderTokenizer();
      StrBuilder strBuilder4 = strBuilder0.append(strBuilder1);
      Integer integer0 = new Integer(9);
      StrBuilder strBuilder5 = strBuilder4.append((Object) integer0);
      StrBuilder strBuilder6 = strBuilder4.ensureCapacity(9);
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder strBuilder7 = strBuilder0.appendFixedWidthPadLeft(object0, 3968, 'C');
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      boolean boolean0 = strBuilder0.startsWith("");
      StrBuilder strBuilder8 = strBuilder1.deleteAll("gYe6,La*]%t`");
      StrMatcher strMatcher0 = StrMatcher.charMatcher('C');
      // Undeclared exception!
      try { 
        strBuilder0.replaceAll(strMatcher0, "gYe6,La*]%t`");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      int int0 = 1974;
      StrBuilder strBuilder0 = new StrBuilder(1974);
      String string0 = "";
      int int1 = 3156;
      char char0 = 's';
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight((Object) "", 3156, 's');
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      char[] charArray0 = new char[8];
      StrBuilder strBuilder0 = new StrBuilder(9);
      StrBuilder strBuilder1 = strBuilder0.replaceAll('A', 'T');
      StrBuilder strBuilder2 = new StrBuilder();
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      boolean boolean0 = strBuilder2.contains((StrMatcher) strMatcher_NoMatcher0);
      StrBuilder strBuilder3 = new StrBuilder("zA*EQ1I#Cblf");
      StrBuilder strBuilder4 = strBuilder3.deleteFirst('>');
      charArray0[0] = 'A';
      charArray0[1] = '{';
      charArray0[2] = '\"';
      charArray0[3] = ':';
      charArray0[4] = 'd';
      charArray0[5] = 'C';
      charArray0[6] = 'r';
      charArray0[7] = 'H';
      StringBuffer stringBuffer0 = new StringBuffer("");
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(1805, 4, '7');
      boolean boolean0 = strBuilder0.contains('T');
      int int0 = strBuilder0.indexOf('8', 4);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("startIndex must be valid");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      char[] charArray0 = new char[0];
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrBuilder strBuilder2 = strBuilder1.replaceFirst(strMatcher0, "startIndex must be valid");
      StrBuilder strBuilder3 = new StrBuilder();
      StrBuilder strBuilder4 = strBuilder0.append('0');
      String string0 = strBuilder3.toString();
      int int0 = strBuilder3.indexOf(strMatcher0, 2005);
      String string1 = strBuilder0.midString(0, 2453);
      String string2 = strBuilder3.rightString(0);
      char[] charArray1 = strBuilder0.toCharArray();
      StrBuilder strBuilder5 = strBuilder4.insert(0, 0L);
      int int1 = strBuilder0.size();
      // Undeclared exception!
      try { 
        strBuilder4.insert((-2838), "startIndex must be valid");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2838
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.home");
      StrBuilder strBuilder1 = strBuilder0.clear();
      strBuilder0.size = 114;
      int int0 = 1;
      // Undeclared exception!
      try { 
        strBuilder0.insert(1, false);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrMatcher strMatcher0 = StrMatcher.stringMatcher((String) null);
      char[] charArray0 = new char[3];
      charArray0[0] = 'k';
      int int0 = strMatcher0.isMatch(charArray0, 116, 31, 0);
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      charArray0[1] = 'k';
      charArray0[2] = '6';
      int int1 = strMatcher0.isMatch(charArray0, (-486), (-486), (-486));
      int int2 = strMatcher0.isMatch(charArray0, (-2052), (-486), 2192);
      StrBuilder strBuilder1 = strBuilder0.append((-741L));
      char[] charArray1 = new char[0];
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher(charArray1);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      int int3 = strBuilder0.indexOf(strMatcher0);
      String string0 = strBuilder1.getNewLineText();
      boolean boolean0 = strBuilder1.equalsIgnoreCase(strBuilder0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.clear();
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder2 = strBuilder0.append((-2704.2F));
      StrBuilder strBuilder3 = strBuilder0.append((-775.2714F));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder3.new StrBuilderTokenizer();
      StrBuilder strBuilder4 = strBuilder0.append(strBuilder1);
      StrBuilder strBuilder5 = strBuilder4.ensureCapacity(9);
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder strBuilder6 = strBuilder0.appendFixedWidthPadLeft(object0, 3968, 'C');
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder7 = strBuilder1.deleteAll("gYe6,La*]%t`");
      int int0 = strBuilder2.indexOf('C', 57);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder();
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder2 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder1.appendFixedWidthPadRight((Object) strBuilder2, 2604, '4');
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(1.5);
      int int0 = new Integer(0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      // Undeclared exception!
      try { 
        strBuilder1.delete(3, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = new StrBuilder(108);
      StrBuilder strBuilder2 = strBuilder1.append(1L);
      StrBuilder strBuilder3 = strBuilder2.deleteFirst("");
      boolean boolean0 = strBuilder0.equals(strBuilder1);
      int int0 = strBuilder0.lastIndexOf('1', 108);
      boolean boolean1 = strBuilder0.contains((String) null);
      StrBuilder strBuilder4 = new StrBuilder("b2J+}!0^");
      Reader reader0 = strBuilder4.asReader();
      StrBuilder strBuilder5 = strBuilder0.appendFixedWidthPadLeft((Object) strBuilder4, (-1), '1');
      Writer writer0 = strBuilder5.asWriter();
      int int1 = strBuilder0.indexOf("4", 108);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      char[] charArray0 = new char[8];
      charArray0[0] = '1';
      charArray0[1] = '1';
      charArray0[2] = '!';
      charArray0[3] = '1';
      charArray0[4] = 'u';
      charArray0[5] = '1';
      charArray0[6] = '1';
      charArray0[7] = '1';
      strBuilder_StrBuilderWriter0.write(charArray0);
      strBuilder_StrBuilderWriter0.write((-44));
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrBuilder strBuilder6 = strBuilder2.replaceAll((StrMatcher) strMatcher_NoMatcher0, (String) null);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[5];
      char char0 = '(';
      StrBuilder strBuilder1 = new StrBuilder("");
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, 10, 10);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder1 = new StrBuilder(4);
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "aje%z^");
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, 32, 1364);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      strBuilder0.size = 232;
      String string0 = strBuilder0.substring(0, 0);
      int int0 = strBuilder0.lastIndexOf((StrMatcher) null, 0);
      String string1 = strBuilder0.midString(9, 9);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(0);
      StrBuilder strBuilder2 = strBuilder1.appendPadding(847, 'M');
      StrBuilder strBuilder3 = strBuilder0.replaceFirst('M', 'O');
      StrBuilder strBuilder4 = strBuilder3.setLength(442);
      StrBuilder strBuilder5 = strBuilder4.appendFixedWidthPadRight(0, (-400), 'M');
      int int0 = strBuilder4.size();
      boolean boolean0 = strBuilder5.equals((Object) strBuilder4);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("`5($d5$3m{!*Fvpn");
      StrBuilder strBuilder1 = strBuilder0.clear();
      Reader reader0 = strBuilder1.asReader();
      StrBuilder strBuilder2 = strBuilder0.append((-2704.2F));
      StrBuilder strBuilder3 = strBuilder0.append((-775.2714F));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder3.new StrBuilderTokenizer();
      StrBuilder strBuilder4 = strBuilder0.append(strBuilder1);
      StrBuilder strBuilder5 = strBuilder4.ensureCapacity(9);
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder strBuilder6 = strBuilder0.appendFixedWidthPadLeft(object0, 3968, 'C');
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder7 = strBuilder1.deleteAll("gYe6,La*]%t`");
      StrMatcher strMatcher0 = StrMatcher.charMatcher('C');
      // Undeclared exception!
      try { 
        strBuilder0.replaceAll(strMatcher0, "gYe6,La*]%t`");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "Invalid offset: ";
      boolean boolean0 = strBuilder0.startsWith("Invalid offset: ");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[9];
      charArray0[0] = '+';
      charArray0[1] = 'Q';
      charArray0[2] = 'r';
      Writer writer0 = strBuilder0.asWriter();
      charArray0[3] = '&';
      charArray0[4] = 'Q';
      charArray0[5] = 'F';
      charArray0[6] = '5';
      charArray0[7] = 'p';
      char char0 = 'B';
      charArray0[8] = 'B';
      int int0 = 340;
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 340, 340);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("5.1");
      String string0 = strBuilder0.midString(0, 0);
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      boolean boolean0 = strBuilder0.endsWith("");
      StrBuilder strBuilder1 = strBuilder0.append((-363.01));
      StrBuilder strBuilder2 = strBuilder1.setNullText("LINUX");
      StrBuilder strBuilder3 = strBuilder0.insert(0, 354L);
      int int0 = strBuilder3.indexOf('!', 937);
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("4.9");
      StrBuilder strBuilder4 = strBuilder2.deleteAll(strMatcher0);
      String string1 = strBuilder4.getNullText();
      StrBuilder strBuilder5 = strBuilder4.deleteFirst("");
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder2 = strBuilder0.deleteAll("{}");
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder strBuilder3 = strBuilder0.insert(0, (float) 0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("{}");
      StringBuffer stringBuffer1 = strBuilder2.toStringBuffer();
      strBuilder_StrBuilderWriter0.write(0);
      StrBuilder strBuilder4 = strBuilder2.append('M');
      strBuilder_StrBuilderWriter0.write((char[]) null);
      int int0 = strBuilder4.size();
      strBuilder_StrBuilderWriter0.write((char[]) null, 5, 0);
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setQuoteChar('M');
      StrBuilder strBuilder5 = strBuilder2.appendWithSeparators((Iterator) strTokenizer0, "{}");
      char[] charArray0 = new char[5];
      charArray0[0] = 'M';
      charArray0[1] = 'M';
      charArray0[2] = 'M';
      charArray0[3] = 'M';
      charArray0[4] = 'M';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      int int1 = strBuilder0.lastIndexOf(strMatcher0, 0);
      String string0 = strBuilder4.getNewLineText();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      Reader reader0 = strBuilder1.asReader();
      StrBuilder strBuilder6 = strBuilder0.insert(0, (double) 0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      String string0 = "java.util.prefs.PreferencesFactory";
      StrBuilder strBuilder0 = new StrBuilder("java.util.prefs.PreferencesFactory");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      int int0 = 2;
      strBuilder_StrBuilderReader0.mark(2);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) null, 0, '.');
      StrBuilder strBuilder2 = strBuilder1.append(4);
      int int1 = strBuilder0.indexOf("Mac", 115);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      char[] charArray0 = new char[5];
      charArray0[0] = '.';
      charArray0[1] = '.';
      charArray0[2] = '.';
      charArray0[3] = '.';
      charArray0[4] = '.';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, (-4315), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      String string0 = "p:]\"A=PZJ7N2|omQf<";
      StrBuilder strBuilder0 = new StrBuilder("p:]\"A=PZJ7N2|omQf<");
      StrBuilder strBuilder1 = strBuilder0.append("p:]\"A=PZJ7N2|omQf<");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      strBuilder0.buffer = null;
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      int int0 = strBuilder1.lastIndexOf(strMatcher0, (-1664));
      // Undeclared exception!
      try { 
        strBuilder0.append(0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      boolean boolean0 = linkedList0.add((Object) strBuilder0);
      String string0 = "Dg$62;Z";
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "Dg$62;Z");
      int int0 = (-1686);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrBuilder strBuilder2 = strBuilder0.ensureCapacity((-1));
      StrBuilder strBuilder3 = strBuilder0.deleteAll(strMatcher0);
      StrBuilder strBuilder4 = strBuilder0.ensureCapacity((-1686));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = null;
      int int1 = 2717;
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read((char[]) null, (-1686), 2717);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = (-408);
      int int1 = 0;
      StrBuilder strBuilder1 = strBuilder0.append((StrBuilder) null, (-408), 0);
      int int2 = 1633;
      // Undeclared exception!
      try { 
        strBuilder1.validateRange(1633, 34);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      String string0 = null;
      StrBuilder strBuilder1 = strBuilder0.deleteFirst((String) null);
      // Undeclared exception!
      try { 
        strBuilder1.validateIndex((-1147));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1147
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(" DRGYj P&NQ d");
      int int0 = strBuilder0.size();
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrBuilder strBuilder2 = strBuilder1.minimizeCapacity();
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      StrBuilder strBuilder3 = strBuilder1.deleteFirst(strMatcher0);
      StrBuilder strBuilder4 = strBuilder3.appendFixedWidthPadLeft(115, 0, 'D');
      StrBuilder strBuilder5 = strBuilder1.append(115);
      StrBuilder strBuilder6 = strBuilder5.minimizeCapacity();
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder2, 0, 4);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder2 = strBuilder0.append((StringBuffer) null);
      StrBuilder strBuilder3 = strBuilder0.append(695.902F);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder4 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder3.new StrBuilderTokenizer();
      char[] charArray0 = new char[2];
      charArray0[0] = 'X';
      StrBuilder strBuilder5 = strBuilder0.append(3462.1281);
      char[] charArray1 = new char[9];
      charArray1[0] = 'X';
      charArray1[1] = '\"';
      charArray1[2] = 'X';
      charArray1[3] = '\"';
      charArray1[4] = 'X';
      charArray1[5] = 'X';
      charArray1[6] = ']';
      charArray1[7] = 'X';
      charArray1[8] = 'X';
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance(charArray1);
      charArray0[1] = '\"';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 1596, 1596);
      StrBuilder strBuilder6 = strBuilder2.deleteFirst(".Q6Zv7.");
      StrBuilder strBuilder7 = strBuilder6.appendPadding(1596, 'X');
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("");
      boolean boolean0 = strBuilder6.contains((StrMatcher) strMatcher_StringMatcher0);
      StrBuilder strBuilder8 = strBuilder4.replaceAll((String) null, "Invalid offset: ");
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      String string0 = "MnkPP>lP2?um";
      StrBuilder strBuilder0 = new StrBuilder("MnkPP>lP2?um");
      String string1 = null;
      StrBuilder strBuilder1 = strBuilder0.setNullText((String) null);
      int int0 = 2258;
      char char0 = 's';
      // Undeclared exception!
      try { 
        strBuilder0.insert(117, 's');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 117
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-3715));
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder0.append(true);
      char char0 = 'g';
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadLeft((Object) strBuilder1, Integer.MAX_VALUE, 'g');
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      String string0 = null;
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.replaceAll("A1V*P}xA8b/8'_Trt/", (String) null);
      int int0 = 1032;
      int int1 = (-289);
      // Undeclared exception!
      try { 
        strBuilder0.charAt(1032);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1032
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendPadding((-2483), '~');
      int int0 = 0;
      Writer writer0 = strBuilder1.asWriter();
      String string0 = strBuilder1.toString();
      // Undeclared exception!
      try { 
        strBuilder1.charAt((-2483));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2483
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-615));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("kg*PoFu]J!|(&Lw");
      strBuilder_StrBuilderWriter0.write("sT=\"*x7ee}");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("(72b!L@%A");
      strBuilder_StrBuilderWriter0.write("ErKUiS|UY^tU }{iJUw");
      StrBuilder strBuilder2 = new StrBuilder("ErKUiS|UY^tU }{iJUw");
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder2);
      strBuilder_StrBuilderWriter0.write(39);
      boolean boolean1 = strBuilder0.equalsIgnoreCase(strBuilder2);
      int int0 = strBuilder2.length();
      int int1 = strBuilder1.indexOf('v', (-297));
      StrBuilder strBuilder3 = strBuilder2.appendNull();
      int int2 = strBuilder1.lastIndexOf('t', 19);
      char[] charArray0 = new char[3];
      charArray0[0] = 't';
      charArray0[1] = '5';
      charArray0[2] = 't';
      StrBuilder strBuilder4 = strBuilder3.append(charArray0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("add() is unsupported");
      char char0 = strBuilder0.charAt(0);
      char[] charArray0 = new char[8];
      charArray0[0] = ',';
      charArray0[1] = '5';
      charArray0[2] = 'f';
      char char1 = 'p';
      charArray0[3] = 'p';
      charArray0[4] = 'X';
      charArray0[5] = '?';
      charArray0[6] = 'R';
      charArray0[7] = '2';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      // Undeclared exception!
      try { 
        strBuilder0.replace(0, (-501), "add() is unsupported");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = 0;
      int int1 = strBuilder_StrBuilderReader0.read();
      strBuilder_StrBuilderReader0.mark(0);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("ce6ZRDO{b*\"");
      strBuilder_StrBuilderReader0.reset();
      String string0 = "m(0/L\"'`XPcx?0";
      int int2 = strBuilder0.lastIndexOf("m(0/L\"'`XPcx?0", 1745);
      int int3 = 5;
      // Undeclared exception!
      try { 
        strBuilder0.append("A^#&", 5, 1745);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      int int0 = (-686);
      StrBuilder strBuilder0 = new StrBuilder((-686));
      int int1 = strBuilder0.hashCode();
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      char[] charArray0 = new char[4];
      charArray0[0] = 'e';
      char char0 = '$';
      charArray0[1] = '$';
      charArray0[2] = '0';
      charArray0[3] = '1';
      int int2 = 702;
      StrBuilder strBuilder1 = strBuilder0.append((String) null);
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("%kgWD\u0006e/i.X)=#i");
      // Undeclared exception!
      try { 
        strMatcher0.isMatch(charArray0, (-686), (-686), 702);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("2@");
      StrBuilder strBuilder1 = strBuilder0.setNullText("7 `9'}K7@`Ks{w8*");
      StrBuilder strBuilder2 = strBuilder0.append("java.class.version");
      StrBuilder strBuilder3 = strBuilder0.reverse();
      StrBuilder strBuilder4 = strBuilder3.append(true);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder4.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(0L);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder4.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("", (-167), (-167));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      StrBuilder strBuilder2 = strBuilder0.trim();
      int int0 = (-1999);
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadLeft((-1999), 0, 'V');
      StrBuilder strBuilder4 = strBuilder2.ensureCapacity((-1999));
      StrBuilder strBuilder5 = strBuilder1.append(strBuilder2);
      StrBuilder strBuilder6 = strBuilder5.setNewLineText("");
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      // Undeclared exception!
      try { 
        strBuilder4.replace(strMatcher0, "", (-1999), 2, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1999
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[4];
      charArray0[0] = 'f';
      charArray0[1] = '=';
      charArray0[2] = 'n';
      charArray0[3] = 'e';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(0, 0, charArray0, (-863));
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("ZI");
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      int int0 = strBuilder1.indexOf(strMatcher0, (-1495));
      int int1 = strBuilder0.indexOf("The Array must not be null");
      char[] charArray0 = new char[9];
      charArray0[0] = '8';
      charArray0[1] = 'M';
      charArray0[2] = '7';
      charArray0[3] = '.';
      charArray0[4] = 'J';
      charArray0[5] = '$';
      charArray0[6] = 'M';
      charArray0[7] = 'r';
      charArray0[8] = 'I';
      StrBuilder strBuilder2 = strBuilder0.append(charArray0);
      int int2 = strBuilder2.indexOf('');
      // Undeclared exception!
      try { 
        strBuilder2.getChars((-1), (-1501), charArray0, (-1501));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(363);
      char[] charArray0 = new char[9];
      charArray0[0] = 'H';
      charArray0[1] = 's';
      charArray0[2] = '\\';
      charArray0[3] = '.';
      charArray0[4] = '4';
      charArray0[5] = 'Q';
      charArray0[6] = 'k';
      charArray0[7] = '3';
      charArray0[8] = 'E';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder0.indexOf(strMatcher0, 363);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.replaceFirst('@', '@');
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      int int0 = strBuilder0.indexOf((StrMatcher) strMatcher_NoMatcher0);
      char[] charArray0 = new char[5];
      charArray0[0] = '@';
      int int1 = strMatcher0.isMatch(charArray0, 766, 766, (-1));
      charArray0[1] = '@';
      charArray0[2] = '@';
      charArray0[3] = '@';
      charArray0[4] = '@';
      // Undeclared exception!
      try { 
        strBuilder0.insert(766, charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 766
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      String string0 = "startIndex must be valid";
      StrBuilder strBuilder0 = new StrBuilder("startIndex must be valid");
      String string1 = strBuilder0.getNewLineText();
      Object object0 = null;
      // Undeclared exception!
      try { 
        strBuilder0.insert((-2004), (Object) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2004
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("StrTokenizer");
      String string0 = strBuilder0.leftString(0);
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0, 0, 0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      String string1 = "b)|";
      StrBuilder strBuilder2 = strBuilder0.replaceAll(strMatcher0, "b)|");
      StrBuilder strBuilder3 = strBuilder1.insert(0, "StrTokenizer");
      StrBuilder strBuilder4 = strBuilder3.deleteCharAt(0);
      // Undeclared exception!
      try { 
        strBuilder4.append("StrTokenizer", (-2220), (-2220));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher((String) null);
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(":n;-vN?CEI!\"@I.?");
      char[] charArray0 = null;
      StrBuilder strBuilder2 = strBuilder0.append((char[]) null);
      StrBuilder strBuilder3 = strBuilder2.appendPadding(1062, '3');
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder4 = strBuilder0.trim();
      String string0 = strBuilder4.substring(0);
      boolean boolean1 = strBuilder0.contains((StrMatcher) strMatcher_TrimMatcher0);
      StrBuilder strBuilder5 = strBuilder2.append("f<{9:SoC^eJVq2on^U");
      String string1 = "";
      StrBuilder strBuilder6 = strBuilder1.replaceFirst(strMatcher0, "");
      boolean boolean2 = strBuilder0.equals((Object) null);
      // Undeclared exception!
      try { 
        strBuilder1.getChars(0, 0, (char[]) null, 0);
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(799);
      String string0 = strBuilder0.toString();
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      int int0 = 1175;
      StrBuilder strBuilder0 = new StrBuilder(1175);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher((char[]) null);
      // Undeclared exception!
      try { 
        strBuilder1.replace(1175, (-728), "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1441));
      char[] charArray0 = new char[8];
      charArray0[0] = '`';
      charArray0[1] = '';
      charArray0[2] = '8';
      charArray0[3] = 'd';
      charArray0[4] = '/';
      charArray0[5] = '';
      charArray0[6] = '>';
      charArray0[7] = 'H';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.replace((StrMatcher) null, "|d3U4", 0, 0, (-140));
      StrBuilder strBuilder2 = strBuilder0.replace(0, 0, (String) null);
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder3 = strBuilder0.replaceFirst((StrMatcher) strMatcher_TrimMatcher0, "0k:E");
      String string0 = strBuilder2.midString((-296), 0);
      StrBuilder strBuilder4 = strBuilder3.appendFixedWidthPadLeft((-140), 0, '|');
      StrBuilder strBuilder5 = strBuilder4.deleteFirst("0k:E");
      StrBuilder strBuilder6 = strBuilder4.setNewLineText("");
      int int0 = strBuilder2.indexOf("G*,v<<o!M", 0);
      int int1 = 114;
      // Undeclared exception!
      try { 
        strBuilder0.replace((-1749), 114, "G*,v<<o!M");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1749
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1);
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      StringBuffer stringBuffer0 = new StringBuffer(1);
      StringBuffer stringBuffer1 = stringBuffer0.append((float) 1);
      StringBuffer stringBuffer2 = new StringBuffer(stringBuffer0);
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer2);
      int int0 = 1072;
      StrBuilder strBuilder2 = new StrBuilder(1072);
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex(1300);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1300
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("k");
      // Undeclared exception!
      try { 
        strBuilder0.setLength((-1653));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1653
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("', has a length less than 2");
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      char[] charArray0 = new char[6];
      charArray0[0] = '?';
      charArray0[1] = '*';
      charArray0[2] = '`';
      charArray0[3] = '>';
      charArray0[4] = 'q';
      charArray0[5] = '<';
      StrBuilder strBuilder2 = strBuilder1.insert(0, charArray0);
      StrBuilder strBuilder3 = strBuilder1.setCharAt(0, '!');
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadLeft((Object) "', has a length less than 2", 0, '@');
      StrBuilder strBuilder5 = strBuilder4.deleteFirst("', has a length less than 2");
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      // Undeclared exception!
      try { 
        strBuilder0.validateRange((-1593), (-646));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1593
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      int int0 = strBuilder0.size();
      Reader reader0 = strBuilder0.asReader();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      int int1 = strBuilder0.lastIndexOf("=?z%}*> 1hv;WKI", 0);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("m8$_K\"GmUaL");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      String string0 = "jtvuw";
      StrMatcher strMatcher1 = StrMatcher.charMatcher('Y');
      StrMatcher strMatcher2 = StrMatcher.stringMatcher("jtvuw");
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
      // Undeclared exception!
      try { 
        strBuilder0.replace(strMatcher0, "", 116, 0, 116);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = 'F';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(5, 5, 'F');
      // Undeclared exception!
      try { 
        strBuilder1.charAt(5);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 5
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(object0, 3, ',');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      char[] charArray0 = new char[5];
      charArray0[0] = ',';
      charArray0[1] = ',';
      charArray0[2] = ',';
      charArray0[3] = ',';
      charArray0[4] = ',';
      StrBuilder strBuilder2 = strBuilder0.append(charArray0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setLength(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      Object[] objectArray0 = new Object[0];
      StrMatcher strMatcher1 = StrMatcher.charMatcher('T');
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators(objectArray0, "");
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      StrBuilder strBuilder3 = strBuilder1.insert(0, (-2222L));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer1 = strBuilder2.new StrBuilderTokenizer();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer1.previous();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = strBuilder0.substring(0, 0);
      String string1 = strBuilder0.midString(9, 9);
      String string2 = strBuilder0.getNewLineText();
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(5, 'Z');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 5
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setLength(13);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      Object[] objectArray0 = new Object[0];
      StrMatcher strMatcher0 = StrMatcher.charMatcher(']');
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators(objectArray0, "");
      StrBuilder strBuilder3 = strBuilder1.insert(13, (long) 13);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer1 = strBuilder2.new StrBuilderTokenizer();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer1.previous();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2739);
      char[] charArray0 = strBuilder0.toCharArray();
      int int0 = 98;
      char[] charArray1 = new char[2];
      charArray1[0] = '~';
      charArray1[1] = '@';
      // Undeclared exception!
      try { 
        strBuilder0.insert(721, charArray1, 0, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 721
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setNullText("");
      String string0 = strBuilder0.rightString(1);
      StrBuilder strBuilder2 = strBuilder0.append(0.0F);
      StrBuilder strBuilder3 = strBuilder1.deleteFirst("end < start");
      String string1 = strBuilder3.toString();
      StrBuilder strBuilder4 = strBuilder3.trim();
      StrBuilder strBuilder5 = strBuilder4.deleteFirst('i');
      StrBuilder strBuilder6 = strBuilder4.appendFixedWidthPadRight(239, 2, '+');
      int int0 = strBuilder0.hashCode();
      String string2 = strBuilder0.toString();
      boolean boolean0 = strBuilder0.contains("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      strBuilder_StrBuilderReader0.reset();
      StrBuilder strBuilder7 = strBuilder0.replaceAll("end < start", "0.0ja");
      StrBuilder strBuilder8 = strBuilder1.insert(1, 'S');
      char[] charArray0 = new char[8];
      charArray0[0] = 'i';
      charArray0[1] = 'S';
      charArray0[2] = '+';
      charArray0[3] = 'G';
      charArray0[4] = '+';
      charArray0[5] = '+';
      charArray0[6] = '+';
      charArray0[7] = 'i';
      StrBuilder strBuilder9 = strBuilder8.append(charArray0);
      StrBuilder strBuilder10 = strBuilder7.deleteCharAt(0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight(0, 0, 'C');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(0);
      StrBuilder strBuilder3 = strBuilder0.setNullText("ozLOnTP_RT9");
      StrBuilder strBuilder4 = strBuilder2.append((double) 0);
      strBuilder_StrBuilderReader0.close();
      boolean boolean0 = strBuilder2.contains("s$ ");
      int int0 = strBuilder2.size();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((char[]) null, 0, 3);
      int int1 = strBuilder2.indexOf("od;Xpk[bk8e", 9);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      strBuilder_StrBuilderWriter0.write("od;Xpk[bk8e");
      StrBuilder strBuilder5 = strBuilder4.deleteFirst(",#/");
      char[] charArray0 = new char[7];
      charArray0[0] = 'C';
      charArray0[1] = 'e';
      charArray0[2] = 'C';
      charArray0[3] = 'C';
      charArray0[4] = 'C';
      charArray0[5] = 'C';
      charArray0[6] = 'C';
      StrBuilder strBuilder6 = strBuilder5.append(charArray0);
      String string1 = strBuilder0.getNewLineText();
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      int int0 = 1;
      StrBuilder strBuilder0 = new StrBuilder(1);
      // Undeclared exception!
      try { 
        strBuilder0.insert(1, ']');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.clear();
      // Undeclared exception!
      try { 
        strBuilder1.appendFixedWidthPadRight(0, 4057, 'I');
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((String) null, 0, 0);
      StringBuffer stringBuffer0 = new StringBuffer("");
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) "");
      strBuilder_StrBuilderWriter0.close();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[7];
      charArray0[0] = 'q';
      charArray0[1] = '/';
      charArray0[2] = '4';
      charArray0[3] = 'S';
      charArray0[4] = ')';
      charArray0[5] = '+';
      charArray0[6] = 'S';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, (-227), (-227));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      char[] charArray0 = new char[6];
      charArray0[0] = ']';
      charArray0[1] = 'r';
      charArray0[2] = 'Z';
      charArray0[3] = 'L';
      charArray0[4] = 'H';
      charArray0[5] = '@';
      strBuilder0.buffer = charArray0;
      boolean boolean0 = linkedList0.add("length must be valid");
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, (String) null);
      int int0 = strBuilder0.lastIndexOf((String) null);
      StrBuilder strBuilder2 = strBuilder1.append((Object) null);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("end < start");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((String) null, (-907), 1249);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("pc`2.jcS`");
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity((-1));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      char[] charArray0 = new char[9];
      charArray0[0] = 'K';
      charArray0[1] = 'N';
      charArray0[2] = '[';
      charArray0[3] = '\\';
      charArray0[4] = 'Y';
      charArray0[5] = 'M';
      charArray0[6] = '?';
      charArray0[7] = '9';
      charArray0[8] = 'W';
      strBuilder_StrBuilderWriter0.write(charArray0);
      StrBuilder strBuilder2 = strBuilder1.replaceFirst("V", "org.apache.commons.lang.text.StrMatcher$CharMatcher");
      StrBuilder strBuilder3 = strBuilder2.append(strBuilder1);
      StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "Invalid offset: ";
      boolean boolean0 = strBuilder0.startsWith("Invalid offset: ");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[9];
      charArray0[0] = '+';
      charArray0[1] = '`';
      charArray0[2] = 'r';
      Writer writer0 = strBuilder0.asWriter();
      charArray0[3] = '&';
      charArray0[4] = '3';
      charArray0[5] = 'F';
      charArray0[6] = '5';
      charArray0[7] = 'p';
      charArray0[8] = 'B';
      int int0 = 340;
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 340, 340);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("57L)9U06^>9mHJ?]lx?");
      char[] charArray0 = new char[5];
      charArray0[0] = 'R';
      charArray0[1] = 'C';
      charArray0[2] = '<';
      charArray0[3] = '2';
      charArray0[4] = 'i';
      StrBuilder strBuilder1 = strBuilder0.insert(0, charArray0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      char char0 = '=';
      StrMatcher strMatcher1 = StrMatcher.charMatcher('=');
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, (String) null);
      String string0 = "";
      StringBuffer stringBuffer0 = new StringBuffer("");
      // Undeclared exception!
      try { 
        strBuilder1.append(stringBuffer0, 57, 57);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(", '");
      boolean boolean0 = strBuilder0.endsWith("user.country");
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      // Undeclared exception!
      try { 
        strBuilder1.replace(strMatcher0, "", 1548, 785, 785);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1);
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance("");
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Iterator) strTokenizer0, (String) null);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-4211));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[5];
      charArray0[0] = '&';
      charArray0[1] = 'G';
      charArray0[2] = 'h';
      charArray0[3] = ':';
      charArray0[4] = 'm';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0, 1, 0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((StrBuilder) null);
      int int0 = (-1985);
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray((-1985), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1985
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2722);
      int int0 = 0;
      strBuilder0.size = 0;
      char char0 = 'b';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(2722, 0, 'b');
      Writer writer0 = strBuilder1.asWriter();
      char[] charArray0 = strBuilder1.toCharArray(0, 0);
      char[] charArray1 = new char[2];
      StrBuilder strBuilder2 = strBuilder0.appendNull();
      // Undeclared exception!
      try { 
        strBuilder2.validateIndex(5);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 5
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = null;
      StrBuilder strBuilder1 = strBuilder0.replaceAll((String) null, (String) null);
      StrBuilder strBuilder2 = strBuilder0.insert(0, false);
      StringBuffer stringBuffer0 = new StringBuffer(0);
      StrBuilder strBuilder3 = strBuilder0.append(stringBuffer0, 0, 0);
      int int0 = 114;
      char char0 = 'b';
      // Undeclared exception!
      try { 
        strBuilder1.setCharAt(114, 'b');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 114
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[6];
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StrBuilder strBuilder2 = strBuilder0.replaceAll((String) null, "");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadLeft(object0, 1372, 'A');
      String string0 = strBuilder2.rightString(9);
      StrBuilder strBuilder4 = strBuilder2.replace(114, 2393, "");
      int int0 = strBuilder0.size();
      StrBuilder strBuilder5 = strBuilder2.clear();
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrBuilder strBuilder6 = strBuilder3.append(true);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2987));
      String string0 = strBuilder0.leftString(48);
      StrBuilder strBuilder1 = strBuilder0.deleteAll('');
      StrBuilder strBuilder2 = new StrBuilder((-2756));
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[6];
      charArray0[0] = '3';
      charArray0[1] = '7';
      charArray0[2] = '';
      StrBuilder strBuilder1 = strBuilder0.appendPadding(0, '8');
      String string0 = strBuilder1.toString();
      charArray0[3] = '5';
      charArray0[4] = '3';
      charArray0[5] = 'a';
      StrBuilder strBuilder2 = strBuilder0.append(charArray0);
      boolean boolean0 = strBuilder0.equals((Object) null);
      boolean boolean1 = strBuilder0.contains("");
      String string1 = "TaM;}4a";
      boolean boolean2 = strBuilder0.contains("TaM;}4a");
      int int0 = strBuilder0.capacity();
      int int1 = strBuilder2.indexOf('');
      // Undeclared exception!
      try { 
        strBuilder2.deleteCharAt(32);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("b>WSFI;uLCLR1-:3YH");
      char[] charArray0 = new char[8];
      charArray0[0] = 'U';
      charArray0[1] = 'D';
      charArray0[2] = '8';
      charArray0[3] = '\u001F';
      charArray0[4] = '1';
      StrBuilder strBuilder1 = strBuilder0.append(5);
      charArray0[5] = 'n';
      charArray0[6] = '}';
      StrBuilder strBuilder2 = strBuilder1.appendPadding(5, '5');
      int int0 = strBuilder1.indexOf('7');
      charArray0[7] = 'o';
      // Undeclared exception!
      try { 
        strBuilder0.insert((-2234), charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2234
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = new StrBuilder(108);
      StrBuilder strBuilder2 = strBuilder1.append(1L);
      StrBuilder strBuilder3 = strBuilder2.deleteFirst("");
      boolean boolean0 = strBuilder0.equals(strBuilder1);
      int int0 = strBuilder0.lastIndexOf('1', 108);
      boolean boolean1 = strBuilder0.contains((String) null);
      StrBuilder strBuilder4 = new StrBuilder("b2J+}!0^");
      StrBuilder strBuilder5 = strBuilder0.appendFixedWidthPadLeft((Object) strBuilder4, (-1), '1');
      int int1 = strBuilder0.indexOf("4", 108);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      char[] charArray0 = new char[8];
      charArray0[0] = '1';
      charArray0[1] = '1';
      charArray0[2] = '!';
      charArray0[3] = '1';
      charArray0[4] = 'u';
      charArray0[5] = '1';
      charArray0[6] = '1';
      charArray0[7] = '1';
      strBuilder_StrBuilderWriter0.write(charArray0);
      strBuilder_StrBuilderWriter0.write((-44));
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1));
      StrBuilder strBuilder1 = strBuilder0.append(true);
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      char[] charArray0 = new char[5];
      charArray0[0] = ',';
      charArray0[1] = 'X';
      charArray0[2] = '8';
      charArray0[3] = 'D';
      charArray0[4] = 'o';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_NoMatcher0);
      StrBuilder strBuilder2 = strBuilder0.deleteAll("");
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder strBuilder1 = strBuilder0.deleteAll('4');
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      // Undeclared exception!
      try { 
        strBuilder0.insert(362, object0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 362
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      int int0 = (-1538);
      StrBuilder strBuilder0 = new StrBuilder((-1538));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[0];
      strBuilder_StrBuilderWriter0.write(charArray0);
      String string0 = "";
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("", (-1538), (-1538));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder();
      StringBuffer stringBuffer0 = new StringBuffer();
      int int0 = (-2185);
      stringBuffer0.ensureCapacity((-2185));
      int int1 = (-2377);
      // Undeclared exception!
      try { 
        strBuilder1.append(stringBuffer0, (-2377), (-2377));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      int int0 = 5;
      StrBuilder strBuilder0 = new StrBuilder(5);
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder2 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder3 = strBuilder1.append((Object) null);
      String string0 = "startIndex must be valid";
      // Undeclared exception!
      try { 
        strBuilder1.insert(5, "startIndex must be valid");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 5
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('!');
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("");
      int int0 = strBuilder1.lastIndexOf(strMatcher0, 39);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.previousToken();
      StrMatcher strMatcher2 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      char[] charArray0 = new char[3];
      charArray0[0] = '!';
      charArray0[1] = '3';
      charArray0[2] = '!';
      StrMatcher strMatcher3 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder2 = strBuilder0.replaceFirst(strMatcher2, "");
      char[] charArray1 = strBuilder0.toCharArray();
      String string1 = strBuilder0.toString();
      StrBuilder strBuilder3 = strBuilder0.replaceAll("", "Windows 9");
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "");
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 39, 39);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3);
      StrBuilder strBuilder1 = strBuilder0.replaceAll("", "");
      StrBuilder strBuilder2 = strBuilder0.append((-1613));
      char[] charArray0 = new char[0];
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = null;
      StrBuilder strBuilder1 = strBuilder0.setNewLineText((String) null);
      StrBuilder strBuilder2 = strBuilder0.append((Object) null);
      int int0 = 115;
      // Undeclared exception!
      try { 
        strBuilder2.insert(115, (float) 115);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 115
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.insert(0, (-254.06F));
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1643), (-1643));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1643
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2922);
      int int0 = 696;
      String string0 = strBuilder0.rightString(696);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(2922);
      strBuilder_StrBuilderWriter0.write("Rvx");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      StrBuilder strBuilder1 = strBuilder0.insert(0, "!Dk$\"'m");
      StrBuilder strBuilder2 = strBuilder0.delete(0, 2922);
      int int1 = (-3431);
      // Undeclared exception!
      try { 
        strBuilder2.insert((-3431), (double) 696);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3431
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "startIndex must be valid";
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("startIndex must be valid");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      char[] charArray0 = new char[0];
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder2 = strBuilder1.replaceFirst(strMatcher0, "startIndex must be valid");
      // Undeclared exception!
      try { 
        strBuilder1.replace(1, 1, "startIndex must be valid");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = null;
      // Undeclared exception!
      try { 
        strBuilder0.equalsIgnoreCase((StrBuilder) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2648));
      StrBuilder strBuilder1 = new StrBuilder();
      boolean boolean0 = strBuilder0.equals(strBuilder1);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      String string0 = "$R";
      char[] charArray0 = new char[3];
      charArray0[0] = ';';
      charArray0[1] = '1';
      charArray0[2] = 'g';
      int int0 = 0;
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) "$R");
      strBuilder_StrBuilderWriter0.write(charArray0, 0, 0);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 44, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendPadding(1, 'X');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      int int0 = strBuilder1.indexOf(strMatcher0, 1);
      StrBuilder strBuilder2 = strBuilder0.insert(1, "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      String string0 = strBuilder2.substring(1, 1);
      String string1 = strBuilder2.toString();
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("GYd(");
      int int1 = strBuilder2.indexOf((StrMatcher) strMatcher_StringMatcher0);
      StrBuilder strBuilder3 = strBuilder0.deleteFirst("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("/| ");
      StrBuilder strBuilder1 = strBuilder0.deleteAll('?');
      String string0 = "";
      StrBuilder strBuilder2 = new StrBuilder("");
      boolean boolean0 = strBuilder0.equals(strBuilder2);
      char[] charArray0 = new char[5];
      charArray0[0] = '4';
      charArray0[1] = 'j';
      charArray0[2] = 'w';
      charArray0[3] = '-';
      charArray0[4] = 'm';
      char[] charArray1 = strBuilder2.getChars(charArray0);
      Object[] objectArray0 = null;
      // Undeclared exception!
      try { 
        strBuilder1.insert(1049, true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1049
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 3131;
      StringBuffer stringBuffer0 = new StringBuffer(3131);
      int int1 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 3131, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      int int0 = 3058;
      StrBuilder strBuilder0 = new StrBuilder(3058);
      StrBuilder strBuilder1 = strBuilder0.append("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      StrBuilder strBuilder2 = strBuilder0.setNewLineText("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setTrimmerMatcher(strMatcher_NoMatcher0);
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators((Iterator) strTokenizer0, "f/o)2V:I");
      Reader reader0 = strBuilder1.asReader();
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(3058);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3058
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1600);
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("", "end < start");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("end < start");
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setQuoteMatcher(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.replace(0, 0, "");
      StrBuilder strBuilder3 = strBuilder1.appendWithSeparators((Iterator) strTokenizer0, "end < start");
      StrBuilder strBuilder4 = strBuilder0.deleteFirst("a1-`d3 +^.l~O");
      String string0 = strBuilder1.getNewLineText();
      // Undeclared exception!
      try { 
        strBuilder1.substring(1600);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.trim();
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrBuilder strBuilder1 = strBuilder0.append(1.0F);
      int int0 = 0;
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) "", 0, 0);
      StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("", 0, 5);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("D]3A0Fm2f+H.N.<Rh");
      StrBuilder strBuilder1 = strBuilder0.replaceAll('f', '\\');
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[3];
      charArray0[0] = '>';
      charArray0[1] = 'x';
      charArray0[2] = ';';
      StrBuilder strBuilder1 = strBuilder0.append('t');
      int int0 = 72;
      StrBuilder strBuilder2 = strBuilder1.setLength(72);
      int int1 = 1447;
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 1447, 1447);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 1447
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-970));
      StrBuilder strBuilder1 = new StrBuilder((-1108));
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight((Object) strBuilder1, 5, ':');
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(0);
      StrBuilder strBuilder2 = strBuilder0.replaceFirst('M', 'O');
      StrBuilder strBuilder3 = strBuilder2.setLength(442);
      int int0 = strBuilder3.size();
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1635);
      StrBuilder strBuilder1 = strBuilder0.setLength(0);
      StrBuilder strBuilder2 = strBuilder0.replaceFirst("LINUX", "b~(o'F%p{i(EU`).");
      String string0 = strBuilder2.substring(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      char[] charArray0 = new char[6];
      charArray0[0] = 'A';
      charArray0[1] = 'O';
      charArray0[2] = '|';
      charArray0[3] = '*';
      charArray0[4] = 'Y';
      charArray0[5] = 'X';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 1635, 1635);
      StrBuilder strBuilder3 = strBuilder0.replaceAll("b~(o'F%p{i(EU`).", "");
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrBuilder strBuilder4 = strBuilder1.deleteAll(strMatcher0);
      String string1 = strBuilder_StrBuilderTokenizer0.getContent();
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1555);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('A');
      StrBuilder strBuilder2 = strBuilder0.replaceAll("c8~m-'];7lT", "/$&;&q/LNqA[.oU");
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher((String) null);
      char[] charArray0 = new char[1];
      String string0 = strBuilder0.rightString(492);
      charArray0[0] = 'Q';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder3 = strBuilder0.deleteAll(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder3.replace(strMatcher0, "Mvbw:bOikO|;X\u0000~~t", 492, 1555, 492);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-309);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        strBuilder0.append("1.5", 3211, (-309));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('W');
      int int0 = (-745);
      char[] charArray0 = new char[6];
      charArray0[0] = 'W';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      charArray0[1] = 'W';
      charArray0[2] = 'W';
      charArray0[3] = 'W';
      charArray0[4] = 'W';
      charArray0[5] = 'W';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("&U-p=wUf+s");
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.deleteAll("Invalid startIndex: ");
      // Undeclared exception!
      try { 
        strBuilder1.validateIndex((-745));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -745
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "";
      // Undeclared exception!
      try { 
        strBuilder0.insert((-324), "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -324
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(0, 0, '}');
      StrBuilder strBuilder2 = strBuilder0.delete(0, 493);
      StrBuilder strBuilder3 = strBuilder2.append((Object) strBuilder0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      int int0 = strBuilder2.length();
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1238);
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      int int0 = strBuilder0.indexOf((StrMatcher) strMatcher_TrimMatcher0);
      StrBuilder strBuilder1 = strBuilder0.append('6');
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher((char[]) null);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      Object[] objectArray0 = linkedList0.toArray();
      StrMatcher strMatcher2 = StrMatcher.stringMatcher("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Collection) linkedList0, "org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrMatcher strMatcher3 = StrMatcher.charMatcher('6');
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      StrBuilder strBuilder3 = strBuilder1.deleteFirst(strMatcher0);
      char[] charArray0 = strBuilder1.toCharArray();
      StrMatcher strMatcher4 = StrMatcher.stringMatcher("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      boolean boolean1 = strBuilder_StrBuilderReader0.markSupported();
      StrBuilder strBuilder4 = strBuilder3.append(strBuilder0);
      int int1 = 5;
      // Undeclared exception!
      try { 
        strBuilder3.getChars(4, (-1), (char[]) null, 5);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.append((-1052));
      StrBuilder strBuilder2 = strBuilder0.replace(0, 0, "i2Z$Kq:L4");
      StringBuffer stringBuffer0 = strBuilder1.toStringBuffer();
      String string0 = strBuilder0.getNewLineText();
      StrBuilder strBuilder3 = strBuilder1.append("i2Z$Kq:L4");
      StrBuilder strBuilder4 = strBuilder2.appendWithSeparators((Collection) null, (String) null);
      StrBuilder strBuilder5 = strBuilder0.setCharAt(2, '_');
      // Undeclared exception!
      try { 
        strBuilder5.charAt((-1052));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1052
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      String string0 = "(/TsR\")gqwI9bR^&";
      StrBuilder strBuilder0 = new StrBuilder("(/TsR\")gqwI9bR^&");
      StrBuilder strBuilder1 = strBuilder0.append((-459L));
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      StrBuilder strBuilder2 = strBuilder0.replaceFirst(strMatcher0, "H?'/*<OTK[u2h");
      int int0 = 2073;
      char[] charArray0 = new char[6];
      charArray0[0] = 'c';
      charArray0[1] = '1';
      charArray0[2] = 'u';
      charArray0[3] = 'O';
      charArray0[4] = '[';
      charArray0[5] = '$';
      StrBuilder strBuilder3 = strBuilder0.insert(0, true);
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(2073, '.');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2073
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceAll("Invalid length: ", "Invalid length: ");
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      int int0 = strBuilder1.lastIndexOf(strMatcher0, 0);
      StrBuilder strBuilder2 = strBuilder0.append((-25L));
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-441));
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("Invalid offset: ", "Invalid offset: ");
      boolean boolean0 = strBuilder0.endsWith("5xtM&I90");
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder2 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadRight(97, (-441), 'S');
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("/");
      char char0 = ' ';
      StrBuilder strBuilder1 = strBuilder0.deleteAll(' ');
      StrBuilder strBuilder2 = strBuilder0.deleteAll(strMatcher0);
      String string0 = strBuilder0.rightString((-2721));
      StrBuilder strBuilder3 = strBuilder0.append(0.0);
      StrMatcher strMatcher2 = StrMatcher.charMatcher(' ');
      StrBuilder strBuilder4 = strBuilder0.deleteAll(strMatcher0);
      StrBuilder strBuilder5 = strBuilder4.setLength(0);
      StrBuilder strBuilder6 = strBuilder5.clear();
      StrBuilder strBuilder7 = strBuilder5.insert(0, "");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder5.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((-2721));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder5.new StrBuilderTokenizer();
      char[] charArray0 = new char[2];
      charArray0[0] = ' ';
      StrBuilder strBuilder8 = strBuilder4.insert(0, (-2538));
      // Undeclared exception!
      try { 
        strBuilder8.toCharArray(82, (-1063));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = new StrBuilder(0);
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      StrBuilder strBuilder3 = strBuilder0.appendNull();
      StrBuilder strBuilder4 = strBuilder0.appendNewLine();
      StrBuilder strBuilder5 = strBuilder3.insert(0, (char[]) null, 5, 5);
      StrBuilder strBuilder6 = strBuilder5.append((char[]) null);
      // Undeclared exception!
      try { 
        strBuilder6.append("_~wffB\"RB]YDx#i|A7", 97, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = new StrBuilder(0);
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      StrBuilder strBuilder3 = strBuilder0.appendNull();
      StrBuilder strBuilder4 = strBuilder0.appendNewLine();
      StrBuilder strBuilder5 = strBuilder3.insert(0, (char[]) null, 5, 5);
      StrBuilder strBuilder6 = strBuilder5.append((char[]) null);
      StrBuilder strBuilder7 = strBuilder0.replaceAll(']', ']');
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      int int0 = strBuilder1.indexOf(strMatcher0, (-1450));
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-75));
      StrBuilder strBuilder1 = strBuilder0.append(true);
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("6+r^fpg;I<y'@");
      int int0 = strBuilder1.lastIndexOf(strMatcher0, (-75));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((-1));
      int int1 = strBuilder1.lastIndexOf("java.runtime.name");
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((-928L));
      char[] charArray0 = strBuilder0.toCharArray();
      String string0 = strBuilder0.rightString(0);
      StrBuilder strBuilder2 = strBuilder0.deleteFirst('=');
      String string1 = strBuilder2.midString(0, (-363));
      int int0 = strBuilder0.capacity();
      char char0 = strBuilder0.charAt(0);
      StrBuilder strBuilder3 = strBuilder1.clear();
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("b$IYt<ITr8\"z+gOZ$&");
      StrBuilder strBuilder1 = strBuilder0.setLength(2);
      String string0 = strBuilder0.toString();
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("b$");
      StrMatcher strMatcher2 = StrMatcher.stringMatcher("b$IYt<ITr8\"z+gOZ$&");
      int int0 = strBuilder0.indexOf(strMatcher0, 0);
      char[] charArray0 = new char[9];
      charArray0[0] = '-';
      charArray0[1] = 'Q';
      charArray0[2] = '$';
      charArray0[3] = ':';
      charArray0[4] = 'L';
      charArray0[5] = '<';
      charArray0[6] = 'L';
      charArray0[7] = '2';
      charArray0[8] = 'Z';
      // Undeclared exception!
      try { 
        strBuilder1.getChars(32, 32, charArray0, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      String string0 = "org.apache.commons.lang.text.StrMatcher$NoMatcher";
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrMatcher$NoMatcher");
      StrBuilder strBuilder1 = new StrBuilder("Invalid length: ");
      boolean boolean0 = strBuilder0.equals(strBuilder1);
      char char0 = '+';
      StrBuilder strBuilder2 = strBuilder1.append('+');
      int int0 = (-280);
      StrBuilder strBuilder3 = strBuilder2.setNewLineText("Invalid length: ");
      int int1 = (-5132);
      // Undeclared exception!
      try { 
        strBuilder2.append(strBuilder0, (-280), (-5132));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      char[] charArray0 = new char[1];
      charArray0[0] = 'S';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      StrBuilder strBuilder1 = new StrBuilder(456);
      StrBuilder strBuilder2 = strBuilder1.appendPadding(1679, '4');
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder1, 456, 456);
      StrBuilder strBuilder4 = strBuilder0.setNewLineText("xhv");
      // Undeclared exception!
      try { 
        strBuilder0.charAt((-1487));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1487
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Solaris");
      StrBuilder strBuilder1 = strBuilder0.append(1.5);
      int int0 = strBuilder0.lastIndexOf("Solaris", 0);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.charAt(992);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 992
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("startIndex must be valid");
      boolean boolean0 = strBuilder0.endsWith("startIndex must be valid");
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("bB.e/|~R=hTDX");
      StrBuilder strBuilder1 = new StrBuilder("length must be valid");
      StrBuilder strBuilder2 = strBuilder1.insert(13, (Object) "bB.e/|~R=hTDX");
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("length must be valid");
      StrBuilder strBuilder3 = strBuilder1.deleteFirst(strMatcher0);
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      StrBuilder strBuilder4 = strBuilder1.deleteFirst("length must be valid");
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      String string0 = "{}";
      StrBuilder strBuilder0 = new StrBuilder("{}");
      StrBuilder strBuilder1 = strBuilder0.append((-1873.224F));
      char[] charArray0 = new char[2];
      charArray0[0] = '9';
      charArray0[1] = 'v';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 2, 2);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 2
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "java.compiler");
      StrBuilder strBuilder2 = strBuilder0.append(true);
      int int0 = strBuilder2.lastIndexOf(strMatcher0, 0);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.replaceAll('E', 'E');
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      StrBuilder strBuilder2 = strBuilder1.replaceFirst(strMatcher0, "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      StrBuilder strBuilder3 = new StrBuilder((String) null);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder3.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = strBuilder0.length();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) "", 0, '1');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[5];
      charArray0[0] = '1';
      charArray0[1] = '1';
      charArray0[2] = '1';
      charArray0[3] = '1';
      charArray0[4] = '1';
      int int1 = 2839;
      char[] charArray1 = new char[4];
      charArray1[0] = '1';
      charArray1[1] = '1';
      charArray1[2] = '1';
      charArray1[3] = 'V';
      int int2 = 2494;
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray1, 0, 2494);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(1L);
      StrBuilder strBuilder2 = strBuilder0.append("c{|5a9UBuo");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrBuilder strBuilder3 = strBuilder2.append('~');
      long long0 = (-274L);
      long long1 = strBuilder_StrBuilderReader0.skip(0L);
      // Undeclared exception!
      try { 
        strBuilder1.insert((-1668), true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1668
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst((StrMatcher) null, "B<hIq]N,N^{x>2I");
      int int0 = (-1);
      char char0 = '>';
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight((-1), (-1), '>');
      StrBuilder strBuilder3 = strBuilder2.appendNewLine();
      // Undeclared exception!
      try { 
        strBuilder0.insert(108, (-1.0F));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 108
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      String string0 = "hkLc";
      StrBuilder strBuilder0 = new StrBuilder("hkLc");
      int int0 = 6174;
      Reader reader0 = strBuilder0.asReader();
      // Undeclared exception!
      try { 
        strBuilder0.validateRange(6174, 6174);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      int int0 = (-2715);
      int int1 = 0;
      StrBuilder strBuilder2 = strBuilder1.append((double) (-2715));
      StrBuilder strBuilder3 = strBuilder2.append((double) 0);
      StrBuilder strBuilder4 = strBuilder2.ensureCapacity(0);
      Object object0 = new Object();
      StrBuilder strBuilder5 = strBuilder3.append(object0);
      char[] charArray0 = null;
      int int2 = 2328;
      // Undeclared exception!
      try { 
        strBuilder0.delete(2328, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset(", Length: 0");
      int int0 = (-749);
      // Undeclared exception!
      try { 
        strBuilder0.replace(strMatcher0, "'8LV;s", (-749), (-749), (-749));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -749
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2048));
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder2 = strBuilder1.reverse();
      StringBuffer stringBuffer1 = strBuilder1.toStringBuffer();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip((-2048));
      StrBuilder strBuilder3 = strBuilder0.deleteFirst('P');
      char[] charArray0 = new char[2];
      charArray0[0] = 'P';
      charArray0[1] = 'P';
      char[] charArray1 = strBuilder2.getChars(charArray0);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.endsWith("file.encoding");
      char[] charArray0 = strBuilder0.toCharArray();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) null, (-3383), '&');
      Reader reader0 = strBuilder1.asReader();
      StrBuilder strBuilder2 = strBuilder1.deleteFirst((StrMatcher) null);
      int int0 = strBuilder1.indexOf("file.encoding", (-3383));
      int int1 = strBuilder1.indexOf("file.encoding");
      StrBuilder strBuilder3 = strBuilder0.appendNull();
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-1253);
      StringBuffer stringBuffer0 = new StringBuffer(", Length: 0");
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0, 0, 0);
      StrBuilder strBuilder2 = strBuilder0.append((-1253));
      char[] charArray0 = new char[1];
      charArray0[0] = '\"';
      // Undeclared exception!
      try { 
        strBuilder2.insert(108, charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 108
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StringBuffer stringBuffer0 = new StringBuffer("");
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 1255, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      StrBuilder strBuilder1 = strBuilder0.insert(0, false);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1219));
      StrBuilder strBuilder1 = strBuilder0.append((char[]) null, (-1219), (-1219));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[1];
      char[] charArray1 = new char[3];
      charArray1[0] = 'X';
      charArray1[1] = 'D';
      charArray1[2] = 'Z';
      int int0 = strBuilder_StrBuilderReader0.read(charArray1);
      charArray0[0] = 't';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 0, 44);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.ext.dirs");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[3];
      charArray0[0] = 'P';
      charArray0[1] = 'j';
      charArray0[2] = '';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0);
      CharBuffer charBuffer0 = CharBuffer.allocate(3982);
      int int1 = strBuilder_StrBuilderReader0.read(charBuffer0);
      strBuilder_StrBuilderReader0.close();
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      int int0 = (-1);
      StrBuilder strBuilder0 = new StrBuilder((-1));
      char char0 = 'z';
      // Undeclared exception!
      try { 
        strBuilder0.insert((int) 'z', (-1321.7F));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 122
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(101);
      String string0 = "A1i";
      StrBuilder strBuilder1 = strBuilder0.setNullText("A1i");
      StrBuilder strBuilder2 = strBuilder0.ensureCapacity((-20));
      StrBuilder strBuilder3 = strBuilder0.appendNewLine();
      // Undeclared exception!
      try { 
        strBuilder2.charAt((-20));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -20
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-3641));
      // Undeclared exception!
      try { 
        strBuilder0.replace((-3641), (-3641), "YAF&$aJ 2{");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3641
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      int int0 = (-2987);
      StrBuilder strBuilder0 = new StrBuilder((-2987));
      char char0 = '';
      StrBuilder strBuilder1 = strBuilder0.deleteAll('');
      int int1 = (-2756);
      int int2 = (-256);
      long long0 = 0L;
      // Undeclared exception!
      try { 
        strBuilder1.insert((-256), 0L);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -256
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[7];
      charArray0[0] = '8';
      charArray0[1] = 'R';
      charArray0[2] = '5';
      charArray0[3] = '9';
      charArray0[4] = '[';
      charArray0[5] = 'm';
      charArray0[6] = '.';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(0, 1, charArray0, 3726);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('!');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("", 0, 0);
      String string0 = strBuilder1.getNullText();
      char[] charArray0 = new char[9];
      charArray0[0] = '!';
      charArray0[1] = '!';
      charArray0[2] = '!';
      charArray0[3] = '!';
      charArray0[4] = '!';
      charArray0[5] = '!';
      charArray0[6] = '!';
      charArray0[7] = '!';
      charArray0[8] = '!';
      // Undeclared exception!
      try { 
        strBuilder1.getChars(0, 32, charArray0, 435);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(101);
      String string0 = "A1i";
      StrBuilder strBuilder1 = strBuilder0.setNullText("A1i");
      StrBuilder strBuilder2 = strBuilder0.ensureCapacity((-20));
      // Undeclared exception!
      try { 
        strBuilder2.charAt((-20));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -20
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.endorsed.dirs");
      StrBuilder strBuilder1 = strBuilder0.deleteAll('\'');
      StrBuilder strBuilder2 = strBuilder0.insert(0, (double) 0);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = 'q';
      StrBuilder strBuilder1 = strBuilder0.append('q');
      int int0 = 101;
      // Undeclared exception!
      try { 
        strBuilder1.substring(101, 4);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 3484;
      char char0 = 'S';
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      int int1 = 57;
      int int2 = strBuilder0.lastIndexOf(strMatcher0, 57);
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(3484, 'S');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3484
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 34);
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2539));
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt((-1543), 'X');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1543
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.reverse();
      char[] charArray0 = new char[3];
      charArray0[0] = '9';
      charArray0[1] = '1';
      charArray0[2] = 'n';
      StrBuilder strBuilder2 = strBuilder0.append(charArray0);
      boolean boolean0 = strBuilder2.equals((Object) null);
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.setLength(0);
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      int int0 = 0;
      int int1 = strBuilder0.indexOf(strMatcher0, 0);
      StrBuilder strBuilder1 = null;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.previous();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[3];
      charArray0[0] = ')';
      charArray0[1] = 'v';
      charArray0[2] = '{';
      strBuilder_StrBuilderWriter0.write(charArray0);
      int int0 = strBuilder0.indexOf("3s", 116);
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(116);
      StrBuilder strBuilder2 = new StrBuilder("3s");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterChar('{');
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      StrBuilder strBuilder3 = strBuilder1.appendFixedWidthPadLeft(116, (-1), '{');
      int int1 = strBuilder1.indexOf("", 0);
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(2, 2, '2');
      StrBuilder strBuilder2 = strBuilder1.deleteAll("");
      StrBuilder strBuilder3 = strBuilder2.delete(0, 2568);
      StrBuilder strBuilder4 = strBuilder2.appendFixedWidthPadRight((Object) "k&D/j<I", 0, '2');
      StrBuilder strBuilder5 = strBuilder0.insert(0, '@');
      char[] charArray0 = new char[4];
      charArray0[0] = '@';
      charArray0[1] = '2';
      charArray0[2] = '2';
      charArray0[3] = 'm';
      StrBuilder strBuilder6 = strBuilder5.append(charArray0);
      StrBuilder strBuilder7 = strBuilder1.append((char[]) null, 0, 2);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder7.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(781);
      boolean boolean0 = strBuilder7.equals(strBuilder1);
      StrBuilder strBuilder8 = strBuilder2.appendFixedWidthPadLeft(0, 0, ')');
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      String string0 = "p:]\"A=PZJ7N2|omQf<";
      StrBuilder strBuilder0 = new StrBuilder("p:]\"A=PZJ7N2|omQf<");
      int int0 = 1649;
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray(1649, 1649);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("user.home");
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("Linux");
      int int0 = strBuilder0.indexOf((StrMatcher) strMatcher_StringMatcher0);
      int int1 = strBuilder0.lastIndexOf('E');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[6];
      charArray0[0] = 'E';
      charArray0[1] = 'E';
      charArray0[2] = 'E';
      charArray0[3] = 'E';
      charArray0[4] = 'E';
      charArray0[5] = 'E';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, (-1), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(0, 0, '');
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1141);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(375, 1141, 'g');
      String string0 = strBuilder0.substring(1141, 1373);
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(31);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray(163, (-101));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3762);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      StrBuilder strBuilder1 = strBuilder0.append(1L);
      StrBuilder strBuilder2 = strBuilder0.append((long) 3762);
      strBuilder_StrBuilderReader0.mark(824);
      char[] charArray0 = strBuilder0.toCharArray();
      // Undeclared exception!
      try { 
        strBuilder0.getChars(Integer.MAX_VALUE, 3762, charArray0, 824);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3762
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(390);
      StrBuilder strBuilder1 = strBuilder0.append((-1297));
      StrBuilder strBuilder2 = new StrBuilder("java.vm.version");
      StrBuilder strBuilder3 = strBuilder1.append(strBuilder2);
      StrBuilder strBuilder4 = strBuilder1.append(1.5);
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_TrimMatcher0, 390);
      int int1 = strBuilder0.indexOf((StrMatcher) strMatcher_TrimMatcher0, (-2900));
      // Undeclared exception!
      try { 
        strBuilder1.insert((-2900), (-2900));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2900
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(34);
      int int0 = strBuilder0.size();
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder1 = strBuilder0.append('o');
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      int int1 = strBuilder0.hashCode();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(34);
      // Undeclared exception!
      try { 
        strBuilder0.insert(34, (-1.0));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 34
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("`5($d5$3m{!*Fvpn");
      StrBuilder strBuilder1 = strBuilder0.clear();
      Reader reader0 = strBuilder1.asReader();
      StrBuilder strBuilder2 = strBuilder0.append((-2704.2F));
      StrBuilder strBuilder3 = strBuilder0.append((-775.2714F));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder strBuilder4 = strBuilder0.append(strBuilder1);
      StrBuilder strBuilder5 = strBuilder4.ensureCapacity(14);
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder strBuilder6 = strBuilder0.appendFixedWidthPadLeft(object0, 3968, 'C');
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder7 = strBuilder1.deleteAll("gYe6,La*]%t`");
      StrMatcher strMatcher0 = StrMatcher.charMatcher('C');
      // Undeclared exception!
      try { 
        strBuilder0.replaceAll(strMatcher0, "gYe6,La*]%t`");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("G]5p/]DnQ0n");
      StrBuilder strBuilder1 = strBuilder0.deleteAll("G]5p/]DnQ0n");
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder2 = strBuilder1.deleteAll((StrMatcher) strMatcher_TrimMatcher0);
      char[] charArray0 = new char[1];
      charArray0[0] = ' ';
      // Undeclared exception!
      try { 
        strBuilder2.insert(0, charArray0, 2730, (-3219));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: 2730
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2262);
      int int0 = 0;
      char char0 = '9';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(0, 2262, '9');
      int int1 = 0;
      StrBuilder strBuilder2 = strBuilder0.insert(0, (long) 0);
      String string0 = "V0rl\\\"J`,(";
      // Undeclared exception!
      try { 
        strBuilder1.append("V0rl\"J`,(", (-2381), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[5];
      charArray0[0] = '#';
      charArray0[1] = ':';
      charArray0[2] = 'i';
      StringBuffer stringBuffer0 = new StringBuffer(5);
      StringBuffer stringBuffer1 = new StringBuffer(stringBuffer0);
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) stringBuffer1);
      charArray0[3] = 'A';
      charArray0[4] = 'y';
      int int0 = 39;
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 39, 108);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 108
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher((String) null);
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(":n;-vN?CEI!\"@I.?");
      char[] charArray0 = null;
      StrBuilder strBuilder2 = strBuilder0.append((char[]) null);
      StrBuilder strBuilder3 = strBuilder2.appendPadding(1062, '$');
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder4 = strBuilder0.trim();
      String string0 = strBuilder4.substring(0);
      boolean boolean1 = strBuilder0.contains((StrMatcher) strMatcher_TrimMatcher0);
      StrBuilder strBuilder5 = strBuilder2.append("f<{9:SoC^eJVq2on^U");
      StrBuilder strBuilder6 = strBuilder5.append(strBuilder3, 451, 451);
      String string1 = "";
      StrBuilder strBuilder7 = strBuilder1.replaceFirst(strMatcher0, "");
      boolean boolean2 = strBuilder0.equals((Object) null);
      // Undeclared exception!
      try { 
        strBuilder1.getChars(0, 0, (char[]) null, 0);
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendPadding(1, 'X');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      int int0 = strBuilder1.indexOf(strMatcher0, 1);
      StrBuilder strBuilder2 = strBuilder0.insert(1, "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      String string0 = strBuilder2.substring(1, 1);
      String string1 = strBuilder2.toString();
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("GYd(");
      int int1 = strBuilder2.indexOf((StrMatcher) strMatcher_StringMatcher0);
      StrBuilder strBuilder3 = strBuilder0.deleteFirst("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      String string2 = strBuilder0.getNullText();
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) "";
      objectArray0[3] = (Object) "";
      objectArray0[4] = (Object) "";
      objectArray0[5] = (Object) strBuilder0;
      objectArray0[6] = (Object) "";
      Object object0 = new Object();
      objectArray0[7] = object0;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "");
      StrMatcher strMatcher0 = StrMatcher.charMatcher('H');
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("{PyQML7!Dt'f=");
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher("startIndex must be valid");
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.replaceFirst(strMatcher0, "");
      StrBuilder strBuilder3 = strBuilder0.replaceFirst("UWQ/>nQXo`^-J\"Sz", "");
      StrBuilder strBuilder4 = strBuilder3.minimizeCapacity();
      int int0 = strBuilder3.indexOf(strMatcher2);
      char char0 = strBuilder3.charAt(97);
      char[] charArray0 = strBuilder0.toCharArray();
      StrBuilder strBuilder5 = strBuilder2.append((Object) strMatcher1);
      String string0 = strBuilder1.substring(97);
      int int1 = strBuilder2.indexOf(strMatcher0, 1);
      // Undeclared exception!
      try { 
        strBuilder3.deleteCharAt((-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 1956;
      char[] charArray0 = new char[4];
      charArray0[1] = 'a';
      // Undeclared exception!
      try { 
        strBuilder0.insert(48, charArray0, 2434, 48);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 48
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }
}
