/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 28 18:38:07 GMT 2020
 */

package org.apache.commons.lang.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.Writer;
import java.nio.Buffer;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.NoSuchElementException;
import java.util.function.Consumer;
import org.apache.commons.lang.text.StrBuilder;
import org.apache.commons.lang.text.StrMatcher;
import org.apache.commons.lang.text.StrTokenizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StrBuilder_ESTest extends StrBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) strBuilder0;
      objectArray0[3] = (Object) strBuilder0;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "!)ZG,#Uc ");
      int int0 = strBuilder0.indexOf("!)ZG,#Uc ", 0);
      char[] charArray0 = new char[8];
      charArray0[0] = '`';
      charArray0[1] = '$';
      charArray0[2] = 'Q';
      charArray0[3] = '7';
      charArray0[4] = 'a';
      charArray0[5] = 'Z';
      charArray0[6] = ',';
      charArray0[7] = 'g';
      strBuilder1.buffer = charArray0;
      boolean boolean0 = strBuilder0.contains((StrMatcher) null);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      String string0 = null;
      // Undeclared exception!
      try { 
        strBuilder0.append('g');
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.setLength(17);
      StrBuilder strBuilder2 = strBuilder0.setNewLineText("");
      char char0 = 'N';
      StrBuilder strBuilder3 = strBuilder0.insert(17, 'N');
      StrBuilder strBuilder4 = strBuilder3.insert(0, (-3049L));
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrBuilder strBuilder5 = strBuilder2.append(17);
      boolean boolean0 = strBuilder4.contains(strMatcher0);
      String string1 = "";
      StrBuilder strBuilder6 = strBuilder4.replaceAll("", "");
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      int int0 = strBuilder0.lastIndexOf(strMatcher1);
      String string2 = strBuilder3.toString();
      StrBuilder strBuilder7 = strBuilder1.ensureCapacity(17);
      // Undeclared exception!
      try { 
        strBuilder7.append(strBuilder0, 24, (-1438));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoreEmptyTokens(false);
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      char[] charArray0 = strBuilder0.getChars((char[]) null);
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "");
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      StrBuilder strBuilder2 = strBuilder1.replaceFirst("7]H>ojOA#euS", "1.3");
      StrBuilder strBuilder3 = strBuilder2.setLength(31);
      int int0 = strBuilder1.lastIndexOf("4[of'9.{dT1i6");
      boolean boolean0 = strBuilder3.contains('/');
      boolean boolean1 = strBuilder3.contains('A');
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.setLength(17);
      StrBuilder strBuilder2 = strBuilder0.setNewLineText("");
      StrBuilder strBuilder3 = strBuilder0.insert(17, 'N');
      StrBuilder strBuilder4 = strBuilder3.insert(0, (-3049L));
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrBuilder strBuilder5 = strBuilder2.append(17);
      boolean boolean0 = strBuilder4.contains(strMatcher0);
      StrBuilder strBuilder6 = strBuilder4.replaceAll("", "");
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      int int0 = strBuilder0.lastIndexOf(strMatcher1);
      String string0 = strBuilder3.toString();
      StrBuilder strBuilder7 = strBuilder1.ensureCapacity(17);
      StrBuilder strBuilder8 = strBuilder7.deleteFirst('N');
      StrBuilder strBuilder9 = strBuilder2.clear();
      StrBuilder strBuilder10 = strBuilder0.append("");
      StrBuilder strBuilder11 = strBuilder10.minimizeCapacity();
      boolean boolean1 = strBuilder10.contains("?889|(");
      StrBuilder strBuilder12 = strBuilder4.deleteFirst('N');
      boolean boolean2 = strBuilder6.contains(strMatcher0);
      StrBuilder strBuilder13 = strBuilder4.deleteAll('\\');
      boolean boolean3 = strBuilder6.endsWith("HP-UX");
      int int1 = strBuilder5.lastIndexOf(strMatcher0);
      char[] charArray0 = strBuilder3.toCharArray();
      StrBuilder strBuilder14 = strBuilder2.deleteFirst('N');
      StrBuilder strBuilder15 = strBuilder5.deleteFirst(strMatcher0);
      String string1 = strBuilder10.rightString(50);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      StrBuilder strBuilder1 = new StrBuilder();
      int int0 = strBuilder0.indexOf(')', 5012);
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((-961), (-1), ')');
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = strBuilder0.midString(0, 0);
      boolean boolean0 = strBuilder0.endsWith("<QP_l4fcp~MDg&");
      char[] charArray0 = new char[1];
      StrBuilder strBuilder1 = strBuilder0.insert(0, (-1517L));
      charArray0[0] = 'V';
      StrBuilder strBuilder2 = strBuilder0.append(charArray0, 0, 0);
      StrBuilder strBuilder3 = strBuilder2.append((Object) "~$P");
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.setLength(17);
      StrBuilder strBuilder2 = strBuilder0.setNewLineText("");
      StrBuilder strBuilder3 = strBuilder0.insert(17, 'N');
      StrBuilder strBuilder4 = strBuilder3.insert(0, (-3049L));
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrBuilder strBuilder5 = strBuilder2.append(17);
      boolean boolean0 = strBuilder4.contains(strMatcher0);
      StrBuilder strBuilder6 = strBuilder4.replaceAll("", "");
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      int int0 = strBuilder0.lastIndexOf(strMatcher1);
      int int1 = strBuilder1.indexOf(strMatcher0, (-4233));
      String string0 = strBuilder3.toString();
      StrBuilder strBuilder7 = strBuilder1.ensureCapacity(17);
      StrBuilder strBuilder8 = strBuilder7.deleteFirst('N');
      StrBuilder strBuilder9 = strBuilder2.clear();
      StrBuilder strBuilder10 = strBuilder0.append("");
      StrBuilder strBuilder11 = strBuilder10.minimizeCapacity();
      boolean boolean1 = strBuilder10.contains("?889|(");
      StrBuilder strBuilder12 = strBuilder4.deleteFirst('N');
      boolean boolean2 = strBuilder6.contains(strMatcher0);
      boolean boolean3 = strBuilder6.endsWith("HP-UX");
      int int2 = strBuilder5.lastIndexOf(strMatcher0);
      char[] charArray0 = strBuilder3.toCharArray();
      StrBuilder strBuilder13 = strBuilder2.deleteFirst('N');
      StrBuilder strBuilder14 = strBuilder11.reverse();
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.class.version");
      char[] charArray0 = strBuilder0.toCharArray(0, 0);
      StrBuilder strBuilder1 = strBuilder0.append(1.5);
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      int int0 = strBuilder1.indexOf(strMatcher0, (-1));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrBuilder strBuilder2 = strBuilder0.deleteAll('o');
      StrBuilder strBuilder3 = strBuilder0.insert(9, "java.class.version");
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder strBuilder1 = strBuilder0.append(0.0F);
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("");
      StrBuilder strBuilder2 = strBuilder0.append("&b4'\"jPOTVxQV(J", 0, 0);
      StrBuilder strBuilder3 = strBuilder2.append(strBuilder0);
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      boolean boolean1 = strBuilder0.startsWith("java.specification.vendor");
      String string0 = strBuilder0.substring(0);
      StringBuffer stringBuffer0 = strBuilder2.toStringBuffer();
      StrBuilder strBuilder4 = strBuilder2.appendNewLine();
      StringBuffer stringBuffer1 = strBuilder4.toStringBuffer();
      int int0 = strBuilder4.indexOf("Invalid length: ", 0);
      StrBuilder strBuilder5 = strBuilder0.append(false);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst((StrMatcher) null);
      char char0 = 'h';
      boolean boolean0 = strBuilder0.contains('h');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      String string0 = strBuilder0.toString();
      int int0 = strBuilder1.lastIndexOf((StrMatcher) null);
      StrBuilder strBuilder2 = strBuilder1.append((StrBuilder) null);
      int int1 = 2;
      String string1 = strBuilder2.toString();
      char[] charArray0 = new char[9];
      charArray0[0] = 'h';
      charArray0[1] = 'h';
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(50, 'h');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 50
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = strBuilder0.midString(0, 0);
      boolean boolean0 = strBuilder0.endsWith("<QP_l4fcp~MDg&");
      char[] charArray0 = new char[1];
      charArray0[0] = 'V';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0, 0, 0);
      StrBuilder strBuilder2 = strBuilder1.append((Object) "~$P");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read(charArray0, 0, 0);
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      int int1 = strBuilder0.lastIndexOf(strMatcher0, 795);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.setLength(17);
      StrBuilder strBuilder2 = strBuilder0.setNewLineText("");
      StrBuilder strBuilder3 = strBuilder0.insert(17, 'N');
      StrBuilder strBuilder4 = strBuilder3.insert(0, (-3049L));
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrBuilder strBuilder5 = strBuilder2.append(17);
      boolean boolean0 = strBuilder4.contains(strMatcher0);
      StrBuilder strBuilder6 = strBuilder4.replaceAll("", "");
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      int int0 = strBuilder0.lastIndexOf(strMatcher1);
      String string0 = strBuilder3.toString();
      StrBuilder strBuilder7 = strBuilder1.ensureCapacity(17);
      StrBuilder strBuilder8 = strBuilder7.deleteFirst('N');
      StrBuilder strBuilder9 = strBuilder2.clear();
      StrBuilder strBuilder10 = strBuilder0.append("");
      StrBuilder strBuilder11 = strBuilder10.minimizeCapacity();
      boolean boolean1 = strBuilder10.contains("?889|(");
      StrBuilder strBuilder12 = strBuilder4.deleteFirst('N');
      boolean boolean2 = strBuilder6.contains(strMatcher0);
      boolean boolean3 = strBuilder6.endsWith("HP-UX");
      int int1 = strBuilder5.lastIndexOf(strMatcher0);
      char[] charArray0 = strBuilder3.toCharArray();
      StrBuilder strBuilder13 = strBuilder2.deleteFirst('N');
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder11;
      objectArray0[2] = (Object) strBuilder10;
      objectArray0[3] = (Object) strBuilder7;
      StrBuilder strBuilder14 = strBuilder5.appendWithSeparators(objectArray0, "");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      int int2 = strBuilder_StrBuilderReader0.read();
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.appendPadding(798, '\"');
      int int0 = strBuilder0.indexOf('=');
      String string0 = strBuilder0.midString(3, 3);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      String string0 = "y{Q+\\QOPM95NT";
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Collection) linkedList0, "y{Q+QOPM95NT");
      Object[] objectArray0 = new Object[0];
      StrBuilder strBuilder3 = strBuilder0.appendWithSeparators(objectArray0, "V|;gR[nIy=:Uspe5(p");
      char[] charArray0 = new char[7];
      charArray0[0] = '$';
      charArray0[1] = 'W';
      charArray0[2] = 'W';
      charArray0[3] = '$';
      charArray0[4] = 's';
      charArray0[5] = '(';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("y{Q+QOPM95NT");
      int int0 = strBuilder3.indexOf(strMatcher0);
      charArray0[6] = '?';
      StrBuilder strBuilder4 = strBuilder3.append(charArray0);
      StrBuilder strBuilder5 = strBuilder3.setNullText("y{Q+QOPM95NT");
      int int1 = 1547;
      // Undeclared exception!
      try { 
        strBuilder1.insert(1547, true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1547
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("");
      char[] charArray0 = new char[0];
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_CharSetMatcher0, 748);
      char[] charArray1 = strBuilder0.toCharArray();
      int int1 = strBuilder0.lastIndexOf("");
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher1 = new StrMatcher.CharSetMatcher(charArray1);
      int int2 = strBuilder1.lastIndexOf((StrMatcher) strMatcher_CharSetMatcher1, 1);
      StrBuilder strBuilder2 = strBuilder1.minimizeCapacity();
      int int3 = strBuilder2.lastIndexOf('l');
      // Undeclared exception!
      try { 
        strBuilder1.deleteCharAt((-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(114);
      int int0 = strBuilder0.indexOf((String) null, 114);
      int int1 = strBuilder0.capacity();
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(']');
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder strBuilder2 = strBuilder0.deleteAll('}');
      char[] charArray0 = strBuilder1.toCharArray(0, 657);
      int int0 = strBuilder0.length();
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      int int0 = (-453);
      StrBuilder strBuilder0 = new StrBuilder((-453));
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      int int1 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, (-453), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder("org.apache.commons.lang.text.StrBuilder");
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder1 = strBuilder0.deleteAll("");
      StrBuilder strBuilder2 = strBuilder0.setNullText("");
      StrBuilder strBuilder3 = new StrBuilder();
      int int0 = 1086;
      // Undeclared exception!
      try { 
        strBuilder0.delete(149, 1086);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = "";
      StrBuilder strBuilder1 = strBuilder0.replaceAll("", "o]FLoiez@!@");
      int int0 = 1;
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight(1, 0, 'N');
      int int1 = 0;
      StrBuilder strBuilder3 = strBuilder0.ensureCapacity(0);
      // Undeclared exception!
      try { 
        strBuilder3.insert((-2231), "o]FLoiez@!@");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2231
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrMatcher$StringMatcher");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(31, 31, '7');
      StrBuilder strBuilder2 = strBuilder0.setNewLineText("org.apache.commons.lang.text.StrMatcher$StringMatcher");
      StrBuilder strBuilder3 = strBuilder0.deleteCharAt(31);
      StrBuilder strBuilder4 = strBuilder1.trim();
      StrBuilder strBuilder5 = strBuilder3.appendNewLine();
      String string0 = strBuilder5.substring(31, 31);
      String string1 = strBuilder4.midString(Integer.MAX_VALUE, 0);
      StrBuilder strBuilder6 = strBuilder0.insert(31, 1.0F);
      String string2 = strBuilder6.leftString(0);
      StrBuilder strBuilder7 = strBuilder2.append("org.apache.commons.lang.text.StrMatcher$StringMatcher");
      String string3 = strBuilder7.toString();
      String string4 = strBuilder7.leftString(2348);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder6.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      String[] stringArray0 = strBuilder_StrBuilderTokenizer0.getTokenArray();
      StrBuilder strBuilder8 = strBuilder0.deleteFirst("");
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      boolean boolean0 = strBuilder3.contains(strMatcher0);
      StrBuilder strBuilder9 = strBuilder1.replaceFirst('W', 'I');
      String string5 = strBuilder2.substring(1, 2);
      String string6 = strBuilder4.leftString(0);
      boolean boolean1 = strBuilder7.contains(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 102;
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      int int1 = 0;
      char[] charArray0 = strBuilder1.toCharArray(0, 39);
      StrBuilder strBuilder2 = strBuilder0.appendPadding(102, 'e');
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) strBuilder0;
      StrBuilder strBuilder3 = strBuilder0.appendWithSeparators(objectArray0, (String) null);
      StrBuilder strBuilder4 = strBuilder3.appendNull();
      StrBuilder strBuilder5 = strBuilder4.append(39);
      StrBuilder strBuilder6 = strBuilder2.append((String) null, 0, 102);
      // Undeclared exception!
      try { 
        strBuilder6.insert(811, (Object) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 811
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("VIY1=");
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      char[] charArray0 = new char[0];
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_TrimMatcher0);
      int int1 = strBuilder0.length();
      // Undeclared exception!
      try { 
        strBuilder0.append("VIY1=", 5, 5);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrMatcher$StringMatcher");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(31, 31, '7');
      StrBuilder strBuilder2 = strBuilder0.setNewLineText("org.apache.commons.lang.text.StrMatcher$StringMatcher");
      StrBuilder strBuilder3 = strBuilder0.deleteCharAt(31);
      StrBuilder strBuilder4 = strBuilder1.trim();
      StrBuilder strBuilder5 = strBuilder3.appendNewLine();
      String string0 = strBuilder5.substring(31, 31);
      String string1 = strBuilder4.midString(Integer.MAX_VALUE, 0);
      StrBuilder strBuilder6 = strBuilder0.insert(31, 1.0F);
      int int0 = 0;
      String string2 = strBuilder6.leftString(0);
      StrBuilder strBuilder7 = strBuilder2.append("org.apache.commons.lang.text.StrMatcher$StringMatcher");
      String string3 = strBuilder7.toString();
      String string4 = strBuilder7.leftString(2348);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder6.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      // Undeclared exception!
      try { 
        strBuilder4.insert((-381), object0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -381
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[3];
      charArray0[0] = '?';
      charArray0[1] = 'L';
      charArray0[2] = 'Q';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(1696, 0, charArray0, 534);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      int int1 = strBuilder_StrBuilderReader0.read();
      strBuilder_StrBuilderReader0.close();
      int int2 = (-609);
      int int3 = strBuilder0.indexOf("", (-609));
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("", "");
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrBuilder strBuilder2 = strBuilder0.deleteFirst(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder2.getChars(0, (-1933), (char[]) null, 1073);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1933
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      String string0 = "Zb?=B";
      StrBuilder strBuilder0 = new StrBuilder("Zb?=B");
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StringBuffer stringBuffer1 = new StringBuffer("Invalid startIndex: ");
      StringBuffer stringBuffer2 = stringBuffer0.append(stringBuffer1);
      StrBuilder strBuilder1 = strBuilder0.insert(4, (Object) stringBuffer0);
      StrBuilder strBuilder2 = strBuilder1.insert(4, (double) 4);
      StrBuilder strBuilder3 = strBuilder0.replaceAll('L', 'L');
      StrBuilder strBuilder4 = strBuilder3.replaceAll(",X[c1%yM2i( v*BK0B0", ",X[c1%yM2i( v*BK0B0");
      StrBuilder strBuilder5 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder6 = strBuilder5.appendPadding(4, 'U');
      StrBuilder strBuilder7 = strBuilder5.deleteAll("Zb?=B");
      // Undeclared exception!
      try { 
        strBuilder7.append(stringBuffer0, 4, (-1795));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[5];
      charArray0[0] = '\\';
      charArray0[1] = ',';
      charArray0[2] = '^';
      charArray0[3] = 'l';
      charArray0[4] = '3';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(5, 2, charArray0, 5);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(97);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[5];
      charArray0[0] = ')';
      charArray0[1] = '1';
      strBuilder_StrBuilderWriter0.write((String) null, 1684, 0);
      charArray0[2] = '#';
      charArray0[3] = '\"';
      // Undeclared exception!
      try { 
        strBuilder0.insert(97, 2L);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 97
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(492);
      StrBuilder strBuilder1 = new StrBuilder((-1002));
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, (-1002), 515);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("?");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(32);
      StrBuilder strBuilder1 = strBuilder0.append('y');
      StrBuilder strBuilder2 = strBuilder0.deleteAll("0");
      StrTokenizer strTokenizer0 = strBuilder2.asTokenizer();
      int int0 = strBuilder0.validateRange(0, 0);
      StrTokenizer strTokenizer1 = strBuilder0.asTokenizer();
      char[] charArray0 = strBuilder0.toCharArray();
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = 0;
      int int1 = 2234;
      // Undeclared exception!
      try { 
        strBuilder0.append("", 0, 2234);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip((-1780L));
      StrBuilder strBuilder1 = strBuilder0.deleteAll("");
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      int int0 = strBuilder0.size();
      String string0 = "if?\"#8IAiTO";
      int int1 = (-1052);
      // Undeclared exception!
      try { 
        strBuilder0.substring(1298, (-1052));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.io.tmpdir");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder strBuilder1 = new StrBuilder();
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("l~>S%$WFfrE2", "l~>S%$WFfrE2");
      char[] charArray0 = new char[5];
      charArray0[1] = 'U';
      charArray0[2] = '\u0000';
      charArray0[3] = 'r';
      charArray0[4] = '\'';
      strBuilder1.buffer = charArray0;
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder2 = strBuilder1.append(strBuilder0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[1];
      charArray0[0] = ' ';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      char[] charArray1 = new char[5];
      charArray1[0] = '4';
      charArray1[1] = 'U';
      charArray1[2] = 'R';
      charArray1[3] = ';';
      charArray1[4] = '';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray1, 3918, 44);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 44
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append('7');
      String string0 = strBuilder0.leftString(4);
      StrBuilder strBuilder2 = strBuilder0.deleteAll('u');
      char[] charArray0 = new char[4];
      charArray0[0] = 'f';
      charArray0[1] = 'u';
      charArray0[2] = 'u';
      charArray0[3] = 'u';
      int int0 = 0;
      int int1 = (-932);
      // Undeclared exception!
      try { 
        strBuilder2.append(charArray0, 0, (-932));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: -932
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      int int0 = (-1553);
      strBuilder0.size = (-1553);
      // Undeclared exception!
      try { 
        strBuilder0.replaceAll(strMatcher0, "end < start");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("||k+;]DBQTGm8l2E");
      StrBuilder strBuilder1 = strBuilder0.append(5);
      StrBuilder strBuilder2 = strBuilder1.deleteFirst('Y');
      StrBuilder strBuilder3 = strBuilder0.append('i');
      String string0 = strBuilder2.leftString(5);
      StrTokenizer strTokenizer0 = strBuilder1.asTokenizer();
      char[] charArray0 = new char[6];
      charArray0[0] = 'Y';
      charArray0[1] = 'i';
      charArray0[2] = 'i';
      charArray0[3] = 'Y';
      charArray0[4] = 'Y';
      charArray0[5] = 'Y';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 5, (-3655));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: -3655
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("Mac OS X");
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder0.setNullText("user.home");
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators((Collection) linkedList0, "c4Hdpe");
      String string0 = strBuilder2.toString();
      StrBuilder strBuilder4 = strBuilder1.append('i');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      char[] charArray0 = new char[4];
      charArray0[0] = 'i';
      charArray0[1] = 'i';
      charArray0[2] = 'i';
      charArray0[3] = 'i';
      int int0 = strMatcher0.isMatch(charArray0, 11, 11, 223);
      int int1 = strBuilder0.lastIndexOf(strMatcher0, 0);
      StrBuilder strBuilder5 = strBuilder1.replaceFirst(strMatcher0, "Mac OS X");
      StrBuilder strBuilder6 = strBuilder0.replace(strMatcher0, "Mac OS X", 0, 0, (-1));
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("gkrX4vi3");
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder1 = strBuilder0.setNullText("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrBuilder strBuilder2 = strBuilder0.append((-1398L));
      Reader reader1 = strBuilder0.asReader();
      char[] charArray0 = new char[3];
      charArray0[0] = 's';
      charArray0[1] = '.';
      charArray0[2] = '.';
      StrBuilder strBuilder3 = strBuilder2.append(charArray0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      int int0 = strBuilder0.lastIndexOf("!bIGDEl", 0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('(');
      String string0 = "Ga0L&xm9U8)6`nqoA";
      StrBuilder strBuilder2 = strBuilder1.replace((StrMatcher) null, "Ga0L&xm9U8)6`nqoA", 0, 0, 0);
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('(');
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher("Ga0L&xm9U8)6`nqoA");
      StrBuilder strBuilder3 = strBuilder1.deleteAll(strMatcher0);
      char[] charArray0 = new char[9];
      charArray0[0] = '(';
      charArray0[1] = '(';
      charArray0[2] = '(';
      charArray0[3] = '(';
      charArray0[4] = '(';
      charArray0[5] = '(';
      charArray0[6] = '(';
      charArray0[7] = '(';
      charArray0[8] = '(';
      // Undeclared exception!
      try { 
        strBuilder0.insert(0, charArray0, (-2422), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: -2422
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "AWM");
      int int0 = strBuilder0.indexOf(')', 0);
      Writer writer0 = strBuilder0.asWriter();
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[8];
      charArray0[0] = ';';
      charArray0[1] = 'i';
      charArray0[2] = 'q';
      charArray0[3] = '7';
      charArray0[4] = 'Z';
      charArray0[5] = 'x';
      charArray0[6] = 'H';
      charArray0[7] = 'T';
      // Undeclared exception!
      try { 
        strBuilder0.getChars((-133), 2591, charArray0, 2591);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -133
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.insert(0, '(');
      StrBuilder strBuilder2 = strBuilder0.replaceFirst('(', '(');
      int int1 = 0;
      String string0 = strBuilder0.substring(0);
      // Undeclared exception!
      try { 
        strBuilder2.appendFixedWidthPadRight(574, 574, '(');
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      int int0 = 2515;
      // Undeclared exception!
      try { 
        strBuilder0.insert(2515, 1077.275F);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2515
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      boolean boolean0 = strBuilder0.startsWith("1.5");
      StrBuilder strBuilder1 = new StrBuilder(0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      char[] charArray0 = new char[4];
      charArray0[0] = 'p';
      charArray0[1] = '/';
      charArray0[2] = '+';
      StrBuilder strBuilder2 = strBuilder1.insert(0, 'c');
      StrBuilder strBuilder3 = strBuilder2.ensureCapacity(0);
      charArray0[3] = 'c';
      strBuilder_StrBuilderWriter0.write(charArray0);
      strBuilder_StrBuilderWriter0.flush();
      StrBuilder strBuilder4 = strBuilder1.replace(0, 0, "0");
      StrBuilder strBuilder5 = strBuilder2.clear();
      StrBuilder strBuilder6 = strBuilder5.delete(0, 1340);
      char[] charArray1 = new char[9];
      charArray1[0] = '+';
      charArray1[1] = '+';
      charArray1[2] = '/';
      charArray1[3] = 'p';
      charArray1[4] = '/';
      charArray1[5] = 'c';
      charArray1[6] = 'c';
      charArray1[7] = '+';
      charArray1[8] = 'J';
      StrBuilder strBuilder7 = strBuilder0.append(charArray1);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      int int0 = 669;
      StrBuilder strBuilder0 = new StrBuilder(669);
      String string0 = strBuilder0.getNewLineText();
      int int1 = (-169);
      StrBuilder strBuilder1 = new StrBuilder((-169));
      StringBuffer stringBuffer0 = null;
      try {
        stringBuffer0 = new StringBuffer((String) null);
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder((-1807));
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.class.version");
      char[] charArray0 = strBuilder0.toCharArray(0, 0);
      StrBuilder strBuilder1 = strBuilder0.append(1.5);
      StrBuilder strBuilder2 = strBuilder0.insert(0, 1134);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((-3224));
      StrBuilder strBuilder3 = strBuilder2.deleteAll('o');
      StrBuilder strBuilder4 = strBuilder2.insert(9, "java.class.version");
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(Integer.MAX_VALUE, 's');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2147483647
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      int int0 = strBuilder_StrBuilderReader0.read();
      long long0 = strBuilder_StrBuilderReader0.skip(0);
      CharBuffer charBuffer1 = charBuffer0.asReadOnlyBuffer();
      Buffer buffer0 = charBuffer0.position(0);
      int int1 = strBuilder_StrBuilderReader0.read(charBuffer0);
      int int2 = strBuilder_StrBuilderReader0.read();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      char[] charArray0 = new char[5];
      charArray0[0] = '2';
      charArray0[1] = '|';
      charArray0[2] = '4';
      charArray0[3] = 'x';
      charArray0[4] = 'H';
      // Undeclared exception!
      try { 
        strMatcher0.isMatch(charArray0, 157, 0, 0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(":R");
      int int0 = strBuilder0.indexOf(":R", 0);
      StrBuilder strBuilder1 = strBuilder0.delete(0, 0);
      StrBuilder strBuilder2 = strBuilder0.append('*');
      StrBuilder strBuilder3 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder3.new StrBuilderTokenizer();
      StrBuilder strBuilder4 = strBuilder2.minimizeCapacity();
      Writer writer0 = strBuilder2.asWriter();
      Consumer<String> consumer0 = (Consumer<String>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      strBuilder_StrBuilderTokenizer0.forEachRemaining(consumer0);
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      int int1 = strBuilder2.lastIndexOf(strMatcher0);
      StringBuffer stringBuffer0 = strBuilder2.toStringBuffer();
      StrBuilder strBuilder5 = strBuilder0.replaceAll('S', '|');
      StrBuilder strBuilder6 = strBuilder1.deleteFirst('|');
      boolean boolean0 = strBuilder5.equals((Object) stringBuffer0);
      char[] charArray0 = new char[0];
      StrBuilder strBuilder7 = strBuilder0.append(charArray0);
      char[] charArray1 = strBuilder2.getChars(charArray0);
      StrBuilder strBuilder8 = strBuilder5.appendNewLine();
      StrBuilder strBuilder9 = strBuilder3.replaceAll('*', 'S');
      StrBuilder strBuilder10 = strBuilder7.trim();
      int int2 = strBuilder6.lastIndexOf('*');
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      int int0 = 2543;
      // Undeclared exception!
      try { 
        strBuilder1.validateIndex(2543);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2543
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-4120));
      String string0 = "cY:ubj9DL";
      StrBuilder strBuilder1 = strBuilder0.insert(0, "cY:ubj9DL");
      // Undeclared exception!
      try { 
        strBuilder1.delete((-5331), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -5331
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(746);
      StrBuilder strBuilder1 = new StrBuilder();
      int int0 = 44;
      // Undeclared exception!
      try { 
        strBuilder1.substring(44);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("JLsn");
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) null, "#&([!Kgt\"");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      boolean boolean0 = strBuilder0.startsWith("JLsn");
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('w');
      boolean boolean1 = strBuilder0.contains(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.indexOf('|');
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.append((Object) strMatcher0);
      boolean boolean0 = strBuilder0.startsWith("");
      // Undeclared exception!
      try { 
        strBuilder0.append("", (-1), (-59));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("os.name");
      StrBuilder strBuilder1 = strBuilder0.deleteAll("java.specification.version");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Collection) linkedList0, "os.name");
      StrBuilder strBuilder3 = strBuilder0.replaceAll("org.apache.commons.lang.text.StrBuilder", "_Y|['CeXQ^ {t?B-");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      int int0 = strBuilder3.lastIndexOf(strMatcher0, (-78));
      int int1 = strBuilder0.indexOf("r:%J6v'{k2!Yt[", 0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 3;
      // Undeclared exception!
      try { 
        strBuilder0.insert(3, (Object) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder(243);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      char char0 = 'l';
      StrMatcher strMatcher0 = StrMatcher.charMatcher('l');
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setTrimmerMatcher(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "_3>5");
      StrBuilder strBuilder3 = strBuilder2.replaceFirst("_3>5", "_3>5");
      int int0 = (-490);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-490), (long) (-490));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -490
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.append((Object) null);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-512);
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrBuilder strBuilder2 = strBuilder0.appendPadding((-512), 'X');
      StrBuilder strBuilder3 = strBuilder0.append(true);
      StrBuilder strBuilder4 = strBuilder3.append(true);
      int int1 = strBuilder0.indexOf((String) null);
      StrBuilder strBuilder5 = strBuilder2.appendPadding((-512), 'v');
      int int2 = strBuilder5.lastIndexOf('v', 323);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder5.new StrBuilderReader();
      // Undeclared exception!
      try { 
        CharBuffer.wrap((CharSequence) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-331));
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity((-331));
      int int0 = strBuilder1.lastIndexOf('m', 397);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      StrBuilder strBuilder1 = strBuilder0.append((Object) "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      int int0 = (-725);
      // Undeclared exception!
      try { 
        strBuilder1.insert((-725), (-2294));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -725
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      String string0 = null;
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      Collection<String> collection0 = null;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) null, (String) null);
      int int0 = strBuilder0.capacity();
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(32);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(">H1:'wO|~jhROk-6");
      StrBuilder strBuilder1 = strBuilder0.append(0.0F);
      int int0 = (-1110);
      String string0 = strBuilder0.midString((-1110), (-1110));
      String string1 = "{:}+Q@Mz\\ut/";
      StrBuilder strBuilder2 = new StrBuilder(string1);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      Writer writer0 = strBuilder_StrBuilderWriter0.append('o');
      String string2 = "end < start";
      int int1 = 48;
      char[] charArray0 = new char[5];
      charArray0[0] = 'o';
      charArray0[1] = 'o';
      charArray0[2] = 'V';
      charArray0[3] = 'o';
      charArray0[4] = 'o';
      // Undeclared exception!
      try { 
        strBuilder2.insert((-3139), charArray0, (-2222), (-1110));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3139
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      String string0 = "(QPgLxyh[bq{";
      StrBuilder strBuilder0 = new StrBuilder("(QPgLxyh[bq{");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("(QPgLxyh[bq{");
      StringBuffer stringBuffer0 = strBuilder1.toStringBuffer();
      Writer writer0 = strBuilder1.asWriter();
      int int0 = (-4687);
      // Undeclared exception!
      try { 
        strBuilder1.setLength((-4687));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -4687
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      int int0 = (-2030);
      StrBuilder strBuilder0 = new StrBuilder((-2030));
      StrBuilder strBuilder1 = strBuilder0.append(true);
      // Undeclared exception!
      try { 
        strBuilder0.setLength((-2030));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2030
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("");
      StrMatcher strMatcher1 = StrMatcher.stringMatcher((String) null);
      int int0 = 0;
      int int1 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_NoMatcher0, 0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[5];
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) "", 0, 0);
      charArray0[0] = '@';
      charArray0[1] = 'f';
      StrBuilder strBuilder1 = strBuilder0.setLength(192);
      charArray0[2] = 'f';
      charArray0[3] = 'O';
      charArray0[4] = 'F';
      strBuilder_StrBuilderWriter0.write(charArray0);
      Writer writer1 = strBuilder0.asWriter();
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(470);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 470
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.lastIndexOf("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter", 2379);
      int int1 = strBuilder0.indexOf('7');
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 2;
      String string0 = strBuilder0.midString((-2854), 2);
      char char0 = 'q';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) "org.apache.commons.lang.text.StrBuilder", 2, 'q');
      StrBuilder strBuilder2 = strBuilder0.insert(0, 'q');
      StrBuilder strBuilder3 = strBuilder2.insert(2, 0L);
      StrBuilder strBuilder4 = strBuilder3.append((double) 0);
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex(757);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 757
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = "";
      String string1 = ">:5Ybc[g}";
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder0.insert(1678, charArray0, 3, 3);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1678
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("h~@D");
      char[] charArray0 = new char[7];
      charArray0[0] = '}';
      charArray0[1] = '.';
      charArray0[2] = 'A';
      charArray0[3] = '*';
      charArray0[4] = ' ';
      charArray0[5] = '#';
      charArray0[6] = 'r';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder0.indexOf(strMatcher0, 1470);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.insert(0, false);
      StrBuilder strBuilder2 = strBuilder1.setNullText("x_3*e\"(/E|S");
      StrBuilder strBuilder3 = strBuilder0.append((Object) "x_3*e\"(/E|S");
      StrBuilder strBuilder4 = strBuilder1.replaceFirst((StrMatcher) null, "");
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(4);
      boolean boolean0 = strBuilder0.contains('B');
      int int0 = strBuilder0.indexOf("BOdr+xUa");
      char[] charArray0 = new char[2];
      StrBuilder strBuilder1 = strBuilder0.trim();
      charArray0[0] = '!';
      charArray0[1] = 'B';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      StrBuilder strBuilder2 = strBuilder0.replaceFirst((StrMatcher) strMatcher_CharSetMatcher0, (String) null);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      StrBuilder strBuilder3 = strBuilder2.replaceAll((StrMatcher) strMatcher_CharSetMatcher0, (String) null);
      StringBuffer stringBuffer0 = strBuilder3.toStringBuffer();
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.lastIndexOf('J', (-847));
      StrBuilder strBuilder1 = strBuilder0.replaceAll("", (String) null);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      char[] charArray0 = new char[8];
      charArray0[0] = '-';
      charArray0[1] = 'U';
      charArray0[2] = 'c';
      charArray0[3] = 'Q';
      charArray0[4] = ';';
      charArray0[5] = '=';
      charArray0[6] = 'W';
      charArray0[7] = 'H';
      char[] charArray1 = strBuilder1.getChars(charArray0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      StringBuffer stringBuffer0 = new StringBuffer("Invalid offset: ");
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StringBuffer stringBuffer1 = stringBuffer0.append('R');
      // Undeclared exception!
      try { 
        stringBuffer0.insert((-2265), (double) (-2265));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2265
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.insert(2708, ' ');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2708
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("EAcXJHFl*t-1Y+k1w8");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      char[] charArray0 = new char[1];
      charArray0[0] = 'i';
      StrBuilder strBuilder1 = new StrBuilder("EAcXJHFl*t-1Y+k1w8");
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrBuilder strBuilder2 = strBuilder1.replaceFirst((StrMatcher) strMatcher_NoMatcher0, "java.vm.version");
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder1);
      StrBuilder strBuilder4 = strBuilder3.minimizeCapacity();
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      StrMatcher strMatcher0 = StrMatcher.charMatcher('d');
      int int0 = strBuilder0.indexOf((StrMatcher) strMatcher_CharSetMatcher0);
      StrBuilder strBuilder5 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder5.new StrBuilderTokenizer();
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 0, (-918));
      int int1 = strBuilder0.size();
      // Undeclared exception!
      try { 
        strBuilder1.toCharArray(2, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-279);
      // Undeclared exception!
      try { 
        strBuilder0.charAt((-279));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -279
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(1497);
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      char[] charArray0 = new char[1];
      charArray0[0] = 'h';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 4029, 0);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      String string0 = null;
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      String string1 = strBuilder0.rightString(160);
      char char0 = 'p';
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('p', 'p');
      char[] charArray0 = new char[2];
      charArray0[0] = 'p';
      charArray0[1] = 'p';
      // Undeclared exception!
      try { 
        strBuilder1.insert((-1), charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.indexOf("org.apache.commons.lang.text.StrBuilder", 563);
      char[] charArray0 = new char[1];
      charArray0[0] = 'L';
      // Undeclared exception!
      try { 
        strBuilder0.insert(514, charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 514
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrBuilder strBuilder1 = strBuilder0.setLength(0);
      StrBuilder strBuilder2 = strBuilder1.append((Object) strBuilder_StrBuilderWriter0);
      int int0 = 0;
      int int1 = (-1558);
      // Undeclared exception!
      try { 
        strBuilder0.substring(0, (-1558));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      int int0 = 2974;
      // Undeclared exception!
      try { 
        strBuilder0.replace(2974, 2974, "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("LRn%");
      char[] charArray0 = new char[5];
      charArray0[0] = '4';
      charArray0[1] = '9';
      charArray0[2] = 'P';
      charArray0[3] = 'T';
      charArray0[4] = 'e';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((-201), (-201), 'P');
      StrBuilder strBuilder2 = strBuilder0.append(charArray0);
      // Undeclared exception!
      try { 
        strBuilder0.validateRange(2580, 2580);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.appendPadding(0, 'R');
      int int1 = 48;
      StrBuilder strBuilder2 = strBuilder0.ensureCapacity(115);
      StrBuilder strBuilder3 = new StrBuilder(48);
      boolean boolean0 = strBuilder0.equals((Object) strBuilder3);
      // Undeclared exception!
      try { 
        strBuilder3.charAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadLeft((Object) null, 34, '@');
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      String string0 = strBuilder0.toString();
      StrBuilder strBuilder1 = new StrBuilder("");
      boolean boolean0 = strBuilder0.equals(strBuilder1);
      StrTokenizer strTokenizer0 = strBuilder1.asTokenizer();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) "");
      strBuilder_StrBuilderWriter0.write(0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0);
      char[] charArray0 = new char[7];
      charArray0[0] = 'A';
      charArray0[1] = 'a';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, (-1303), (-1303));
      charArray0[2] = 's';
      charArray0[3] = 'K';
      charArray0[4] = 'l';
      charArray0[5] = 'B';
      charArray0[6] = 'C';
      StrBuilder strBuilder2 = strBuilder1.append(strBuilder0);
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset(charArray0);
      char[] charArray1 = new char[6];
      charArray1[0] = 's';
      charArray1[1] = 'a';
      charArray1[2] = 'C';
      charArray1[3] = 'K';
      charArray1[4] = 'C';
      charArray1[5] = 'C';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray1);
      int int1 = strBuilder0.lastIndexOf(strMatcher0, 0);
      char[] charArray2 = strBuilder0.getChars((char[]) null);
      StrBuilder strBuilder3 = strBuilder0.insert(0, false);
      int int2 = strBuilder0.lastIndexOf('a');
      StrBuilder strBuilder4 = strBuilder3.deleteFirst('j');
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder2 = new StrBuilder();
      StrBuilder strBuilder3 = strBuilder2.append(4);
      StrBuilder strBuilder4 = strBuilder1.appendFixedWidthPadLeft((Object) strBuilder2, 4, 'Z');
      StrBuilder strBuilder5 = strBuilder4.minimizeCapacity();
      StrTokenizer strTokenizer0 = strBuilder4.asTokenizer();
      int int0 = strBuilder0.lastIndexOf("H");
      StrBuilder strBuilder6 = strBuilder1.append((double) (-1));
      int int1 = strBuilder6.indexOf('u', 0);
      // Undeclared exception!
      try { 
        strBuilder6.insert(2530, 3L);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2530
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(97);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(object0, 97, '0');
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.clear();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      String string0 = "y{Q+\\QOPM95NT";
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Collection) linkedList0, "y{Q+QOPM95NT");
      Object[] objectArray0 = new Object[0];
      StrBuilder strBuilder3 = strBuilder0.appendWithSeparators(objectArray0, "V|;gR[nIy=:Uspe5(p");
      char[] charArray0 = new char[7];
      charArray0[0] = '$';
      charArray0[1] = 'W';
      charArray0[2] = 'o';
      charArray0[3] = '=';
      charArray0[4] = 's';
      charArray0[5] = '(';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("y{Q+QOPM95NT");
      int int0 = strBuilder3.indexOf(strMatcher0);
      charArray0[6] = '?';
      StrBuilder strBuilder4 = strBuilder3.append(charArray0);
      StrBuilder strBuilder5 = strBuilder3.setNullText("y{Q+QOPM95NT");
      int int1 = 1547;
      // Undeclared exception!
      try { 
        strBuilder1.insert(1547, true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1547
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder strBuilder1 = strBuilder0.delete(0, 0);
      StringBuffer stringBuffer0 = strBuilder1.toStringBuffer();
      StrBuilder strBuilder2 = strBuilder1.append(strBuilder0, 0, 0);
      char char0 = 'L';
      int int1 = (-1375);
      // Undeclared exception!
      try { 
        strBuilder1.toCharArray((-1375), (-1375));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1375
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1, 0, 0);
      StrBuilder strBuilder3 = strBuilder0.deleteFirst("");
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-3141));
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "");
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight((Object) "", (-3141), 'e');
      StrBuilder strBuilder3 = strBuilder0.deleteFirst("Ma2Q$r}");
      StrBuilder strBuilder4 = strBuilder0.insert(0, "");
      StrBuilder strBuilder5 = strBuilder2.append((float) (-3141));
      int int0 = strBuilder5.indexOf("#Zo6wVn", (-3141));
      boolean boolean0 = strBuilder3.isEmpty();
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append('*');
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) strBuilder1;
      objectArray0[1] = (Object) strBuilder1;
      objectArray0[2] = (Object) strBuilder1;
      objectArray0[3] = (Object) strBuilder0;
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators(objectArray0, "");
      StrBuilder strBuilder3 = strBuilder2.deleteFirst('X');
      StrBuilder strBuilder4 = strBuilder1.append((Object) strBuilder0);
      Writer writer0 = strBuilder4.asWriter();
      strBuilder2.size = 447;
      // Undeclared exception!
      try { 
        strBuilder1.lastIndexOf("Invalid startIndex: ");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 427
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      // Undeclared exception!
      try { 
        strBuilder0.insert(48, (double) 48);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 48
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) null, 0, '@');
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      boolean boolean0 = strBuilder0.isEmpty();
      StrBuilder strBuilder2 = strBuilder1.clear();
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("qyy55");
      char[] charArray0 = new char[4];
      charArray0[0] = '.';
      charArray0[1] = '#';
      charArray0[2] = 'I';
      charArray0[3] = 'S';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      int int0 = strBuilder1.validateRange(0, 0);
      String string0 = strBuilder0.leftString(97);
      StrBuilder strBuilder2 = strBuilder1.replaceFirst("qyy55.#IS", "c");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      String string1 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder strBuilder3 = strBuilder2.appendPadding(0, '^');
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.home");
      boolean boolean0 = strBuilder0.contains("java.home");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("java.home", "");
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrBuilder strBuilder2 = strBuilder1.replaceFirst("Invalid length: ", "Invalid length: ");
      StrBuilder strBuilder3 = strBuilder2.setNullText("Invalid length: ");
      char char0 = 'U';
      StrBuilder strBuilder4 = strBuilder1.insert(0, 0);
      StrBuilder strBuilder5 = strBuilder0.deleteAll('U');
      StrBuilder strBuilder6 = strBuilder0.append("v");
      int int0 = strBuilder0.lastIndexOf("");
      // Undeclared exception!
      try { 
        strBuilder1.substring(1, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrBuilder strBuilder2 = strBuilder1.trim();
      String string0 = strBuilder0.rightString((-624));
      StrBuilder strBuilder3 = strBuilder2.replaceFirst("ypIV,e>Soc%<9", "ypIV,e>Soc%<9");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder1.lastIndexOf("@");
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      boolean boolean0 = strBuilder1.isEmpty();
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("OCe{");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      String string0 = strBuilder0.getNullText();
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder2 = strBuilder1.append('P');
      char[] charArray0 = new char[2];
      charArray0[0] = 'P';
      charArray0[1] = 'P';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, (-1), 32);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.insert(0, 0.0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1936);
      char[] charArray0 = new char[7];
      charArray0[0] = 'Z';
      charArray0[1] = 'f';
      charArray0[2] = '{';
      charArray0[3] = 'E';
      charArray0[4] = 'W';
      charArray0[5] = 'i';
      charArray0[6] = '<';
      char[] charArray1 = strBuilder0.getChars(charArray0);
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      char[] charArray2 = new char[1];
      charArray2[0] = 'W';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray2);
      StrBuilder strBuilder2 = strBuilder1.replaceAll((StrMatcher) strMatcher_CharSetMatcher0, "qE|dvk*oi");
      strBuilder_StrBuilderWriter0.write("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("BA|w{}(:e|TP}B`");
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.appendNull();
      StrBuilder strBuilder3 = strBuilder2.append("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      StrBuilder strBuilder4 = strBuilder2.clear();
      StrBuilder strBuilder5 = strBuilder2.setNewLineText("BA|w{}(:e|TP}B`");
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = new StrBuilder(0);
      // Undeclared exception!
      try { 
        strBuilder1.charAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1693));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(",i#PJ-ql\"");
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "&m&+");
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[1];
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 2456);
      charArray0[0] = 'F';
      char[] charArray1 = strBuilder0.getChars(charArray0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-398));
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('1');
      // Undeclared exception!
      try { 
        strBuilder0.charAt(4);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 4
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-926));
      char[] charArray0 = new char[2];
      charArray0[0] = '0';
      charArray0[1] = 'W';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StringBuffer stringBuffer0 = strBuilder1.toStringBuffer();
      int int0 = strBuilder0.hashCode();
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(32);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      Object[] objectArray0 = new Object[4];
      Object object0 = new Object();
      objectArray0[0] = object0;
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) strBuilder_StrBuilderWriter0;
      objectArray0[3] = (Object) strBuilder0;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "");
      StrBuilder strBuilder2 = strBuilder0.insert(32, 459L);
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      int int0 = strBuilder2.lastIndexOf(strMatcher0, 0);
      strBuilder_StrBuilderWriter0.write((char[]) null, 139, 139);
      StrBuilder strBuilder3 = strBuilder1.append((-1L));
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      int int0 = 1;
      StrBuilder strBuilder0 = new StrBuilder(1);
      String string0 = "";
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("");
      StringBuffer stringBuffer0 = strBuilder1.toStringBuffer();
      StrBuilder strBuilder2 = strBuilder1.append('r');
      StrBuilder strBuilder3 = strBuilder2.replace(1, 1, "");
      int int1 = strBuilder1.size();
      // Undeclared exception!
      try { 
        strBuilder0.append("", 4, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) strBuilder0;
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('a');
      // Undeclared exception!
      try { 
        strBuilder1.insert(39, (long) 39);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 39
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("O-O#C&9/8");
      StrBuilder strBuilder1 = strBuilder0.deleteAll('J');
      StrBuilder strBuilder2 = strBuilder1.appendNewLine();
      Object object0 = new Object();
      StrBuilder strBuilder3 = strBuilder0.append(object0);
      int int0 = 155;
      // Undeclared exception!
      try { 
        strBuilder1.append("O-O#C&9/8", 155, 57);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[4];
      charArray0[0] = 'B';
      strBuilder_StrBuilderWriter0.write(0);
      strBuilder_StrBuilderWriter0.write("", 0, 0);
      strBuilder_StrBuilderWriter0.write(charArray0);
      charArray0[1] = '}';
      charArray0[2] = 'D';
      charArray0[3] = 'G';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 475, 475);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 475
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(114);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst((String) null);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1019));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("", (-1019), (-1019));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceAll("U&@q)/B3;h5{rH-", "U&@q)/B3;h5{rH-");
      StrBuilder strBuilder2 = strBuilder1.append(false);
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("U&@q)/B3;h5{rH-");
      int int0 = strBuilder2.indexOf((StrMatcher) strMatcher_StringMatcher0);
      String string0 = strBuilder1.midString(2327, 0);
      StrBuilder strBuilder3 = strBuilder1.appendFixedWidthPadLeft((Object) "U&@q)/B3;h5{rH-", 968, '*');
      StrBuilder strBuilder4 = new StrBuilder("U&@q)/B3;h5{rH-");
      char[] charArray0 = new char[3];
      charArray0[0] = '*';
      int int1 = 9;
      StrBuilder strBuilder5 = strBuilder4.insert(9, (float) (-1));
      charArray0[1] = 'S';
      StrBuilder strBuilder6 = strBuilder4.append(false);
      charArray0[2] = '*';
      // Undeclared exception!
      try { 
        strBuilder4.append(charArray0, 0, 1460);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 1460
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-557));
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(2, 2, '&');
      StrBuilder strBuilder2 = strBuilder0.append((-1.0));
      StrBuilder strBuilder3 = strBuilder2.appendNull();
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance("");
      StrBuilder strBuilder4 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      int int0 = strBuilder0.indexOf("oDLh", (-557));
      String string0 = strBuilder1.midString(2086, 3);
      StrTokenizer strTokenizer1 = strBuilder0.asTokenizer();
      StrBuilder strBuilder5 = strBuilder0.append(strBuilder1);
      StrBuilder strBuilder6 = strBuilder5.appendFixedWidthPadLeft((Object) strBuilder0, (-1), 'T');
      StrBuilder strBuilder7 = strBuilder1.appendWithSeparators((Collection) null, "startIndex must be valid");
      boolean boolean0 = strBuilder7.equals(strBuilder1);
      // Undeclared exception!
      try { 
        strBuilder5.substring((-557));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -557
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((-623.633F));
      // Undeclared exception!
      try { 
        strBuilder1.validateIndex((-164));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -164
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-291), (String) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -291
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(" J[v1qrYl9Xfa>");
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      StrMatcher strMatcher1 = StrMatcher.charMatcher('z');
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "wd\"lUfRN25o--?DRf");
      char[] charArray0 = new char[7];
      charArray0[0] = '{';
      charArray0[1] = 'z';
      charArray0[2] = 'z';
      charArray0[3] = 'z';
      charArray0[4] = 'z';
      charArray0[5] = 'z';
      charArray0[6] = 'z';
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((Object) " J[v1qrYl9Xfa>", (-3096), 'T');
      int int1 = strBuilder0.lastIndexOf(strMatcher0, 334);
      boolean boolean0 = strBuilder2.endsWith("");
      StrBuilder strBuilder3 = strBuilder2.deleteFirst(strMatcher1);
      char[] charArray1 = strBuilder3.toCharArray(0, 4);
      StrBuilder strBuilder4 = strBuilder3.appendPadding(0, '|');
      StrBuilder strBuilder5 = strBuilder1.appendPadding((-1407), '|');
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("1.2");
      strBuilder0.size = 0;
      StrBuilder strBuilder1 = strBuilder0.deleteAll('o');
      StrBuilder strBuilder2 = strBuilder1.deleteFirst("1.2");
      StrBuilder strBuilder3 = strBuilder1.deleteAll('o');
      StrBuilder strBuilder4 = strBuilder0.append(strBuilder1);
      String string0 = strBuilder1.substring(0, 0);
      StrBuilder strBuilder5 = strBuilder1.replaceAll("1.2", "");
      int int0 = strBuilder3.indexOf("Vsjr");
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 2236;
      // Undeclared exception!
      try { 
        strBuilder0.insert(2236, 0.0F);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2236
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('P');
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(0, 830, 'j');
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.trim();
      int int1 = strBuilder0.indexOf("");
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1838);
      StrBuilder strBuilder1 = strBuilder0.append(true);
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('p');
      StrBuilder strBuilder2 = strBuilder1.replaceFirst((StrMatcher) strMatcher_CharMatcher0, ",");
      StrBuilder strBuilder3 = strBuilder0.append(false);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("z");
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray(1070, 1005);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.startsWith((String) null);
      StrBuilder strBuilder1 = strBuilder0.append('*');
      // Undeclared exception!
      try { 
        strBuilder1.substring((-3238));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3238
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Y+");
      char[] charArray0 = new char[1];
      charArray0[0] = '\'';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StrBuilder strBuilder2 = strBuilder0.insert(0, "Gq");
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-1740);
      // Undeclared exception!
      try { 
        strBuilder0.substring((-2654), (-1740));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2654
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('=', '=');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterString("");
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      StrBuilder strBuilder2 = strBuilder1.appendNewLine();
      char[] charArray0 = new char[7];
      charArray0[0] = '=';
      charArray0[1] = '=';
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      boolean boolean0 = strBuilder1.contains(strMatcher0);
      charArray0[2] = '=';
      charArray0[3] = '=';
      charArray0[4] = '=';
      charArray0[5] = '=';
      charArray0[6] = '=';
      StrBuilder strBuilder3 = strBuilder1.append(charArray0);
      StringBuffer stringBuffer0 = new StringBuffer();
      int int0 = 1885;
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 1032, 1885);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 1037;
      StrBuilder strBuilder1 = strBuilder0.setNewLineText((String) null);
      char[] charArray0 = new char[0];
      StrBuilder strBuilder2 = strBuilder1.append(charArray0);
      StrTokenizer strTokenizer0 = strBuilder1.asTokenizer();
      char[] charArray1 = new char[6];
      charArray1[0] = '5';
      charArray1[1] = 'E';
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex(1853);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1853
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0);
      int int1 = strBuilder0.capacity();
      Writer writer0 = strBuilder0.asWriter();
      int int2 = 1737;
      char char0 = '|';
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight((-172), 1737, '|');
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "POTH80t+;{Ji81$";
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("POTH80t+;{Ji81$");
      // Undeclared exception!
      try { 
        strBuilder0.replace((StrMatcher) strMatcher_StringMatcher0, "POTH80t+;{Ji81$", (-3805), 0, 1580);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3805
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = strBuilder0.lastIndexOf(';');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[0];
      int int1 = strBuilder_StrBuilderReader0.read(charArray0);
      StrBuilder strBuilder1 = strBuilder0.append(0.0F);
      strBuilder_StrBuilderReader0.reset();
      StrBuilder strBuilder2 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder3 = strBuilder1.append(charArray0);
      // Undeclared exception!
      try { 
        strBuilder1.appendFixedWidthPadRight(0, 2414, ';');
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.appendNull();
      // Undeclared exception!
      try { 
        strBuilder1.delete((-2447), (-2447));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2447
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[5];
      charArray0[0] = '!';
      StrBuilder strBuilder1 = strBuilder0.append("");
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        strBuilder1.append(stringBuffer0, 624, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.validateIndex(0);
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder strBuilder1 = strBuilder0.append((Object) writer0);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2);
      StrBuilder strBuilder1 = strBuilder0.append(3238.17F);
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray((-370), 2);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -370
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.setLength(0);
      int int1 = 0;
      // Undeclared exception!
      try { 
        strBuilder1.setCharAt(0, '9');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-3173));
      StrBuilder strBuilder1 = strBuilder0.clear();
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt((-3173), 'Z');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3173
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder strBuilder1 = strBuilder0.insert(0, true);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("startIndex must be valid");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[3];
      charArray0[0] = '&';
      charArray0[1] = 'N';
      charArray0[2] = 'B';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 2075, 2075);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-3129));
      StrBuilder strBuilder1 = strBuilder0.reverse();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      char[] charArray0 = new char[2];
      charArray0[0] = 'f';
      charArray0[1] = '<';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0);
      long long0 = strBuilder_StrBuilderReader0.skip((-3129));
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[4];
      charArray0[0] = 'N';
      charArray0[1] = '`';
      charArray0[2] = 'e';
      charArray0[3] = ',';
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      int int1 = strBuilder1.lastIndexOf(strMatcher0, 0);
      StrBuilder strBuilder2 = strBuilder1.insert(0, (String) null);
      StrMatcher strMatcher1 = StrMatcher.commaMatcher();
      StrBuilder strBuilder3 = strBuilder1.deleteFirst(strMatcher1);
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 0, 1820);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 1820
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2752);
      char[] charArray0 = new char[2];
      charArray0[0] = '9';
      charArray0[1] = 'W';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, (-2406), (-2406));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -2406
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('-', '-');
      StrBuilder strBuilder2 = strBuilder1.setNullText("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrBuilder strBuilder3 = strBuilder0.minimizeCapacity();
      StrMatcher strMatcher0 = StrMatcher.stringMatcher((String) null);
      StrBuilder strBuilder4 = strBuilder3.deleteFirst(strMatcher0);
      int int0 = strBuilder4.capacity();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder4.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(0);
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      String string0 = strBuilder1.leftString(0);
      int int1 = 2757;
      // Undeclared exception!
      try { 
        strBuilder4.insert(2757, false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2757
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.insert(0, false);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 674);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(',');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
      StrBuilder strBuilder2 = strBuilder0.appendPadding((-1998), ')');
      int int1 = strBuilder1.capacity();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setNullText("org.apache.commons.lang.text.StrMatcher$CharSetMatcher");
      // Undeclared exception!
      try { 
        strBuilder0.insert(32, "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      boolean boolean0 = strBuilder0.endsWith("wWK^{ldpS");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "wWK^{ldpS");
      char[] charArray0 = new char[6];
      charArray0[0] = 'h';
      charArray0[1] = 'i';
      charArray0[2] = 'W';
      charArray0[3] = 'X';
      charArray0[4] = ' ';
      charArray0[5] = '^';
      strBuilder1.getChars(0, 0, charArray0, 4);
      char[] charArray1 = new char[2];
      charArray1[0] = 'f';
      charArray1[1] = ':';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray1);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher((String) null);
      boolean boolean1 = strBuilder0.contains((StrMatcher) strMatcher_CharSetMatcher0);
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(630, (-37), '%');
      // Undeclared exception!
      try { 
        strBuilder0.getChars(0, 0, (char[]) null, 1);
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      String string0 = strBuilder0.leftString(0);
      boolean boolean0 = strBuilder0.equals((Object) null);
      int int0 = strBuilder0.lastIndexOf('R');
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      int int1 = strBuilder0.indexOf(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      String string0 = strBuilder0.leftString(0);
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      // Undeclared exception!
      try { 
        strBuilder0.insert(1427, object0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1427
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[4];
      charArray0[0] = '@';
      charArray0[1] = 'r';
      StrBuilder strBuilder1 = strBuilder0.deleteAll("WjRw[k*0M");
      charArray0[2] = '>';
      charArray0[3] = '@';
      StrBuilder strBuilder2 = strBuilder0.append(charArray0);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      char[] charArray1 = new char[8];
      charArray1[0] = '>';
      charArray1[1] = '>';
      charArray1[2] = '>';
      charArray1[3] = '>';
      charArray1[4] = 'r';
      charArray1[5] = 'r';
      charArray1[6] = '>';
      charArray1[7] = '>';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray1);
      StrBuilder strBuilder3 = strBuilder1.replaceFirst(strMatcher0, "WjRw[k*0M");
      StrBuilder strBuilder4 = strBuilder2.ensureCapacity(2493);
      StrBuilder strBuilder5 = strBuilder0.append(1527);
      StrBuilder strBuilder6 = strBuilder1.appendFixedWidthPadRight(2493, 1527, 'r');
      StrBuilder strBuilder7 = strBuilder0.appendNull();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder5.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(1464);
      // Undeclared exception!
      try { 
        strBuilder0.insert(2493, 0L);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2493
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "AWM");
      int int0 = strBuilder0.indexOf(')', 0);
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((-1630), 50, ')');
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoreEmptyTokens(false);
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      char[] charArray0 = strBuilder0.getChars((char[]) null);
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "");
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Iterator) strBuilder_StrBuilderTokenizer0, "");
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      StrBuilder strBuilder3 = strBuilder1.replaceFirst("7]H>ojOA#euS", "1.3");
      StrBuilder strBuilder4 = strBuilder3.setLength(31);
      int int0 = strBuilder1.lastIndexOf("4[of'9.{dT1i6");
      StrBuilder strBuilder5 = strBuilder0.appendNull();
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.class.version");
      char[] charArray0 = strBuilder0.toCharArray(0, 0);
      StrBuilder strBuilder1 = strBuilder0.append(1.5);
      StrBuilder strBuilder2 = strBuilder0.insert(0, 1116);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((-3224));
      StrBuilder strBuilder3 = strBuilder2.deleteAll('a');
      StrBuilder strBuilder4 = strBuilder2.insert(9, "java.class.version");
      StrBuilder strBuilder5 = strBuilder0.replaceAll("java.class.version", "k-Ok#_$R?4]YNz");
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder2 = strBuilder1.deleteAll(".\"zuQFpcN");
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadLeft((Object) strBuilder1, 0, 'K');
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder4 = strBuilder1.clear();
      StrBuilder strBuilder5 = strBuilder3.append(stringBuffer0);
      StrBuilder strBuilder6 = strBuilder5.insert(0, (-3057));
      StrBuilder strBuilder7 = strBuilder2.appendWithSeparators((Collection) null, "");
      Object[] objectArray0 = new Object[7];
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder6.new StrBuilderTokenizer();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.previous();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }
}
