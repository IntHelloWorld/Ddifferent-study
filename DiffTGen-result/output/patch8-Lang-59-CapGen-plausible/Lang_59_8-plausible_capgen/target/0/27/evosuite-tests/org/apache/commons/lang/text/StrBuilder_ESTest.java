/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 28 18:47:46 GMT 2020
 */

package org.apache.commons.lang.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.Writer;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.NoSuchElementException;
import java.util.stream.Stream;
import org.apache.commons.lang.text.StrBuilder;
import org.apache.commons.lang.text.StrMatcher;
import org.apache.commons.lang.text.StrTokenizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StrBuilder_ESTest extends StrBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrBuilder strBuilder2 = strBuilder1.append(0L);
      int int0 = 5;
      StrBuilder strBuilder3 = strBuilder2.append((String) null, 5, 55);
      char[] charArray0 = new char[2];
      charArray0[0] = ':';
      charArray0[1] = 'c';
      StrBuilder strBuilder4 = strBuilder2.append(charArray0);
      char char0 = 'M';
      StrBuilder strBuilder5 = strBuilder2.appendFixedWidthPadRight(39, 1, 'M');
      // Undeclared exception!
      try { 
        strBuilder1.deleteCharAt(39);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 39
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('X', 'd');
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(116);
      StrBuilder strBuilder1 = strBuilder0.append(false);
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft(27, 3, '5');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setEmptyTokenAsNull(false);
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators((Iterator) strTokenizer0, ";");
      boolean boolean0 = strBuilder0.startsWith(";");
      StrBuilder strBuilder4 = strBuilder2.appendNewLine();
      StrTokenizer strTokenizer1 = StrTokenizer.getCSVInstance(";");
      StrBuilder strBuilder5 = strBuilder2.appendWithSeparators((Iterator) strTokenizer1, "g+,JR?,aSdvZ");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      char[] charArray0 = new char[2];
      charArray0[0] = '5';
      charArray0[1] = '5';
      boolean boolean1 = strBuilder_StrBuilderReader0.ready();
      int int0 = strBuilder5.indexOf('5', 27);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer1 = strBuilder4.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer1.getContent();
      StrBuilder strBuilder6 = strBuilder1.append("g+,JR?,aSdvZ");
      char[] charArray1 = strBuilder5.toCharArray();
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Windows NT");
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "Windows NT");
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder2 = strBuilder0.replaceAll("Windows NT", "Windows NT");
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder2);
      String string0 = strBuilder2.getNewLineText();
      StrBuilder strBuilder4 = strBuilder2.setNewLineText("+?6T&0L3,?");
      String string1 = strBuilder3.leftString(1);
      StrBuilder strBuilder5 = strBuilder3.replaceAll("", "Windows NT");
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("7kK");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(9, 9, '8');
      StrBuilder strBuilder2 = strBuilder1.appendNewLine();
      StrBuilder strBuilder3 = strBuilder0.trim();
      StrBuilder strBuilder4 = strBuilder3.append((-110.4F));
      StrBuilder strBuilder5 = strBuilder1.appendNewLine();
      StrBuilder strBuilder6 = strBuilder2.minimizeCapacity();
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder7 = strBuilder5.deleteAll((StrMatcher) strMatcher_TrimMatcher0);
      StrBuilder strBuilder8 = strBuilder7.append(strBuilder5);
      StrBuilder strBuilder9 = strBuilder2.insert(9, (Object) strBuilder3);
      StrBuilder strBuilder10 = strBuilder0.deleteAll((StrMatcher) strMatcher_TrimMatcher0);
      StrBuilder strBuilder11 = new StrBuilder();
      StrBuilder strBuilder12 = strBuilder10.deleteFirst('8');
      StrBuilder strBuilder13 = strBuilder12.deleteFirst("startIndex must be valid");
      StrBuilder strBuilder14 = strBuilder2.replaceAll((StrMatcher) strMatcher_TrimMatcher0, "startIndex must be valid");
      String string0 = strBuilder6.getNullText();
      StrBuilder strBuilder15 = strBuilder1.append((long) 9);
      String string1 = strBuilder4.midString(9, 9);
      boolean boolean0 = strBuilder0.contains('8');
      int int0 = strBuilder5.size();
      int int1 = strBuilder5.indexOf("org.apache.commons.lang.text.StrBuilder", 1517);
      String string2 = strBuilder10.getNullText();
      StrBuilder strBuilder16 = strBuilder10.append("org.apach");
      boolean boolean1 = strBuilder16.equalsIgnoreCase(strBuilder13);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder12.new StrBuilderReader();
      int int2 = strBuilder_StrBuilderReader0.read();
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(48);
      StrBuilder strBuilder1 = strBuilder0.appendPadding(48, '\"');
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      Object object0 = new Object();
      boolean boolean0 = linkedList1.offer(object0);
      boolean boolean1 = linkedList0.addAll(0, (Collection<?>) linkedList1);
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Collection) linkedList0, "%u` ");
      int int0 = strBuilder0.lastIndexOf("(jESJe^% G=E0");
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("%u` ");
      boolean boolean2 = strBuilder2.contains(strMatcher0);
      StrBuilder strBuilder3 = strBuilder0.deleteFirst("(jESJe^% G=E0");
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "(jESJe^% G=E0");
      char[] charArray0 = new char[3];
      charArray0[0] = '\"';
      charArray0[1] = '\"';
      charArray0[2] = 'V';
      // Undeclared exception!
      try { 
        strBuilder3.append(charArray0, 59, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('4');
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[6];
      charArray0[0] = 'O';
      charArray0[1] = '4';
      charArray0[2] = '{';
      charArray0[3] = 'O';
      charArray0[4] = '4';
      charArray0[5] = '{';
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance(charArray0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "t*lF{U:N(i:jiD3#xU9");
      StrBuilder strBuilder2 = strBuilder0.setCharAt(5, 'l');
      StrTokenizer strTokenizer1 = strBuilder2.asTokenizer();
      boolean boolean0 = strBuilder2.startsWith("");
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(102);
      StrBuilder strBuilder1 = strBuilder0.append(']');
      String string0 = strBuilder0.rightString(102);
      StrBuilder strBuilder2 = strBuilder0.setNewLineText("");
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(116);
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft(27, 3, '5');
      boolean boolean0 = strBuilder0.startsWith(";");
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadLeft((Object) ";", 27, '5');
      StrBuilder strBuilder4 = strBuilder2.appendNewLine();
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance(";");
      StrBuilder strBuilder5 = strBuilder3.appendWithSeparators((Iterator) strTokenizer0, "g+,JR?,aSdvZ");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder3.new StrBuilderReader();
      char[] charArray0 = new char[2];
      charArray0[0] = '5';
      charArray0[1] = '5';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0);
      boolean boolean1 = strBuilder_StrBuilderReader0.ready();
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(104, '5');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 104
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("7kK");
      int int0 = 0;
      char char0 = '8';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(0, 0, '8');
      StrBuilder strBuilder2 = strBuilder1.appendNewLine();
      StrBuilder strBuilder3 = strBuilder0.trim();
      StrBuilder strBuilder4 = strBuilder2.delete(0, 12);
      StrBuilder strBuilder5 = strBuilder3.append((-110.4F));
      StrBuilder strBuilder6 = strBuilder1.appendNewLine();
      StrBuilder strBuilder7 = strBuilder2.minimizeCapacity();
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder8 = strBuilder6.deleteAll((StrMatcher) strMatcher_TrimMatcher0);
      StrBuilder strBuilder9 = strBuilder8.append(strBuilder6);
      StrBuilder strBuilder10 = strBuilder2.insert(0, (Object) strBuilder3);
      StrBuilder strBuilder11 = strBuilder0.deleteAll((StrMatcher) strMatcher_TrimMatcher0);
      String string0 = "startIndex must be valid";
      int int1 = (-816);
      // Undeclared exception!
      try { 
        strBuilder11.replace(0, (-816), ")8R*d7h&0");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(116);
      StrBuilder strBuilder1 = strBuilder0.append(false);
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft(27, 3, '5');
      boolean boolean0 = strBuilder0.startsWith(";");
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadLeft((Object) ";", 27, '5');
      StrBuilder strBuilder4 = strBuilder2.appendNewLine();
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance(";");
      StrBuilder strBuilder5 = strBuilder3.appendWithSeparators((Iterator) strTokenizer0, "g+,JR?,aSdvZ");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder3.new StrBuilderReader();
      char[] charArray0 = new char[2];
      charArray0[0] = '5';
      charArray0[1] = '5';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0);
      boolean boolean1 = strBuilder_StrBuilderReader0.ready();
      boolean boolean2 = strBuilder4.contains('f');
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("7kK");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(0, 0, '8');
      StrBuilder strBuilder2 = strBuilder1.appendNewLine();
      StrBuilder strBuilder3 = strBuilder0.trim();
      StrBuilder strBuilder4 = strBuilder3.append((-110.4F));
      StrBuilder strBuilder5 = strBuilder1.appendNewLine();
      StrBuilder strBuilder6 = strBuilder2.minimizeCapacity();
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder7 = strBuilder5.deleteAll((StrMatcher) strMatcher_TrimMatcher0);
      StrBuilder strBuilder8 = strBuilder7.append(strBuilder5);
      StrBuilder strBuilder9 = strBuilder2.insert(0, (Object) strBuilder3);
      StrBuilder strBuilder10 = strBuilder0.deleteAll((StrMatcher) strMatcher_TrimMatcher0);
      StrBuilder strBuilder11 = strBuilder10.deleteFirst('8');
      StrBuilder strBuilder12 = strBuilder11.deleteFirst("startIndex must be valid");
      StrBuilder strBuilder13 = strBuilder2.replaceAll((StrMatcher) strMatcher_TrimMatcher0, "startIndex must be valid");
      String string0 = strBuilder6.getNullText();
      StrBuilder strBuilder14 = strBuilder1.append((long) 0);
      String string1 = strBuilder4.midString(0, 0);
      boolean boolean0 = strBuilder0.contains('8');
      int int0 = strBuilder5.size();
      int int1 = strBuilder5.indexOf("org.apache.commons.lang.text.StrBuilder", 1517);
      String string2 = strBuilder10.getNullText();
      StrBuilder strBuilder15 = strBuilder10.append("");
      boolean boolean1 = strBuilder15.equalsIgnoreCase(strBuilder12);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder11.new StrBuilderReader();
      int int2 = strBuilder_StrBuilderReader0.read();
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[1];
      charArray0[0] = 'o';
      strBuilder_StrBuilderWriter0.write(charArray0, 0, 0);
      strBuilder_StrBuilderWriter0.write("org.apache.commons.lang.ArrayUtils");
      // Undeclared exception!
      try { 
        strBuilder0.getChars(19, 19, charArray0, 2);
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("ETv^:NG\"'O\ru5T");
      StrBuilder strBuilder1 = strBuilder0.setNullText("H\"");
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('\\');
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher(")[Y|");
      int int0 = strBuilder1.validateRange(4, 4);
      StrBuilder strBuilder2 = strBuilder1.deleteAll(strMatcher0);
      boolean boolean0 = strBuilder1.contains("H\"");
      boolean boolean1 = strBuilder2.endsWith("ETv^:NG\"'O\ru5T");
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      char char0 = '8';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(0, 0, '8');
      StrBuilder strBuilder2 = strBuilder1.appendNewLine();
      StrBuilder strBuilder3 = strBuilder0.trim();
      StrBuilder strBuilder4 = new StrBuilder("7kK");
      StrBuilder strBuilder5 = strBuilder1.appendNewLine();
      StrBuilder strBuilder6 = strBuilder2.minimizeCapacity();
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder7 = strBuilder5.deleteAll((StrMatcher) strMatcher_TrimMatcher0);
      StrBuilder strBuilder8 = strBuilder7.append(strBuilder5);
      StrBuilder strBuilder9 = strBuilder2.insert(0, (Object) strBuilder3);
      StrBuilder strBuilder10 = strBuilder0.deleteAll((StrMatcher) strMatcher_TrimMatcher0);
      String string0 = "startIndex must be valid";
      int int1 = (-816);
      // Undeclared exception!
      try { 
        strBuilder10.replace(0, (-816), ")8R*d7h&");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      String string0 = "Windows NT";
      StrBuilder strBuilder0 = new StrBuilder("Windows NT");
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "Windows NT");
      char[] charArray0 = new char[7];
      charArray0[0] = 'u';
      charArray0[1] = '<';
      charArray0[2] = '?';
      charArray0[3] = 'x';
      charArray0[4] = '3';
      charArray0[5] = '{';
      charArray0[6] = 'u';
      strBuilder0.buffer = charArray0;
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("A3#]:b_l%I @Qyi4");
      int int0 = 1584;
      int int1 = 0;
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      int int2 = 282;
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(1584);
      // Undeclared exception!
      try { 
        strBuilder1.substring((-1190));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1190
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((String) null, 66, 66);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("startIndex must be valid");
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      char[] charArray0 = new char[3];
      charArray0[0] = 'N';
      StrBuilder strBuilder2 = strBuilder0.replaceAll("", "startIndex must be valid");
      charArray0[1] = 'H';
      StrBuilder strBuilder3 = new StrBuilder("");
      charArray0[2] = 'h';
      String string0 = strBuilder3.midString((-2654), 2604);
      strBuilder1.buffer = charArray0;
      boolean boolean0 = strBuilder0.isEmpty();
      int int0 = 0;
      int int1 = strBuilder2.lastIndexOf("org.apache.commons.lang.text.StrBuilder", 0);
      StrBuilder strBuilder4 = strBuilder1.appendNull();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder3.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setQuoteChar('N');
      StrBuilder strBuilder5 = strBuilder4.appendWithSeparators((Iterator) strTokenizer0, "startIndex must be valid");
      StrBuilder strBuilder6 = strBuilder2.append((Object) null);
      // Undeclared exception!
      try { 
        strBuilder6.insert((-1), charArray0, 2604, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      int int0 = (-3252);
      StrBuilder strBuilder0 = new StrBuilder((-3252));
      int int1 = strBuilder0.indexOf((StrMatcher) null, 406);
      StrBuilder strBuilder1 = strBuilder0.replaceAll((StrMatcher) null, "h{");
      String string0 = strBuilder0.getNullText();
      StrBuilder strBuilder2 = new StrBuilder((-3252));
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder2);
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex((-2228));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2228
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(116);
      StrBuilder strBuilder1 = strBuilder0.append(false);
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft(27, 3, '5');
      boolean boolean0 = strBuilder0.startsWith("");
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadLeft((Object) "", 27, '5');
      StrBuilder strBuilder4 = strBuilder2.appendNewLine();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder3.new StrBuilderReader();
      char[] charArray0 = new char[2];
      charArray0[0] = '5';
      charArray0[1] = '5';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0);
      boolean boolean1 = strBuilder_StrBuilderReader0.ready();
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      char[] charArray0 = strBuilder0.toCharArray();
      int int0 = 9;
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray(9, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Windows NT");
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "Windows NT");
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder2 = strBuilder0.replaceAll("Windows NT", "Windows NT");
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder2);
      String string0 = strBuilder2.getNewLineText();
      StrBuilder strBuilder4 = strBuilder3.replace(31, 913, "~/sK&DYe/3");
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "Bw'w_uZGCt|";
      strBuilder0.size = (-92);
      int int0 = 18;
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("");
      // Undeclared exception!
      try { 
        strBuilder0.substring((-92));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -92
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.append((StringBuffer) null);
      int int0 = 332;
      String string0 = strBuilder1.midString(0, 332);
      char char0 = 'a';
      int int1 = strBuilder0.indexOf('a', 3918);
      int int2 = strBuilder0.lastIndexOf("}u&?>xPT|;cWuNK(dbm", 3918);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      // Undeclared exception!
      try { 
        strBuilder0.insert(332, object0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 332
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("7kK");
      int int0 = 0;
      char char0 = '8';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(0, 0, '8');
      StrBuilder strBuilder2 = strBuilder1.appendNewLine();
      StrBuilder strBuilder3 = strBuilder0.trim();
      StrBuilder strBuilder4 = strBuilder3.append((-110.4F));
      StrBuilder strBuilder5 = strBuilder1.appendNewLine();
      StrBuilder strBuilder6 = strBuilder2.minimizeCapacity();
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder7 = strBuilder5.deleteAll((StrMatcher) strMatcher_TrimMatcher0);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("java.awt.headless");
      StrBuilder strBuilder8 = strBuilder7.deleteFirst(strMatcher0);
      StrBuilder strBuilder9 = strBuilder7.append(strBuilder5);
      StrBuilder strBuilder10 = strBuilder2.insert(0, (Object) strBuilder3);
      StrBuilder strBuilder11 = strBuilder0.deleteAll((StrMatcher) strMatcher_TrimMatcher0);
      String string0 = "startIndex must be valid";
      int int1 = (-816);
      // Undeclared exception!
      try { 
        strBuilder11.replace(0, (-816), ")8R*d7h&0");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3706);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder1 = strBuilder0.setNullText("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
      StrBuilder strBuilder3 = strBuilder1.appendPadding(1107, 't');
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrBuilder strBuilder4 = strBuilder2.deleteAll(strMatcher0);
      StrMatcher strMatcher1 = StrMatcher.tabMatcher();
      int int0 = strBuilder2.indexOf(strMatcher1);
      StrBuilder strBuilder5 = strBuilder2.setLength(3706);
      int int1 = strBuilder1.indexOf('C');
      StrBuilder strBuilder6 = strBuilder2.append(3706);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Cvq");
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("");
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("Cvq");
      StrMatcher strMatcher2 = StrMatcher.charMatcher('6');
      String string0 = strBuilder0.toString();
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      String string1 = "java.vendor";
      boolean boolean0 = strBuilder0.contains("java.vendor");
      int int1 = strBuilder0.indexOf("Invalid startIndex: ", (-1899));
      StrBuilder strBuilder1 = new StrBuilder("LK3Ur+F");
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      int int2 = strBuilder0.capacity();
      int int3 = strBuilder0.lastIndexOf(';');
      int int4 = strBuilder1.capacity();
      StrBuilder strBuilder3 = strBuilder1.append((Object) "Invalid startIndex: ");
      StrMatcher strMatcher3 = StrMatcher.singleQuoteMatcher();
      // Undeclared exception!
      try { 
        strBuilder0.replace(strMatcher3, "Invalid startIndex: ", 23, 5, 1754);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Windows NT");
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "Windows NT");
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder2 = strBuilder0.replaceAll("Windows NT", "Windows NT");
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder2);
      int int0 = strBuilder0.hashCode();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder3.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder strBuilder4 = strBuilder3.appendFixedWidthPadLeft(object0, 3, '\'');
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(60);
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrBuilder strBuilder2 = strBuilder1.append((char[]) null, 1334, 41);
      StrBuilder strBuilder3 = strBuilder2.deleteAll("GM~nl#HI[7wk>");
      StrBuilder strBuilder4 = strBuilder3.appendFixedWidthPadRight(1334, 41, '>');
      boolean boolean0 = strBuilder2.equals(strBuilder0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-1);
      char[] charArray0 = new char[5];
      int int1 = strBuilder0.indexOf((StrMatcher) null);
      charArray0[0] = 'A';
      charArray0[1] = '1';
      charArray0[2] = 't';
      charArray0[3] = '>';
      char char0 = 'l';
      int int2 = strBuilder0.lastIndexOf("Hl 0XoEAF\"n;", (-1));
      // Undeclared exception!
      try { 
        strBuilder0.getChars((-793), 31, charArray0, 1);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -793
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      boolean boolean0 = strBuilder_StrBuilderTokenizer0.hasPrevious();
      String string0 = strBuilder0.toString();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[0];
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) "", (-3179), '&');
      int int0 = strBuilder_StrBuilderReader0.read(charArray0, 0, 0);
      int int1 = strBuilder_StrBuilderReader0.read();
      boolean boolean1 = strBuilder_StrBuilderReader0.markSupported();
      boolean boolean2 = strBuilder_StrBuilderReader0.ready();
      int int2 = strMatcher0.isMatch((char[]) null, 0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder();
      boolean boolean0 = strBuilder0.equals(strBuilder1);
      StringBuffer stringBuffer0 = new StringBuffer(0);
      StringBuffer stringBuffer1 = stringBuffer0.reverse();
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("]>$f`~JZI(Y");
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('S');
      char[] charArray0 = new char[9];
      charArray0[0] = 'S';
      charArray0[1] = 'S';
      charArray0[2] = 'S';
      strBuilder0.size = 0;
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("]>$f`~JZI(Y");
      charArray0[3] = 'S';
      charArray0[4] = 'S';
      charArray0[5] = 'S';
      charArray0[6] = 'S';
      charArray0[7] = 'S';
      charArray0[8] = 'S';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.insert(0, (float) 0);
      StrBuilder strBuilder2 = strBuilder1.append("/oA");
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_CharMatcher0);
      int int1 = strBuilder0.indexOf('<', 4);
      StrBuilder strBuilder3 = new StrBuilder("3fT7*.)5g]\"t[%~&X");
      StrBuilder strBuilder4 = strBuilder0.insert(0, (Object) strBuilder3);
      StrBuilder strBuilder5 = strBuilder0.reverse();
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      int int0 = strBuilder0.indexOf((String) null, 0);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('_');
      boolean boolean0 = strBuilder0.startsWith((String) null);
      StrBuilder strBuilder2 = strBuilder0.append('_');
      StrBuilder strBuilder3 = strBuilder0.append('b');
      // Undeclared exception!
      try { 
        strBuilder1.insert(5, (float) 5);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 5
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("2:69@");
      StrBuilder strBuilder1 = strBuilder0.setNullText("2:69@");
      StrBuilder strBuilder2 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      int int0 = strBuilder2.indexOf(strMatcher0, 14);
      StringBuffer stringBuffer0 = new StringBuffer();
      char[] charArray0 = new char[2];
      charArray0[0] = 'f';
      charArray0[1] = 'f';
      StrBuilder strBuilder3 = strBuilder1.deleteAll("2:69@");
      StringBuffer stringBuffer1 = stringBuffer0.append(charArray0);
      int int1 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 0, (-1390));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("y8A?k");
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadLeft((Object) null, 4, 'o');
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(0);
      StringBuffer stringBuffer0 = new StringBuffer("!f:s");
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) "!f:s", 0, 0);
      Writer writer1 = strBuilder_StrBuilderWriter0.append((CharSequence) stringBuffer0);
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      char[] charArray0 = new char[1];
      charArray0[0] = 'u';
      int int0 = strMatcher0.isMatch(charArray0, 0, 3272, 0);
      int int1 = strBuilder0.indexOf(strMatcher0);
      Writer writer2 = strBuilder_StrBuilderWriter0.append('u');
      strBuilder_StrBuilderWriter0.write("gR-7}'M&;PG");
      boolean boolean0 = strBuilder0.endsWith("gR-7}'M&;PG");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      boolean boolean1 = strBuilder_StrBuilderReader0.markSupported();
      StrBuilder strBuilder1 = new StrBuilder();
      boolean boolean2 = strBuilder0.equals(strBuilder1);
      StrBuilder strBuilder2 = strBuilder1.appendPadding(31, 'u');
      Object[] objectArray0 = new Object[0];
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators(objectArray0, "gR-7}'M&;PG");
      StrBuilder strBuilder4 = strBuilder3.insert(31, (-555.05557038093));
      String string0 = strBuilder2.getNewLineText();
      StrBuilder strBuilder5 = strBuilder3.deleteCharAt(31);
      StrBuilder strBuilder6 = strBuilder4.insert(0, (-359L));
      int int2 = strBuilder6.indexOf(strMatcher0);
      StrBuilder strBuilder7 = strBuilder2.append(charArray0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrMatcher strMatcher1 = StrMatcher.tabMatcher();
      StrBuilder strBuilder0 = new StrBuilder((-739));
      StrBuilder strBuilder1 = strBuilder0.append((long) 134);
      boolean boolean0 = strBuilder1.isEmpty();
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setLength(0);
      char[] charArray0 = new char[4];
      charArray0[0] = 'n';
      charArray0[1] = 'm';
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      charArray0[2] = '`';
      charArray0[3] = '\\';
      StrBuilder strBuilder2 = strBuilder0.insert(0, charArray0, 0, 0);
      int int0 = strBuilder2.length();
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[7];
      charArray0[0] = 'v';
      StrBuilder strBuilder1 = strBuilder0.append(3439.3);
      charArray0[1] = 'U';
      StrBuilder strBuilder2 = strBuilder0.append(charArray0, 0, 0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      StrBuilder strBuilder3 = strBuilder0.minimizeCapacity();
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder strBuilder1 = strBuilder0.setLength(57);
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrBuilder strBuilder2 = strBuilder1.replaceAll(strMatcher0, "");
      StrBuilder strBuilder3 = strBuilder0.deleteAll("");
      String string0 = strBuilder0.substring(0, 0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.append(']');
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft(409, 1, '7');
      StrBuilder strBuilder3 = strBuilder0.deleteFirst('o');
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray(409, 409);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = 'L';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(0, 0, 'L');
      // Undeclared exception!
      try { 
        strBuilder1.charAt(965);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 965
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.toString();
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrBuilder strBuilder2 = strBuilder0.deleteAll("");
      String string1 = "p";
      int int0 = (-760);
      char[] charArray0 = new char[6];
      charArray0[0] = 'T';
      charArray0[1] = '3';
      charArray0[2] = '{';
      charArray0[3] = 'v';
      charArray0[4] = '^';
      charArray0[5] = 'h';
      // Undeclared exception!
      try { 
        strBuilder2.append(charArray0, 0, 108);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 108
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder();
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      StrBuilder strBuilder2 = strBuilder0.insert(0, (double) 0);
      StrBuilder strBuilder3 = strBuilder2.append(strBuilder0, 0, 0);
      StrBuilder strBuilder4 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      // Undeclared exception!
      try { 
        strBuilder3.insert(Integer.MAX_VALUE, (Object) strBuilder4);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2147483647
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-3286));
      StrBuilder strBuilder1 = new StrBuilder((-553));
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      StringBuffer stringBuffer0 = new StringBuffer("");
      StrBuilder strBuilder2 = strBuilder1.append(stringBuffer0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("MrnF3>(\\");
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      int int0 = (-465);
      char[] charArray0 = new char[8];
      charArray0[0] = 'p';
      charArray0[1] = '/';
      charArray0[2] = 'I';
      charArray0[3] = '5';
      charArray0[4] = 'z';
      charArray0[5] = 's';
      charArray0[6] = '}';
      charArray0[7] = '&';
      // Undeclared exception!
      try { 
        strBuilder0.insert(4, charArray0, (-465), (-465));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: -465
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.clear();
      String string0 = strBuilder0.leftString((-1430));
      StrBuilder strBuilder2 = strBuilder0.replaceFirst("", "");
      int int0 = strBuilder0.indexOf("");
      int int1 = strBuilder0.hashCode();
      String string1 = strBuilder0.midString(0, (-1430));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      int int2 = strBuilder0.lastIndexOf(strMatcher0, (-1));
      int int3 = 349;
      // Undeclared exception!
      try { 
        strBuilder2.insert(349, 1519);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 349
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Stream<String> stream0 = linkedList0.stream();
      boolean boolean0 = linkedList0.add((String) null);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "<{ZQ6H9:,4hAxm1xt&");
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder2 = strBuilder0.replaceFirst((StrMatcher) strMatcher_TrimMatcher0, "StrTokenizer[not tokenized yet]");
      StrBuilder strBuilder3 = strBuilder1.trim();
      StrBuilder strBuilder4 = strBuilder3.deleteFirst("");
      char[] charArray0 = new char[8];
      charArray0[0] = '4';
      charArray0[1] = 'q';
      charArray0[2] = 'S';
      charArray0[3] = 'E';
      charArray0[4] = 'W';
      charArray0[5] = '5';
      charArray0[6] = 'V';
      charArray0[7] = 'm';
      // Undeclared exception!
      try { 
        strBuilder1.insert((-1133), charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1133
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      CharBuffer charBuffer0 = CharBuffer.allocate(9);
      StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder2 = strBuilder0.deleteFirst('9');
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0, 9);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      char[] charArray0 = new char[6];
      charArray0[0] = '9';
      charArray0[1] = 'g';
      charArray0[2] = '9';
      charArray0[3] = '9';
      charArray0[4] = '9';
      charArray0[5] = '9';
      strBuilder_StrBuilderWriter0.write(charArray0);
      StrBuilder strBuilder3 = strBuilder0.appendNewLine();
      StrBuilder strBuilder4 = new StrBuilder("5.1");
      StrBuilder strBuilder5 = strBuilder4.replaceAll("java.specification.name", "");
      boolean boolean0 = strBuilder2.equals(strBuilder4);
      StrBuilder strBuilder6 = strBuilder2.appendPadding((-1091), 'O');
      StrBuilder strBuilder7 = strBuilder6.insert(1, "_VA7w.T8a");
      int int1 = strBuilder4.lastIndexOf('{');
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setLength(0);
      char[] charArray0 = new char[4];
      charArray0[0] = 'n';
      charArray0[1] = 'm';
      charArray0[2] = '`';
      charArray0[3] = '\\';
      StrBuilder strBuilder2 = strBuilder0.insert(0, charArray0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(0.0);
      StrBuilder strBuilder2 = strBuilder1.minimizeCapacity();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      String string0 = "";
      strBuilder_StrBuilderWriter0.write("");
      int int0 = 1948;
      char[] charArray0 = new char[8];
      charArray0[0] = '*';
      charArray0[1] = 'Z';
      charArray0[2] = 'C';
      charArray0[3] = 'V';
      StrBuilder strBuilder3 = strBuilder1.ensureCapacity((-5004));
      charArray0[4] = '8';
      charArray0[5] = 'B';
      Reader reader0 = strBuilder1.asReader();
      charArray0[6] = 'I';
      charArray0[7] = 'g';
      // Undeclared exception!
      try { 
        strBuilder2.getChars(1948, 1948, charArray0, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1948
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance();
      String string0 = "os.version";
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "os.version");
      int int0 = strBuilder1.lastIndexOf("os.version", 103);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      Object[] objectArray0 = linkedList0.toArray();
      // Undeclared exception!
      try { 
        linkedList0.subList(0, (-269));
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(0) > toIndex(-269)
         //
         verifyException("java.util.SubList", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char char0 = 'f';
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('f');
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoredMatcher(strMatcher_CharMatcher0);
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      String string1 = "StrTokenizer[not tokenized yet]";
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "StrTokenizer[not tokenized yet]");
      int int0 = (-352);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-352), (long) (-352));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -352
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(48);
      StrBuilder strBuilder1 = strBuilder0.appendPadding(48, '\"');
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      boolean boolean0 = linkedList0.addAll(0, (Collection<?>) linkedList1);
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Collection) linkedList0, "%u` ");
      int int0 = strBuilder0.lastIndexOf("(jESJe^% G=E0");
      StrBuilder strBuilder3 = strBuilder0.deleteFirst("(jESJe^% G=E0");
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "(jESJe^% G=E0");
      char[] charArray0 = new char[3];
      charArray0[0] = '\"';
      charArray0[1] = '\"';
      charArray0[2] = 'V';
      // Undeclared exception!
      try { 
        strBuilder3.append(charArray0, 108, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("GPW^OW{M$QrUjBv09Cl");
      int int0 = 117;
      int int1 = strBuilder0.lastIndexOf("GPW^OW{M$QrUjBv09Cl", 117);
      StrBuilder strBuilder1 = strBuilder0.insert(0, '');
      StrBuilder strBuilder2 = strBuilder0.appendNull();
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("");
      char[] charArray0 = new char[1];
      charArray0[0] = '';
      StrBuilder strBuilder3 = strBuilder1.append(charArray0);
      StrBuilder strBuilder4 = strBuilder1.append(0L);
      int int2 = 4;
      StrBuilder strBuilder5 = strBuilder1.replace(strMatcher0, "", 4, 117, 0);
      // Undeclared exception!
      try { 
        strBuilder2.append(strBuilder1, 117, 2339);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append('=');
      StrBuilder strBuilder2 = strBuilder0.setNullText("");
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3706);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder1 = strBuilder0.setNullText("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
      StrBuilder strBuilder3 = strBuilder1.appendPadding(1107, 't');
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrBuilder strBuilder4 = strBuilder2.deleteAll(strMatcher0);
      StrMatcher strMatcher1 = StrMatcher.tabMatcher();
      int int0 = strBuilder2.indexOf(strMatcher1);
      StrBuilder strBuilder5 = strBuilder2.setLength(134);
      int int1 = strBuilder1.indexOf('C');
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      String string0 = null;
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      int int0 = strBuilder0.indexOf((StrMatcher) strMatcher_NoMatcher0, 1677);
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("_0}W Ut:p");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("_0}W Ut:p");
      StrBuilder strBuilder2 = strBuilder0.setNullText("java.awt.printerjob");
      Writer writer0 = strBuilder2.asWriter();
      int int0 = strBuilder0.lastIndexOf('?', (-5829));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrBuilder strBuilder3 = strBuilder2.deleteAll(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(true);
      // Undeclared exception!
      try { 
        strBuilder1.appendFixedWidthPadRight((Object) "83!4,|-yEh(`'jPdUU", 97, '+');
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(44);
      char[] charArray0 = new char[0];
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst((StrMatcher) strMatcher_CharSetMatcher0);
      int int0 = strBuilder0.indexOf("", 44);
      StrBuilder strBuilder2 = strBuilder1.replaceAll((StrMatcher) strMatcher_CharSetMatcher0, "");
      int int1 = (-17);
      String string0 = strBuilder1.midString((-17), (-448));
      int int2 = strBuilder2.lastIndexOf((StrMatcher) strMatcher_CharSetMatcher0, (-1398));
      String string1 = strBuilder1.rightString((-365));
      int int3 = strBuilder2.indexOf((StrMatcher) strMatcher_CharSetMatcher0, 44);
      int int4 = 5;
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadRight(0, 5, '!');
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder4 = strBuilder2.appendWithSeparators((Collection) linkedList0, "U0^D6OW");
      StrBuilder strBuilder5 = strBuilder4.replaceAll((StrMatcher) strMatcher_CharSetMatcher0, "u9P<I*(Y");
      Reader reader0 = strBuilder4.asReader();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(0L);
      int int5 = strBuilder_StrBuilderReader0.read();
      Writer writer0 = strBuilder4.asWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, (-1912), 635);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      String string0 = "\\Ot17i$!vt6X\"F";
      StrBuilder strBuilder0 = new StrBuilder("Ot17i$!vt6X\"F");
      int int0 = 703;
      StrBuilder strBuilder1 = strBuilder0.append("Ot17i$!vt6X\"F");
      // Undeclared exception!
      try { 
        strBuilder0.insert(703, (long) 703);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 703
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = 'U';
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('U', 'U');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.previous();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      int int0 = (-2144);
      char[] charArray0 = new char[2];
      charArray0[0] = '.';
      charArray0[1] = 'y';
      // Undeclared exception!
      try { 
        strBuilder0.insert((-2144), charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2144
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) null;
      objectArray0[1] = (Object) null;
      objectArray0[2] = (Object) null;
      objectArray0[3] = (Object) "java.compiler";
      objectArray0[4] = (Object) strBuilder0;
      objectArray0[5] = (Object) null;
      objectArray0[6] = (Object) "java.compiler";
      objectArray0[7] = (Object) strBuilder0;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, (String) null);
      StrBuilder strBuilder2 = strBuilder0.replaceAll("java.compiler", "4.9");
      StrBuilder strBuilder3 = strBuilder0.replaceAll('T', 'T');
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("user.home");
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      int int0 = 32;
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      int int1 = strBuilder0.indexOf(strMatcher0, 32);
      String string0 = "ywLuo_rDc,qYtj";
      StrBuilder strBuilder2 = strBuilder0.replaceAll("user.home", "ywLuo_rDc,qYtj");
      // Undeclared exception!
      try { 
        strBuilder2.deleteCharAt(2777);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2777
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.indexOf(".vf|vMfkd=S-$u2M", 44);
      StrBuilder strBuilder1 = strBuilder0.append((float) 44);
      Reader reader0 = strBuilder0.asReader();
      int int1 = 3;
      StrBuilder strBuilder2 = strBuilder0.append(3);
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex(1889);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1889
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid startIndex: ");
      StrBuilder strBuilder1 = strBuilder0.append(1800.12F);
      StrBuilder strBuilder2 = strBuilder0.append((String) null);
      StrBuilder strBuilder3 = strBuilder2.deleteFirst("f_+1{.T@1A.xu");
      char[] charArray0 = new char[5];
      charArray0[0] = '0';
      charArray0[1] = ',';
      charArray0[2] = 'K';
      charArray0[3] = '_';
      charArray0[4] = 'I';
      // Undeclared exception!
      try { 
        strBuilder2.insert(1408, charArray0, (-510), (-510));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1408
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 226;
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(226);
      // Undeclared exception!
      try { 
        strBuilder1.insert(226, (float) 226);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 226
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2);
      StrBuilder strBuilder1 = strBuilder0.replaceAll('y', 'y');
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      char[] charArray0 = new char[5];
      charArray0[0] = 'Z';
      charArray0[1] = '@';
      charArray0[3] = '6';
      charArray0[4] = 'm';
      StrBuilder strBuilder0 = new StrBuilder(611);
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "scYy;J$Y");
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      boolean boolean0 = strBuilder0.contains('m');
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 611, (-1370));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -1370
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("[N");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('w');
      // Undeclared exception!
      try { 
        strBuilder0.substring(32);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(630);
      StrBuilder strBuilder1 = new StrBuilder(1);
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      int int0 = (-837);
      StrBuilder strBuilder0 = new StrBuilder((-837));
      StrBuilder strBuilder1 = strBuilder0.append((long) (-837));
      char[] charArray0 = new char[6];
      charArray0[0] = '4';
      charArray0[1] = '(';
      charArray0[2] = '#';
      charArray0[3] = 'M';
      charArray0[4] = 'f';
      charArray0[5] = '=';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, (-837), (-837));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -837
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      int int0 = 797;
      StrBuilder strBuilder0 = new StrBuilder(797);
      int int1 = strBuilder0.capacity();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[0];
      long long0 = strBuilder_StrBuilderReader0.skip(797);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 797, 0);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      int int0 = strBuilder0.hashCode();
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("");
      int int1 = strBuilder0.indexOf('d', 0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(2, 32, '~');
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrBuilder strBuilder1 = strBuilder0.replace(strMatcher0, "?", 0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      String string0 = "Invalid length: ";
      StrBuilder strBuilder0 = new StrBuilder("Invalid length: ");
      char[] charArray0 = new char[7];
      charArray0[0] = '#';
      charArray0[1] = 'H';
      charArray0[2] = 'n';
      charArray0[3] = 'W';
      charArray0[4] = 'p';
      charArray0[5] = '>';
      charArray0[6] = '`';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, (-2686), (-2686));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -2686
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = new StrBuilder("");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[3];
      charArray0[0] = '5';
      charArray0[1] = 'X';
      charArray0[2] = '!';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, (-920), (-920));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -920
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[7];
      charArray0[0] = '$';
      charArray0[1] = 'w';
      charArray0[2] = '=';
      charArray0[3] = 'P';
      charArray0[4] = 'v';
      charArray0[5] = 'E';
      charArray0[6] = 'Y';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.deleteAll((StrMatcher) strMatcher_CharSetMatcher0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.replaceAll("t<O/", (String) null);
      int int0 = strBuilder0.size();
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("&,b6[fvQ=yMc");
      int int0 = strBuilder0.lastIndexOf("&,b6[fvQ=yMc", 5);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("7kK");
      int int0 = 0;
      char char0 = '8';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(0, 0, '8');
      StrBuilder strBuilder2 = strBuilder1.appendNewLine();
      StrBuilder strBuilder3 = strBuilder0.trim();
      StrBuilder strBuilder4 = strBuilder3.append((-110.4F));
      StrBuilder strBuilder5 = strBuilder1.appendNewLine();
      StrBuilder strBuilder6 = strBuilder2.minimizeCapacity();
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder7 = strBuilder5.deleteAll((StrMatcher) strMatcher_TrimMatcher0);
      StrBuilder strBuilder8 = strBuilder7.append(strBuilder5);
      StrBuilder strBuilder9 = strBuilder2.insert(0, (Object) strBuilder3);
      StrBuilder strBuilder10 = strBuilder0.deleteAll((StrMatcher) strMatcher_TrimMatcher0);
      String string0 = "startIndex must be valid";
      // Undeclared exception!
      try { 
        strBuilder10.replace(0, (-816), ")8R*d7h&0");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrBuilder strBuilder1 = new StrBuilder("path.separator");
      StrBuilder strBuilder2 = strBuilder0.deleteAll("path.separator");
      StrBuilder strBuilder3 = strBuilder1.replaceAll((String) null, "path.separator");
      int int0 = strBuilder3.indexOf((StrMatcher) null);
      StrBuilder strBuilder4 = strBuilder0.append(strBuilder1, 1, 0);
      int int1 = 882;
      int int2 = 0;
      char[] charArray0 = new char[9];
      charArray0[0] = 'n';
      charArray0[1] = '[';
      charArray0[2] = 'T';
      charArray0[3] = 'm';
      charArray0[4] = '0';
      charArray0[5] = 'G';
      charArray0[6] = 's';
      charArray0[7] = 'n';
      charArray0[8] = 'h';
      // Undeclared exception!
      try { 
        strBuilder2.insert(32, charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      String string0 = "~4?Cy]/gkQ3(561v1";
      StrBuilder strBuilder0 = new StrBuilder("~4?Cy]/gkQ3(561v1");
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst((StrMatcher) strMatcher_TrimMatcher0);
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder2 = strBuilder1.append(stringBuffer0);
      Iterator<String> iterator0 = null;
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators((Iterator) null, "~4?Cy]/gkQ3(561v1");
      String string1 = "";
      int int0 = strBuilder0.indexOf("", (-2390));
      int int1 = 57;
      // Undeclared exception!
      try { 
        strBuilder0.replace(57, 32, "~4?Cy]/gkQ3(561v1");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      Writer writer0 = strBuilder_StrBuilderWriter0.append('t');
      CharBuffer charBuffer0 = CharBuffer.allocate(115);
      Writer writer1 = strBuilder_StrBuilderWriter0.append((CharSequence) charBuffer0, 0, 0);
      strBuilder_StrBuilderWriter0.write("");
      StrBuilder strBuilder1 = new StrBuilder("");
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1, 0, 0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1920);
      Object object0 = new Object();
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      char char0 = ':';
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight(object0, 1920, ':');
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("6RC4#+#is`6OO!dI8");
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("");
      char[] charArray0 = new char[1];
      charArray0[0] = '.';
      int int0 = strMatcher0.isMatch(charArray0, 34, 34, (-1468));
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      int int1 = strBuilder0.lastIndexOf(strMatcher0, 0);
      Writer writer0 = strBuilder0.asWriter();
      int int2 = strBuilder0.size();
      StrBuilder strBuilder1 = strBuilder0.insert(17, charArray0);
      StrBuilder strBuilder2 = strBuilder1.appendPadding((-500), '.');
      StrBuilder strBuilder3 = strBuilder0.insert(0, (Object) "");
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0, (-2959));
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((-943), (-1), 'j');
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Object object0 = linkedList0.clone();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, ":=7");
      StrBuilder strBuilder2 = strBuilder1.appendNull();
      StrBuilder strBuilder3 = strBuilder0.minimizeCapacity();
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('q');
      int int0 = strBuilder3.lastIndexOf((StrMatcher) strMatcher_CharMatcher0, 1216);
      StrBuilder strBuilder4 = strBuilder3.append('^');
      String string0 = "C1Qe";
      StrBuilder strBuilder5 = strBuilder0.setNewLineText("C1Qe");
      int int1 = 31;
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(31);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 31
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.lastIndexOf('k');
      StrBuilder strBuilder1 = strBuilder0.setNullText("");
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight((Object) strBuilder0, (-1), 'k');
      int int1 = (-1);
      int int2 = strBuilder1.indexOf("", (-1));
      String string0 = "-hB";
      // Undeclared exception!
      try { 
        strBuilder2.insert((-1), false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1473);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.toString();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "StrTokenizer[not tokenized yet]");
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder2 = strBuilder0.setLength(3524);
      int int0 = strBuilder1.lastIndexOf('.');
      int int1 = strBuilder0.length();
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("set() is unsupported");
      StrBuilder strBuilder1 = strBuilder0.replaceAll("", "");
      StrBuilder strBuilder2 = strBuilder1.minimizeCapacity();
      // Undeclared exception!
      try { 
        strBuilder1.replace((StrMatcher) null, "", 32, 0, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "");
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder2 = strBuilder0.replaceAll("", "");
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder2);
      String string0 = strBuilder2.getNewLineText();
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = strBuilder0.toCharArray(0, 0);
      boolean boolean0 = strBuilder0.isEmpty();
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.append(0);
      String string0 = "[F0'a5_l1&n\\!^5'";
      StrBuilder strBuilder2 = strBuilder0.insert(0, "[F0'a5_l1&n!^5'");
      String string1 = "";
      int int1 = 0;
      StrBuilder strBuilder3 = strBuilder2.append("", 0, 0);
      // Undeclared exception!
      try { 
        strBuilder3.charAt((-608));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -608
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      int int0 = 0;
      char char0 = 'w';
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight((-5), 0, 'w');
      // Undeclared exception!
      try { 
        strBuilder2.deleteCharAt((-5));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -5
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      String string0 = null;
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      int int0 = (-1708);
      // Undeclared exception!
      try { 
        strBuilder0.substring((-1708));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1708
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrBuilder strBuilder1 = strBuilder0.insert(0, (Object) strBuilder_StrBuilderWriter0);
      strBuilder_StrBuilderWriter0.close();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char char0 = 'h';
      StrBuilder strBuilder2 = strBuilder0.append('h');
      strBuilder_StrBuilderReader0.mark((-2246));
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt((-2957));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2957
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "x`F2onZ\"+";
      // Undeclared exception!
      try { 
        strBuilder0.charAt((-278));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -278
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(1L);
      int int0 = 57;
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(57);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 57
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      int int1 = (-1217);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String[] stringArray0 = strBuilder_StrBuilderTokenizer0.getTokenArray();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(object0, 0, '3');
      StrBuilder strBuilder2 = strBuilder0.deleteAll(']');
      Object object1 = new Object();
      StrBuilder strBuilder3 = strBuilder2.append(object1);
      StrBuilder strBuilder4 = strBuilder3.append((StringBuffer) null, 0, 0);
      // Undeclared exception!
      try { 
        strBuilder3.insert((-1217), "J< FzYIcD0d]lIsCE");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1217
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      int int0 = (-962);
      StrBuilder strBuilder0 = new StrBuilder((-962));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[6];
      char char0 = 'n';
      // Undeclared exception!
      try { 
        strBuilder0.setLength((-962));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -962
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1246));
      int int0 = strBuilder0.lastIndexOf("1.3");
      StrBuilder strBuilder1 = strBuilder0.replaceAll('N', '}');
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("add() is unsupported");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("add() is unsupported", (String) null);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      String string0 = "org.apache.commons.lang.text.StrMatcher$StringMatcher";
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Collection) linkedList0, "org.apache.commons.lang.text.StrMatcher$StringMatcher");
      int int0 = 1;
      // Undeclared exception!
      try { 
        strBuilder1.charAt(1);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.getNullText();
      int int0 = strBuilder0.lastIndexOf((String) null);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.append(102);
      String string0 = strBuilder0.leftString(102);
      // Undeclared exception!
      try { 
        strBuilder0.insert(102, (Object) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 102
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-4310);
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity((-4310));
      // Undeclared exception!
      try { 
        strBuilder1.setLength((-4310));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -4310
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      int int0 = 32;
      StrBuilder strBuilder0 = new StrBuilder(32);
      char[] charArray0 = new char[8];
      charArray0[0] = 'o';
      charArray0[1] = ')';
      charArray0[2] = '`';
      charArray0[3] = '@';
      charArray0[4] = '0';
      charArray0[5] = '6';
      charArray0[6] = '4';
      charArray0[7] = 'C';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(97, 0, charArray0, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[2];
      charArray0[0] = ')';
      charArray0[1] = 'e';
      strBuilder_StrBuilderWriter0.write(charArray0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('q');
      StrBuilder strBuilder2 = strBuilder0.replaceFirst((StrMatcher) strMatcher_CharMatcher0, (String) null);
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("");
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher((String) null);
      int int0 = strBuilder1.indexOf((StrMatcher) strMatcher_CharMatcher0, (-1100));
      StrBuilder strBuilder3 = strBuilder1.append(0.0);
      int int1 = strBuilder0.indexOf('q', 1897);
      StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(2245);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteAll((String) null);
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrBuilder strBuilder2 = strBuilder0.replaceFirst(strMatcher0, "");
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators((Object[]) null, "");
      StrMatcher strMatcher1 = StrMatcher.charMatcher('A');
      StrBuilder strBuilder4 = strBuilder3.append(0.0F);
      boolean boolean0 = strBuilder3.endsWith("");
      StrBuilder strBuilder5 = strBuilder1.setLength(32);
      int int0 = strBuilder3.indexOf('?', 32);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      char char0 = '[';
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher((char[]) null);
      int int0 = strBuilder0.indexOf(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.append('[');
      int int1 = strBuilder1.indexOf(strMatcher0);
      int int2 = strBuilder1.length();
      char char1 = '.';
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1), '.');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      // Undeclared exception!
      try { 
        strBuilder0.insert((-489), false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -489
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      int int0 = (-1);
      StrBuilder strBuilder0 = new StrBuilder((-1));
      int int1 = 102;
      Object[] objectArray0 = new Object[0];
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "");
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex(102);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 102
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
      StrBuilder strBuilder1 = strBuilder0.insert(0, 'B');
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrBuilder strBuilder2 = strBuilder0.deleteAll(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex(48);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 48
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.indexOf('y');
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendPadding((-2838), '<');
      StrBuilder strBuilder2 = strBuilder1.setNewLineText("]S?TL\"AB`J>");
      StrBuilder strBuilder3 = strBuilder0.setNewLineText("0");
      char[] charArray0 = new char[8];
      charArray0[0] = '<';
      charArray0[1] = '<';
      charArray0[2] = '<';
      charArray0[3] = 'Y';
      String string0 = strBuilder0.toString();
      charArray0[4] = '<';
      charArray0[5] = 'd';
      Reader reader0 = strBuilder0.asReader();
      charArray0[6] = '<';
      charArray0[7] = '<';
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance(charArray0);
      StrBuilder strBuilder4 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "length must be valid");
      boolean boolean0 = strBuilder3.equals((Object) strBuilder0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("uk");
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrMatcher strMatcher0 = StrMatcher.charMatcher('x');
      char[] charArray0 = new char[8];
      charArray0[0] = 'x';
      charArray0[1] = 'x';
      charArray0[2] = 'x';
      charArray0[3] = 'a';
      charArray0[4] = 'x';
      charArray0[5] = 'x';
      charArray0[6] = 'x';
      charArray0[7] = 'x';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("-YcZ", "uk");
      StrMatcher strMatcher2 = StrMatcher.charMatcher('s');
      StrBuilder strBuilder2 = strBuilder0.replaceFirst((StrMatcher) strMatcher_NoMatcher0, "ED*v$-=\"bUl1]pq1I");
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-21);
      String string0 = strBuilder0.leftString((-21));
      char[] charArray0 = new char[7];
      charArray0[0] = '{';
      char char0 = 'r';
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1194), (Object) "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1194
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      int int0 = (-2223);
      StrBuilder strBuilder0 = new StrBuilder((-2223));
      int int1 = (-823);
      int int2 = 0;
      char[] charArray0 = new char[4];
      charArray0[0] = '#';
      charArray0[1] = '&';
      charArray0[2] = 'e';
      charArray0[3] = 'K';
      // Undeclared exception!
      try { 
        strBuilder0.insert((-2223), charArray0, 116, 116);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2223
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2122));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[6];
      strBuilder_StrBuilderReader0.mark((-2122));
      charArray0[0] = '2';
      charArray0[1] = ' ';
      charArray0[2] = 'y';
      charArray0[3] = 'j';
      charArray0[4] = '<';
      charArray0[5] = '_';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0);
      strBuilder_StrBuilderReader0.close();
      strBuilder0.size = (-2122);
      // Undeclared exception!
      try { 
        strBuilder0.append((Object) strBuilder_StrBuilderReader0);
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.insert(0, (long) 0);
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      StrBuilder strBuilder2 = strBuilder1.replaceAll(strMatcher0, "HP-UX");
      // Undeclared exception!
      try { 
        strBuilder1.appendFixedWidthPadRight(0, 34, 'J');
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setNullText((String) null);
      String string0 = strBuilder0.leftString((-2965));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft(1124, 0, 'M');
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(false);
      StrBuilder strBuilder2 = strBuilder1.replaceAll("b2)cg}#f6I.:z\"o@", "g[");
      StrBuilder strBuilder3 = strBuilder0.append(false);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(81);
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("0O%Lryl^v2Jd+g 4 Py", "0O%Lryl^v2Jd+g 4 Py");
      StrBuilder strBuilder2 = strBuilder1.deleteAll("line.separator");
      String string0 = strBuilder0.getNewLineText();
      StrBuilder strBuilder3 = strBuilder0.trim();
      // Undeclared exception!
      try { 
        strBuilder3.toCharArray(81, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.charAt(44);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 44
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("1.4");
      char[] charArray0 = new char[2];
      StrBuilder strBuilder1 = strBuilder0.deleteAll('O');
      charArray0[0] = 'O';
      charArray0[1] = '.';
      // Undeclared exception!
      try { 
        strBuilder0.insert(17, charArray0, 34, 17);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 17
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("n^>[1'Z}^qa");
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.insert(0, (long) 0);
      StrBuilder strBuilder2 = new StrBuilder(0);
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder2);
      StrBuilder strBuilder4 = strBuilder0.append(strBuilder3);
      StrMatcher strMatcher0 = StrMatcher.charMatcher('(');
      StrBuilder strBuilder5 = strBuilder0.append((long) 644);
      Writer writer0 = strBuilder5.asWriter();
      boolean boolean0 = strBuilder2.contains(strMatcher0);
      String string0 = strBuilder3.midString(116, 644);
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "n^>[1'Z}^qa");
      StrBuilder strBuilder6 = strBuilder2.append(stringBuffer0);
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("=|yu}Ceu`{3");
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher("");
      StrMatcher strMatcher3 = StrMatcher.stringMatcher("n^>[1'Z}^qa");
      boolean boolean1 = strBuilder3.contains(strMatcher1);
      char[] charArray0 = new char[7];
      charArray0[0] = '(';
      charArray0[1] = '(';
      charArray0[2] = '(';
      charArray0[3] = '(';
      charArray0[4] = '(';
      charArray0[5] = '(';
      charArray0[6] = '(';
      char[] charArray1 = strBuilder2.getChars(charArray0);
      String string1 = strBuilder2.toString();
      StrBuilder strBuilder7 = strBuilder4.appendNull();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("n^>[1'Z}^qa", 0, 644);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.insert(0, false);
      StrBuilder strBuilder2 = strBuilder0.append("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter", 0, 0);
      int int0 = strBuilder0.length();
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder1;
      objectArray0[2] = (Object) "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter";
      objectArray0[3] = (Object) strBuilder1;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      objectArray0[4] = object0;
      objectArray0[5] = (Object) strBuilder0;
      Object object1 = strBuilder_StrBuilderTokenizer0.clone();
      objectArray0[6] = object1;
      StrBuilder strBuilder3 = strBuilder0.appendWithSeparators(objectArray0, "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      String string0 = strBuilder0.substring(0);
      StrBuilder strBuilder4 = strBuilder0.insert(0, "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      StrBuilder strBuilder5 = strBuilder0.reverse();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      int int1 = strBuilder5.lastIndexOf(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = null;
      strBuilder_StrBuilderWriter0.write((char[]) null);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      int int0 = (-1631);
      // Undeclared exception!
      try { 
        CharBuffer.wrap((CharSequence) "", (-1631), (-1631));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = strBuilder0.getNullText();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder0.size = 0;
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      strBuilder_StrBuilderReader0.mark(0);
      Writer writer0 = strBuilder0.asWriter();
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      int int0 = (-4890);
      StrBuilder strBuilder0 = new StrBuilder((-4890));
      String string0 = "BP@";
      int int1 = (-528);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-4890), 824.39961);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -4890
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[4];
      charArray0[0] = '-';
      charArray0[1] = 'O';
      charArray0[2] = '/';
      charArray0[3] = '/';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_CharSetMatcher0);
      StrBuilder strBuilder1 = strBuilder0.append(0.0);
      Object object0 = new Object();
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight(object0, 1, 'O');
      // Undeclared exception!
      try { 
        strBuilder0.insert(555, 994.92);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 555
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("lJbbq");
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "tsK&2y");
      StrBuilder strBuilder2 = strBuilder0.deleteAll('>');
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder3 = strBuilder1.appendWithSeparators((Collection) linkedList0, "lJbbq");
      StrBuilder strBuilder4 = strBuilder3.insert(0, 1379.28F);
      char[] charArray0 = new char[5];
      charArray0[0] = '>';
      charArray0[1] = '>';
      charArray0[2] = 'U';
      charArray0[3] = '>';
      charArray0[4] = '>';
      StrBuilder strBuilder5 = strBuilder4.append(charArray0);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = 57;
      // Undeclared exception!
      try { 
        strBuilder0.insert(57, 57);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 57
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      String string0 = "}6>7\\apVho8/*(,iXdE";
      StrBuilder strBuilder0 = new StrBuilder("}6>7apVho8/*(,iXdE");
      int int0 = 1864;
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex(1864);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1864
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      int int0 = 116;
      StrBuilder strBuilder0 = new StrBuilder(116);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[3];
      char char0 = 'O';
      charArray0[0] = 'O';
      charArray0[1] = 'W';
      char char1 = 'D';
      charArray0[2] = 'D';
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset(charArray0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "");
      StrTokenizer strTokenizer1 = strBuilder1.asTokenizer();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
      StringBuffer stringBuffer0 = new StringBuffer(116);
      StringBuffer stringBuffer1 = stringBuffer0.append((CharSequence) "");
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 116, 116);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      String string0 = null;
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.insert(0, (long) 0);
      // Undeclared exception!
      try { 
        strBuilder1.appendFixedWidthPadRight(0, 34, 'J');
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("'");
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) null, "'");
      String string0 = strBuilder0.toString();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[1];
      strBuilder_StrBuilderWriter0.write("'");
      strBuilder_StrBuilderWriter0.write(charArray0);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("T");
      String string0 = strBuilder0.toString();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(0);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('P');
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder0;
      int int0 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.insert(57, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 57
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "");
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      int int0 = (-849);
      StrBuilder strBuilder0 = new StrBuilder((-849));
      // Undeclared exception!
      try { 
        strBuilder0.insert((-849), (float) (-849));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -849
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      int int0 = 116;
      StrBuilder strBuilder0 = new StrBuilder(116);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[3];
      charArray0[1] = 'W';
      char char0 = 'D';
      charArray0[2] = 'D';
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset(charArray0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "");
      StrTokenizer strTokenizer1 = strBuilder1.asTokenizer();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
      StringBuffer stringBuffer0 = new StringBuffer(116);
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 116, 116);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.deleteAll("");
      StrBuilder strBuilder2 = strBuilder1.append((float) 0);
      StrBuilder strBuilder3 = strBuilder1.setNewLineText("8:;3E");
      StringBuffer stringBuffer0 = new StringBuffer();
      StringBuffer stringBuffer1 = new StringBuffer(stringBuffer0);
      StrBuilder strBuilder4 = strBuilder3.append(stringBuffer1, 0, 0);
      StrBuilder strBuilder5 = strBuilder4.insert(0, "");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder strBuilder6 = strBuilder5.appendFixedWidthPadLeft(object0, 0, '+');
      // Undeclared exception!
      try { 
        strBuilder3.setCharAt((-1641), '{');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1641
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2617));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[9];
      charArray0[0] = 'y';
      charArray0[1] = 'N';
      charArray0[2] = 'I';
      charArray0[3] = 'A';
      charArray0[4] = '6';
      charArray0[5] = ';';
      charArray0[6] = 'T';
      charArray0[7] = '$';
      charArray0[8] = 'n';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, (-4312), (-4312));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder0;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, (String) null);
      String string0 = strBuilder0.leftString(2538);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "length must be valid");
      int int0 = 0;
      String string0 = strBuilder0.midString(0, 0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      char[] charArray0 = new char[1];
      StrBuilder strBuilder2 = strBuilder0.deleteAll('A');
      charArray0[0] = 'H';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 0, (-2366));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.append((-2124.0F));
      char[] charArray0 = new char[4];
      charArray0[0] = '\'';
      charArray0[1] = 'Z';
      int int0 = strBuilder1.validateRange(0, 441);
      charArray0[2] = 'V';
      char[] charArray1 = strBuilder0.toCharArray(0, 115);
      charArray0[3] = 'j';
      StrBuilder strBuilder2 = strBuilder0.append(charArray0);
      // Undeclared exception!
      try { 
        strBuilder0.delete(115, 115);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) "", 3315, 'g');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      StrBuilder strBuilder2 = strBuilder0.appendPadding((-3139), 'K');
      char[] charArray0 = new char[2];
      charArray0[0] = 'g';
      charArray0[1] = 'g';
      StrBuilder strBuilder3 = strBuilder0.append(charArray0);
      char[] charArray1 = strBuilder3.toCharArray(3315, 3315);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, (-412), (-3139));
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      int int0 = strBuilder1.indexOf(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray((-1), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.previousToken();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder strBuilder1 = strBuilder0.insert(0, object0);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-533));
      StrBuilder strBuilder1 = new StrBuilder("C[aOcmMR");
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, (-533), (-533));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      char char0 = 'U';
      // Undeclared exception!
      try { 
        strBuilder0.append("", 2322, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      int int0 = 5611;
      StrBuilder strBuilder0 = new StrBuilder(5611);
      char char0 = 'Y';
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('Y');
      int int1 = (-2219);
      char[] charArray0 = new char[9];
      charArray0[0] = 'Y';
      charArray0[1] = 'Y';
      charArray0[2] = 'Y';
      charArray0[3] = 'Y';
      charArray0[4] = 'Y';
      StrBuilder strBuilder2 = strBuilder0.deleteFirst('Y');
      StrBuilder strBuilder3 = strBuilder2.append(116.3086);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder4 = strBuilder2.appendWithSeparators((Collection) linkedList0, "w,cr^S@T]uT ");
      StrBuilder strBuilder5 = strBuilder2.ensureCapacity(5611);
      // Undeclared exception!
      try { 
        strBuilder2.setCharAt(1855, '6');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1855
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = new StrBuilder("");
      int int0 = (-920);
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, (-920), (-920));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      // Undeclared exception!
      try { 
        strBuilder0.append("", 2449, 2449);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(1843, '&');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1843
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, 2288, 2288);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.append("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter", (-1), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      int int0 = strBuilder0.capacity();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('b');
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt((-1681), '&');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1681
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("JVHF=X;xH3n`");
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('J');
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      int int0 = 3509;
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder0.insert(3509, (long) 3509);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3509
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.substring((-241), (-1797));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -241
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      String string0 = null;
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StringBuffer stringBuffer0 = new StringBuffer("%<b.");
      StringBuffer stringBuffer1 = stringBuffer0.insert(0, (-3688.449F));
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      String string1 = strBuilder1.substring(0, 0);
      StrBuilder strBuilder2 = strBuilder1.append((-2074.58F));
      // Undeclared exception!
      try { 
        strBuilder1.validateRange((-252), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -252
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      int int0 = 5;
      StrBuilder strBuilder0 = new StrBuilder(5);
      // Undeclared exception!
      try { 
        strBuilder0.insert(5, (long) 5);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 5
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "scYy;J$Y");
      char[] charArray0 = new char[5];
      charArray0[0] = 'Z';
      charArray0[1] = '@';
      charArray0[2] = '3';
      charArray0[3] = '6';
      charArray0[4] = 'm';
      char[] charArray1 = strBuilder1.getChars(charArray0);
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2078);
      // Undeclared exception!
      try { 
        strBuilder0.replace(2078, 3260, "java.util.prefs.PreferencesFactory");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "{q0/7zhk+TC9%8+Q`");
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("pn%0;N*?KKTc85P'D");
      StrMatcher strMatcher2 = StrMatcher.charMatcher('m');
      StrMatcher strMatcher3 = StrMatcher.stringMatcher("lA");
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.append(0.0F);
      // Undeclared exception!
      try { 
        strBuilder1.validateRange((-450), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -450
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("=kc]M~d?I$W");
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder strBuilder1 = strBuilder0.append((-597L));
      StrBuilder strBuilder2 = strBuilder0.append((-597L));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      boolean boolean0 = strBuilder_StrBuilderTokenizer0.hasNext();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setQuoteChar('-');
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      int int0 = strBuilder1.lastIndexOf(strMatcher0, 2707);
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.midString(1646, 116);
      int int0 = strBuilder0.indexOf("H?");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      int int1 = strBuilder0.lastIndexOf(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder0.substring(0, 0);
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(0L);
      int int0 = strBuilder0.lastIndexOf('m', 1226);
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("os.version");
      StrBuilder strBuilder1 = strBuilder0.append('_');
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.append((double) 0);
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("9q]_8u\"Ll_cZ`");
      int int0 = strBuilder0.indexOf((StrMatcher) strMatcher_NoMatcher0);
      int int1 = strBuilder0.capacity();
      int int2 = strBuilder0.size();
      StrBuilder strBuilder2 = strBuilder0.clear();
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-3680));
      // Undeclared exception!
      try { 
        strBuilder0.insert((-3680), (-2166L));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3680
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoreEmptyTokens(false);
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      char[] charArray0 = new char[1];
      charArray0[0] = 'o';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      char[] charArray1 = new char[2];
      charArray1[0] = '\\';
      charArray1[1] = 't';
      strBuilder0.buffer = charArray1;
      boolean boolean1 = strBuilder0.equals((Object) "LYB:=X|{B$EBiS'cE");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('I', 't');
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.equals((Object) "G;8kVfQ6");
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = null;
      strBuilder0.size = 0;
      StrMatcher strMatcher0 = StrMatcher.stringMatcher((String) null);
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      // Undeclared exception!
      try { 
        linkedList0.subList(1783, 0);
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(1783) > toIndex(0)
         //
         verifyException("java.util.SubList", e);
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('o', '?');
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(5);
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      char[] charArray0 = new char[9];
      charArray0[0] = '8';
      charArray0[1] = 'p';
      charArray0[2] = '0';
      charArray0[3] = '3';
      charArray0[4] = '`';
      charArray0[5] = '(';
      charArray0[6] = '\'';
      charArray0[7] = 'A';
      charArray0[8] = 'x';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 5, 5);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 5
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      String string0 = null;
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[2];
      charArray0[0] = '4';
      charArray0[1] = 'M';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 2, 511);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 511
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(":R;\"#-n).V");
      char[] charArray0 = new char[4];
      charArray0[0] = 'e';
      charArray0[1] = 'o';
      charArray0[2] = ',';
      charArray0[3] = 'N';
      char[] charArray1 = strBuilder0.getChars(charArray0);
      StrBuilder strBuilder1 = strBuilder0.append((Object) "end < start");
      StrBuilder strBuilder2 = strBuilder0.replaceAll((StrMatcher) null, "end < start");
      Reader reader0 = strBuilder2.asReader();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, (String) null);
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(")*Z\"OB.O@;P,");
      StrBuilder strBuilder1 = strBuilder0.append((Object) ")*Z\"OB.O@;P,");
      char char0 = strBuilder0.charAt(0);
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("a,'a7 U%");
      char[] charArray0 = new char[1];
      charArray0[0] = ']';
      char[] charArray1 = strBuilder0.getChars(charArray0);
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-901);
      StrBuilder strBuilder1 = new StrBuilder((-901));
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((Object) strBuilder1, (-901), '6');
      String string0 = "";
      StrBuilder strBuilder3 = strBuilder1.setNullText("");
      boolean boolean0 = strBuilder3.isEmpty();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[1];
      charArray0[0] = '6';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 0, (-1363));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: -1363
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[2];
      charArray0[0] = 't';
      charArray0[1] = 'U';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0, 0, 0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Z4M_g[/");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 1137, 1137);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 1137
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight(5, (-290), 'O');
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadLeft(1, (-290), 'i');
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('@');
      StrBuilder strBuilder4 = strBuilder2.deleteAll((StrMatcher) strMatcher_CharMatcher0);
      int int0 = strBuilder2.lastIndexOf('{');
      int int1 = strBuilder0.lastIndexOf("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      int int2 = strBuilder4.indexOf('&');
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("os.version");
      StrBuilder strBuilder1 = strBuilder0.append(3967L);
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("O");
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((Object) "O", 32, 'I');
      StrBuilder strBuilder3 = strBuilder2.setLength(32);
      StrBuilder strBuilder4 = strBuilder3.insert(16, (Object) "");
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher("");
      int int0 = strBuilder0.indexOf(strMatcher0, (-974));
      StrBuilder strBuilder5 = strBuilder0.deleteAll('I');
      boolean boolean0 = strBuilder0.startsWith("%KTE./hhB5U:");
      // Undeclared exception!
      try { 
        strBuilder0.insert(64, 3967L);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 64
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrBuilder strBuilder2 = strBuilder1.insert(0, (float) 0);
      StrBuilder strBuilder3 = strBuilder0.setNewLineText("k47thp-KQV;\"~vW");
      StrBuilder strBuilder4 = strBuilder0.trim();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("RkWu)@^");
      StrBuilder strBuilder5 = strBuilder4.deleteAll(strMatcher0);
      char[] charArray0 = new char[6];
      Writer writer0 = strBuilder3.asWriter();
      StrBuilder strBuilder6 = strBuilder3.append(true);
      charArray0[0] = 'P';
      charArray0[1] = '?';
      charArray0[2] = '\'';
      charArray0[3] = 'N';
      charArray0[4] = 'h';
      charArray0[5] = 'g';
      StrBuilder strBuilder7 = strBuilder3.append(charArray0, 0, 0);
      StrBuilder strBuilder8 = strBuilder5.append("h3aoq");
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      String string0 = "startIndex must be valid";
      StrBuilder strBuilder0 = new StrBuilder("startIndex must be valid");
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      char[] charArray0 = new char[3];
      charArray0[0] = 'N';
      StrBuilder strBuilder2 = strBuilder0.replaceAll("^t;dcC~rDcnco\"ziI", "startIndex must be valid");
      charArray0[1] = 'H';
      int int0 = 2604;
      // Undeclared exception!
      try { 
        strBuilder2.appendFixedWidthPadRight(2604, 2604, 'k');
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 56
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("7kK");
      int int0 = 0;
      char char0 = '8';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(0, 0, '8');
      StrBuilder strBuilder2 = strBuilder1.appendNewLine();
      StrBuilder strBuilder3 = strBuilder0.trim();
      StrBuilder strBuilder4 = strBuilder3.append((-110.4F));
      StrBuilder strBuilder5 = strBuilder1.appendNewLine();
      StrBuilder strBuilder6 = strBuilder2.minimizeCapacity();
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder7 = strBuilder5.deleteAll((StrMatcher) strMatcher_TrimMatcher0);
      StringBuffer stringBuffer0 = new StringBuffer("N$S");
      // Undeclared exception!
      try { 
        strBuilder7.append(stringBuffer0, 0, 2846);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.deleteAll((String) null);
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      char[] charArray0 = new char[9];
      charArray0[1] = '+';
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      charArray0[3] = 'o';
      charArray0[4] = '|';
      charArray0[5] = 'X';
      charArray0[6] = '?';
      charArray0[7] = 'P';
      charArray0[8] = '6';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder2 = strBuilder1.replaceFirst(strMatcher0, (String) null);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.previousToken();
      StrTokenizer strTokenizer1 = StrTokenizer.getCSVInstance((String) null);
      String string1 = strBuilder_StrBuilderTokenizer0.nextToken();
      String string2 = strBuilder_StrBuilderTokenizer0.getContent();
      // Undeclared exception!
      try { 
        strBuilder1.validateIndex(897);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 897
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(48);
      StrBuilder strBuilder1 = strBuilder0.appendPadding(48, '\"');
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      boolean boolean0 = linkedList0.addAll(0, (Collection<?>) linkedList1);
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Collection) linkedList0, "%u` ");
      int int0 = strBuilder0.lastIndexOf("(jESJe^% G=E0");
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("%u` ");
      boolean boolean1 = strBuilder2.contains(strMatcher0);
      StrBuilder strBuilder3 = strBuilder0.deleteFirst("(jESJe^% G=E0");
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "(jESJe^% G=E0");
      char[] charArray0 = new char[3];
      charArray0[0] = '\"';
      charArray0[1] = '\"';
      charArray0[2] = 'V';
      // Undeclared exception!
      try { 
        strBuilder3.append(charArray0, 59, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(102);
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("");
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      String string0 = strBuilder0.rightString(3191);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[5];
      charArray0[0] = 'C';
      charArray0[1] = 'B';
      charArray0[2] = '(';
      charArray0[3] = '=';
      charArray0[4] = 'X';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0);
      int int1 = strBuilder_StrBuilderReader0.read();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
  }
}
