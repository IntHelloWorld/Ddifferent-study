* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.math3.optimization.linear.SimplexTableau
* Starting client
* Connecting to master process on port 12015
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/patch1-Math-33-SOFix/Math_33_1_sofix/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math3.optimization.linear.SimplexTableau
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 189
  - Branch 154
  - Exception 0
  - MutationFactory 545
  - Output 72
  - Method 27
  - MethodNoException 27
  - CBranchFitnessFactory 154
* Using seed 1585468403948
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%][Progress:====>                         15%] [Cov:===>                               9%][Progress:====>                         15%] [Cov:=====>                             17%][Progress:====>                         15%] [Cov:==========>                        29%][Progress:====>                         16%] [Cov:==============>                    40%][Progress:====>                         16%] [Cov:===============>                   44%][Progress:====>                         16%] [Cov:================>                  47%][Progress:====>                         16%] [Cov:==================>                52%][Progress:=====>                        18%] [Cov:==========>                        29%][Progress:=====>                        18%] [Cov:==========>                        30%][Progress:=====>                        18%] [Cov:===========>                       34%][Progress:=====>                        18%] [Cov:=============>                     38%][Progress:=====>                        18%] [Cov:==============>                    40%][Progress:======>                       20%] [Cov:==============>                    40%][Progress:======>                       20%] [Cov:==============>                    42%][Progress:======>                       20%] [Cov:================>                  46%][Progress:=======>                      26%] [Cov:=>                                 4%][Progress:=======>                      26%] [Cov:==>                                8%][Progress:=======>                      26%] [Cov:=======>                           20%][Progress:=======>                      26%] [Cov:========>                          24%][Progress:=======>                      26%] [Cov:==========>                        29%][Progress:=======>                      26%] [Cov:===========>                       33%][Progress:=======>                      26%] [Cov:===========>                       34%][Progress:=======>                      26%] [Cov:=============>                     38%][Progress:=======>                      26%] [Cov:==============>                    42%][Progress:=======>                      26%] [Cov:===============>                   44%][Progress:========>                     28%] [Cov:=======>                           20%][Progress:========>                     28%] [Cov:========>                          23%][Progress:========>                     28%] [Cov:========>                          24%][Progress:========>                     28%] [Cov:========>                          25%][Progress:========>                     28%] [Cov:=========>                         27%][Progress:========>                     28%] [Cov:===========>                       33%][Progress:========>                     28%] [Cov:=============>                     39%][Progress:========>                     28%] [Cov:==============>                    40%][Progress:=========>                    30%] [Cov:=>                                 4%][Progress:=========>                    30%] [Cov:==>                                7%][Progress:=========>                    30%] [Cov:======>                            19%][Progress:=========>                    30%] [Cov:========>                          23%][Progress:=========>                    30%] [Cov:========>                          24%][Progress:=========>                    30%] [Cov:=========>                         27%][Progress:=========>                    30%] [Cov:==========>                        30%][Progress:=========>                    30%] [Cov:==========>                        31%][Progress:=========>                    31%] [Cov:==>                                6%][Progress:=========>                    31%] [Cov:===>                               10%][Progress:=========>                    31%] [Cov:========>                          23%][Progress:=========>                    31%] [Cov:==========>                        29%][Progress:=========>                    31%] [Cov:==========>                        30%][Progress:=========>                    31%] [Cov:===========>                       34%][Progress:=========>                    31%] [Cov:=============>                     38%][Progress:=========>                    31%] [Cov:==============>                    40%][Progress:=========>                    31%] [Cov:==============>                    41%][Progress:=========>                    33%] [Cov:==========>                        30%][Progress:=========>                    33%] [Cov:==========>                        31%][Progress:=========>                    33%] [Cov:===========>                       33%][Progress:=========>                    33%] [Cov:============>                      35%][Progress:=========>                    33%] [Cov:============>                      37%][Progress:=========>                    33%] [Cov:==============>                    40%][Progress:=========>                    33%] [Cov:==============>                    42%][Progress:=========>                    33%] [Cov:=================>                 50%][Progress:=========>                    33%] [Cov:====================>              58%][Progress:=========>                    33%] [Cov:======================>            63%][Progress:==========>                   35%] [Cov:=>                                 4%][Progress:==========>                   35%] [Cov:==>                                6%][Progress:==========>                   35%] [Cov:======>                            19%][Progress:==========>                   35%] [Cov:=======>                           22%][Progress:==========>                   35%] [Cov:========>                          23%][Progress:==========>                   35%] [Cov:========>                          24%][Progress:==========>                   35%] [Cov:========>                          25%][Progress:==========>                   35%] [Cov:=========>                         26%][Progress:==========>                   35%] [Cov:=========>                         28%][Progress:==========>                   35%] [Cov:==========>                        29%][Progress:==========>                   35%] [Cov:==========>                        31%][Progress:==========>                   35%] [Cov:===========>                       34%][Progress:==========>                   35%] [Cov:============>                      35%][Progress:==========>                   36%] [Cov:=>                                 3%][Progress:==========>                   36%] [Cov:=>                                 5%][Progress:==========>                   36%] [Cov:======>                            18%][Progress:==========>                   36%] [Cov:=======>                           20%][Progress:==========>                   36%] [Cov:=======>                           21%][Progress:==========>                   36%] [Cov:=======>                           22%][Progress:==========>                   36%] [Cov:========>                          23%][Progress:==========>                   36%] [Cov:=========>                         26%][Progress:==========>                   36%] [Cov:=========>                         28%][Progress:==========>                   36%] [Cov:==========>                        29%][Progress:==========>                   36%] [Cov:==========>                        30%][Progress:==========>                   36%] [Cov:==========>                        31%][Progress:==========>                   36%] [Cov:======================>            63%][Progress:===========>                  38%] [Cov:================>                  46%][Progress:===========>                  38%] [Cov:====================>              59%][Progress:============>                 40%] [Cov:============>                      36%][Progress:============>                 40%] [Cov:============>                      37%][Progress:============>                 40%] [Cov:====================>              59%][Progress:============>                 40%] [Cov:======================>            63%][Progress:============>                 41%] [Cov:==============>                    42%][Progress:============>                 41%] [Cov:====================>              58%][Progress:============>                 41%] [Cov:=====================>             61%][Progress:============>                 41%] [Cov:=======================>           66%][Progress:============>                 41%] [Cov:========================>          69%][Progress:============>                 43%] [Cov:============>                      37%][Progress:============>                 43%] [Cov:===============>                   44%][Progress:=============>                45%] [Cov:===============>                   43%][Progress:=============>                45%] [Cov:=================>                 49%][Progress:=============>                45%] [Cov:==================>                53%][Progress:=============>                46%] [Cov:=============================>     83%][Progress:==============>               48%] [Cov:===========================>       79%][Progress:==============>               48%] [Cov:============================>      80%][Progress:==============>               48%] [Cov:=============================>     83%][Progress:===============>              50%] [Cov:=============================>     83%][Progress:===============>              51%] [Cov:=============================>     83%][Progress:===============>              53%] [Cov:============================>      80%][Progress:===============>              53%] [Cov:=============================>     83%][Progress:===============>              53%] [Cov:=============================>     83%][Progress:================>             55%] [Cov:============================>      80%][Progress:================>             55%] [Cov:=============================>     83%][Progress:================>             56%] [Cov:=============================>     83%][Progress:=================>            58%] [Cov:===========================>       79%][Progress:=================>            58%] [Cov:============================>      80%][Progress:=================>            58%] [Cov:============================>      81%][Progress:==================>           60%] [Cov:=============================>     83%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:=============================>     83%][Progress:==================>           61%] [Cov:=============================>     83%][Progress:==================>           63%] [Cov:=============================>     83%][Progress:===================>          65%] [Cov:=============================>     83%][Progress:===================>          66%] [Cov:=============================>     83%][Progress:====================>         68%] [Cov:=============================>     83%][Progress:=====================>        70%] [Cov:=============================>     83%][Progress:=====================>        71%] [Cov:=============================>     83%][Progress:=====================>        73%] [Cov:============================>      81%][Progress:=====================>        73%] [Cov:=============================>     83%][Progress:=====================>        73%] [Cov:=============================>     83%][Progress:======================>       75%] [Cov:=============================>     83%][Progress:======================>       75%] [Cov:=============================>     84%][Progress:======================>       76%] [Cov:=============================>     83%][Progress:======================>       76%] [Cov:=============================>     84%][Progress:=======================>      78%] [Cov:=============================>     84%][Progress:========================>     80%] [Cov:=============================>     83%][Progress:========================>     80%] [Cov:=============================>     84%][Progress:========================>     81%] [Cov:=============================>     84%][Progress:========================>     83%] [Cov:=============================>     83%][Progress:========================>     83%] [Cov:=============================>     84%][Progress:=========================>    85%] [Cov:=============================>     85%][Progress:==========================>   88%] [Cov:=============================>     85%][Progress:==========================>   88%] [Cov:==============================>    86%][Progress:===========================>  90%] [Cov:=============================>     83%][Progress:===========================>  90%] [Cov:=============================>     84%][Progress:===========================>  91%] [Cov:==============================>    87%][Progress:===========================>  93%] [Cov:==============================>    86%][Progress:===========================>  93%] [Cov:==============================>    87%][Progress:============================> 95%] [Cov:==============================>    86%][Progress:============================> 95%] [Cov:==============================>    87%][Progress:============================> 96%] [Cov:==============================>    87%][Progress:=============================>98%] [Cov:==============================>    86%][Progress:=============================>98%] [Cov:==============================>    87%][Progress:==============================100%] [Cov:==============================>    87%][Progress:==============================100%] [Cov:==============================>    87%][Progress:==============================100%] [Cov:==============================>    87%][Progress:==============================100%] [Cov:==============================>    88%]
* Search finished after 62s and 16 generations, 14304 statements, best individual has fitness: 139.665233785822
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 93%
* Total number of goals: 189
* Number of covered goals: 175
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 86%
* Total number of goals: 154
* Number of covered goals: 133
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 16
* Number of covered goals: 16
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 92%
* Total number of goals: 545
* Number of covered goals: 500
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 49%
* Total number of goals: 72
* Number of covered goals: 35
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 27
* Number of covered goals: 27
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 27
* Number of covered goals: 27
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 86%
* Total number of goals: 154
* Number of covered goals: 133
* Generated 60 tests with total length 407
* Resulting test suite's coverage: 88% (average coverage for all fitness functions)
* Compiling and checking tests
* Writing JUnit test case 'SimplexTableau_ESTest' to evosuite-tests
* Done!

* Computation finished
