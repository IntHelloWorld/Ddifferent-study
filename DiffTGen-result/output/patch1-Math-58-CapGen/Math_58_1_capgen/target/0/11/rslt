* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.math.optimization.fitting.GaussianFitter
* Starting client
* Connecting to master process on port 2262
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/patch1-Math-58-CapGen/Math_58_1_capgen/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math.optimization.fitting.GaussianFitter
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 92
  - Branch 67
  - Exception 0
  - MutationFactory 402
  - Output 6
  - Method 5
  - MethodNoException 5
  - CBranchFitnessFactory 67
[Progress:>                             0%] [Cov:>                                  0%]* Using seed 1585456289971
* Starting evolution
[Progress:====>                         16%] [Cov:==>                                7%][Progress:====>                         16%] [Cov:====>                              13%][Progress:====>                         16%] [Cov:=========>                         26%][Progress:====>                         16%] [Cov:============>                      35%][Progress:====>                         16%] [Cov:==============>                    42%][Progress:====>                         16%] [Cov:================>                  48%][Progress:====>                         16%] [Cov:==================>                53%][Progress:====>                         16%] [Cov:==================>                54%][Progress:=====>                        18%] [Cov:>                                  1%][Progress:=====>                        18%] [Cov:>                                  2%][Progress:=====>                        18%] [Cov:====>                              14%][Progress:=====>                        18%] [Cov:=======>                           20%][Progress:=====>                        18%] [Cov:=======>                           22%][Progress:=====>                        18%] [Cov:========>                          23%][Progress:=====>                        18%] [Cov:==========>                        31%][Progress:=====>                        18%] [Cov:===============>                   45%][Progress:=====>                        18%] [Cov:==================>                54%][Progress:=====>                        18%] [Cov:=====================>             60%][Progress:=====>                        18%] [Cov:=======================>           68%][Progress:======>                       20%] [Cov:==>                                7%][Progress:======>                       20%] [Cov:====>                              14%][Progress:======>                       20%] [Cov:=========>                         26%][Progress:======>                       20%] [Cov:============>                      36%][Progress:======>                       20%] [Cov:==============>                    40%][Progress:======>                       20%] [Cov:===============>                   45%][Progress:======>                       20%] [Cov:=================>                 50%][Progress:======>                       20%] [Cov:=================>                 51%][Progress:======>                       21%] [Cov:==>                                7%][Progress:======>                       21%] [Cov:====>                              14%][Progress:======>                       21%] [Cov:=========>                         27%][Progress:======>                       21%] [Cov:============>                      37%][Progress:======>                       21%] [Cov:===============>                   45%][Progress:======>                       21%] [Cov:==================>                52%][Progress:======>                       21%] [Cov:===================>               57%][Progress:======>                       23%] [Cov:>                                  0%][Progress:======>                       23%] [Cov:====>                              12%][Progress:======>                       23%] [Cov:====>                              13%][Progress:======>                       23%] [Cov:=====>                             16%][Progress:======>                       23%] [Cov:=====>                             17%][Progress:======>                       23%] [Cov:=======>                           20%][Progress:======>                       23%] [Cov:=======>                           22%][Progress:======>                       23%] [Cov:========>                          23%][Progress:======>                       23%] [Cov:==========>                        29%][Progress:======>                       23%] [Cov:===========>                       34%][Progress:======>                       23%] [Cov:=============>                     38%][Progress:======>                       23%] [Cov:==============>                    41%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:====>                              14%][Progress:=======>                      25%] [Cov:=========>                         27%][Progress:=======>                      25%] [Cov:============>                      37%][Progress:=======>                      25%] [Cov:================>                  46%][Progress:=======>                      25%] [Cov:==================>                53%][Progress:=======>                      25%] [Cov:====================>              58%][Progress:=======>                      26%] [Cov:==>                                6%][Progress:=======>                      26%] [Cov:====>                              13%][Progress:=======>                      26%] [Cov:========>                          25%][Progress:=======>                      26%] [Cov:===========>                       33%][Progress:=======>                      26%] [Cov:=============>                     38%][Progress:=======>                      26%] [Cov:==============>                    42%][Progress:=======>                      26%] [Cov:================>                  46%][Progress:=======>                      26%] [Cov:=================>                 51%][Progress:=======>                      26%] [Cov:===================>               57%][Progress:========>                     28%] [Cov:==>                                7%][Progress:========>                     28%] [Cov:====>                              14%][Progress:========>                     28%] [Cov:=========>                         27%][Progress:========>                     28%] [Cov:============>                      37%][Progress:========>                     28%] [Cov:================>                  46%][Progress:========>                     28%] [Cov:==================>                53%][Progress:========>                     28%] [Cov:====================>              58%][Progress:========>                     28%] [Cov:=====================>             61%][Progress:========>                     28%] [Cov:======================>            63%][Progress:=========>                    30%] [Cov:===>                               9%][Progress:=========>                    30%] [Cov:=====>                             17%][Progress:=========>                    30%] [Cov:==========>                        30%][Progress:=========>                    30%] [Cov:===============>                   43%][Progress:=========>                    30%] [Cov:==================>                52%][Progress:=========>                    30%] [Cov:====================>              58%][Progress:=========>                    30%] [Cov:======================>            64%][Progress:=========>                    30%] [Cov:=======================>           66%][Progress:=========>                    31%] [Cov:==>                                8%][Progress:=========>                    31%] [Cov:=====>                             15%][Progress:=========>                    31%] [Cov:=========>                         27%][Progress:=========>                    31%] [Cov:=============>                     39%][Progress:=========>                    31%] [Cov:===============>                   43%][Progress:=========>                    31%] [Cov:================>                  47%][Progress:=========>                    31%] [Cov:==================>                52%][Progress:=========>                    33%] [Cov:==>                                8%][Progress:=========>                    33%] [Cov:=====>                             16%][Progress:=========>                    33%] [Cov:=========>                         28%][Progress:=========>                    33%] [Cov:==============>                    41%][Progress:=========>                    33%] [Cov:===============>                   45%][Progress:=========>                    33%] [Cov:=================>                 50%][Progress:=========>                    33%] [Cov:===================>               55%][Progress:=========>                    33%] [Cov:===================>               57%][Progress:=========>                    33%] [Cov:======================>            64%][Progress:==========>                   35%] [Cov:==================>                52%][Progress:==========>                   35%] [Cov:====================>              59%][Progress:==========>                   35%] [Cov:======================>            65%][Progress:==========>                   36%] [Cov:==>                                8%][Progress:==========>                   36%] [Cov:=====>                             15%][Progress:==========>                   36%] [Cov:=========>                         28%][Progress:==========>                   36%] [Cov:=============>                     39%][Progress:==========>                   36%] [Cov:================>                  48%][Progress:==========>                   36%] [Cov:===================>               55%][Progress:==========>                   36%] [Cov:=====================>             60%][Progress:============>                 40%] [Cov:>                                  1%][Progress:============>                 40%] [Cov:====>                              14%][Progress:============>                 40%] [Cov:======>                            18%][Progress:============>                 40%] [Cov:=======>                           22%][Progress:============>                 40%] [Cov:=======================>           68%][Progress:============>                 41%] [Cov:==================>                52%][Progress:============>                 41%] [Cov:==================>                53%][Progress:============>                 41%] [Cov:===================>               57%][Progress:============>                 41%] [Cov:======================>            65%][Progress:============>                 41%] [Cov:=======================>           66%][Progress:============>                 41%] [Cov:=======================>           67%][Progress:============>                 41%] [Cov:=======================>           68%][Progress:============>                 41%] [Cov:=========================>         73%][Progress:============>                 43%] [Cov:==================>                53%][Progress:============>                 43%] [Cov:====================>              58%][Progress:============>                 43%] [Cov:======================>            63%][Progress:============>                 43%] [Cov:=======================>           66%][Progress:============>                 43%] [Cov:=======================>           68%][Progress:=============>                45%] [Cov:=====================>             61%][Progress:=============>                45%] [Cov:=====================>             62%][Progress:=============>                45%] [Cov:=======================>           67%][Progress:=============>                45%] [Cov:==========================>        77%][Progress:=============>                46%] [Cov:=========================>         73%][Progress:=============>                46%] [Cov:=========================>         74%][Progress:=============>                46%] [Cov:==========================>        76%][Progress:=============>                46%] [Cov:==========================>        77%][Progress:==============>               48%] [Cov:==========================>        75%][Progress:==============>               48%] [Cov:==========================>        76%][Progress:==============>               48%] [Cov:==========================>        77%][Progress:===============>              50%] [Cov:==========================>        76%][Progress:===============>              50%] [Cov:==========================>        77%][Progress:===============>              51%] [Cov:===========================>       78%][Progress:===============>              53%] [Cov:===========================>       78%][Progress:================>             55%] [Cov:===========================>       78%][Progress:================>             55%] [Cov:===========================>       78%][Progress:================>             56%] [Cov:===========================>       78%][Progress:=================>            58%] [Cov:==========================>        76%][Progress:=================>            58%] [Cov:===========================>       78%][Progress:=================>            58%] [Cov:===========================>       78%][Progress:==================>           60%] [Cov:===========================>       78%][Progress:==================>           61%] [Cov:==========================>        76%][Progress:==================>           61%] [Cov:===========================>       78%][Progress:==================>           61%] [Cov:===========================>       78%][Progress:==================>           63%] [Cov:===========================>       78%][Progress:==================>           63%] [Cov:===========================>       78%][Progress:===================>          65%] [Cov:===========================>       78%][Progress:===================>          65%] [Cov:===========================>       78%][Progress:===================>          66%] [Cov:===========================>       78%][Progress:===================>          66%] [Cov:===========================>       78%][Progress:===================>          66%] [Cov:===========================>       79%][Progress:====================>         68%] [Cov:===========================>       78%][Progress:====================>         68%] [Cov:===========================>       79%][Progress:====================>         68%] [Cov:===========================>       79%][Progress:=====================>        70%] [Cov:===========================>       78%][Progress:=====================>        70%] [Cov:===========================>       79%][Progress:=====================>        70%] [Cov:===========================>       79%][Progress:=====================>        71%] [Cov:===========================>       78%][Progress:=====================>        71%] [Cov:===========================>       79%][Progress:=====================>        71%] [Cov:===========================>       79%][Progress:=====================>        73%] [Cov:===========================>       78%][Progress:=====================>        73%] [Cov:===========================>       79%][Progress:=====================>        73%] [Cov:===========================>       79%][Progress:======================>       75%] [Cov:===========================>       79%][Progress:======================>       76%] [Cov:===========================>       78%][Progress:======================>       76%] [Cov:===========================>       79%][Progress:=======================>      78%] [Cov:===========================>       79%][Progress:========================>     80%] [Cov:===========================>       79%][Progress:========================>     81%] [Cov:===========================>       79%][Progress:========================>     81%] [Cov:============================>      80%][Progress:========================>     81%] [Cov:============================>      82%][Progress:========================>     83%] [Cov:=============================>     83%][Progress:=========================>    85%] [Cov:=============================>     83%][Progress:=========================>    86%] [Cov:=============================>     83%][Progress:==========================>   88%] [Cov:=============================>     83%][Progress:==========================>   88%] [Cov:=============================>     83%][Progress:===========================>  90%] [Cov:=============================>     83%][Progress:===========================>  91%] [Cov:=============================>     83%][Progress:===========================>  91%] [Cov:=============================>     83%][Progress:===========================>  93%] [Cov:=============================>     83%][Progress:============================> 95%] [Cov:=============================>     83%][Progress:============================> 96%] [Cov:=============================>     83%][Progress:============================> 96%] [Cov:=============================>     83%][Progress:=============================>98%] [Cov:=============================>     83%][Progress:=============================>98%] [Cov:=============================>     83%][Progress:==============================100%] [Cov:=============================>     83%][Progress:==============================100%] [Cov:=============================>     83%][Progress:==============================100%] [Cov:=============================>     83%][Progress:==============================100%] [Cov:=============================>     83%]
* Search finished after 62s and 26 generations, 22436 statements, best individual has fitness: 58.13333333333333
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 85%
* Total number of goals: 92
* Number of covered goals: 78
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 94%
* Total number of goals: 67
* Number of covered goals: 63
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 89%
* Total number of goals: 402
* Number of covered goals: 359
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 17%
* Total number of goals: 6
* Number of covered goals: 1
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 5
* Number of covered goals: 5
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 80%
* Total number of goals: 5
* Number of covered goals: 4
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 94%
* Total number of goals: 67
* Number of covered goals: 63
* Generated 17 tests with total length 141
* Resulting test suite's coverage: 82% (average coverage for all fitness functions)
* Compiling and checking tests
[MASTER] 12:33:22.927 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Java heap space
[MASTER] 12:33:22.928 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DifferentiableMultivariateVectorialOptimizer differentiableMultivariateVectorialOptimizer0 = mock(DifferentiableMultivariateVectorialOptimizer.class, new ViolatedAssumptionAnswer());
JDKRandomGenerator jDKRandomGenerator0 = new JDKRandomGenerator();
RandomAdaptor randomAdaptor0 = new RandomAdaptor(jDKRandomGenerator0);
UnitSphereRandomVectorGenerator unitSphereRandomVectorGenerator0 = new UnitSphereRandomVectorGenerator(3, randomAdaptor0);
MultiStartDifferentiableMultivariateVectorialOptimizer multiStartDifferentiableMultivariateVectorialOptimizer0 = new MultiStartDifferentiableMultivariateVectorialOptimizer(differentiableMultivariateVectorialOptimizer0, 2146524975, unitSphereRandomVectorGenerator0);
GaussianFitter gaussianFitter0 = new GaussianFitter(multiStartDifferentiableMultivariateVectorialOptimizer0);
double[] doubleArray0 = new double[3];
double[] doubleArray1 = gaussianFitter0.fit(doubleArray0);

* Writing JUnit test case 'GaussianFitter_ESTest' to evosuite-tests
* Done!

* Computation finished
