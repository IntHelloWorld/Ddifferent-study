* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.math.optimization.fitting.GaussianFitter
* Starting client
* Connecting to master process on port 5517
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/patch1-Math-58-CapGen/Math_58_1_capgen/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math.optimization.fitting.GaussianFitter
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 92
  - Branch 67
  - Exception 0
  - MutationFactory 402
  - Output 6
  - Method 5
  - MethodNoException 5
  - CBranchFitnessFactory 67
* Using seed 1585456164900
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%][Progress:=>                            5%] [Cov:>                                  0%][Progress:=>                            5%] [Cov:====>                              13%][Progress:=>                            5%] [Cov:====>                              14%][Progress:==>                           8%] [Cov:==>                                8%][Progress:==>                           8%] [Cov:=====>                             17%][Progress:==>                           8%] [Cov:==========>                        29%][Progress:==>                           8%] [Cov:===============>                   43%][Progress:==>                           8%] [Cov:=================>                 51%][Progress:==>                           8%] [Cov:====================>              58%][Progress:==>                           8%] [Cov:======================>            65%][Progress:======>                       21%] [Cov:>                                  0%][Progress:======>                       21%] [Cov:====>                              12%][Progress:=======>                      25%] [Cov:>                                  1%][Progress:=======>                      25%] [Cov:>                                  2%][Progress:=======>                      25%] [Cov:====>                              14%][Progress:=======>                      25%] [Cov:=======>                           21%][Progress:=======>                      25%] [Cov:========>                          23%][Progress:=======>                      25%] [Cov:========>                          24%][Progress:=======>                      25%] [Cov:==========>                        29%][Progress:=======>                      25%] [Cov:==============>                    42%][Progress:=======>                      25%] [Cov:=================>                 49%][Progress:=======>                      25%] [Cov:===================>               55%][Progress:=======>                      25%] [Cov:=====================>             61%][Progress:=======>                      26%] [Cov:==>                                7%][Progress:=======>                      26%] [Cov:=====>                             15%][Progress:=======>                      26%] [Cov:=========>                         27%][Progress:=======>                      26%] [Cov:=============>                     39%][Progress:=======>                      26%] [Cov:===============>                   45%][Progress:=======>                      26%] [Cov:==================>                52%][Progress:=======>                      26%] [Cov:====================>              58%][Progress:========>                     28%] [Cov:==>                                8%][Progress:========>                     28%] [Cov:=====>                             17%][Progress:========>                     28%] [Cov:==========>                        29%][Progress:========>                     28%] [Cov:==============>                    42%][Progress:========>                     28%] [Cov:=================>                 50%][Progress:========>                     28%] [Cov:===================>               57%][Progress:========>                     28%] [Cov:======================>            63%][Progress:========>                     28%] [Cov:======================>            65%][Progress:=========>                    30%] [Cov:==>                                6%][Progress:=========>                    30%] [Cov:====>                              12%][Progress:=========>                    30%] [Cov:========>                          24%][Progress:=========>                    30%] [Cov:==========>                        31%][Progress:=========>                    30%] [Cov:============>                      36%][Progress:=========>                    30%] [Cov:==============>                    40%][Progress:=========>                    30%] [Cov:===============>                   44%][Progress:=========>                    30%] [Cov:================>                  48%][Progress:=========>                    30%] [Cov:==================>                53%][Progress:=========>                    30%] [Cov:====================>              58%][Progress:=========>                    30%] [Cov:======================>            64%][Progress:=========>                    31%] [Cov:==========>                        29%][Progress:=========>                    31%] [Cov:=============>                     38%][Progress:=========>                    31%] [Cov:===============>                   45%][Progress:=========>                    31%] [Cov:================>                  48%][Progress:=========>                    31%] [Cov:=================>                 49%][Progress:=========>                    31%] [Cov:===================>               55%][Progress:=========>                    31%] [Cov:=====================>             60%][Progress:=========>                    33%] [Cov:>                                  0%][Progress:=========>                    33%] [Cov:====>                              12%][Progress:=========>                    33%] [Cov:====>                              13%][Progress:=========>                    33%] [Cov:====>                              14%][Progress:=========>                    33%] [Cov:=====>                             17%][Progress:=========>                    33%] [Cov:======>                            19%][Progress:=========>                    33%] [Cov:=========>                         27%][Progress:=========>                    33%] [Cov:============>                      37%][Progress:=========>                    33%] [Cov:================>                  48%][Progress:=========>                    33%] [Cov:===================>               55%][Progress:=========>                    33%] [Cov:=====================>             60%][Progress:============>                 40%] [Cov:====>                              13%][Progress:============>                 40%] [Cov:=====>                             15%][Progress:============>                 40%] [Cov:=====>                             17%][Progress:============>                 40%] [Cov:=========>                         26%][Progress:============>                 40%] [Cov:===========>                       34%][Progress:============>                 40%] [Cov:===============>                   45%][Progress:============>                 40%] [Cov:==================>                52%][Progress:============>                 40%] [Cov:===================>               56%][Progress:============>                 40%] [Cov:=====================>             62%][Progress:============>                 41%] [Cov:=========>                         27%][Progress:============>                 41%] [Cov:===========>                       32%][Progress:============>                 41%] [Cov:============>                      36%][Progress:============>                 41%] [Cov:=============>                     38%][Progress:============>                 41%] [Cov:==============>                    40%][Progress:============>                 41%] [Cov:===============>                   44%][Progress:============>                 41%] [Cov:================>                  48%][Progress:============>                 41%] [Cov:==================>                54%][Progress:============>                 41%] [Cov:===================>               55%][Progress:============>                 41%] [Cov:=====================>             62%][Progress:============>                 41%] [Cov:========================>          69%][Progress:============>                 41%] [Cov:========================>          69%][Progress:============>                 43%] [Cov:=====================>             62%][Progress:============>                 43%] [Cov:======================>            63%][Progress:============>                 43%] [Cov:======================>            65%][Progress:============>                 43%] [Cov:=======================>           66%][Progress:=============>                45%] [Cov:======================>            64%][Progress:=============>                45%] [Cov:=======================>           66%][Progress:=============>                46%] [Cov:===================>               55%][Progress:=============>                46%] [Cov:===================>               57%][Progress:=============>                46%] [Cov:====================>              59%][Progress:=============>                46%] [Cov:======================>            65%][Progress:=============>                46%] [Cov:=======================>           66%][Progress:==============>               48%] [Cov:===========================>       78%][Progress:===============>              50%] [Cov:===========================>       78%][Progress:===============>              50%] [Cov:===========================>       78%][Progress:===============>              51%] [Cov:==========================>        77%][Progress:===============>              51%] [Cov:===========================>       78%][Progress:===============>              53%] [Cov:===========================>       78%][Progress:===============>              53%] [Cov:===========================>       79%][Progress:================>             55%] [Cov:============================>      80%][Progress:================>             56%] [Cov:===========================>       79%][Progress:================>             56%] [Cov:============================>      80%][Progress:================>             56%] [Cov:============================>      80%][Progress:=================>            58%] [Cov:===========================>       79%][Progress:=================>            58%] [Cov:============================>      80%][Progress:=================>            58%] [Cov:============================>      81%][Progress:==================>           60%] [Cov:============================>      80%][Progress:==================>           60%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      80%][Progress:==================>           63%] [Cov:============================>      80%][Progress:==================>           63%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      80%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      80%][Progress:===================>          66%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      80%][Progress:====================>         68%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:===========================>       79%][Progress:=====================>        70%] [Cov:============================>      80%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      80%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        73%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      82%][Progress:======================>       76%] [Cov:============================>      82%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      82%][Progress:=======================>      78%] [Cov:============================>      82%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      82%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      82%][Progress:========================>     81%] [Cov:============================>      82%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      82%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      82%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      82%][Progress:=========================>    86%] [Cov:============================>      82%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      82%][Progress:===========================>  90%] [Cov:============================>      82%][Progress:===========================>  90%] [Cov:============================>      82%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      82%][Progress:===========================>  93%] [Cov:============================>      82%][Progress:===========================>  93%] [Cov:============================>      82%][Progress:============================> 95%] [Cov:============================>      82%][Progress:============================> 95%] [Cov:============================>      82%][Progress:============================> 95%] [Cov:============================>      82%][Progress:============================> 96%] [Cov:============================>      82%][Progress:============================> 96%] [Cov:=============================>     84%][Progress:=============================>98%] [Cov:============================>      82%][Progress:=============================>98%] [Cov:=============================>     83%][Progress:=============================>98%] [Cov:=============================>     84%][Progress:==============================100%] [Cov:=============================>     83%][Progress:==============================100%] [Cov:=============================>     84%][Progress:==============================100%] [Cov:=============================>     83%][Progress:==============================100%] [Cov:=============================>     84%][Progress:==============================100%] [Cov:=============================>     83%]
* Search finished after 62s and 21 generations, 17048 statements, best individual has fitness: 66.08035713959146
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 85%
* Total number of goals: 92
* Number of covered goals: 78
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 94%
* Total number of goals: 67
* Number of covered goals: 63
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 6
* Number of covered goals: 6
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 90%
* Total number of goals: 402
* Number of covered goals: 360
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 33%
* Total number of goals: 6
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 5
* Number of covered goals: 5
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 80%
* Total number of goals: 5
* Number of covered goals: 4
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 94%
* Total number of goals: 67
* Number of covered goals: 63
* Generated 20 tests with total length 148
* Resulting test suite's coverage: 84% (average coverage for all fitness functions)
* Compiling and checking tests
[MASTER] 12:31:20.029 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Java heap space
[MASTER] 12:31:20.029 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DifferentiableMultivariateVectorialOptimizer differentiableMultivariateVectorialOptimizer0 = mock(DifferentiableMultivariateVectorialOptimizer.class, new ViolatedAssumptionAnswer());
doReturn((VectorialPointValuePair) null).when(differentiableMultivariateVectorialOptimizer0).optimize(anyInt() , any(org.apache.commons.math.analysis.DifferentiableMultivariateVectorialFunction.class) , any(double[].class) , any(double[].class) , any(double[].class));
doReturn(0).when(differentiableMultivariateVectorialOptimizer0).getEvaluations();
int[] intArray0 = new int[3];
Well1024a well1024a0 = new Well1024a(intArray0);
UnitSphereRandomVectorGenerator unitSphereRandomVectorGenerator0 = new UnitSphereRandomVectorGenerator(2146164477, well1024a0);
MultiStartDifferentiableMultivariateVectorialOptimizer multiStartDifferentiableMultivariateVectorialOptimizer0 = new MultiStartDifferentiableMultivariateVectorialOptimizer(differentiableMultivariateVectorialOptimizer0, 87, unitSphereRandomVectorGenerator0);
GaussianFitter gaussianFitter0 = new GaussianFitter(multiStartDifferentiableMultivariateVectorialOptimizer0);
double[] doubleArray0 = new double[0];
double[] doubleArray1 = gaussianFitter0.fit(doubleArray0);

* Writing JUnit test case 'GaussianFitter_ESTest' to evosuite-tests
* Done!

* Computation finished
