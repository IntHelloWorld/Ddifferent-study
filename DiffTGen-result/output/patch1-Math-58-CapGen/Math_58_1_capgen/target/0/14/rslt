* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.math.optimization.fitting.GaussianFitter
* Starting client
* Connecting to master process on port 6745
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/patch1-Math-58-CapGen/Math_58_1_capgen/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math.optimization.fitting.GaussianFitter
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 92
  - Branch 67
  - Exception 0
  - MutationFactory 402
  - Output 6
  - Method 5
  - MethodNoException 5
  - CBranchFitnessFactory 67
[Progress:>                             0%] [Cov:>                                  0%]* Using seed 1585456290278
* Starting evolution
[Progress:====>                         15%] [Cov:>                                  0%][Progress:====>                         15%] [Cov:>                                  1%][Progress:====>                         15%] [Cov:====>                              13%][Progress:====>                         15%] [Cov:=====>                             15%][Progress:====>                         15%] [Cov:=====>                             17%][Progress:====>                         15%] [Cov:=========>                         27%][Progress:====>                         15%] [Cov:=============>                     38%][Progress:====>                         15%] [Cov:==============>                    42%][Progress:====>                         15%] [Cov:================>                  47%][Progress:====>                         15%] [Cov:==================>                52%][Progress:====>                         16%] [Cov:===>                               9%][Progress:====>                         16%] [Cov:=====>                             17%][Progress:====>                         16%] [Cov:==========>                        30%][Progress:====>                         16%] [Cov:===============>                   43%][Progress:====>                         16%] [Cov:==================>                52%][Progress:====>                         16%] [Cov:====================>              59%][Progress:====>                         16%] [Cov:=======================>           66%][Progress:=====>                        18%] [Cov:=======>                           22%][Progress:=====>                        18%] [Cov:=========>                         28%][Progress:=====>                        18%] [Cov:============>                      35%][Progress:=====>                        18%] [Cov:==============>                    42%][Progress:=====>                        18%] [Cov:===============>                   44%][Progress:=====>                        18%] [Cov:================>                  47%][Progress:=====>                        18%] [Cov:=================>                 50%][Progress:=====>                        18%] [Cov:===================>               56%][Progress:======>                       20%] [Cov:==>                                7%][Progress:======>                       20%] [Cov:====>                              14%][Progress:======>                       20%] [Cov:=========>                         26%][Progress:======>                       20%] [Cov:============>                      37%][Progress:======>                       20%] [Cov:================>                  46%][Progress:======>                       20%] [Cov:==================>                52%][Progress:======>                       20%] [Cov:===================>               57%][Progress:======>                       20%] [Cov:=====================>             61%][Progress:======>                       21%] [Cov:====>                              13%][Progress:======>                       21%] [Cov:====>                              14%][Progress:======>                       21%] [Cov:=====>                             17%][Progress:======>                       21%] [Cov:========>                          24%][Progress:======>                       21%] [Cov:===========>                       33%][Progress:======>                       21%] [Cov:============>                      37%][Progress:======>                       21%] [Cov:==============>                    42%][Progress:======>                       21%] [Cov:================>                  46%][Progress:======>                       21%] [Cov:==================>                52%][Progress:======>                       21%] [Cov:===================>               56%][Progress:======>                       23%] [Cov:===>                               9%][Progress:======>                       23%] [Cov:======>                            19%][Progress:======>                       23%] [Cov:===========>                       32%][Progress:======>                       23%] [Cov:================>                  47%][Progress:======>                       23%] [Cov:===================>               55%][Progress:======>                       23%] [Cov:=====================>             62%][Progress:======>                       23%] [Cov:========================>          69%][Progress:=======>                      25%] [Cov:==>                                6%][Progress:=======>                      25%] [Cov:====>                              12%][Progress:=======>                      25%] [Cov:========>                          24%][Progress:=======>                      25%] [Cov:==========>                        31%][Progress:=======>                      25%] [Cov:==============>                    40%][Progress:=======>                      25%] [Cov:================>                  47%][Progress:=======>                      25%] [Cov:=================>                 50%][Progress:=========>                    30%] [Cov:==>                                7%][Progress:=========>                    30%] [Cov:====>                              14%][Progress:=========>                    30%] [Cov:=========>                         26%][Progress:=========>                    30%] [Cov:============>                      35%][Progress:=========>                    30%] [Cov:===============>                   44%][Progress:=========>                    30%] [Cov:=================>                 51%][Progress:=========>                    30%] [Cov:===================>               56%][Progress:=========>                    31%] [Cov:>                                  0%][Progress:=========>                    31%] [Cov:>                                  1%][Progress:=========>                    31%] [Cov:====>                              13%][Progress:=========>                    31%] [Cov:=====>                             15%][Progress:=========>                    31%] [Cov:=====>                             17%][Progress:=========>                    31%] [Cov:=========>                         27%][Progress:=========>                    31%] [Cov:=============>                     38%][Progress:=========>                    31%] [Cov:==============>                    42%][Progress:=========>                    31%] [Cov:================>                  47%][Progress:=========>                    31%] [Cov:==================>                52%][Progress:=========>                    33%] [Cov:========>                          25%][Progress:=========>                    33%] [Cov:===========>                       32%][Progress:=========>                    33%] [Cov:==============>                    41%][Progress:=========>                    33%] [Cov:================>                  47%][Progress:=========>                    33%] [Cov:=================>                 51%][Progress:=========>                    33%] [Cov:==================>                54%][Progress:=========>                    33%] [Cov:=====================>             60%][Progress:=========>                    33%] [Cov:=======================>           67%][Progress:==========>                   35%] [Cov:==>                                7%][Progress:==========>                   35%] [Cov:=====>                             15%][Progress:==========>                   35%] [Cov:=========>                         27%][Progress:==========>                   35%] [Cov:============>                      37%][Progress:==========>                   35%] [Cov:================>                  46%][Progress:==========>                   35%] [Cov:==================>                53%][Progress:==========>                   35%] [Cov:====================>              58%][Progress:==========>                   36%] [Cov:==>                                8%][Progress:==========>                   36%] [Cov:=====>                             15%][Progress:==========>                   36%] [Cov:=========>                         27%][Progress:==========>                   36%] [Cov:=============>                     39%][Progress:==========>                   36%] [Cov:================>                  48%][Progress:==========>                   36%] [Cov:==================>                54%][Progress:==========>                   36%] [Cov:=====================>             60%][Progress:==========>                   36%] [Cov:=======================>           66%][Progress:===========>                  38%] [Cov:==============>                    40%][Progress:===========>                  38%] [Cov:================>                  48%][Progress:===========>                  38%] [Cov:===================>               55%][Progress:===========>                  38%] [Cov:=====================>             61%][Progress:===========>                  38%] [Cov:======================>            64%][Progress:===========>                  38%] [Cov:========================>          69%][Progress:============>                 40%] [Cov:=======================>           67%][Progress:============>                 40%] [Cov:========================>          69%][Progress:============>                 43%] [Cov:===================>               55%][Progress:============>                 43%] [Cov:=======================>           67%][Progress:=============>                45%] [Cov:=======================>           66%][Progress:=============>                45%] [Cov:=======================>           67%][Progress:=============>                45%] [Cov:========================>          69%][Progress:=============>                46%] [Cov:==================>                54%][Progress:=============>                46%] [Cov:=====================>             62%][Progress:=============>                46%] [Cov:========================>          69%][Progress:=============>                46%] [Cov:==========================>        77%][Progress:==============>               48%] [Cov:==========================>        76%][Progress:==============>               48%] [Cov:==========================>        77%][Progress:===============>              50%] [Cov:==========================>        75%][Progress:===============>              50%] [Cov:==========================>        76%][Progress:===============>              50%] [Cov:==========================>        77%][Progress:===============>              50%] [Cov:===========================>       78%][Progress:===============>              51%] [Cov:==========================>        76%][Progress:===============>              51%] [Cov:==========================>        77%][Progress:===============>              51%] [Cov:===========================>       78%][Progress:===============>              53%] [Cov:===========================>       78%][Progress:================>             55%] [Cov:==========================>        76%][Progress:================>             55%] [Cov:==========================>        77%][Progress:================>             55%] [Cov:===========================>       78%][Progress:================>             56%] [Cov:==========================>        77%][Progress:================>             56%] [Cov:===========================>       78%][Progress:================>             56%] [Cov:===========================>       78%][Progress:=================>            58%] [Cov:==========================>        76%][Progress:=================>            58%] [Cov:===========================>       78%][Progress:=================>            58%] [Cov:===========================>       78%][Progress:==================>           60%] [Cov:===========================>       78%][Progress:==================>           60%] [Cov:===========================>       78%][Progress:==================>           61%] [Cov:===========================>       78%][Progress:==================>           63%] [Cov:===========================>       78%][Progress:===================>          65%] [Cov:==========================>        77%][Progress:===================>          65%] [Cov:===========================>       78%][Progress:===================>          66%] [Cov:===========================>       78%][Progress:====================>         68%] [Cov:===========================>       78%][Progress:=====================>        70%] [Cov:===========================>       78%][Progress:=====================>        70%] [Cov:===========================>       78%][Progress:=====================>        70%] [Cov:===========================>       79%][Progress:=====================>        71%] [Cov:===========================>       78%][Progress:=====================>        71%] [Cov:===========================>       79%][Progress:=====================>        73%] [Cov:===========================>       78%][Progress:=====================>        73%] [Cov:===========================>       79%][Progress:======================>       75%] [Cov:===========================>       78%][Progress:======================>       75%] [Cov:===========================>       79%][Progress:======================>       75%] [Cov:===========================>       79%][Progress:======================>       76%] [Cov:===========================>       78%][Progress:======================>       76%] [Cov:===========================>       79%][Progress:=======================>      78%] [Cov:===========================>       78%][Progress:=======================>      78%] [Cov:===========================>       79%][Progress:========================>     80%] [Cov:===========================>       79%][Progress:========================>     81%] [Cov:===========================>       79%][Progress:========================>     83%] [Cov:===========================>       79%][Progress:========================>     83%] [Cov:===========================>       79%][Progress:========================>     83%] [Cov:===========================>       79%][Progress:=========================>    85%] [Cov:===========================>       78%][Progress:=========================>    85%] [Cov:===========================>       79%][Progress:=========================>    86%] [Cov:===========================>       79%][Progress:=========================>    86%] [Cov:===========================>       79%][Progress:==========================>   88%] [Cov:===========================>       79%][Progress:==========================>   88%] [Cov:===========================>       79%][Progress:===========================>  90%] [Cov:===========================>       79%][Progress:===========================>  90%] [Cov:===========================>       79%][Progress:===========================>  91%] [Cov:===========================>       79%][Progress:===========================>  91%] [Cov:===========================>       79%][Progress:===========================>  93%] [Cov:===========================>       79%][Progress:===========================>  93%] [Cov:===========================>       79%][Progress:============================> 95%] [Cov:===========================>       79%][Progress:============================> 95%] [Cov:===========================>       79%][Progress:============================> 96%] [Cov:===========================>       79%][Progress:=============================>98%] [Cov:===========================>       79%][Progress:=============================>98%] [Cov:===========================>       79%][Progress:==============================100%] [Cov:===========================>       79%][Progress:==============================100%] [Cov:===========================>       79%][Progress:==============================100%] [Cov:===========================>       79%][Progress:==============================100%] [Cov:===========================>       79%][Progress:==============================100%] [Cov:===========================>       79%]
* Search finished after 61s and 26 generations, 19589 statements, best individual has fitness: 60.576190475721646
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 85%
* Total number of goals: 92
* Number of covered goals: 78
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 94%
* Total number of goals: 67
* Number of covered goals: 63
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 6
* Number of covered goals: 6
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 89%
* Total number of goals: 402
* Number of covered goals: 359
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 0%
* Total number of goals: 6
* Number of covered goals: 0
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 5
* Number of covered goals: 5
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 60%
* Total number of goals: 5
* Number of covered goals: 3
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 94%
* Total number of goals: 67
* Number of covered goals: 63
* Generated 17 tests with total length 140
* Resulting test suite's coverage: 78% (average coverage for all fitness functions)
* Compiling and checking tests
[MASTER] 12:33:22.766 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Java heap space
[MASTER] 12:33:22.768 [logback-1] WARN  JUnitAnalyzer - Failing test:
 WeightedObservedPoint[] weightedObservedPointArray0 = new WeightedObservedPoint[5];
WeightedObservedPoint weightedObservedPoint0 = new WeightedObservedPoint(1821.22497268771, 1821.22497268771, 1821.22497268771);
weightedObservedPointArray0[0] = weightedObservedPoint0;
weightedObservedPointArray0[1] = weightedObservedPoint0;
weightedObservedPointArray0[2] = weightedObservedPointArray0[0];
weightedObservedPointArray0[3] = weightedObservedPointArray0[1];
weightedObservedPointArray0[4] = weightedObservedPointArray0[3];
GaussianFitter.ParameterGuesser gaussianFitter_ParameterGuesser0 = new GaussianFitter.ParameterGuesser(weightedObservedPointArray0);
double[] doubleArray0 = gaussianFitter_ParameterGuesser0.guess();
DifferentiableMultivariateVectorialOptimizer differentiableMultivariateVectorialOptimizer0 = mock(DifferentiableMultivariateVectorialOptimizer.class, new ViolatedAssumptionAnswer());
Well512a well512a0 = new Well512a((-1041L));
GaussianRandomGenerator gaussianRandomGenerator0 = new GaussianRandomGenerator(well512a0);
UncorrelatedRandomVectorGenerator uncorrelatedRandomVectorGenerator0 = new UncorrelatedRandomVectorGenerator(doubleArray0, doubleArray0, gaussianRandomGenerator0);
MultiStartDifferentiableMultivariateVectorialOptimizer multiStartDifferentiableMultivariateVectorialOptimizer0 = new MultiStartDifferentiableMultivariateVectorialOptimizer(differentiableMultivariateVectorialOptimizer0, 2146282006, uncorrelatedRandomVectorGenerator0);
GaussianFitter gaussianFitter0 = new GaussianFitter(multiStartDifferentiableMultivariateVectorialOptimizer0);
double[] doubleArray1 = gaussianFitter0.fit(doubleArray0);

* Writing JUnit test case 'GaussianFitter_ESTest' to evosuite-tests
* Done!

* Computation finished
