* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.math.optimization.fitting.GaussianFitter
* Starting client
* Connecting to master process on port 3099
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/patch1-Math-58-SOFix/Math_58_1_sofix/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math.optimization.fitting.GaussianFitter
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 92
  - Branch 67
  - Exception 0
  - MutationFactory 402
  - Output 6
  - Method 5
  - MethodNoException 5
  - CBranchFitnessFactory 67
* Using seed 1585554743480
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%][Progress:===>                          11%] [Cov:>                                  0%][Progress:===>                          11%] [Cov:====>                              13%][Progress:===>                          11%] [Cov:====>                              14%][Progress:=======>                      25%] [Cov:==>                                8%][Progress:=======>                      25%] [Cov:====>                              14%][Progress:=======>                      25%] [Cov:=========>                         27%][Progress:=======>                      25%] [Cov:============>                      37%][Progress:=======>                      25%] [Cov:================>                  48%][Progress:=======>                      25%] [Cov:===================>               55%][Progress:=======>                      25%] [Cov:====================>              58%][Progress:=======>                      26%] [Cov:>                                  0%][Progress:=======>                      26%] [Cov:>                                  1%][Progress:=======>                      26%] [Cov:====>                              13%][Progress:=======>                      26%] [Cov:====>                              14%][Progress:=======>                      26%] [Cov:=====>                             17%][Progress:=======>                      26%] [Cov:=========>                         27%][Progress:=======>                      26%] [Cov:============>                      37%][Progress:=======>                      26%] [Cov:===============>                   44%][Progress:=======>                      26%] [Cov:=================>                 51%][Progress:=======>                      26%] [Cov:===================>               56%][Progress:=========>                    30%] [Cov:==>                                6%][Progress:=========>                    30%] [Cov:====>                              12%][Progress:=========>                    30%] [Cov:========>                          25%][Progress:=========>                    30%] [Cov:===========>                       32%][Progress:=========>                    30%] [Cov:==============>                    40%][Progress:=========>                    30%] [Cov:================>                  47%][Progress:=========>                    30%] [Cov:=================>                 51%][Progress:=========>                    31%] [Cov:>                                  1%][Progress:=========>                    31%] [Cov:>                                  2%][Progress:=========>                    31%] [Cov:====>                              14%][Progress:=========>                    31%] [Cov:=======>                           21%][Progress:=========>                    31%] [Cov:========>                          25%][Progress:=========>                    31%] [Cov:=========>                         26%][Progress:=========>                    31%] [Cov:=========>                         28%][Progress:=========>                    31%] [Cov:=============>                     39%][Progress:=========>                    31%] [Cov:================>                  48%][Progress:=========>                    31%] [Cov:==================>                54%][Progress:=========>                    31%] [Cov:====================>              58%][Progress:=========>                    33%] [Cov:======================>            63%][Progress:==========>                   35%] [Cov:====>                              13%][Progress:==========>                   35%] [Cov:=====>                             15%][Progress:==========>                   35%] [Cov:=========>                         28%][Progress:==========>                   35%] [Cov:=============>                     39%][Progress:==========>                   35%] [Cov:===============>                   43%][Progress:==========>                   35%] [Cov:================>                  47%][Progress:==========>                   35%] [Cov:==================>                52%][Progress:==========>                   36%] [Cov:>                                  1%][Progress:==========>                   36%] [Cov:>                                  2%][Progress:==========>                   36%] [Cov:====>                              14%][Progress:===========>                  38%] [Cov:====>                              14%][Progress:===========>                  38%] [Cov:=======>                           20%][Progress:===========>                  38%] [Cov:=======>                           22%][Progress:===========>                  38%] [Cov:========>                          23%][Progress:============>                 41%] [Cov:==>                                7%][Progress:=============>                45%] [Cov:====>                              14%][Progress:=============>                45%] [Cov:=========>                         26%][Progress:=============>                45%] [Cov:============>                      37%][Progress:=============>                45%] [Cov:================>                  46%][Progress:=============>                45%] [Cov:==================>                52%][Progress:=============>                45%] [Cov:===================>               57%][Progress:===============>              50%] [Cov:==>                                7%][Progress:===============>              50%] [Cov:====>                              13%][Progress:===============>              50%] [Cov:========>                          25%][Progress:===============>              50%] [Cov:===========>                       34%][Progress:===============>              50%] [Cov:===============>                   43%][Progress:===============>              50%] [Cov:=================>                 49%][Progress:===============>              50%] [Cov:==================>                54%][Progress:===============>              51%] [Cov:=====>                             15%][Progress:===============>              51%] [Cov:=========>                         27%][Progress:===============>              51%] [Cov:=============>                     38%][Progress:===============>              51%] [Cov:================>                  47%][Progress:===============>              51%] [Cov:==================>                54%][Progress:===============>              51%] [Cov:====================>              59%][Progress:===============>              51%] [Cov:=====================>             61%][Progress:===============>              53%] [Cov:>                                  0%][Progress:===============>              53%] [Cov:====>                              12%][Progress:===============>              53%] [Cov:======>                            18%][Progress:===============>              53%] [Cov:==========>                        30%][Progress:===============>              53%] [Cov:===============>                   44%][Progress:===============>              53%] [Cov:===================>               55%][Progress:===============>              53%] [Cov:=====================>             61%][Progress:===============>              53%] [Cov:=======================>           68%][Progress:================>             55%] [Cov:=======================>           68%][Progress:================>             56%] [Cov:===========>                       34%][Progress:================>             56%] [Cov:===============>                   44%][Progress:================>             56%] [Cov:================>                  46%][Progress:================>             56%] [Cov:=================>                 50%][Progress:================>             56%] [Cov:===================>               55%][Progress:================>             56%] [Cov:====================>              58%][Progress:================>             56%] [Cov:====================>              59%][Progress:================>             56%] [Cov:======================>            63%][Progress:================>             56%] [Cov:======================>            64%][Progress:================>             56%] [Cov:=======================>           66%][Progress:================>             56%] [Cov:=======================>           68%][Progress:=================>            58%] [Cov:===========>                       34%][Progress:=================>            58%] [Cov:================>                  47%][Progress:=================>            58%] [Cov:=================>                 51%][Progress:=================>            58%] [Cov:===================>               55%][Progress:=================>            58%] [Cov:====================>              58%][Progress:=================>            58%] [Cov:=======================>           67%][Progress:=================>            58%] [Cov:=======================>           68%][Progress:==================>           60%] [Cov:==========================>        75%][Progress:==================>           61%] [Cov:=========================>         74%][Progress:==================>           61%] [Cov:==========================>        75%][Progress:==================>           61%] [Cov:==========================>        76%][Progress:==================>           63%] [Cov:============================>      80%][Progress:==================>           63%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:===========================>       78%][Progress:===================>          65%] [Cov:===========================>       79%][Progress:===================>          65%] [Cov:============================>      80%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      80%][Progress:====================>         68%] [Cov:============================>      80%][Progress:====================>         68%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:===========================>       78%][Progress:=====================>        70%] [Cov:============================>      80%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      80%][Progress:=====================>        71%] [Cov:============================>      82%][Progress:=====================>        71%] [Cov:============================>      82%][Progress:=====================>        71%] [Cov:=============================>     83%][Progress:=====================>        73%] [Cov:============================>      82%][Progress:=====================>        73%] [Cov:=============================>     83%][Progress:======================>       75%] [Cov:============================>      82%][Progress:======================>       75%] [Cov:=============================>     83%][Progress:======================>       75%] [Cov:=============================>     84%][Progress:======================>       76%] [Cov:=============================>     83%][Progress:======================>       76%] [Cov:=============================>     84%][Progress:=======================>      78%] [Cov:=============================>     84%][Progress:=======================>      78%] [Cov:=============================>     84%][Progress:========================>     80%] [Cov:=============================>     83%][Progress:========================>     80%] [Cov:=============================>     84%][Progress:========================>     80%] [Cov:=============================>     84%][Progress:========================>     81%] [Cov:=============================>     84%][Progress:========================>     81%] [Cov:=============================>     84%][Progress:========================>     83%] [Cov:=============================>     84%][Progress:========================>     83%] [Cov:=============================>     84%][Progress:=========================>    85%] [Cov:=============================>     84%][Progress:=========================>    86%] [Cov:=============================>     84%][Progress:==========================>   88%] [Cov:=============================>     84%][Progress:==========================>   88%] [Cov:=============================>     84%][Progress:===========================>  90%] [Cov:=============================>     84%][Progress:===========================>  91%] [Cov:=============================>     84%][Progress:===========================>  93%] [Cov:=============================>     84%][Progress:===========================>  93%] [Cov:=============================>     84%][Progress:============================> 95%] [Cov:=============================>     84%][Progress:============================> 95%] [Cov:=============================>     84%][Progress:============================> 96%] [Cov:=============================>     84%][Progress:=============================>98%] [Cov:=============================>     84%][Progress:=============================>98%] [Cov:=============================>     84%][Progress:==============================100%] [Cov:=============================>     84%][Progress:==============================100%] [Cov:=============================>     84%]
* Search finished after 61s and 17 generations, 12451 statements, best individual has fitness: 58.076190476190476
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 85%
* Total number of goals: 92
* Number of covered goals: 78
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 94%
* Total number of goals: 67
* Number of covered goals: 63
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 6
* Number of covered goals: 6
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 89%
* Total number of goals: 402
* Number of covered goals: 357
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 33%
* Total number of goals: 6
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 5
* Number of covered goals: 5
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 80%
* Total number of goals: 5
* Number of covered goals: 4
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 94%
* Total number of goals: 67
* Number of covered goals: 63
* Generated 18 tests with total length 133
* Resulting test suite's coverage: 84% (average coverage for all fitness functions)
* Compiling and checking tests
[MASTER] 15:54:16.551 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Java heap space
[MASTER] 15:54:16.553 [logback-1] WARN  JUnitAnalyzer - Failing test:
 WeightedObservedPoint[] weightedObservedPointArray0 = new WeightedObservedPoint[4];
WeightedObservedPoint weightedObservedPoint0 = new WeightedObservedPoint(0.0, 0.0, 0.0);
weightedObservedPointArray0[0] = weightedObservedPoint0;
weightedObservedPointArray0[1] = weightedObservedPointArray0[0];
weightedObservedPointArray0[2] = weightedObservedPoint0;
weightedObservedPointArray0[3] = weightedObservedPointArray0[1];
GaussianFitter.ParameterGuesser gaussianFitter_ParameterGuesser0 = new GaussianFitter.ParameterGuesser(weightedObservedPointArray0);
double[] doubleArray0 = gaussianFitter_ParameterGuesser0.guess();
DifferentiableMultivariateVectorialOptimizer differentiableMultivariateVectorialOptimizer0 = mock(DifferentiableMultivariateVectorialOptimizer.class, new ViolatedAssumptionAnswer());
GaussianRandomGenerator gaussianRandomGenerator0 = new GaussianRandomGenerator((RandomGenerator) null);
UncorrelatedRandomVectorGenerator uncorrelatedRandomVectorGenerator0 = new UncorrelatedRandomVectorGenerator(91, gaussianRandomGenerator0);
MultiStartDifferentiableMultivariateVectorialOptimizer multiStartDifferentiableMultivariateVectorialOptimizer0 = new MultiStartDifferentiableMultivariateVectorialOptimizer(differentiableMultivariateVectorialOptimizer0, 2146347270, uncorrelatedRandomVectorGenerator0);
GaussianFitter gaussianFitter0 = new GaussianFitter(multiStartDifferentiableMultivariateVectorialOptimizer0);
double[] doubleArray1 = gaussianFitter0.fit(doubleArray0);

* Writing JUnit test case 'GaussianFitter_ESTest' to evosuite-tests
* Done!

* Computation finished
