* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.math.optimization.fitting.GaussianFitter
* Starting client
* Connecting to master process on port 16783
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/patch1-Math-58-SOFix/Math_58_1_sofix/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math.optimization.fitting.GaussianFitter
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 92
  - Branch 67
  - Exception 0
  - MutationFactory 402
  - Output 6
  - Method 5
  - MethodNoException 5
  - CBranchFitnessFactory 67
* Using seed 1585554606897
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%][Progress:======>                       21%] [Cov:>                                  0%][Progress:======>                       21%] [Cov:>                                  1%][Progress:======>                       21%] [Cov:====>                              13%][Progress:======>                       23%] [Cov:====>                              12%][Progress:======>                       23%] [Cov:=====>                             17%][Progress:======>                       23%] [Cov:======>                            19%][Progress:======>                       23%] [Cov:=========>                         26%][Progress:======>                       23%] [Cov:============>                      35%][Progress:======>                       23%] [Cov:==============>                    40%][Progress:======>                       23%] [Cov:===============>                   44%][Progress:======>                       23%] [Cov:================>                  47%][Progress:=======>                      25%] [Cov:==>                                8%][Progress:=======>                      25%] [Cov:=====>                             15%][Progress:=======>                      25%] [Cov:=========>                         28%][Progress:=======>                      25%] [Cov:==============>                    40%][Progress:=======>                      25%] [Cov:===============>                   44%][Progress:=======>                      25%] [Cov:=================>                 49%][Progress:=======>                      25%] [Cov:===================>               55%][Progress:=========>                    30%] [Cov:==>                                7%][Progress:=========>                    30%] [Cov:====>                              14%][Progress:=========>                    30%] [Cov:=========>                         26%][Progress:=========>                    30%] [Cov:============>                      36%][Progress:=========>                    30%] [Cov:===============>                   45%][Progress:=========>                    30%] [Cov:=================>                 51%][Progress:=========>                    30%] [Cov:===================>               57%][Progress:=========>                    31%] [Cov:==>                                7%][Progress:=========>                    31%] [Cov:====>                              14%][Progress:=========>                    31%] [Cov:=========>                         26%][Progress:=========>                    31%] [Cov:============>                      36%][Progress:=========>                    31%] [Cov:===============>                   45%][Progress:=========>                    31%] [Cov:==================>                52%][Progress:=========>                    31%] [Cov:===================>               55%][Progress:==========>                   36%] [Cov:==>                                7%][Progress:==========>                   36%] [Cov:====>                              14%][Progress:==========>                   36%] [Cov:=========>                         26%][Progress:==========>                   36%] [Cov:============>                      35%][Progress:==========>                   36%] [Cov:===============>                   44%][Progress:==========>                   36%] [Cov:=================>                 51%][Progress:==========>                   36%] [Cov:===================>               56%][Progress:===========>                  38%] [Cov:>                                  1%][Progress:===========>                  38%] [Cov:>                                  2%][Progress:===========>                  38%] [Cov:====>                              14%][Progress:===========>                  38%] [Cov:=======>                           20%][Progress:===========>                  38%] [Cov:========>                          25%][Progress:===========>                  38%] [Cov:=========>                         26%][Progress:===========>                  38%] [Cov:=========>                         28%][Progress:============>                 40%] [Cov:=============>                     39%][Progress:============>                 40%] [Cov:================>                  46%][Progress:============>                 40%] [Cov:==================>                52%][Progress:============>                 40%] [Cov:====================>              59%][Progress:============>                 41%] [Cov:===============>                   43%][Progress:============>                 41%] [Cov:================>                  48%][Progress:============>                 41%] [Cov:==================>                53%][Progress:============>                 41%] [Cov:====================>              58%][Progress:============>                 43%] [Cov:=============>                     39%][Progress:============>                 43%] [Cov:=================>                 50%][Progress:============>                 43%] [Cov:===================>               57%][Progress:============>                 43%] [Cov:======================>            63%][Progress:=============>                45%] [Cov:>                                  0%][Progress:=============>                45%] [Cov:>                                  1%][Progress:=============>                45%] [Cov:====>                              14%][Progress:=============>                45%] [Cov:======>                            18%][Progress:=============>                45%] [Cov:=======>                           20%][Progress:=============>                45%] [Cov:========>                          23%][Progress:=============>                45%] [Cov:==========>                        29%][Progress:=============>                45%] [Cov:=============>                     38%][Progress:=============>                45%] [Cov:===============>                   45%][Progress:=============>                45%] [Cov:================>                  48%][Progress:=============>                46%] [Cov:>                                  0%][Progress:=============>                46%] [Cov:>                                  1%][Progress:=============>                46%] [Cov:====>                              14%][Progress:=============>                46%] [Cov:======>                            19%][Progress:=============>                46%] [Cov:=======>                           22%][Progress:=============>                46%] [Cov:=========>                         28%][Progress:=============>                46%] [Cov:==============>                    40%][Progress:=============>                46%] [Cov:=================>                 49%][Progress:=============>                46%] [Cov:===================>               56%][Progress:=============>                46%] [Cov:=====================>             61%][Progress:=============>                46%] [Cov:======================>            65%][Progress:==============>               48%] [Cov:==>                                7%][Progress:==============>               48%] [Cov:====>                              13%][Progress:==============>               48%] [Cov:=========>                         26%][Progress:==============>               48%] [Cov:===========>                       34%][Progress:==============>               48%] [Cov:=============>                     39%][Progress:==============>               48%] [Cov:===============>                   43%][Progress:==============>               48%] [Cov:================>                  48%][Progress:==============>               48%] [Cov:==================>                54%][Progress:==============>               48%] [Cov:=====================>             60%][Progress:==============>               48%] [Cov:=====================>             62%][Progress:==============>               48%] [Cov:======================>            63%][Progress:==============>               48%] [Cov:======================>            65%][Progress:===============>              50%] [Cov:=================>                 50%][Progress:===============>              50%] [Cov:=================>                 51%][Progress:===============>              50%] [Cov:===================>               56%][Progress:===============>              50%] [Cov:=====================>             61%][Progress:===============>              50%] [Cov:======================>            63%][Progress:===============>              51%] [Cov:==================>                54%][Progress:===============>              51%] [Cov:======================>            63%][Progress:===============>              51%] [Cov:======================>            64%][Progress:===============>              51%] [Cov:======================>            65%][Progress:===============>              53%] [Cov:================>                  48%][Progress:===============>              53%] [Cov:======================>            65%][Progress:================>             55%] [Cov:=================>                 49%][Progress:================>             55%] [Cov:======================>            64%][Progress:================>             55%] [Cov:==========================>        75%][Progress:================>             56%] [Cov:=========================>         74%][Progress:=================>            58%] [Cov:=========================>         73%][Progress:=================>            58%] [Cov:=========================>         74%][Progress:=================>            58%] [Cov:==========================>        75%][Progress:==================>           60%] [Cov:=========================>         73%][Progress:==================>           60%] [Cov:=========================>         74%][Progress:==================>           60%] [Cov:==========================>        75%][Progress:==================>           61%] [Cov:=========================>         74%][Progress:==================>           61%] [Cov:==========================>        75%][Progress:==================>           61%] [Cov:==========================>        76%][Progress:==================>           63%] [Cov:=========================>         74%][Progress:==================>           63%] [Cov:==========================>        75%][Progress:==================>           63%] [Cov:==========================>        76%][Progress:===================>          65%] [Cov:==========================>        76%][Progress:====================>         68%] [Cov:==========================>        75%][Progress:====================>         68%] [Cov:==========================>        76%][Progress:====================>         68%] [Cov:==========================>        76%][Progress:=====================>        70%] [Cov:=========================>         74%][Progress:=====================>        70%] [Cov:==========================>        75%][Progress:=====================>        70%] [Cov:==========================>        76%][Progress:=====================>        70%] [Cov:==========================>        77%][Progress:=====================>        71%] [Cov:==========================>        76%][Progress:=====================>        71%] [Cov:==========================>        77%][Progress:=====================>        71%] [Cov:==========================>        77%][Progress:=====================>        73%] [Cov:==========================>        76%][Progress:=====================>        73%] [Cov:==========================>        77%][Progress:======================>       75%] [Cov:==========================>        76%][Progress:======================>       75%] [Cov:==========================>        77%][Progress:======================>       76%] [Cov:==========================>        76%][Progress:======================>       76%] [Cov:==========================>        77%][Progress:=======================>      78%] [Cov:==========================>        77%][Progress:=======================>      78%] [Cov:==========================>        77%][Progress:========================>     80%] [Cov:==========================>        77%][Progress:========================>     80%] [Cov:==========================>        77%][Progress:========================>     81%] [Cov:==========================>        77%][Progress:========================>     83%] [Cov:==========================>        77%][Progress:========================>     83%] [Cov:===========================>       78%][Progress:========================>     83%] [Cov:===========================>       78%][Progress:=========================>    85%] [Cov:==========================>        77%][Progress:=========================>    85%] [Cov:===========================>       78%][Progress:=========================>    86%] [Cov:==========================>        77%][Progress:=========================>    86%] [Cov:===========================>       78%][Progress:==========================>   88%] [Cov:==========================>        77%][Progress:==========================>   88%] [Cov:===========================>       78%][Progress:===========================>  90%] [Cov:===========================>       78%][Progress:===========================>  91%] [Cov:==========================>        77%][Progress:===========================>  91%] [Cov:===========================>       78%][Progress:===========================>  91%] [Cov:===========================>       78%][Progress:===========================>  93%] [Cov:==========================>        77%][Progress:============================> 95%] [Cov:==========================>        77%][Progress:============================> 95%] [Cov:===========================>       78%][Progress:============================> 95%] [Cov:===========================>       78%][Progress:============================> 96%] [Cov:===========================>       78%][Progress:=============================>98%] [Cov:===========================>       78%][Progress:=============================>98%] [Cov:===========================>       78%][Progress:==============================100%] [Cov:===========================>       78%][Progress:==============================100%] [Cov:===========================>       78%]
* Search finished after 61s and 14 generations, 11668 statements, best individual has fitness: 59.576190476190476
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 85%
* Total number of goals: 92
* Number of covered goals: 78
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 94%
* Total number of goals: 67
* Number of covered goals: 63
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 6
* Number of covered goals: 6
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 90%
* Total number of goals: 402
* Number of covered goals: 360
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 0%
* Total number of goals: 6
* Number of covered goals: 0
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 5
* Number of covered goals: 5
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 60%
* Total number of goals: 5
* Number of covered goals: 3
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 94%
* Total number of goals: 67
* Number of covered goals: 63
* Generated 19 tests with total length 143
* Resulting test suite's coverage: 78% (average coverage for all fitness functions)
* Compiling and checking tests
[MASTER] 15:52:12.250 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Java heap space
[MASTER] 15:52:12.262 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DifferentiableMultivariateVectorialOptimizer differentiableMultivariateVectorialOptimizer0 = mock(DifferentiableMultivariateVectorialOptimizer.class, new ViolatedAssumptionAnswer());
double[] doubleArray0 = new double[0];
Well19937a well19937a0 = new Well19937a();
UniformRandomGenerator uniformRandomGenerator0 = new UniformRandomGenerator(well19937a0);
UncorrelatedRandomVectorGenerator uncorrelatedRandomVectorGenerator0 = new UncorrelatedRandomVectorGenerator(doubleArray0, doubleArray0, uniformRandomGenerator0);
MultiStartDifferentiableMultivariateVectorialOptimizer multiStartDifferentiableMultivariateVectorialOptimizer0 = new MultiStartDifferentiableMultivariateVectorialOptimizer(differentiableMultivariateVectorialOptimizer0, 2129855367, uncorrelatedRandomVectorGenerator0);
GaussianFitter gaussianFitter0 = new GaussianFitter(multiStartDifferentiableMultivariateVectorialOptimizer0);
double[] doubleArray1 = gaussianFitter0.fit(doubleArray0);

* Writing JUnit test case 'GaussianFitter_ESTest' to evosuite-tests
* Done!

* Computation finished
