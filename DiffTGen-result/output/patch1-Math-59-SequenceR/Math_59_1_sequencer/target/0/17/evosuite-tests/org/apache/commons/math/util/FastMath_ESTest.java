/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 28 20:10:00 GMT 2020
 */

package org.apache.commons.math.util;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.math.util.FastMath;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FastMath_ESTest extends FastMath_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      float float0 = FastMath.max((float) 4432, 4724.5F);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      int int0 = FastMath.max(1115, 4432);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      double double0 = FastMath.min(2368.9111573526, 2368.9111573526);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      int int0 = FastMath.min(1840700269, 1840700269);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      double double0 = FastMath.ceil((-1518.2));
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      double double0 = FastMath.floor(0.0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      double double0 = FastMath.nextAfter(1.139493927324549, 1.139493927324549);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      double double0 = FastMath.nextAfter(0.0, 0.0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      double double0 = FastMath.ulp(2125.5838);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      float float0 = FastMath.abs(1073.2106F);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      long long0 = FastMath.abs((long) 3894);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      double double0 = FastMath.atan2(0.0F, 0.0F);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      double double0 = FastMath.atan(1.0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      double double0 = FastMath.acos(6.123233995736766E-17);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      double double0 = FastMath.log1p((-1.0E-6));
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      double double0 = FastMath.expm1(1);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      double double0 = FastMath.expm1((-1.0));
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      double double0 = FastMath.cosh(0.0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      double double0 = FastMath.toRadians(0.0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      double double0 = FastMath.toRadians(2402.979467);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      double double0 = FastMath.toDegrees(0L);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      double double0 = FastMath.toDegrees((-3714.36133));
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      double double0 = FastMath.sqrt(0.0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      int int0 = FastMath.round((float) 11);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      int int0 = FastMath.round((-1.0F));
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      long long0 = FastMath.round(1151.37591);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      long long0 = FastMath.round((-1328.2864));
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      double double0 = FastMath.rint((-1567));
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      long long0 = FastMath.min(1509L, 1509L);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      int int0 = FastMath.min(0, 336);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      int int0 = FastMath.min(2481, (-914));
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      float float0 = FastMath.min(662.0F, (float) 2013265920);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      double double0 = FastMath.min(Double.POSITIVE_INFINITY, (-1.5682243788138022));
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      long long0 = FastMath.max(1572L, 1572L);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      int int0 = FastMath.max(0, 0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      int int0 = FastMath.max((-1), (-1));
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      float float0 = FastMath.max((-1.0F), (-97.119F));
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      double double0 = FastMath.max((double) 0.0F, (double) 0.0F);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      double double0 = FastMath.max((-154.8034643344158), (-960.0));
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      double double0 = FastMath.log1p(0.0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      double double0 = FastMath.log10(1.0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      double double0 = FastMath.log10(5.261908426442558E-7);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      double double0 = FastMath.log(2744.2684148);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      double double0 = FastMath.exp((-1934.6120405508));
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      double double0 = FastMath.atanh((-1.0));
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      double double0 = FastMath.atan(0.0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      double double0 = FastMath.acosh(1.0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      int int0 = FastMath.abs(0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      double double0 = FastMath.abs(0.0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      double double0 = FastMath.floor((-1643L));
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      double double0 = FastMath.floor(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      double double0 = FastMath.nextAfter((-0.25), 1.0F);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      double double0 = FastMath.nextAfter(1.197421629234348, 6048.0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      double double0 = FastMath.nextAfter(0L, 3.171357693770103);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      double double0 = FastMath.nextAfter(1675.566, (-2754));
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      double double0 = FastMath.abs(2125.5838);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      double double0 = FastMath.exp(1.0320850239843855);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      double double0 = FastMath.max(2115.415014, Double.NaN);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      double double0 = FastMath.max((-0.8414709848078965), 2911.8201);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      float float0 = FastMath.max(0.0F, Float.NaN);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      float float0 = FastMath.max(505.8726F, 505.8726F);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      float float0 = FastMath.max(0.0F, (float) (-593));
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      long long0 = FastMath.max((-1391L), 0L);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      long long0 = FastMath.max((long) (-1), (-1650L));
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      int int0 = FastMath.max(4432, (-1));
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      double double0 = FastMath.min(Double.NaN, (-4.9E-324));
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      double double0 = FastMath.min(1.560070049119026, (double) 62);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      double double0 = FastMath.min(758.70677, 0.0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      float float0 = FastMath.min((float) 2433, (-5198.0F));
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      float float0 = FastMath.min(0.0F, 0.0F);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      float float0 = FastMath.min((float) 0L, Float.NaN);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      long long0 = FastMath.min(0L, (long) 593);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      long long0 = FastMath.min(1273L, (-870L));
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      double double0 = FastMath.rint(Double.POSITIVE_INFINITY);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      double double0 = FastMath.rint(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      double double0 = FastMath.rint(2433.53950965468);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      double double0 = FastMath.rint(0.11113807559013367);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      double double0 = FastMath.ceil((-0.5));
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      double double0 = FastMath.ceil(577.145446712);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      double double0 = FastMath.ceil(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      double double0 = FastMath.ceil((-1.0));
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      double double0 = FastMath.floor((-860.2610726820365));
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      double double0 = FastMath.ceil(Double.NEGATIVE_INFINITY);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      double double0 = FastMath.floor(1.8014398509481984E16);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      long long0 = FastMath.round(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      double double0 = FastMath.nextUp((-1.0));
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      double double0 = FastMath.nextUp(1.1730463525082348E-7);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      double double0 = FastMath.nextAfter(0.0, (-8.0E298));
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      double double0 = FastMath.nextAfter(Double.POSITIVE_INFINITY, 0.25);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      double double0 = FastMath.nextAfter(Double.NaN, 0.19454771280288696);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      double double0 = FastMath.abs((-1062.7601));
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      float float0 = FastMath.abs((-1.0F));
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      float float0 = FastMath.abs(0.0F);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      long long0 = FastMath.abs((long) (-593));
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      long long0 = FastMath.abs(0L);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      int int0 = FastMath.abs((-950));
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      int int0 = FastMath.abs(2804);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      double double0 = FastMath.cbrt(Double.NEGATIVE_INFINITY);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      double double0 = FastMath.cbrt(0L);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      double double0 = FastMath.cbrt(578.0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      double double0 = FastMath.acos((-0.06489618521642843));
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      double double0 = FastMath.acos(1.0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      double double0 = FastMath.acos((-1.0));
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      double double0 = FastMath.acos(-0.0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      double double0 = FastMath.acos((-9.076622339387342));
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      double double0 = FastMath.acos(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      double double0 = FastMath.acos(2109.5364);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      double double0 = FastMath.asin((-1));
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      double double0 = FastMath.asin(1.0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      double double0 = FastMath.asin((-200.382763127153));
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      double double0 = FastMath.asin(0.0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      double double0 = FastMath.asin(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      double double0 = FastMath.asin(907374237);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      double double0 = FastMath.atan2((-801.92047), 1.073741824E9);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      double double0 = FastMath.atan2(1.0, 0L);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      double double0 = FastMath.atan2(Double.POSITIVE_INFINITY, 4790.076309);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      double double0 = FastMath.atan2(0.0, 0.5463024898437905);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      double double0 = FastMath.atan2(0.0F, (-1709.526856935));
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      double double0 = FastMath.atan2(Float.NaN, 1.2214021975904614);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      double double0 = FastMath.atan2(Double.NaN, Double.NaN);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      double double0 = FastMath.atan2(9.220590270857665E-9, (-1437.72884654493));
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      double double0 = FastMath.atan((-8.0E298));
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      double double0 = FastMath.atan(Double.POSITIVE_INFINITY);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      double double0 = FastMath.tan(Double.NEGATIVE_INFINITY);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      double double0 = FastMath.tan(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      double double0 = FastMath.tan(0.0);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      double double0 = FastMath.cos(1024.0);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      double double0 = FastMath.cos((-1284.8131172329652));
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      double double0 = FastMath.cos(1675.566);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      double double0 = FastMath.cos(Double.POSITIVE_INFINITY);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      double double0 = FastMath.cos(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      double double0 = FastMath.cos((-1.0));
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      double double0 = FastMath.sin((-222.7));
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      double double0 = FastMath.sin(7.847958390999876);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      double double0 = FastMath.sin(3.141592653589793);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      double double0 = FastMath.sin(8.0E298);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      double double0 = FastMath.sin(Double.POSITIVE_INFINITY);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      double double0 = FastMath.sin(0L);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      double double0 = FastMath.sin(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      double double0 = FastMath.tan(1.2120220747050398E83);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      double double0 = FastMath.cos(3.707923578253967E22);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      double double0 = FastMath.tan((-8.0E298));
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      double double0 = FastMath.tan(907374237);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      double double0 = FastMath.tan((-0.05417713522911072));
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      double double0 = FastMath.tan((-4790.076309));
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      double double0 = FastMath.sin((-1.0));
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      double double0 = FastMath.pow(1.5, Double.NaN);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      double double0 = FastMath.pow((-1.0), 2755.3949487);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      double double0 = FastMath.pow((-2673), Double.POSITIVE_INFINITY);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      double double0 = FastMath.pow(Double.POSITIVE_INFINITY, (-134.497));
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      double double0 = FastMath.pow(Double.POSITIVE_INFINITY, 3.038148934955084E-7);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      double double0 = FastMath.pow(0.0F, 1.366701124672226);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      double double0 = FastMath.pow(0L, (-1846.0));
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      double double0 = FastMath.pow(Double.NaN, (-3575.0));
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      double double0 = FastMath.pow(1.5707963267948966, 0.0);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      double double0 = FastMath.log1p(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      double double0 = FastMath.log1p(Double.POSITIVE_INFINITY);
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      double double0 = FastMath.log1p(945.547658225108);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      double double0 = FastMath.log1p((-1.0));
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      double double0 = FastMath.pow((-1.0), 15.0);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      double double0 = FastMath.log(1.0);
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      double double0 = FastMath.log1p((-0.05417713522911072));
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      double double0 = FastMath.log10(0.0);
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      double double0 = FastMath.log(0.0F);
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      double double0 = FastMath.acosh(Double.POSITIVE_INFINITY);
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      double double0 = FastMath.log1p((-1002.606));
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      double double0 = FastMath.expm1((-6.032174644509064E-23));
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      double double0 = FastMath.expm1(0.0);
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      double double0 = FastMath.expm1(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      double double0 = FastMath.pow(5.261908426442558E-7, 5.261908426442558E-7);
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      double double0 = FastMath.expm1((-2.8187132102007107E134));
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      double double0 = FastMath.signum(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      double double0 = FastMath.signum(724.6);
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      double double0 = FastMath.signum((-1.0));
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      double double0 = FastMath.signum(0.0F);
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      double double0 = FastMath.atanh(0.1428571343421936);
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      double double0 = FastMath.atanh((-2071.0));
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      double double0 = FastMath.atanh(0.0);
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      double double0 = FastMath.asinh(0.07073719799518585);
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      double double0 = FastMath.asinh(0.1428571343421936);
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      double double0 = FastMath.asinh(0L);
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      double double0 = FastMath.asinh(0.8775825500488281);
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      double double0 = FastMath.tanh((-1.0));
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      double double0 = FastMath.tanh(5.669184079525E-24);
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      double double0 = FastMath.tanh((-8.0E298));
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      double double0 = FastMath.tanh(3263.46784222);
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      double double0 = FastMath.tanh(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      double double0 = FastMath.tanh(0.0F);
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      double double0 = FastMath.sinh(0.1428571343421936);
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      double double0 = FastMath.sinh(0.0F);
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      double double0 = FastMath.sinh((-1.0));
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      double double0 = FastMath.sinh(3274.65111398224);
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      double double0 = FastMath.sinh(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      double double0 = FastMath.cosh((-0.9503544617539021));
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      double double0 = FastMath.cosh((-6504.611853538703));
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      double double0 = FastMath.cosh(3174L);
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      double double0 = FastMath.cosh(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      double double0 = FastMath.cosh(2.319235767811865);
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      double double0 = FastMath.acosh((-0.05423020375840629));
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      double double0 = FastMath.asinh((-3169.45314625));
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      double double0 = FastMath.sinh((-310.27583011413225));
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      double double0 = FastMath.log10(2911.8201);
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      double double0 = FastMath.random();
      double double1 = FastMath.random();
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      int int0 = FastMath.round(0.0F);
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      double double0 = FastMath.cos(0.0F);
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      double double0 = FastMath.expm1(984.138203);
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      double double0 = FastMath.toDegrees(10);
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      double double0 = FastMath.toRadians((-1391L));
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      double double0 = FastMath.sqrt(2744.2684148);
  }
}
