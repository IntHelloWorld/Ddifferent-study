* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.lang3.time.FastDateFormat
* Starting client
* Connecting to master process on port 9244
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/patch3-Lang-38-Jaid/Lang_38_3_jaid/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.lang3.time.FastDateFormat
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 457
  - Branch 448
  - Exception 0
  - MutationFactory 850
  - Output 163
  - Method 78
  - MethodNoException 78
  - CBranchFitnessFactory 448
* Using seed 1585556002514
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%][Progress:====>                         16%] [Cov:=>                                 4%][Progress:====>                         16%] [Cov:==>                                8%][Progress:====>                         16%] [Cov:=======>                           21%][Progress:====>                         16%] [Cov:========>                          24%][Progress:====>                         16%] [Cov:========>                          25%][Progress:====>                         16%] [Cov:=========>                         28%][Progress:=====>                        18%] [Cov:=>                                 3%][Progress:=====>                        18%] [Cov:==>                                6%][Progress:=====>                        18%] [Cov:======>                            19%][Progress:=====>                        18%] [Cov:=======>                           21%][Progress:=====>                        18%] [Cov:=======>                           22%][Progress:=====>                        18%] [Cov:========>                          24%][Progress:======>                       20%] [Cov:=>                                 5%][Progress:======>                       20%] [Cov:===>                               10%][Progress:======>                       20%] [Cov:=======>                           22%][Progress:======>                       21%] [Cov:=========>                         26%][Progress:======>                       21%] [Cov:=========>                         27%][Progress:======>                       21%] [Cov:=========>                         28%][Progress:======>                       21%] [Cov:==========>                        29%][Progress:======>                       21%] [Cov:===========>                       33%][Progress:======>                       21%] [Cov:============>                      36%][Progress:======>                       23%] [Cov:>                                  2%][Progress:======>                       23%] [Cov:==>                                6%][Progress:======>                       23%] [Cov:======>                            18%][Progress:======>                       23%] [Cov:=======>                           21%][Progress:======>                       23%] [Cov:========>                          25%][Progress:======>                       23%] [Cov:==========>                        29%][Progress:=======>                      26%] [Cov:==>                                7%][Progress:=======>                      26%] [Cov:====>                              13%][Progress:=======>                      26%] [Cov:=========>                         26%][Progress:========>                     28%] [Cov:===========>                       32%][Progress:========>                     28%] [Cov:===========>                       33%][Progress:========>                     28%] [Cov:===========>                       34%][Progress:========>                     28%] [Cov:============>                      35%][Progress:========>                     28%] [Cov:=============>                     39%][Progress:=========>                    30%] [Cov:==>                                6%][Progress:=========>                    30%] [Cov:====>                              12%][Progress:=========>                    30%] [Cov:========>                          24%][Progress:=========>                    30%] [Cov:==========>                        29%][Progress:=========>                    30%] [Cov:==========>                        30%][Progress:=========>                    30%] [Cov:==========>                        31%][Progress:=========>                    30%] [Cov:===========>                       32%][Progress:=========>                    30%] [Cov:============>                      37%][Progress:=========>                    31%] [Cov:=>                                 4%][Progress:=========>                    31%] [Cov:==>                                8%][Progress:=========>                    31%] [Cov:=======>                           21%][Progress:=========>                    31%] [Cov:========>                          24%][Progress:=========>                    31%] [Cov:========>                          25%][Progress:=========>                    31%] [Cov:==========>                        29%][Progress:=========>                    31%] [Cov:==========>                        30%][Progress:=========>                    31%] [Cov:===========>                       34%][Progress:=========>                    31%] [Cov:============>                      35%][Progress:=========>                    31%] [Cov:=============>                     39%][Progress:=========>                    31%] [Cov:==============>                    41%][Progress:=========>                    33%] [Cov:==>                                7%][Progress:=========>                    33%] [Cov:====>                              13%][Progress:=========>                    33%] [Cov:========>                          25%][Progress:=========>                    33%] [Cov:===========>                       32%][Progress:=========>                    33%] [Cov:===========>                       33%][Progress:=========>                    33%] [Cov:===========>                       34%][Progress:=========>                    33%] [Cov:=============>                     38%][Progress:==========>                   35%] [Cov:=>                                 5%][Progress:==========>                   35%] [Cov:===>                               10%][Progress:==========>                   35%] [Cov:========>                          23%][Progress:==========>                   35%] [Cov:=========>                         27%][Progress:==========>                   35%] [Cov:=========>                         28%][Progress:==========>                   35%] [Cov:==========>                        29%][Progress:==========>                   35%] [Cov:===========>                       32%][Progress:==========>                   36%] [Cov:=>                                 5%][Progress:==========>                   36%] [Cov:===>                               11%][Progress:==========>                   36%] [Cov:========>                          23%][Progress:==========>                   36%] [Cov:=========>                         28%][Progress:==========>                   36%] [Cov:==========>                        29%][Progress:==========>                   36%] [Cov:===========>                       33%][Progress:==========>                   36%] [Cov:===========>                       34%][Progress:===========>                  38%] [Cov:=>                                 5%][Progress:===========>                  38%] [Cov:===>                               10%][Progress:===========>                  38%] [Cov:========>                          23%][Progress:===========>                  38%] [Cov:=========>                         28%][Progress:===========>                  38%] [Cov:===========>                       32%][Progress:===========>                  38%] [Cov:============>                      36%][Progress:============>                 40%] [Cov:=>                                 5%][Progress:============>                 40%] [Cov:===>                               10%][Progress:============>                 40%] [Cov:=======>                           22%][Progress:============>                 40%] [Cov:=========>                         26%][Progress:============>                 40%] [Cov:=========>                         27%][Progress:============>                 40%] [Cov:=========>                         28%][Progress:============>                 40%] [Cov:===========>                       33%][Progress:============>                 40%] [Cov:===========>                       34%][Progress:============>                 40%] [Cov:=============>                     38%][Progress:============>                 40%] [Cov:=============>                     39%][Progress:============>                 41%] [Cov:==========>                        31%][Progress:============>                 41%] [Cov:===========>                       32%][Progress:============>                 41%] [Cov:=============>                     38%][Progress:============>                 41%] [Cov:=============>                     39%][Progress:============>                 41%] [Cov:==============>                    40%][Progress:============>                 43%] [Cov:========>                          24%][Progress:============>                 43%] [Cov:=========>                         28%][Progress:============>                 43%] [Cov:==========>                        30%][Progress:============>                 43%] [Cov:============>                      35%][Progress:============>                 43%] [Cov:============>                      37%][Progress:============>                 43%] [Cov:=============>                     39%][Progress:=============>                45%] [Cov:============>                      36%][Progress:=============>                45%] [Cov:============>                      37%][Progress:=============>                45%] [Cov:=============>                     38%][Progress:=============>                46%] [Cov:============>                      37%][Progress:=============>                46%] [Cov:=============>                     39%][Progress:==============>               48%] [Cov:=====================>             61%][Progress:===============>              50%] [Cov:=====================>             60%][Progress:===============>              50%] [Cov:=====================>             61%][Progress:===============>              51%] [Cov:=====================>             61%][Progress:===============>              51%] [Cov:=====================>             62%][Progress:===============>              53%] [Cov:=====================>             61%][Progress:===============>              53%] [Cov:=====================>             62%][Progress:================>             56%] [Cov:=====================>             62%][Progress:=================>            58%] [Cov:=====================>             61%][Progress:=================>            58%] [Cov:=====================>             62%][Progress:==================>           60%] [Cov:=====================>             61%][Progress:==================>           60%] [Cov:=====================>             62%][Progress:==================>           63%] [Cov:=====================>             62%][Progress:===================>          65%] [Cov:=====================>             61%][Progress:===================>          65%] [Cov:=====================>             62%][Progress:===================>          66%] [Cov:=====================>             61%][Progress:===================>          66%] [Cov:=====================>             62%][Progress:====================>         68%] [Cov:=====================>             61%][Progress:====================>         68%] [Cov:=====================>             62%][Progress:=====================>        70%] [Cov:=====================>             62%][Progress:=====================>        70%] [Cov:======================>            63%][Progress:=====================>        71%] [Cov:=====================>             62%][Progress:=====================>        73%] [Cov:=====================>             62%][Progress:======================>       75%] [Cov:======================>            63%][Progress:======================>       76%] [Cov:======================>            63%][Progress:======================>       76%] [Cov:======================>            63%][Progress:=======================>      78%] [Cov:======================>            63%][Progress:========================>     80%] [Cov:======================>            63%][Progress:========================>     81%] [Cov:======================>            63%][Progress:========================>     83%] [Cov:======================>            63%][Progress:=========================>    85%] [Cov:=====================>             62%][Progress:=========================>    85%] [Cov:======================>            63%][Progress:=========================>    85%] [Cov:======================>            63%][Progress:=========================>    85%] [Cov:======================>            64%][Progress:=========================>    86%] [Cov:======================>            64%][Progress:==========================>   88%] [Cov:======================>            63%][Progress:===========================>  90%] [Cov:======================>            64%][Progress:===========================>  91%] [Cov:======================>            63%][Progress:===========================>  91%] [Cov:======================>            64%][Progress:===========================>  93%] [Cov:======================>            64%][Progress:============================> 95%] [Cov:======================>            64%][Progress:============================> 96%] [Cov:======================>            64%][Progress:=============================>98%] [Cov:======================>            64%][Progress:=============================>98%] [Cov:======================>            64%][Progress:==============================100%] [Cov:======================>            64%][Progress:==============================100%] [Cov:======================>            64%][Progress:==============================100%] [Cov:======================>            64%][Progress:==============================100%] [Cov:======================>            65%]
* Search finished after 63s and 12 generations, 4383 statements, best individual has fitness: 979.1876084799019
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 82%
* Total number of goals: 457
* Number of covered goals: 376
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 76%
* Total number of goals: 448
* Number of covered goals: 340
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 26
* Number of covered goals: 26
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 60%
* Total number of goals: 850
* Number of covered goals: 512
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 39%
* Total number of goals: 163
* Number of covered goals: 63
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 49%
* Total number of goals: 78
* Number of covered goals: 38
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 47%
* Total number of goals: 78
* Number of covered goals: 37
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 74%
* Total number of goals: 448
* Number of covered goals: 330
* Generated 84 tests with total length 244
* Resulting test suite's coverage: 66% (average coverage for all fitness functions)
* Compiling and checking tests
* Writing JUnit test case 'FastDateFormat_ESTest' to evosuite-tests
* Done!

* Computation finished
