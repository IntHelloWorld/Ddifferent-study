* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.math.linear.EigenDecompositionImpl
* Starting client
* Connecting to master process on port 5746
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/patch4-Math-80-CapGen-plausible/Math_80_4-plausible_capgen/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math.linear.EigenDecompositionImpl
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 851
  - Branch 428
  - Exception 0
  - MutationFactory 212
  - Output 28
  - Method 17
  - MethodNoException 17
  - CBranchFitnessFactory 428
* Using seed 1585398039494
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%][Progress:=====>                        18%] [Cov:>                                  0%][Progress:=====>                        18%] [Cov:>                                  1%][Progress:=====>                        18%] [Cov:====>                              13%][Progress:======>                       20%] [Cov:>                                  0%][Progress:======>                       20%] [Cov:>                                  1%][Progress:======>                       20%] [Cov:====>                              13%][Progress:======>                       21%] [Cov:>                                  0%][Progress:======>                       21%] [Cov:====>                              12%][Progress:======>                       23%] [Cov:>                                  0%][Progress:======>                       23%] [Cov:>                                  1%][Progress:======>                       23%] [Cov:====>                              13%][Progress:======>                       23%] [Cov:====>                              14%][Progress:=======>                      25%] [Cov:>                                  0%][Progress:=======>                      25%] [Cov:====>                              13%][Progress:=======>                      25%] [Cov:====>                              14%][Progress:=======>                      26%] [Cov:>                                  0%][Progress:=======>                      26%] [Cov:>                                  1%][Progress:=======>                      26%] [Cov:====>                              13%][Progress:========>                     28%] [Cov:>                                  0%][Progress:========>                     28%] [Cov:>                                  1%][Progress:========>                     28%] [Cov:====>                              13%][Progress:=========>                    30%] [Cov:>                                  0%][Progress:=========>                    30%] [Cov:>                                  1%][Progress:=========>                    30%] [Cov:====>                              13%][Progress:=========>                    31%] [Cov:====>                              13%][Progress:=========>                    31%] [Cov:====>                              14%][Progress:=========>                    33%] [Cov:>                                  0%][Progress:=========>                    33%] [Cov:>                                  1%][Progress:=========>                    33%] [Cov:====>                              13%][Progress:=========>                    33%] [Cov:====>                              14%][Progress:==========>                   35%] [Cov:====>                              13%][Progress:==========>                   36%] [Cov:>                                  0%][Progress:==========>                   36%] [Cov:>                                  1%][Progress:==========>                   36%] [Cov:====>                              13%][Progress:==========>                   36%] [Cov:====>                              14%][Progress:===========>                  38%] [Cov:>                                  0%][Progress:===========>                  38%] [Cov:>                                  1%][Progress:===========>                  38%] [Cov:====>                              13%][Progress:===========>                  38%] [Cov:====>                              14%][Progress:============>                 40%] [Cov:>                                  0%][Progress:============>                 40%] [Cov:>                                  1%][Progress:============>                 40%] [Cov:====>                              13%][Progress:============>                 41%] [Cov:====>                              12%][Progress:============>                 41%] [Cov:====>                              13%][Progress:============>                 43%] [Cov:>                                  0%][Progress:============>                 43%] [Cov:>                                  1%][Progress:============>                 43%] [Cov:====>                              13%][Progress:============>                 43%] [Cov:====>                              14%][Progress:=============>                46%] [Cov:>                                  2%][Progress:=============>                46%] [Cov:=>                                 3%][Progress:=============>                46%] [Cov:=====>                             16%][Progress:=============>                46%] [Cov:=====>                             17%][Progress:=============>                46%] [Cov:======>                            19%][Progress:=============>                46%] [Cov:=======>                           21%][Progress:==============>               48%] [Cov:>                                  2%][Progress:==============>               48%] [Cov:=>                                 3%][Progress:==============>               48%] [Cov:=====>                             15%][Progress:==============>               48%] [Cov:=====>                             17%][Progress:==============>               48%] [Cov:======>                            19%][Progress:===============>              50%] [Cov:>                                  2%][Progress:===============>              50%] [Cov:=>                                 3%][Progress:===============>              50%] [Cov:=====>                             16%][Progress:===============>              50%] [Cov:=====>                             17%][Progress:===============>              50%] [Cov:======>                            19%][Progress:===============>              50%] [Cov:=======>                           20%][Progress:===============>              50%] [Cov:=======>                           21%][Progress:===============>              51%] [Cov:>                                  2%][Progress:===============>              51%] [Cov:=>                                 3%][Progress:===============>              51%] [Cov:=====>                             16%][Progress:===============>              51%] [Cov:=====>                             17%][Progress:===============>              51%] [Cov:======>                            18%][Progress:===============>              51%] [Cov:=======>                           22%][Progress:===============>              51%] [Cov:=========>                         26%][Progress:===============>              53%] [Cov:====>                              13%][Progress:===============>              53%] [Cov:====>                              14%][Progress:===============>              53%] [Cov:=======>                           21%][Progress:================>             55%] [Cov:====>                              13%][Progress:================>             55%] [Cov:====>                              14%][Progress:================>             56%] [Cov:====>                              13%][Progress:================>             56%] [Cov:=======>                           21%][Progress:=================>            58%] [Cov:====>                              14%][Progress:=================>            58%] [Cov:=====>                             15%][Progress:=================>            58%] [Cov:======>                            19%][Progress:=================>            58%] [Cov:=======>                           20%][Progress:=================>            58%] [Cov:=======>                           21%][Progress:=================>            58%] [Cov:=======>                           22%][Progress:==================>           60%] [Cov:====>                              14%][Progress:==================>           60%] [Cov:=======>                           21%][Progress:==================>           61%] [Cov:====>                              13%][Progress:==================>           61%] [Cov:======>                            19%][Progress:==================>           61%] [Cov:=======>                           20%][Progress:==================>           61%] [Cov:=======>                           21%][Progress:==================>           61%] [Cov:=======>                           22%][Progress:==================>           63%] [Cov:====>                              14%][Progress:===================>          66%] [Cov:==========>                        29%][Progress:====================>         68%] [Cov:=========>                         28%][Progress:====================>         68%] [Cov:==========>                        29%][Progress:=====================>        70%] [Cov:=========>                         28%][Progress:=====================>        70%] [Cov:==========>                        29%][Progress:=====================>        71%] [Cov:===========>                       32%][Progress:=====================>        71%] [Cov:============>                      35%][Progress:=====================>        71%] [Cov:==============>                    42%][Progress:=====================>        71%] [Cov:===============>                   45%][Progress:=====================>        73%] [Cov:=========>                         28%][Progress:=====================>        73%] [Cov:==========>                        29%][Progress:======================>       75%] [Cov:===========>                       33%][Progress:======================>       75%] [Cov:============>                      36%][Progress:======================>       75%] [Cov:==============>                    42%][Progress:======================>       75%] [Cov:===============>                   43%][Progress:======================>       75%] [Cov:===============>                   44%][Progress:======================>       75%] [Cov:================>                  47%][Progress:=======================>      78%] [Cov:=================>                 49%][Progress:========================>     81%] [Cov:===============>                   45%][Progress:========================>     83%] [Cov:===============>                   44%][Progress:========================>     83%] [Cov:===============>                   45%][Progress:========================>     83%] [Cov:=================>                 49%][Progress:=========================>    86%] [Cov:=================>                 49%][Progress:==========================>   88%] [Cov:===============>                   44%][Progress:==========================>   88%] [Cov:===============>                   45%][Progress:==========================>   88%] [Cov:=================>                 49%][Progress:===========================>  90%] [Cov:=================>                 49%][Progress:===========================>  91%] [Cov:=================>                 49%][Progress:===========================>  93%] [Cov:===============>                   45%][Progress:===========================>  93%] [Cov:=================>                 49%][Progress:============================> 95%] [Cov:=================>                 49%][Progress:============================> 96%] [Cov:=================>                 49%][Progress:=============================>98%] [Cov:=================>                 49%][Progress:==============================100%] [Cov:=================>                 49%][Progress:==============================100%] [Cov:=================>                 50%]
* Search finished after 63s and 5 generations, 6889 statements, best individual has fitness: 1821.9323070133657
* Minimizing test suite
[MASTER] 20:23:26.875 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 61%
* Total number of goals: 851
* Number of covered goals: 523
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 48%
* Total number of goals: 428
* Number of covered goals: 204
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 9
* Number of covered goals: 9
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 47%
* Total number of goals: 212
* Number of covered goals: 99
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 14%
* Total number of goals: 28
* Number of covered goals: 4
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 47%
* Total number of goals: 17
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 35%
* Total number of goals: 17
* Number of covered goals: 6
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 48%
* Total number of goals: 428
* Number of covered goals: 204
* Generated 22 tests with total length 526
* Resulting test suite's coverage: 50% (average coverage for all fitness functions)
* Compiling and checking tests
* Writing JUnit test case 'EigenDecompositionImpl_ESTest' to evosuite-tests
* Done!

* Computation finished
