/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 28 17:27:19 GMT 2020
 */

package org.apache.commons.lang.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.Writer;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.NoSuchElementException;
import org.apache.commons.lang.text.StrBuilder;
import org.apache.commons.lang.text.StrMatcher;
import org.apache.commons.lang.text.StrTokenizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StrBuilder_ESTest extends StrBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(28);
      StrBuilder strBuilder1 = strBuilder0.append((-794L));
      String string0 = "Mac OS X";
      StrBuilder strBuilder2 = strBuilder1.setNewLineText("Mac OS X");
      String string1 = strBuilder0.getNullText();
      int int0 = 21;
      int int1 = 10;
      String string2 = strBuilder1.midString(21, 10);
      StrBuilder strBuilder3 = strBuilder1.replaceFirst('E', 'E');
      StrBuilder strBuilder4 = strBuilder3.minimizeCapacity();
      // Undeclared exception!
      try { 
        strBuilder0.validateRange(3161, 28);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer0 = new Integer(1560);
      boolean boolean0 = linkedList0.add(integer0);
      Integer integer1 = new Integer(0);
      boolean boolean1 = linkedList0.add(integer1);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      int int0 = strBuilder0.validateRange(0, 68);
      strBuilder0.validateIndex(0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(", Legth: ");
      StrBuilder strBuilder1 = strBuilder0.deleteAll(", Legth: ");
      StringBuffer stringBuffer0 = strBuilder1.toStringBuffer();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrBuilder strBuilder2 = strBuilder1.replaceFirst("", "Bge-} g.Q5@/W_22");
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("42/B$iCrW");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("42/B$iCrW");
      StrBuilder strBuilder2 = strBuilder1.setNullText("42/B$iCrW");
      StrBuilder strBuilder3 = strBuilder2.setNewLineText("42/B$iCrW");
      int int0 = 0;
      char char0 = '`';
      StrBuilder strBuilder4 = strBuilder0.insert(0, '`');
      // Undeclared exception!
      try { 
        strBuilder3.deleteCharAt((-2185));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2185
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setQuoteChar('w');
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "");
      StrBuilder strBuilder2 = strBuilder0.append(' ');
      StrBuilder strBuilder3 = strBuilder0.append('w');
      int int0 = strBuilder0.lastIndexOf("", 1753);
      StringBuffer stringBuffer0 = new StringBuffer();
      int int1 = (-968);
      StrBuilder strBuilder4 = strBuilder2.replaceAll((StrMatcher) null, (String) null);
      // Undeclared exception!
      try { 
        strBuilder2.append(stringBuffer0, 1, (-968));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("42/B$iCrW");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("42/B$iCrW");
      StrBuilder strBuilder2 = strBuilder1.setNullText("42/B$iCrW");
      StrBuilder strBuilder3 = strBuilder2.setNewLineText((String) null);
      StrBuilder strBuilder4 = strBuilder0.insert(0, '`');
      Reader reader0 = strBuilder1.asReader();
      StrBuilder strBuilder5 = strBuilder1.deleteFirst('\\');
      StrBuilder strBuilder6 = strBuilder5.insert(0, 3207.218);
      StrBuilder strBuilder7 = strBuilder3.append(0);
      boolean boolean0 = strBuilder1.startsWith("42/B$iCrW");
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append('X');
      strBuilder0.size = 32;
      String string0 = strBuilder1.rightString(2);
      StrBuilder strBuilder2 = strBuilder0.insert(2, 101);
      int int0 = strBuilder2.lastIndexOf("8W_PKH");
      char[] charArray0 = new char[6];
      charArray0[0] = 'X';
      charArray0[1] = '5';
      charArray0[2] = 'X';
      charArray0[3] = 'p';
      charArray0[4] = 'X';
      charArray0[5] = 'X';
      StrBuilder strBuilder3 = strBuilder2.append(charArray0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid startIndex: ");
      StrBuilder strBuilder1 = strBuilder0.deleteCharAt(0);
      StrBuilder strBuilder2 = strBuilder0.trim();
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("{L");
      StrBuilder strBuilder3 = strBuilder2.deleteAll(strMatcher0);
      StrBuilder strBuilder4 = strBuilder1.deleteFirst('_');
      StrBuilder strBuilder5 = strBuilder2.append(false);
      int int0 = strBuilder5.indexOf(strMatcher0, 0);
      StrTokenizer strTokenizer0 = strBuilder5.asTokenizer();
      int int1 = strBuilder0.size();
      String string0 = strBuilder2.leftString(0);
      String string1 = strBuilder0.toString();
      int int2 = strBuilder0.indexOf("@[w}#4+6|Xb q6j6sIr", 0);
      String string2 = strBuilder1.midString(0, 267);
      StrBuilder strBuilder6 = strBuilder2.insert(0, (Object) strBuilder1);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("shCh8r");
      int int0 = strBuilder0.lastIndexOf('.');
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("shCh8r");
      int int1 = strBuilder0.lastIndexOf(strMatcher0);
      StrBuilder strBuilder1 = new StrBuilder((-1));
      String string0 = strBuilder0.getNewLineText();
      boolean boolean0 = strBuilder0.equals(strBuilder1);
      StrBuilder strBuilder2 = strBuilder1.appendNull();
      char[] charArray0 = new char[5];
      charArray0[0] = 'r';
      charArray0[1] = 'r';
      charArray0[2] = '.';
      charArray0[3] = 'r';
      charArray0[4] = '.';
      StrBuilder strBuilder3 = strBuilder0.insert(0, charArray0);
      int int2 = strBuilder0.lastIndexOf('r');
      boolean boolean1 = strBuilder1.equals((Object) strBuilder2);
      StrBuilder strBuilder4 = new StrBuilder("shCh8r");
      StrBuilder strBuilder5 = strBuilder4.deleteAll('F');
      StrBuilder strBuilder6 = strBuilder2.ensureCapacity(1);
      StrBuilder strBuilder7 = strBuilder1.setNullText("w8Gq#HD/?>");
      StrBuilder strBuilder8 = strBuilder1.replaceFirst('~', 'A');
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.insert(0, (char[]) null, 0, 0);
      String string0 = strBuilder1.toString();
      char char0 = 'o';
      StrBuilder strBuilder2 = strBuilder0.trim();
      StrBuilder strBuilder3 = strBuilder0.deleteAll('o');
      // Undeclared exception!
      try { 
        strBuilder3.append(strBuilder0, 2767, 2767);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = '?';
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      Object object0 = linkedList0.pollLast();
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray1 = strBuilder0.toCharArray();
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      int int0 = 34;
      StrBuilder strBuilder0 = new StrBuilder(34);
      char[] charArray0 = new char[6];
      charArray0[0] = '(';
      charArray0[1] = 'P';
      charArray0[2] = 'h';
      charArray0[3] = '+';
      char char0 = 'R';
      charArray0[4] = 'R';
      charArray0[5] = 'g';
      strBuilder0.buffer = charArray0;
      char char1 = 'f';
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('f');
      StrBuilder strBuilder2 = strBuilder0.setLength(34);
      String string0 = strBuilder2.toString();
      String string1 = strBuilder1.substring(0, 0);
      int int1 = strBuilder2.lastIndexOf(']');
      boolean boolean0 = strBuilder1.equals((Object) strBuilder0);
      // Undeclared exception!
      try { 
        strBuilder2.charAt((-1125));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1125
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.length();
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      String string0 = "OS/2";
      StrBuilder strBuilder0 = new StrBuilder("OS/2");
      boolean boolean0 = strBuilder0.isEmpty();
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrBuilder strBuilder2 = strBuilder0.setNewLineText("\")G_^V3'N`");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      boolean boolean1 = strBuilder2.contains(strMatcher0);
      int int0 = (-385);
      char char0 = 'M';
      StrBuilder strBuilder3 = strBuilder0.deleteFirst('M');
      StringBuffer stringBuffer0 = new StringBuffer("\")G_^V3'N`");
      int int1 = 0;
      // Undeclared exception!
      try { 
        strBuilder3.append(stringBuffer0, (-3004), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(9);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      boolean boolean0 = strBuilder1.isEmpty();
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      int int0 = strBuilder0.size();
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      char char0 = 'o';
      int int1 = strBuilder0.lastIndexOf('o');
      String string0 = "";
      boolean boolean0 = strBuilder1.startsWith("");
      StrBuilder strBuilder2 = strBuilder0.append((-1));
      // Undeclared exception!
      try { 
        strBuilder2.insert(5531, (-1L));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 5531
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = new StrBuilder("");
      StrBuilder strBuilder2 = strBuilder1.insert(0, "I3Z8^?oQ_/PM]4-");
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder1);
      char[] charArray0 = new char[7];
      charArray0[0] = 'D';
      charArray0[1] = 'g';
      charArray0[2] = 'L';
      charArray0[3] = 'G';
      charArray0[4] = 'C';
      charArray0[5] = 'q';
      charArray0[6] = 'm';
      // Undeclared exception!
      try { 
        strBuilder2.append(charArray0, 69, Integer.MAX_VALUE);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 2147483647
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      int int0 = 0;
      char char0 = strBuilder0.charAt(0);
      int int1 = 92;
      String string0 = strBuilder0.rightString(92);
      int int2 = (-2105);
      int int3 = 729;
      String string1 = strBuilder0.midString((-2105), 729);
      StrBuilder strBuilder1 = strBuilder0.append("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrBuilder strBuilder2 = strBuilder1.replaceFirst("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", "!:d ) zr");
      StrTokenizer strTokenizer0 = strBuilder1.asTokenizer();
      char[] charArray0 = new char[4];
      charArray0[0] = 'I';
      charArray0[1] = 'I';
      charArray0[2] = '!';
      charArray0[3] = 'I';
      // Undeclared exception!
      try { 
        strBuilder1.insert(633, charArray0, 0, 633);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 633
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(108);
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      strBuilder0.validateIndex(0);
      char[] charArray0 = new char[6];
      StrBuilder strBuilder2 = strBuilder1.insert(0, Integer.MAX_VALUE);
      charArray0[0] = 'j';
      charArray0[1] = 'j';
      charArray0[2] = '\'';
      char char0 = 'K';
      char[] charArray1 = new char[3];
      charArray1[0] = 'j';
      charArray1[1] = 'K';
      charArray1[2] = '\'';
      // Undeclared exception!
      try { 
        strBuilder1.append(charArray1, (-2360), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      LinkedList<StrBuilder> linkedList0 = new LinkedList<StrBuilder>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "U_M6- V{eP!K2OBX/Q");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      int int1 = strBuilder0.indexOf(strMatcher0, 0);
      char[] charArray0 = new char[2];
      charArray0[0] = 'b';
      charArray0[1] = '^';
      // Undeclared exception!
      try { 
        strBuilder1.insert(0, charArray0, 0, (-84));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: -84
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      char[] charArray0 = strBuilder0.getChars((char[]) null);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray1 = new char[2];
      charArray1[0] = 'u';
      charArray1[1] = 'n';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray1, (-692), 39);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      char[] charArray0 = strBuilder0.getChars((char[]) null);
      char[] charArray1 = new char[2];
      charArray1[0] = 'u';
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StringBuffer stringBuffer0 = new StringBuffer();
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) stringBuffer0);
      Writer writer1 = strBuilder_StrBuilderWriter0.append((CharSequence) stringBuffer0);
      strBuilder_StrBuilderWriter0.close();
      StrMatcher strMatcher0 = StrMatcher.charMatcher('>');
      String string0 = "Windows 9";
      int int0 = (-2222);
      // Undeclared exception!
      try { 
        strBuilder0.replace(strMatcher0, "Windows 9", 353, (-2222), 32);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid length: ");
      int int0 = strBuilder0.length();
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      String string0 = "lh~";
      StrBuilder strBuilder0 = new StrBuilder("lh~");
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity((-1617));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      strBuilder_StrBuilderReader0.reset();
      char[] charArray0 = new char[6];
      char char0 = '0';
      charArray0[1] = '';
      charArray0[2] = '9';
      charArray0[3] = '6';
      charArray0[5] = '[';
      int int1 = 0;
      // Undeclared exception!
      try { 
        strBuilder1.append(charArray0, 0, 97);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 97
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.class.version");
      char char0 = 'P';
      boolean boolean0 = strBuilder0.startsWith((String) null);
      String string0 = strBuilder0.toString();
      StrBuilder strBuilder1 = strBuilder0.append((Object) null);
      int int0 = 0;
      StrBuilder strBuilder2 = strBuilder1.insert(0, 0);
      String string1 = strBuilder0.substring(0, 0);
      StringBuffer stringBuffer0 = new StringBuffer("");
      int int1 = 1;
      String string2 = "ll65(ZJ#(";
      char[] charArray0 = new char[7];
      charArray0[0] = 'P';
      charArray0[1] = 'P';
      // Undeclared exception!
      try { 
        stringBuffer0.append((CharSequence) "java.class.version", 0, (-2));
      } catch(IndexOutOfBoundsException e) {
         //
         // start 0, end -2, s.length() 18
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("PQ`r");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("PQ`r");
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher("cM^-{]h");
      String[] stringArray0 = strBuilder_StrBuilderTokenizer0.getTokenArray();
      int int0 = 0;
      int int1 = strBuilder0.indexOf(strMatcher0, 0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
      String string0 = "length must be valid";
      StrBuilder strBuilder2 = strBuilder1.replaceAll(strMatcher2, "length must be valid");
      int int2 = strBuilder0.capacity();
      String string1 = strBuilder0.substring(0, 0);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-957), (-1.0F));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -957
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("~+&Zl");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      int int0 = (-3807);
      int int1 = strBuilder0.indexOf(strMatcher0, (-3807));
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "3T!Gw)c2G#sJm|#3C)");
      String string0 = strBuilder_StrBuilderTokenizer0.previousToken();
      // Undeclared exception!
      try { 
        strBuilder1.validateRange(1678, (-3807));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-37);
      LinkedList<StrBuilder> linkedList0 = new LinkedList<StrBuilder>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "U_M6- V{eP!K2OBX/Q");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      int int1 = strBuilder0.indexOf(strMatcher0, (-37));
      char[] charArray0 = new char[2];
      charArray0[1] = 'b';
      charArray0[1] = '^';
      // Undeclared exception!
      try { 
        strBuilder1.insert((-37), charArray0, (-37), (-84));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -37
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char char0 = '2';
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('2');
      int int0 = 0;
      char[] charArray0 = new char[0];
      StrBuilder strBuilder2 = strBuilder0.insert(0, charArray0);
      StrBuilder strBuilder3 = strBuilder2.appendNull();
      StrBuilder strBuilder4 = strBuilder3.append((Object) strBuilder0);
      StrTokenizer strTokenizer0 = strBuilder2.asTokenizer();
      int int1 = (-1671);
      // Undeclared exception!
      try { 
        strBuilder3.insert((-1671), 's');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1671
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      int int0 = (-553);
      StrBuilder strBuilder0 = new StrBuilder((-553));
      StrBuilder strBuilder1 = new StrBuilder("El+,k .");
      StrBuilder strBuilder2 = strBuilder1.appendPadding((-553), 'u');
      StrBuilder strBuilder3 = strBuilder0.deleteFirst('u');
      StrBuilder strBuilder4 = strBuilder2.setNullText((String) null);
      StrBuilder strBuilder5 = strBuilder4.appendFixedWidthPadLeft((Object) null, (-553), 'u');
      boolean boolean0 = strBuilder0.equals(strBuilder1);
      int int1 = strBuilder0.size();
      int int2 = 665;
      char[] charArray0 = null;
      // Undeclared exception!
      try { 
        strBuilder5.insert(665, (char[]) null, (-553), 4);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 665
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.reverse();
      StrBuilder strBuilder2 = strBuilder0.trim();
      int int0 = strBuilder2.hashCode();
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('|');
      StrBuilder strBuilder3 = strBuilder2.replaceFirst((StrMatcher) strMatcher_CharMatcher0, "");
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append("");
      boolean boolean0 = strBuilder0.isEmpty();
      StrBuilder strBuilder2 = strBuilder1.append(false);
      // Undeclared exception!
      try { 
        strBuilder0.charAt((-2048));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2048
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("startIndex must be valid");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      StrTokenizer strTokenizer1 = StrTokenizer.getTSVInstance();
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("startIndex must be valid");
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("startIndex must be valid");
      String string0 = strBuilder_StrBuilderTokenizer0.toString();
      int int1 = strBuilder0.indexOf((StrMatcher) strMatcher_StringMatcher0, 1170);
      StrMatcher strMatcher2 = StrMatcher.charMatcher('}');
      StringBuffer stringBuffer0 = new StringBuffer(18);
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder2 = strBuilder1.append((double) 18);
      Reader reader0 = strBuilder2.asReader();
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadRight(0, 18, ',');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder3.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(39);
      String string1 = strBuilder0.substring(0);
      StrBuilder strBuilder4 = strBuilder1.appendFixedWidthPadLeft(3654, 2945, '}');
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      String string0 = "b$,T$y)Xufz8.c\\u";
      StrBuilder strBuilder0 = new StrBuilder(string0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrBuilder strBuilder1 = strBuilder0.insert(0, true);
      StrMatcher strMatcher0 = StrMatcher.charMatcher(':');
      int int0 = strBuilder1.lastIndexOf(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.replaceAll("Z&F)Ms'&bCa%E;7r", "");
      strBuilder_StrBuilderReader0.mark((-1797));
      int int1 = strBuilder0.indexOf("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", (-1714));
      strBuilder_StrBuilderReader0.mark((-1714));
      StrBuilder strBuilder3 = strBuilder1.setNewLineText("\"&CU/B8W%");
      char[] charArray0 = strBuilder1.toCharArray();
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher(":Jv|py1zA<Y");
      StrBuilder strBuilder1 = strBuilder0.replaceAll((StrMatcher) strMatcher_StringMatcher0, "");
      StrBuilder strBuilder2 = strBuilder0.replaceFirst("", "");
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("");
      boolean boolean0 = strBuilder1.startsWith("7~^UlZCv#6ARoE(=Q|6");
      // Undeclared exception!
      try { 
        strBuilder2.setCharAt((-1558), 'Q');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1558
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2349));
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      String string0 = strBuilder0.substring(0);
      String string1 = strBuilder0.toString();
      StrBuilder strBuilder2 = strBuilder1.appendPadding((-412), 'z');
      StrBuilder strBuilder3 = strBuilder2.deleteFirst("U~g*]XYR=D6AH<SfHc.");
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder(0);
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      int int0 = 114;
      // Undeclared exception!
      try { 
        strBuilder0.insert(114, (-2653.569688134137));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 114
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      int int0 = 2206;
      int int1 = strBuilder0.lastIndexOf(strMatcher0, 2206);
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder0;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      objectArray0[2] = object0;
      objectArray0[3] = (Object) strMatcher0;
      objectArray0[4] = (Object) strBuilder0;
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.next();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.size = 0;
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder strBuilder1 = strBuilder0.appendPadding(2424, 'R');
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft((Object) strBuilder0, (-819), 'R');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      char[] charArray0 = new char[6];
      charArray0[0] = 'R';
      charArray0[1] = 'Y';
      charArray0[2] = 'R';
      charArray0[3] = 'V';
      charArray0[4] = 'R';
      charArray0[5] = 'R';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 2424, 0);
      StrBuilder strBuilder3 = strBuilder2.replaceFirst(strMatcher0, "-1Q}C+-3#-T*+i:sZ5q");
      StrBuilder strBuilder4 = strBuilder2.appendFixedWidthPadLeft((-1281), (-1281), 'R');
      StrBuilder strBuilder5 = strBuilder1.deleteAll('o');
      StrBuilder strBuilder6 = strBuilder0.appendFixedWidthPadLeft(39, (-2368), 'R');
      int int0 = strBuilder0.hashCode();
      // Undeclared exception!
      try { 
        strBuilder1.deleteCharAt(2424);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2424
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("16HLH;}");
      int int0 = strBuilder0.capacity();
      boolean boolean0 = strBuilder0.startsWith("16HLH;}");
      char[] charArray0 = new char[8];
      charArray0[0] = 't';
      charArray0[1] = '!';
      charArray0[2] = '#';
      charArray0[3] = 'V';
      charArray0[4] = 'H';
      charArray0[5] = '9';
      charArray0[6] = ',';
      charArray0[7] = '{';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("16HLH;}");
      StrBuilder strBuilder2 = strBuilder0.replaceFirst(strMatcher0, "16HLH;}");
      StrBuilder strBuilder3 = strBuilder0.replaceFirst("sP[`)P%] ;nd", "");
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-961));
      Integer integer0 = new Integer(117);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "6~5(!;hqm<'V4$hl@O");
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((Object) integer0, (-961), '?');
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("c-F?D=EI");
      char[] charArray0 = new char[4];
      charArray0[0] = '<';
      charArray0[1] = 'q';
      charArray0[2] = ';';
      charArray0[3] = 'L';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(2, 2, charArray0, 116);
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = null;
      StrBuilder strBuilder1 = strBuilder0.append((char[]) null);
      String string0 = "\")0.HNLEq}|ylsg";
      // Undeclared exception!
      try { 
        strBuilder1.delete(3, 3);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("HP-UX");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('8');
      char[] charArray0 = new char[6];
      charArray0[0] = '8';
      charArray0[1] = '8';
      charArray0[2] = '8';
      charArray0[3] = '8';
      charArray0[4] = 'r';
      charArray0[5] = '8';
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance(charArray0);
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Iterator) strTokenizer0, (String) null);
      StrBuilder strBuilder3 = strBuilder1.minimizeCapacity();
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      int int0 = 116;
      StrBuilder strBuilder0 = new StrBuilder(116);
      String string0 = "";
      // Undeclared exception!
      try { 
        strBuilder0.insert(116, "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 116
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[3];
      char char0 = 'r';
      charArray0[0] = 'r';
      char char1 = '`';
      charArray0[1] = '`';
      char char2 = 'M';
      charArray0[2] = 'M';
      int int1 = (-1927);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 0, (-1927));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: -1927
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder strBuilder1 = strBuilder0.append(1.5);
      StrBuilder strBuilder2 = strBuilder1.insert(0, (float) 0);
      StrBuilder strBuilder3 = strBuilder1.appendNewLine();
      char[] charArray0 = new char[2];
      charArray0[0] = 'f';
      charArray0[1] = '{';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      StrBuilder strBuilder4 = strBuilder1.deleteAll((StrMatcher) strMatcher_CharSetMatcher0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder3.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder3.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
      StrBuilder strBuilder5 = strBuilder1.deleteFirst((StrMatcher) strMatcher_CharSetMatcher0);
      strBuilder_StrBuilderWriter0.write(charArray0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      int int0 = (-258);
      StrBuilder strBuilder0 = new StrBuilder((-258));
      String string0 = "";
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("m.HLyvcq\"");
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      String string1 = strBuilder0.toString();
      StrMatcher strMatcher2 = StrMatcher.stringMatcher("");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "");
      StrBuilder strBuilder2 = strBuilder0.deleteAll("");
      // Undeclared exception!
      try { 
        strBuilder2.deleteCharAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1288);
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(108);
      int int0 = strBuilder_StrBuilderReader0.read();
      long long0 = strBuilder_StrBuilderReader0.skip(0L);
      StringBuffer stringBuffer0 = new StringBuffer(2636);
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 1288, 2636);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      int int0 = 286;
      StrBuilder strBuilder0 = new StrBuilder(286);
      int int1 = (-629);
      char char0 = 'S';
      StrBuilder strBuilder1 = strBuilder0.appendPadding((-629), 'S');
      String string0 = strBuilder0.leftString(286);
      StrBuilder strBuilder2 = strBuilder0.append('B');
      String string1 = "";
      StringBuffer stringBuffer0 = new StringBuffer("");
      StrBuilder strBuilder3 = strBuilder2.append(stringBuffer0);
      Reader reader0 = strBuilder3.asReader();
      StrBuilder strBuilder4 = strBuilder2.replaceAll("java.specification.version", "java.specification.version");
      char[] charArray0 = strBuilder0.toCharArray();
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(48);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 48
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) "", 0, '#');
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight(0, 0, 'e');
      char[] charArray0 = new char[8];
      charArray0[0] = '#';
      charArray0[1] = '#';
      charArray0[2] = '#';
      charArray0[3] = '#';
      charArray0[4] = '#';
      charArray0[5] = '#';
      charArray0[6] = '#';
      charArray0[7] = '#';
      strBuilder1.getChars(0, 0, charArray0, 0);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder1.lastIndexOf(strMatcher0, 0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = 920;
      StrBuilder strBuilder1 = new StrBuilder(920);
      char char0 = 'C';
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight((Object) strBuilder1, 920, 'C');
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[3];
      charArray0[0] = '6';
      charArray0[1] = 'Y';
      charArray0[2] = '\\';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("");
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_CharSetMatcher0, (-403));
      int int1 = strBuilder0.hashCode();
      String string0 = strBuilder0.leftString((-632));
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) "", (-1), '9');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, (-403), (-2641));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -2641
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.insert(0, (-1402.4759));
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("vA-r");
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_StringMatcher0, 0);
      StringBuffer stringBuffer0 = new StringBuffer();
      StringBuffer stringBuffer1 = stringBuffer0.reverse();
      // Undeclared exception!
      try { 
        strBuilder1.append(stringBuffer0, 0, (-1958));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) null, (String) null);
      int int0 = 494;
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        strBuilder1.appendFixedWidthPadRight(object0, 494, '\'');
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("$WmR0R");
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      Object[] objectArray0 = new Object[8];
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      objectArray0[0] = object0;
      objectArray0[1] = (Object) "$WmR0R";
      objectArray0[2] = (Object) strBuilder1;
      objectArray0[3] = (Object) "$WmR0R";
      objectArray0[4] = (Object) strBuilder1;
      objectArray0[5] = (Object) strBuilder0;
      objectArray0[6] = (Object) strBuilder0;
      objectArray0[7] = (Object) strBuilder0;
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators(objectArray0, (String) null);
      StrBuilder strBuilder3 = strBuilder0.appendNewLine();
      boolean boolean0 = strBuilder1.contains('0');
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder((-1098));
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1, 0, 0);
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("1.3");
      char[] charArray0 = null;
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher((char[]) null);
      int int0 = strBuilder2.indexOf((StrMatcher) strMatcher_StringMatcher0, 0);
      int int1 = strBuilder0.indexOf(strMatcher0, 2036);
      StrBuilder strBuilder3 = strBuilder1.deleteFirst((StrMatcher) strMatcher_StringMatcher0);
      // Undeclared exception!
      try { 
        strBuilder3.substring((-1098));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1098
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("1.3");
      char[] charArray0 = new char[8];
      charArray0[0] = 'u';
      charArray0[1] = 'r';
      charArray0[2] = 'N';
      charArray0[3] = '<';
      charArray0[4] = 'J';
      charArray0[5] = '\"';
      charArray0[6] = 'v';
      charArray0[7] = '\"';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.deleteAll((StrMatcher) strMatcher_CharSetMatcher0);
      char[] charArray1 = strBuilder0.toCharArray(0, 0);
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      int int0 = strBuilder1.indexOf((StrMatcher) strMatcher_CharSetMatcher0, 0);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      String string0 = strBuilder1.midString((-251), 0);
      StrMatcher strMatcher1 = StrMatcher.doubleQuoteMatcher();
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher(charArray1);
      int int1 = strBuilder0.lastIndexOf(strMatcher1);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(1207, 0, 'I');
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      Writer writer0 = strBuilder_StrBuilderWriter0.append(']');
      strBuilder_StrBuilderWriter0.flush();
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrBuilder strBuilder1 = strBuilder0.replace(strMatcher0, "", 0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2359));
      int int0 = strBuilder0.indexOf("", (-2359));
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1044));
      char char0 = 'b';
      int int0 = strBuilder0.indexOf('b', (-762));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.next();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteAll('6');
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) strBuilder1;
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) strBuilder0;
      objectArray0[3] = (Object) strBuilder1;
      objectArray0[4] = (Object) strBuilder1;
      StrBuilder strBuilder2 = strBuilder1.minimizeCapacity();
      StrBuilder strBuilder3 = strBuilder0.appendWithSeparators(objectArray0, "niOz@}sAx7@");
      String string0 = "";
      StrBuilder strBuilder4 = strBuilder0.setNewLineText("");
      char char0 = strBuilder4.charAt(0);
      // Undeclared exception!
      try { 
        strBuilder4.validateIndex(1751);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1751
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("WkTcp?^J");
      boolean boolean0 = strBuilder0.endsWith("=vo0vg[u s@/Gqx7H");
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("WkTcp?^J");
      StrBuilder strBuilder2 = strBuilder0.replaceFirst('Z', '[');
      StrBuilder strBuilder3 = strBuilder2.append(false);
      int int0 = (-1);
      char[] charArray0 = new char[2];
      charArray0[0] = 'Z';
      charArray0[1] = '[';
      StrBuilder strBuilder4 = strBuilder3.append(charArray0);
      // Undeclared exception!
      try { 
        strBuilder2.substring((-1), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("k-sH#DZucFlv-\"#k");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      char[] charArray0 = new char[3];
      charArray0[0] = '5';
      charArray0[1] = 'n';
      charArray0[2] = ',';
      int int0 = strMatcher0.isMatch(charArray0, (-2540), 117, 0);
      StrBuilder strBuilder2 = new StrBuilder();
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder2);
      int int1 = strBuilder3.indexOf(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[6];
      charArray0[0] = '<';
      charArray0[1] = 'b';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, (-2341), (-2341));
      charArray0[2] = 'E';
      charArray0[3] = 'T';
      charArray0[4] = 'm';
      String string0 = strBuilder0.rightString((-2341));
      charArray0[5] = '7';
      List list1 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 39, 0);
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      StrMatcher strMatcher2 = StrMatcher.stringMatcher("<YbjF)\\\r]@cXe(_Y/");
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      String string1 = strBuilder0.toString();
      StrBuilder strBuilder1 = strBuilder0.insert(0, 1.0);
      StrBuilder strBuilder2 = strBuilder0.deleteAll("java.vm.version");
      String string2 = strBuilder2.getNullText();
      StrBuilder strBuilder3 = strBuilder2.append("", 0, 0);
      StrBuilder strBuilder4 = strBuilder3.append(0);
      StrBuilder strBuilder5 = strBuilder1.append((Object) "");
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      String string0 = null;
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      int int0 = 1609;
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("eEM^F)nbI-1}Va(", "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      StrBuilder strBuilder2 = new StrBuilder(1609);
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder3 = strBuilder2.deleteAll((StrMatcher) strMatcher_TrimMatcher0);
      Reader reader0 = strBuilder2.asReader();
      // Undeclared exception!
      try { 
        strBuilder0.insert(1609, (Object) strBuilder2);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1609
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 1958;
      strBuilder0.size = 2062;
      int int1 = 32;
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(32);
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrBuilder strBuilder2 = strBuilder0.append((-1367));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      char[] charArray0 = new char[4];
      charArray0[0] = 'G';
      charArray0[1] = '=';
      charArray0[2] = '<';
      StrBuilder strBuilder3 = strBuilder2.replaceFirst("', is neither of type Map.Entry nor an Array", "', is neither of type Map.Entry nor an Array");
      charArray0[3] = 'o';
      strBuilder_StrBuilderWriter0.write(charArray0);
      int int0 = strBuilder3.lastIndexOf("', is neither of type Map.Entry nor an Array", (-1367));
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(431);
      StrBuilder strBuilder1 = strBuilder0.clear();
      char[] charArray0 = new char[9];
      charArray0[0] = 'l';
      charArray0[1] = 'n';
      charArray0[2] = 'E';
      charArray0[3] = 'M';
      charArray0[4] = 'O';
      charArray0[5] = 'u';
      charArray0[6] = 'n';
      charArray0[7] = '%';
      charArray0[8] = '3';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(431, 108, charArray0, 431);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 108
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      char[] charArray0 = new char[6];
      charArray0[0] = 'b';
      charArray0[1] = '~';
      charArray0[2] = 'v';
      charArray0[3] = 'Q';
      charArray0[4] = 't';
      charArray0[5] = 'C';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1364), (Object) strMatcher1);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1364
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2);
      int int0 = strBuilder0.validateRange(0, 0);
      StrBuilder strBuilder1 = strBuilder0.append("]X}q2");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      StrBuilder strBuilder2 = strBuilder0.append('w');
      StrBuilder strBuilder3 = strBuilder1.appendFixedWidthPadLeft((Object) "", 2, 'Z');
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("", 556, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = strBuilder0.indexOf('S', 0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(":P");
      int int0 = strBuilder0.lastIndexOf((StrMatcher) null, 4);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("=v\"6@4w~?(k3&l");
      int int0 = 0;
      String string0 = strBuilder0.rightString(0);
      int int1 = (-1980);
      StrBuilder strBuilder1 = strBuilder0.append((String) null, (-1980), (-1980));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[4];
      charArray0[0] = 'Y';
      StringBuffer stringBuffer0 = null;
      try {
        stringBuffer0 = new StringBuffer((CharSequence) null);
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.charAt(1630);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1630
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.append((String) null, 0, 115);
      int int1 = strBuilder0.lastIndexOf((String) null, 115);
      char char0 = 'W';
      StrBuilder strBuilder2 = strBuilder0.append('W');
      // Undeclared exception!
      try { 
        strBuilder2.append(strBuilder1, (-1), 9);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      char char0 = '\\';
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(0, '\\');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.append(0L);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance();
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Iterator) strBuilder_StrBuilderTokenizer0, "");
      char char0 = 'e';
      StrTokenizer strTokenizer1 = strBuilder_StrBuilderTokenizer0.setDelimiterChar('e');
      StrBuilder strBuilder3 = strBuilder1.appendWithSeparators((Iterator) strTokenizer1, "");
      StrBuilder strBuilder4 = strBuilder3.appendPadding(4, 'N');
      char[] charArray0 = new char[1];
      charArray0[0] = 'e';
      // Undeclared exception!
      try { 
        strBuilder4.insert(39, charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 39
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      int int0 = 1114;
      StrBuilder strBuilder0 = new StrBuilder(1114);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.nextToken();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      StrBuilder strBuilder1 = strBuilder0.append((-1.0));
      boolean boolean0 = strBuilder0.equals(object0);
      // Undeclared exception!
      try { 
        strBuilder0.insert(1114, (long) 1114);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1114
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      int int0 = (-424);
      StrBuilder strBuilder0 = new StrBuilder((-424));
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      int int1 = (-860);
      // Undeclared exception!
      try { 
        strBuilder1.delete((-860), (-860));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -860
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, (-1359), (-1359));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.append((String) null);
      StrBuilder strBuilder3 = strBuilder0.appendNull();
      StrBuilder strBuilder4 = strBuilder0.appendPadding(4, 'u');
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "");
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Iterator) null, "");
      StrBuilder strBuilder3 = strBuilder0.deleteFirst('1');
      char[] charArray0 = new char[6];
      charArray0[0] = '1';
      charArray0[1] = '1';
      charArray0[2] = '1';
      charArray0[3] = '1';
      charArray0[4] = '1';
      charArray0[5] = '1';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      char[] charArray1 = strBuilder3.toCharArray(0, 453);
      StrBuilder strBuilder4 = strBuilder1.replaceFirst('&', '?');
      StrBuilder strBuilder5 = strBuilder3.append((long) 453);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      int int0 = (-1275);
      StrBuilder strBuilder0 = new StrBuilder((-1275));
      // Undeclared exception!
      try { 
        strBuilder0.setLength((-1275));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1275
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      boolean boolean0 = strBuilder0.equals(object0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[7];
      charArray0[0] = '9';
      charArray0[1] = 'j';
      charArray0[2] = 'J';
      charArray0[3] = '}';
      charArray0[4] = '3';
      charArray0[5] = 'y';
      charArray0[6] = 'f';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0);
      strBuilder_StrBuilderReader0.mark(1671);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      char[] charArray0 = new char[6];
      charArray0[0] = 'b';
      charArray0[1] = '~';
      charArray0[2] = 'v';
      charArray0[3] = 'Q';
      charArray0[4] = 't';
      charArray0[5] = 'C';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrMatcher strMatcher2 = StrMatcher.charMatcher('2');
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      Writer writer0 = strBuilder0.asWriter();
      int int1 = strBuilder0.lastIndexOf("");
      // Undeclared exception!
      try { 
        strBuilder0.setLength((-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Writer writer0 = strBuilder0.asWriter();
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      char[] charArray0 = new char[8];
      charArray0[0] = 'L';
      charArray0[1] = '3';
      charArray0[2] = '(';
      charArray0[3] = '6';
      charArray0[4] = '\'';
      charArray0[5] = 'O';
      charArray0[6] = 'M';
      charArray0[7] = ' ';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher(charArray0);
      StrMatcher strMatcher3 = StrMatcher.charSetMatcher("4VN}ChU:IO)!OQ|");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "4VN}ChU:IO)!OQ|");
      boolean boolean0 = strBuilder0.endsWith((String) null);
      boolean boolean1 = strBuilder0.contains(strMatcher1);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.next();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-3352));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[4];
      charArray0[0] = 'N';
      charArray0[1] = ',';
      charArray0[2] = 'r';
      charArray0[3] = '2';
      strBuilder_StrBuilderWriter0.write(charArray0);
      boolean boolean0 = strBuilder0.endsWith("^=Ja>Miu+m#E");
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("k\"E@:<awzT&sdN");
      StrBuilder strBuilder1 = strBuilder0.append(0.0F);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      StrBuilder strBuilder2 = strBuilder1.replaceAll("uN1;i=:lY|8z", "6\"YH\"[");
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators((Collection) null, "'5d8H");
      // Undeclared exception!
      try { 
        strBuilder2.insert((-342), (-1758.271F));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -342
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1914));
      char[] charArray0 = new char[3];
      charArray0[0] = '\\';
      charArray0[1] = '';
      char char0 = '>';
      charArray0[2] = '>';
      strBuilder0.buffer = charArray0;
      String string0 = strBuilder0.midString(2, 2020);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("[sRHna`@5I8g?r%w)");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
      StrBuilder strBuilder2 = strBuilder0.setNullText("");
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('7');
      // Undeclared exception!
      try { 
        strBuilder2.replace((StrMatcher) strMatcher_CharMatcher0, "[sRHna`@5I8g?r%w)", 2020, 1305, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(44);
      StrBuilder strBuilder1 = strBuilder0.append((float) 0);
      String string0 = strBuilder1.midString(969, (-2396));
      int int0 = strBuilder0.validateRange(0, 4603);
      // Undeclared exception!
      try { 
        strBuilder0.validateRange(2771, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[8];
      charArray0[0] = ';';
      charArray0[1] = 'R';
      charArray0[2] = ';';
      charArray0[3] = '4';
      charArray0[4] = 'S';
      charArray0[5] = '3';
      charArray0[6] = 'I';
      charArray0[7] = 'N';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(116);
      String string0 = strBuilder0.midString(3673, 2);
      // Undeclared exception!
      try { 
        strBuilder0.insert(116, "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 116
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((StringBuffer) null);
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrBuilder strBuilder2 = strBuilder0.deleteAll(strMatcher0);
      StrBuilder strBuilder3 = strBuilder1.replaceAll("", "org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex((-1395));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1395
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.insert(0, 2513L);
      StrBuilder strBuilder2 = strBuilder1.deleteFirst(".e9p{H");
      StrBuilder strBuilder3 = strBuilder0.deleteAll("StrTokenizer");
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("java.util.prefs.PreferencesFactory");
      boolean boolean0 = strBuilder3.contains(strMatcher0);
      StrBuilder strBuilder4 = strBuilder3.appendFixedWidthPadLeft(0, 0, '_');
      StrMatcher strMatcher1 = StrMatcher.charMatcher('O');
      int int0 = strBuilder3.indexOf(strMatcher1);
      StrBuilder strBuilder5 = strBuilder1.deleteFirst("StrTokenizer");
      StrBuilder strBuilder6 = strBuilder5.deleteFirst('O');
      StringBuffer stringBuffer0 = new StringBuffer("StrTokenizer");
      StrBuilder strBuilder7 = strBuilder1.append(stringBuffer0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(", Length: ");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[2];
      charArray0[0] = '*';
      charArray0[1] = '}';
      strBuilder_StrBuilderWriter0.write(charArray0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.isEmpty();
      char[] charArray0 = new char[4];
      charArray0[0] = ';';
      charArray0[1] = 'o';
      charArray0[2] = '3';
      String string0 = strBuilder0.midString((-1443), 0);
      charArray0[3] = '?';
      char[] charArray1 = strBuilder0.getChars(charArray0);
      StrBuilder strBuilder1 = strBuilder0.insert(0, charArray0);
      StrBuilder strBuilder2 = strBuilder1.append(true);
      StrBuilder strBuilder3 = strBuilder1.insert(0, '3');
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0, 0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      char[] charArray0 = new char[0];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int1 = strBuilder_StrBuilderReader0.read(charBuffer0);
      int int2 = strBuilder_StrBuilderReader0.read(charArray0);
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      StrBuilder strBuilder2 = strBuilder0.insert(0, "eIzNMY0jLjqoz=");
      strBuilder_StrBuilderReader0.reset();
      StrBuilder strBuilder3 = strBuilder2.append(0.0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("W\"[");
      int int0 = 0;
      char[] charArray0 = new char[5];
      charArray0[0] = 'C';
      charArray0[1] = '(';
      charArray0[2] = 'j';
      charArray0[3] = 'u';
      charArray0[4] = 'Z';
      StrBuilder strBuilder1 = strBuilder0.insert(0, charArray0);
      StrBuilder strBuilder2 = strBuilder1.replace(0, 0, "end < start");
      StrBuilder strBuilder3 = strBuilder1.deleteFirst('j');
      int int1 = Integer.MAX_VALUE;
      // Undeclared exception!
      try { 
        strBuilder0.insert(Integer.MAX_VALUE, 0.0F);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2147483647
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      int int1 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.validateRange(1502, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(0.0);
      String string0 = "K=lp<G";
      int int0 = strBuilder0.lastIndexOf("K=lp<G");
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrBuilder strBuilder2 = strBuilder1.deleteAll('x');
      char[] charArray0 = new char[9];
      charArray0[0] = 'x';
      charArray0[1] = 'x';
      charArray0[2] = 'x';
      charArray0[3] = 'x';
      charArray0[4] = 'x';
      charArray0[5] = 'x';
      charArray0[6] = 'x';
      charArray0[7] = 'x';
      charArray0[8] = 'x';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      // Undeclared exception!
      try { 
        strBuilder1.replace(strMatcher0, "K=lp<G", (-1441), 0, 347);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1441
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[9];
      charArray0[0] = '+';
      charArray0[1] = '$';
      charArray0[2] = 'W';
      charArray0[3] = '!';
      charArray0[4] = 'i';
      charArray0[5] = '\"';
      charArray0[6] = '7';
      charArray0[7] = '-';
      charArray0[8] = '<';
      // Undeclared exception!
      try { 
        strBuilder0.insert(0, charArray0, 146, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: 146
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("1s~Vep;cVHC]");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(2737L);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrMatcher strMatcher0 = StrMatcher.stringMatcher((String) null);
      char[] charArray0 = new char[6];
      charArray0[0] = 'd';
      charArray0[1] = 'R';
      StrBuilder strBuilder1 = strBuilder0.insert(0, true);
      int int0 = strBuilder1.indexOf(strMatcher0, 0);
      charArray0[2] = 'O';
      charArray0[3] = '3';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("d0-aPXV.2N8c5+z5/U");
      charArray0[4] = 'E';
      char char0 = '6';
      int int1 = 739;
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(739);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 739
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      int int0 = 115;
      StrBuilder strBuilder0 = new StrBuilder(115);
      LinkedList<StrBuilder> linkedList0 = new LinkedList<StrBuilder>();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[5];
      charArray0[0] = 'D';
      charArray0[1] = '^';
      charArray0[2] = '>';
      charArray0[3] = '3';
      charArray0[4] = '[';
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset(charArray0);
      Object object0 = strBuilder_StrBuilderTokenizer0.next();
      boolean boolean0 = linkedList0.removeLastOccurrence("D^>3[");
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "1jPgf");
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("Invalid offset: ");
      // Undeclared exception!
      try { 
        strBuilder1.replace(strMatcher0, "1jPgf", 108, 0, 115);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      int int0 = 34;
      StrBuilder strBuilder0 = new StrBuilder(34);
      int int1 = 116;
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(116);
      StrBuilder strBuilder2 = strBuilder1.deleteAll((String) null);
      int int2 = (-1152);
      StrBuilder strBuilder3 = strBuilder0.append(0.0F);
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) strBuilder3;
      objectArray0[1] = (Object) strBuilder1;
      StrBuilder strBuilder4 = strBuilder3.appendWithSeparators(objectArray0, (String) null);
      int int3 = 1;
      strBuilder0.validateIndex(1);
      StringBuffer stringBuffer0 = null;
      try {
        stringBuffer0 = new StringBuffer((-1152));
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.startsWith((String) null);
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) null;
      objectArray0[1] = (Object) null;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      objectArray0[2] = object0;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, (String) null);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("=7");
      int int0 = strBuilder0.indexOf((StrMatcher) null);
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      String string0 = strBuilder0.leftString(83);
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft((Object) "=7", 819, 'z');
      StrBuilder strBuilder3 = strBuilder0.reverse();
      String string1 = strBuilder3.substring(12);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder strBuilder4 = strBuilder3.append(object0);
      String string2 = strBuilder4.rightString(12);
      StrBuilder strBuilder5 = strBuilder2.append((double) 819);
      StrBuilder strBuilder6 = strBuilder0.deleteAll("");
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(9);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("?=l6!y#{", 32, 4);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[4];
      charArray0[0] = 'j';
      charArray0[1] = 'N';
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("<{}Om^Uqep");
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      charArray0[2] = '|';
      charArray0[3] = '<';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StrBuilder strBuilder2 = strBuilder0.insert(0, charArray0);
      StrBuilder strBuilder3 = strBuilder1.deleteCharAt(0);
      StrMatcher strMatcher1 = StrMatcher.noneMatcher();
      StrBuilder strBuilder4 = strBuilder1.append("[dKtr)Zgqgr", 0, 0);
      int int1 = strBuilder0.indexOf(strMatcher1, 0);
      int int2 = strBuilder1.indexOf("uKK{W0W@");
      StrBuilder strBuilder5 = strBuilder1.trim();
      boolean boolean1 = strBuilder3.equals((Object) "uKK{W0W@");
      StringBuffer stringBuffer0 = strBuilder3.toStringBuffer();
      String string0 = "=Jj1q4-vF\"Fo x:/`x";
      StrBuilder strBuilder6 = strBuilder5.deleteAll('N');
      char char0 = '\"';
      // Undeclared exception!
      try { 
        strBuilder5.insert((-1), (double) (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(0);
      StrBuilder strBuilder1 = strBuilder0.append(0);
      StrBuilder strBuilder2 = strBuilder1.insert(0, (double) 0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = "";
      StrBuilder strBuilder1 = new StrBuilder("");
      StrBuilder strBuilder2 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      strBuilder0.size = 0;
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("");
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setQuoteMatcher(strMatcher0);
      StrBuilder strBuilder3 = strBuilder1.appendWithSeparators((Iterator) strTokenizer0, "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      boolean boolean0 = strBuilder0.equals(strBuilder1);
      int int0 = 0;
      char char0 = '/';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("P\"h~m9>Q_~M|");
      StrBuilder strBuilder4 = strBuilder3.insert(0, '/');
      StrBuilder strBuilder5 = strBuilder4.insert(0, "");
      StrBuilder strBuilder6 = strBuilder0.deleteFirst('');
      StrBuilder strBuilder7 = strBuilder3.append("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter", 0, 0);
      int int1 = strBuilder3.indexOf("", 0);
      String string1 = strBuilder0.toString();
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(0, 'e');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid startIndex: ");
      StrBuilder strBuilder1 = strBuilder0.deleteCharAt(0);
      StrBuilder strBuilder2 = strBuilder0.trim();
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("{L");
      StrBuilder strBuilder3 = strBuilder2.deleteAll(strMatcher0);
      StrBuilder strBuilder4 = strBuilder1.deleteFirst('_');
      StrBuilder strBuilder5 = strBuilder2.append(false);
      int int0 = strBuilder5.indexOf(strMatcher0, 0);
      StrTokenizer strTokenizer0 = strBuilder5.asTokenizer();
      int int1 = strBuilder0.size();
      char[] charArray0 = new char[0];
      int int2 = 267;
      // Undeclared exception!
      try { 
        strBuilder1.getChars((-1968), 0, charArray0, 267);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1968
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 48;
      StrBuilder strBuilder1 = new StrBuilder(48);
      char[] charArray0 = new char[6];
      charArray0[0] = '9';
      // Undeclared exception!
      try { 
        strBuilder1.deleteCharAt(48);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 48
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0, 2);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("OS/2");
      // Undeclared exception!
      try { 
        strBuilder0.charAt((-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder("");
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, 2046, 2046);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      String string0 = "HP-UX";
      StrBuilder strBuilder0 = new StrBuilder("HP-UX");
      int int0 = (-284);
      // Undeclared exception!
      try { 
        strBuilder0.replace((-284), (-284), "HP-UX");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -284
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-277));
      int int0 = (-1363);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1363), (-932.4F));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1363
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 1;
      // Undeclared exception!
      try { 
        strBuilder0.replace((-2996), 1, "org.apache.commons.lang.text.StrBuilder");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2996
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight((Object) strBuilder0, (-1053), ' ');
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "");
      int int0 = 116;
      // Undeclared exception!
      try { 
        strBuilder1.append(stringBuffer0, 116, 116);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      strBuilder1.validateIndex(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterMatcher(strMatcher0);
      String string0 = null;
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, (String) null);
      char char0 = strBuilder2.charAt(0);
      // Undeclared exception!
      try { 
        strBuilder0.substring(1406, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-66));
      boolean boolean0 = strBuilder0.contains((String) null);
      StrBuilder strBuilder1 = strBuilder0.deleteAll((StrMatcher) null);
      StrBuilder strBuilder2 = strBuilder0.replaceAll((String) null, "Invalid length: ");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      char[] charArray0 = new char[8];
      charArray0[0] = 'S';
      charArray0[1] = '}';
      charArray0[2] = 'R';
      charArray0[3] = 'f';
      charArray0[4] = '1';
      charArray0[5] = '.';
      charArray0[6] = 'G';
      charArray0[7] = '7';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, (-66), 9);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[2];
      charArray0[0] = 'u';
      charArray0[1] = 'n';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, (-692), 39);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, (String) null);
      StrBuilder strBuilder2 = strBuilder0.ensureCapacity(82);
      boolean boolean0 = strBuilder2.contains((String) null);
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadRight((-3415), (-3415), '/');
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder3.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("");
      // Undeclared exception!
      try { 
        strBuilder0.append("", 82, 31);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      char[] charArray0 = new char[6];
      charArray0[0] = '.';
      charArray0[1] = 'd';
      charArray0[2] = 'h';
      charArray0[3] = 'E';
      charArray0[4] = '{';
      charArray0[5] = '/';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.deleteAll((StrMatcher) null);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1));
      StrBuilder strBuilder1 = strBuilder0.replaceAll('I', 'I');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[3];
      charArray0[0] = 'I';
      charArray0[1] = 'I';
      charArray0[2] = 'I';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 2957, (-1));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      String string0 = "zNyb[qW~AOG+G@jNRAL";
      StrBuilder strBuilder0 = new StrBuilder("zNyb[qW~AOG+G@jNRAL");
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      int int0 = 2360;
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex(2360);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2360
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("shCh8r");
      int int0 = strBuilder0.lastIndexOf('.');
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("shCh8r");
      int int1 = strBuilder0.lastIndexOf(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "The Array must not be null");
      String string0 = strBuilder0.getNewLineText();
      boolean boolean0 = strBuilder0.equals(strBuilder1);
      StrBuilder strBuilder2 = strBuilder1.appendNull();
      char[] charArray0 = new char[5];
      charArray0[0] = 'r';
      charArray0[1] = 'r';
      charArray0[2] = '.';
      charArray0[3] = 'r';
      charArray0[4] = '.';
      StrBuilder strBuilder3 = strBuilder0.insert(0, charArray0);
      int int2 = strBuilder0.lastIndexOf('r');
      boolean boolean1 = strBuilder1.equals((Object) strBuilder2);
      StrBuilder strBuilder4 = strBuilder1.setNullText((String) null);
      StrBuilder strBuilder5 = strBuilder4.deleteAll('F');
      StrBuilder strBuilder6 = strBuilder2.ensureCapacity(1);
      StrBuilder strBuilder7 = strBuilder1.setNullText("w8Gq#HD/?>");
      StrBuilder strBuilder8 = strBuilder1.replaceFirst('~', '3');
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[7];
      charArray0[0] = '}';
      charArray0[1] = '8';
      charArray0[2] = 'i';
      charArray0[3] = 'o';
      charArray0[4] = '@';
      charArray0[5] = '{';
      charArray0[6] = 'p';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, (-2054), 44);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 44
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      char[] charArray0 = new char[6];
      charArray0[0] = '.';
      charArray0[1] = 'd';
      charArray0[2] = 'h';
      charArray0[3] = 'E';
      charArray0[4] = '{';
      charArray0[5] = '/';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.deleteAll((StrMatcher) strMatcher_CharSetMatcher0);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = Integer.MAX_VALUE;
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("");
      String string1 = " \t\n\r\f";
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(" \t\n\r\f");
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("");
      int int1 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_StringMatcher0);
      // Undeclared exception!
      try { 
        strBuilder0.insert(Integer.MAX_VALUE, false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2147483647
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      String string0 = "java.specification.name";
      StrBuilder strBuilder0 = new StrBuilder("java.specification.name");
      StrBuilder strBuilder1 = strBuilder0.append(0.0F);
      StrBuilder strBuilder2 = strBuilder1.setNewLineText("java.specification.name");
      // Undeclared exception!
      try { 
        strBuilder1.toCharArray(115, 97);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      int int0 = (-1297);
      StrBuilder strBuilder0 = new StrBuilder((-1297));
      int int1 = 44;
      char[] charArray0 = null;
      // Undeclared exception!
      try { 
        strBuilder0.getChars((-1297), 44, (char[]) null, 44);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1297
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      int int0 = 34;
      StrBuilder strBuilder0 = new StrBuilder(34);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      int int1 = (-49);
      // Undeclared exception!
      try { 
        strBuilder1.delete(34, (-49));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("*oX/]b&8N_Q~''`LJ_a");
      String string0 = strBuilder0.toString();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "^2>aCEa{>%Yh");
      Reader reader0 = strBuilder1.asReader();
      int int0 = 2656;
      int int1 = strBuilder0.indexOf("!J4$QHgLHV)", 2656);
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      char[] charArray0 = new char[1];
      charArray0[0] = '-';
      int int2 = 2450;
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 102, 2450);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 2450
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(44);
      int int0 = 0;
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder1 = strBuilder0.appendPadding(0, '%');
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrBuilder strBuilder2 = strBuilder0.appendNull();
      StrBuilder strBuilder3 = strBuilder0.replaceAll(strMatcher0, " i,t axVD s(<");
      int int1 = strBuilder0.validateRange(0, 44);
      String string0 = null;
      int int2 = 114;
      char char0 = 'Q';
      // Undeclared exception!
      try { 
        strBuilder3.insert(1514, (-1270));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1514
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = new StrBuilder(0);
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1, 0, 0);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators((Collection) linkedList0, "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.append(972.319);
      StrBuilder strBuilder2 = new StrBuilder();
      StrBuilder strBuilder3 = strBuilder1.insert(0, 0);
      StrBuilder strBuilder4 = strBuilder1.appendFixedWidthPadRight((Object) strBuilder2, (-2780), 'o');
      StrBuilder strBuilder5 = strBuilder3.deleteAll("org.apache.commons.lang.text.StrBuilder");
      int int0 = strBuilder2.lastIndexOf('o');
      StrBuilder strBuilder6 = strBuilder0.setCharAt(0, 'o');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder6.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      char[] charArray0 = new char[1];
      charArray0[0] = 'o';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher(charArray0);
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      int int1 = strBuilder3.lastIndexOf(strMatcher2, (-1471));
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      String string0 = "uL,7;L_X!i;j>*R";
      // Undeclared exception!
      try { 
        strBuilder1.setCharAt(105, 'R');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 105
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) strBuilder0;
      objectArray0[3] = (Object) strBuilder0;
      objectArray0[4] = (Object) strBuilder0;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "");
      StrBuilder strBuilder2 = strBuilder1.clear();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      int int0 = strBuilder1.lastIndexOf(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder1.charAt((-1179));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1179
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("yKaL");
      StrBuilder strBuilder1 = strBuilder0.insert(0, true);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      char[] charArray0 = new char[6];
      charArray0[0] = '7';
      charArray0[1] = '#';
      charArray0[2] = '`';
      charArray0[3] = '/';
      charArray0[4] = 'N';
      charArray0[5] = '\"';
      char[] charArray1 = strBuilder0.getChars(charArray0);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1877));
      StrBuilder strBuilder1 = strBuilder0.insert(0, 0.0F);
      StrBuilder strBuilder2 = strBuilder0.append(459.9F);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      int int0 = 279;
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft((Object) strBuilder0, 279, 'f');
      StrBuilder strBuilder3 = strBuilder2.insert(0, "");
      int int1 = 116;
      int int2 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray(116, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[2];
      charArray0[0] = 'o';
      StrBuilder strBuilder1 = strBuilder0.insert(0, 0.0F);
      charArray0[1] = '|';
      // Undeclared exception!
      try { 
        strBuilder0.getChars((-1771), (-1771), charArray0, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1771
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.awt.printerjob");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("java.awt.printerjob", "java.awt.printerjob");
      boolean boolean0 = strBuilder0.contains('');
      // Undeclared exception!
      try { 
        strBuilder0.getChars(0, 0, (char[]) null, 0);
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("Invalid startIndex: ");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      char[] charArray0 = new char[7];
      charArray0[0] = 'y';
      charArray0[1] = '9';
      charArray0[2] = 'y';
      charArray0[3] = 'H';
      charArray0[4] = '*';
      charArray0[5] = '_';
      charArray0[6] = '#';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 267, 267);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 267
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("%c&d)oXOE");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) "%c&d)oXOE", (-2184), 'g');
      StrTokenizer strTokenizer0 = strBuilder1.asTokenizer();
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      StrBuilder strBuilder2 = strBuilder1.replaceFirst(strMatcher0, "%c&d)oXOE");
      int int0 = 32;
      String string0 = strBuilder0.rightString(32);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrBuilder strBuilder3 = strBuilder0.replaceAll("%c&d)oXOE", "-;3WwWqN#");
      int int1 = 777;
      // Undeclared exception!
      try { 
        strBuilder3.insert(777, 'w');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 777
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("q50E+%/X>YVf0");
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "F~5U");
      StrBuilder strBuilder2 = strBuilder0.appendNewLine();
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(114);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(5, 0, 'b');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterMatcher(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.append(false);
      StrTokenizer strTokenizer1 = StrTokenizer.getCSVInstance((char[]) null);
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize((char[]) null, 0, 0);
      char[] charArray0 = strBuilder0.toCharArray();
      Object object0 = new Object();
      StrBuilder strBuilder3 = strBuilder1.append(object0);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight((Object) null, 373, 'L');
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.size();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(1L);
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      boolean boolean1 = strBuilder0.contains("");
      strBuilder0.size = 57;
      boolean boolean2 = strBuilder_StrBuilderReader0.markSupported();
      boolean boolean3 = strBuilder0.contains("");
      // Undeclared exception!
      try { 
        strBuilder0.deleteAll('&');
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrMatcher$CharMatcher");
      int int0 = 1175;
      // Undeclared exception!
      try { 
        strBuilder0.delete(1175, 1175);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('p');
      char[] charArray0 = new char[0];
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder2 = strBuilder1.replaceAll(strMatcher0, "");
      Reader reader0 = strBuilder2.asReader();
      // Undeclared exception!
      try { 
        strBuilder2.append(strBuilder0, 802, 31);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.replaceAll("", " %yO_m`ky=-FJP'Q4");
      StrBuilder strBuilder2 = strBuilder0.insert(0, 0);
      // Undeclared exception!
      try { 
        strBuilder2.substring((-3984));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3984
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.appendNull();
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("shCh8r");
      int int0 = strBuilder0.lastIndexOf('F');
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("shCh8r");
      int int1 = strBuilder0.lastIndexOf(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "The Array must not be null");
      String string0 = strBuilder0.getNewLineText();
      boolean boolean0 = strBuilder0.equals(strBuilder1);
      StrBuilder strBuilder2 = strBuilder1.appendNull();
      char[] charArray0 = new char[5];
      charArray0[0] = 'r';
      charArray0[1] = 'r';
      charArray0[2] = 'F';
      charArray0[3] = 'r';
      charArray0[4] = 'F';
      StrBuilder strBuilder3 = strBuilder0.insert(0, charArray0);
      int int2 = strBuilder0.lastIndexOf('r');
      boolean boolean1 = strBuilder1.equals((Object) strBuilder2);
      StrBuilder strBuilder4 = strBuilder1.setNullText((String) null);
      StrBuilder strBuilder5 = strBuilder4.deleteAll('F');
      StrBuilder strBuilder6 = strBuilder2.ensureCapacity(1);
      StrBuilder strBuilder7 = strBuilder1.setNullText("w8Gq#HD/?>");
      StrBuilder strBuilder8 = strBuilder7.setNewLineText("r5r.3s_U<sYe+{F@0(6");
      StrBuilder strBuilder9 = strBuilder1.replaceFirst('~', '3');
      StrBuilder strBuilder10 = strBuilder1.insert(0, charArray0);
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[6];
      charArray0[0] = '-';
      charArray0[1] = ' ';
      charArray0[2] = 'c';
      charArray0[3] = 'M';
      charArray0[4] = ',';
      charArray0[5] = 'S';
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset(charArray0);
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Iterator) strTokenizer0, ";s_\"hw-(c");
      StrBuilder strBuilder3 = new StrBuilder();
      StrBuilder strBuilder4 = strBuilder0.append(strBuilder3);
      StrBuilder strBuilder5 = strBuilder4.clear();
      char[] charArray1 = new char[1];
      charArray1[0] = 'v';
      StrBuilder strBuilder6 = strBuilder0.append(charArray1);
      StrBuilder strBuilder7 = strBuilder1.reverse();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("");
      int int0 = strBuilder7.lastIndexOf(strMatcher0, 0);
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer0 = new Integer(0);
      boolean boolean0 = linkedList0.add(integer0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      strBuilder0.validateIndex(0);
      char char0 = strBuilder0.charAt(5);
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.vm.vendor");
      StrBuilder strBuilder1 = strBuilder0.insert(0, (char[]) null, 0, 0);
      String string0 = strBuilder1.toString();
      StrBuilder strBuilder2 = strBuilder0.trim();
      StrBuilder strBuilder3 = strBuilder0.deleteAll('o');
      // Undeclared exception!
      try { 
        strBuilder3.append(strBuilder0, 2767, 2767);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      char char0 = '.';
      StrBuilder strBuilder1 = strBuilder0.appendPadding(0, '.');
      StrBuilder strBuilder2 = strBuilder1.minimizeCapacity();
      int int0 = strBuilder0.indexOf('.', 496);
      StrMatcher strMatcher0 = StrMatcher.charMatcher('.');
      int int1 = strBuilder1.indexOf(strMatcher0, 0);
      String string0 = strBuilder2.rightString((-1));
      StrBuilder strBuilder3 = strBuilder1.setNullText(" d4]Yh2}L:ZEM;_B");
      int int2 = strBuilder0.lastIndexOf(" d4]Yh2}L:ZEM;_B");
      String string1 = strBuilder0.getNullText();
      int int3 = strBuilder2.lastIndexOf('.', (-1));
      char[] charArray0 = new char[3];
      charArray0[0] = '.';
      charArray0[1] = '6';
      charArray0[2] = '.';
      StrBuilder strBuilder4 = strBuilder2.insert(0, charArray0);
      int int4 = strBuilder0.indexOf('1');
      // Undeclared exception!
      try { 
        strBuilder3.insert((-1), 'Z');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("cd*?D=EI");
      char[] charArray0 = new char[4];
      charArray0[0] = '<';
      char char0 = 'q';
      charArray0[1] = 'q';
      charArray0[2] = ';';
      char char1 = 'L';
      charArray0[3] = 'L';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(2, 2, charArray0, 116);
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("wzSo");
      StrBuilder strBuilder1 = strBuilder0.replaceAll("wzSo", " NJBw");
      int int0 = strBuilder0.indexOf('k');
      StrBuilder strBuilder2 = strBuilder0.ensureCapacity((-1));
  }
}
