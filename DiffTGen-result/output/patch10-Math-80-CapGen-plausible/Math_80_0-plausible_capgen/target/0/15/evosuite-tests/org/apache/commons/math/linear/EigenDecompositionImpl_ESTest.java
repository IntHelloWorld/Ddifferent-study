/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 28 12:50:20 GMT 2020
 */

package org.apache.commons.math.linear;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.linear.Array2DRowRealMatrix;
import org.apache.commons.math.linear.ArrayRealVector;
import org.apache.commons.math.linear.BlockRealMatrix;
import org.apache.commons.math.linear.DecompositionSolver;
import org.apache.commons.math.linear.EigenDecompositionImpl;
import org.apache.commons.math.linear.OpenMapRealVector;
import org.apache.commons.math.linear.RealMatrix;
import org.apache.commons.math.linear.RealVector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EigenDecompositionImpl_ESTest extends EigenDecompositionImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 325.11912576515107;
      doubleArray0[2] = 1.0E-12;
      doubleArray0[3] = 2276.8839896;
      doubleArray0[4] = 0.0;
      doubleArray0[5] = 0.0;
      doubleArray0[6] = (-1359.6);
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0);
      ArrayRealVector arrayRealVector1 = new ArrayRealVector(doubleArray0, arrayRealVector0);
      ArrayRealVector arrayRealVector2 = new ArrayRealVector((RealVector) arrayRealVector1);
      RealVector realVector0 = arrayRealVector0.add(doubleArray0);
      RealMatrix realMatrix0 = arrayRealVector2.outerProduct(arrayRealVector1);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getV();
      try { 
        eigenDecompositionImpl0.getRealEigenvalue((-560));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -560
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = 0.0;
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
      RealMatrix realMatrix0 = array2DRowRealMatrix0.scalarAdd((-417.0));
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 26.9667243);
      double[] doubleArray1 = eigenDecompositionImpl0.getImagEigenvalues();
      double[] doubleArray2 = eigenDecompositionImpl0.getRealEigenvalues();
      RealVector realVector0 = eigenDecompositionImpl0.getEigenvector(0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BlockRealMatrix blockRealMatrix0 = new BlockRealMatrix(739, 739);
      int[] intArray0 = new int[3];
      intArray0[0] = 52;
      intArray0[1] = 52;
      intArray0[2] = 52;
      double[][] doubleArray0 = new double[9][6];
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = (double) 52;
      doubleArray1[1] = (double) 52;
      doubleArray1[2] = (-4625.08737);
      doubleArray1[3] = (double) 52;
      doubleArray1[4] = (double) 52;
      doubleArray1[5] = (double) 52;
      doubleArray1[6] = (double) 52;
      doubleArray1[7] = (double) 739;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[7];
      doubleArray2[0] = 1798.7747531811;
      doubleArray2[1] = (double) 52;
      doubleArray2[2] = (double) 52;
      doubleArray2[3] = (double) 52;
      doubleArray2[4] = (-3565.2829974);
      doubleArray2[5] = (-3565.2829974);
      doubleArray2[6] = (-4625.08737);
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[4];
      doubleArray3[0] = 0.0;
      doubleArray3[1] = (-4625.08737);
      doubleArray3[2] = (double) 52;
      doubleArray3[3] = (-4625.08737);
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[3];
      doubleArray4[0] = (-3565.2829974);
      doubleArray4[1] = (-3565.2829974);
      doubleArray4[2] = 1798.7747531811;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[9];
      doubleArray5[0] = (double) 52;
      doubleArray5[1] = 1798.7747531811;
      doubleArray5[2] = (double) 52;
      doubleArray5[3] = (-3565.2829974);
      doubleArray5[4] = 1798.7747531811;
      doubleArray5[5] = (-3565.2829974);
      doubleArray5[6] = (double) 52;
      doubleArray5[7] = (double) 52;
      doubleArray5[8] = (double) 52;
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[7];
      doubleArray6[0] = 0.0;
      doubleArray6[1] = (double) 52;
      doubleArray6[2] = 0.0;
      doubleArray6[3] = (double) 52;
      doubleArray6[4] = (double) 52;
      doubleArray6[5] = (double) 739;
      doubleArray6[6] = (double) 52;
      doubleArray0[5] = doubleArray6;
      double[] doubleArray7 = new double[7];
      doubleArray7[0] = 0.0;
      doubleArray7[1] = 0.0;
      doubleArray7[2] = 0.0;
      doubleArray7[3] = (double) 52;
      doubleArray7[4] = (double) 52;
      doubleArray7[5] = 0.0;
      doubleArray7[6] = (double) 52;
      doubleArray0[6] = doubleArray7;
      double[] doubleArray8 = new double[6];
      doubleArray8[0] = (double) 52;
      doubleArray8[1] = 0.0;
      doubleArray8[2] = 0.0;
      doubleArray8[3] = (double) 52;
      doubleArray8[4] = (double) 52;
      doubleArray8[5] = 0.0;
      doubleArray0[7] = doubleArray8;
      double[] doubleArray9 = new double[8];
      doubleArray9[0] = (double) 739;
      doubleArray9[1] = (double) 52;
      doubleArray9[2] = (-4625.08737);
      doubleArray9[3] = 1798.7747531811;
      doubleArray9[4] = 0.0;
      doubleArray9[5] = (double) 739;
      doubleArray9[6] = (double) 52;
      doubleArray9[7] = (double) 52;
      doubleArray0[8] = doubleArray9;
      blockRealMatrix0.copySubMatrix(intArray0, intArray0, doubleArray0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(blockRealMatrix0, (-3565.2829974));
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix();
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector();
      OpenMapRealVector openMapRealVector1 = openMapRealVector0.mapSinhToSelf();
      RealVector realVector0 = array2DRowRealMatrix0.preMultiply((RealVector) openMapRealVector0);
      String string0 = array2DRowRealMatrix0.toString();
      Integer integer0 = new Integer((-1283));
      boolean boolean0 = openMapRealVector0.equals(integer0);
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, 0.0);
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.linear.TriDiagonalTransformer", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl((RealMatrix) null, 0.0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, (-2387.72201774535));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl((double[]) null, (double[]) null, 821.560905017);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = 276.83257005;
      double[] doubleArray1 = new double[0];
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 276.83257005);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getVT();
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getVT();
      double double0 = eigenDecompositionImpl0.getDeterminant();
      try { 
        eigenDecompositionImpl0.getImagEigenvalue((-1));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 1284.61235;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 6881.06938;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = 2.0;
      doubleArray0[5] = 1.0E-12;
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
      RealMatrix realMatrix0 = array2DRowRealMatrix0.copy();
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 2.0);
      } catch(RuntimeException e) {
         //
         // a 6x1 matrix was provided instead of a square matrix
         //
         verifyException("org.apache.commons.math.linear.TriDiagonalTransformer", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = 41;
      int int1 = 1767;
      BlockRealMatrix blockRealMatrix0 = new BlockRealMatrix(41, 1767);
      double double0 = 0.0;
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(blockRealMatrix0, 0.0);
      } catch(RuntimeException e) {
         //
         // no entry at indices (41, 0) in a 41x1,767 matrix
         //
         verifyException("org.apache.commons.math.linear.BlockRealMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 6.283185307179586;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 0.408734521078;
      doubleArray0[3] = 744.7;
      doubleArray0[4] = 334.3;
      doubleArray0[5] = (-491.9339613713089);
      doubleArray0[6] = (-2379.5);
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, 3123.718);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double[][] doubleArray0 = new double[1][8];
      double[] doubleArray1 = new double[9];
      doubleArray1[0] = 2958.070808;
      doubleArray1[1] = 0.0;
      doubleArray1[2] = 2564.862792;
      doubleArray1[3] = 808.2986159951;
      doubleArray1[4] = 0.0;
      doubleArray1[5] = 1670.47;
      doubleArray1[6] = 0.0;
      doubleArray1[7] = 0.0;
      doubleArray1[8] = 3531.733882997446;
      doubleArray0[0] = doubleArray1;
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0, false);
      RealMatrix realMatrix0 = array2DRowRealMatrix0.getColumnMatrix(0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 3531.733882997446);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 324.93;
      doubleArray0[2] = 1.0E-12;
      doubleArray0[3] = 2276.8839896;
      doubleArray0[4] = 0.0;
      doubleArray0[5] = 0.0;
      doubleArray0[6] = (-1359.6);
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0);
      ArrayRealVector arrayRealVector1 = new ArrayRealVector(doubleArray0, arrayRealVector0);
      ArrayRealVector arrayRealVector2 = new ArrayRealVector((RealVector) arrayRealVector1);
      RealVector realVector0 = arrayRealVector0.add(doubleArray0);
      RealMatrix realMatrix0 = arrayRealVector2.outerProduct(arrayRealVector1);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getV();
      try { 
        eigenDecompositionImpl0.getRealEigenvalue((-560));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -560
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (-1087.0641634);
      doubleArray0[1] = 502.5603;
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, 502.5603);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(40, 40);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, 0.9999999999999998);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getD();
      EigenDecompositionImpl eigenDecompositionImpl1 = new EigenDecompositionImpl(array2DRowRealMatrix0, 0);
      double double0 = eigenDecompositionImpl1.getRealEigenvalue(0);
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      RealMatrix realMatrix1 = array2DRowRealMatrix0.getSubMatrix(intArray0, intArray0);
      EigenDecompositionImpl eigenDecompositionImpl2 = new EigenDecompositionImpl(realMatrix1, 1.0E-12);
      RealMatrix realMatrix2 = eigenDecompositionImpl2.getV();
      int int0 = (-2737);
      RealMatrix realMatrix3 = eigenDecompositionImpl2.getVT();
      try { 
        eigenDecompositionImpl2.getRealEigenvalue((-2737));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2737
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = 2430.94438635593;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 1328.5001057910372;
      doubleArray0[4] = (-1641.0882863);
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, (double[]) null, 303.1949);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }
}
