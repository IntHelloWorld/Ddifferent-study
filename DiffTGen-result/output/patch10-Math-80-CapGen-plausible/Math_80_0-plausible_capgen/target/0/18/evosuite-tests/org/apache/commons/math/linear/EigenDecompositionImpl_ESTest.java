/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 28 12:53:40 GMT 2020
 */

package org.apache.commons.math.linear;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.linear.Array2DRowRealMatrix;
import org.apache.commons.math.linear.BlockRealMatrix;
import org.apache.commons.math.linear.DecompositionSolver;
import org.apache.commons.math.linear.EigenDecompositionImpl;
import org.apache.commons.math.linear.RealMatrix;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EigenDecompositionImpl_ESTest extends EigenDecompositionImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 2.0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 1.0;
      doubleArray0[3] = 3954.9703788157926;
      doubleArray0[4] = 0.0;
      doubleArray0[5] = 1419.70474;
      doubleArray0[6] = 54.0;
      doubleArray0[5] = 3303.55689192;
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = 54.0;
      doubleArray1[1] = 3954.9703788157926;
      doubleArray1[2] = 1.5;
      doubleArray1[3] = (-2900.82851628544);
      doubleArray1[4] = 3303.55689192;
      doubleArray1[5] = 54.0;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 2.0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 1.0;
      doubleArray0[3] = 3954.9703788157926;
      doubleArray0[4] = 0.0;
      doubleArray0[5] = 1419.70474;
      doubleArray0[6] = 54.0;
      doubleArray0[5] = 3303.55689192;
      double[] doubleArray1 = new double[7];
      doubleArray1[1] = 3954.9703788157926;
      doubleArray1[2] = 1.5;
      doubleArray1[3] = (-2900.82851628544);
      doubleArray1[4] = 3303.55689192;
      doubleArray1[5] = 54.0;
      doubleArray1[6] = 1419.70474;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getD();
      double double0 = eigenDecompositionImpl0.getDeterminant();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getV();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 2.0;
      doubleArray0[1] = 2.0;
      doubleArray0[2] = 1.0;
      doubleArray0[3] = 3925.9;
      doubleArray0[4] = 0.0;
      doubleArray0[5] = 1419.70474;
      doubleArray0[6] = 54.0;
      doubleArray0[7] = 3303.55689192;
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = 54.0;
      doubleArray1[1] = 3925.9;
      doubleArray1[2] = 1.5;
      doubleArray1[3] = (-2900.82851628544);
      doubleArray1[4] = 3303.55689192;
      doubleArray1[5] = 54.0;
      doubleArray1[6] = 1419.70474;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      try { 
        eigenDecompositionImpl0.getEigenvector((-1083));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1083
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 2.0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 1.0;
      doubleArray0[3] = 3954.9703788157926;
      doubleArray0[4] = 0.0;
      doubleArray0[5] = 1419.70474;
      doubleArray0[6] = 54.0;
      doubleArray0[5] = 3303.55689192;
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = 54.0;
      doubleArray1[1] = 3954.9703788157926;
      doubleArray1[2] = 1.5;
      doubleArray1[3] = (-2900.82851628544);
      doubleArray0[6] = 3303.55689192;
      doubleArray1[5] = 54.0;
      doubleArray1[6] = 1419.70474;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      try { 
        eigenDecompositionImpl0.getImagEigenvalue((-3));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 2.0;
      doubleArray0[1] = 11.251553277968558;
      doubleArray0[2] = 1.0;
      doubleArray0[3] = 3954.9703788157926;
      doubleArray0[4] = 0.35727496390120295;
      doubleArray0[5] = 0.35727496390120295;
      doubleArray0[6] = 54.0;
      doubleArray0[5] = 3303.55689192;
      double[] doubleArray1 = new double[7];
      doubleArray1[1] = 3954.9703788157926;
      doubleArray1[2] = 1.5;
      doubleArray1[3] = (-2900.82851628544);
      doubleArray1[4] = 3303.55689192;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.35727496390120295);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 2.0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 1.0;
      doubleArray0[3] = 3925.9;
      doubleArray0[4] = 0.0;
      doubleArray0[5] = 1419.70474;
      doubleArray0[6] = 54.0;
      doubleArray0[7] = 3303.55689192;
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = 54.0;
      doubleArray1[1] = 3925.9;
      doubleArray1[2] = 1.5;
      doubleArray1[3] = 3303.55689192;
      doubleArray1[4] = 3303.55689192;
      doubleArray1[5] = 54.0;
      doubleArray1[6] = 1419.70474;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      try { 
        eigenDecompositionImpl0.getImagEigenvalue((-2897));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2897
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 2.0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 1.0;
      doubleArray0[3] = 2.0;
      doubleArray0[4] = 0.0;
      doubleArray0[5] = 1419.70474;
      doubleArray0[6] = 54.0;
      doubleArray0[7] = 3303.55689192;
      double[] doubleArray1 = new double[7];
      doubleArray1[1] = 1.0;
      doubleArray1[2] = 1.5;
      doubleArray1[3] = 3303.55689192;
      doubleArray1[4] = 3303.55689192;
      doubleArray1[5] = 54.0;
      doubleArray1[6] = 1419.70474;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      try { 
        eigenDecompositionImpl0.getImagEigenvalue((-2897));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2897
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 2.0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 1.0;
      doubleArray0[3] = 3954.9703788157926;
      doubleArray0[4] = 0.0;
      doubleArray0[5] = 1419.70474;
      doubleArray0[6] = 54.0;
      doubleArray0[5] = 3303.55689192;
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = 54.0;
      doubleArray1[1] = 3954.9703788157926;
      doubleArray1[2] = 1.5;
      doubleArray1[3] = (-2900.82851628544);
      doubleArray1[4] = 3303.55689192;
      doubleArray1[5] = 54.0;
      doubleArray1[6] = 1419.70474;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getV();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getV();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[1] = (-1254.936);
      doubleArray0[2] = 2531.428337996845;
      doubleArray0[1] = (-384.91);
      doubleArray0[4] = 0.0;
      doubleArray0[5] = 8.915611942938995E-6;
      doubleArray0[6] = 230.8620752328;
      doubleArray0[7] = 3.0121327654342167E-9;
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = 8.915611942938995E-6;
      doubleArray1[1] = 1.1496359419993496E-12;
      doubleArray1[2] = 8.915611942938995E-6;
      doubleArray0[5] = (-384.91);
      doubleArray1[4] = 8.915611942938995E-6;
      doubleArray1[5] = 0.0;
      doubleArray1[6] = (-1254.936);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      double[] doubleArray2 = eigenDecompositionImpl0.getRealEigenvalues();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 2.0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 1.0;
      doubleArray0[3] = 3925.9;
      doubleArray0[4] = 0.0;
      doubleArray0[5] = 1419.70474;
      doubleArray0[6] = 1.0;
      doubleArray0[7] = 3303.55689192;
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = 0.0;
      doubleArray1[1] = 3925.9;
      doubleArray1[2] = 1.5;
      doubleArray1[3] = 2.0;
      doubleArray1[4] = 3303.55689192;
      doubleArray1[5] = 1.0;
      doubleArray1[6] = 1419.70474;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 2.0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 1.0;
      doubleArray0[3] = 3925.9;
      doubleArray0[4] = 0.0;
      doubleArray0[5] = 1419.70474;
      doubleArray0[6] = 54.0;
      doubleArray0[7] = 3303.55689192;
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = 54.0;
      doubleArray1[1] = 3925.9;
      doubleArray1[2] = 1.5;
      doubleArray1[3] = (-2900.82851628544);
      doubleArray1[4] = 3303.55689192;
      doubleArray1[5] = 54.0;
      doubleArray1[6] = 1419.70474;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      double double0 = eigenDecompositionImpl0.getDeterminant();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, 25.499754536771434);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 2.0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 1.0;
      doubleArray0[3] = 3954.9703788157926;
      doubleArray0[4] = 0.0;
      doubleArray0[5] = 1419.70474;
      doubleArray0[6] = 54.0;
      doubleArray0[5] = 3303.55689192;
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = 54.0;
      doubleArray1[1] = 3954.9703788157926;
      doubleArray1[2] = 1.5;
      doubleArray1[3] = (-2900.82851628544);
      doubleArray1[4] = 3303.55689192;
      doubleArray1[5] = 54.0;
      doubleArray1[6] = 1419.70474;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 1.1496359419993496E-12;
      doubleArray0[1] = (-1254.936);
      doubleArray0[4] = 2531.428337996845;
      doubleArray0[3] = (-384.91);
      doubleArray0[4] = 0.0;
      doubleArray0[5] = 8.915611942938995E-6;
      doubleArray0[6] = 2.2250738585072014E-308;
      doubleArray0[7] = 3.0121327654342167E-9;
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = 8.915611942938995E-6;
      doubleArray1[1] = 1.1496359419993496E-12;
      doubleArray1[2] = 8.915611942938995E-6;
      doubleArray1[3] = (-384.91);
      doubleArray1[4] = 8.915611942938995E-6;
      doubleArray1[5] = 0.0;
      doubleArray1[6] = (-1254.936);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      double[] doubleArray2 = eigenDecompositionImpl0.getRealEigenvalues();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix();
      int int0 = 10;
      RealMatrix realMatrix0 = array2DRowRealMatrix0.createMatrix(10, 31);
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 728.0479996499911);
      } catch(RuntimeException e) {
         //
         // no entry at indices (10, 0) in a 10x31 matrix
         //
         verifyException("org.apache.commons.math.linear.Array2DRowRealMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 2.0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 1.0;
      doubleArray0[3] = 3925.9;
      doubleArray0[4] = 0.0;
      doubleArray0[5] = 1419.70474;
      doubleArray0[6] = 54.0;
      doubleArray0[7] = 3303.55689192;
      double[] doubleArray1 = new double[7];
      doubleArray0[2] = 54.0;
      doubleArray1[1] = 3925.9;
      doubleArray1[2] = 1.5;
      doubleArray1[3] = (-2900.82851628544);
      doubleArray1[4] = 3303.55689192;
      doubleArray1[5] = 54.0;
      doubleArray1[6] = 1419.70474;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 2.0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 1.0;
      doubleArray0[3] = 3925.9;
      doubleArray0[4] = 0.0;
      doubleArray0[5] = 1419.70474;
      doubleArray0[6] = 54.0;
      doubleArray0[7] = 3303.55689192;
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = 54.0;
      doubleArray1[1] = 3925.9;
      doubleArray1[2] = 1.5;
      doubleArray1[3] = (-2900.82851628544);
      doubleArray1[4] = 3303.55689192;
      doubleArray1[5] = 54.0;
      doubleArray1[6] = 1419.70474;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getV();
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BlockRealMatrix blockRealMatrix0 = new BlockRealMatrix(1030, 1030);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(blockRealMatrix0, 129801.34832321157);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 1.1496359419993496E-12;
      doubleArray0[1] = (-1254.936);
      doubleArray0[2] = 2531.428337996845;
      doubleArray0[3] = (-384.91);
      doubleArray0[4] = 0.0;
      doubleArray0[5] = 8.915611942938995E-6;
      doubleArray0[6] = 2.2250738585072014E-308;
      doubleArray0[7] = 3.0121327654342167E-9;
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = 8.915611942938995E-6;
      doubleArray1[1] = 1.1496359419993496E-12;
      doubleArray1[2] = 8.915611942938995E-6;
      doubleArray1[3] = (-384.91);
      doubleArray1[4] = 8.915611942938995E-6;
      doubleArray1[5] = 0.0;
      doubleArray1[6] = (-1254.936);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      double[] doubleArray2 = eigenDecompositionImpl0.getRealEigenvalues();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix();
      double double0 = 54.0;
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, 54.0);
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.linear.TriDiagonalTransformer", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 2924.76;
      doubleArray0[2] = Double.NaN;
      doubleArray0[3] = (-926.86579);
      doubleArray0[4] = 0.0;
      doubleArray0[5] = 1935.76505590881;
      doubleArray0[6] = 0.0;
      doubleArray0[7] = 1.1102230246251565E-14;
      doubleArray0[8] = (-547.45565314732);
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
      RealMatrix realMatrix0 = array2DRowRealMatrix0.copy();
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
      } catch(RuntimeException e) {
         //
         // a 9x1 matrix was provided instead of a square matrix
         //
         verifyException("org.apache.commons.math.linear.TriDiagonalTransformer", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(1891, 3);
      RealMatrix realMatrix0 = array2DRowRealMatrix0.copy();
      RealMatrix realMatrix1 = array2DRowRealMatrix0.add(realMatrix0);
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix1, 3);
      } catch(RuntimeException e) {
         //
         // a 1,891x3 matrix was provided instead of a square matrix
         //
         verifyException("org.apache.commons.math.linear.TriDiagonalTransformer", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl((double[]) null, (double[]) null, 0.0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, 44.93391721173835);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl((RealMatrix) null, 2544.687364);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl((RealMatrix) null, 1.0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = (-1.0);
      doubleArray0[2] = 0.0;
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, 3.0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (-146.475);
      doubleArray0[1] = Double.NEGATIVE_INFINITY;
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, Double.NEGATIVE_INFINITY);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 1070.7465;
      doubleArray0[1] = (-686.6051768);
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, 1933.0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (-4156.4394104807);
      doubleArray0[1] = (-1633.03070093);
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, (-4156.4394104807));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = 1204.7035752370812;
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, 1204.7035752370812);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 1.1496359419993496E-12;
      doubleArray0[1] = (-1254.936);
      doubleArray0[2] = 2531.428337996845;
      doubleArray0[3] = (-384.91);
      doubleArray0[4] = 0.0;
      doubleArray0[5] = 8.915611942938995E-6;
      doubleArray0[6] = 2.2250738585072014E-308;
      doubleArray0[7] = 3.0121327654342167E-9;
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = 8.915611942938995E-6;
      doubleArray1[1] = 1.1496359419993496E-12;
      doubleArray1[2] = 8.915611942938995E-6;
      doubleArray1[3] = (-384.91);
      doubleArray1[4] = 8.915611942938995E-6;
      doubleArray1[5] = 0.0;
      doubleArray1[6] = (-1254.936);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getVT();
      double[] doubleArray2 = eigenDecompositionImpl0.getRealEigenvalues();
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (-1657.028867593531);
      doubleArray0[1] = 3275.29;
      doubleArray0[2] = (-1572.88);
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
      double[] doubleArray1 = new double[0];
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray1, doubleArray0, (-409.37));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (-1591.3714133064);
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 966.3763445702;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = (-416.7529644499);
      doubleArray0[5] = (-1471.16);
      doubleArray0[6] = 3160.88534501;
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, 0.08325);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }
}
