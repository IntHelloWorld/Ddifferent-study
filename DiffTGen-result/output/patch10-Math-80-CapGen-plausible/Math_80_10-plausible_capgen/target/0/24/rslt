* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.math.linear.EigenDecompositionImpl
* Starting client
* Connecting to master process on port 8691
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/patch10-Math-80-CapGen-plausible/Math_80_0-plausible_capgen/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math.linear.EigenDecompositionImpl
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 851
  - Branch 428
  - Exception 0
  - MutationFactory 212
  - Output 28
  - Method 17
  - MethodNoException 17
  - CBranchFitnessFactory 428
* Using seed 1585400025555
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%][Progress:==>                           8%] [Cov:>                                  0%][Progress:==>                           8%] [Cov:>                                  1%][Progress:==>                           8%] [Cov:====>                              13%][Progress:===>                          10%] [Cov:====>                              12%][Progress:===>                          10%] [Cov:====>                              13%][Progress:====>                         16%] [Cov:>                                  0%][Progress:====>                         16%] [Cov:>                                  1%][Progress:====>                         16%] [Cov:====>                              13%][Progress:======>                       20%] [Cov:>                                  0%][Progress:======>                       20%] [Cov:>                                  1%][Progress:======>                       20%] [Cov:====>                              13%][Progress:=======>                      26%] [Cov:====>                              13%][Progress:========>                     28%] [Cov:>                                  0%][Progress:========>                     28%] [Cov:>                                  1%][Progress:========>                     28%] [Cov:====>                              13%][Progress:========>                     28%] [Cov:====>                              14%][Progress:=========>                    30%] [Cov:====>                              14%][Progress:==========>                   36%] [Cov:>                                  2%][Progress:==========>                   36%] [Cov:=>                                 4%][Progress:==========>                   36%] [Cov:=====>                             16%][Progress:==========>                   36%] [Cov:======>                            18%][Progress:==========>                   36%] [Cov:=======>                           22%][Progress:==========>                   36%] [Cov:=========>                         26%][Progress:==========>                   36%] [Cov:=========>                         27%][Progress:===========>                  38%] [Cov:>                                  2%][Progress:===========>                  38%] [Cov:=>                                 3%][Progress:===========>                  38%] [Cov:=====>                             15%][Progress:===========>                  38%] [Cov:=====>                             17%][Progress:===========>                  38%] [Cov:======>                            18%][Progress:============>                 40%] [Cov:==>                                6%][Progress:============>                 40%] [Cov:===>                               11%][Progress:============>                 40%] [Cov:========>                          24%][Progress:============>                 40%] [Cov:==========>                        30%][Progress:============>                 40%] [Cov:===========>                       32%][Progress:============>                 40%] [Cov:============>                      36%][Progress:============>                 41%] [Cov:>                                  0%][Progress:============>                 41%] [Cov:>                                  1%][Progress:============>                 41%] [Cov:====>                              13%][Progress:============>                 41%] [Cov:=====>                             15%][Progress:============>                 41%] [Cov:=====>                             16%][Progress:============>                 41%] [Cov:======>                            19%][Progress:============>                 41%] [Cov:=======>                           21%][Progress:============>                 43%] [Cov:>                                  2%][Progress:============>                 43%] [Cov:=>                                 4%][Progress:============>                 43%] [Cov:=====>                             16%][Progress:============>                 43%] [Cov:======>                            18%][Progress:============>                 43%] [Cov:=======>                           20%][Progress:============>                 43%] [Cov:=======>                           21%][Progress:=============>                45%] [Cov:>                                  2%][Progress:=============>                45%] [Cov:=>                                 4%][Progress:=============>                45%] [Cov:=====>                             16%][Progress:=============>                45%] [Cov:======>                            18%][Progress:=============>                45%] [Cov:======>                            19%][Progress:=============>                45%] [Cov:========>                          24%][Progress:=============>                45%] [Cov:=========>                         27%][Progress:=============>                45%] [Cov:=========>                         28%][Progress:===============>              50%] [Cov:>                                  0%][Progress:===============>              50%] [Cov:>                                  1%][Progress:===============>              50%] [Cov:====>                              13%][Progress:===============>              50%] [Cov:====>                              14%][Progress:===============>              50%] [Cov:=====>                             15%][Progress:===============>              50%] [Cov:=====>                             16%][Progress:===============>              51%] [Cov:>                                  0%][Progress:===============>              51%] [Cov:>                                  1%][Progress:===============>              51%] [Cov:====>                              13%][Progress:================>             56%] [Cov:>                                  0%][Progress:================>             56%] [Cov:>                                  1%][Progress:================>             56%] [Cov:====>                              13%][Progress:=================>            58%] [Cov:>                                  0%][Progress:=================>            58%] [Cov:>                                  1%][Progress:=================>            58%] [Cov:====>                              13%][Progress:==================>           60%] [Cov:==>                                6%][Progress:==================>           60%] [Cov:===>                               11%][Progress:==================>           61%] [Cov:========>                          24%][Progress:==================>           61%] [Cov:==========>                        30%][Progress:==================>           61%] [Cov:===========>                       32%][Progress:==================>           61%] [Cov:===========>                       33%][Progress:==================>           61%] [Cov:============>                      37%][Progress:===================>          65%] [Cov:>                                  0%][Progress:===================>          65%] [Cov:>                                  1%][Progress:===================>          65%] [Cov:====>                              13%][Progress:===================>          65%] [Cov:====>                              14%][Progress:=====================>        71%] [Cov:>                                  0%][Progress:=====================>        71%] [Cov:>                                  1%][Progress:=====================>        71%] [Cov:====>                              13%][Progress:=====================>        73%] [Cov:====>                              13%][Progress:=====================>        73%] [Cov:====>                              14%][Progress:======================>       75%] [Cov:>                                  0%][Progress:======================>       75%] [Cov:>                                  1%][Progress:======================>       75%] [Cov:====>                              13%][Progress:======================>       75%] [Cov:====>                              14%][Progress:======================>       76%] [Cov:====>                              13%][Progress:======================>       76%] [Cov:====>                              14%][Progress:========================>     80%] [Cov:>                                  0%][Progress:========================>     80%] [Cov:>                                  1%][Progress:========================>     80%] [Cov:====>                              13%][Progress:========================>     80%] [Cov:====>                              14%][Progress:========================>     81%] [Cov:>                                  0%][Progress:========================>     81%] [Cov:>                                  1%][Progress:========================>     81%] [Cov:====>                              13%][Progress:========================>     81%] [Cov:====>                              14%][Progress:========================>     83%] [Cov:>                                  0%][Progress:========================>     83%] [Cov:>                                  1%][Progress:========================>     83%] [Cov:====>                              13%][Progress:========================>     83%] [Cov:====>                              14%][Progress:========================>     83%] [Cov:============>                      36%][Progress:=========================>    85%] [Cov:====>                              13%][Progress:=========================>    85%] [Cov:====>                              14%][Progress:=========================>    85%] [Cov:=======>                           20%][Progress:=========================>    85%] [Cov:=======>                           22%][Progress:=========================>    85%] [Cov:============>                      37%][Progress:=========================>    86%] [Cov:=======>                           21%][Progress:=========================>    86%] [Cov:========>                          24%][Progress:=========================>    86%] [Cov:===========>                       34%][Progress:=========================>    86%] [Cov:============>                      37%][Progress:==========================>   88%] [Cov:=======>                           22%][Progress:==========================>   88%] [Cov:=========>                         27%][Progress:===========================>  90%] [Cov:====>                              14%][Progress:===========================>  90%] [Cov:=====>                             17%][Progress:===========================>  90%] [Cov:======>                            18%][Progress:===========================>  90%] [Cov:======>                            19%][Progress:===========================>  90%] [Cov:============>                      37%][Progress:===========================>  91%] [Cov:====>                              13%][Progress:===========================>  91%] [Cov:============>                      36%][Progress:===========================>  93%] [Cov:===================>               55%][Progress:============================> 95%] [Cov:=================>                 51%][Progress:============================> 95%] [Cov:==================>                52%][Progress:============================> 95%] [Cov:===================>               55%][Progress:============================> 96%] [Cov:=================>                 51%][Progress:============================> 96%] [Cov:==================>                52%][Progress:============================> 96%] [Cov:===================>               55%][Progress:=============================>98%] [Cov:=================>                 51%][Progress:=============================>98%] [Cov:==================>                52%][Progress:=============================>98%] [Cov:===================>               55%][Progress:==============================100%] [Cov:===================>               55%][Progress:==============================100%] [Cov:====================>              58%]
* Search finished after 63s and 2 generations, 4564 statements, best individual has fitness: 1365.6685216013357
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 77%
* Total number of goals: 851
* Number of covered goals: 659
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 65%
* Total number of goals: 428
* Number of covered goals: 277
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 52%
* Total number of goals: 212
* Number of covered goals: 111
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 25%
* Total number of goals: 28
* Number of covered goals: 7
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 65%
* Total number of goals: 17
* Number of covered goals: 11
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 53%
* Total number of goals: 17
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 65%
* Total number of goals: 428
* Number of covered goals: 277
* Generated 29 tests with total length 162
* Resulting test suite's coverage: 58% (average coverage for all fitness functions)
* Compiling and checking tests
* Writing JUnit test case 'EigenDecompositionImpl_ESTest' to evosuite-tests
* Done!

* Computation finished
