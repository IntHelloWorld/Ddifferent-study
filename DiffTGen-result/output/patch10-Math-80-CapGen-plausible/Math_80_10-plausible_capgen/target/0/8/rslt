* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.math.linear.EigenDecompositionImpl
* Starting client
* Connecting to master process on port 3141
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/patch10-Math-80-CapGen-plausible/Math_80_0-plausible_capgen/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math.linear.EigenDecompositionImpl
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 851
  - Branch 428
  - Exception 0
  - MutationFactory 212
  - Output 28
  - Method 17
  - MethodNoException 17
  - CBranchFitnessFactory 428
* Using seed 1585399618659
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%][Progress:==>                           8%] [Cov:>                                  0%][Progress:==>                           8%] [Cov:>                                  1%][Progress:==>                           8%] [Cov:====>                              13%][Progress:==>                           8%] [Cov:====>                              14%][Progress:===>                          10%] [Cov:>                                  0%][Progress:===>                          10%] [Cov:>                                  1%][Progress:===>                          10%] [Cov:====>                              13%][Progress:===>                          11%] [Cov:====>                              14%][Progress:===>                          13%] [Cov:>                                  0%][Progress:===>                          13%] [Cov:>                                  1%][Progress:===>                          13%] [Cov:====>                              13%][Progress:===>                          13%] [Cov:====>                              14%][Progress:====>                         15%] [Cov:====>                              14%][Progress:=====>                        18%] [Cov:=>                                 3%][Progress:=====>                        18%] [Cov:==>                                6%][Progress:=====>                        18%] [Cov:======>                            19%][Progress:=====>                        18%] [Cov:=======>                           22%][Progress:=====>                        18%] [Cov:========>                          23%][Progress:=====>                        18%] [Cov:========>                          25%][Progress:======>                       20%] [Cov:>                                  0%][Progress:======>                       20%] [Cov:>                                  1%][Progress:======>                       20%] [Cov:====>                              13%][Progress:======>                       20%] [Cov:====>                              14%][Progress:======>                       21%] [Cov:>                                  1%][Progress:======>                       21%] [Cov:>                                  2%][Progress:======>                       21%] [Cov:====>                              14%][Progress:======>                       21%] [Cov:=====>                             16%][Progress:======>                       21%] [Cov:======>                            18%][Progress:======>                       23%] [Cov:>                                  0%][Progress:======>                       23%] [Cov:>                                  1%][Progress:======>                       23%] [Cov:====>                              13%][Progress:=======>                      25%] [Cov:>                                  0%][Progress:=======>                      25%] [Cov:>                                  1%][Progress:========>                     28%] [Cov:====>                              13%][Progress:========>                     28%] [Cov:====>                              14%][Progress:=========>                    30%] [Cov:>                                  0%][Progress:=========>                    30%] [Cov:>                                  1%][Progress:=========>                    30%] [Cov:====>                              13%][Progress:=========>                    30%] [Cov:====>                              14%][Progress:==========>                   35%] [Cov:>                                  0%][Progress:==========>                   35%] [Cov:>                                  1%][Progress:==========>                   35%] [Cov:====>                              13%][Progress:==========>                   35%] [Cov:====>                              14%][Progress:============>                 40%] [Cov:>                                  0%][Progress:============>                 41%] [Cov:>                                  1%][Progress:============>                 41%] [Cov:====>                              13%][Progress:============>                 41%] [Cov:====>                              14%][Progress:============>                 43%] [Cov:==>                                6%][Progress:============>                 43%] [Cov:====>                              12%][Progress:============>                 43%] [Cov:========>                          25%][Progress:============>                 43%] [Cov:==========>                        31%][Progress:============>                 43%] [Cov:===========>                       33%][Progress:============>                 43%] [Cov:=============>                     38%][Progress:=============>                45%] [Cov:>                                  0%][Progress:=============>                45%] [Cov:>                                  1%][Progress:=============>                45%] [Cov:====>                              13%][Progress:=============>                45%] [Cov:====>                              14%][Progress:=============>                46%] [Cov:>                                  0%][Progress:=============>                46%] [Cov:>                                  1%][Progress:=============>                46%] [Cov:====>                              13%][Progress:==============>               48%] [Cov:>                                  0%][Progress:==============>               48%] [Cov:>                                  1%][Progress:==============>               48%] [Cov:====>                              13%][Progress:==============>               48%] [Cov:====>                              14%][Progress:===============>              51%] [Cov:>                                  0%][Progress:===============>              51%] [Cov:>                                  1%][Progress:===============>              51%] [Cov:====>                              13%][Progress:===============>              51%] [Cov:====>                              14%][Progress:===============>              51%] [Cov:=============>                     38%][Progress:================>             55%] [Cov:=====>                             16%][Progress:================>             55%] [Cov:=======>                           22%][Progress:================>             55%] [Cov:========>                          23%][Progress:================>             55%] [Cov:========>                          25%][Progress:================>             56%] [Cov:====>                              13%][Progress:================>             56%] [Cov:====>                              14%][Progress:================>             56%] [Cov:======>                            18%][Progress:=================>            58%] [Cov:=============>                     38%][Progress:==================>           61%] [Cov:====>                              14%][Progress:==================>           63%] [Cov:====>                              14%][Progress:==================>           63%] [Cov:=============>                     38%][Progress:===================>          65%] [Cov:====>                              14%][Progress:===================>          66%] [Cov:===============>                   43%][Progress:====================>         68%] [Cov:=============>                     38%][Progress:====================>         68%] [Cov:==============>                    40%][Progress:====================>         68%] [Cov:===============>                   43%][Progress:=====================>        70%] [Cov:=============>                     38%][Progress:=====================>        70%] [Cov:===============>                   43%][Progress:=====================>        73%] [Cov:===============>                   43%][Progress:======================>       75%] [Cov:==============>                    40%][Progress:======================>       76%] [Cov:===============>                   43%][Progress:======================>       76%] [Cov:===============>                   44%][Progress:======================>       76%] [Cov:===============>                   45%][Progress:=======================>      78%] [Cov:=============>                     38%][Progress:=======================>      78%] [Cov:==============>                    40%][Progress:========================>     80%] [Cov:=================>                 50%][Progress:========================>     81%] [Cov:=================>                 50%][Progress:========================>     83%] [Cov:================>                  47%][Progress:========================>     83%] [Cov:=================>                 50%][Progress:=========================>    86%] [Cov:===============>                   45%][Progress:==========================>   88%] [Cov:================>                  47%][Progress:===========================>  90%] [Cov:=================>                 50%][Progress:===========================>  91%] [Cov:=================>                 50%][Progress:===========================>  93%] [Cov:=================>                 50%][Progress:============================> 96%] [Cov:===============>                   45%][Progress:============================> 96%] [Cov:================>                  47%][Progress:============================> 96%] [Cov:=================>                 50%][Progress:=============================>98%] [Cov:=================>                 50%][Progress:==============================100%] [Cov:================>                  47%][Progress:==============================100%] [Cov:================>                  47%][Progress:==============================100%] [Cov:=================>                 51%]
* Search finished after 64s and 5 generations, 5092 statements, best individual has fitness: 1497.1286380422068
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 73%
* Total number of goals: 851
* Number of covered goals: 625
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 64%
* Total number of goals: 428
* Number of covered goals: 273
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 10
* Number of covered goals: 10
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 48%
* Total number of goals: 212
* Number of covered goals: 102
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 18%
* Total number of goals: 28
* Number of covered goals: 5
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 35%
* Total number of goals: 17
* Number of covered goals: 6
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 29%
* Total number of goals: 17
* Number of covered goals: 5
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 64%
* Total number of goals: 428
* Number of covered goals: 273
* Generated 23 tests with total length 118
* Resulting test suite's coverage: 51% (average coverage for all fitness functions)
* Compiling and checking tests
* Writing JUnit test case 'EigenDecompositionImpl_ESTest' to evosuite-tests
* Done!

* Computation finished
