/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 28 17:18:04 GMT 2020
 */

package org.apache.commons.lang.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.Writer;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.NoSuchElementException;
import java.util.function.Function;
import java.util.function.UnaryOperator;
import java.util.stream.IntStream;
import org.apache.commons.lang.text.StrBuilder;
import org.apache.commons.lang.text.StrMatcher;
import org.apache.commons.lang.text.StrTokenizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StrBuilder_ESTest extends StrBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      int int0 = 462;
      StrBuilder strBuilder0 = new StrBuilder(462);
      StrBuilder strBuilder1 = strBuilder0.append("F't/P:");
      char[] charArray0 = new char[1];
      char char0 = 'U';
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      StrBuilder strBuilder2 = strBuilder0.replaceAll(strMatcher0, "");
      StrBuilder strBuilder3 = strBuilder2.appendPadding(1918, 'i');
      StrBuilder strBuilder4 = strBuilder1.insert(0, 1.5);
      charArray0[0] = 'U';
      // Undeclared exception!
      try { 
        strBuilder1.insert(0, charArray0, 875, (-1468));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: 875
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = 'J';
      charArray0[1] = 'w';
      StrBuilder strBuilder0 = new StrBuilder("7\"nBcMO!~JgXU9K");
      boolean boolean0 = strBuilder0.startsWith("I>,bRO>ID1g0+");
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("PfgVpG%c>]M.");
      StrBuilder strBuilder1 = strBuilder0.clear();
      int int0 = strBuilder0.hashCode();
      StrBuilder strBuilder2 = strBuilder1.append(0.0F);
      StrMatcher strMatcher0 = StrMatcher.charMatcher('i');
      char[] charArray0 = new char[5];
      charArray0[0] = 'i';
      charArray0[1] = 'i';
      charArray0[2] = 'i';
      charArray0[3] = 'i';
      charArray0[4] = 'i';
      strBuilder0.buffer = charArray0;
      StrBuilder strBuilder3 = strBuilder1.appendFixedWidthPadRight(2520, (-2608), 'i');
      int int1 = 147;
      int int2 = strBuilder0.lastIndexOf(strMatcher0, 147);
      Writer writer0 = strBuilder2.asWriter();
      String string0 = strBuilder0.getNewLineText();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      char[] charArray1 = null;
      // Undeclared exception!
      try { 
        strBuilder2.append(strBuilder1, 102, (-2608));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteAll('o');
      StrBuilder strBuilder2 = strBuilder1.append(false);
      StringBuffer stringBuffer0 = new StringBuffer(108);
      StrBuilder strBuilder3 = new StrBuilder(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder3.new StrBuilderTokenizer();
      StrBuilder strBuilder4 = strBuilder0.delete(0, 0);
      StringBuffer stringBuffer1 = strBuilder1.toStringBuffer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher(".r2^Hul; D>l~\"q");
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher("SunOS");
      int int0 = strBuilder2.indexOf(strMatcher0);
      StringBuffer stringBuffer2 = new StringBuffer(stringBuffer0);
      IntStream intStream0 = stringBuffer2.codePoints();
      StrBuilder strBuilder5 = strBuilder1.append(stringBuffer2);
      StrBuilder strBuilder6 = strBuilder5.append(strBuilder2);
      StrBuilder strBuilder7 = strBuilder1.append(true);
      strBuilder1.buffer = null;
      // Undeclared exception!
      try { 
        strBuilder7.deleteAll('%');
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-3012));
      char char0 = '%';
      StrBuilder strBuilder1 = strBuilder0.deleteAll('%');
      StrBuilder strBuilder2 = new StrBuilder("n)-r6+\"GKxQ<OAVI");
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder2);
      StrBuilder strBuilder3 = strBuilder2.trim();
      StrBuilder strBuilder4 = strBuilder3.appendFixedWidthPadRight(108, (-3012), '%');
      StrBuilder strBuilder5 = strBuilder3.setNewLineText("-#>");
      boolean boolean1 = strBuilder3.endsWith("");
      char[] charArray0 = new char[9];
      charArray0[0] = '%';
      charArray0[1] = '%';
      char char1 = 'P';
      charArray0[2] = 'P';
      charArray0[3] = '%';
      charArray0[4] = '%';
      charArray0[5] = '%';
      charArray0[6] = '%';
      charArray0[7] = '%';
      char char2 = '^';
      charArray0[8] = '^';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(108, (-3012), charArray0, 2361);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3012
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      String string0 = "'; the SystemUtils property value will default to null.";
      StrBuilder strBuilder0 = new StrBuilder("'; the SystemUtils property value will default to null.");
      StrBuilder strBuilder1 = strBuilder0.deleteAll("'; the SystemUtils property value will default to null.");
      StrBuilder strBuilder2 = strBuilder1.append(strBuilder0, 0, 0);
      StrBuilder strBuilder3 = strBuilder1.setNullText("'; the SystemUtils property value will default to null.");
      int int0 = 0;
      char char0 = 'S';
      StrBuilder strBuilder4 = strBuilder1.appendPadding(0, 'S');
      StrBuilder strBuilder5 = strBuilder0.replaceFirst("'; the SystemUtils property value will default to null.", "!9&R");
      StrBuilder strBuilder6 = strBuilder5.insert(0, 't');
      StrBuilder strBuilder7 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder7.deleteCharAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(97);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) ", Length: ", 97, 'W');
      StrBuilder strBuilder2 = strBuilder1.append(strBuilder0);
      StrBuilder strBuilder3 = strBuilder1.appendNull();
      StrTokenizer strTokenizer0 = strBuilder3.asTokenizer();
      StrBuilder strBuilder4 = strBuilder0.append(true);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder5 = strBuilder4.appendWithSeparators((Collection) linkedList0, "");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder4.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      StrBuilder strBuilder6 = strBuilder4.deleteAll(strMatcher0);
      StrBuilder strBuilder7 = strBuilder0.appendPadding(97, 'W');
      StrBuilder strBuilder8 = strBuilder0.deleteFirst(strMatcher0);
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 2859);
      StrBuilder strBuilder9 = strBuilder6.replaceFirst('h', 'l');
      // Undeclared exception!
      try { 
        strBuilder3.insert(423, (float) 2859);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 423
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      char char0 = 'e';
      StrBuilder strBuilder1 = strBuilder0.append('e');
      StrBuilder strBuilder2 = strBuilder1.setCharAt(0, 'e');
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadLeft((Object) null, 0, 'e');
      // Undeclared exception!
      try { 
        strBuilder3.append("=$zC1}3z%)p", 0, (-2369));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      int int0 = 462;
      StrBuilder strBuilder0 = new StrBuilder(462);
      StrBuilder strBuilder1 = strBuilder0.append("F't/P:");
      StrBuilder strBuilder2 = strBuilder0.setLength(116);
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrBuilder strBuilder3 = strBuilder2.deleteFirst(strMatcher0);
      char[] charArray0 = new char[1];
      char char0 = 'U';
      StrBuilder strBuilder4 = strBuilder1.insert(0, 1.5);
      String string0 = strBuilder4.midString((-155), (-465));
      charArray0[0] = 'U';
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      StrBuilder strBuilder5 = strBuilder0.appendWithSeparators((Collection) linkedList0, "E;)0q;eX@-u[");
      // Undeclared exception!
      try { 
        strBuilder1.insert(0, charArray0, 878, (-1468));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: 878
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder1 = strBuilder0.append(1357);
      StrBuilder strBuilder2 = new StrBuilder();
      char[] charArray0 = strBuilder2.toCharArray(0, 0);
      int int0 = strBuilder0.lastIndexOf('M', 0);
      StrBuilder strBuilder3 = strBuilder0.insert(0, (double) 0);
      StrTokenizer strTokenizer1 = strBuilder3.asTokenizer();
      StrBuilder strBuilder4 = strBuilder3.deleteCharAt(0);
      StrBuilder strBuilder5 = strBuilder4.trim();
      StrBuilder strBuilder6 = strBuilder0.setLength(1271);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("'; the SystemUtils property value will default to null.");
      StrBuilder strBuilder1 = strBuilder0.deleteAll("'; the SystemUtils property value will default to null.");
      StrBuilder strBuilder2 = strBuilder1.append(strBuilder0, 0, 0);
      StrBuilder strBuilder3 = strBuilder1.setNullText("'; the SystemUtils property value will default to null.");
      StrBuilder strBuilder4 = strBuilder1.appendPadding(0, 'S');
      StrBuilder strBuilder5 = strBuilder0.replaceFirst("'; the SystemUtils property value will default to null.", "!9&R");
      StrBuilder strBuilder6 = strBuilder5.insert(0, 't');
      StrBuilder strBuilder7 = strBuilder0.append(strBuilder1);
      StrBuilder strBuilder8 = strBuilder7.deleteCharAt(0);
      StrBuilder strBuilder9 = strBuilder1.append((Object) "'; the SystemUtils property value will default to null.");
      StrBuilder strBuilder10 = strBuilder5.appendFixedWidthPadRight(2335, 2335, 'C');
      int int0 = strBuilder2.lastIndexOf("", 0);
      StrBuilder strBuilder11 = strBuilder8.ensureCapacity(1492);
      boolean boolean0 = strBuilder4.contains('Q');
      StrBuilder strBuilder12 = strBuilder9.clear();
      StrBuilder strBuilder13 = strBuilder10.deleteAll('G');
      char[] charArray0 = new char[8];
      charArray0[0] = 'S';
      charArray0[1] = 'Q';
      charArray0[2] = 'C';
      charArray0[3] = 'u';
      charArray0[4] = 'm';
      charArray0[5] = 'C';
      charArray0[6] = 'S';
      charArray0[7] = 'C';
      // Undeclared exception!
      try { 
        strBuilder0.getChars((int) 'Q', 0, charArray0, 3293);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.insert(0, 0);
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      int int0 = StrBuilder.CAPACITY;
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      StrBuilder strBuilder2 = strBuilder1.setCharAt(0, 'l');
      StrBuilder strBuilder3 = strBuilder0.replaceAll(strMatcher0, "K.:e;6$bLq>\bQVrs'");
      int int1 = StrBuilder.CAPACITY;
      int int2 = strBuilder1.lastIndexOf("YMc<a(uo}Mf-jP&/.~", 32);
      String string0 = strBuilder0.rightString(32);
      String string1 = strBuilder1.rightString((-1));
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(0.0F);
      StrBuilder strBuilder2 = strBuilder0.append((-1L));
      StrBuilder strBuilder3 = strBuilder0.deleteFirst("end < start");
      int int0 = 0;
      StrBuilder strBuilder4 = strBuilder2.insert(0, "end < start");
      boolean boolean0 = strBuilder2.endsWith("I\"yL;l");
      strBuilder0.buffer = null;
      StrBuilder strBuilder5 = strBuilder3.append((char[]) null, 31, 31);
      String string0 = strBuilder5.rightString(0);
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      String string1 = "";
      int int1 = (-4289);
      int int2 = 0;
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher((char[]) null);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read((char[]) null, 0, 0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.indexOf((StrMatcher) null, 123);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(116);
      String string0 = "D2[}dYs";
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("D2[}dYs", "D2[}dYs");
      String string1 = strBuilder0.midString((-234), 32);
      // Undeclared exception!
      try { 
        strBuilder1.insert((-234), (-1055));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -234
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.insert(0, "W");
      StrBuilder strBuilder2 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder3 = strBuilder1.appendFixedWidthPadRight((Object) strBuilder0, (-1161), 'F');
      int int0 = strBuilder0.indexOf("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      char[] charArray0 = new char[4];
      strBuilder_StrBuilderReader0.mark((-1161));
      charArray0[0] = 'F';
      charArray0[1] = 'F';
      charArray0[2] = 'F';
      charArray0[3] = 'F';
      char[] charArray1 = strBuilder2.getChars(charArray0);
      int int1 = strBuilder1.lastIndexOf('W');
      StrBuilder strBuilder4 = strBuilder3.replaceFirst('F', 'F');
      // Undeclared exception!
      try { 
        strBuilder4.insert((-1161), charArray1, Integer.MAX_VALUE, (int) 'F');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1161
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(false);
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder2 = strBuilder0.append('u');
      StrBuilder strBuilder3 = strBuilder1.appendNull();
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      StrBuilder strBuilder4 = strBuilder0.setNullText((String) null);
      int int0 = strBuilder3.lastIndexOf(strMatcher0, 554);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[6];
      charArray0[0] = 'K';
      charArray0[1] = '#';
      StrBuilder strBuilder5 = strBuilder0.append((StringBuffer) null);
      charArray0[2] = '#';
      charArray0[3] = '#';
      charArray0[4] = '#';
      charArray0[5] = '#';
      strBuilder_StrBuilderWriter0.write(charArray0);
      boolean boolean0 = strBuilder1.equalsIgnoreCase(strBuilder0);
      StrBuilder strBuilder6 = strBuilder1.replaceFirst("length must be valid", "qc/0MYKpg44,yDol");
      boolean boolean1 = strBuilder4.contains('K');
      int int1 = strBuilder1.indexOf('#');
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.setLength(179);
      int int0 = strBuilder0.indexOf("", 179);
      StrBuilder strBuilder2 = strBuilder1.append('/');
      StrBuilder strBuilder3 = strBuilder0.deleteAll((StrMatcher) null);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("rCR@n");
      StrBuilder strBuilder1 = strBuilder0.append(1815);
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("rCR@n");
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_StringMatcher0);
      int int1 = strBuilder0.indexOf("rCR@n", 0);
      StrBuilder strBuilder2 = strBuilder1.ensureCapacity(116);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      char[] charArray0 = new char[9];
      charArray0[0] = 'C';
      charArray0[1] = 'o';
      charArray0[2] = 'v';
      charArray0[3] = 's';
      charArray0[4] = '#';
      charArray0[5] = '\\';
      charArray0[6] = 'y';
      charArray0[7] = 'G';
      charArray0[8] = '~';
      strBuilder0.buffer = charArray0;
      StrBuilder strBuilder1 = strBuilder0.append((String) null, 0, 101);
      String string0 = strBuilder0.getNullText();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      boolean boolean0 = strBuilder0.contains(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      String string0 = "+$YRAL^>k0";
      StrBuilder strBuilder0 = new StrBuilder("+$YRAL^>k0");
      // Undeclared exception!
      try { 
        strBuilder0.equalsIgnoreCase((StrBuilder) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrBuilder strBuilder1 = strBuilder0.deleteAll("Invalid startIndex: ");
      StrBuilder strBuilder2 = strBuilder0.appendNewLine();
      long long0 = strBuilder_StrBuilderReader0.skip((-2826L));
      StrMatcher strMatcher0 = null;
      int int0 = strBuilder0.indexOf((StrMatcher) null);
      StrBuilder strBuilder3 = strBuilder2.deleteAll("startIndex must be valid");
      StrBuilder strBuilder4 = strBuilder3.deleteFirst("Invalid startIndex: ");
      int int1 = strBuilder2.lastIndexOf("startIndex must be valid", (-1057));
      int int2 = strBuilder2.indexOf("~yA!LZ%SL1-=", (-1057));
      int int3 = 0;
      int int4 = strBuilder0.indexOf((String) null, 0);
      StrBuilder strBuilder5 = strBuilder1.append(216);
      StrBuilder strBuilder6 = strBuilder0.append(strBuilder1);
      // Undeclared exception!
      try { 
        strBuilder0.validateRange(3315, 216);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      String string0 = "";
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(0, '1');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      String string0 = "1";
      int int0 = 0;
      int int1 = 2387;
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("org.apache.commons.lang.text.StrMatcher");
      StrBuilder strBuilder1 = strBuilder0.replace(strMatcher0, "1", 0, 2387, 501);
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Collection) null, "org.apache.commons.lang.text.StrMatcher");
      StrBuilder strBuilder3 = strBuilder1.minimizeCapacity();
      char[] charArray0 = new char[1];
      StringBuffer stringBuffer0 = new StringBuffer("1");
      StrBuilder strBuilder4 = strBuilder1.append(stringBuffer0);
      StrBuilder strBuilder5 = strBuilder1.append("org.apache.commons.lang.text.StrMatcher");
      charArray0[0] = 'w';
      strBuilder1.buffer = charArray0;
      strBuilder0.buffer = charArray0;
      // Undeclared exception!
      try { 
        strBuilder1.insert(2387, "1");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2387
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(527);
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight((Object) null, 1399, 'I');
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = new StringBuffer();
      StringBuffer stringBuffer1 = stringBuffer0.append((Object) strBuilder0);
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      String string0 = "";
      int int0 = 5577;
      int int1 = 32;
      // Undeclared exception!
      try { 
        strBuilder0.insert((-3958), (float) 32);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3958
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(2);
      String string0 = strBuilder_StrBuilderTokenizer0.toString();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      String string1 = " \t\n\r\f";
      // Undeclared exception!
      try { 
        strBuilder0.replace(117, (-1), " \t\n\r\f");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      int int1 = strBuilder0.lastIndexOf(strMatcher0, (-1));
      strBuilder_StrBuilderReader0.reset();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst((String) null, (String) null);
      strBuilder_StrBuilderReader0.reset();
      boolean boolean0 = strBuilder0.startsWith("");
      int int2 = strBuilder0.size();
      int int3 = strBuilder1.indexOf('T', 0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-580));
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("\"cxf//6");
      StrBuilder strBuilder2 = strBuilder0.append((Object) "\"cxf//6");
      StrBuilder strBuilder3 = strBuilder0.append("");
      StrBuilder strBuilder4 = strBuilder3.replaceFirst("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter", "\"cxf//6");
      StrBuilder strBuilder5 = strBuilder1.append("\"cxf//6");
      int int0 = strBuilder0.lastIndexOf("", (-580));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('v');
      int int1 = strBuilder5.lastIndexOf(strMatcher1, (-580));
      int int2 = strBuilder1.indexOf(strMatcher0);
      strBuilder_StrBuilderWriter0.write((-1));
      Writer writer0 = strBuilder3.asWriter();
      StrBuilder strBuilder6 = strBuilder5.setNewLineText("\"cxf//6");
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) strBuilder3;
      objectArray0[1] = (Object) "";
      StrMatcher strMatcher2 = StrMatcher.charMatcher('2');
      objectArray0[2] = (Object) strMatcher0;
      objectArray0[3] = (Object) strBuilder_StrBuilderWriter0;
      StrBuilder strBuilder7 = strBuilder1.appendWithSeparators(objectArray0, "");
      int int3 = strBuilder7.hashCode();
      int int4 = strBuilder3.hashCode();
      StrBuilder strBuilder8 = strBuilder4.setNewLineText("Invalid offset: ");
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      char char0 = 'r';
      int int0 = strBuilder0.indexOf('r', 2214);
      StrBuilder strBuilder1 = new StrBuilder("^p*");
      int int1 = 48;
      // Undeclared exception!
      try { 
        strBuilder1.delete(2214, 48);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      char[] charArray0 = new char[6];
      charArray0[0] = 'W';
      charArray0[1] = '_';
      charArray0[2] = 'e';
      charArray0[3] = 'D';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) strMatcher0, 0, '_');
      charArray0[4] = 'N';
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Iterator) strBuilder_StrBuilderTokenizer0, "f<\"'v$,*= 94^c#p3");
      charArray0[5] = 'K';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher(charArray0);
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      boolean boolean1 = strBuilder0.endsWith("AIX");
      StrBuilder strBuilder3 = strBuilder0.deleteFirst("nk");
      StrBuilder strBuilder4 = strBuilder3.append(0.0F);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder3.new StrBuilderReader();
      StrBuilder strBuilder5 = strBuilder3.insert(0, 0.0F);
      boolean boolean2 = strBuilder_StrBuilderReader0.markSupported();
      Writer writer0 = strBuilder3.asWriter();
      int int0 = strBuilder0.lastIndexOf(strMatcher2, 1047);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder");
      int int0 = strBuilder0.lastIndexOf("org.apache.commons.lang.text.StrBuilder");
      char char0 = '_';
      StrBuilder strBuilder1 = strBuilder0.deleteAll('_');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      StrBuilder strBuilder2 = strBuilder0.trim();
      char char1 = '2';
      StrBuilder strBuilder3 = strBuilder2.append('2');
      int int1 = strBuilder1.validateRange(0, 31);
      StrBuilder strBuilder4 = strBuilder1.deleteAll("k0WFfW#9~");
      StrBuilder strBuilder5 = strBuilder1.insert(0, 0);
      StrBuilder strBuilder6 = strBuilder2.append(0);
      StringBuffer stringBuffer0 = strBuilder2.toStringBuffer();
      strBuilder_StrBuilderWriter0.close();
      Writer writer0 = strBuilder1.asWriter();
      // Undeclared exception!
      try { 
        strBuilder4.toCharArray(1194, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = strBuilder0.toCharArray(0, 0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("");
      char char0 = '!';
      int int1 = strBuilder1.indexOf('!', 0);
      StrBuilder strBuilder2 = strBuilder1.append(strBuilder0);
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      int int2 = strBuilder0.indexOf("u~r`n~(%.", (-1));
      StrBuilder strBuilder3 = strBuilder1.setLength(3);
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      String string1 = null;
      // Undeclared exception!
      try { 
        strBuilder1.replace(strMatcher0, (String) null, 0, (-1), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[4];
      charArray0[0] = '#';
      charArray0[1] = 'R';
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "hQrr;|''");
      charArray0[2] = 'C';
      charArray0[3] = 'O';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      StrBuilder strBuilder2 = strBuilder0.deleteFirst((StrMatcher) strMatcher_CharSetMatcher0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadLeft(object0, 0, 'O');
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(183, 183, '^');
      StringBuffer stringBuffer0 = new StringBuffer(183);
      StrBuilder strBuilder2 = strBuilder1.append(stringBuffer0);
      String string0 = strBuilder0.substring(0);
      StrBuilder strBuilder3 = strBuilder1.trim();
      boolean boolean0 = strBuilder2.contains('s');
      StrBuilder strBuilder4 = strBuilder2.deleteFirst("");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder3.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^java.lang.String@0000000002", 899, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = new StrBuilder();
      strBuilder0.size = 0;
      Object object0 = new Object();
      char[] charArray0 = new char[1];
      charArray0[0] = 'z';
      StrBuilder strBuilder2 = strBuilder0.append(charArray0);
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadLeft(object0, 0, 'z');
      StrBuilder strBuilder4 = strBuilder3.insert(0, false);
      StrBuilder strBuilder5 = strBuilder0.appendFixedWidthPadRight((Object) strBuilder1, 0, 'm');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      Object object1 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder strBuilder6 = strBuilder5.append(object1);
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("zcQx");
      StrBuilder strBuilder7 = strBuilder6.deleteAll(strMatcher0);
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher((String) null);
      int int0 = strBuilder1.lastIndexOf(strMatcher2);
      boolean boolean0 = strBuilder3.contains(strMatcher2);
      StrBuilder strBuilder8 = strBuilder1.reverse();
      int int1 = 0;
      StrBuilder strBuilder9 = strBuilder3.appendFixedWidthPadRight(0, 0, 'm');
      // Undeclared exception!
      try { 
        strBuilder2.toCharArray(101, (-1579));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("0W");
      StrBuilder strBuilder1 = strBuilder0.delete(2, 2);
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      char[] charArray0 = new char[2];
      StrBuilder strBuilder2 = strBuilder1.append("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", 4, 4);
      StrMatcher strMatcher1 = StrMatcher.stringMatcher(".~25i$''&D");
      charArray0[0] = '&';
      charArray0[1] = 'H';
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder3 = strBuilder0.replace(strMatcher0, ".~25i$''&D", 4, 986, 31);
      StrBuilder strBuilder4 = strBuilder1.ensureCapacity(0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 735, 986);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      char char0 = '-';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(object0, (-2859), '-');
      // Undeclared exception!
      try { 
        strBuilder0.insert((-2859), (Object) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2859
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset((String) null);
      String string0 = "Ig40>7/p[UEW>3!w";
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "Ig40>7/p[UEW>3!w");
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft(0, 0, 'z');
      strBuilder_StrBuilderWriter0.write((String) null, 2881, 2881);
      strBuilder_StrBuilderWriter0.write((String) null, 2612, 2612);
      int int0 = 1725;
      // Undeclared exception!
      try { 
        strBuilder1.insert(1725, 'g');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1725
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      int int0 = 39;
      StrBuilder strBuilder0 = new StrBuilder(39);
      StrBuilder strBuilder1 = strBuilder0.append((double) 39);
      char char0 = '.';
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft((Object) strBuilder0, 39, '.');
      Writer writer0 = strBuilder0.asWriter();
      String string0 = "";
      StrBuilder strBuilder3 = strBuilder0.deleteFirst("");
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("");
      boolean boolean0 = strBuilder3.contains((StrMatcher) strMatcher_TrimMatcher0);
      StrBuilder strBuilder4 = strBuilder3.appendNull();
      StrBuilder strBuilder5 = strBuilder4.append((float) 39);
      strBuilder4.size = 792;
      // Undeclared exception!
      try { 
        strBuilder5.replaceAll("Invalid startIndex: ", "");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("startIndex must be valid");
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      int int0 = strBuilder1.indexOf((StrMatcher) strMatcher_TrimMatcher0);
      int int1 = strBuilder1.validateRange(0, 0);
      StrMatcher strMatcher0 = StrMatcher.charMatcher('c');
      int int2 = strBuilder0.indexOf(strMatcher0, 0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1);
      StrBuilder strBuilder1 = strBuilder0.append(true);
      StrBuilder strBuilder2 = strBuilder1.append(1.0F);
      StrBuilder strBuilder3 = strBuilder0.append((Object) strBuilder2);
      char[] charArray0 = new char[7];
      charArray0[0] = '7';
      charArray0[1] = '/';
      charArray0[2] = ')';
      charArray0[3] = '+';
      charArray0[4] = 'h';
      charArray0[5] = 'o';
      charArray0[6] = 'u';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      int int0 = strBuilder3.lastIndexOf((StrMatcher) strMatcher_CharSetMatcher0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      StrBuilder strBuilder4 = strBuilder1.append((Object) strBuilder0);
      char[] charArray1 = new char[9];
      charArray1[0] = 'n';
      StrBuilder strBuilder5 = strBuilder0.deleteAll("");
      charArray1[1] = '!';
      charArray1[2] = 'V';
      charArray1[3] = '&';
      charArray1[4] = 'J';
      charArray1[5] = 'i';
      charArray1[6] = ' ';
      charArray1[7] = '<';
      charArray1[8] = 'd';
      char[] charArray2 = strBuilder4.getChars(charArray1);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder();
      boolean boolean0 = strBuilder0.equals((Object) strBuilder1);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      char[] charArray0 = new char[3];
      charArray0[0] = '0';
      charArray0[1] = '1';
      charArray0[2] = 'L';
      strBuilder_StrBuilderWriter0.write(charArray0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      String string0 = "7=af3NDJ";
      StrBuilder strBuilder0 = new StrBuilder("7=af3NDJ");
      int int0 = 114;
      String string1 = strBuilder0.midString(114, 114);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      boolean boolean0 = linkedList0.add((Object) "");
      linkedList0.clear();
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      Function<Object, Object> function0 = Function.identity();
      linkedList0.replaceAll(unaryOperator0);
      StrBuilder strBuilder1 = new StrBuilder("7=af3NDJ");
      boolean boolean1 = linkedList0.offerLast(strBuilder1);
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
      StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
      // Undeclared exception!
      try { 
        strBuilder3.insert(114, '');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 114
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(":%XtJ");
      StrBuilder strBuilder1 = new StrBuilder(3297);
      Writer writer0 = strBuilder1.asWriter();
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1, 0, 0);
      StrBuilder strBuilder3 = strBuilder2.append(strBuilder1);
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrBuilder strBuilder4 = strBuilder2.deleteFirst(strMatcher0);
      StrBuilder strBuilder5 = strBuilder4.appendFixedWidthPadRight(0, (-1265), '2');
      StrBuilder strBuilder6 = strBuilder0.setNewLineText(":%XtJ");
      // Undeclared exception!
      try { 
        strBuilder6.validateRange(3297, 3297);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(false);
      StrBuilder strBuilder2 = strBuilder1.deleteAll('j');
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      char char0 = '#';
      int int0 = strBuilder0.lastIndexOf('#');
      char char1 = 'K';
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadLeft((-1), (-1), 'K');
      StrBuilder strBuilder4 = strBuilder3.append('u');
      StrBuilder strBuilder5 = strBuilder1.appendNull();
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      String string0 = null;
      // Undeclared exception!
      try { 
        strBuilder0.delete((-1), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(0.0F);
      StrBuilder strBuilder2 = strBuilder0.append((-1L));
      StrBuilder strBuilder3 = strBuilder0.deleteFirst("end < start");
      int int0 = 0;
      StrBuilder strBuilder4 = strBuilder2.insert(0, "end < start");
      boolean boolean0 = strBuilder2.endsWith("I\"yL;l");
      strBuilder0.buffer = null;
      StrBuilder strBuilder5 = strBuilder3.append((char[]) null, 31, 31);
      String string0 = strBuilder5.rightString(0);
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      // Undeclared exception!
      try { 
        strBuilder3.replace(strMatcher0, "", (-4289), 0, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -4289
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      int int0 = (-570);
      StrBuilder strBuilder0 = new StrBuilder((-570));
      StrBuilder strBuilder1 = strBuilder0.insert(0, false);
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      int int1 = strBuilder1.lastIndexOf(strMatcher0, (-570));
      String string0 = strBuilder1.substring(0);
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("Rvm)331&W6rb.=S!*W");
      String string1 = "^dT\"/CmO";
      StrBuilder strBuilder2 = strBuilder0.replaceFirst((StrMatcher) strMatcher_TrimMatcher0, "^dT\"/CmO");
      int int2 = strBuilder2.indexOf(strMatcher0);
      String string2 = "P";
      int int3 = strBuilder1.lastIndexOf(strMatcher1, (-1));
      int int4 = strBuilder0.lastIndexOf("P");
      // Undeclared exception!
      try { 
        strBuilder1.append("", (-1), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("RTUiA32lZ");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("RTUiA32lZ", "RTUiA32lZ");
      char[] charArray0 = new char[7];
      charArray0[0] = '@';
      charArray0[1] = '3';
      charArray0[2] = '`';
      charArray0[3] = 's';
      charArray0[4] = 'T';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(2246, 715, charArray0, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 715
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = '@';
      StrBuilder strBuilder1 = strBuilder0.append(1218.1255608247);
      StrBuilder strBuilder2 = strBuilder0.deleteAll('@');
      StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
      StrBuilder strBuilder4 = strBuilder3.setLength(117);
      int int0 = 138;
      String string0 = strBuilder0.leftString(138);
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      int int1 = strBuilder3.indexOf((StrMatcher) strMatcher_NoMatcher0);
      boolean boolean0 = strBuilder0.endsWith("Yz`Wi8|724&CTH2a.Fb");
      // Undeclared exception!
      try { 
        strBuilder1.insert((-3416), false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3416
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("&hmKB63");
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_StringMatcher0, 2971);
      StrMatcher strMatcher0 = StrMatcher.charMatcher('-');
      String string0 = strBuilder0.toString();
      String string1 = strBuilder0.getNewLineText();
      StrBuilder strBuilder1 = strBuilder0.reverse();
      boolean boolean0 = strBuilder1.equals((Object) strMatcher_StringMatcher0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.insert(0, "W");
      StrBuilder strBuilder2 = strBuilder0.minimizeCapacity();
      int int0 = (-1161);
      char char0 = 'F';
      StrBuilder strBuilder3 = strBuilder1.appendFixedWidthPadRight((Object) strBuilder0, (-1161), 'F');
      int int1 = strBuilder0.indexOf("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      char[] charArray0 = new char[4];
      strBuilder_StrBuilderReader0.mark((-1161));
      charArray0[0] = 'F';
      charArray0[1] = 'F';
      charArray0[2] = 'F';
      charArray0[3] = 'F';
      int int2 = Integer.MAX_VALUE;
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 0, Integer.MAX_VALUE);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.clear();
      char[] charArray0 = new char[7];
      charArray0[0] = '>';
      charArray0[1] = '=';
      charArray0[2] = 'J';
      charArray0[3] = '^';
      charArray0[4] = '}';
      charArray0[5] = '(';
      charArray0[6] = '^';
      // Undeclared exception!
      try { 
        strBuilder1.append(charArray0, 0, 1917);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 1917
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceAll('a', '{');
      String string0 = "";
      StrBuilder strBuilder2 = strBuilder0.replaceFirst("java.class.path", "");
      strBuilder2.buffer = null;
      int int0 = (-1);
      // Undeclared exception!
      try { 
        strBuilder2.substring((-1), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder((String) null);
      StrMatcher strMatcher0 = StrMatcher.stringMatcher((String) null);
      int int0 = 57;
      int int1 = strBuilder1.indexOf(strMatcher0, 57);
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      StrBuilder strBuilder2 = strBuilder1.deleteAll(strMatcher0);
      char[] charArray0 = new char[0];
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) strBuilder2;
      objectArray0[1] = (Object) null;
      objectArray0[2] = (Object) strBuilder2;
      objectArray0[3] = (Object) strBuilder1;
      objectArray0[4] = (Object) strBuilder2;
      objectArray0[5] = (Object) strMatcher0;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.next();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      String string0 = null;
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      char[] charArray0 = new char[0];
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      char char0 = '.';
      StrMatcher strMatcher1 = StrMatcher.charMatcher('.');
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight((Object) strMatcher_NoMatcher0, 32, '<');
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[3];
      charArray0[0] = 'W';
      charArray0[1] = 'h';
      charArray0[2] = 'c';
      // Undeclared exception!
      try { 
        strBuilder0.getChars((-1318), (-1318), charArray0, 3275);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1318
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1);
      char[] charArray0 = new char[9];
      charArray0[0] = 'L';
      charArray0[1] = 'R';
      charArray0[2] = '[';
      charArray0[3] = 'C';
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('i');
      charArray0[4] = 's';
      StrBuilder strBuilder2 = strBuilder1.deleteFirst('C');
      charArray0[5] = 'v';
      charArray0[6] = ';';
      charArray0[7] = 'H';
      charArray0[8] = '!';
      StrBuilder strBuilder3 = strBuilder0.append(charArray0, 1, 3);
      StrBuilder strBuilder4 = strBuilder3.append("C%\" ");
      StrBuilder strBuilder5 = strBuilder4.append(true);
      boolean boolean0 = strBuilder0.contains(')');
      boolean boolean1 = strBuilder1.equals((Object) strBuilder0);
      int int0 = strBuilder0.size();
      // Undeclared exception!
      try { 
        strBuilder5.replace(874, 11, "C%\" ");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("file.separator");
      int int0 = strBuilder0.length();
      Object object0 = new Object();
      char[] charArray0 = new char[3];
      char[] charArray1 = new char[7];
      charArray1[0] = ',';
      charArray1[1] = ',';
      charArray1[2] = ',';
      charArray1[3] = ',';
      charArray1[4] = ',';
      charArray1[5] = '<';
      charArray1[6] = ',';
      strBuilder0.buffer = charArray1;
      charArray0[0] = ',';
      charArray0[1] = 'i';
      charArray0[2] = 'N';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, (-1556), 14);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 14
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      boolean boolean0 = strBuilder1.contains(strMatcher0);
      int int0 = (-4845);
      StrBuilder strBuilder2 = new StrBuilder((-4845));
      // Undeclared exception!
      try { 
        strBuilder2.deleteCharAt((-4845));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -4845
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-1541);
      int int1 = 0;
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      StrBuilder strBuilder2 = strBuilder0.append((StrBuilder) null, (-1541), 0);
      char char0 = 'o';
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadLeft((-1541), 0, 'o');
      // Undeclared exception!
      try { 
        strBuilder0.charAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = (-1460);
      char[] charArray0 = new char[8];
      charArray0[0] = '6';
      charArray0[1] = '|';
      charArray0[2] = '*';
      charArray0[3] = '.';
      charArray0[4] = '4';
      charArray0[5] = 'm';
      charArray0[6] = ':';
      charArray0[7] = '!';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, (-1460), (-1460));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -1460
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.append("");
      int int0 = 1619;
      StringBuffer stringBuffer0 = new StringBuffer(1619);
      int int1 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 1619, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("o~/_GF!JcdBKcMy\"");
      char[] charArray0 = new char[4];
      charArray0[0] = 'B';
      charArray0[1] = '\"';
      charArray0[2] = 'X';
      charArray0[3] = 't';
      char[] charArray1 = strBuilder0.getChars(charArray0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char char0 = 'q';
      Writer writer0 = strBuilder_StrBuilderWriter0.append('q');
      strBuilder_StrBuilderWriter0.close();
      StrBuilder strBuilder1 = new StrBuilder();
      int int0 = (-1);
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((Object) strBuilder1, (-1), 'q');
      Writer writer1 = strBuilder_StrBuilderWriter0.append((CharSequence) null);
      // Undeclared exception!
      try { 
        strBuilder2.insert((-952), (Object) strBuilder_StrBuilderWriter0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -952
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("StrTokenizer");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("java.home");
      StrBuilder strBuilder1 = strBuilder0.append('C');
      Object[] objectArray0 = new Object[0];
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators(objectArray0, "java.home");
      StrBuilder strBuilder3 = strBuilder1.replace(0, 0, "end < start");
      char[] charArray0 = strBuilder0.toCharArray();
      StrBuilder strBuilder4 = strBuilder0.append(charArray0);
      String string0 = strBuilder2.getNewLineText();
      StrBuilder strBuilder5 = strBuilder1.append(charArray0, 1, 0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[3];
      charArray0[0] = '?';
      long long0 = strBuilder_StrBuilderReader0.skip(0L);
      charArray0[1] = '|';
      charArray0[2] = 'B';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0);
      char[] charArray1 = new char[4];
      charArray1[0] = 'D';
      charArray1[1] = 'B';
      charArray1[2] = 'w';
      charArray1[3] = 'T';
      int int1 = (-263);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray1, (-263), (-263));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      int int0 = 4;
      StrBuilder strBuilder0 = new StrBuilder(4);
      String string0 = strBuilder0.toString();
      // Undeclared exception!
      try { 
        strBuilder0.insert(4, 4);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 4
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = null;
      int int0 = 0;
      StrBuilder strBuilder2 = new StrBuilder((String) null);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadLeft(0, 0, 'X');
      // Undeclared exception!
      try { 
        strBuilder0.replace(strMatcher0, (String) null, 2259, 2259, 2259);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(", Length: ");
      StrBuilder strBuilder1 = strBuilder0.deleteCharAt(0);
      StrBuilder strBuilder2 = strBuilder0.setCharAt(0, '1');
      StrBuilder strBuilder3 = strBuilder2.deleteAll('1');
      StrBuilder strBuilder4 = strBuilder1.appendFixedWidthPadLeft((Object) "z\"w0_W6H@<4<FT[", 0, '\'');
      StrBuilder strBuilder5 = strBuilder1.append(1671L);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder4.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
      StrBuilder strBuilder6 = strBuilder4.appendFixedWidthPadLeft(0, 0, 'L');
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteAll("Ai!-3nSHAFBuyf#e");
      int int0 = strBuilder0.size();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(0);
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1443), charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1443
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("K5Qpp>jc-E02");
      int int0 = 1511;
      strBuilder0.size = 1511;
      // Undeclared exception!
      try { 
        strBuilder0.appendNewLine();
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(", Length: 0");
      StrBuilder strBuilder1 = strBuilder0.insert(0, ", Length: 0");
      StrBuilder strBuilder2 = new StrBuilder();
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadRight((-4164), (-4164), 'Z');
      StrBuilder strBuilder4 = strBuilder3.appendFixedWidthPadLeft((Object) ", Length: 0", (-4164), 'Z');
      boolean boolean0 = strBuilder0.equals(strBuilder2);
      StrBuilder strBuilder5 = strBuilder2.appendFixedWidthPadRight((-4164), (-2139), 'Z');
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) "", 0, 'K');
      boolean boolean0 = strBuilder0.startsWith("");
      StrBuilder strBuilder2 = strBuilder1.append(0.0F);
      StrBuilder strBuilder3 = strBuilder1.append('K');
      String string0 = strBuilder3.midString(0, 0);
      // Undeclared exception!
      try { 
        strBuilder2.insert((-1813), "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1813
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("remove() is unsupported");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      LinkedList<StrBuilder> linkedList0 = new LinkedList<StrBuilder>();
      StrBuilder strBuilder1 = strBuilder0.setNullText("remove() is unsupported");
      Writer writer0 = strBuilder_StrBuilderWriter0.append('W');
      String string0 = strBuilder1.midString(218, 218);
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
      strBuilder_StrBuilderWriter0.write((-487));
      int int0 = strBuilder1.indexOf("remove() is unsupported", (-487));
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadRight((Object) "", 0, ':');
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("pF?bSmt");
      StrBuilder strBuilder4 = strBuilder0.replace((StrMatcher) strMatcher_StringMatcher0, "", 4, 4, (-487));
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      char char0 = '=';
      StrBuilder strBuilder1 = strBuilder0.append('=');
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrBuilder strBuilder2 = strBuilder1.replaceFirst(strMatcher0, (String) null);
      int int0 = (-2813);
      StrBuilder strBuilder3 = strBuilder0.append(0.0);
      String string0 = strBuilder0.midString((-2813), 3816);
      int int1 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.substring(0, (-2813));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setLength(0);
      // Undeclared exception!
      try { 
        strBuilder1.charAt((-1287));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1287
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.setLength(0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      int int0 = 97;
      StrBuilder strBuilder0 = new StrBuilder(97);
      // Undeclared exception!
      try { 
        strBuilder0.append("Mac", 101, 101);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      String string0 = "G(>xp)]niL<\"\\*S";
      StrBuilder strBuilder0 = new StrBuilder("G(>xp)]niL<\"*S");
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.setLength(0);
      char[] charArray0 = new char[3];
      charArray0[0] = ' ';
      charArray0[1] = 'y';
      charArray0[2] = 'W';
      strBuilder1.buffer = charArray0;
      int int1 = 413;
      // Undeclared exception!
      try { 
        strBuilder1.insert(413, "G(>xp)]niL<\"*S");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 413
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder1 = strBuilder0.append(1357);
      StrBuilder strBuilder2 = strBuilder0.setLength(0);
      char[] charArray0 = strBuilder2.toCharArray(0, 0);
      int int0 = strBuilder0.lastIndexOf('M', 0);
      StrBuilder strBuilder3 = strBuilder0.insert(0, (double) 0);
      StrTokenizer strTokenizer1 = strBuilder3.asTokenizer();
      StrBuilder strBuilder4 = strBuilder3.deleteCharAt(0);
      StrBuilder strBuilder5 = strBuilder4.trim();
      StrBuilder strBuilder6 = strBuilder0.setLength(1271);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "length must be valid";
      boolean boolean0 = strBuilder0.startsWith("length must be valid");
      char char0 = '%';
      int int0 = 651;
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(651, '%');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 651
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.appendPadding((-1251), 'P');
      StrBuilder strBuilder2 = strBuilder0.append(true);
      StrBuilder strBuilder3 = strBuilder2.deleteAll('t');
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      StrBuilder strBuilder4 = strBuilder2.replaceFirst("org.apache.commons.lang.text.StrBuilder", "&4pG^PI");
      StrBuilder strBuilder5 = strBuilder3.replaceAll(strMatcher0, "org.apache.commons.lang.text.StrBuilder");
      strBuilder2.size = 0;
      String string0 = strBuilder0.toString();
      String string1 = strBuilder0.leftString(0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("");
      StrBuilder strBuilder6 = strBuilder0.append(1L);
      char[] charArray0 = new char[3];
      charArray0[0] = 'P';
      charArray0[1] = 't';
      charArray0[2] = 't';
      strBuilder_StrBuilderWriter0.write(charArray0);
      StrBuilder strBuilder7 = strBuilder6.insert(0, true);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("", (-1251), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(0);
      char char0 = strBuilder1.charAt(0);
      char[] charArray0 = new char[7];
      charArray0[0] = '0';
      charArray0[1] = '0';
      charArray0[2] = '0';
      charArray0[3] = '0';
      charArray0[4] = 'L';
      charArray0[5] = 'K';
      charArray0[6] = '0';
      strBuilder0.buffer = charArray0;
      StrBuilder strBuilder2 = strBuilder0.deleteAll((String) null);
      StrBuilder strBuilder3 = strBuilder0.insert(0, "<4*_<$c\"");
      String string0 = strBuilder0.rightString(3294);
      String string1 = strBuilder0.toString();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(0);
      int int0 = (-175);
      // Undeclared exception!
      try { 
        strBuilder2.validateIndex((-175));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -175
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(0);
      char char0 = strBuilder1.charAt(0);
      char[] charArray0 = new char[7];
      charArray0[0] = '0';
      charArray0[1] = '0';
      charArray0[2] = '0';
      charArray0[3] = '0';
      charArray0[4] = 'L';
      charArray0[5] = 'K';
      charArray0[6] = '0';
      strBuilder0.buffer = charArray0;
      StrBuilder strBuilder2 = strBuilder0.deleteAll((String) null);
      StrBuilder strBuilder3 = strBuilder0.insert(0, "<4*_<$c\"");
      String string0 = strBuilder0.toString();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(0);
      int int0 = (-175);
      // Undeclared exception!
      try { 
        strBuilder2.validateIndex((-175));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -175
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("K#3zY49#j#s~dL{* o");
      int int0 = strBuilder0.indexOf((StrMatcher) strMatcher_TrimMatcher0);
      boolean boolean0 = strBuilder0.isEmpty();
      String string0 = strBuilder0.rightString((-1));
      int int1 = strBuilder0.lastIndexOf('@', (-1240));
      Reader reader0 = strBuilder0.asReader();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(862L);
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("D^veX$!s_Ls}E=b=Hu", (String) null);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1));
      StrBuilder strBuilder1 = strBuilder0.append(true);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[0];
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, (-1), (-1));
      int int0 = strBuilder0.lastIndexOf('@', (-884));
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(".p{CxVsYql");
      StrBuilder strBuilder1 = strBuilder0.append(0L);
      StrBuilder strBuilder2 = new StrBuilder();
      StrBuilder strBuilder3 = strBuilder2.appendNewLine();
      boolean boolean0 = strBuilder0.equals(strBuilder2);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      char[] charArray0 = new char[5];
      charArray0[0] = '$';
      charArray0[1] = 'J';
      charArray0[2] = '>';
      charArray0[3] = 'D';
      charArray0[4] = ',';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 115, (-345));
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      int int0 = strBuilder3.lastIndexOf(strMatcher0, 0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceAll("", "");
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2125));
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0, (-501));
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      int int0 = 9;
      StrBuilder strBuilder0 = new StrBuilder(9);
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "n{-aoQ?Y{");
      char char0 = 's';
      int int1 = strBuilder0.indexOf('s');
      boolean boolean0 = strBuilder1.endsWith("");
      StrBuilder strBuilder2 = strBuilder0.deleteAll(strMatcher0);
      boolean boolean1 = strBuilder1.contains("\"-c'#^tEOb]pz3F");
      StrBuilder strBuilder3 = strBuilder0.setNullText("");
      int int2 = strBuilder1.capacity();
      StrBuilder strBuilder4 = strBuilder0.trim();
      String string0 = "";
      String string1 = "tGyVnfM3e!YHax>]T{R";
      // Undeclared exception!
      try { 
        strBuilder2.insert(9, (double) 9);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 9
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      int int0 = 108;
      StrBuilder strBuilder0 = new StrBuilder(108);
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('f');
      StrBuilder strBuilder1 = strBuilder0.appendPadding(108, 'y');
      StringBuffer stringBuffer0 = strBuilder1.toStringBuffer();
      StrMatcher strMatcher2 = StrMatcher.charMatcher('Y');
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.clear();
      String string0 = ";tdU";
      StrBuilder strBuilder3 = strBuilder0.setNullText(";tdU");
      // Undeclared exception!
      try { 
        strBuilder2.delete(108, 9);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.insert(528, 'V');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 528
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      strBuilder1.validateIndex(0);
      String string0 = "cs=I$UxAv";
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Iterator) null, "cs=I$UxAv");
      StrBuilder strBuilder3 = strBuilder2.append(0L);
      // Undeclared exception!
      try { 
        strBuilder1.charAt(117);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 117
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("J`kboHVjNWqiK");
      StrBuilder strBuilder1 = strBuilder0.append((-1.0F));
      StrBuilder strBuilder2 = strBuilder1.insert(0, 0.0);
      StrBuilder strBuilder3 = strBuilder2.insert(5, 'm');
      char[] charArray0 = strBuilder0.toCharArray(0, 0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = new StrBuilder();
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      char char0 = 'F';
      String string0 = "3l";
      int int0 = (-927);
      char[] charArray0 = new char[7];
      charArray0[0] = 'F';
      charArray0[1] = 'F';
      charArray0[2] = 'F';
      charArray0[3] = 'F';
      charArray0[4] = 'F';
      charArray0[5] = 'F';
      charArray0[6] = 'F';
      // Undeclared exception!
      try { 
        strBuilder1.insert((-927), charArray0, (-927), (-927));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -927
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.insert(0, 0L);
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder2 = new StrBuilder("");
      StrBuilder strBuilder3 = strBuilder2.appendNewLine();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      StrBuilder strBuilder4 = strBuilder1.trim();
      strBuilder_StrBuilderReader0.mark(0);
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      boolean boolean1 = strBuilder0.equals(strBuilder1);
      boolean boolean2 = strBuilder0.equalsIgnoreCase(strBuilder2);
      int int0 = strBuilder_StrBuilderReader0.read();
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.append((Object) "");
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("RVK");
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("H]A^]Df");
      int int0 = strBuilder0.indexOf(strMatcher0);
      char[] charArray0 = new char[2];
      charArray0[0] = 'I';
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher("H]A^]Df");
      charArray0[1] = 'b';
      StrMatcher strMatcher3 = StrMatcher.stringMatcher("H]A^]Df");
      StrBuilder strBuilder2 = strBuilder0.append(charArray0);
      int int1 = strBuilder2.indexOf('k');
      int int2 = strBuilder2.indexOf(strMatcher0);
      String string0 = strBuilder2.getNullText();
      int int3 = (-643);
      StrBuilder strBuilder3 = strBuilder1.trim();
      // Undeclared exception!
      try { 
        strBuilder1.substring((-643), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -643
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((-525.6));
      StrBuilder strBuilder2 = strBuilder1.deleteAll("mc-3/G.Y}KCae7XaiQ");
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadRight(0, 0, '8');
      boolean boolean0 = strBuilder0.isEmpty();
      boolean boolean1 = strBuilder0.contains("mc-3/G.Y}KCae7XaiQ");
      boolean boolean2 = strBuilder0.startsWith("");
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.trim();
      // Undeclared exception!
      try { 
        strBuilder0.replace((StrMatcher) null, (String) null, (-2605), (-2605), (-2605));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2605
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteAll("Invalid offset: ");
      int int0 = strBuilder0.capacity();
      StrBuilder strBuilder2 = strBuilder0.append(32);
      int int1 = (-2080);
      StringBuffer stringBuffer0 = null;
      try {
        stringBuffer0 = new StringBuffer((-2080));
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1882));
      StrBuilder strBuilder1 = strBuilder0.setNullText("");
      // Undeclared exception!
      try { 
        strBuilder0.insert(105, (double) (-1882));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 105
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendPadding(1042, 'L');
      StrBuilder strBuilder2 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder3 = strBuilder2.deleteAll("MtahTl[\"iNOY&![");
      StrBuilder strBuilder4 = strBuilder2.append(0.0);
      String string0 = strBuilder4.substring(1, 1);
      StrBuilder strBuilder5 = strBuilder4.clear();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      StrBuilder strBuilder6 = strBuilder3.reverse();
      // Undeclared exception!
      try { 
        strBuilder6.insert(1042, (float) 1042);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1042
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 366;
      // Undeclared exception!
      try { 
        strBuilder0.charAt(366);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 366
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[5];
      charArray0[0] = '\"';
      charArray0[1] = '>';
      charArray0[2] = 'B';
      char char0 = 'z';
      int int0 = 9;
      // Undeclared exception!
      try { 
        strBuilder0.validateRange(32, 9);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(68);
      StrBuilder strBuilder1 = new StrBuilder();
      int int0 = 0;
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("length must be valid");
      StrBuilder strBuilder2 = strBuilder1.deleteAll((StrMatcher) strMatcher_TrimMatcher0);
      char char0 = 'p';
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadRight((Object) strBuilder1, 0, 'p');
      StrBuilder strBuilder4 = strBuilder0.append(0.0);
      Writer writer0 = strBuilder4.asWriter();
      boolean boolean0 = strBuilder1.contains(strMatcher0);
      StrBuilder strBuilder5 = strBuilder0.append((long) 68);
      StrBuilder strBuilder6 = strBuilder5.appendFixedWidthPadRight((Object) strMatcher0, 115, 'p');
      StrBuilder strBuilder7 = strBuilder2.appendFixedWidthPadLeft(68, 1, 'p');
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher((char[]) null);
      StrBuilder strBuilder8 = strBuilder4.deleteCharAt(0);
      StrBuilder strBuilder9 = strBuilder2.replaceFirst('p', 'p');
      strBuilder9.buffer = null;
      String string0 = strBuilder3.toString();
      // Undeclared exception!
      try { 
        strBuilder1.toStringBuffer();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.deleteAll('U');
      int int0 = strBuilder0.length();
      StrBuilder strBuilder2 = strBuilder1.deleteFirst('g');
      StrBuilder strBuilder3 = strBuilder2.append(0);
      StringBuffer stringBuffer0 = strBuilder1.toStringBuffer();
      StrBuilder strBuilder4 = strBuilder2.minimizeCapacity();
      StrBuilder strBuilder5 = strBuilder4.appendFixedWidthPadLeft(0, 5, '?');
      StrBuilder strBuilder6 = strBuilder5.insert(5, (-2443));
      // Undeclared exception!
      try { 
        strBuilder0.substring(2084, (-998));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      int int0 = 1382;
      StrBuilder strBuilder0 = new StrBuilder(1382);
      int int1 = (-749);
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray(1382, (-749));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      char[] charArray0 = new char[5];
      charArray0[0] = 'v';
      int int0 = strMatcher0.isMatch(charArray0, 9, 0, 354);
      charArray0[1] = 'l';
      charArray0[2] = '^';
      charArray0[3] = 'I';
      charArray0[4] = 'w';
      int int1 = strMatcher0.isMatch(charArray0, 0, 0, 0);
      int int2 = strBuilder0.lastIndexOf(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.replace(0, 34, "add() is unsupported");
      // Undeclared exception!
      try { 
        strBuilder0.substring((-2150));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2150
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder0.toString();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      StrBuilder strBuilder1 = strBuilder0.insert(0, object0);
      char[] charArray0 = strBuilder0.toCharArray(0, 4);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "org.apache.commons.lang.text.StrBuilder$StrBuilderReader";
      StrBuilder strBuilder1 = strBuilder0.replace(0, 0, "org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      int int0 = strBuilder0.lastIndexOf("");
      int int1 = 101;
      int int2 = (-2432);
      // Undeclared exception!
      try { 
        strBuilder1.append("yJ)sm(VW5h8y >pj", (-2432), (-737));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrMatcher$CharMatcher");
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('%');
      char[] charArray0 = new char[4];
      charArray0[0] = '%';
      StrMatcher strMatcher0 = StrMatcher.charMatcher('%');
      charArray0[1] = '%';
      charArray0[2] = '%';
      charArray0[3] = '%';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      boolean boolean0 = strBuilder0.contains((StrMatcher) strMatcher_CharMatcher0);
      int int0 = strBuilder0.lastIndexOf('i');
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("org.apache.commons.lang.text.StrMatcher$CharMatcher", (String) null);
      int int1 = strBuilder0.indexOf(strMatcher0, (-1));
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("bQ-G/{G6WK^c, /");
      boolean boolean0 = strBuilder0.endsWith("bQ-G/{G6WK^c, /");
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(5);
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_NoMatcher0, 1245);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      String string0 = strBuilder0.substring(0, 0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int1 = strBuilder_StrBuilderReader0.read();
      int int2 = (-363);
      // Undeclared exception!
      try { 
        strBuilder0.insert(441, 1.0F);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 441
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.toString();
      char char0 = 'q';
      StrBuilder strBuilder1 = strBuilder0.deleteAll('q');
      String string1 = strBuilder0.leftString(2066);
      int int0 = 679;
      StrBuilder strBuilder2 = strBuilder0.setLength(679);
      // Undeclared exception!
      try { 
        strBuilder2.replace(2066, (-1215), "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      char char0 = 'e';
      StrBuilder strBuilder1 = strBuilder0.append('e');
      int int1 = (-249);
      // Undeclared exception!
      try { 
        strBuilder1.setCharAt((-249), 'e');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -249
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = new StringBuffer("java.awt.printerjob");
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      boolean boolean0 = strBuilder0.endsWith("");
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((-2240), 1256, 'k');
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("'(i[.8I}YrXhy-}z");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      StrBuilder strBuilder1 = strBuilder0.append("&?/Vu");
      StrBuilder strBuilder2 = new StrBuilder();
      boolean boolean1 = strBuilder0.equals((Object) strBuilder2);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      // Undeclared exception!
      try { 
        strBuilder0.replace(strMatcher0, "", 671, 671, 671);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder strBuilder1 = strBuilder0.replaceAll("Windows NT", "Invalid offset: ");
      int int0 = 2216;
      long long0 = 0L;
      // Undeclared exception!
      try { 
        strBuilder0.delete((-1443), 2216);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1443
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      // Undeclared exception!
      try { 
        strBuilder0.replace(strMatcher0, (String) null, (-2463), 538, 48);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2463
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(5);
      char[] charArray0 = new char[0];
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0, 0);
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance(charArray0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "");
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip((-566L));
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.insert(0, 0);
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.setCharAt(0, 'G');
      StrBuilder strBuilder3 = strBuilder0.replaceAll(strMatcher0, "K.:e;6$bLq>\bQVrs'");
      int int1 = strBuilder0.lastIndexOf('l');
      int int2 = strBuilder1.lastIndexOf("YMc<a(uo}Mf-jP&/.~", (-1));
      String string0 = strBuilder0.rightString((-1));
      String string1 = strBuilder1.rightString((-1));
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
      int int0 = strBuilder0.indexOf((StrMatcher) null);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      String string0 = "GgDn/\\H/,WpxYyzI4CR";
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "GgDn/H/,WpxYyzI4CR");
      int int0 = 2733;
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex(2733);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2733
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 57;
      StrBuilder strBuilder1 = new StrBuilder(57);
      int int1 = 31;
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, 31, (-4474));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("PfgVpG%c>]M.");
      StrBuilder strBuilder1 = strBuilder0.clear();
      int int0 = strBuilder0.hashCode();
      StrBuilder strBuilder2 = strBuilder1.append(0.0F);
      StrMatcher strMatcher0 = StrMatcher.charMatcher('i');
      int int1 = 147;
      int int2 = strBuilder0.lastIndexOf(strMatcher0, 147);
      Writer writer0 = strBuilder2.asWriter();
      String string0 = strBuilder0.getNewLineText();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      char[] charArray0 = null;
      // Undeclared exception!
      try { 
        strBuilder2.append(strBuilder1, (int) 'i', (-2608));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, (-671), (-671));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) strBuilder0;
      String string0 = strBuilder0.substring(0, 1);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, (String) null);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      int int0 = (-1574);
      // Undeclared exception!
      try { 
        strBuilder1.insert((-1574), 0L);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1574
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder");
      Object[] objectArray0 = new Object[0];
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "org.apache.commons.lang.text.StrBuilder");
      StrBuilder strBuilder2 = strBuilder0.append((-722L));
      String string0 = strBuilder1.rightString(0);
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder1);
      String string1 = strBuilder1.rightString((-2225));
      String string2 = strBuilder0.getNewLineText();
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder0.insert((-2225), charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2225
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1037));
      StrBuilder strBuilder1 = strBuilder0.append(3227);
      StrBuilder strBuilder2 = strBuilder1.replaceFirst("", "");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance("");
      StrTokenizer strTokenizer1 = strBuilder_StrBuilderTokenizer0.setIgnoreEmptyTokens(false);
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      String string1 = strBuilder2.leftString(3227);
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      StrBuilder strBuilder3 = strBuilder1.deleteFirst(strMatcher0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      CharBuffer charBuffer0 = CharBuffer.allocate(97);
      int int0 = strBuilder_StrBuilderReader0.read(charBuffer0);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read((char[]) null, 884, (-1037));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[3];
      charArray0[0] = '-';
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1, 0, 0);
      charArray0[1] = '#';
      charArray0[2] = '#';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 2526, 778);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = '@';
      StrBuilder strBuilder1 = strBuilder0.deleteAll('@');
      StrBuilder strBuilder2 = strBuilder0.setLength(117);
      int int0 = 138;
      String string0 = strBuilder0.leftString(138);
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      int int1 = strBuilder0.indexOf((StrMatcher) strMatcher_NoMatcher0);
      boolean boolean0 = strBuilder0.endsWith("Yz`Wi8|724&CTH2a.Fb");
      // Undeclared exception!
      try { 
        strBuilder0.insert((-3416), false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3416
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.leftString(0);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      strBuilder0.size = (-3925);
      int int0 = strBuilder0.hashCode();
      // Undeclared exception!
      try { 
        strBuilder1.append((-1.0));
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("1.2");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[3];
      charArray0[0] = 'm';
      charArray0[1] = '9';
      charArray0[2] = 'P';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0);
      long long0 = strBuilder_StrBuilderReader0.skip(0L);
      strBuilder_StrBuilderReader0.reset();
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoreEmptyTokens(true);
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher("");
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      int int0 = strBuilder0.lastIndexOf(strMatcher2);
      List list0 = strBuilder_StrBuilderTokenizer0.getTokenList();
      char[] charArray0 = new char[2];
      charArray0[0] = ',';
      charArray0[1] = ',';
      int int1 = strMatcher2.isMatch(charArray0, 3, (-1), 495);
      StrTokenizer strTokenizer1 = strBuilder_StrBuilderTokenizer0.setDelimiterChar('\'');
      int int2 = strBuilder1.indexOf(',', (-1));
      StrBuilder strBuilder2 = strBuilder1.deleteFirst('\"');
      // Undeclared exception!
      try { 
        strBuilder0.replace((-1), (-1), "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-3260));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset("6Mp`Ydy:");
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "");
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.indexOf((String) null);
      StrBuilder strBuilder1 = strBuilder0.append((StrBuilder) null);
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder2 = strBuilder1.replaceAll((StrMatcher) strMatcher_TrimMatcher0, "HLE1+vw3/CF");
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder3 = strBuilder2.append(stringBuffer0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 4182, (-3027));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNull();
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      String string0 = "java.vendor.url";
      StrBuilder strBuilder0 = new StrBuilder("java.vendor.url");
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst((StrMatcher) strMatcher_TrimMatcher0, "java.vendor.url");
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder1.insert(116, charArray0, 116, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 116
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      String string0 = "_[M#<";
      StrBuilder strBuilder0 = new StrBuilder("_[M#<");
      char char0 = 'l';
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(1307, 'l');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1307
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(4979);
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(4979, '<');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 4979
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.awt.graphicsenv");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[6];
      charArray0[1] = '4';
      charArray0[2] = '\\';
      charArray0[3] = '/';
      charArray0[4] = ']';
      charArray0[5] = 'm';
      strBuilder_StrBuilderWriter0.write(charArray0, 0, 0);
      StrBuilder strBuilder1 = strBuilder0.insert(0, "java.vendor.url");
      StrBuilder strBuilder2 = strBuilder1.insert(0, ')');
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrBuilder strBuilder3 = strBuilder1.replaceFirst(strMatcher0, (String) null);
      StrBuilder strBuilder4 = strBuilder3.replace(strMatcher0, "java.vendor.url", 0, 0, 39);
      boolean boolean0 = strBuilder4.equals(strBuilder0);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 311, 547);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 547
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      int int1 = 2818;
      char[] charArray0 = new char[3];
      char char0 = 'L';
      // Undeclared exception!
      try { 
        strBuilder0.setLength((-1306));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1306
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("'; the SystemUtils property value will default to null.");
      StrBuilder strBuilder1 = strBuilder0.deleteAll("'; the SystemUtils property value will default to null.");
      StrBuilder strBuilder2 = strBuilder1.append(strBuilder0, 0, 0);
      StrBuilder strBuilder3 = strBuilder1.setNullText("'; the SystemUtils property value will default to null.");
      StrBuilder strBuilder4 = strBuilder1.appendPadding(0, 'S');
      StrBuilder strBuilder5 = strBuilder0.replaceFirst("'; the SystemUtils property value will default to null.", "!9&R");
      StrBuilder strBuilder6 = strBuilder5.insert(0, 't');
      StrBuilder strBuilder7 = strBuilder0.append(strBuilder1);
      StrBuilder strBuilder8 = strBuilder7.deleteCharAt(0);
      StrBuilder strBuilder9 = strBuilder1.append((Object) "'; the SystemUtils property value will default to null.");
      StrBuilder strBuilder10 = strBuilder5.appendFixedWidthPadRight(2335, 2335, 'C');
      int int0 = strBuilder2.lastIndexOf("", 0);
      StrBuilder strBuilder11 = strBuilder8.ensureCapacity(1492);
      boolean boolean0 = strBuilder4.contains('Q');
      StrBuilder strBuilder12 = strBuilder9.clear();
      StrBuilder strBuilder13 = strBuilder10.deleteAll('G');
      char[] charArray0 = new char[8];
      charArray0[0] = 'S';
      charArray0[1] = 'Q';
      charArray0[2] = 'C';
      charArray0[3] = 'u';
      charArray0[4] = 'm';
      charArray0[5] = 'C';
      charArray0[6] = 'S';
      charArray0[7] = 'C';
      // Undeclared exception!
      try { 
        strBuilder0.getChars((-1231), 0, charArray0, 3293);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1231
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      int int0 = 462;
      StrBuilder strBuilder0 = new StrBuilder(462);
      StrBuilder strBuilder1 = strBuilder0.append("F't/P:");
      char[] charArray0 = new char[1];
      char char0 = 'U';
      StrBuilder strBuilder2 = strBuilder1.insert(0, 1.5);
      charArray0[0] = 'U';
      // Undeclared exception!
      try { 
        strBuilder1.insert(0, charArray0, 875, (-1468));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: 875
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(" T");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char char0 = ')';
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoredChar(')');
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      String string1 = "";
      // Undeclared exception!
      try { 
        strBuilder0.append("", 0, 354);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      String string0 = "LISoWvb}b";
      Writer writer0 = strBuilder0.asWriter();
      StrMatcher strMatcher0 = StrMatcher.charMatcher('9');
      StrMatcher strMatcher1 = StrMatcher.charMatcher('9');
      StrBuilder strBuilder1 = strBuilder0.replace(strMatcher0, "Z<~HKTSccMk-W{*", 0, 0, 5);
      StrBuilder strBuilder2 = strBuilder1.setNewLineText("");
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(4);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 4
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[3];
      charArray0[0] = 'd';
      StrBuilder strBuilder1 = strBuilder0.deleteAll("org.apache.commons.lang.text.StrBuilder");
      charArray0[1] = 'l';
      charArray0[2] = '6';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = strBuilder_StrBuilderReader0.read(charBuffer0);
      int int1 = strBuilder_StrBuilderReader0.read();
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      char[] charArray0 = new char[0];
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('.');
      StrBuilder strBuilder1 = strBuilder0.append((long) (-1));
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight((Object) strMatcher1, (-1), 'e');
      StrMatcher strMatcher2 = StrMatcher.charMatcher('.');
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder3 = strBuilder0.appendWithSeparators((Collection) linkedList0, (String) null);
      int int1 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_NoMatcher0);
      boolean boolean0 = strBuilder0.endsWith((String) null);
      StrBuilder strBuilder4 = strBuilder0.deleteFirst((StrMatcher) strMatcher_NoMatcher0);
      StrBuilder strBuilder5 = strBuilder0.replaceAll("Invalid length: ", (String) null);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean1 = strBuilder5.contains((StrMatcher) strMatcher_NoMatcher0);
      StrBuilder strBuilder6 = strBuilder5.insert(0, (float) 0);
      char char0 = strBuilder5.charAt(0);
      strBuilder_StrBuilderReader0.mark(1129);
      int int2 = strBuilder5.lastIndexOf("");
      StrBuilder strBuilder7 = strBuilder4.appendNewLine();
      long long0 = strBuilder_StrBuilderReader0.skip(1129);
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = strBuilder0.validateRange(0, 0);
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex(945);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 945
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      int int0 = 115;
      StrBuilder strBuilder0 = new StrBuilder(115);
      int int1 = (-659);
      char char0 = '3';
      StrBuilder strBuilder1 = strBuilder0.append('3');
      StrBuilder strBuilder2 = strBuilder1.replaceFirst("Q6U$", "Q6U$");
      char char1 = 'F';
      StrBuilder strBuilder3 = strBuilder1.appendFixedWidthPadLeft((Object) strBuilder0, 115, 'F');
      // Undeclared exception!
      try { 
        strBuilder0.insert((-659), (-1.0F));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -659
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }
}
