/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 29 05:21:33 GMT 2020
 */

package org.apache.commons.lang;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import org.apache.commons.lang.LocaleUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LocaleUtils_ESTest extends LocaleUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("atr).tH,b')mk");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: atr).tH,b')mk
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      List list0 = LocaleUtils.localeLookupList((Locale) null, (Locale) null);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      List list0 = LocaleUtils.countriesByLanguage((String) null);
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("UJBNvM%/w");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: UJBNvM%/w
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      List list0 = LocaleUtils.countriesByLanguage("Invalid locale format: ");
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      List list0 = LocaleUtils.countriesByLanguage("sv");
      List list1 = LocaleUtils.availableLocaleList();
      List list2 = LocaleUtils.languagesByCountry("sv");
      List list3 = LocaleUtils.languagesByCountry("a$(");
      List list4 = LocaleUtils.availableLocaleList();
      List list5 = LocaleUtils.languagesByCountry("");
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      List list0 = LocaleUtils.languagesByCountry((String) null);
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("UJBNvM%/w");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: UJBNvM%/w
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      List list0 = LocaleUtils.languagesByCountry("Invalid locale format: ");
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Locale locale0 = Locale.FRENCH;
      boolean boolean0 = LocaleUtils.isAvailableLocale(locale0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      boolean boolean0 = LocaleUtils.isAvailableLocale((Locale) null);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Set set0 = LocaleUtils.availableLocaleSet();
      Set set1 = LocaleUtils.availableLocaleSet();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Locale locale0 = new Locale("-/NGi9M l0$qX85$", "-/NGi9M l0$qX85$", "-/NGi9M l0$qX85$");
      List list0 = LocaleUtils.localeLookupList(locale0, locale0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Locale locale0 = Locale.FRENCH;
      List list0 = LocaleUtils.localeLookupList(locale0, locale0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("j6yzY2Y");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: j6yzY2Y
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("}}OWB_K jjfx)Hxs ");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: }}OWB_K jjfx)Hxs 
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: 
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Locale locale0 = LocaleUtils.toLocale("sv");
      List list0 = LocaleUtils.localeLookupList(locale0, (Locale) null);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Locale locale0 = LocaleUtils.toLocale((String) null);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("zh-TW");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: zh-TW
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      List list0 = LocaleUtils.localeLookupList((Locale) null);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LocaleUtils localeUtils0 = new LocaleUtils();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      List list0 = LocaleUtils.availableLocaleList();
      List list1 = LocaleUtils.countriesByLanguage("");
      List list2 = LocaleUtils.countriesByLanguage("ja");
      List list3 = LocaleUtils.countriesByLanguage("Dw7Qnf,l");
      List list4 = LocaleUtils.languagesByCountry("B@c_JCc9I%K[Fqc|,");
      Locale locale0 = Locale.ROOT;
      String string0 = locale0.toLanguageTag();
      String[] stringArray0 = Locale.getISOCountries();
      List list5 = LocaleUtils.localeLookupList(locale0);
      List list6 = LocaleUtils.countriesByLanguage("");
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: 
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }
}
