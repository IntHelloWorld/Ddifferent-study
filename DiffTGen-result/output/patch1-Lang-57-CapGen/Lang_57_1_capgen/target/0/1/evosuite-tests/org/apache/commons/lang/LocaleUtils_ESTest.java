/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 29 05:19:43 GMT 2020
 */

package org.apache.commons.lang;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import org.apache.commons.lang.LocaleUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LocaleUtils_ESTest extends LocaleUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("xa{Be1}Lu?N");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: xa{Be1}Lu?N
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("zvH4;IAng8vn6be^");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: zvH4;IAng8vn6be^
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Locale locale0 = new Locale("org.apache.commons.lang.LocaleUtils", "org.apache.commons.lang.LocaleUtils", "org.apache.commons.lang.LocaleUtils");
      List list0 = LocaleUtils.localeLookupList(locale0, locale0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      List list0 = LocaleUtils.countriesByLanguage("th");
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("ID");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: ID
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = null;
      List list0 = LocaleUtils.countriesByLanguage((String) null);
      Locale locale0 = Locale.GERMAN;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) null);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      String string1 = Locale.lookupTag(linkedList0, set0);
      List<Locale> list2 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list1, locale_FilteringMode0);
      List<Locale> list3 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list2);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      List<Locale> list4 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list3, locale_FilteringMode1);
      Locale locale1 = Locale.lookup(linkedList0, list3);
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      List<Locale> list5 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list4, locale_FilteringMode2);
      String string2 = locale0.getExtension('I');
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      Locale.setDefault(locale_Category0, locale0);
      List list6 = LocaleUtils.localeLookupList(locale0, locale0);
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("M.J^s");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: M.J^s
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      List list0 = LocaleUtils.countriesByLanguage("Invalid locale format: ");
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      List list0 = LocaleUtils.countriesByLanguage("mbJ}6#c=%Fhw&Ll@");
      LocaleUtils localeUtils0 = new LocaleUtils();
      Locale locale0 = new Locale("mbJ}6#c=%Fhw&Ll@");
      List list1 = LocaleUtils.localeLookupList(locale0);
      Locale locale1 = Locale.CHINA;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Set<Character> set0 = locale0.getExtensionKeys();
      Set<String> set1 = locale0.getUnicodeLocaleKeys();
      String string0 = Locale.lookupTag(linkedList0, set1);
      String string1 = locale1.getScript();
      String[] stringArray0 = Locale.getISOLanguages();
      List list2 = LocaleUtils.localeLookupList(locale1);
      List list3 = LocaleUtils.countriesByLanguage("");
      boolean boolean0 = LocaleUtils.isAvailableLocale(locale1);
      List list4 = LocaleUtils.languagesByCountry("");
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      List list0 = LocaleUtils.languagesByCountry((String) null);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      boolean boolean0 = LocaleUtils.isAvailableLocale((Locale) null);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Set set0 = LocaleUtils.availableLocaleSet();
      Set set1 = LocaleUtils.availableLocaleSet();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Locale locale0 = Locale.ROOT;
      Locale locale1 = Locale.TAIWAN;
      List list0 = LocaleUtils.localeLookupList(locale0, locale1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      List list0 = LocaleUtils.localeLookupList((Locale) null, (Locale) null);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("a{YiO.'2xkvP@");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: a{YiO.'2xkvP@
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Locale locale0 = LocaleUtils.toLocale("fr");
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("|sUaRyKHfBp}G");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: |sUaRyKHfBp}G
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: 
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Locale locale0 = LocaleUtils.toLocale((String) null);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("tDl1?bF");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: tDl1?bF
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      List list0 = LocaleUtils.availableLocaleList();
  }
}
