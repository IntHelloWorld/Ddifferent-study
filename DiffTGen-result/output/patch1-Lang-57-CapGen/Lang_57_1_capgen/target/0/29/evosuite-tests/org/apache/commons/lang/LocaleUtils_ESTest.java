/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 29 05:25:13 GMT 2020
 */

package org.apache.commons.lang;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import org.apache.commons.lang.LocaleUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LocaleUtils_ESTest extends LocaleUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("z-");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: z-
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("aa8`Pz= NX^qeVn");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: aa8`Pz= NX^qeVn
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("o\n (&*");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: o
         //  (&*
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LocaleUtils localeUtils0 = new LocaleUtils();
      List list0 = LocaleUtils.countriesByLanguage("is");
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LocaleUtils localeUtils0 = new LocaleUtils();
      List list0 = LocaleUtils.countriesByLanguage("`\"pp6OIza,KI#&O!");
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Set<Character> set0 = locale0.getExtensionKeys();
      List list1 = LocaleUtils.localeLookupList(locale0);
      List list2 = LocaleUtils.countriesByLanguage((String) null);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      List list0 = LocaleUtils.languagesByCountry("");
      Locale locale0 = Locale.JAPANESE;
      Locale locale1 = Locale.FRANCE;
      String string0 = locale0.getScript();
      String string1 = locale0.getExtension('T');
      List list1 = LocaleUtils.localeLookupList(locale0);
      List list2 = LocaleUtils.countriesByLanguage("");
      LocaleUtils localeUtils0 = new LocaleUtils();
      List list3 = LocaleUtils.localeLookupList(locale0, locale1);
      List list4 = LocaleUtils.countriesByLanguage("");
      List list5 = LocaleUtils.availableLocaleList();
      boolean boolean0 = LocaleUtils.isAvailableLocale(locale0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      List list0 = LocaleUtils.languagesByCountry("China");
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      boolean boolean0 = LocaleUtils.isAvailableLocale((Locale) null);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Set set0 = LocaleUtils.availableLocaleSet();
      Set set1 = LocaleUtils.availableLocaleSet();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Locale locale0 = new Locale("1t3>Kxl'`", "1t3>Kxl'`", "3U!o&@z2<");
      List list0 = LocaleUtils.localeLookupList(locale0, locale0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      List list0 = LocaleUtils.localeLookupList((Locale) null, (Locale) null);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("hICK~W,*Y)(Q,J");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: hICK~W,*Y)(Q,J
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("~(r>T");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: ~(r>T
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("=??Nv<D7a");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: =??Nv<D7a
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: 
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Locale locale0 = LocaleUtils.toLocale("el");
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Locale locale0 = LocaleUtils.toLocale((String) null);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LocaleUtils localeUtils0 = new LocaleUtils();
      List list0 = LocaleUtils.countriesByLanguage("`\"pp6OIza,KI#&O!");
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Set<Character> set0 = locale0.getExtensionKeys();
      List list1 = LocaleUtils.localeLookupList(locale0);
      List list2 = LocaleUtils.languagesByCountry((String) null);
  }
}
