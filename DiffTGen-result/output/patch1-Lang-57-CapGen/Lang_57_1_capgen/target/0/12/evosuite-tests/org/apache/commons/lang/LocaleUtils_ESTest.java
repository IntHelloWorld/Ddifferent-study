/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 29 05:21:41 GMT 2020
 */

package org.apache.commons.lang;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import org.apache.commons.lang.LocaleUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LocaleUtils_ESTest extends LocaleUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("ba\"4k-&pP");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: ba\"4k-&pP
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("zh-TW");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: zh-TW
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("aZqHm4cgo`~gxoL#a");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: aZqHm4cgo`~gxoL#a
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      List list0 = LocaleUtils.countriesByLanguage("iw");
      Locale locale0 = null;
      try {
        locale0 = new Locale("fi", "in", (String) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Locale", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Locale locale0 = Locale.CHINA;
      Set<Character> set0 = locale0.getExtensionKeys();
      String string0 = locale0.getDisplayScript();
      Locale.setDefault(locale0);
      boolean boolean0 = locale0.hasExtensions();
      String[] stringArray0 = Locale.getISOLanguages();
      boolean boolean1 = locale0.hasExtensions();
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      Locale locale1 = Locale.ROOT;
      String string1 = locale1.getDisplayVariant();
      Locale locale2 = locale1.stripExtensions();
      Object object0 = locale0.clone();
      String string2 = locale0.getDisplayLanguage(locale1);
      Locale.setDefault(locale_Category0, locale0);
      Locale locale3 = locale0.stripExtensions();
      List list0 = LocaleUtils.localeLookupList(locale0, locale0);
      boolean boolean2 = LocaleUtils.isAvailableLocale(locale0);
      List list1 = LocaleUtils.languagesByCountry("");
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      List list0 = LocaleUtils.languagesByCountry((String) null);
      List list1 = LocaleUtils.countriesByLanguage((String) null);
      Locale locale0 = Locale.ENGLISH;
      String[] stringArray0 = Locale.getISOLanguages();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Set set0 = LocaleUtils.availableLocaleSet();
      LocaleUtils localeUtils0 = new LocaleUtils();
      List list0 = LocaleUtils.languagesByCountry("");
      List list1 = LocaleUtils.countriesByLanguage("(.mAy3e");
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      List list2 = LocaleUtils.languagesByCountry("es");
      List list3 = LocaleUtils.availableLocaleList();
      List list4 = LocaleUtils.availableLocaleList();
      List list5 = LocaleUtils.availableLocaleList();
      List list6 = LocaleUtils.countriesByLanguage("es");
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: 
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      boolean boolean0 = LocaleUtils.isAvailableLocale((Locale) null);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Set set0 = LocaleUtils.availableLocaleSet();
      Set set1 = LocaleUtils.availableLocaleSet();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Locale locale0 = Locale.CHINA;
      Locale locale1 = Locale.ROOT;
      List list0 = LocaleUtils.localeLookupList(locale1, locale0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Locale locale0 = new Locale("n", "rp4", "rp4");
      List list0 = LocaleUtils.localeLookupList(locale0, locale0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      List list0 = LocaleUtils.localeLookupList((Locale) null, (Locale) null);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("il=LQ/D");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: il=LQ/D
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("hcyc+H.KrNleU}m-:y");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: hcyc+H.KrNleU}m-:y
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("'E_ k./aF");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: 'E_ k./aF
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Locale locale0 = LocaleUtils.toLocale("in");
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Locale locale0 = LocaleUtils.toLocale((String) null);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("}tqp%AI5|])nEcGq");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: }tqp%AI5|])nEcGq
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Locale locale0 = Locale.ITALIAN;
      List list0 = LocaleUtils.localeLookupList(locale0);
  }
}
