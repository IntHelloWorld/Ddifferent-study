* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.math.linear.EigenDecompositionImpl
* Starting client
* Connecting to master process on port 20173
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/patch1-Math-80-SequenceR/Math_80_1_sequencer/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math.linear.EigenDecompositionImpl
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 851
  - Branch 428
  - Exception 0
  - MutationFactory 212
  - Output 28
  - Method 17
  - MethodNoException 17
  - CBranchFitnessFactory 428
* Using seed 1585431805500
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%][Progress:>                             3%] [Cov:>                                  0%][Progress:>                             3%] [Cov:>                                  1%][Progress:>                             3%] [Cov:====>                              13%][Progress:=>                            5%] [Cov:>                                  0%][Progress:=>                            5%] [Cov:>                                  1%][Progress:=>                            5%] [Cov:====>                              13%][Progress:=>                            5%] [Cov:====>                              14%][Progress:=>                            6%] [Cov:>                                  1%][Progress:=>                            6%] [Cov:>                                  2%][Progress:=>                            6%] [Cov:====>                              14%][Progress:=>                            6%] [Cov:=====>                             15%][Progress:=>                            6%] [Cov:======>                            18%][Progress:=>                            6%] [Cov:=======>                           21%][Progress:=>                            6%] [Cov:=======>                           22%][Progress:==>                           8%] [Cov:====>                              12%][Progress:==>                           8%] [Cov:====>                              13%][Progress:==>                           8%] [Cov:====>                              14%][Progress:===>                          10%] [Cov:====>                              13%][Progress:===>                          10%] [Cov:=====>                             17%][Progress:===>                          10%] [Cov:======>                            19%][Progress:===>                          10%] [Cov:=======>                           21%][Progress:===>                          10%] [Cov:=========>                         26%][Progress:===>                          10%] [Cov:==========>                        30%][Progress:===>                          10%] [Cov:==========>                        31%][Progress:===>                          11%] [Cov:====>                              14%][Progress:===>                          13%] [Cov:====>                              12%][Progress:===>                          13%] [Cov:====>                              13%][Progress:===>                          13%] [Cov:====>                              14%][Progress:===>                          13%] [Cov:=====>                             16%][Progress:===>                          13%] [Cov:======>                            18%][Progress:====>                         15%] [Cov:>                                  0%][Progress:====>                         15%] [Cov:>                                  1%][Progress:====>                         15%] [Cov:====>                              13%][Progress:====>                         16%] [Cov:>                                  0%][Progress:====>                         16%] [Cov:>                                  1%][Progress:====>                         16%] [Cov:====>                              13%][Progress:====>                         16%] [Cov:====>                              14%][Progress:=====>                        18%] [Cov:>                                  1%][Progress:=====>                        18%] [Cov:>                                  2%][Progress:=====>                        18%] [Cov:====>                              14%][Progress:=====>                        18%] [Cov:=====>                             15%][Progress:=====>                        18%] [Cov:=====>                             16%][Progress:=======>                      26%] [Cov:>                                  1%][Progress:=======>                      26%] [Cov:>                                  2%][Progress:=======>                      26%] [Cov:====>                              14%][Progress:=======>                      26%] [Cov:=====>                             15%][Progress:========>                     28%] [Cov:>                                  0%][Progress:========>                     28%] [Cov:>                                  1%][Progress:========>                     28%] [Cov:====>                              13%][Progress:=========>                    30%] [Cov:>                                  0%][Progress:=========>                    30%] [Cov:>                                  1%][Progress:=========>                    30%] [Cov:====>                              13%][Progress:=========>                    30%] [Cov:====>                              14%][Progress:=========>                    33%] [Cov:>                                  0%][Progress:=========>                    33%] [Cov:>                                  1%][Progress:=========>                    33%] [Cov:====>                              13%][Progress:=========>                    33%] [Cov:====>                              14%][Progress:=========>                    33%] [Cov:==========>                        31%][Progress:==========>                   35%] [Cov:====>                              13%][Progress:==========>                   35%] [Cov:==========>                        31%][Progress:==========>                   36%] [Cov:====>                              14%][Progress:==========>                   36%] [Cov:=====>                             16%][Progress:==========>                   36%] [Cov:======>                            18%][Progress:==========>                   36%] [Cov:==========>                        29%][Progress:==========>                   36%] [Cov:==========>                        30%][Progress:==========>                   36%] [Cov:==========>                        31%][Progress:===========>                  38%] [Cov:============>                      36%][Progress:============>                 40%] [Cov:============>                      35%][Progress:============>                 40%] [Cov:============>                      36%][Progress:============>                 40%] [Cov:============>                      36%][Progress:============>                 41%] [Cov:============>                      35%][Progress:============>                 41%] [Cov:============>                      36%][Progress:============>                 43%] [Cov:============>                      35%][Progress:============>                 43%] [Cov:============>                      36%][Progress:============>                 43%] [Cov:============>                      36%][Progress:=============>                45%] [Cov:============>                      35%][Progress:=============>                45%] [Cov:============>                      36%][Progress:=============>                46%] [Cov:============>                      36%][Progress:==============>               48%] [Cov:============>                      36%][Progress:===============>              50%] [Cov:============>                      36%][Progress:===============>              51%] [Cov:============>                      36%][Progress:===============>              53%] [Cov:============>                      36%][Progress:===============>              53%] [Cov:============>                      37%][Progress:================>             56%] [Cov:============>                      37%][Progress:=================>            58%] [Cov:============>                      37%][Progress:==================>           61%] [Cov:============>                      37%][Progress:==================>           63%] [Cov:============>                      37%][Progress:===================>          65%] [Cov:============>                      37%][Progress:===================>          66%] [Cov:============>                      37%][Progress:===================>          66%] [Cov:=============>                     38%][Progress:====================>         68%] [Cov:=============>                     38%][Progress:=====================>        70%] [Cov:=============>                     38%][Progress:=====================>        70%] [Cov:=============>                     39%][Progress:=====================>        70%] [Cov:==============>                    40%][Progress:=====================>        71%] [Cov:=============>                     38%][Progress:=====================>        73%] [Cov:==============>                    40%][Progress:======================>       75%] [Cov:==============>                    40%][Progress:======================>       76%] [Cov:==============>                    40%][Progress:=======================>      78%] [Cov:==============>                    40%][Progress:========================>     80%] [Cov:==============>                    40%][Progress:========================>     81%] [Cov:==============>                    40%][Progress:========================>     83%] [Cov:==============>                    40%][Progress:=========================>    85%] [Cov:==============>                    40%][Progress:=========================>    86%] [Cov:==============>                    40%][Progress:==========================>   88%] [Cov:==============>                    40%][Progress:===========================>  90%] [Cov:==============>                    40%][Progress:===========================>  91%] [Cov:==============>                    40%][Progress:===========================>  93%] [Cov:==============>                    40%][Progress:============================> 95%] [Cov:==============>                    40%][Progress:============================> 96%] [Cov:==============>                    40%][Progress:=============================>98%] [Cov:==============>                    40%][Progress:==============================100%] [Cov:==============>                    40%][Progress:==============================100%] [Cov:==============>                    40%][Progress:==============================100%] [Cov:==============>                    40%][Progress:==============================100%] [Cov:===============>                   43%]
* Search finished after 63s and 16 generations, 8616 statements, best individual has fitness: 3646.236394557823
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 31%
* Total number of goals: 851
* Number of covered goals: 264
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 19%
* Total number of goals: 428
* Number of covered goals: 80
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 24%
* Total number of goals: 212
* Number of covered goals: 51
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 29%
* Total number of goals: 28
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 71%
* Total number of goals: 17
* Number of covered goals: 12
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 59%
* Total number of goals: 17
* Number of covered goals: 10
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 19%
* Total number of goals: 428
* Number of covered goals: 80
* Generated 27 tests with total length 103
* Resulting test suite's coverage: 44% (average coverage for all fitness functions)
* Compiling and checking tests
* Writing JUnit test case 'EigenDecompositionImpl_ESTest' to evosuite-tests
* Done!

* Computation finished
