/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 29 08:18:12 GMT 2020
 */

package org.apache.commons.math.util;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.math.util.FastMath;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FastMath_ESTest extends FastMath_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double double0 = FastMath.nextAfter(0.0, (-4305.7746));
      double double1 = FastMath.cosh((-1789.89814178368));
      double double2 = FastMath.acos(2427.533481714583);
      float float0 = FastMath.abs((-710.9222F));
      double double3 = FastMath.max((-4066.824), 2427.533481714583);
      long long0 = FastMath.max(2621L, 2621L);
      double double4 = FastMath.sqrt((-296.5003604498421));
      int int0 = FastMath.abs(1609956575);
      double double5 = FastMath.floor((-1.0));
      double double6 = FastMath.ulp((-548.2154));
      double double7 = FastMath.log1p(1990.6173269634);
      double double8 = FastMath.floor((-4066.824));
      int int1 = FastMath.min(62, 1609956575);
      double double9 = FastMath.acos(2427.533481714583);
      double double10 = FastMath.tan((-1789.89814178368));
      long long1 = FastMath.min(4578L, 17L);
      double double11 = FastMath.rint((-710.9222F));
      double double12 = FastMath.atan2(Double.NaN, (-1.0));
      double double13 = FastMath.log1p(0.2857142686843872);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double double0 = FastMath.tanh(0.0);
      double double1 = FastMath.log1p(0.0);
      double double2 = FastMath.acosh(0.0);
      double double3 = FastMath.random();
      double double4 = FastMath.random();
      Random.setNextRandom((-1738162464));
      double double5 = FastMath.acosh(0.1);
      double double6 = FastMath.log1p(0.0);
      float float0 = FastMath.abs((float) (-1738162464));
      double double7 = FastMath.tanh(2681.206674534381);
      long long0 = FastMath.abs((-375L));
      double double8 = FastMath.asin((-1738162464));
      double double9 = FastMath.acosh(1.0);
      double double10 = FastMath.sin((-1738162464));
      double double11 = FastMath.floor((-1738162464));
      double double12 = FastMath.cosh(3408.502);
      double double13 = FastMath.atan2(1.73816243E9F, 412.42571);
      double double14 = FastMath.tan(Double.NaN);
      double double15 = FastMath.exp(0.0);
      double double16 = FastMath.acosh(1880.9);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double double0 = FastMath.rint(2190.802);
      double double1 = FastMath.max(1.0, 0.0);
      double double2 = FastMath.asinh(2191.0);
      double double3 = FastMath.ulp(0.0);
      double double4 = FastMath.cbrt(0.0);
      int int0 = FastMath.round(0.0F);
      double double5 = FastMath.acosh(2191.0);
      double double6 = FastMath.atan2((-1286.721655316728), 303.0110489162);
      double double7 = FastMath.asinh(0.0);
      double double8 = FastMath.cos((-1286.721655316728));
      double double9 = FastMath.min(1.0, (-8.0E298));
      double double10 = FastMath.sqrt(2190.802);
      long long0 = FastMath.round(2287.991304848743);
      double double11 = FastMath.cbrt(4.9E-324);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      long long0 = FastMath.abs(4503599627370496L);
      long long1 = FastMath.abs((-2325L));
      double double0 = FastMath.atanh(1L);
      float float0 = FastMath.max((float) 4503599627370496L, (float) 2325L);
      double double1 = FastMath.atan(0.7214844409909045);
      double double2 = FastMath.floor(0.39362657592563277);
      double double3 = FastMath.exp(0.625);
      double double4 = FastMath.rint((-329.6));
      double double5 = FastMath.random();
      double double6 = FastMath.floor(0.7214844409909045);
      double double7 = FastMath.rint(Double.POSITIVE_INFINITY);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double double0 = FastMath.asin(1883.857508366896);
      float float0 = FastMath.min(0.0F, 0.0F);
      double double1 = FastMath.nextUp(1883.857508366896);
      long long0 = FastMath.max((-4271L), 1360L);
      double double2 = FastMath.asin((-1.0));
      double double3 = FastMath.expm1(1360L);
      double double4 = FastMath.exp(1.0);
      float float1 = FastMath.max(0.0F, 0.0F);
      float float2 = FastMath.max((float) 1360L, 0.0F);
      float float3 = FastMath.abs((-4184.252F));
      double double5 = FastMath.asinh(1.8508157176809257);
      double double6 = FastMath.signum(1883.857508366896);
      double double7 = FastMath.expm1(14.136832902969902);
      double double8 = FastMath.floor(1378949.0069083895);
      int int0 = FastMath.round((-1.0F));
      double double9 = FastMath.log1p(1.2331016983979697);
      double double10 = FastMath.sin(Double.NaN);
      int int1 = FastMath.min((-1), 12);
      double double11 = FastMath.toDegrees(1.8358548930975745E-7);
      double double12 = FastMath.floor(1630.7495735);
      int int2 = FastMath.min((-1), (-1));
      double double13 = FastMath.nextAfter((-4184.252F), (-1.0F));
      double double14 = FastMath.exp((-3347.0));
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double double0 = FastMath.floor(10.999999999999998);
      double double1 = FastMath.atanh(10.0);
      double double2 = FastMath.asinh(Double.NaN);
      double double3 = FastMath.tanh(3003.5976969);
      double double4 = FastMath.log1p((-1838.7));
      double double5 = FastMath.atanh(1.0);
      double double6 = FastMath.sin(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double double0 = FastMath.sinh(103.4932574012903);
      double double1 = FastMath.atan2(4.421000946749434E44, (-1482.078671449982));
      double double2 = FastMath.random();
      long long0 = FastMath.round((-4956.908432787613));
      double double3 = FastMath.cbrt(2.0);
      double double4 = FastMath.tanh((-428.0458254572));
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      double double0 = FastMath.nextAfter(0.0, (-4305.7746));
      double double1 = FastMath.cosh((-1789.89814178368));
      double double2 = FastMath.acos(2427.533481714583);
      float float0 = FastMath.abs((-710.9222F));
      double double3 = FastMath.max((-4066.824), 2427.533481714583);
      long long0 = FastMath.max(2621L, 2621L);
      double double4 = FastMath.sqrt((-296.5003604498421));
      int int0 = FastMath.abs(1609956575);
      double double5 = FastMath.floor((-1.0));
      double double6 = FastMath.ulp((-548.2154));
      double double7 = FastMath.log1p(1990.6173269634);
      double double8 = FastMath.floor((-4066.824));
      int int1 = FastMath.min(62, 1609956575);
      double double9 = FastMath.acos(2427.533481714583);
      double double10 = FastMath.toRadians(2427.533481714583);
      double double11 = FastMath.tan((-1789.89814178368));
      long long1 = FastMath.min(4578L, (-1L));
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double double0 = FastMath.atanh((-214.1243344));
      double double1 = FastMath.cosh(0.0);
      double double2 = FastMath.atan2(0.0, 1.0);
      double double3 = FastMath.acos(Double.NaN);
      double double4 = FastMath.nextAfter((-2896.324), 0.0);
      double double5 = FastMath.cosh((-2590.96615));
      double double6 = FastMath.max(1808.6289865711, 0.11111095942313305);
      double double7 = FastMath.signum((-2896.324));
      double double8 = FastMath.sin((-2896.324));
      double double9 = FastMath.signum(Double.NaN);
      double double10 = FastMath.sinh(150.573);
      double double11 = FastMath.abs((-214.1243344));
      float float0 = FastMath.max((-1197.0F), (-1197.0F));
      double double12 = FastMath.cosh(2092.41464597749);
      double double13 = FastMath.toDegrees(2092.41464597749);
      double double14 = FastMath.log(0.11111095942313305);
      double double15 = FastMath.acosh(1.0);
      double double16 = FastMath.tanh(3734.187568);
      double double17 = FastMath.min(1.3526894423597173E-6, 1.0320850239843855);
      long long0 = FastMath.min((-1197L), (-1197L));
      double double18 = FastMath.nextUp(1808.6289865711);
      double double19 = FastMath.pow(1808.6289865711003, (-810.54839));
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      long long0 = FastMath.abs((-1600L));
      double double0 = FastMath.sqrt(1600L);
      double double1 = FastMath.max((double) 1600L, (-0.05417713522911072));
      double double2 = FastMath.log10((-1600L));
      double double3 = FastMath.signum((-4185.134886504699));
      float float0 = FastMath.min(0.0F, (float) (-1600L));
      double double4 = FastMath.pow(Double.NaN, 891.33304479);
      double double5 = FastMath.floor(1600.0);
      double double6 = FastMath.expm1(Double.NaN);
      double double7 = FastMath.random();
      double double8 = FastMath.ulp((-4185.134886504699));
      int int0 = FastMath.max(2147483643, (-991));
      float float1 = FastMath.abs(Float.NaN);
      double double9 = FastMath.sinh(1224.0);
      double double10 = FastMath.rint((-4185.134886504699));
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      float float0 = FastMath.abs(0.0F);
      float float1 = FastMath.abs(0.0F);
      double double0 = FastMath.acos(0.0F);
      double double1 = FastMath.max((double) 0.0F, 1.366701124672226);
      float float2 = FastMath.max(0.0F, 1995.0F);
      double double2 = FastMath.nextUp(1613.0569609);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double double0 = FastMath.sinh((-1369.97473074));
      double double1 = FastMath.log(497.636);
      double double2 = FastMath.sqrt(3.171357693770103);
      double double3 = FastMath.log10(497.636);
      double double4 = FastMath.ulp((-1242.9843));
      double double5 = FastMath.toRadians(Double.NEGATIVE_INFINITY);
      double double6 = FastMath.asinh((-1242.9843));
      double double7 = FastMath.log1p(6.209868886074913);
      double double8 = FastMath.atan((-1242.9843));
      double double9 = FastMath.floor(1.633123935319537E16);
      double double10 = FastMath.tan((-4.469603409122654E-6));
      double double11 = FastMath.log1p((-4.469603409122654E-6));
      double double12 = FastMath.acosh((-543.42));
      double double13 = FastMath.atan2((-4.469603409122654E-6), (-4.469603409122654E-6));
      int int0 = FastMath.abs(18);
      double double14 = FastMath.random();
      double double15 = FastMath.tan(169.691009);
      int int1 = FastMath.min(18, 1088);
      double double16 = FastMath.acos(1.633123935319537E16);
      long long0 = FastMath.round((-1.0));
      double double17 = FastMath.min(Double.NEGATIVE_INFINITY, 0.0);
      double double18 = FastMath.pow(1.7808306190567655, Double.NaN);
      double double19 = FastMath.asinh(1.5574077246549023);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double double0 = FastMath.signum((-2.356194490192345));
      double double1 = FastMath.sin(3482.3660480318304);
      double double2 = FastMath.rint((-1.0));
      double double3 = FastMath.acosh((-1.0));
      double double4 = FastMath.tan(3482.3660480318304);
      double double5 = FastMath.nextAfter(2.479773539153719E-5, (-2.356194490192345));
      long long0 = FastMath.max(2234L, 2234L);
      int int0 = FastMath.max(1610087935, 1610087935);
      double double6 = FastMath.exp(2234L);
      int int1 = FastMath.min((-742), 1610087935);
      int int2 = FastMath.abs(1610087935);
      double double7 = FastMath.tanh(1.560070049119026);
      int int3 = FastMath.min(1610087935, (-742));
      double double8 = FastMath.pow((-466.0), 1.366701124672226);
      double double9 = FastMath.floor(1.0);
      double double10 = FastMath.acos(Double.NaN);
      float float0 = FastMath.abs(0.0F);
      long long1 = FastMath.abs(0L);
      double double11 = FastMath.sin((-1879.05));
      double double12 = FastMath.atan((-970.9932));
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      long long0 = FastMath.min(585L, 585L);
      double double0 = FastMath.floor(585L);
      int int0 = FastMath.abs(1);
      double double1 = FastMath.cbrt((-1031.1999961056931));
      double double2 = FastMath.acosh((-10.102936753773573));
      double double3 = FastMath.expm1((-10.102936753773573));
      long long1 = FastMath.round((-1031.1999961056931));
      double double4 = FastMath.acosh((-10.102936753773573));
      int int1 = FastMath.abs(1);
      double double5 = FastMath.toDegrees(107.338551);
      float float0 = FastMath.abs((float) 585L);
      double double6 = FastMath.log1p(1);
      long long2 = FastMath.abs(585L);
      double double7 = FastMath.asin(Double.NaN);
      double double8 = FastMath.random();
      long long3 = FastMath.max(1484L, (long) 1);
      double double9 = FastMath.atan(Double.NaN);
      float float1 = FastMath.abs(0.0F);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      double double0 = FastMath.signum((-357.61253089));
      double double1 = FastMath.log((-357.61253089));
      int int0 = FastMath.max(0, 0);
      long long0 = FastMath.round(2429.70867546351);
      long long1 = FastMath.abs((-197L));
      double double2 = FastMath.random();
      double double3 = FastMath.min((double) 0, (-18.43086276236962));
      double double4 = FastMath.sqrt(2430L);
      double double5 = FastMath.toDegrees(2430L);
      float float0 = FastMath.abs(0.0F);
      double double6 = FastMath.log10(0.0F);
      double double7 = FastMath.toRadians((-357.61253089));
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      double double0 = FastMath.sin(0.333333333333333);
      double double1 = FastMath.cosh(0.333333333333333);
      double double2 = FastMath.random();
      double double3 = FastMath.asin(0.5000000000042687);
      double double4 = FastMath.asin((-2465.014247523));
      double double5 = FastMath.toDegrees((-1544.092));
      long long0 = FastMath.abs((-4035746434778044925L));
      int int0 = FastMath.min(786, 786);
      double double6 = FastMath.cosh(0.0);
      int int1 = FastMath.round((float) 786);
      double double7 = FastMath.cosh((-2465.014247523));
      int int2 = FastMath.max(1431655765, 16);
      double double8 = FastMath.toDegrees((-1544.092));
      double double9 = FastMath.floor(786);
      float float0 = FastMath.max((float) 1431655765, 0.0F);
      double double10 = FastMath.cos(1431655765);
      double double11 = FastMath.abs((-3551.040006125159));
      double double12 = FastMath.log10(643.6973281);
      double double13 = FastMath.random();
      double double14 = FastMath.log10(5.261908426442558E-7);
      double double15 = FastMath.acos((-88469.95477991432));
      int int3 = FastMath.min(699, 1431655765);
      double double16 = FastMath.tanh(699);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int int0 = FastMath.min(646981381, 646981381);
      int int1 = FastMath.abs(646981381);
      double double0 = FastMath.tanh(646981381);
      double double1 = FastMath.asin((-0.010714690733195933));
      double double2 = FastMath.sqrt(1.197421629234348);
      double double3 = FastMath.pow((-3013.3), 646981381);
      double double4 = FastMath.ceil(1.0);
      double double5 = FastMath.tanh((-0.010714690733195933));
      double double6 = FastMath.log10((-3013.3));
      double double7 = FastMath.atanh((-0.010714280720105463));
      long long0 = FastMath.round((-2790.5500252773986));
      long long1 = FastMath.abs((long) 646981381);
      double double8 = FastMath.sin((-0.010714690733195935));
      double double9 = FastMath.ceil((-0.010714280720105463));
      double double10 = FastMath.acosh(-0.0);
      long long2 = FastMath.min(1225L, (long) 646981381);
      double double11 = FastMath.atan2(Double.NEGATIVE_INFINITY, (-0.010714690733195933));
      double double12 = FastMath.cosh(1.0);
      double double13 = FastMath.cos(0.07490822288864472);
      int int2 = FastMath.round(0.0F);
      double double14 = FastMath.pow((-4970.62403719), (-2791L));
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      double double0 = FastMath.acos((-1.0));
      double double1 = FastMath.cosh((-4.469603409122654E-6));
      double double2 = FastMath.abs((-1.0));
      double double3 = FastMath.acos(1.0000000000099887);
      double double4 = FastMath.cbrt(Double.NaN);
      double double5 = FastMath.log(Double.NaN);
      double double6 = FastMath.sin(1.0000000000099887);
      float float0 = FastMath.abs((-2163.68F));
      float float1 = FastMath.abs(2163.68F);
      double double7 = FastMath.sqrt((-2820.0));
      double double8 = FastMath.cos((-1.0));
      double double9 = FastMath.toRadians(432.91360431028);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      double double0 = FastMath.exp((-1.0));
      double double1 = FastMath.expm1((-92.65));
      double double2 = FastMath.rint(1.5);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      double double0 = FastMath.min(0.08713622391223907, 986.429247149983);
      double double1 = FastMath.atan2((-1211.526843411796), (-2964.575606043894));
      double double2 = FastMath.toRadians((-2964.575606043894));
      long long0 = FastMath.abs(2819561105158720014L);
      double double3 = FastMath.sinh((-2964.575606043894));
      double double4 = FastMath.tanh((-2964.575606043894));
      double double5 = FastMath.log1p(242.1736968516);
      long long1 = FastMath.abs(2819561105158720014L);
      double double6 = FastMath.sin((-2.7536363671257282));
      double double7 = FastMath.cbrt(3.9736429850260626E-8);
      long long2 = FastMath.round(378.638164);
      double double8 = FastMath.nextAfter((-1.0), 6.951502372232782E-7);
      int int0 = FastMath.abs(1);
      double double9 = FastMath.rint((-0.37829737329531654));
      long long3 = FastMath.abs(5648769086999809661L);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      double double0 = FastMath.atanh(254.320907674235);
      double double1 = FastMath.floor(Double.NaN);
      double double2 = FastMath.tanh(1.0);
      double double3 = FastMath.asinh(254.320907674235);
      double double4 = FastMath.sin(6.231747931392697);
      float float0 = FastMath.abs((-1689.0F));
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      double double0 = FastMath.atan2(3262.8988526322, 1586.2504);
      double double1 = FastMath.pow((-1.0), (-1.0));
      double double2 = FastMath.cosh(1.118291934625923);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      double double0 = FastMath.cosh(0.8109631538391113);
      double double1 = FastMath.cos((-4.503599627370496E15));
      double double2 = FastMath.exp((-0.4855348677422206));
      double double3 = FastMath.pow((-1204.5976), (-0.4855348677422206));
      double double4 = FastMath.atanh((-1204.5976));
      long long0 = FastMath.round((-4.503599627370496E15));
      double double5 = FastMath.atan((-0.4855348677422206));
      double double6 = FastMath.acosh((-0.4520086822905733));
      double double7 = FastMath.log10(2938.6852839);
      double double8 = FastMath.floor(3.468153078150148);
      double double9 = FastMath.expm1(0.6153679682494654);
      double double10 = FastMath.nextAfter(Double.NaN, 1.0);
      int int0 = FastMath.min((-886), 477);
      double double11 = FastMath.atanh(0.8109631538391113);
      double double12 = FastMath.signum(0.0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      double double0 = FastMath.pow((-18.43086276236962), 701.52071);
      double double1 = FastMath.tan(5632.234395);
      float float0 = FastMath.abs(0.0F);
      double double2 = FastMath.signum((-1233.1024411274036));
      double double3 = FastMath.ceil(1.560070049119026);
      double double4 = FastMath.cos(0.0F);
      double double5 = FastMath.atanh(576.396853273832);
      long long0 = FastMath.abs(0L);
      double double6 = FastMath.atanh(Double.NaN);
      double double7 = FastMath.tan(576.396853273832);
      long long1 = FastMath.max(0L, 0L);
      double double8 = FastMath.min((-18.43086276236962), 5.669184079525E-24);
      double double9 = FastMath.ulp(701.52071);
      double double10 = FastMath.asin(1.0);
      double double11 = FastMath.pow((-18.43086276236962), (-1233.1024411274036));
      double double12 = FastMath.sinh(Double.NaN);
      long long2 = FastMath.max((-1L), 0L);
      double double13 = FastMath.acos(932.4219);
      double double14 = FastMath.log((-584.4888782));
      double double15 = FastMath.atanh(1.0320850239843855);
      double double16 = FastMath.toDegrees((-1L));
      int int0 = FastMath.max((-3063), (-3063));
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      double double0 = FastMath.max((-1.0), (-1.0));
      double double1 = FastMath.atan2((-1.0), 1.0);
      long long0 = FastMath.round((-0.7853981633974483));
      double double2 = FastMath.ulp(287.63);
      double double3 = FastMath.log(5.6843418860808015E-14);
      float float0 = FastMath.min((float) (-1L), (-1.0F));
      double double4 = FastMath.atanh((-30.498475944637594));
      double double5 = FastMath.pow((-125.55544161138), 5.6843418860808015E-14);
      double double6 = FastMath.atanh((-1821.0));
      double double7 = FastMath.log10(5.6843418860808015E-14);
      double double8 = FastMath.expm1(Double.NaN);
      float float1 = FastMath.abs((-1.0F));
      double double9 = FastMath.cosh(3445.272);
      double double10 = FastMath.log1p((-13.245319809215173));
      long long1 = FastMath.abs((-1L));
      double double11 = FastMath.toDegrees((-4.469603409122654E-6));
      float float2 = FastMath.min((float) (-1L), 0.0F);
      double double12 = FastMath.nextUp(Double.NaN);
      double double13 = FastMath.sinh(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      double double0 = FastMath.cosh(5.041915256481364);
      double double1 = FastMath.cos(5.041915256481364);
      double double2 = FastMath.random();
      double double3 = FastMath.atanh(338.1607);
      int int0 = FastMath.max(18, 18);
      double double4 = FastMath.tanh((-1041.77234));
      double double5 = FastMath.log((-1041.77234));
      double double6 = FastMath.sinh(0.4311765432357788);
      double double7 = FastMath.rint((-1.0));
      double double8 = FastMath.acosh(0.3153223395347595);
      double double9 = FastMath.asinh(0.3235948291799926);
      double double10 = FastMath.cos(Double.NaN);
      double double11 = FastMath.ceil(1057.48585865521);
      double double12 = FastMath.atan2(0.0, 2987.866173761123);
      double double13 = FastMath.sinh((-1.0));
      double double14 = FastMath.asin(6.951502372232782E-7);
      double double15 = FastMath.asin((-139.3292758156));
      int int1 = FastMath.abs(1);
      double double16 = FastMath.atanh(1058.0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      double double0 = FastMath.toRadians((-51.9));
      double double1 = FastMath.sinh((-0.9058258817850571));
      double double2 = FastMath.ceil((-51.9));
      double double3 = FastMath.atan((-0.9058258817850571));
      double double4 = FastMath.min(3050.653109485971, (-756.58722696));
      double double5 = FastMath.expm1(3050.653109485971);
      double double6 = FastMath.exp(1263.80693225);
      double double7 = FastMath.signum(1.4456468917292502E-16);
      double double8 = FastMath.asin(6.951502372232782E-7);
      float float0 = FastMath.abs(0.0F);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      double double0 = FastMath.pow(5617.177, 5617.177);
      double double1 = FastMath.tan(5617.177);
      double double2 = FastMath.exp((-1048.73381969));
      double double3 = FastMath.log1p(Double.POSITIVE_INFINITY);
      double double4 = FastMath.max(0.0, 0.10526403784751892);
      double double5 = FastMath.atanh((-940.636534446));
      float float0 = FastMath.min(3675.5F, 1.0F);
      double double6 = FastMath.atan((-1048.73381969));
      double double7 = FastMath.tanh((-1048.73381969));
      double double8 = FastMath.log10((-1048.73381969));
      double double9 = FastMath.sin(0.0);
      int int0 = FastMath.abs(1);
      float float1 = FastMath.abs(1.0F);
      double double10 = FastMath.signum((-34.0));
      double double11 = FastMath.atan(3.4620039155736807E-7);
      double double12 = FastMath.cos((-1.0));
      int int1 = FastMath.round((float) 1);
      double double13 = FastMath.abs((double) 1);
      double double14 = FastMath.atan2(0.9315964599440725, 0.5403023058681398);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      float float0 = FastMath.abs(0.0F);
      double double0 = FastMath.rint(0.0F);
      double double1 = FastMath.log1p(0.0F);
      double double2 = FastMath.acosh(0.0);
      long long0 = FastMath.abs(4208363204685324176L);
      double double3 = FastMath.cbrt((-977.92));
      double double4 = FastMath.sqrt(0.0);
      double double5 = FastMath.nextAfter((-977.92), 4208363204685324176L);
      double double6 = FastMath.expm1(1.0);
      float float1 = FastMath.min(0.0F, 0.0F);
      int int0 = FastMath.abs(646981381);
      double double7 = FastMath.sqrt(3.0);
      int int1 = FastMath.round(Float.NaN);
      double double8 = FastMath.abs((double) Float.NaN);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      double double0 = FastMath.atan2((-71.3297), 1.074682223392077);
      float float0 = FastMath.max(0.0F, (-1.0F));
      float float1 = FastMath.abs(0.0F);
      double double1 = FastMath.cos((-499.843268));
      double double2 = FastMath.random();
      double double3 = FastMath.min(0.0, 0.0);
      double double4 = FastMath.cosh(0.25534192122103627);
      double double5 = FastMath.cosh(0.0F);
      long long0 = FastMath.min(1450L, 1450L);
      double double6 = FastMath.atanh((-1625.0));
      double double7 = FastMath.sin(0.7316888570785522);
      double double8 = FastMath.log10((-1331.0));
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      int int0 = FastMath.abs(457);
      long long0 = FastMath.max(0L, (-497L));
      double double0 = FastMath.max(2124.9, (double) 0L);
      double double1 = FastMath.asin(0L);
      double double2 = FastMath.toRadians(457);
      double double3 = FastMath.atan2(3.001117512531765E-7, 0L);
      int int1 = FastMath.abs(457);
      float float0 = FastMath.max(0.0F, (-2251.0F));
      double double4 = FastMath.cos(0.9305076599121094);
      float float1 = FastMath.min(0.0F, (float) (-497L));
      double double5 = FastMath.cosh(0.5403022766113281);
      double double6 = FastMath.sin(457);
      double double7 = FastMath.sinh((-183.3));
      double double8 = FastMath.cos(4193.94896643);
      int int2 = FastMath.min(860, 457);
      long long1 = FastMath.min(0L, (long) 457);
      double double9 = FastMath.cosh((-497L));
      double double10 = FastMath.signum(4193.94896643);
      long long2 = FastMath.round((-251.95061772972));
      double double11 = FastMath.tan(5222.42489092014);
      double double12 = FastMath.toDegrees((-1424.675292764));
      double double13 = FastMath.rint(0.5403022766113281);
      double double14 = FastMath.acosh(457);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      double double0 = FastMath.signum((-944.18987));
      long long0 = FastMath.min(0L, (-1L));
      double double1 = FastMath.nextAfter((-260.64120639), (-371.49324541059));
      double double2 = FastMath.atan((-1L));
      double double3 = FastMath.toRadians((-944.18987));
      double double4 = FastMath.acosh(764.5748398);
      double double5 = FastMath.tanh((-16.479221995477232));
      double double6 = FastMath.log1p((-1.0));
      double double7 = FastMath.log((-1459.55081));
      double double8 = FastMath.expm1(9.219544613762692E-9);
      double double9 = FastMath.pow((-1L), 3541.072287180614);
      double double10 = FastMath.toDegrees((-3992.7299219991273));
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      int int0 = FastMath.max((-1067), 646981381);
      double double0 = FastMath.sinh(646981381);
      double double1 = FastMath.atan2(646981381, (-518.727884432905));
      int int1 = FastMath.max((-1067), (-1));
      float float0 = FastMath.max(0.0F, (float) (-1));
      int int2 = FastMath.round((float) 646981381);
      double double2 = FastMath.pow(Double.POSITIVE_INFINITY, 0.0);
      double double3 = FastMath.min(3501.0193426, 250.0);
      float float1 = FastMath.abs((-3627.756F));
      double double4 = FastMath.nextUp(187.0);
      long long0 = FastMath.abs(1L);
      double double5 = FastMath.log10(Double.POSITIVE_INFINITY);
      double double6 = FastMath.random();
      int int3 = FastMath.max(229, 137);
      double double7 = FastMath.toRadians((-1067));
      double double8 = FastMath.log((-1));
      double double9 = FastMath.cbrt(0.4311765432357788);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      double double0 = FastMath.toDegrees(1.9699272335463627E-8);
      double double1 = FastMath.atan2((-1.0), (-1.0));
      double double2 = FastMath.atan2(3835.0, 0.07490822288864472);
      double double3 = FastMath.rint(304.4350802873772);
      double double4 = FastMath.tan(304.4350802873772);
      double double5 = FastMath.log1p((-1584.7732));
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      float float0 = FastMath.abs((-2246.401F));
      double double0 = FastMath.sin((-711.44));
      double double1 = FastMath.max((double) (-2246.401F), (double) (-2246.401F));
      int int0 = FastMath.abs(2147483056);
      double double2 = FastMath.asin((-2246.40087890625));
      int int1 = FastMath.max(2147483056, 2147483056);
      int int2 = FastMath.min(2147483056, (-1));
      double double3 = FastMath.floor(2147483056);
      double double4 = FastMath.pow((-1), 1.997844754509471E-9);
      double double5 = FastMath.acosh(2147483056);
      double double6 = FastMath.exp(2147483056);
      double double7 = FastMath.min((-154.09577638047), Double.NaN);
      long long0 = FastMath.min(0L, (long) (-1));
      double double8 = FastMath.log((-1.0));
      double double9 = FastMath.tan((-359.79488960139));
      double double10 = FastMath.cosh(61.101553346493);
      double double11 = FastMath.nextUp(2147483056);
      double double12 = FastMath.sinh((-154.09577638047));
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      double double0 = FastMath.sqrt((-291.03756));
      double double1 = FastMath.cosh(Double.NaN);
      double double2 = FastMath.max(Double.NaN, Double.NaN);
      double double3 = FastMath.cbrt((-291.03756));
      double double4 = FastMath.cosh((-18.457971236441537));
      double double5 = FastMath.atanh((-291.03756));
      double double6 = FastMath.nextAfter((-717.12731285), 0.19454771280288696);
      float float0 = FastMath.max((-2089.3125F), 1.0F);
      double double7 = FastMath.max((-1589.458), (-2132.0));
      double double8 = FastMath.abs(5.0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      double double0 = FastMath.exp((-358.3664753448571));
      double double1 = FastMath.sinh(1.0);
      double double2 = FastMath.acosh((-655.2322783614));
      double double3 = FastMath.acos((-655.2322783614));
      double double4 = FastMath.acosh(2.3089645151950305E-156);
      double double5 = FastMath.max((-859.6367659121), (-358.3664753448571));
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      double double0 = FastMath.floor(2961.75768);
      double double1 = FastMath.asin((-806.5961595));
      long long0 = FastMath.max(0L, (-1992L));
      double double2 = FastMath.signum((-1.0));
      double double3 = FastMath.cbrt(75.862687767);
      double double4 = FastMath.acosh(0L);
      int int0 = FastMath.max(1610087935, 838837812);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      double double0 = FastMath.acosh(0.6409968137741089);
      double double1 = FastMath.exp((-2136.8625065133688));
      double double2 = FastMath.tanh(0.0);
      double double3 = FastMath.asin((-2136.8625065133688));
      double double4 = FastMath.floor((-3437.856051732638));
      double double5 = FastMath.sqrt((-2136.8625065133688));
      double double6 = FastMath.sqrt(433.5318283818561);
      long long0 = FastMath.min((-1043L), 1L);
      double double7 = FastMath.random();
      double double8 = FastMath.tanh(Double.NaN);
      double double9 = FastMath.atanh((-923.853));
      double double10 = FastMath.min((-197.0), (-1340.0));
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      long long0 = FastMath.min(1499L, 1499L);
      double double0 = FastMath.asinh(1.197421629234348);
      double double1 = FastMath.atan2(1.0143214543180745, 1.0143214543180745);
      double double2 = FastMath.expm1((-1.0));
      double double3 = FastMath.tan(1.197421629234348);
      double double4 = FastMath.cosh(842.13426005);
      double double5 = FastMath.ulp((-1352.4665799400477));
      double double6 = FastMath.log1p((-109.74222697));
      int int0 = FastMath.max(1, 1);
      double double7 = FastMath.toDegrees(0.0);
      double double8 = FastMath.tanh(0.0);
      float float0 = FastMath.min(363.19F, 363.19F);
      double double9 = FastMath.cbrt(1.197421629234348);
      double double10 = FastMath.acosh(1350.8133214314);
      double double11 = FastMath.cbrt(3.814697265625E-6);
      float float1 = FastMath.abs(363.19F);
      double double12 = FastMath.atan(363.19F);
      double double13 = FastMath.tan((-1.0));
      double double14 = FastMath.sqrt(0.7853981633974483);
      long long1 = FastMath.max(0L, (long) 1);
      double double15 = FastMath.atanh(2.2737367544323206E-13);
      double double16 = FastMath.pow(1L, (-1352.4665799400477));
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      double double0 = FastMath.random();
      double double1 = FastMath.tanh(0.0);
      double double2 = FastMath.pow(0.6409968137741089, 0.6409968137741089);
      double double3 = FastMath.exp(0.7519608472894036);
      double double4 = FastMath.tan(0.0);
      double double5 = FastMath.acosh(933.33775284509);
      double double6 = FastMath.exp(0.0);
      double double7 = FastMath.atanh(198.77);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      double double0 = FastMath.atan(1.3526894423597173E-6);
      double double1 = FastMath.nextAfter((-4030.517507624), (-4030.517507624));
      double double2 = FastMath.nextUp((-1662.2044156559));
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      long long0 = FastMath.round((-8.0E298));
      double double0 = FastMath.min((-614.18115604484), 20.0);
      long long1 = FastMath.round((-614.18115604484));
      long long2 = FastMath.min(2008L, 2008L);
      double double1 = FastMath.signum(3150.212028);
      double double2 = FastMath.cos(2008L);
      double double3 = FastMath.asinh((-8.0E298));
      double double4 = FastMath.atan(3150.212028);
      double double5 = FastMath.ulp(4123.963537666097);
      double double6 = FastMath.tan(1363.836326630513);
      double double7 = FastMath.acosh((-8.0E298));
      int int0 = FastMath.min(2061584302, 2061584302);
      double double8 = FastMath.nextAfter(1649.9158269662, (-614L));
      int int1 = FastMath.round((float) 2061584302);
      int int2 = FastMath.round((-204.0F));
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      double double0 = FastMath.floor(1181.2868136396125);
      float float0 = FastMath.max((-1330.8582F), (-1330.8582F));
      double double1 = FastMath.signum(0.0);
      double double2 = FastMath.cbrt(3458.181308612);
      int int0 = FastMath.round(0.0F);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      double double0 = FastMath.toDegrees(14.101419947171719);
      double double1 = FastMath.atan2(1.8014398509481984E16, 1.8014398509481984E16);
      double double2 = FastMath.tan(1175.6643984);
      double double3 = FastMath.acosh(1175.6643984);
      double double4 = FastMath.log1p(0.7853981633974483);
      double double5 = FastMath.ulp(0.8573504957841273);
      double double6 = FastMath.cosh(0.8573504957841273);
      double double7 = FastMath.atan(0.7853981633974483);
      int int0 = FastMath.round(0.0F);
      double double8 = FastMath.sinh(0);
      double double9 = FastMath.nextAfter(0.7853981633974483, (-281.2683149699874));
      double double10 = FastMath.floor(0.5796414510841191);
      long long0 = FastMath.abs(0L);
      double double11 = FastMath.cbrt(1066.6588730312);
      double double12 = FastMath.toDegrees(10.217434213785223);
      double double13 = FastMath.toDegrees(1.3905962576656563);
      double double14 = FastMath.asinh(79.67529657092885);
      double double15 = FastMath.sin(7.762735711908119);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      double double0 = FastMath.max((-1.96311335463638), 0.0);
      double double1 = FastMath.nextAfter(1.225743062930824E-8, (-2555.9858052));
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      double double0 = FastMath.pow(1.0, 1.0);
      double double1 = FastMath.exp(1.0);
      int int0 = FastMath.min(189, 189);
      float float0 = FastMath.min((float) 189, (float) 189);
      double double2 = FastMath.min(1.0, 2.718281828459045);
      double double3 = FastMath.ulp(1103.714);
      double double4 = FastMath.sinh(1.8358548930975745E-7);
      int int1 = FastMath.max(189, 2143);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      double double0 = FastMath.cosh(1849.9793085958706);
      double double1 = FastMath.min((-285.6046197), 1849.9793085958706);
      double double2 = FastMath.asinh((-1131.716767));
      double double3 = FastMath.tan(Double.POSITIVE_INFINITY);
      double double4 = FastMath.random();
      double double5 = FastMath.sinh(352.2816223876);
      double double6 = FastMath.log(Double.POSITIVE_INFINITY);
      double double7 = FastMath.expm1(0.0);
      double double8 = FastMath.nextUp(Double.NaN);
      double double9 = FastMath.atanh(0.0);
      double double10 = FastMath.asin((-278.83815796));
      int int0 = FastMath.round(0.0F);
      double double11 = FastMath.asinh((-101.81064778));
      double double12 = FastMath.min((-1.0), 6.951502372232782E-7);
      double double13 = FastMath.log10(0.0);
      double double14 = FastMath.exp(1272.38);
      double double15 = FastMath.asinh(3.001117512531765E-7);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      double double0 = FastMath.acosh(16.0);
      long long0 = FastMath.max((-254L), 0L);
      double double1 = FastMath.acosh(8.0);
      double double2 = FastMath.atan2(0.0, 0L);
      long long1 = FastMath.min(0L, (-2057L));
      float float0 = FastMath.abs((float) 0L);
      double double3 = FastMath.asin(0.0);
      double double4 = FastMath.sin(0.0);
      long long2 = FastMath.min(0L, 1787L);
      double double5 = FastMath.toRadians(678.6000619598384);
      double double6 = FastMath.rint(0.0);
      int int0 = FastMath.round(0.0F);
      double double7 = FastMath.min(0.0, (double) 1787L);
      double double8 = FastMath.atanh(790.694);
      int int1 = FastMath.max(2239, 2239);
      double double9 = FastMath.floor(8.0);
      double double10 = FastMath.random();
      double double11 = FastMath.pow((-0.3058015757857271), 3.464757906675863);
      double double12 = FastMath.atanh(3.464757906675863);
      long long3 = FastMath.abs((long) 2239);
      double double13 = FastMath.random();
      long long4 = FastMath.max(2239L, 0L);
      int int2 = FastMath.abs(1024);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      int int0 = FastMath.min((-2287), (-1743));
      long long0 = FastMath.max((long) (-2287), (long) (-1743));
      double double0 = FastMath.tanh((-0.5));
      double double1 = FastMath.cosh((-2287));
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      double double0 = FastMath.nextAfter(1367.334758012, 1367.334758012);
      float float0 = FastMath.min(1375.6F, 0.0F);
      double double1 = FastMath.atan2(0.0F, 1367.3347580120003);
      long long0 = FastMath.max(2197L, 2197L);
      int int0 = FastMath.round(4058.46F);
      double double2 = FastMath.tan(83.590105525222);
      double double3 = FastMath.atan(14.0);
      int int1 = FastMath.max(1705, 1705);
      int int2 = FastMath.abs(1);
      long long1 = FastMath.round((double) 1705);
      double double4 = FastMath.expm1(1.0);
      double double5 = FastMath.log10(2197L);
      int int3 = FastMath.abs(1705);
      float float1 = FastMath.abs(526.7792F);
      double double6 = FastMath.toDegrees(1091.64153);
      double double7 = FastMath.nextAfter(2.639144044101463E-7, 1375.6F);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      long long0 = FastMath.round(2.384185791015625E-7);
      double double0 = FastMath.nextUp(0L);
      double double1 = FastMath.atanh(0.4342944622039795);
      double double2 = FastMath.toDegrees(4.9E-324);
      double double3 = FastMath.pow(864.787223, 3356.0862);
      double double4 = FastMath.cosh(2.639144044101463E-7);
      double double5 = FastMath.atan2(0.0, (-246.98));
      double double6 = FastMath.floor(864.787223);
      double double7 = FastMath.toRadians(0.3153223395347595);
      double double8 = FastMath.log10(3.0095696738628313);
      double double9 = FastMath.cos(0.005503413029973038);
      float float0 = FastMath.min(6268.3267F, (-281.0F));
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      long long0 = FastMath.abs(0L);
      double double0 = FastMath.asinh((-2426.155903));
      double double1 = FastMath.signum((-2426.155903));
      double double2 = FastMath.log1p((-5411.996));
      int int0 = FastMath.min((-89), (-89));
      double double3 = FastMath.abs((-529.9342986));
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      double double0 = FastMath.log10(0.0);
      int int0 = FastMath.abs(1431655765);
      long long0 = FastMath.abs(1237L);
      double double1 = FastMath.atan2((-0.05417713522911072), Double.NaN);
      int int1 = FastMath.abs(1431655765);
      double double2 = FastMath.exp(265.147129604);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      double double0 = FastMath.sin(9.313225746154785E-10);
      double double1 = FastMath.log10(9.313225746154785E-10);
      double double2 = FastMath.atan((-9.030899869919436));
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      double double0 = FastMath.sinh((-1164.5408253013009));
      double double1 = FastMath.ulp((-892.3808));
      double double2 = FastMath.atanh(1.1368683772161603E-13);
      double double3 = FastMath.sin((-892.3808));
      double double4 = FastMath.nextUp(1.1368683772161603E-13);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      double double0 = FastMath.sin(0.19454771280288696);
      int int0 = FastMath.max((-4376), (-1542));
      double double1 = FastMath.ulp(1440.8359611);
      double double2 = FastMath.asin((-1.0));
      long long0 = FastMath.round((-1.5707963267948966));
      double double3 = FastMath.toRadians((-721.137));
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      double double0 = FastMath.nextAfter((-1.0), (-1.0));
      double double1 = FastMath.log10((-1.0));
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      long long0 = FastMath.min(0L, 1L);
      double double0 = FastMath.cos(4.82);
      double double1 = FastMath.max(0.10740344820988024, (double) 1L);
      double double2 = FastMath.cbrt((-34.631196675397));
      double double3 = FastMath.cosh(340.95610279);
      double double4 = FastMath.toDegrees(0L);
      double double5 = FastMath.signum(14.136832902969902);
      double double6 = FastMath.toRadians(1313.5);
      double double7 = FastMath.cosh((-34.631196675397));
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      int int0 = FastMath.min((-4538), (-4538));
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      double double0 = FastMath.log10(1.0);
      double double1 = FastMath.min(1109.96090752, (-4676.9988));
      double double2 = FastMath.rint((-4676.9988));
      double double3 = FastMath.nextAfter((-4676.9988), 1.0);
      float float0 = FastMath.min(Float.NaN, 0.0F);
      int int0 = FastMath.abs(920);
      double double4 = FastMath.abs((double) 0.0F);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      int int0 = FastMath.abs((-4187));
      double double0 = FastMath.expm1(4187);
      double double1 = FastMath.sin(Double.POSITIVE_INFINITY);
      double double2 = FastMath.cbrt((-4187));
      double double3 = FastMath.nextUp(1.0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      double double0 = FastMath.ceil(14.136832902969902);
      double double1 = FastMath.rint(15.0);
      double double2 = FastMath.log10((-1114.668839));
      double double3 = FastMath.log10((-794.726));
      double double4 = FastMath.asin(15.0);
      double double5 = FastMath.tanh((-794.726));
      double double6 = FastMath.log(Double.NaN);
      long long0 = FastMath.round(Double.NaN);
      double double7 = FastMath.toDegrees(14.101419947171719);
      double double8 = FastMath.ulp(15.0);
      double double9 = FastMath.ceil((-1361.34));
      double double10 = FastMath.log10(Double.NaN);
      double double11 = FastMath.sinh((-1114.668839));
      double double12 = FastMath.ulp((-559.3695));
      double double13 = FastMath.ceil((-1114.668839));
      double double14 = FastMath.sqrt((-1146.1));
      int int0 = FastMath.round(3643.6F);
      double double15 = FastMath.acosh(1.1368683772161603E-13);
      double double16 = FastMath.cos(8.0E298);
      double double17 = FastMath.cosh(1.0);
      double double18 = FastMath.asinh(14.101419947171719);
      double double19 = FastMath.signum((-1361.0));
      double double20 = FastMath.toRadians(2.092571276372179);
      long long1 = FastMath.max(0L, (-3276L));
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      double double0 = FastMath.max(1.074682223392077, 1.074682223392077);
      double double1 = FastMath.log1p(3.038148934955037E-7);
      double double2 = FastMath.asinh(3.038148473437683E-7);
      int int0 = FastMath.round(0.0F);
      double double3 = FastMath.log10(0.0F);
      double double4 = FastMath.rint(3.038148934955037E-7);
      double double5 = FastMath.atan2(1.074682223392077, 5.261908426442558E-7);
      double double6 = FastMath.signum((-1.0));
      double double7 = FastMath.cosh((-1.0));
      double double8 = FastMath.signum(1.139493927324549);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      long long0 = FastMath.abs(1052L);
      double double0 = FastMath.asinh(0.008333333333329196);
      double double1 = FastMath.nextAfter((-59.03108831), 1.375);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      double double0 = FastMath.signum(0.0036);
      double double1 = FastMath.atan2(1.0, 1.0);
      double double2 = FastMath.abs((-1.0));
      long long0 = FastMath.round(1.3526894423597173E-6);
      double double3 = FastMath.floor(5.140127377170679);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      double double0 = FastMath.cos((-1.0));
      float float0 = FastMath.abs(5945.4126F);
      double double1 = FastMath.cos((-926.22));
      double double2 = FastMath.toRadians(895.528161977218);
      int int0 = FastMath.min(833, 833);
      double double3 = FastMath.asin(0.8775825500488281);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      double double0 = FastMath.acosh((-1.0));
      float float0 = FastMath.min((-3422.8252F), (-3422.8252F));
      double double1 = FastMath.cosh((-3422.8252F));
      double double2 = FastMath.ceil(3.001117512531765E-7);
      double double3 = FastMath.random();
      double double4 = FastMath.acosh(1.0);
      double double5 = FastMath.max(5.140127377170679, 3.001117512531765E-7);
      double double6 = FastMath.log1p(0.3153223395347595);
      long long0 = FastMath.abs((-3667L));
      double double7 = FastMath.acos(1.0);
      double double8 = FastMath.toRadians(1.0);
      double double9 = FastMath.random();
      double double10 = FastMath.nextUp(3406.25187);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      float float0 = FastMath.min(0.0F, 1996.667F);
      double double0 = FastMath.acosh(0.0F);
      double double1 = FastMath.tanh(2.563009154379015E-7);
      double double2 = FastMath.cbrt(0.0F);
      long long0 = FastMath.round((double) 0.0F);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      float float0 = FastMath.max(0.0F, 0.0F);
      double double0 = FastMath.toRadians(0.0F);
      double double1 = FastMath.max((double) 0.0F, 0.625);
      float float1 = FastMath.max(1861.0288F, 0.0F);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      long long0 = FastMath.min((-240L), (-1L));
      float float0 = FastMath.min((-2226.0F), 428.23758F);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      double double0 = FastMath.sin(1.125);
      double double1 = FastMath.acos(1233.64826885);
      double double2 = FastMath.signum(1233.64826885);
      long long0 = FastMath.max(495L, 0L);
      double double3 = FastMath.sinh(0.9022675940990952);
      double double4 = FastMath.random();
      double double5 = FastMath.signum((-66.0));
      double double6 = FastMath.exp(0.15);
      double double7 = FastMath.log(0.0);
      double double8 = FastMath.toRadians((-18.43086276236962));
      double double9 = FastMath.exp(1.0297690258911676);
      double double10 = FastMath.min(1909.69, 3775.9611002063);
      int int0 = FastMath.min(746, 0);
      double double11 = FastMath.abs(0.5039018405998233);
      double double12 = FastMath.cos(0.4311765432357788);
      double double13 = FastMath.rint(3.4620039155736807E-7);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      double double0 = FastMath.acos(2.6365310530323782E-6);
      double double1 = FastMath.ulp(2694.29);
      double double2 = FastMath.log10(1.366701124672226);
      float float0 = FastMath.max((-2519.0662F), (-2519.0662F));
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      double double0 = FastMath.cosh((-2941.421530465181));
      double double1 = FastMath.floor(1308.08339);
      float float0 = FastMath.min(0.0F, 454.2F);
      double double2 = FastMath.sinh(1.0);
      double double3 = FastMath.ceil(0.0F);
      double double4 = FastMath.log(1.0);
      float float1 = FastMath.abs(4017.2134F);
      double double5 = FastMath.sinh(Double.POSITIVE_INFINITY);
      double double6 = FastMath.cosh(641.636613684347);
      float float2 = FastMath.min(0.0F, Float.NaN);
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      double double0 = FastMath.ceil(3.4620039155736807E-7);
      float float0 = FastMath.min(3549.935F, 59.19101F);
      double double1 = FastMath.log1p(2.319235767811865);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      double double0 = FastMath.signum(3487.0715087);
      double double1 = FastMath.sqrt(0.0036);
      double double2 = FastMath.toDegrees(0.06);
      double double3 = FastMath.exp(845.89211033);
      double double4 = FastMath.nextUp(1.0);
      float float0 = FastMath.abs(0.0F);
      int int0 = FastMath.round(0.0F);
      double double5 = FastMath.rint((-652.636198));
      double double6 = FastMath.log10(0.06);
      double double7 = FastMath.nextUp(3487.0715087);
      double double8 = FastMath.sin((-653.0));
      long long0 = FastMath.round((double) 0.0F);
      double double9 = FastMath.expm1((-2494.24854376));
      int int1 = FastMath.abs(0);
      double double10 = FastMath.atan((-587L));
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      double double0 = FastMath.atan(0.0);
      double double1 = FastMath.cbrt((-4293.46947));
      double double2 = FastMath.floor((-4293.46947));
      double double3 = FastMath.asin(0.0);
      double double4 = FastMath.rint((-4294.0));
      double double5 = FastMath.min((-4294.0), 1459.39285);
      int int0 = FastMath.abs(991);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      double double0 = FastMath.acosh(0.3333333333333333);
      float float0 = FastMath.min((-377.55106F), (-377.55106F));
      int int0 = FastMath.round((-377.55106F));
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      double double0 = FastMath.min(0.041666663879186654, 0.041666663879186654);
      long long0 = FastMath.min(1L, 1L);
      double double1 = FastMath.abs(0.041666663879186654);
      double double2 = FastMath.cbrt(0.041666663879186654);
      double double3 = FastMath.acos(0.07692307692307693);
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      long long0 = FastMath.round((-332.263997479));
      double double0 = FastMath.log10((-332.263997479));
      double double1 = FastMath.tanh((-332L));
      float float0 = FastMath.max((float) (-332L), (float) (-332L));
      double double2 = FastMath.tan((-332.263997479));
      long long1 = FastMath.min((-332L), (-4678L));
      double double3 = FastMath.cosh((-4678L));
      double double4 = FastMath.tanh(3304.999526030067);
      float float1 = FastMath.abs((-332.0F));
      double double5 = FastMath.atan(Double.NaN);
      double double6 = FastMath.tan(1.560070049119026);
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      double double0 = FastMath.atan2((-104.0224316751), (-104.0224316751));
      float float0 = FastMath.min(0.0F, 0.0F);
      double double1 = FastMath.sin(0.0F);
      double double2 = FastMath.log1p(0.0);
      double double3 = FastMath.rint(0.4311765432357788);
      double double4 = FastMath.cbrt(0.0);
      double double5 = FastMath.pow((-2.356194490192345), 0.0);
      double double6 = FastMath.atanh(0.0);
      float float1 = FastMath.min((-1.0F), 0.0F);
      double double7 = FastMath.cosh(2.639144044101463E-7);
      double double8 = FastMath.nextAfter(0.0F, 0.0);
      double double9 = FastMath.exp((-1924.01370583));
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      double double0 = FastMath.abs(25.6104906068);
      long long0 = FastMath.abs(0L);
      double double1 = FastMath.tanh(1.0);
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      double double0 = FastMath.pow(777.9781827464, 777.9781827464);
      int int0 = FastMath.round((-3037.284F));
      double double1 = FastMath.ulp(773.706815);
      double double2 = FastMath.rint(777.9781827464);
      long long0 = FastMath.max((long) (-3037), (long) (-3037));
      double double3 = FastMath.log1p((-1080.9702163533));
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      double double0 = FastMath.pow(4.9E-324, 6.951502372232782E-7);
      double double1 = FastMath.ceil((-685.059));
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      double double0 = FastMath.nextAfter((-2202.364), (-1293.4));
      float float0 = FastMath.min(0.0F, 0.0F);
      double double1 = FastMath.nextUp(0.0F);
      double double2 = FastMath.toRadians((-524.47940584129));
      double double3 = FastMath.asin(2.6365310530323782E-6);
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      double double0 = FastMath.tan(1334.31);
      double double1 = FastMath.tanh(1334.31);
      double double2 = FastMath.atanh(1.0);
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      double double0 = FastMath.tan(597.8681726180133);
      float float0 = FastMath.max(0.0F, 0.0F);
      long long0 = FastMath.abs(1L);
      long long1 = FastMath.round((double) 1L);
      double double1 = FastMath.toDegrees(0.0F);
      double double2 = FastMath.signum((-4039.837085927596));
      long long2 = FastMath.abs(2617L);
      double double3 = FastMath.random();
      double double4 = FastMath.expm1(0.0F);
      double double5 = FastMath.asin(2254.0857);
      int int0 = FastMath.max(1500, 1500);
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      double double0 = FastMath.acosh((-1426.0));
      double double1 = FastMath.exp((-1433.01));
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      double double0 = FastMath.acosh(0.5039018405998233);
      long long0 = FastMath.abs((-4267615245585081135L));
      double double1 = FastMath.cos((-4267615245585081135L));
      double double2 = FastMath.asinh(4267615245585081135L);
      double double3 = FastMath.atan2((-4267615245585081135L), 2410.943558605);
      double double4 = FastMath.pow(0.19833733310609217, (-1430.7));
      double double5 = FastMath.asinh(1865.302358564362);
      double double6 = FastMath.cbrt((-1450.11));
      double double7 = FastMath.atan2(2447.49534, (-811.16285966458));
      double double8 = FastMath.cosh((-11.59925098160165));
      double double9 = FastMath.asinh(1.0);
      double double10 = FastMath.acosh((-1450.11));
      double double11 = FastMath.ceil(1136.7209015147);
      int int0 = FastMath.abs(1830);
      double double12 = FastMath.pow((-520.160735), 3507.75604824513);
      double double13 = FastMath.log1p((-821.0));
      double double14 = FastMath.atanh(Double.POSITIVE_INFINITY);
      double double15 = FastMath.cbrt(1.0);
      double double16 = FastMath.acosh((-4.9E-324));
      double double17 = FastMath.asinh(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      double double0 = FastMath.atan2(0.9305076599121094, 1.366701124672226);
      double double1 = FastMath.cosh(0.5977522649437629);
      double double2 = FastMath.log1p(1.1840371831338512);
      double double3 = FastMath.nextUp(156.878);
      double double4 = FastMath.nextUp(0.9305076599121094);
      double double5 = FastMath.atanh((-2181.355905));
      double double6 = FastMath.ulp(1.1840371831338512);
      double double7 = FastMath.toDegrees((-3091.0193692592625));
      double double8 = FastMath.nextUp(0.9305076599121094);
      double double9 = FastMath.sin(2.319235767811865);
      double double10 = FastMath.floor(2.220446049250313E-16);
      double double11 = FastMath.random();
      float float0 = FastMath.max((-3101.48F), (-3101.48F));
      float float1 = FastMath.max(Float.NaN, 0.0F);
      double double12 = FastMath.floor((-20.0));
      long long0 = FastMath.round(1427.1406815871);
      double double13 = FastMath.expm1((-840.831286995941));
      double double14 = FastMath.pow(0.7811750829821681, 2.319235767811865);
      double double15 = FastMath.toDegrees((-515.7766492679699));
      int int0 = FastMath.abs(Integer.MAX_VALUE);
      float float2 = FastMath.min((-3101.48F), (float) Integer.MAX_VALUE);
      double double16 = FastMath.sin(4.455505956692757);
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      double double0 = FastMath.max(0.7214844409909045, 1.3526894423597173E-6);
      double double1 = FastMath.toRadians(0.7214844409909045);
      long long0 = FastMath.abs(887L);
      double double2 = FastMath.cbrt((-620.33));
      double double3 = FastMath.exp((-18.43086276236962));
      double double4 = FastMath.cosh((-1.0));
      double double5 = FastMath.tan(887L);
      int int0 = FastMath.min(1, (-4317));
      double double6 = FastMath.atan(9.89869642844954E-9);
      double double7 = FastMath.ulp(9.89869642844954E-9);
      double double8 = FastMath.sinh((-620.33));
      double double9 = FastMath.cbrt(0.25534192122103627);
      double double10 = FastMath.toRadians((-1.0));
      double double11 = FastMath.signum(887L);
      double double12 = FastMath.abs(1690.93050851);
      double double13 = FastMath.exp(0.3999999761581421);
      double double14 = FastMath.tanh(2.6365310530323782E-6);
      double double15 = FastMath.log(887L);
      double double16 = FastMath.sqrt(1.0);
      float float0 = FastMath.max((float) 1, (float) (-4317));
      int int1 = FastMath.min((-4317), 1);
      double double17 = FastMath.asin(887L);
      double double18 = FastMath.max((double) (-4317), (-18.43086276236962));
      float float1 = FastMath.abs(1.0F);
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      double double0 = FastMath.signum((-1951.68822107));
      double double1 = FastMath.tan((-1.0));
      double double2 = FastMath.cos((-787.671099));
      float float0 = FastMath.min(0.0F, 0.0F);
      double double3 = FastMath.log((-787.671099));
      int int0 = FastMath.round(0.0F);
      double double4 = FastMath.max((-1.0), (-1.5574077246549023));
      double double5 = FastMath.nextUp(Double.NaN);
      float float1 = FastMath.abs(1.0F);
      double double6 = FastMath.sinh(1.0F);
      float float2 = FastMath.min(0.0F, 0.0F);
      double double7 = FastMath.asinh(1.0F);
      long long0 = FastMath.max(3952090531849364496L, 0L);
      int int1 = FastMath.round(0.0F);
      double double8 = FastMath.log10((-1.0));
      double double9 = FastMath.toDegrees(3.171357693770103);
      long long1 = FastMath.round((-1.5574077246549023));
      double double10 = FastMath.log(0.0F);
      double double11 = FastMath.rint(3952090531849364496L);
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      double double0 = FastMath.pow((-4234.8630343011), (-4234.8630343011));
      double double1 = FastMath.floor(Double.NaN);
      long long0 = FastMath.min((-2644281811660520851L), 200L);
      double double2 = FastMath.tan((-2644281811660520851L));
      int int0 = FastMath.min(1, 20);
      double double3 = FastMath.signum(2.479773539153719E-5);
      double double4 = FastMath.expm1(0.15);
      double double5 = FastMath.asin((-4234.8630343011));
      double double6 = FastMath.log10(4.9E-324);
      double double7 = FastMath.log(1);
      double double8 = FastMath.sqrt((-323.3062153431158));
      double double9 = FastMath.log(941.4418);
      double double10 = FastMath.signum(1.0);
      double double11 = FastMath.atanh(710.23849);
      double double12 = FastMath.expm1(1);
      long long1 = FastMath.min((long) 1, (long) 1);
      double double13 = FastMath.toRadians(1.5707963267948966);
      int int1 = FastMath.abs(20);
  }

  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      double double0 = FastMath.pow(2.6365310530323782E-6, 1.1921056801463227E-8);
      int int0 = FastMath.abs(1216);
      double double1 = FastMath.expm1(1216);
      double double2 = FastMath.ulp(1216);
      double double3 = FastMath.max(2.6365310530323782E-6, 8.0E298);
      double double4 = FastMath.toDegrees(5.261908426442558E-7);
      double double5 = FastMath.sinh(0.19454771280288696);
      double double6 = FastMath.atanh(0.19577727068230563);
      double double7 = FastMath.tan(2.6365310530323782E-6);
      double double8 = FastMath.random();
      double double9 = FastMath.asin(1.1921056801463227E-8);
      double double10 = FastMath.acosh(1.0);
      double double11 = FastMath.log1p((-1025.0));
      int int1 = FastMath.min(1216, 1216);
      double double12 = FastMath.abs(2041.0);
      double double13 = FastMath.pow(0.19833771565631977, 1216);
      long long0 = FastMath.round(1.1921056801463227E-8);
      double double14 = FastMath.cosh(8.0E298);
      double double15 = FastMath.toRadians(2.2737367544323206E-13);
      int int2 = FastMath.min(1216, 1216);
      double double16 = FastMath.floor(710.2);
      float float0 = FastMath.max((float) 0L, 547.0F);
      double double17 = FastMath.cosh(1.0);
      long long1 = FastMath.round(570.1794323);
      double double18 = FastMath.pow(Double.POSITIVE_INFINITY, 1.0);
  }

  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      double double0 = FastMath.atan2(1.8014398509481984E16, 1.8014398509481984E16);
      double double1 = FastMath.tan(1175.6643984);
      double double2 = FastMath.acosh(1175.6643984);
      double double3 = FastMath.log1p(0.7853981633974483);
      double double4 = FastMath.ulp(0.8573504957841273);
      double double5 = FastMath.cosh(0.8573504957841273);
      double double6 = FastMath.atan(0.7853981633974483);
      int int0 = FastMath.round(0.0F);
      double double7 = FastMath.sinh(0);
      double double8 = FastMath.nextAfter(0.7853981633974483, (-281.2683149699874));
      double double9 = FastMath.floor(0.5796414510841191);
      long long0 = FastMath.abs(0L);
      double double10 = FastMath.cbrt(1066.6588730312);
      double double11 = FastMath.toDegrees(10.217434213785223);
      double double12 = FastMath.toDegrees(1.3905962576656563);
      double double13 = FastMath.asinh(79.67529657092885);
      double double14 = FastMath.sin(7.762735711908119);
  }

  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      double double0 = FastMath.log10((-2158.7));
      float float0 = FastMath.abs(0.0F);
      long long0 = FastMath.max(1685L, 0L);
      float float1 = FastMath.max((float) 1685L, (-3463.2195F));
  }

  @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      double double0 = FastMath.tanh(2421.9627393);
      double double1 = FastMath.min(3.0095696738628313, 3.0095696738628313);
      double double2 = FastMath.sinh(3.0095696738628313);
      int int0 = FastMath.max((-2129), 2125);
      double double3 = FastMath.acos((-1356.1258));
      float float0 = FastMath.abs(1.0F);
      double double4 = FastMath.atan2(1.2331016983979697, (-845.9));
      float float1 = FastMath.max((-723.25574F), (float) 2125);
      double double5 = FastMath.pow((-845.9), (-2129));
      double double6 = FastMath.ceil(Double.NaN);
      double double7 = FastMath.sinh(1.0F);
      long long0 = FastMath.abs(680L);
      double double8 = FastMath.atan(1.2331016983979697);
      double double9 = FastMath.nextUp(5.140127377170679);
      float float2 = FastMath.abs((-840.7F));
  }

  @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      double double0 = FastMath.log(3476.5724867);
      double double1 = FastMath.sin(1009.281145283);
      double double2 = FastMath.toRadians((-0.7378662291208914));
      double double3 = FastMath.cos(1.8358548930975745E-7);
      double double4 = FastMath.sqrt(1.8508157176809257);
      double double5 = FastMath.expm1((-0.01287819513743442));
      long long0 = FastMath.max(0L, (-3958705157555305932L));
      double double6 = FastMath.log1p(3.410491133089812E-7);
      float float0 = FastMath.max((float) (-3958705157555305932L), (float) 0L);
      double double7 = FastMath.min((double) (-3958705157555305932L), 1.0);
      double double8 = FastMath.floor((-0.012795626009608652));
  }
}
