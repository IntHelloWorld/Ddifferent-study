/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 29 08:06:35 GMT 2020
 */

package org.apache.commons.math.util;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.math.util.FastMath;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FastMath_ESTest extends FastMath_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      double double0 = FastMath.max((double) 0.0F, 0.7249995199969751);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      long long0 = FastMath.max(4577762542105553359L, 4577762542105553359L);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      int int0 = FastMath.max(14, 1840700269);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      double double0 = FastMath.min(1.5574077246549023, 1.5574077246549023);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      float float0 = FastMath.min((-723.63F), (float) 0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      long long0 = FastMath.min(0L, 0L);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      double double0 = FastMath.rint(2873.5);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      double double0 = FastMath.ceil((-845.925485635491));
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      double double0 = FastMath.rint(0.0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      double double0 = FastMath.nextAfter(5.041915256481364, 5.041915256481364);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      double double0 = FastMath.nextAfter(0.0, 0.0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      float float0 = FastMath.abs(4893.25F);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      double double0 = FastMath.atan2(0.0, 0.0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      double double0 = FastMath.atan2((-628.0), (-628.0));
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      double double0 = FastMath.tan(1.5707963267948966);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      double double0 = FastMath.cos(-0.0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      double double0 = FastMath.expm1(1.0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      double double0 = FastMath.cosh(20.0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      double double0 = FastMath.toRadians(0.0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      double double0 = FastMath.toRadians(1316.76573);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      double double0 = FastMath.toDegrees(0.0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      double double0 = FastMath.toDegrees(468.9265242776229);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      double double0 = FastMath.sqrt(0.0F);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      int int0 = FastMath.round(997.7578F);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      int int0 = FastMath.round((float) (-1L));
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      double double0 = FastMath.rint((-764.9163825316953));
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Random.setNextRandom(646981381);
      double double0 = FastMath.random();
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      long long0 = FastMath.min(2844L, 0L);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      long long0 = FastMath.min(1223L, (long) 825);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      int int0 = FastMath.min(0, 0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      int int0 = FastMath.min(1610087935, (-2468));
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      float float0 = FastMath.min((-520.444F), (-902.8563F));
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      double double0 = FastMath.min(0.4342944622039795, 3.410491133089812E-7);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      long long0 = FastMath.max(0L, (-1L));
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      int int0 = FastMath.max(0, 0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      float float0 = FastMath.max(0.0F, 0.0F);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      float float0 = FastMath.max((float) (-1), (float) (-1));
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      double double0 = FastMath.max(0.0, (-192.4354));
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      double double0 = FastMath.max((-489.5), (-489.5));
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      double double0 = FastMath.log1p(0.0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      double double0 = FastMath.log10(1.0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      double double0 = FastMath.log10(760.134302102126);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      double double0 = FastMath.log10(0.08362100656848195);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      double double0 = FastMath.log(2.880890331108318);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      double double0 = FastMath.cbrt(6.46981381E8);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      double double0 = FastMath.atanh(-0.0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      double double0 = FastMath.atan(-0.0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      double double0 = FastMath.asinh(0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      double double0 = FastMath.asin(0.0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      double double0 = FastMath.acosh(1.0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      double double0 = FastMath.acosh(2.319235767811865);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      long long0 = FastMath.abs(0L);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      int int0 = FastMath.abs(0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      double double0 = FastMath.abs(0.0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      double double0 = FastMath.floor(0.5403022766113281);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      double double0 = FastMath.floor((-6.663542893624021E-14));
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      double double0 = FastMath.floor(57.6371985278382);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      double double0 = FastMath.floor(4.503599627370496E15);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      double double0 = FastMath.floor(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      double double0 = FastMath.nextAfter((-811.772462), (-913.53429812896));
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      double double0 = FastMath.nextAfter(Double.POSITIVE_INFINITY, (-1243.347233999));
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      double double0 = FastMath.abs((-57.6371985278382));
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      double double0 = FastMath.abs((double) 646981381);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      double double0 = FastMath.max(0.0, Double.NaN);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      float float0 = FastMath.max((-1.0F), Float.NaN);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      float float0 = FastMath.max(0.0F, 3156.44F);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      float float0 = FastMath.max((float) 1696, 1.0F);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      long long0 = FastMath.max(0L, (long) 6);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      long long0 = FastMath.max((-1L), (-1807L));
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      int int0 = FastMath.max((-2531), (-4036));
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      double double0 = FastMath.min(Double.NaN, 4204.63864821635);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      double double0 = FastMath.min((-694.8276883999999), 2.8760799204724562E301);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      double double0 = FastMath.min(3.171357693770103, (double) 0L);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      float float0 = FastMath.min(Float.NaN, (-1.0F));
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      float float0 = FastMath.min(945.0713F, 945.0713F);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      float float0 = FastMath.min(1.0F, 0.0F);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      long long0 = FastMath.min((-2678L), 0L);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      int int0 = FastMath.min(1696, 838837812);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      double double0 = FastMath.rint(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      double double0 = FastMath.rint(0.9121402148112425);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      double double0 = FastMath.ceil((-0.7615941559557649));
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      double double0 = FastMath.ceil(0.7214844409909045);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      double double0 = FastMath.ceil(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      double double0 = FastMath.floor((-2678L));
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      long long0 = FastMath.round((-2174.143632));
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      double double0 = FastMath.ceil((-8.0E298));
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      double double0 = FastMath.rint(Double.POSITIVE_INFINITY);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      long long0 = FastMath.round(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      double double0 = FastMath.nextAfter(1.0, 0.5463024898437905);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      double double0 = FastMath.nextAfter((-2174L), 0.0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      double double0 = FastMath.nextAfter(0.0, 495.3052386878585);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      double double0 = FastMath.nextAfter(0.0, (-1515.27780462));
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      double double0 = FastMath.nextUp(Double.NEGATIVE_INFINITY);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      double double0 = FastMath.nextAfter(Double.NaN, 0.1538461446762085);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      double double0 = FastMath.ulp((-1249.308657968));
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      float float0 = FastMath.abs((-945.0713F));
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      float float0 = FastMath.abs(0.0F);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      long long0 = FastMath.abs((-1615L));
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      long long0 = FastMath.abs(1475L);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      int int0 = FastMath.abs((-508));
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      int int0 = FastMath.abs(6);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      double double0 = FastMath.cbrt((-265.216));
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      double double0 = FastMath.cbrt(0L);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      double double0 = FastMath.cbrt(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      double double0 = FastMath.acos((-0.2499999701976776));
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      double double0 = FastMath.acos(0.0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      double double0 = FastMath.acos(1.0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      double double0 = FastMath.acos((-1));
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      double double0 = FastMath.acos((-4393.861389906596));
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      double double0 = FastMath.acos(245.097585);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      double double0 = FastMath.acos(2.4384203044354907E-8);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      double double0 = FastMath.asin((-1.0));
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      double double0 = FastMath.asin(1.0F);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      double double0 = FastMath.asin((-694.8276883999999));
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      double double0 = FastMath.asin(1652.85);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      double double0 = FastMath.asin(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      double double0 = FastMath.atan2((-1445.0329553658887), 0.0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      double double0 = FastMath.atan2(1.6331239353195372E16, 0.0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      double double0 = FastMath.atan2(Double.POSITIVE_INFINITY, 4888.3030685);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      double double0 = FastMath.atan2(0, (-0.16666666666666666));
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      double double0 = FastMath.atan2(0.0, 6);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      double double0 = FastMath.atan2((-4036), Double.NaN);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      double double0 = FastMath.atan(Double.POSITIVE_INFINITY);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      double double0 = FastMath.atan(Double.NEGATIVE_INFINITY);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      double double0 = FastMath.atan2((-1249.308657968), 2.092571276372179);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      double double0 = FastMath.tan((-1949.3));
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      double double0 = FastMath.tan(0L);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      double double0 = FastMath.cos(368.3246);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      double double0 = FastMath.cos(1.7661245091009607);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      double double0 = FastMath.cos(2228.980884573);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      double double0 = FastMath.cos(Double.POSITIVE_INFINITY);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      double double0 = FastMath.cos(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      double double0 = FastMath.sin(3.141592653589793);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      double double0 = FastMath.sin((-977.087));
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      double double0 = FastMath.sin(Double.POSITIVE_INFINITY);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      double double0 = FastMath.sin(Float.NaN);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      double double0 = FastMath.sin(0L);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      double double0 = FastMath.sin(8.0E298);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      double double0 = FastMath.sin(6.46981381E8);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      double double0 = FastMath.tan(2.3033913432715143E169);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      double double0 = FastMath.tan(1610087935);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      double double0 = FastMath.cos((-7.600030178341844E114));
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      double double0 = FastMath.tan(0.25534192122103627);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      double double0 = FastMath.sin((-1.0));
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      double double0 = FastMath.pow((-3987.29351626), 1696.0F);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      double double0 = FastMath.pow((-694.8276883999999), 3.0095696738628313);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      double double0 = FastMath.pow((-318.6), (-8.0E298));
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      double double0 = FastMath.pow(818.1279763910715, Double.POSITIVE_INFINITY);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      double double0 = FastMath.pow(0.0F, 1652.7302744252252);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      double double0 = FastMath.pow(0.0, (-1L));
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      double double0 = FastMath.pow(Double.NaN, (-1.0));
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      double double0 = FastMath.pow(224, 0L);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      double double0 = FastMath.log1p(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      double double0 = FastMath.log1p(Double.POSITIVE_INFINITY);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      double double0 = FastMath.log1p(1817.3281591645);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      double double0 = FastMath.log1p((-1L));
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      double double0 = FastMath.log1p((-266.0));
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      double double0 = FastMath.pow((-1.0), 1.0);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      double double0 = FastMath.log(1.0);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      double double0 = FastMath.log(0.6409968137741089);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      double double0 = FastMath.log10(0.0);
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      double double0 = FastMath.atanh(1.0);
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      double double0 = FastMath.expm1((-4.469603409122654E-6));
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      double double0 = FastMath.expm1(0L);
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      double double0 = FastMath.expm1(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      double double0 = FastMath.pow(1.625, (-1470.58523));
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      double double0 = FastMath.expm1((-945.0713F));
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      double double0 = FastMath.exp((-2354.0));
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      double double0 = FastMath.expm1((-1L));
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      double double0 = FastMath.signum(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      double double0 = FastMath.signum(0.0);
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      double double0 = FastMath.signum((-2354.07925551));
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      double double0 = FastMath.signum(0.008333333333333333);
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      double double0 = FastMath.atanh(0.01745240443974304);
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      double double0 = FastMath.atanh((-0.05417713522911072));
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      double double0 = FastMath.atanh(0.09090909090909091);
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      double double0 = FastMath.atanh(Double.POSITIVE_INFINITY);
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      double double0 = FastMath.asinh(4.9E-324);
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      double double0 = FastMath.asinh(0.08371849358081818);
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      double double0 = FastMath.asinh((-845.925485635491));
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      double double0 = FastMath.tanh((-1.7168146928204135));
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      double double0 = FastMath.tanh(0.0);
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      double double0 = FastMath.tanh((-1403.6674354121392));
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      double double0 = FastMath.tanh(2301.104015340637);
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      double double0 = FastMath.tanh(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      double double0 = FastMath.tanh(0.05166172564212237);
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      double double0 = FastMath.sinh(3.2959740599768597);
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      double double0 = FastMath.sinh((-6.663542893624021E-14));
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      double double0 = FastMath.sinh(0.0);
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      double double0 = FastMath.sinh(1.633123935319537E16);
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      double double0 = FastMath.sinh(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      double double0 = FastMath.sinh((-1206.52544962498));
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      double double0 = FastMath.cosh(0.0);
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      double double0 = FastMath.cosh((-0.44473079278503963));
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      double double0 = FastMath.cosh((-8.0E298));
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      double double0 = FastMath.cosh(2138078254);
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      double double0 = FastMath.nextUp(1610087935);
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      double double0 = FastMath.log(0L);
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      double double0 = FastMath.exp(0.5463024898437905);
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      double double0 = FastMath.random();
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      int int0 = FastMath.round(0.0F);
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      long long0 = FastMath.round((double) 1610087935);
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      double double0 = FastMath.expm1(1334.43584500785);
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      double double0 = FastMath.toDegrees((-2143.271136008));
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      double double0 = FastMath.toRadians((-579.984950406282));
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      double double0 = FastMath.sqrt(1.734723475976807E-18);
  }
}
