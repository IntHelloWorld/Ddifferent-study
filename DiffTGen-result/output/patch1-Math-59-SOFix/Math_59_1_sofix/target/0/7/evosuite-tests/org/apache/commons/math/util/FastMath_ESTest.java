/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 29 08:06:44 GMT 2020
 */

package org.apache.commons.math.util;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.math.util.FastMath;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FastMath_ESTest extends FastMath_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      double double0 = FastMath.max(0.14982303977012634, 0.14982303977012634);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      int int0 = FastMath.max((-1), 349745789);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      double double0 = FastMath.min(0.8775825500488281, 5.140127377170679);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      long long0 = FastMath.min((-1005L), (long) 514816443);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      int int0 = FastMath.min(1893, 1431655765);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      double double0 = FastMath.rint(6.5);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      double double0 = FastMath.ceil((-3042.1101813555047));
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      double double0 = FastMath.ceil((-4.503599627370496E15));
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      double double0 = FastMath.nextAfter((-567.57), (-567.57));
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      double double0 = FastMath.nextAfter(0.0F, 0L);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      double double0 = FastMath.ulp(1.3651517129314887);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      double double0 = FastMath.atan2(0.0, 1675.7002358);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      double double0 = FastMath.atan(1.0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      double double0 = FastMath.cos(3294198.0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      double double0 = FastMath.cos(0.0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      double double0 = FastMath.sin(1.5707963267948966);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      double double0 = FastMath.log1p((-1.0E-6));
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      double double0 = FastMath.expm1(1.0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      double double0 = FastMath.expm1((-1.0));
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      double double0 = FastMath.sinh(0.25);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      double double0 = FastMath.cosh(0.0F);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      double double0 = FastMath.toRadians(0.0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      double double0 = FastMath.toRadians(0.008333333333333333);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      double double0 = FastMath.toRadians((-111640.53273292822));
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      double double0 = FastMath.toDegrees(0.0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      double double0 = FastMath.toDegrees(3385.3641);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      double double0 = FastMath.sqrt(0.0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      int int0 = FastMath.round(0.0F);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      int int0 = FastMath.round(188.2962F);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      long long0 = FastMath.round(5.041915256481364);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      long long0 = FastMath.round((-8.0E298));
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      double double0 = FastMath.rint((-4.9E-324));
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      double double0 = FastMath.rint((-2616.4062562285));
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      double double0 = FastMath.nextUp((-1.0));
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      long long0 = FastMath.min(0L, 0L);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      long long0 = FastMath.min(4208363204685324176L, 4208363204685324176L);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      int int0 = FastMath.min(0, 0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      float float0 = FastMath.min(1.0F, (float) 3241);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      double double0 = FastMath.min(1.1921056801463227E-8, (double) 0L);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      long long0 = FastMath.max(0L, 0L);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      long long0 = FastMath.max((-739L), (-2031L));
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      int int0 = FastMath.max(0, 0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      int int0 = FastMath.max((-3444), (-3444));
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      float float0 = FastMath.max((-2469.2822F), (float) (-1005L));
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      double double0 = FastMath.max(0.0, (double) (-739L));
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      double double0 = FastMath.max((-1.0), (-260.00000000000006));
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      double double0 = FastMath.log(1431655765);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      double double0 = FastMath.exp((-4020.3));
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      double double0 = FastMath.atanh(0.0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      double double0 = FastMath.atan(0.0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      double double0 = FastMath.asinh(0.0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      double double0 = FastMath.acosh(1.0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      double double0 = FastMath.acosh((-4.503599627370496E15));
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      long long0 = FastMath.abs(0L);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      int int0 = FastMath.abs(0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      float float0 = FastMath.abs((float) 0L);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      double double0 = FastMath.abs(0.0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      double double0 = FastMath.floor(3.462003915573819E-7);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      double double0 = FastMath.floor((-1));
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      double double0 = FastMath.floor(6);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      double double0 = FastMath.floor(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      double double0 = FastMath.nextAfter((-3262.4962412521), (-4133.68914732131));
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      double double0 = FastMath.abs((-2962.0));
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      double double0 = FastMath.sqrt(0.0875862700108075);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      double double0 = FastMath.max((double) Float.NaN, (-1.0));
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      double double0 = FastMath.max(0.008333333333333333, Double.POSITIVE_INFINITY);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      float float0 = FastMath.max(Float.NaN, (float) 0L);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      float float0 = FastMath.max(0.0F, 0.0F);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      float float0 = FastMath.max(5.14816448E8F, 0.0F);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      long long0 = FastMath.max((long) 2401, 4503599627370496L);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      int int0 = FastMath.max(4385, 16);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      double double0 = FastMath.min(1.366701124672226, (-2370.9783591437003));
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      double double0 = FastMath.min((double) (-1598L), (double) (-1598L));
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      double double0 = FastMath.min(Double.NaN, 1907.0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      float float0 = FastMath.min(Float.NaN, 0.0F);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      float float0 = FastMath.min(0.0F, 0.0F);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      float float0 = FastMath.min(1071.368F, (-2257.19F));
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      long long0 = FastMath.min((-1L), (-519L));
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      int int0 = FastMath.min((-1), (-80));
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      double double0 = FastMath.rint(Double.POSITIVE_INFINITY);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      double double0 = FastMath.rint(493.18896656);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      double double0 = FastMath.ceil((-6.032174644509064E-23));
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      double double0 = FastMath.ceil(2004.7277);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      double double0 = FastMath.ceil(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      double double0 = FastMath.ceil(0.0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      double double0 = FastMath.floor((-2961.9284));
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      double double0 = FastMath.floor((-8.0E298));
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      double double0 = FastMath.nextAfter((-1.0), (-0.014044712362682657));
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      double double0 = FastMath.nextAfter(1.5, (-1819.0));
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      double double0 = FastMath.nextAfter(0.0, (-237.0));
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      double double0 = FastMath.nextAfter(0.0, 614);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      double double0 = FastMath.nextAfter(Double.POSITIVE_INFINITY, 6.951502372232782E-7);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      double double0 = FastMath.nextAfter(Double.NaN, 2.319235767811865);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      float float0 = FastMath.abs((-1049.2523F));
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      float float0 = FastMath.abs(1806.6991F);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      long long0 = FastMath.abs((-1L));
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      long long0 = FastMath.abs(4503599627370496L);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      int int0 = FastMath.abs((-1598));
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      int int0 = FastMath.abs(2401);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      double double0 = FastMath.cbrt(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      double double0 = FastMath.cbrt(4.9E-324);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      double double0 = FastMath.cbrt(0.0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      double double0 = FastMath.cbrt((-1.0));
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      double double0 = FastMath.acos(0.003);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      double double0 = FastMath.acos((-0.16624882440418567));
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      double double0 = FastMath.acos(0.0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      double double0 = FastMath.acos((-1.0));
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      double double0 = FastMath.acos((-2665.5932168));
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      double double0 = FastMath.acos(1.0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      double double0 = FastMath.acos(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      double double0 = FastMath.acos(2401);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      double double0 = FastMath.asin((-1.0));
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      double double0 = FastMath.asin(1.0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      double double0 = FastMath.asin((-4.503599627370496E15));
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      double double0 = FastMath.asin(42);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      double double0 = FastMath.asin(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      double double0 = FastMath.atan2((-1817.98084), 0.0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      double double0 = FastMath.atan2(0.8603578232152995, 0.0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      double double0 = FastMath.atan2((-1.0), Double.NEGATIVE_INFINITY);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      double double0 = FastMath.atan2(Double.NEGATIVE_INFINITY, 1.5574077246549023);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      double double0 = FastMath.atan2(0L, 0L);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      double double0 = FastMath.atan2(0.0, (-18.457971236441537));
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      double double0 = FastMath.atan2(Double.NaN, 1.0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      double double0 = FastMath.atan2((-391.6978023099908), Double.NaN);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      double double0 = FastMath.atan2((-636.85616476288), 1499.5676412719965);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      double double0 = FastMath.atan2(0.19999998807907104, (-2342.987826298167));
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      double double0 = FastMath.atan(8.0E298);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      double double0 = FastMath.tan(Double.POSITIVE_INFINITY);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      double double0 = FastMath.tan(Float.NaN);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      double double0 = FastMath.tan(0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      double double0 = FastMath.tan((-3725.5));
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      double double0 = FastMath.cos((-3.141592653589793));
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      double double0 = FastMath.cos(Double.POSITIVE_INFINITY);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      double double0 = FastMath.cos(Float.NaN);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      double double0 = FastMath.sin(2778.8342);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      double double0 = FastMath.sin(Double.NEGATIVE_INFINITY);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      double double0 = FastMath.sin(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      double double0 = FastMath.sin(0.0F);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      double double0 = FastMath.tan(5.14816448E8F);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      double double0 = FastMath.sin(1431655765);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      double double0 = FastMath.cos(8.520440889567099E131);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      double double0 = FastMath.tan(8.0E298);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      double double0 = FastMath.cos(1.633123935319537E16);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      double double0 = FastMath.tan(1.0320850239843855);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      double double0 = FastMath.pow(6.123233995736766E-17, Double.NaN);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      double double0 = FastMath.pow((-71.20117337945906), (-1.0));
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      double double0 = FastMath.pow((-1.0), (-1994L));
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      double double0 = FastMath.pow((-636.85616476288), 685.535025);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      double double0 = FastMath.pow(Double.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      double double0 = FastMath.pow(0L, Double.NaN);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      double double0 = FastMath.pow(0L, (-640));
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      double double0 = FastMath.pow(0, 0.8775825500488281);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      double double0 = FastMath.pow(Double.NaN, (-92.748020244));
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      double double0 = FastMath.pow(0.0, 0.0);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      double double0 = FastMath.log1p(0.0);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      double double0 = FastMath.log1p(419.9307);
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      double double0 = FastMath.log1p((-1.0));
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      double double0 = FastMath.log(1.0);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      double double0 = FastMath.log10(1.139493927324549);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      double double0 = FastMath.log10(1.0);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      double double0 = FastMath.log10(0L);
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      double double0 = FastMath.log10(4.9E-324);
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      double double0 = FastMath.log(0.0);
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      double double0 = FastMath.acosh(8.0E298);
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      double double0 = FastMath.log10(Double.POSITIVE_INFINITY);
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      double double0 = FastMath.log1p((-636.85616476288));
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      double double0 = FastMath.acosh(0.3153223395347595);
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      double double0 = FastMath.expm1((-1.9841269659586505E-4));
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      double double0 = FastMath.expm1(0L);
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      double double0 = FastMath.pow(3687.09192815, 1.0000000000000002);
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      double double0 = FastMath.expm1(Double.POSITIVE_INFINITY);
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      double double0 = FastMath.exp((-739L));
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      double double0 = FastMath.signum(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      double double0 = FastMath.signum(0.0);
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      double double0 = FastMath.signum((-1634.269));
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      double double0 = FastMath.signum(0.99);
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      double double0 = FastMath.atanh(0.07692307692307693);
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      double double0 = FastMath.atanh((-0.09088450866185192));
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      double double0 = FastMath.atanh((-2964.28407645246));
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      double double0 = FastMath.asinh(0.003);
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      double double0 = FastMath.asinh((-0.1666666567325592));
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      double double0 = FastMath.asinh(0.09090909090909091);
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      double double0 = FastMath.asinh((-1994L));
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      double double0 = FastMath.tanh((-7.443213456295667E-11));
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      double double0 = FastMath.tanh(0.6666666269302368);
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      double double0 = FastMath.tanh(0.0F);
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      double double0 = FastMath.tanh(5.14816448E8F);
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      double double0 = FastMath.tanh(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      double double0 = FastMath.tanh((-1535L));
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      double double0 = FastMath.sinh(0.125);
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      double double0 = FastMath.sinh((-1.0));
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      double double0 = FastMath.sinh(0.0F);
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      double double0 = FastMath.sinh(4575.940609541);
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      double double0 = FastMath.sinh(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      double double0 = FastMath.sinh((-4223.0));
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      double double0 = FastMath.cosh((-2.924013794336222));
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      double double0 = FastMath.cosh((-519L));
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      double double0 = FastMath.cosh(5.261908426442558E-7);
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      double double0 = FastMath.cosh(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      double double0 = FastMath.nextUp(197.3690218271873);
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      double double0 = FastMath.atan((-8.0E298));
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      double double0 = FastMath.cosh(672.8899546);
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      double double0 = FastMath.log10(0.7214844409909045);
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      double double0 = FastMath.random();
      double double1 = FastMath.random();
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      int int0 = FastMath.round((-1174.13F));
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      long long0 = FastMath.round(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      double double0 = FastMath.sin((-4.469603409122654E-6));
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      double double0 = FastMath.expm1((-4354.86618479113));
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      double double0 = FastMath.toDegrees((-1948.4948748701006));
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      double double0 = FastMath.asin(0);
  }
}
