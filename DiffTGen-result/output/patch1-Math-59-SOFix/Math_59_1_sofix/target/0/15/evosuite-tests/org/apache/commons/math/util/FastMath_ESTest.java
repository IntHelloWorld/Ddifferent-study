/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 29 08:11:20 GMT 2020
 */

package org.apache.commons.math.util;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.math.util.FastMath;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FastMath_ESTest extends FastMath_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      double double0 = FastMath.tan(1970.280370408057);
      double double1 = FastMath.log10((-1.0));
      double double2 = FastMath.tan(0.5486115626935307);
      int int0 = FastMath.abs(397);
      double double3 = FastMath.random();
      double double4 = FastMath.pow(1970.280370408057, (-379.06937859013));
      double double5 = FastMath.sin(0.11111095942313305);
      double double6 = FastMath.cosh(0.0);
      double double7 = FastMath.ulp(1.0);
      double double8 = FastMath.log10(397);
      double double9 = FastMath.atanh((-117.8745446907388));
      double double10 = FastMath.tan((-2229.0751257947));
      double double11 = FastMath.log1p(3639.1991387336134);
      double double12 = FastMath.atanh(0.11088247775735627);
      double double13 = FastMath.cosh(1.0);
      double double14 = FastMath.pow(0.5486115626935307, (-2115.60879325));
      double double15 = FastMath.random();
      double double16 = FastMath.floor(0.0);
      double double17 = FastMath.tan((-1899.648335095194));
      double double18 = FastMath.floor(1729.0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      double double0 = FastMath.nextAfter(294.35839420964, (-4.232713756743041E-17));
      double double1 = FastMath.atan2((-4.232713756743041E-17), 1082.624115);
      double double2 = FastMath.tanh(294.35839420964);
      double double3 = FastMath.asin(1082.624115);
      Random.setNextRandom((-939));
      double double4 = FastMath.sinh((-20.0));
      double double5 = FastMath.ulp(2113.0);
      double double6 = FastMath.floor(0.08713622391223907);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      double double0 = FastMath.log10(5559.2184);
      double double1 = FastMath.atanh(3.745013736109379);
      double double2 = FastMath.log10(2024.83112);
      double double3 = FastMath.atanh(3.3063888069528535);
      double double4 = FastMath.cos(3.745013736109379);
      int int0 = FastMath.abs(9);
      float float0 = FastMath.abs((float) 9);
      double double5 = FastMath.tan(Double.NaN);
      double double6 = FastMath.sinh(3.3063888069528535);
      double double7 = FastMath.nextAfter(1.68234189723614E-16, Double.NaN);
      double double8 = FastMath.random();
      double double9 = FastMath.tanh((-2124.591338));
      double double10 = FastMath.ceil(57.9342506044);
      double double11 = FastMath.sinh(1219.385363166);
      double double12 = FastMath.sinh(2024.83112);
      long long0 = FastMath.abs(447L);
      float float1 = FastMath.abs((-1109.49F));
      double double13 = FastMath.atanh((-6846.488883855));
      double double14 = FastMath.acosh(1219.385363166);
      double double15 = FastMath.cbrt((-1109.49F));
      double double16 = FastMath.asinh((-1109.49F));
      double double17 = FastMath.floor(Double.POSITIVE_INFINITY);
      double double18 = FastMath.atanh(1780948.1426612372);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      long long0 = FastMath.abs(1736L);
      long long1 = FastMath.abs(4589168020290535424L);
      int int0 = FastMath.abs(2726);
      double double0 = FastMath.rint((-859.454));
      double double1 = FastMath.cos(4589168020290535424L);
      double double2 = FastMath.pow((-2579.63), 2726);
      double double3 = FastMath.tanh((-59.6044766750063));
      double double4 = FastMath.tan(888.0);
      double double5 = FastMath.sqrt(0.9830133980716497);
      long long2 = FastMath.abs(4589168020290535424L);
      double double6 = FastMath.pow(2214.63263768, 0.0);
      double double7 = FastMath.abs(0.0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      double double0 = FastMath.log10(1.2246467991473532E-16);
      double double1 = FastMath.acosh((-15.91198914827845));
      double double2 = FastMath.acosh(Double.NaN);
      double double3 = FastMath.acos(1.2246467991473532E-16);
      double double4 = FastMath.pow((-84.92), Double.NaN);
      double double5 = FastMath.signum(Double.NaN);
      double double6 = FastMath.exp(Double.NaN);
      double double7 = FastMath.floor((-4173.1139189041));
      double double8 = FastMath.sqrt(Double.NaN);
      double double9 = FastMath.floor((-4173.1139189041));
      double double10 = FastMath.asin((-1.0));
      double double11 = FastMath.acosh(Double.NaN);
      double double12 = FastMath.tanh(1293.9473416879148);
      double double13 = FastMath.random();
      double double14 = FastMath.random();
      double double15 = FastMath.rint(1499.884347182);
      double double16 = FastMath.sin(Double.NaN);
      double double17 = FastMath.tanh((-1.0));
      double double18 = FastMath.exp((-1.0));
      double double19 = FastMath.nextAfter(Double.NaN, 1030.1279);
      double double20 = FastMath.log1p(Double.NaN);
      double double21 = FastMath.asin((-3516.341));
      double double22 = FastMath.cosh((-2064.61933942));
      double double23 = FastMath.cos((-2960.84415));
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      double double0 = FastMath.asinh(0.39362657592563277);
      double double1 = FastMath.abs(0.39362657592563277);
      double double2 = FastMath.expm1(744.0);
      double double3 = FastMath.cos((-953.970039348));
      double double4 = FastMath.rint((-953.970039348));
      double double5 = FastMath.sinh(0.38411126182973193);
      double double6 = FastMath.PI;
      double double7 = FastMath.tan(3.141592653589793);
      double double8 = FastMath.sqrt(0.39362657592563277);
      double double9 = FastMath.acosh((-1.2246467991473532E-16));
      double double10 = FastMath.log((-330.05186696801));
      int int0 = FastMath.min((-2731), (-2731));
      double double11 = FastMath.tanh(0.39362657592563277);
      double double12 = FastMath.cbrt(839.492198024739);
      long long0 = FastMath.max((long) (-2731), (long) (-2731));
      double double13 = FastMath.acos((-8.0E298));
      double double14 = FastMath.asin((-954.0));
      double double15 = FastMath.sqrt((-8.0E298));
      double double16 = FastMath.cbrt(1.139493927324549);
      double double17 = FastMath.cosh(0.036);
      double double18 = FastMath.tan(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      double double0 = FastMath.random();
      double double1 = FastMath.acosh(0.0);
      double double2 = FastMath.pow(0.0, 0.0);
      double double3 = FastMath.tanh(449.829432495);
      long long0 = FastMath.abs(1701L);
      double double4 = FastMath.cos(1.0);
      double double5 = FastMath.cos(0.0);
      double double6 = FastMath.asin(198.1);
      double double7 = FastMath.exp(Double.NaN);
      double double8 = FastMath.atan2((-1.0), 1.0);
      double double9 = FastMath.atan2(1.0, Double.NaN);
      double double10 = FastMath.acosh((-1.0));
      double double11 = FastMath.ceil(Double.NaN);
      double double12 = FastMath.floor(2.563009154379015E-7);
      double double13 = FastMath.sinh((-257.6265052));
      double double14 = FastMath.pow(Double.NaN, (-1959.2586427532));
      double double15 = FastMath.atan2((-91.778459907503), Double.NaN);
      int int0 = FastMath.abs(715827883);
      double double16 = FastMath.exp((-0.12502530217170715));
      double double17 = FastMath.acosh(3356.32);
      double double18 = FastMath.ulp((-0.12502530217170715));
      double double19 = FastMath.exp(8.811747573017563);
      int int1 = FastMath.abs(715827883);
      double double20 = FastMath.sinh((-2730.9923032252));
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      double double0 = FastMath.toRadians(0.6409968137741089);
      double double1 = FastMath.atanh(0.01118750489515114);
      double double2 = FastMath.expm1(0.01118750489515114);
      double double3 = FastMath.log1p((-1508.6903));
      double double4 = FastMath.atan2((-1459.51726), 6982.497226665);
      double double5 = FastMath.abs((-1508.6903));
      double double6 = FastMath.atan2((-1865.420277), 615.37001416);
      double double7 = FastMath.atan(22.09776);
      int int0 = FastMath.min(14, 4836);
      double double8 = FastMath.sinh((-1508.6903));
      int int1 = FastMath.min(14, 4836);
      double double9 = FastMath.cosh(1.5255737244834504);
      double double10 = FastMath.tan(0.01118750489515114);
      double double11 = FastMath.sqrt(1.5255737244834504);
      double double12 = FastMath.tan(1.5255737244834504);
      double double13 = FastMath.expm1(0.011250319054063679);
      double double14 = FastMath.log((-1508.6903));
      double double15 = FastMath.log(14);
      long long0 = FastMath.min((long) 14, 0L);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      float float0 = FastMath.max(0.0F, 0.0F);
      double double0 = FastMath.nextAfter(3.4620039155736807E-7, 0.0F);
      float float1 = FastMath.max((-754.7111F), 0.0F);
      double double1 = FastMath.min((double) 0.0F, (double) 0.0F);
      double double2 = FastMath.atan2(5606.0537202523, 3.46200391557368E-7);
      double double3 = FastMath.acosh(3.4620039155736807E-7);
      double double4 = FastMath.asinh((-2876.8659677));
      double double5 = FastMath.toDegrees(8.0E298);
      double double6 = FastMath.acos((-6111.472941));
      double double7 = FastMath.max(3825.2212704418, 8.0E298);
      double double8 = FastMath.tan((-6111.472941));
      double double9 = FastMath.log1p(2.563009154379015E-7);
      double double10 = FastMath.ceil(1482.0);
      float float2 = FastMath.min((-1155.47F), 0.0F);
      double double11 = FastMath.atan(1.0);
      double double12 = FastMath.pow((-2543.05639500966), 4.583662361046585E300);
      double double13 = FastMath.ulp(0.0F);
      int int0 = FastMath.abs(2147430388);
      int int1 = FastMath.min(1, 1);
      double double14 = FastMath.atan2(0.9305076599121094, 377.769471282696);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      double double0 = FastMath.rint(1.8358548930975745E-7);
      double double1 = FastMath.log1p((-1.0));
      double double2 = FastMath.tan(1.8358548930975745E-7);
      double double3 = FastMath.abs(531.8905732458);
      int int0 = FastMath.round(0.0F);
      double double4 = FastMath.acos(1.835854893097595E-7);
      int int1 = FastMath.round(3542.8F);
      double double5 = FastMath.toRadians(2277.8);
      double double6 = FastMath.asinh((-3.940510424527919E-20));
      double double7 = FastMath.max(0.10526403784751892, 1.074682223392077);
      int int2 = FastMath.min((-3574), 930);
      double double8 = FastMath.abs(4.9E-324);
      double double9 = FastMath.sinh((-1114.891598));
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      float float0 = FastMath.min((-78.95435F), 0.0F);
      double double0 = FastMath.nextAfter(2321.7195799337, (-78.95435F));
      double double1 = FastMath.acosh((-3.940510424527919E-20));
      double double2 = FastMath.asinh((-367.4));
      double double3 = FastMath.log10(4756.1463);
      double double4 = FastMath.random();
      double double5 = FastMath.asin(4756.1463);
      long long0 = FastMath.min((-1133L), (-1133L));
      double double6 = FastMath.ceil((-3.940510424527919E-20));
      double double7 = FastMath.atanh(3.6772552051362006);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      double double0 = FastMath.atan2(0.0, 0.0);
      long long0 = FastMath.round(0.0);
      double double1 = FastMath.nextUp(0.0);
      double double2 = FastMath.atanh(0.0);
      double double3 = FastMath.acosh(0.0);
      double double4 = FastMath.acos(4.9E-324);
      double double5 = FastMath.toDegrees(4.9E-324);
      double double6 = FastMath.abs(4.9E-324);
      double double7 = FastMath.min(4.9E-324, 4.9E-324);
      double double8 = FastMath.expm1(695.5352189695022);
      double double9 = FastMath.cosh(1.0);
      double double10 = FastMath.tanh((-4.469603409122654E-6));
      double double11 = FastMath.log10(0.4342944622039795);
      long long1 = FastMath.min(0L, 0L);
      double double12 = FastMath.cbrt((-4.469603409122654E-6));
      double double13 = FastMath.acos(1.560070049119026);
      double double14 = FastMath.abs(1.0320850239843855);
      double double15 = FastMath.atanh(1.0320850239843855);
      double double16 = FastMath.exp((-0.1666666567325592));
      int int0 = FastMath.round(0.0F);
      double double17 = FastMath.sqrt(0.0);
      long long2 = FastMath.max(859L, 859L);
      double double18 = FastMath.rint(0.9305076599121094);
      float float0 = FastMath.min(0.0F, 0.0F);
      float float1 = FastMath.abs((float) 859L);
      double double19 = FastMath.ulp(0.9305076599121094);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      double double0 = FastMath.ceil(0.6409968137741089);
      double double1 = FastMath.ceil(1.0);
      double double2 = FastMath.atanh(1.0);
      double double3 = FastMath.log1p((-1976.159));
      int int0 = FastMath.max((-926), (-926));
      double double4 = FastMath.acosh(Double.POSITIVE_INFINITY);
      double double5 = FastMath.abs(1.0);
      int int1 = FastMath.round(0.0F);
      double double6 = FastMath.sqrt(Double.POSITIVE_INFINITY);
      double double7 = FastMath.ulp(1.0);
      double double8 = FastMath.toDegrees(0);
      double double9 = FastMath.toRadians(0.097);
      double double10 = FastMath.tan((-375.05712));
      double double11 = FastMath.signum(1191.22242);
      double double12 = FastMath.pow((-8.0E298), (-2770.642408503002));
      double double13 = FastMath.pow(0, 0.6409968137741089);
      long long0 = FastMath.abs((long) (-926));
      double double14 = FastMath.atan2((-926), 0.0);
      double double15 = FastMath.asinh(Double.POSITIVE_INFINITY);
      double double16 = FastMath.log10((-1.0));
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      long long0 = FastMath.min(2935890503282001226L, 816L);
      double double0 = FastMath.log10(0.0);
      double double1 = FastMath.pow(0.9305076599121094, 2935890503282001226L);
      double double2 = FastMath.asinh(816L);
      double double3 = FastMath.min((-1011.416416719662), 7.3975619109803965);
      long long1 = FastMath.max(211L, 816L);
      double double4 = FastMath.log1p(Double.NaN);
      double double5 = FastMath.asinh(211L);
      double double6 = FastMath.max((-1.0), 1.139493927324549);
      double double7 = FastMath.atanh(0.6409968137741089);
      double double8 = FastMath.sin(2935890503282001226L);
      long long2 = FastMath.max(816L, 1126L);
      double double9 = FastMath.cbrt((-1.0));
      double double10 = FastMath.log((-1992.29459765));
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      double double0 = FastMath.cosh((-942.40409348));
      double double1 = FastMath.sinh((-942.40409348));
      float float0 = FastMath.min(0.0F, 375.4707F);
      int int0 = FastMath.round(375.4707F);
      double double2 = FastMath.atanh(375.4707F);
      double double3 = FastMath.random();
      double double4 = FastMath.sin(Double.POSITIVE_INFINITY);
      double double5 = FastMath.rint(2405.3);
      double double6 = FastMath.rint(Double.NaN);
      int int1 = FastMath.min(375, 375);
      double double7 = FastMath.rint(375);
      double double8 = FastMath.ceil(Double.NEGATIVE_INFINITY);
      double double9 = FastMath.atan(3282.0);
      float float1 = FastMath.abs(0.0F);
      double double10 = FastMath.sinh(3724.49543);
      double double11 = FastMath.asinh(2405.3);
      float float2 = FastMath.min(0.0F, 0.0F);
      double double12 = FastMath.exp((-8.0E298));
      long long0 = FastMath.max((long) 375, (long) 375);
      double double13 = FastMath.tanh(1.0);
      float float3 = FastMath.max(0.0F, (float) 375);
      double double14 = FastMath.log(3724.49543);
      double double15 = FastMath.floor(8.478577138656858);
      double double16 = FastMath.max((-1272.636819), (-3808.5651349022));
      int int2 = FastMath.max(375, 375);
      double double17 = FastMath.max((-3966.061756375), 3282.0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      double double0 = FastMath.cosh((-942.40409348));
      double double1 = FastMath.sinh((-942.40409348));
      float float0 = FastMath.min(0.0F, 375.4707F);
      int int0 = FastMath.round(375.4707F);
      double double2 = FastMath.atanh(375.4707F);
      double double3 = FastMath.random();
      double double4 = FastMath.sin(Double.POSITIVE_INFINITY);
      double double5 = FastMath.rint(2405.3);
      int int1 = FastMath.min(375, 375);
      double double6 = FastMath.rint(375);
      double double7 = FastMath.ceil(Double.NEGATIVE_INFINITY);
      double double8 = FastMath.atan(3282.0);
      float float1 = FastMath.abs(0.0F);
      double double9 = FastMath.sinh(3724.49543);
      double double10 = FastMath.asinh(2405.3);
      float float2 = FastMath.min(0.0F, 0.0F);
      double double11 = FastMath.exp((-8.0E298));
      long long0 = FastMath.max((long) 375, (long) 375);
      double double12 = FastMath.tanh(1.0);
      float float3 = FastMath.max(0.0F, (float) 375);
      double double13 = FastMath.log(3724.49543);
      double double14 = FastMath.floor(8.478577138656858);
      double double15 = FastMath.max((-1272.636819), (-3808.5651349022));
      int int2 = FastMath.max(375, 375);
      double double16 = FastMath.max((-3966.061756375), 3282.0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      int int0 = FastMath.min(13, 12);
      double double0 = FastMath.nextUp((-4.503599627370496E15));
      long long0 = FastMath.max((long) 12, (long) 13);
      double double1 = FastMath.tan(12);
      double double2 = FastMath.min((double) 13L, (double) 12);
      int int1 = FastMath.max((-168), (-1758));
      double double3 = FastMath.ulp((-260.8357414));
      double double4 = FastMath.rint((-4.5035996273704955E15));
      double double5 = FastMath.atan2(12, 12.0);
      double double6 = FastMath.max((double) (-1758), 2239.3915269299014);
      double double7 = FastMath.tanh(1.0);
      double double8 = FastMath.tanh((-168));
      float float0 = FastMath.min((float) (-168), (float) (-1758));
      long long1 = FastMath.min((long) 13, (long) (-168));
      double double9 = FastMath.sinh(5.6843418860808015E-14);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      double double0 = FastMath.max((-1.0), (-1.0));
      double double1 = FastMath.acosh(360.172);
      double double2 = FastMath.log1p(0.5463024898437905);
      double double3 = FastMath.tanh(6.57972694851246);
      float float0 = FastMath.abs(0.0F);
      double double4 = FastMath.floor((-1.0));
      int int0 = FastMath.abs(10);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      double double0 = FastMath.log10(0.7937005259840998);
      long long0 = FastMath.abs(0L);
      double double1 = FastMath.min((-1.0), 0.0);
      double double2 = FastMath.atan2(0.6409968137741089, 0.0);
      double double3 = FastMath.pow(1.0, (-1.0));
      double double4 = FastMath.cbrt((-1.0));
      double double5 = FastMath.tanh(0.14982303977012634);
      double double6 = FastMath.max(1.176342548272881E-8, (-0.05417713522911072));
      int int0 = FastMath.abs(7);
      double double7 = FastMath.tanh((-0.1003433318879937));
      double double8 = FastMath.acosh(1.0);
      int int1 = FastMath.round(2422.825F);
      double double9 = FastMath.exp((-8.0E298));
      double double10 = FastMath.cos(1.5707963267948966);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      double double0 = FastMath.asinh((-0.05417713522911072));
      int int0 = FastMath.min(773, 773);
      double double1 = FastMath.rint(2.639144044101463E-7);
      double double2 = FastMath.sin(958.0);
      double double3 = FastMath.signum((-0.05417713522911072));
      double double4 = FastMath.sqrt(0.18469286804020318);
      double double5 = FastMath.toDegrees(0.25534192122103627);
      int int1 = FastMath.max(773, 0);
      double double6 = FastMath.toDegrees(0.4311765432357788);
      double double7 = FastMath.asin(0);
      double double8 = FastMath.log1p(24.70459615245019);
      double double9 = FastMath.min(3.4620039155736807E-7, (double) 773);
      double double10 = FastMath.abs((-1.0));
      double double11 = FastMath.min(3.4620039155736807E-7, 3036.056942808);
      double double12 = FastMath.toRadians(24.70459615245019);
      double double13 = FastMath.random();
      double double14 = FastMath.cosh(773);
      int int2 = FastMath.abs((-341));
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      double double0 = FastMath.expm1((-382.315741279292));
      double double1 = FastMath.atan2((-1725.0), (-1.0));
      float float0 = FastMath.min(1300.8461F, 1300.8461F);
      double double2 = FastMath.log1p((-3402.3));
      int int0 = FastMath.abs(1610087935);
      double double3 = FastMath.tanh((-3402.3));
      double double4 = FastMath.atanh(Double.NaN);
      double double5 = FastMath.random();
      double double6 = FastMath.nextAfter(1300.8461F, 1300.8461F);
      double double7 = FastMath.cbrt((-1.0));
      int int1 = FastMath.abs(2061584302);
      double double8 = FastMath.pow((-1.0), (-1.0));
      double double9 = FastMath.random();
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      double double0 = FastMath.asin(123.207162955359);
      double double1 = FastMath.sqrt(123.207162955359);
      double double2 = FastMath.pow(11.09987220446069, 1669.661);
      double double3 = FastMath.nextUp(Double.POSITIVE_INFINITY);
      double double4 = FastMath.log((-592.09978024));
      double double5 = FastMath.atanh(Double.NaN);
      double double6 = FastMath.acos((-1.0));
      double double7 = FastMath.floor(3.141592653589793);
      double double8 = FastMath.rint(Double.NaN);
      double double9 = FastMath.pow(0.6409968137741089, 3.141592653589793);
      double double10 = FastMath.atan(1.366701124672226);
      double double11 = FastMath.abs(Double.POSITIVE_INFINITY);
      double double12 = FastMath.asin(3259.419282578);
      float float0 = FastMath.min((-1511.859F), (-1511.859F));
      double double13 = FastMath.nextAfter((-2.957007209750105E-8), (-645.57));
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      double double0 = FastMath.ceil(166.13177309443878);
      double double1 = FastMath.nextUp(167.0);
      double double2 = FastMath.toRadians(167.00000000000003);
      double double3 = FastMath.nextUp(167.00000000000003);
      double double4 = FastMath.log10(166.13177309443878);
      int int0 = FastMath.abs(462);
      double double5 = FastMath.asinh(167.00000000000003);
      double double6 = FastMath.atanh((-0.16666666666666666));
      double double7 = FastMath.max((-0.16666666666666666), 0.5403022766113281);
      double double8 = FastMath.expm1(1.139493927324549);
      double double9 = FastMath.ceil(1.8508157176809257);
      double double10 = FastMath.nextUp(5.811149956963883);
      double double11 = FastMath.abs(0.5403022766113281);
      double double12 = FastMath.pow(0.0, 3294198.0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      double double0 = FastMath.acosh(0.07842259109020233);
      double double1 = FastMath.log10((-2754.9141339832468));
      float float0 = FastMath.min(0.0F, 0.0F);
      double double2 = FastMath.ulp((-1.0));
      double double3 = FastMath.sinh(Double.NaN);
      double double4 = FastMath.expm1(5872.57691);
      double double5 = FastMath.asinh(Double.POSITIVE_INFINITY);
      double double6 = FastMath.max((-1.0), 0.0);
      float float1 = FastMath.min(1.0F, 0.0F);
      double double7 = FastMath.tanh(2.563009154379015E-7);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      double double0 = FastMath.max((-412.73033), (-412.73033));
      double double1 = FastMath.sin((-412.73033));
      long long0 = FastMath.abs((-2644281811660520851L));
      float float0 = FastMath.min((float) 2644281811660520851L, (float) 2644281811660520851L);
      long long1 = FastMath.round(7.549789948768648E-8);
      double double2 = FastMath.nextAfter(0L, (-5916.0));
      double double3 = FastMath.random();
      long long2 = FastMath.max(0L, 2644281811660520851L);
      double double4 = FastMath.signum(2644281811660520851L);
      double double5 = FastMath.min(4521.3413211185, 1.0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      long long0 = FastMath.abs((-3512299194304650054L));
      double double0 = FastMath.sinh(990.936685);
      double double1 = FastMath.min(990.936685, (-943.80949553965));
      double double2 = FastMath.toRadians(3.171357693770103);
      double double3 = FastMath.cosh(3.171357693770103);
      int int0 = FastMath.max((-270), 2144505168);
      double double4 = FastMath.toRadians(3080.9928);
      double double5 = FastMath.random();
      double double6 = FastMath.max(0.8775825500488281, (-1.0));
      double double7 = FastMath.log10(1.074682223392077);
      long long1 = FastMath.abs(0L);
      double double8 = FastMath.pow(0.9315964599440725, Double.POSITIVE_INFINITY);
      double double9 = FastMath.random();
      double double10 = FastMath.nextUp(0.8775825500488281);
      double double11 = FastMath.atan2(0.0, 0.05535063351474236);
      double double12 = FastMath.cosh(3080.9928);
      double double13 = FastMath.sqrt(0.1);
      double double14 = FastMath.max((-67.2903), 0.031280065154490236);
      double double15 = FastMath.cosh(0.0);
      double double16 = FastMath.toDegrees(0.8775825500488281);
      double double17 = FastMath.max((-943.80949553965), (-943.80949553965));
      double double18 = FastMath.random();
      double double19 = FastMath.rint(1313.2947);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      double double0 = FastMath.atanh(574.132249);
      long long0 = FastMath.abs(9154082963658192752L);
      double double1 = FastMath.asinh(Double.NaN);
      double double2 = FastMath.acosh((-974.2131867));
      double double3 = FastMath.max(Double.NaN, 365.6135879);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      double double0 = FastMath.sqrt((-1.0));
      long long0 = FastMath.round(Double.NaN);
      double double1 = FastMath.rint(0L);
      double double2 = FastMath.random();
      double double3 = FastMath.rint(2.639144044101463E-7);
      double double4 = FastMath.cosh((-4.503599627370496E15));
      float float0 = FastMath.min((float) 0L, (float) 0L);
      double double5 = FastMath.sin(2.384185791015625E-7);
      float float1 = FastMath.min(1.0F, 0.0F);
      double double6 = FastMath.log(0L);
      double double7 = FastMath.cos(6.951502372232782E-7);
      int int0 = FastMath.round(0.0F);
      double double8 = FastMath.asin((-1565.5611959));
      double double9 = FastMath.nextUp(0.0);
      double double10 = FastMath.asin(2471.7);
      double double11 = FastMath.nextAfter(2.639144044101463E-7, 2471.7);
      double double12 = FastMath.toDegrees(0.0);
      double double13 = FastMath.min(0.5000000000042687, 0.5039018405998233);
      double double14 = FastMath.tanh(0.5000000000042687);
      double double15 = FastMath.random();
      double double16 = FastMath.sinh(1.0);
      float float2 = FastMath.abs(Float.NaN);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      double double0 = FastMath.cbrt(3.410491133089812E-7);
      double double1 = FastMath.acosh(0.006986703420955805);
      double double2 = FastMath.ulp(3.410491133089812E-7);
      double double3 = FastMath.cos(Double.NaN);
      double double4 = FastMath.exp(8.0E298);
      int int0 = FastMath.max(0, (-940));
      double double5 = FastMath.random();
      double double6 = FastMath.ceil(9.220590270857665E-9);
      int int1 = FastMath.abs(0);
      double double7 = FastMath.rint(1144.978918996);
      double double8 = FastMath.atan(Double.NaN);
      double double9 = FastMath.ceil(0);
      double double10 = FastMath.acos(Double.NaN);
      double double11 = FastMath.floor(0.0);
      float float0 = FastMath.abs((float) (-940));
      double double12 = FastMath.cos(Double.NaN);
      float float1 = FastMath.abs((float) 0);
      float float2 = FastMath.min((float) 0, 940.0F);
      float float3 = FastMath.max((float) 0, 3829.0F);
      double double13 = FastMath.min(1145.0, (-1.0));
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      double double0 = FastMath.sinh(0.0);
      int int0 = FastMath.abs((-1));
      double double1 = FastMath.nextAfter(0.0, 0.0);
      double double2 = FastMath.max((-265.1089681054456), (-265.1089681054456));
      double double3 = FastMath.toRadians(0.0);
      double double4 = FastMath.min((-974.36581270975), (-265.1089681054456));
      int int1 = FastMath.abs((-1));
      double double5 = FastMath.min((-379.6205036812), (double) 1);
      double double6 = FastMath.sin((-265.1089681054456));
      double double7 = FastMath.sqrt(733.6522348487433);
      double double8 = FastMath.sqrt((-1));
      double double9 = FastMath.sin(0.0);
      int int2 = FastMath.min((-1), 275);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      double double0 = FastMath.ulp((-1006.767628357));
      float float0 = FastMath.min(0.0F, 0.0F);
      double double1 = FastMath.pow(242.871, 242.871);
      double double2 = FastMath.sin(0.0F);
      double double3 = FastMath.cosh(0.0F);
      long long0 = FastMath.round(1.5574077246549023);
      double double4 = FastMath.pow((-3917.34150329), 0.1111111111111111);
      double double5 = FastMath.sinh(1300.39313673);
      double double6 = FastMath.atan2(Double.POSITIVE_INFINITY, 0.75);
      double double7 = FastMath.rint((-1.0F));
      double double8 = FastMath.atan((-1.0F));
      float float1 = FastMath.abs(0.0F);
      double double9 = FastMath.asinh((-1.0));
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      int int0 = FastMath.max(305, 305);
      double double0 = FastMath.log1p((-1420.2869338543655));
      double double1 = FastMath.log10(305);
      double double2 = FastMath.atan(1792.18453216179);
      float float0 = FastMath.min((float) 305, (float) 305);
      double double3 = FastMath.min((-18.43086276236962), 20.0);
      double double4 = FastMath.signum(20.0);
      double double5 = FastMath.cos(305);
      int int1 = FastMath.abs(305);
      long long0 = FastMath.max((long) 305, (long) 305);
      double double6 = FastMath.expm1((-0.9649581189333869));
      double double7 = FastMath.acosh((-782.747984377357));
      double double8 = FastMath.ceil(1792.18453216179);
      double double9 = FastMath.pow((-782.747984377357), 1792.18453216179);
      double double10 = FastMath.max((-1826.8414899797142), 1.366701124672226);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      double double0 = FastMath.signum(14.136832902969902);
      double double1 = FastMath.expm1((-18.457971236441537));
      double double2 = FastMath.asinh((-18.457971236441537));
      double double3 = FastMath.floor(79.744106);
      double double4 = FastMath.abs((-243.09283));
      double double5 = FastMath.asinh(0.9315964599440725);
      double double6 = FastMath.acos((-0.9999999903660376));
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      double double0 = FastMath.acosh((-1787.2118715573));
      double double1 = FastMath.pow(2307.704283107, (-1787.2118715573));
      double double2 = FastMath.log1p(1.3526894423597173E-6);
      float float0 = FastMath.min(Float.NaN, 3593.05F);
      int int0 = FastMath.round(1.0F);
      double double3 = FastMath.cbrt(Float.NaN);
      double double4 = FastMath.floor(Double.NaN);
      double double5 = FastMath.pow((-1787.2118715573), Float.NaN);
      int int1 = FastMath.min(1, 2122);
      double double6 = FastMath.atanh(2.092571276372179);
      double double7 = FastMath.cosh(0.25534192122103627);
      double double8 = FastMath.nextUp(2.479773539153719E-5);
      double double9 = FastMath.toDegrees(0.25534192122103627);
      double double10 = FastMath.tan(Float.NaN);
      double double11 = FastMath.signum(14.136832902969902);
      double double12 = FastMath.sinh(1.3526894423597173E-6);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      double double0 = FastMath.acos(2985.0);
      float float0 = FastMath.min(0.0F, 2090.8684F);
      long long0 = FastMath.abs(1081L);
      double double1 = FastMath.toRadians(Double.NaN);
      long long1 = FastMath.abs(907L);
      double double2 = FastMath.atan(1081L);
      double double3 = FastMath.toRadians(907L);
      float float1 = FastMath.max((float) 1081L, 4476.08F);
      float float2 = FastMath.min(3299.2F, Float.NaN);
      double double4 = FastMath.rint(3.410491133089812E-7);
      double double5 = FastMath.ceil(907L);
      double double6 = FastMath.log10(1.56987125767857);
      double double7 = FastMath.tan(0.0);
      double double8 = FastMath.sin(3.001117512531765E-7);
      double double9 = FastMath.asinh(1531.5556492142782);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      double double0 = FastMath.log10(0.0);
      double double1 = FastMath.tan(0.0);
      double double2 = FastMath.atan((-2354.7293));
      double double3 = FastMath.asin((-706.36868));
      double double4 = FastMath.log1p(0.003);
      double double5 = FastMath.log1p(0.003);
      float float0 = FastMath.min(2318.1F, 2318.1F);
      double double6 = FastMath.cbrt((-1.0));
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      double double0 = FastMath.exp((-1.0));
      double double1 = FastMath.nextUp(0.3999999761581421);
      double double2 = FastMath.pow(998.678, 1.9699272335463627E-8);
      double double3 = FastMath.cbrt(809.06901322);
      double double4 = FastMath.tan(0.39362657592563277);
      float float0 = FastMath.max(Float.NaN, 0.0F);
      double double5 = FastMath.log((-1208.40565447));
      double double6 = FastMath.cos(110.0);
      double double7 = FastMath.tanh(0.9305076599121094);
      double double8 = FastMath.tanh((-3095.378212));
      int int0 = FastMath.max(2339, 2339);
      double double9 = FastMath.nextAfter(0.36787944117144233, Float.NaN);
      double double10 = FastMath.atan(0.0);
      double double11 = FastMath.cosh(0.3678794411714423);
      int int1 = FastMath.round(Float.NaN);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      long long0 = FastMath.abs((-1L));
      int int0 = FastMath.abs(2475);
      double double0 = FastMath.cos(1L);
      int int1 = FastMath.min(790, 907374237);
      double double1 = FastMath.sinh(790);
      double double2 = FastMath.min((double) 790, 0.6366197723675814);
      double double3 = FastMath.log1p(0.0);
      double double4 = FastMath.toDegrees(0.5403022766113281);
      double double5 = FastMath.signum(1.0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      long long0 = FastMath.max(0L, 6722166367014452318L);
      double double0 = FastMath.nextUp(6722166367014452318L);
      double double1 = FastMath.random();
      double double2 = FastMath.exp(6.7221663670144532E18);
      int int0 = FastMath.round((-1123.0F));
      long long1 = FastMath.max(3952090531849364496L, (long) (-1123));
      double double3 = FastMath.log1p(3952090531849364496L);
      double double4 = FastMath.abs(0.0);
      long long2 = FastMath.max(6722166367014452318L, (-2268L));
      float float0 = FastMath.abs((float) 6722166367014452318L);
      double double5 = FastMath.ulp((-2268L));
      double double6 = FastMath.tan(0L);
      double double7 = FastMath.log(3952090531849364496L);
      double double8 = FastMath.log1p(563.32);
      double double9 = FastMath.toRadians(4.547473508864641E-13);
      double double10 = FastMath.sin(1.0);
      double double11 = FastMath.nextAfter(690.696242, (-1002.0));
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      double double0 = FastMath.atan((-774.79418918));
      double double1 = FastMath.rint((-1.5695056621788048));
      double double2 = FastMath.cbrt(0.9305076599121094);
      double double3 = FastMath.toDegrees((-371.0));
      int int0 = FastMath.abs(0);
      double double4 = FastMath.floor((-21256.73419935354));
      int int1 = FastMath.max((-1918), 0);
      double double5 = FastMath.log10((-21256.73419935354));
      long long0 = FastMath.max((long) 0, (long) 0);
      double double6 = FastMath.asinh(1135.1312);
      double double7 = FastMath.cosh(0L);
      double double8 = FastMath.abs(0.041666666666621166);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      double double0 = FastMath.pow(1.074682223392077, 1.074682223392077);
      double double1 = FastMath.acosh((-1755.161));
      double double2 = FastMath.max(1.074682223392077, 1.074682223392077);
      double double3 = FastMath.cos(1354.52);
      double double4 = FastMath.acos(Double.NaN);
      double double5 = FastMath.ceil(Double.NaN);
      long long0 = FastMath.min((-2500L), (-2500L));
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      long long0 = FastMath.max(3916L, 821L);
      double double0 = FastMath.random();
      long long1 = FastMath.round((double) 3916L);
      double double1 = FastMath.expm1(0.0);
      double double2 = FastMath.atan2(14.136832902969902, (-1142.0263687937463));
      long long2 = FastMath.max(0L, (-1L));
      long long3 = FastMath.max(0L, 0L);
      double double3 = FastMath.nextUp((-129.35780334762));
      double double4 = FastMath.tan((-873.719602452));
      double double5 = FastMath.min(3.1292145585827824, 0.0);
      double double6 = FastMath.max((-3397.548434443), (-907.148));
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      double double0 = FastMath.cos(0.9315964599440725);
      double double1 = FastMath.exp(3.038148934955037E-7);
      double double2 = FastMath.toRadians((-1256.24796193));
      float float0 = FastMath.abs((-1.0F));
      double double3 = FastMath.signum(1.0000003038149397);
      double double4 = FastMath.ceil((-303.72303));
      double double5 = FastMath.random();
      float float1 = FastMath.min((-2708.1377F), (-626.4F));
      double double6 = FastMath.pow(0.0, (-303.72303));
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      double double0 = FastMath.acos(2548.88439);
      long long0 = FastMath.abs(2589L);
      int int0 = FastMath.min(20, 2332);
      double double1 = FastMath.atanh(Double.NaN);
      double double2 = FastMath.log10((-3437.28));
      double double3 = FastMath.log(2332);
      double double4 = FastMath.cos(3009.12);
      double double5 = FastMath.expm1((-2000.1468193));
      double double6 = FastMath.asinh(20);
      double double7 = FastMath.rint(Double.NaN);
      double double8 = FastMath.expm1(Double.NaN);
      int int1 = FastMath.round(0.0F);
      double double9 = FastMath.ulp(0.25534192122103627);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      double double0 = FastMath.log10(3.410491133089812E-7);
      double double1 = FastMath.acosh(1.8358548930975745E-7);
      double double2 = FastMath.nextUp((-234.6));
      double double3 = FastMath.signum((-3970.412141743063));
      double double4 = FastMath.acosh(3.410491133089812E-7);
      double double5 = FastMath.tanh((-234.59999999999997));
      double double6 = FastMath.signum(1.5574077246549023);
      long long0 = FastMath.min(4337L, (-490L));
      double double7 = FastMath.cbrt((-3970.412141743063));
      double double8 = FastMath.tanh(1.5574077246549023);
      int int0 = FastMath.max((-1011), (-1011));
      double double9 = FastMath.cosh((-234.6));
      double double10 = FastMath.cbrt(620.319129);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      long long0 = FastMath.round(0.07073719799518585);
      int int0 = FastMath.max(1, 1);
      int int1 = FastMath.round(1.0F);
      int int2 = FastMath.max(1, 2147483594);
      double double0 = FastMath.ulp((-328.6305572607));
      double double1 = FastMath.min(2578.829868916, (double) 1.0F);
      double double2 = FastMath.acos(329.99603);
      double double3 = FastMath.min((-1451.4215), (double) 1.0F);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      double double0 = FastMath.nextAfter((-547.32), (-547.32));
      double double1 = FastMath.ulp((-547.32));
      double double2 = FastMath.asin((-547.3200000000002));
      double double3 = FastMath.sinh(0.07490822288864472);
      long long0 = FastMath.min(4503599627370496L, 2328L);
      long long1 = FastMath.abs(2328L);
      double double4 = FastMath.abs(151.0);
      double double5 = FastMath.asin((-547.3200000000002));
      double double6 = FastMath.exp(2328L);
      double double7 = FastMath.toRadians((-1.0));
      double double8 = FastMath.sinh((-547.3200000000002));
      double double9 = FastMath.asinh(Double.POSITIVE_INFINITY);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      double double0 = FastMath.expm1((-1581.2960260248));
      double double1 = FastMath.tanh((-1581.2960260248));
      long long0 = FastMath.abs((-938L));
      double double2 = FastMath.ceil(1609.995824644);
      double double3 = FastMath.signum(1.3526894423597173E-6);
      int int0 = FastMath.abs(1);
      double double4 = FastMath.toDegrees(0.8109631538391113);
      double double5 = FastMath.acos(1);
      double double6 = FastMath.ceil(0.0);
      long long1 = FastMath.min((-938L), 938L);
      double double7 = FastMath.toDegrees(1.3526894423597173E-6);
      double double8 = FastMath.log1p(5.041915256481364);
      long long2 = FastMath.min((long) 1, (-860L));
      double double9 = FastMath.toDegrees(1.798721057126523);
      long long3 = FastMath.abs((long) 1);
      long long4 = FastMath.min((long) 1, 938L);
      double double10 = FastMath.signum(1.3526894423597173E-6);
      int int1 = FastMath.max(1610481632, (-2180));
      double double11 = FastMath.sqrt((-1956.1473013238283));
      double double12 = FastMath.nextAfter((-1.0), 5.041915256481364);
      double double13 = FastMath.sin(1.0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      double double0 = FastMath.ulp(0.25534192122103627);
      int int0 = FastMath.round((-2286.2292F));
      int int1 = FastMath.min((-2286), (-2286));
      double double1 = FastMath.cbrt(1.2331016983979697);
      double double2 = FastMath.tanh(1.0);
      double double3 = FastMath.asinh((-2370.464));
      double double4 = FastMath.log10((-8.463988220608432));
      double double5 = FastMath.asin(1.072341133681323);
      long long0 = FastMath.max(491L, 139L);
      double double6 = FastMath.log10(Double.NaN);
      double double7 = FastMath.log10((-1.0));
      double double8 = FastMath.abs(1.0E-6);
      double double9 = FastMath.nextAfter(8.0E298, 0.1111111111111111);
      double double10 = FastMath.acos((-1.0));
      double double11 = FastMath.acosh(139L);
      double double12 = FastMath.asin(898.73);
      double double13 = FastMath.atan(7.999999999999999E298);
      long long1 = FastMath.abs((long) (-2286));
      double double14 = FastMath.random();
      double double15 = FastMath.floor(2286L);
      double double16 = FastMath.sqrt(Double.NaN);
      double double17 = FastMath.asinh(Double.NaN);
      double double18 = FastMath.signum((-8.463988220608432));
      long long2 = FastMath.abs(491L);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      double double0 = FastMath.pow(621.22354287, 621.22354287);
      double double1 = FastMath.cbrt(621.22354287);
      double double2 = FastMath.rint(1.2246467991473532E-16);
      double double3 = FastMath.log10((-1.0E-6));
      double double4 = FastMath.acos(1.7921224045520082E-17);
      double double5 = FastMath.asinh(621.22354287);
      double double6 = FastMath.sqrt(2282.506458372);
      double double7 = FastMath.cbrt(0.0);
      double double8 = FastMath.pow(Double.POSITIVE_INFINITY, 1.2246467991473532E-16);
      int int0 = FastMath.abs(40);
      double double9 = FastMath.ceil((-267.0453566354));
      double double10 = FastMath.atan2(0.0, 1.2246467991473532E-16);
      double double11 = FastMath.cos((-267.0));
      double double12 = FastMath.rint((-427.484));
      int int1 = FastMath.abs(1024);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      float float0 = FastMath.abs(0.0F);
      int int0 = FastMath.abs(544);
      double double0 = FastMath.exp(634.580836198);
      double double1 = FastMath.atan2(0.0F, (-18.457971236441537));
      double double2 = FastMath.log10(0.0);
      double double3 = FastMath.toDegrees(0.0);
      long long0 = FastMath.max((long) 544, 485L);
      double double4 = FastMath.log1p(2839.434893974461);
      double double5 = FastMath.random();
      double double6 = FastMath.atan2(3.9350973639970476E275, 0.0);
      double double7 = FastMath.asinh(0.0);
      double double8 = FastMath.abs(14.136832902969902);
      double double9 = FastMath.pow((-1651.21570435407), 7.9517124511129404);
      double double10 = FastMath.nextUp(Double.NaN);
      double double11 = FastMath.min((double) 544L, (-18.457971236441537));
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      double double0 = FastMath.toRadians(1672.9619713199895);
      double double1 = FastMath.log1p(2764.3572690032);
      double double2 = FastMath.cbrt(2.092571276372179);
      double double3 = FastMath.log10(0.0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      double double0 = FastMath.random();
      long long0 = FastMath.abs(1L);
      double double1 = FastMath.tan(0.0);
      double double2 = FastMath.acos(5.041915256481364);
      double double3 = FastMath.tan(0.0);
      double double4 = FastMath.ulp(2886.27307221529);
      double double5 = FastMath.cos(0.0);
      long long1 = FastMath.round(1.366701124672226);
      double double6 = FastMath.log1p(0.13333332538604736);
      double double7 = FastMath.tanh(0.0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      long long0 = FastMath.round((-1.0));
      double double0 = FastMath.acos((-1.0));
      double double1 = FastMath.max(0.15, 3.141592653589793);
      double double2 = FastMath.ceil(0.15);
      double double3 = FastMath.cosh((-1L));
      double double4 = FastMath.expm1(2.092571276372179);
      int int0 = FastMath.round((float) (-1L));
      double double5 = FastMath.asinh(3.141592653589793);
      long long1 = FastMath.max((long) (-1), 0L);
      double double6 = FastMath.sin(1167.0);
      double double7 = FastMath.log(5923.859295798505);
      double double8 = FastMath.ulp(5923.859295798505);
      double double9 = FastMath.expm1(1468.1);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      double double0 = FastMath.acos(1.074682223392077);
      double double1 = FastMath.cosh((-904.7038588));
      double double2 = FastMath.sinh(Double.POSITIVE_INFINITY);
      double double3 = FastMath.log1p((-904.7038588));
      double double4 = FastMath.atan((-8.0E298));
      long long0 = FastMath.abs(0L);
      double double5 = FastMath.cbrt((-2764.4287132));
      double double6 = FastMath.ceil(0.6409968137741089);
      double double7 = FastMath.pow((-717.525002528127), (-518.0));
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      int int0 = FastMath.min(1003734390, 740);
      float float0 = FastMath.max((-1063.0F), 0.0F);
      double double0 = FastMath.pow(1003734390, (-1063.0F));
      double double1 = FastMath.asinh(1003734390);
      float float1 = FastMath.min(0.0F, (-2147.2031F));
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      double double0 = FastMath.min(1.3526894423597173E-6, 1.0);
      double double1 = FastMath.max(853.671867706, 40.19140625);
      int int0 = FastMath.round(3167.7F);
      float float0 = FastMath.min((float) 3168, 1.0F);
      double double2 = FastMath.asin(853.671867706);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      double double0 = FastMath.rint(0.8775825500488281);
      double double1 = FastMath.abs(1.0);
      double double2 = FastMath.atan(1.0);
      double double3 = FastMath.ceil(1.0);
      double double4 = FastMath.abs((-18.457971236441537));
      double double5 = FastMath.asin((-18.457971236441537));
      double double6 = FastMath.atan(Double.NaN);
      float float0 = FastMath.min((-1430.74F), (-1430.74F));
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      float float0 = FastMath.max((-1505.807F), 2977.0F);
      double double0 = FastMath.atanh((-1505.807F));
      double double1 = FastMath.sin(0.5403022766113281);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      double double0 = FastMath.min(0.5000000000042687, (-980.787));
      double double1 = FastMath.acos((-980.787));
      double double2 = FastMath.max(8.0E298, 8.0E298);
      double double3 = FastMath.toRadians(8.0E298);
      double double4 = FastMath.toDegrees(1.3962634015954635E297);
      int int0 = FastMath.min(350, 1610087935);
      double double5 = FastMath.log(Double.NaN);
      double double6 = FastMath.cosh(8.0E298);
      double double7 = FastMath.sqrt(1.3962634015954635E297);
      long long0 = FastMath.min(5648769086999809661L, 3604L);
      double double8 = FastMath.signum((-59.6044766750063));
      long long1 = FastMath.round(0.333333333333333);
      double double9 = FastMath.asin((-1.0));
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      double double0 = FastMath.sqrt((-1487.481907785));
      double double1 = FastMath.max((-6.032174644509064E-23), (-6.032174644509064E-23));
      double double2 = FastMath.atan2(Double.NaN, (-1487.481907785));
      long long0 = FastMath.max((-489L), (-489L));
      double double3 = FastMath.log(3.0);
      double double4 = FastMath.min(0.030589580535888672, 1606.94087);
      double double5 = FastMath.acos(1981.6578246);
      double double6 = FastMath.min(440.34, 1.0);
      double double7 = FastMath.exp((-2877.531));
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      double double0 = FastMath.sinh(2017.79);
      double double1 = FastMath.asinh(0.031);
      double double2 = FastMath.ceil(0.03099503697929222);
      double double3 = FastMath.sin(325.01375809894);
      double double4 = FastMath.cosh(325.01375809894);
      double double5 = FastMath.min(0.03099503697929222, 1.0);
      double double6 = FastMath.signum(1.0);
      double double7 = FastMath.rint(1.0);
      float float0 = FastMath.abs((-1220.4218F));
      long long0 = FastMath.max((-1L), 0L);
      double double8 = FastMath.floor(2499.333917954963);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      double double0 = FastMath.random();
      double double1 = FastMath.acosh(0.0);
      double double2 = FastMath.cos(0.0);
      double double3 = FastMath.min(Double.NaN, 0.16666666666745392);
      double double4 = FastMath.sin(Double.NaN);
      double double5 = FastMath.floor(1.560070049119026);
      float float0 = FastMath.abs((-202.0F));
      double double6 = FastMath.toRadians(0.0);
      double double7 = FastMath.asin((-202.0F));
      long long0 = FastMath.round(0.16666666666745392);
      double double8 = FastMath.nextAfter(Double.NaN, (-2882.2009063365));
      double double9 = FastMath.pow((-610.9624479804564), 0L);
      float float1 = FastMath.max(0.0F, 0.0F);
      double double10 = FastMath.atan(Double.NaN);
      double double11 = FastMath.log10(Double.NaN);
      double double12 = FastMath.nextAfter(Double.NaN, 1181.7249363349458);
      double double13 = FastMath.asinh(3627.0355);
      double double14 = FastMath.random();
      double double15 = FastMath.signum(120.023388208);
      double double16 = FastMath.exp((-1.0));
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      double double0 = FastMath.max((-3348.107), (-3348.107));
      double double1 = FastMath.floor((-3348.107));
      double double2 = FastMath.sqrt((-13.0));
      double double3 = FastMath.rint((-3348.107));
      double double4 = FastMath.min(0.04168701738764507, (-3349.0));
      double double5 = FastMath.pow((-3589.396393362), 2.319235767811865);
      double double6 = FastMath.sqrt((-2306.32941));
      double double7 = FastMath.min(0.04168701738764507, (-3348.0));
      double double8 = FastMath.cosh(0.04168701738764507);
      double double9 = FastMath.atan((-2306.32941));
      double double10 = FastMath.tanh(0.04168701738764507);
      double double11 = FastMath.atanh(2364.662);
      float float0 = FastMath.abs((-487.9F));
      double double12 = FastMath.atanh(0.04166288615898461);
      double double13 = FastMath.ceil(Double.NaN);
      double double14 = FastMath.log10(0.4342944622039795);
      int int0 = FastMath.min(4, 4);
      double double15 = FastMath.pow(889.74393642, 548.074403315);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      double double0 = FastMath.atanh(0.0);
      double double1 = FastMath.toRadians((-1178.0885365));
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      double double0 = FastMath.atanh(14.101419947171719);
      int int0 = FastMath.max(2147483643, 0);
      double double1 = FastMath.signum(2147483643);
      long long0 = FastMath.max((-164L), (-164L));
      long long1 = FastMath.max(7910884519577875640L, 2303L);
      double double2 = FastMath.exp((-0.1428571423679182));
      double double3 = FastMath.ceil(7910884519577875640L);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      double double0 = FastMath.pow(363.22359674809, 5.261908426442558E-7);
      double double1 = FastMath.signum(363.22359674809);
      double double2 = FastMath.cosh(1.0000031019096227);
      double double3 = FastMath.tanh(1.0);
      int int0 = FastMath.min(10, 10);
      double double4 = FastMath.tanh((-2459.734));
      double double5 = FastMath.atanh(446.3004225);
      double double6 = FastMath.cos((-1.0));
      float float0 = FastMath.min(0.0F, (-1.0F));
      double double7 = FastMath.log1p((-598.67));
      double double8 = FastMath.nextAfter(5.261908426442558E-7, (-1.0F));
      double double9 = FastMath.cosh(Double.NaN);
      double double10 = FastMath.sinh(446.3004225);
      int int1 = FastMath.min(15, 2047);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      double double0 = FastMath.atan2((-1782.984876), (-1782.984876));
      double double1 = FastMath.log1p((-2115.25793753456));
      double double2 = FastMath.cos((-2.356194490192345));
      long long0 = FastMath.max(4503599627370495L, (-926L));
      double double3 = FastMath.tan(4503599627370495L);
      double double4 = FastMath.cbrt(1851.8339396308022);
      double double5 = FastMath.log10(1.366701124672226);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      long long0 = FastMath.max(3514L, 2819561105158720014L);
      double double0 = FastMath.asin(2819561105158720014L);
      double double1 = FastMath.signum((-943.1485));
      double double2 = FastMath.asinh(2819561105158720014L);
      long long1 = FastMath.max(2819561105158720014L, 1L);
      double double3 = FastMath.ulp((-1.0));
      double double4 = FastMath.sqrt((-153.26204));
      float float0 = FastMath.max((float) 1L, (float) 1L);
      double double5 = FastMath.log1p(2446.89);
      double double6 = FastMath.asin((-943.1485));
      double double7 = FastMath.tan(Double.NaN);
      double double8 = FastMath.min(1000.2381356817491, Double.NaN);
      double double9 = FastMath.tanh((-1.0));
      double double10 = FastMath.tan(Double.NaN);
      int int0 = FastMath.round((float) 3514L);
      double double11 = FastMath.cos(0.0);
      float float1 = FastMath.abs(0.0F);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      double double0 = FastMath.atan(1.2675934823758863E-8);
      double double1 = FastMath.random();
      double double2 = FastMath.min(0.0, 0.0);
      double double3 = FastMath.asinh((-1032.56524127947));
      int int0 = FastMath.min(709, 1069536554);
      float float0 = FastMath.abs((-454.94F));
      double double4 = FastMath.toRadians(199.388);
      double double5 = FastMath.sqrt(199.388);
      double double6 = FastMath.tanh((-7.632948925558235));
      int int1 = FastMath.min(1069536554, 709);
      float float1 = FastMath.abs((-3480.11F));
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      double double0 = FastMath.random();
      double double1 = FastMath.cosh((-381.7307));
      long long0 = FastMath.max((-1L), (-1L));
      double double2 = FastMath.cosh((-1L));
      double double3 = FastMath.ulp(3.0374321635284407E165);
      double double4 = FastMath.pow((-1L), (-4.469603409122654E-6));
      float float0 = FastMath.abs((-1.0F));
      double double5 = FastMath.tanh(0.8775825500488281);
      double double6 = FastMath.sqrt((-4.469603409122654E-6));
      double double7 = FastMath.atanh(0.19454771280288696);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      int int0 = FastMath.max(1610087935, (-1049));
      double double0 = FastMath.abs(2706.5010678800795);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      double double0 = FastMath.asinh(3.410491133089812E-7);
      double double1 = FastMath.ceil(3.410491133089812E-7);
      double double2 = FastMath.nextAfter(3.410491133089746E-7, 3.410491133089746E-7);
      double double3 = FastMath.floor(145.1);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      double double0 = FastMath.tan((-1647.7794));
      double double1 = FastMath.cbrt((-1647.7794));
      double double2 = FastMath.ulp((-11.811354100651112));
      double double3 = FastMath.floor(1.8358548930975745E-7);
      double double4 = FastMath.toDegrees(0.0);
      double double5 = FastMath.cos((-2384.0));
      double double6 = FastMath.nextUp(0.0);
      double double7 = FastMath.random();
      double double8 = FastMath.ceil((-18.43086276236962));
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      double double0 = FastMath.cbrt(2155.3370532);
      float float0 = FastMath.max(0.0F, 0.0F);
      double double1 = FastMath.asinh(2.563009154379015E-7);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      double double0 = FastMath.sin((-266.243702));
      double double1 = FastMath.min((-15.552634), (-266.243702));
      double double2 = FastMath.random();
      double double3 = FastMath.expm1(1.0);
      double double4 = FastMath.exp((-266.243702));
      double double5 = FastMath.random();
      double double6 = FastMath.log1p((-0.711530201034414));
      double double7 = FastMath.cosh(0.25534192122103627);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      double double0 = FastMath.log((-4283.91270854));
      double double1 = FastMath.toDegrees((-4283.91270854));
      int int0 = FastMath.min((-1), (-1));
      double double2 = FastMath.nextAfter(950.75586, (-0.2499999997677497));
      double double3 = FastMath.sin(950.7558599999999);
      double double4 = FastMath.toDegrees(0.2222222089767456);
      int int1 = FastMath.round(1.0F);
      double double5 = FastMath.min(0.9114167405464715, 3.0095696738628313);
      double double6 = FastMath.toRadians(0.9114167405464715);
      double double7 = FastMath.log10(0.9114167405464715);
      double double8 = FastMath.asin(0.9114167405464715);
      double double9 = FastMath.toRadians((-0.5));
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      double double0 = FastMath.acos((-1822.60837704));
      int int0 = FastMath.min((-3877), (-3877));
      double double1 = FastMath.pow(Double.NaN, (-3877));
      double double2 = FastMath.toDegrees((-3877));
      float float0 = FastMath.abs(0.0F);
      double double3 = FastMath.floor((-1131.6785816158215));
      double double4 = FastMath.rint((-1131.6785816158215));
      double double5 = FastMath.toDegrees(0.0F);
      double double6 = FastMath.max((-1822.60837704), (-1131.6785816158215));
      double double7 = FastMath.abs((-3349.53));
      double double8 = FastMath.floor(1.0);
      double double9 = FastMath.nextUp(0.0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      double double0 = FastMath.toDegrees((-558.71917004624));
      double double1 = FastMath.ulp(187.62);
      int int0 = FastMath.min((-1302), (-1302));
      int int1 = FastMath.round(1688.1F);
      double double2 = FastMath.expm1(0.008333333333333333);
      double double3 = FastMath.atanh(1705.277);
      double double4 = FastMath.atan2(1705.277, 1832.858107);
      double double5 = FastMath.sqrt(0.08713622391223907);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      double double0 = FastMath.max((-348.59134), (-2829.330715745));
      double double1 = FastMath.exp((-1085.40340891109));
      double double2 = FastMath.atanh((-348.59134));
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      int int0 = FastMath.min((-213), (-213));
      double double0 = FastMath.sin((-213));
      float float0 = FastMath.abs((float) (-213));
      int int1 = FastMath.min(709, 709);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      double double0 = FastMath.expm1((-1.0));
      double double1 = FastMath.atanh((-0.6321205588285577));
      double double2 = FastMath.random();
      double double3 = FastMath.tanh((-2072.815301395647));
      double double4 = FastMath.log1p((-0.7449400628223749));
      long long0 = FastMath.min((-2965L), (-1149L));
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      double double0 = FastMath.exp((-0.010714690733195933));
      double double1 = FastMath.sinh(14.101419947171719);
      double double2 = FastMath.ulp(665485.9246866925);
      double double3 = FastMath.atan(3.171357693770103);
      double double4 = FastMath.ceil(0.9893425070975945);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      int int0 = FastMath.min(349745789, 349745789);
      double double0 = FastMath.tanh(349745789);
      double double1 = FastMath.toRadians(349745789);
      double double2 = FastMath.tanh(1550.21);
      double double3 = FastMath.cos(6104215.563035366);
      float float0 = FastMath.abs((float) 349745789);
      double double4 = FastMath.cosh(1550.21);
      double double5 = FastMath.acos(349745789);
      double double6 = FastMath.tan(3030.0);
      long long0 = FastMath.min(1473L, 0L);
      double double7 = FastMath.toRadians((-5291.6));
      int int1 = FastMath.min(2075, 0);
      double double8 = FastMath.atan2(0.8746197071823826, (-859.974));
      double double9 = FastMath.max(0.8746197071823826, (double) 349745789);
      double double10 = FastMath.atanh((-2997.932421));
      double double11 = FastMath.random();
      double double12 = FastMath.cos(3.038148934955037E-7);
      double double13 = FastMath.atan(2.718281828459045);
      double double14 = FastMath.sinh((-2997.932421));
      double double15 = FastMath.tan(137.49763);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      double double0 = FastMath.atan2(3.0095696738628313, (-466.35584674026853));
      double double1 = FastMath.cos((-4384.66859111597));
      long long0 = FastMath.round((-1758.46695663));
      float float0 = FastMath.min(1927.9978F, 0.0F);
      long long1 = FastMath.round(3387.4325121);
      double double2 = FastMath.sqrt(0.0F);
      double double3 = FastMath.asin(0.0);
      float float1 = FastMath.abs((float) (-1758L));
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      long long0 = FastMath.abs((-1655L));
      double double0 = FastMath.rint(14.136832902969902);
      double double1 = FastMath.ulp(4.503599627370496E15);
      double double2 = FastMath.sinh((-1655L));
      double double3 = FastMath.tan((-1.0));
      double double4 = FastMath.ulp(Double.NEGATIVE_INFINITY);
      double double5 = FastMath.atan((-1.0));
      long long1 = FastMath.max(1655L, 1655L);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      double double0 = FastMath.atanh(1458.947);
      double double1 = FastMath.tan(4.0);
      double double2 = FastMath.sinh(1.625);
      double double3 = FastMath.nextUp(1.625);
      float float0 = FastMath.abs(0.0F);
      int int0 = FastMath.min(40, 40);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      double double0 = FastMath.ceil((-4130.1186008));
      int int0 = FastMath.abs(1774);
      double double1 = FastMath.signum((-4130.1186008));
      long long0 = FastMath.max(0L, (long) 1774);
      double double2 = FastMath.signum(0L);
      double double3 = FastMath.atanh((-1346.679725));
      double double4 = FastMath.sinh(Double.NaN);
      double double5 = FastMath.cosh(0.0);
      double double6 = FastMath.asin((-2105.858666));
      int int1 = FastMath.round((float) 1774);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      long long0 = FastMath.abs(2872L);
      double double0 = FastMath.acos(431.474435);
      double double1 = FastMath.exp(2872L);
      double double2 = FastMath.ceil(Double.NaN);
      float float0 = FastMath.max((float) 2872L, 2627.1F);
      double double3 = FastMath.random();
      double double4 = FastMath.cosh(0.0);
      double double5 = FastMath.asinh(0.7316888570785522);
      double double6 = FastMath.log(1098.25370047);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      double double0 = FastMath.sqrt(2358.052226744);
      double double1 = FastMath.acosh(1.633123935319537E16);
      double double2 = FastMath.ceil((-256.0));
      double double3 = FastMath.log10((-1115.4725847));
      double double4 = FastMath.tanh(1370.435870519);
      double double5 = FastMath.tanh(38.025003373828866);
      double double6 = FastMath.sin(1.633123935319537E16);
      double double7 = FastMath.ulp(48.55977992890825);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      int int0 = FastMath.abs((-2612));
      double double0 = FastMath.pow((-2612), (-851.4427147));
      long long0 = FastMath.round((double) 2612);
      double double1 = FastMath.atan2(2612L, (-1.0));
      float float0 = FastMath.max((float) (-2612), (float) (-2612));
      double double2 = FastMath.asin(1.0);
      double double3 = FastMath.log1p(1.5711791751682282);
      double double4 = FastMath.log(1.0);
      double double5 = FastMath.nextAfter((-311.0), 1.0);
      double double6 = FastMath.sqrt(1.5711791751682282);
      double double7 = FastMath.min(9.9201118619061, 1.5707963267948966);
      double double8 = FastMath.sinh((-1.0));
      double double9 = FastMath.cos((-311.0));
      double double10 = FastMath.random();
      double double11 = FastMath.max(1.5707963267948966, (-4491.46289716));
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      double double0 = FastMath.expm1(3639.1991387336134);
      double double1 = FastMath.min(3639.1991387336134, Double.POSITIVE_INFINITY);
      long long0 = FastMath.min(0L, 0L);
      int int0 = FastMath.max(706, 266);
      double double2 = FastMath.sinh(3639.1991387336134);
      double double3 = FastMath.max(0.3153223395347595, (double) 266);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      double double0 = FastMath.acos(0.49999999999999994);
      double double1 = FastMath.max((-1.0), 1.0471975511965979);
      int int0 = FastMath.abs((-739));
      double double2 = FastMath.cos(1.0471975511965979);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      int int0 = FastMath.min(10, 0);
      double double0 = FastMath.atan2((-3610.925401), (-3610.925401));
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      double double0 = FastMath.acos((-8.0E298));
      double double1 = FastMath.log((-63.27686619875));
      double double2 = FastMath.signum(1.3526894423597173E-6);
      double double3 = FastMath.tan((-2823.982789));
      int int0 = FastMath.round((-1.0F));
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      double double0 = FastMath.cos((-354.85144));
      double double1 = FastMath.tanh(561.039513068742);
      float float0 = FastMath.abs(2731.58F);
      long long0 = FastMath.min(0L, 0L);
      double double2 = FastMath.max((-1.0), (-1.0));
      double double3 = FastMath.max(2662.56383941, 0.6409968137741089);
      double double4 = FastMath.ulp(0L);
      double double5 = FastMath.cbrt((-1715.966));
      long long1 = FastMath.max(0L, 0L);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      double double0 = FastMath.sinh((-3011.69));
      float float0 = FastMath.min((-1.0F), 0.0F);
      double double1 = FastMath.abs((-765.0003372097136));
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      double double0 = FastMath.asin(0.19454771280288696);
      double double1 = FastMath.atanh(0.19579633170256697);
      double double2 = FastMath.cbrt(2243.4016);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      double double0 = FastMath.tan(0.0);
      double double1 = FastMath.cbrt(0.0);
      int int0 = FastMath.abs(18);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      int int0 = FastMath.round((-1.0F));
      double double0 = FastMath.cos((-1.0F));
      double double1 = FastMath.rint((-1.0F));
      double double2 = FastMath.acosh((-1));
      double double3 = FastMath.pow(0.5403023058681398, (-1.0F));
      double double4 = FastMath.floor(1254.313402373);
      double double5 = FastMath.floor(1.8508157176809255);
      double double6 = FastMath.signum(6.951502372232782E-7);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      long long0 = FastMath.max((-1238L), (-1238L));
      double double0 = FastMath.asinh((-1220.0));
      float float0 = FastMath.max((-2322.973F), (float) (-1238L));
      double double1 = FastMath.expm1((-1238L));
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      double double0 = FastMath.log(3701.152143362143);
      double double1 = FastMath.atan(3102.913907449);
      double double2 = FastMath.cbrt(3701.152143362143);
      double double3 = FastMath.toRadians((-8.0E298));
      double double4 = FastMath.sqrt(3102.913907449);
      double double5 = FastMath.tanh(3.038148934955037E-7);
      double double6 = FastMath.cosh((-429.781));
      double double7 = FastMath.tan(1558.871361742);
      double double8 = FastMath.atan((-4.469603409122654E-6));
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      double double0 = FastMath.tanh(5.041915256481364);
      double double1 = FastMath.rint(0.9999165051062541);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      int int0 = FastMath.round(0.0F);
      double double0 = FastMath.exp(0);
      double double1 = FastMath.signum(0);
      double double2 = FastMath.sinh(1.0);
      long long0 = FastMath.abs(0L);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      long long0 = FastMath.round((-758.8392074));
      double double0 = FastMath.log1p((-229.436016));
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      double double0 = FastMath.signum(48.0);
      double double1 = FastMath.tan(48.0);
      double double2 = FastMath.atan2(5061.93, 1.2001272431162864);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      double double0 = FastMath.expm1(0.7316888570785522);
      double double1 = FastMath.nextUp(1.0785880832257366);
      int int0 = FastMath.abs((-1));
      double double2 = FastMath.exp(0.7316888570785522);
      double double3 = FastMath.floor(1.0785880832257368);
      double double4 = FastMath.exp(5.669184079525E-24);
      double double5 = FastMath.exp(0.7316888570785522);
      double double6 = FastMath.rint(0.7316888570785522);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      double double0 = FastMath.rint(2514.54748521);
      double double1 = FastMath.log(0.6409968137741089);
      double double2 = FastMath.pow(2515.0, 2515.0);
      double double3 = FastMath.rint((-484.52464903));
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      double double0 = FastMath.toDegrees(1000.0115395219);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      double double0 = FastMath.toRadians((-277.36110980302715));
      double double1 = FastMath.acos(1621.509504);
      double double2 = FastMath.pow(Double.NaN, 0.25534192122103627);
      double double3 = FastMath.floor(1621.509504);
      double double4 = FastMath.abs((-684.706008684503));
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      double double0 = FastMath.nextUp((-2490.16));
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      double double0 = FastMath.ceil((-4130.1186008));
      int int0 = FastMath.abs(1774);
      double double1 = FastMath.exp((-1346.679725));
      long long0 = FastMath.max(0L, (long) 1774);
      double double2 = FastMath.signum(0L);
      double double3 = FastMath.atanh((-1346.679725));
      double double4 = FastMath.sinh(Double.NaN);
      double double5 = FastMath.cosh(0.0);
      double double6 = FastMath.asin((-2105.858666));
      int int1 = FastMath.round((float) 1774);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      double double0 = FastMath.pow(1030.8, 1030.8);
      double double1 = FastMath.pow(1708.23596877, (-18.457971236441537));
      double double2 = FastMath.ceil((-211.26214780219));
      double double3 = FastMath.cosh((-211.26214780219));
      float float0 = FastMath.max(81.0F, 81.0F);
      double double4 = FastMath.acos(1.8508157176809257);
      double double5 = FastMath.atan(0.5463024898437905);
      double double6 = FastMath.ceil(1708.23596877);
      float float1 = FastMath.abs(81.0F);
      int int0 = FastMath.abs(1069536554);
      double double7 = FastMath.tan(2.8116096799401065E91);
      double double8 = FastMath.max((-1547.5), 0.083422690685907);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      double double0 = FastMath.log10((-1617.0));
      long long0 = FastMath.abs(0L);
      double double1 = FastMath.nextAfter(0L, 1.1921056801463227E-8);
      int int0 = FastMath.min((-1349), 13);
      double double2 = FastMath.acos(0.0);
      double double3 = FastMath.atanh(0.5000000000042687);
      double double4 = FastMath.sin(0L);
      double double5 = FastMath.asinh(0.0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      long long0 = FastMath.max(0L, 0L);
      double double0 = FastMath.sinh(2034.595132914332);
      float float0 = FastMath.max((float) 0L, (float) 0L);
      double double1 = FastMath.rint(1226.9389259);
      double double2 = FastMath.ceil(3.0095696738628313);
      double double3 = FastMath.expm1(2034.595132914332);
      double double4 = FastMath.acosh((-296.5));
      long long1 = FastMath.abs(0L);
      double double5 = FastMath.ulp(0.19454771280288696);
      long long2 = FastMath.abs(0L);
      double double6 = FastMath.cosh(0L);
      int int0 = FastMath.min((-1942), (-1942));
      float float1 = FastMath.max((float) (-1942), (float) 0L);
      double double7 = FastMath.tanh(3.0095696738628313);
      float float2 = FastMath.abs((-619.923F));
      double double8 = FastMath.rint(1226.9389259);
      double double9 = FastMath.expm1(1.366701124672226);
      int int1 = FastMath.min((-1942), 810);
      double double10 = FastMath.acos(4341.83533);
      double double11 = FastMath.toRadians(619.923F);
      float float3 = FastMath.abs((-4144.4795F));
      double double12 = FastMath.tanh(10.819696998646572);
      long long3 = FastMath.min(2066L, 0L);
      double double13 = FastMath.atanh(4.503599627370496E15);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      double double0 = FastMath.toRadians((-3877.27039896));
      int int0 = FastMath.max((-2147483647), 750);
      double double1 = FastMath.abs((-3877.27039896));
      double double2 = FastMath.log(1798.1967696379);
      double double3 = FastMath.asin(0.75);
      double double4 = FastMath.toRadians(3877.27039896);
      double double5 = FastMath.asin(2.639144044101463E-7);
      int int1 = FastMath.abs(20);
      double double6 = FastMath.toRadians(2.639144044101463E-7);
      double double7 = FastMath.atan2(3321.9455611393, (-2.356194490192345));
      double double8 = FastMath.sinh(0.848062078981481);
      double double9 = FastMath.tanh(67.67113445196613);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      float float0 = FastMath.abs(1.0F);
      double double0 = FastMath.atan(1.0F);
      double double1 = FastMath.floor(0.7853981633974483);
      double double2 = FastMath.cbrt(0.625);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      double double0 = FastMath.tan(1.5707963267948966);
      double double1 = FastMath.acosh(874.206431);
      double double2 = FastMath.nextAfter(1.5707963267948966, 0.0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      int int0 = FastMath.abs(2129735849);
      double double0 = FastMath.signum(2129735849);
      int int1 = FastMath.abs(2129735849);
      int int2 = FastMath.round((float) 2129735849);
      long long0 = FastMath.min((long) 2129735849, (long) 2129735849);
      double double1 = FastMath.log10(2129735849L);
      double double2 = FastMath.sqrt(1.0);
      double double3 = FastMath.abs((-508.8));
      int int3 = FastMath.min(2129735849, 1937);
      double double4 = FastMath.ceil(1.0);
      double double5 = FastMath.atan2((-3795.5055824), 1937);
      double double6 = FastMath.acosh(1937);
      double double7 = FastMath.log1p(1.0);
      double double8 = FastMath.ceil(2129735849);
      double double9 = FastMath.cos(508.8);
      double double10 = FastMath.asin(1.0);
      double double11 = FastMath.log1p(0.990491742446878);
      double double12 = FastMath.atan((-3795.5055824));
      double double13 = FastMath.toRadians(305.54085386);
      long long1 = FastMath.max(0L, 0L);
      double double14 = FastMath.acosh((-1.5705328572899384));
      double double15 = FastMath.cos(2129735849);
      int int4 = FastMath.abs(141871392);
      long long2 = FastMath.abs((long) 141871392);
      double double16 = FastMath.acosh(1.5707963267948966);
      double double17 = FastMath.log1p(2.384185791015625E-7);
      double double18 = FastMath.max(728.47492253683, 2.129735849E9);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      double double0 = FastMath.pow((-267.0453566354), 1.2246467991473532E-16);
      double double1 = FastMath.pow(3.001117512531765E-7, 1.2246467991473532E-16);
      double double2 = FastMath.asin(Double.NaN);
      int int0 = FastMath.max(877, 1);
      float float0 = FastMath.min((float) 877, 0.0F);
      double double3 = FastMath.min(14.136832902969902, Double.NaN);
      double double4 = FastMath.acosh(877);
      double double5 = FastMath.acosh(Double.NaN);
      double double6 = FastMath.sin(1498.14184);
      double double7 = FastMath.cbrt(0.9999999999999981);
      double double8 = FastMath.rint(Double.NaN);
      double double9 = FastMath.log(1083.3909);
      double double10 = FastMath.cbrt(1498.14184);
      double double11 = FastMath.cosh(621.22354287);
      double double12 = FastMath.random();
      double double13 = FastMath.ulp(0.0F);
      double double14 = FastMath.expm1(3.111191195883708E269);
      long long0 = FastMath.min((-5038L), (-5038L));
      double double15 = FastMath.max(5.0, 0.07073719799518585);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      double double0 = FastMath.asinh(14.136832902969902);
      double double1 = FastMath.rint(3.3431794316985193);
      double double2 = FastMath.atan(0.07073719799518585);
      double double3 = FastMath.asinh(1.2331016983979697);
      double double4 = FastMath.exp(14.136832902969902);
      long long0 = FastMath.max(1L, (-1715L));
      double double5 = FastMath.cos(3.038148934955037E-7);
      long long1 = FastMath.max(1L, 0L);
      double double6 = FastMath.ulp(1.2331016983979697);
      double double7 = FastMath.nextUp((-18.43086276236962));
      double double8 = FastMath.cos(14.136832902969902);
      double double9 = FastMath.max(1.2331016983979697, (double) 0L);
      double double10 = FastMath.log1p(3.001117512531765E-7);
      double double11 = FastMath.ulp(5.140127377170679);
      double double12 = FastMath.tanh(1L);
      float float0 = FastMath.abs(0.0F);
      double double13 = FastMath.atanh((-917.4572859298183));
      double double14 = FastMath.log(1.0);
      double double15 = FastMath.floor((-18.43086276236962));
      double double16 = FastMath.abs((double) 0L);
      double double17 = FastMath.acos(1.7029898543501842E-8);
  }
}
