/*
 * This file was automatically generated by EvoSuite
 * Mon Mar 30 02:39:04 GMT 2020
 */

package org.apache.commons.math.analysis.solvers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.analysis.UnivariateRealFunction;
import org.apache.commons.math.analysis.function.Asin;
import org.apache.commons.math.analysis.function.Gaussian;
import org.apache.commons.math.analysis.function.Logistic;
import org.apache.commons.math.analysis.function.Minus;
import org.apache.commons.math.analysis.function.Power;
import org.apache.commons.math.analysis.function.Rint;
import org.apache.commons.math.analysis.function.Sigmoid;
import org.apache.commons.math.analysis.function.Sinh;
import org.apache.commons.math.analysis.function.Tan;
import org.apache.commons.math.analysis.polynomials.PolynomialFunction;
import org.apache.commons.math.analysis.solvers.AllowedSolution;
import org.apache.commons.math.analysis.solvers.IllinoisSolver;
import org.apache.commons.math.analysis.solvers.PegasusSolver;
import org.apache.commons.math.analysis.solvers.RegulaFalsiSolver;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BaseSecantSolver_ESTest extends BaseSecantSolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver((-2609.23767), (-2609.23767), (-235.4));
      Sigmoid sigmoid0 = new Sigmoid();
      AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
      double double0 = regulaFalsiSolver0.solve(2132180619, (UnivariateRealFunction) sigmoid0, (-3874.214690013), (-360.326805214), allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver((-1.0));
      Minus minus0 = new Minus();
      AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
      double double0 = regulaFalsiSolver0.solve(32, (UnivariateRealFunction) minus0, 0.0, 3113.9194012767, (-4093.750917857783), allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver((-287.9804816486), 431.9, (-287.9804816486));
      Logistic logistic0 = new Logistic(74, (-765.0084559718), 2282.78, (-1241.264601), 754.6440064575, 7.00128303271849);
      UnivariateRealFunction univariateRealFunction0 = logistic0.derivative();
      AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
      double double0 = illinoisSolver0.solve(74, univariateRealFunction0, 754.6440064575, 0.0, (-765.0084559718), allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PegasusSolver pegasusSolver0 = new PegasusSolver();
      Gaussian gaussian0 = new Gaussian();
      AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
      double double0 = pegasusSolver0.solve(1879048427, (UnivariateRealFunction) gaussian0, (-2424.0), 676.9716670628, 1.5574077246549023, allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver();
      Gaussian gaussian0 = new Gaussian();
      double double0 = illinoisSolver0.solve(12, (UnivariateRealFunction) gaussian0, 516.8128963788, (double) 12, 516.8128963788);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1.0, 1.0, 0.0);
      Asin asin0 = new Asin();
      regulaFalsiSolver0.setup(4815, asin0, 0.0, 1.0, 0.0);
      double double0 = regulaFalsiSolver0.doSolve();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(0.0, 0.0);
      Logistic logistic0 = new Logistic(0.0, 0.0, (-203.58381148), 12, 723.9973, 12);
      double double0 = illinoisSolver0.solve(12, (UnivariateRealFunction) logistic0, 0.0, (-203.58381148), (-1.0));
      double double1 = illinoisSolver0.doSolve();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PegasusSolver pegasusSolver0 = new PegasusSolver();
      Rint rint0 = new Rint();
      AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
      // Undeclared exception!
      try { 
        pegasusSolver0.solve(2097, (UnivariateRealFunction) rint0, 35.0, (-1588.886775392), (-352.32162768753), allowedSolution0);
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [35, -1,588.887]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PegasusSolver pegasusSolver0 = new PegasusSolver();
      AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
      // Undeclared exception!
      try { 
        pegasusSolver0.solve(1363, (UnivariateRealFunction) null, (double) 1363, 0.0, 3243.57, allowedSolution0);
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PegasusSolver pegasusSolver0 = new PegasusSolver(0.0, 0.0, 0.0);
      Logistic logistic0 = new Logistic(0.0, 8388607, 1.0E-6, 0.0, 1.0E-6, 8388607);
      // Undeclared exception!
      try { 
        pegasusSolver0.solve((-2653), (UnivariateRealFunction) logistic0, 0.0, 0.0, (double) (-2653));
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (-2,653) exceeded: evaluations
         //
         verifyException("org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(0.0, 0.0);
      // Undeclared exception!
      try { 
        regulaFalsiSolver0.solve((-1865), (UnivariateRealFunction) null, 0.0, 1.570796251296997, (double) (-1865));
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1802.62108255293);
      // Undeclared exception!
      try { 
        regulaFalsiSolver0.doSolve();
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (0) exceeded: evaluations
         //
         verifyException("org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(15.99939349685787, 15.99939349685787);
      Sigmoid sigmoid0 = new Sigmoid(15.99939349685787, 1.0E-6);
      regulaFalsiSolver0.setup(2132180619, sigmoid0, 2132180619, 1.0E-6, (-1600.83430893135));
      // Undeclared exception!
      try { 
        regulaFalsiSolver0.doSolve();
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [2,132,180,619, 0]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(53.423737656022034, 53.423737656022034, 399.6852762161);
      Asin asin0 = new Asin();
      regulaFalsiSolver0.setup(1892284293, asin0, (-843.99850541), 0.7853981633974483, 399.6852762161);
      // Undeclared exception!
      try { 
        regulaFalsiSolver0.doSolve();
      } catch(IllegalArgumentException e) {
         //
         // function values at endpoints do not have different signs, endpoints: [-843.999, 0.785], values: [\uFFFD, 0.903]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1802.62108255293, 1802.62108255293, 1802.62108255293);
      Tan tan0 = new Tan();
      AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
      double double0 = regulaFalsiSolver0.solve(4, (UnivariateRealFunction) tan0, (-0.04630364567997111), 53.4275936775, allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1802.6210826, 1802.6210826, 1802.6210826);
      Tan tan0 = new Tan();
      AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
      double double0 = regulaFalsiSolver0.solve(4, (UnivariateRealFunction) tan0, 2.5850362855494335, 53.42759, allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
      Tan tan0 = new Tan();
      double double0 = regulaFalsiSolver0.solve(214, (UnivariateRealFunction) tan0, (-0.5), 1.0E-6);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1802.62108255293, 1802.62108255293, 1802.62108255293);
      Tan tan0 = new Tan();
      AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
      double double0 = regulaFalsiSolver0.solve(4, (UnivariateRealFunction) tan0, 11.0, 53.4275936775, allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PegasusSolver pegasusSolver0 = new PegasusSolver(1920749.375615925, 715.226213565);
      Sinh sinh0 = new Sinh();
      AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
      // Undeclared exception!
      try { 
        pegasusSolver0.solve(5, (UnivariateRealFunction) sinh0, (-1.4043405190315193E10), 4016.27, 1920749.375615925, allowedSolution0);
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (5) exceeded: evaluations
         //
         verifyException("org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver();
      Logistic logistic0 = new Logistic(1.0, (-6062.589), 1.0, (-1815.20538), 1.0E-6, 1.0);
      double double0 = illinoisSolver0.solve(1416, (UnivariateRealFunction) logistic0, (-6062.589), 3278.4585);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver((-1.0));
      Minus minus0 = new Minus();
      AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
      double double0 = regulaFalsiSolver0.solve(32, (UnivariateRealFunction) minus0, (-4093.750917857783), (double) 32, allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
      Tan tan0 = new Tan();
      double double0 = regulaFalsiSolver0.solve(276, (UnivariateRealFunction) tan0, (double) 276, 0.0, (double) 276);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(5.883848216339189E-5, 5.883848216339189E-5, 5.883848216339189E-5);
      Power power0 = new Power((-4814.08332172));
      double double0 = regulaFalsiSolver0.solve(4, (UnivariateRealFunction) power0, (double) 4, 616.4836653075757);
      double double1 = regulaFalsiSolver0.doSolve();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
      Tan tan0 = new Tan();
      AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
      // Undeclared exception!
      try { 
        regulaFalsiSolver0.solve(276, (UnivariateRealFunction) tan0, 11.0, 53.4275936775, allowedSolution0);
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (276) exceeded: evaluations
         //
         verifyException("org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(0.0, 0.0, 0.0);
      Sigmoid sigmoid0 = new Sigmoid();
      // Undeclared exception!
      try { 
        regulaFalsiSolver0.solve(17, (UnivariateRealFunction) sigmoid0, 0.5, 0.5, (-1587.0));
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [0.5, 0.5]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      PegasusSolver pegasusSolver0 = new PegasusSolver(0.0, (-2019.4909613825052));
      Minus minus0 = new Minus();
      AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
      // Undeclared exception!
      try { 
        pegasusSolver0.solve(3180, (UnivariateRealFunction) minus0, 1600.83430893135, 1600.83430893135, allowedSolution0);
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [1,600.834, 1,600.834]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(0.0);
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 7;
      PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
      AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
      // Undeclared exception!
      try { 
        illinoisSolver0.solve(7, (UnivariateRealFunction) polynomialFunction0, 1.0E-6, 7.0, allowedSolution0);
      } catch(IllegalArgumentException e) {
         //
         // function values at endpoints do not have different signs, endpoints: [0, 7], values: [7, 7]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }
}
