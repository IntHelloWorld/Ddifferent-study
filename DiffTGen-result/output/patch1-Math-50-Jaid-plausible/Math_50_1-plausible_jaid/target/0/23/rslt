* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.math.analysis.solvers.BaseSecantSolver
* Starting client
* Connecting to master process on port 15546
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/patch1-Math-50-Jaid-plausible/Math_50_1-plausible_jaid/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math.analysis.solvers.BaseSecantSolver
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 72
  - Branch 74
  - Exception 0
  - MutationFactory 107
  - Output 12
  - Method 4
  - MethodNoException 4
  - CBranchFitnessFactory 74
* Using seed 1585535809187
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%][Progress:=>                            5%] [Cov:>                                  1%][Progress:=>                            5%] [Cov:>                                  2%][Progress:=>                            5%] [Cov:====>                              14%][Progress:=>                            5%] [Cov:=====>                             16%][Progress:=>                            5%] [Cov:=======>                           22%][Progress:=>                            5%] [Cov:========>                          23%][Progress:=>                            6%] [Cov:=====>                             16%][Progress:=>                            6%] [Cov:======>                            19%][Progress:=>                            6%] [Cov:========>                          25%][Progress:=>                            6%] [Cov:=========>                         26%][Progress:=>                            6%] [Cov:===========>                       32%][Progress:=>                            6%] [Cov:============>                      37%][Progress:=>                            6%] [Cov:=============>                     38%][Progress:==>                           8%] [Cov:=====>                             17%][Progress:==>                           8%] [Cov:=======>                           21%][Progress:==>                           8%] [Cov:=======>                           22%][Progress:==>                           8%] [Cov:===========>                       33%][Progress:==>                           8%] [Cov:============>                      35%][Progress:==>                           8%] [Cov:============>                      36%][Progress:===>                          13%] [Cov:=>                                 3%][Progress:===>                          13%] [Cov:=>                                 4%][Progress:===>                          13%] [Cov:=====>                             16%][Progress:===>                          13%] [Cov:======>                            19%][Progress:===>                          13%] [Cov:========>                          25%][Progress:====>                         15%] [Cov:=>                                 4%][Progress:====>                         15%] [Cov:=>                                 5%][Progress:====>                         15%] [Cov:======>                            18%][Progress:====>                         15%] [Cov:=======>                           22%][Progress:====>                         15%] [Cov:========>                          24%][Progress:====>                         15%] [Cov:============>                      35%][Progress:====>                         15%] [Cov:==============>                    40%][Progress:====>                         15%] [Cov:==============>                    41%][Progress:====>                         16%] [Cov:==>                                7%][Progress:====>                         16%] [Cov:===>                               10%][Progress:====>                         16%] [Cov:========>                          23%][Progress:====>                         16%] [Cov:===========>                       33%][Progress:====>                         16%] [Cov:=============>                     39%][Progress:====>                         16%] [Cov:==============>                    41%][Progress:====>                         16%] [Cov:===============>                   44%][Progress:====>                         16%] [Cov:===============>                   45%][Progress:====>                         16%] [Cov:================>                  48%][Progress:====>                         16%] [Cov:=================>                 50%][Progress:======>                       20%] [Cov:==>                                7%][Progress:======>                       20%] [Cov:===>                               11%][Progress:======>                       20%] [Cov:========>                          24%][Progress:======>                       20%] [Cov:============>                      35%][Progress:======>                       20%] [Cov:===============>                   43%][Progress:======>                       20%] [Cov:================>                  46%][Progress:======>                       21%] [Cov:===========>                       32%][Progress:======>                       21%] [Cov:===========>                       33%][Progress:======>                       21%] [Cov:================>                  46%][Progress:======>                       23%] [Cov:==========>                        29%][Progress:======>                       23%] [Cov:=============>                     38%][Progress:======>                       23%] [Cov:==============>                    42%][Progress:======>                       23%] [Cov:===============>                   43%][Progress:======>                       23%] [Cov:===============>                   45%][Progress:======>                       23%] [Cov:================>                  46%][Progress:======>                       23%] [Cov:==================>                52%][Progress:=======>                      25%] [Cov:===============>                   43%][Progress:=======>                      25%] [Cov:===============>                   45%][Progress:=======>                      25%] [Cov:================>                  46%][Progress:=======>                      25%] [Cov:=================>                 51%][Progress:=======>                      25%] [Cov:==================>                53%][Progress:=======>                      26%] [Cov:=========>                         26%][Progress:=======>                      26%] [Cov:===========>                       33%][Progress:=======>                      26%] [Cov:========================>          71%][Progress:========>                     28%] [Cov:========================>          69%][Progress:========>                     28%] [Cov:========================>          70%][Progress:=========>                    33%] [Cov:========================>          71%][Progress:==========>                   35%] [Cov:========================>          69%][Progress:==========>                   35%] [Cov:========================>          71%][Progress:==========>                   35%] [Cov:========================>          71%][Progress:===========>                  38%] [Cov:========================>          70%][Progress:===========>                  38%] [Cov:========================>          71%][Progress:============>                 40%] [Cov:========================>          69%][Progress:============>                 40%] [Cov:========================>          70%][Progress:============>                 40%] [Cov:========================>          71%][Progress:============>                 40%] [Cov:=========================>         72%][Progress:============>                 41%] [Cov:========================>          69%][Progress:============>                 41%] [Cov:=========================>         72%][Progress:=============>                46%] [Cov:=========================>         72%][Progress:=============>                46%] [Cov:=========================>         72%][Progress:==============>               48%] [Cov:=========================>         72%][Progress:===============>              53%] [Cov:=========================>         72%][Progress:================>             55%] [Cov:=========================>         72%][Progress:================>             55%] [Cov:=========================>         73%][Progress:================>             55%] [Cov:=========================>         74%][Progress:================>             55%] [Cov:==========================>        75%][Progress:================>             55%] [Cov:==========================>        77%][Progress:==================>           60%] [Cov:==========================>        76%][Progress:==================>           61%] [Cov:==========================>        76%][Progress:===================>          66%] [Cov:==========================>        76%][Progress:===================>          66%] [Cov:==========================>        77%][Progress:====================>         68%] [Cov:==========================>        76%][Progress:====================>         68%] [Cov:==========================>        77%][Progress:====================>         68%] [Cov:==========================>        77%][Progress:=====================>        73%] [Cov:==========================>        77%][Progress:=====================>        73%] [Cov:===========================>       78%][Progress:======================>       75%] [Cov:==========================>        76%][Progress:======================>       75%] [Cov:==========================>        77%][Progress:======================>       76%] [Cov:==========================>        76%][Progress:=======================>      78%] [Cov:==========================>        76%][Progress:========================>     81%] [Cov:==========================>        76%][Progress:========================>     81%] [Cov:==========================>        77%][Progress:========================>     81%] [Cov:===========================>       78%][Progress:=========================>    86%] [Cov:==========================>        77%][Progress:===========================>  91%] [Cov:===========================>       78%][Progress:===========================>  93%] [Cov:==========================>        77%][Progress:===========================>  93%] [Cov:===========================>       78%][Progress:===========================>  93%] [Cov:===========================>       78%][Progress:============================> 95%] [Cov:===========================>       78%][Progress:==============================100%] [Cov:==========================>        77%][Progress:==============================100%] [Cov:===========================>       78%][Progress:==============================100%] [Cov:===========================>       78%][Progress:==============================100%] [Cov:===========================>       78%][Progress:==============================100%] [Cov:============================>      82%]
* Search finished after 62s and 10 generations, 4151 statements, best individual has fitness: 154.18626002749227
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 72%
* Total number of goals: 72
* Number of covered goals: 52
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 54%
* Total number of goals: 74
* Number of covered goals: 40
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 10
* Number of covered goals: 10
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 99%
* Total number of goals: 107
* Number of covered goals: 106
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 83%
* Total number of goals: 12
* Number of covered goals: 10
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 54%
* Total number of goals: 74
* Number of covered goals: 40
* Generated 22 tests with total length 78
* Resulting test suite's coverage: 83% (average coverage for all fitness functions)
* Compiling and checking tests
* Writing JUnit test case 'BaseSecantSolver_ESTest' to evosuite-tests
* Done!

* Computation finished
