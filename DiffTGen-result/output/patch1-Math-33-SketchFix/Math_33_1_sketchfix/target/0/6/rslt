* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.math3.optimization.linear.SimplexTableau
* Starting client
* Connecting to master process on port 10365
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/patch1-Math-33-SketchFix/Math_33_1_sketchfix/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math3.optimization.linear.SimplexTableau
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 189
  - Branch 154
  - Exception 0
  - MutationFactory 545
  - Output 72
  - Method 27
  - MethodNoException 27
  - CBranchFitnessFactory 154
* Using seed 1585473579564
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%][Progress:====>                         15%] [Cov:=>                                 4%][Progress:====>                         16%] [Cov:==>                                6%][Progress:====>                         16%] [Cov:======>                            19%][Progress:====>                         16%] [Cov:========>                          23%][Progress:====>                         16%] [Cov:=========>                         26%][Progress:====>                         16%] [Cov:==========>                        29%][Progress:====>                         16%] [Cov:==========>                        30%][Progress:=====>                        18%] [Cov:=>                                 4%][Progress:=====>                        18%] [Cov:==>                                6%][Progress:=====>                        18%] [Cov:======>                            18%][Progress:=====>                        18%] [Cov:=======>                           21%][Progress:=====>                        18%] [Cov:=======>                           22%][Progress:=====>                        18%] [Cov:========>                          23%][Progress:=====>                        18%] [Cov:========>                          25%][Progress:=====>                        18%] [Cov:=========>                         26%][Progress:======>                       20%] [Cov:==>                                6%][Progress:======>                       20%] [Cov:===>                               10%][Progress:======>                       20%] [Cov:========>                          23%][Progress:======>                       20%] [Cov:==========>                        29%][Progress:======>                       20%] [Cov:==========>                        30%][Progress:======>                       20%] [Cov:===========>                       33%][Progress:======>                       20%] [Cov:============>                      35%][Progress:======>                       20%] [Cov:============>                      37%][Progress:======>                       21%] [Cov:=======>                           22%][Progress:======>                       21%] [Cov:========>                          25%][Progress:======>                       21%] [Cov:=========>                         26%][Progress:======>                       21%] [Cov:=========>                         27%][Progress:======>                       23%] [Cov:=>                                 4%][Progress:======>                       23%] [Cov:==>                                8%][Progress:======>                       23%] [Cov:=======>                           21%][Progress:======>                       23%] [Cov:=========>                         26%][Progress:======>                       23%] [Cov:=========>                         27%][Progress:======>                       23%] [Cov:===========>                       32%][Progress:======>                       23%] [Cov:============>                      36%][Progress:======>                       23%] [Cov:============>                      37%][Progress:=========>                    33%] [Cov:>                                  1%][Progress:==========>                   36%] [Cov:>                                  1%][Progress:==========>                   36%] [Cov:====>                              13%][Progress:==========>                   36%] [Cov:======>                            19%][Progress:==========>                   36%] [Cov:=======>                           22%][Progress:==========>                   36%] [Cov:========>                          23%][Progress:==========>                   36%] [Cov:========>                          24%][Progress:===========>                  38%] [Cov:=>                                 4%][Progress:===========>                  38%] [Cov:==>                                6%][Progress:===========>                  38%] [Cov:======>                            19%][Progress:===========>                  38%] [Cov:=======>                           22%][Progress:===========>                  38%] [Cov:========>                          23%][Progress:===========>                  38%] [Cov:=========>                         26%][Progress:===========>                  38%] [Cov:=========>                         28%][Progress:===========>                  38%] [Cov:==========>                        29%][Progress:=============>                45%] [Cov:=>                                 4%][Progress:=============>                46%] [Cov:==>                                8%][Progress:=============>                46%] [Cov:=======>                           20%][Progress:=============>                46%] [Cov:========>                          25%][Progress:=============>                46%] [Cov:=========>                         28%][Progress:=============>                46%] [Cov:==========>                        30%][Progress:=============>                46%] [Cov:==========>                        31%][Progress:========================>     80%] [Cov:=>                                 5%][Progress:========================>     80%] [Cov:===>                               9%][Progress:========================>     80%] [Cov:=======>                           22%][Progress:========================>     80%] [Cov:=========>                         26%][Progress:===========================>  93%] [Cov:=========>                         26%][Progress:============================> 96%] [Cov:=========>                         28%][Progress:============================> 96%] [Cov:==========>                        30%][Progress:============================> 96%] [Cov:==========>                        31%][Progress:=============================>98%] [Cov:========>                          24%][Progress:=============================>98%] [Cov:========>                          25%][Progress:=============================>98%] [Cov:=========>                         28%][Progress:=============================>98%] [Cov:==========>                        30%][Progress:=============================>98%] [Cov:==========>                        31%][Progress:=============================>98%] [Cov:===========>                       34%][Progress:=============================>98%] [Cov:============>                      36%][Progress:==============================100%] [Cov:=>                                 5%][Progress:==============================100%] [Cov:==>                                8%][Progress:==============================100%] [Cov:=======>                           20%][Progress:==============================100%] [Cov:========>                          25%][Progress:==============================100%] [Cov:==========>                        29%][Progress:==============================100%] [Cov:===========>                       34%][Progress:==============================100%] [Cov:============>                      35%][Progress:==============================100%] [Cov:============>                      37%][Progress:==============================100%] [Cov:========================>          69%]
* Search finished after 66s and 0 generations, 1683 statements, best individual has fitness: 452.4637254897302
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 74%
* Total number of goals: 189
* Number of covered goals: 140
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 64%
* Total number of goals: 154
* Number of covered goals: 98
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 9
* Number of covered goals: 9
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 74%
* Total number of goals: 545
* Number of covered goals: 401
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 26%
* Total number of goals: 72
* Number of covered goals: 19
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 96%
* Total number of goals: 27
* Number of covered goals: 26
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 85%
* Total number of goals: 27
* Number of covered goals: 23
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 63%
* Total number of goals: 154
* Number of covered goals: 97
* Generated 37 tests with total length 235
* Resulting test suite's coverage: 69% (average coverage for all fitness functions)
* Compiling and checking tests
* Writing JUnit test case 'SimplexTableau_ESTest' to evosuite-tests
* Done!

* Computation finished
