* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.math3.optimization.linear.SimplexTableau
* Starting client
* Connecting to master process on port 3592
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/patch1-Math-33-SketchFix/Math_33_1_sketchfix/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math3.optimization.linear.SimplexTableau
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 189
  - Branch 154
  - Exception 0
  - MutationFactory 545
  - Output 72
  - Method 27
  - MethodNoException 27
  - CBranchFitnessFactory 154
* Using seed 1585473766238
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%][Progress:=====>                        18%] [Cov:=>                                 4%][Progress:=====>                        18%] [Cov:==>                                6%][Progress:=====>                        18%] [Cov:======>                            19%][Progress:=====>                        18%] [Cov:=======>                           22%][Progress:======>                       20%] [Cov:========>                          25%][Progress:======>                       20%] [Cov:==========>                        29%][Progress:======>                       20%] [Cov:==========>                        30%][Progress:======>                       21%] [Cov:=>                                 4%][Progress:======>                       21%] [Cov:==>                                7%][Progress:======>                       21%] [Cov:======>                            19%][Progress:======>                       21%] [Cov:========>                          23%][Progress:======>                       23%] [Cov:========>                          25%][Progress:======>                       23%] [Cov:=========>                         26%][Progress:======>                       23%] [Cov:=========>                         27%][Progress:======>                       23%] [Cov:=========>                         28%][Progress:======>                       23%] [Cov:==========>                        30%][Progress:======>                       23%] [Cov:===========>                       32%][Progress:================>             56%] [Cov:>                                  0%][Progress:=================>            58%] [Cov:>                                  0%][Progress:=================>            58%] [Cov:====>                              13%][Progress:==================>           60%] [Cov:=>                                 3%][Progress:====================>         68%] [Cov:=>                                 5%][Progress:====================>         68%] [Cov:=====>                             17%][Progress:====================>         68%] [Cov:======>                            19%][Progress:====================>         68%] [Cov:=======>                           20%][Progress:===========================>  91%] [Cov:=>                                 4%][Progress:===========================>  91%] [Cov:==>                                6%][Progress:===========================>  91%] [Cov:======>                            19%][Progress:===========================>  91%] [Cov:=======>                           22%][Progress:===========================>  91%] [Cov:========>                          24%][Progress:===========================>  91%] [Cov:=========>                         26%][Progress:===========================>  91%] [Cov:=========>                         27%][Progress:===========================>  91%] [Cov:=========>                         28%][Progress:===========================>  91%] [Cov:===========>                       32%][Progress:===========================>  91%] [Cov:===========>                       33%][Progress:===========================>  93%] [Cov:=>                                 4%][Progress:===========================>  93%] [Cov:==>                                6%][Progress:===========================>  93%] [Cov:======>                            19%][Progress:===========================>  93%] [Cov:=======>                           22%][Progress:===========================>  93%] [Cov:========>                          24%][Progress:===========================>  93%] [Cov:=========>                         26%][Progress:===========================>  93%] [Cov:=========>                         27%][Progress:===========================>  93%] [Cov:=========>                         28%][Progress:===========================>  93%] [Cov:==========>                        31%][Progress:===========================>  93%] [Cov:===========>                       32%][Progress:============================> 95%] [Cov:=>                                 5%][Progress:============================> 95%] [Cov:===>                               9%][Progress:============================> 95%] [Cov:=======>                           21%][Progress:============================> 95%] [Cov:=========>                         26%][Progress:============================> 95%] [Cov:=========>                         28%][Progress:============================> 95%] [Cov:==========>                        31%][Progress:============================> 95%] [Cov:============>                      35%][Progress:============================> 95%] [Cov:============>                      36%][Progress:============================> 96%] [Cov:========>                          24%][Progress:============================> 96%] [Cov:========>                          25%][Progress:============================> 96%] [Cov:=========>                         27%][Progress:============================> 96%] [Cov:==========>                        29%][Progress:============================> 96%] [Cov:==========>                        30%][Progress:============================> 96%] [Cov:===========>                       32%][Progress:============================> 96%] [Cov:===========>                       34%][Progress:============================> 96%] [Cov:============>                      36%][Progress:=============================>98%] [Cov:=>                                 4%][Progress:=============================>98%] [Cov:==>                                6%][Progress:=============================>98%] [Cov:======>                            19%][Progress:=============================>98%] [Cov:=======>                           22%][Progress:=============================>98%] [Cov:========>                          24%][Progress:=============================>98%] [Cov:========>                          25%][Progress:=============================>98%] [Cov:=========>                         26%][Progress:=============================>98%] [Cov:==========>                        29%][Progress:=============================>98%] [Cov:==========>                        30%][Progress:=============================>98%] [Cov:===========>                       32%][Progress:=============================>98%] [Cov:============>                      36%][Progress:=============================>98%] [Cov:=============>                     39%][Progress:=============================>98%] [Cov:==============>                    42%][Progress:==============================100%] [Cov:=>                                 5%][Progress:==============================100%] [Cov:===>                               10%][Progress:==============================100%] [Cov:=======>                           22%][Progress:==============================100%] [Cov:=========>                         27%][Progress:==============================100%] [Cov:=========>                         28%][Progress:==============================100%] [Cov:==========>                        31%][Progress:==============================100%] [Cov:===========>                       33%][Progress:==============================100%] [Cov:===========>                       34%][Progress:==============================100%] [Cov:============>                      35%][Progress:==============================100%] [Cov:==>                                6%][Progress:==============================100%] [Cov:===>                               10%][Progress:==============================100%] [Cov:========>                          23%][Progress:==============================100%] [Cov:==========>                        29%][Progress:==============================100%] [Cov:==========>                        30%][Progress:==============================100%] [Cov:===========>                       34%][Progress:==============================100%] [Cov:=============>                     38%][Progress:==============================100%] [Cov:==============>                    41%][Progress:==============================100%] [Cov:==============>                    42%][Progress:==============================100%] [Cov:=========================>         74%]
* Search finished after 66s and 0 generations, 1710 statements, best individual has fitness: 458.2792207792208
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 77%
* Total number of goals: 189
* Number of covered goals: 146
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 62%
* Total number of goals: 154
* Number of covered goals: 96
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 6
* Number of covered goals: 6
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 72%
* Total number of goals: 545
* Number of covered goals: 395
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 42%
* Total number of goals: 72
* Number of covered goals: 30
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 27
* Number of covered goals: 27
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 96%
* Total number of goals: 27
* Number of covered goals: 26
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 62%
* Total number of goals: 154
* Number of covered goals: 96
* Generated 37 tests with total length 243
* Resulting test suite's coverage: 74% (average coverage for all fitness functions)
* Compiling and checking tests
* Writing JUnit test case 'SimplexTableau_ESTest' to evosuite-tests
* Done!

* Computation finished
