* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.math3.optimization.linear.SimplexTableau
* Starting client
* Connecting to master process on port 3541
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/patch1-Math-33-SketchFix/Math_33_1_sketchfix/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math3.optimization.linear.SimplexTableau
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 189
  - Branch 154
  - Exception 0
  - MutationFactory 545
  - Output 72
  - Method 27
  - MethodNoException 27
  - CBranchFitnessFactory 154
* Using seed 1585473766472
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%][Progress:===>                          13%] [Cov:=>                                 4%][Progress:===>                          13%] [Cov:==>                                6%][Progress:===>                          13%] [Cov:======>                            19%][Progress:===>                          13%] [Cov:=======>                           22%][Progress:====>                         15%] [Cov:========>                          23%][Progress:====>                         15%] [Cov:========>                          24%][Progress:====>                         15%] [Cov:========>                          25%][Progress:====>                         15%] [Cov:=========>                         28%][Progress:====>                         16%] [Cov:=>                                 4%][Progress:====>                         16%] [Cov:==>                                7%][Progress:====>                         16%] [Cov:=======>                           20%][Progress:====>                         16%] [Cov:========>                          24%][Progress:====>                         16%] [Cov:=========>                         27%][Progress:====>                         16%] [Cov:==========>                        30%][Progress:====>                         16%] [Cov:==========>                        31%][Progress:=====>                        18%] [Cov:=>                                 4%][Progress:=====>                        18%] [Cov:==>                                7%][Progress:=====>                        18%] [Cov:======>                            19%][Progress:=====>                        18%] [Cov:========>                          23%][Progress:=====>                        18%] [Cov:========>                          25%][Progress:=====>                        18%] [Cov:=========>                         27%][Progress:=====>                        18%] [Cov:=========>                         28%][Progress:======>                       20%] [Cov:=>                                 5%][Progress:======>                       20%] [Cov:==>                                8%][Progress:======>                       20%] [Cov:=======>                           21%][Progress:======>                       20%] [Cov:=========>                         26%][Progress:======>                       20%] [Cov:=========>                         27%][Progress:======>                       20%] [Cov:===========>                       33%][Progress:======>                       20%] [Cov:=============>                     38%][Progress:======>                       20%] [Cov:==============>                    40%][Progress:=======>                      25%] [Cov:=>                                 3%][Progress:=======>                      25%] [Cov:=>                                 5%][Progress:=======>                      25%] [Cov:======>                            18%][Progress:=======>                      25%] [Cov:=======>                           20%][Progress:=======>                      25%] [Cov:=======>                           21%][Progress:=======>                      25%] [Cov:========>                          23%][Progress:=======>                      26%] [Cov:========>                          24%][Progress:============>                 40%] [Cov:=>                                 5%][Progress:============>                 40%] [Cov:==>                                8%][Progress:============>                 40%] [Cov:=======>                           21%][Progress:============>                 40%] [Cov:=========>                         26%][Progress:=============>                46%] [Cov:=========>                         26%][Progress:==============>               48%] [Cov:===========>                       32%][Progress:================>             56%] [Cov:============>                      37%][Progress:================>             56%] [Cov:=============>                     38%][Progress:========================>     83%] [Cov:==>                                6%][Progress:=============================>98%] [Cov:===>                               11%][Progress:=============================>98%] [Cov:========>                          24%][Progress:=============================>98%] [Cov:==========>                        30%][Progress:=============================>98%] [Cov:===========>                       34%][Progress:=============================>98%] [Cov:============>                      36%][Progress:=============================>98%] [Cov:=============>                     39%][Progress:==============================100%] [Cov:=>                                 4%][Progress:==============================100%] [Cov:==>                                7%][Progress:==============================100%] [Cov:======>                            19%][Progress:==============================100%] [Cov:========>                          23%][Progress:==============================100%] [Cov:========>                          24%][Progress:==============================100%] [Cov:=========>                         26%][Progress:==============================100%] [Cov:=========>                         28%][Progress:==============================100%] [Cov:==========>                        29%][Progress:==============================100%] [Cov:===========>                       32%][Progress:==============================100%] [Cov:===========>                       33%][Progress:==============================100%] [Cov:==>                                7%][Progress:==============================100%] [Cov:====>                              12%][Progress:==============================100%] [Cov:========>                          25%][Progress:==============================100%] [Cov:===========>                       32%][Progress:==============================100%] [Cov:============>                      35%][Progress:==============================100%] [Cov:===============>                   43%][Progress:==============================100%] [Cov:=================>                 50%][Progress:==============================100%] [Cov:==================>                53%][Progress:==============================100%] [Cov:==================>                53%][Progress:==============================100%] [Cov:=========================>         72%]
* Search finished after 65s and 0 generations, 1240 statements, best individual has fitness: 468.171188630491
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 78%
* Total number of goals: 189
* Number of covered goals: 147
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 62%
* Total number of goals: 154
* Number of covered goals: 96
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 72%
* Total number of goals: 545
* Number of covered goals: 391
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 33%
* Total number of goals: 72
* Number of covered goals: 24
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 96%
* Total number of goals: 27
* Number of covered goals: 26
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 96%
* Total number of goals: 27
* Number of covered goals: 26
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 62%
* Total number of goals: 154
* Number of covered goals: 95
* Generated 40 tests with total length 262
* Resulting test suite's coverage: 72% (average coverage for all fitness functions)
* Compiling and checking tests
* Computation finished
