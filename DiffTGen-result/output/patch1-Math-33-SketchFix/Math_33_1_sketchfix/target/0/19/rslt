* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.math3.optimization.linear.SimplexTableau
* Starting client
* Connecting to master process on port 21277
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/patch1-Math-33-SketchFix/Math_33_1_sketchfix/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math3.optimization.linear.SimplexTableau
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 189
  - Branch 154
  - Exception 0
  - MutationFactory 545
  - Output 72
  - Method 27
  - MethodNoException 27
  - CBranchFitnessFactory 154
* Using seed 1585473981559
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%][Progress:==========>                   35%] [Cov:==>                                6%][Progress:==========>                   35%] [Cov:===>                               11%][Progress:==========>                   35%] [Cov:========>                          24%][Progress:==========>                   36%] [Cov:==========>                        31%][Progress:==========>                   36%] [Cov:===========>                       34%][Progress:==========>                   36%] [Cov:============>                      35%][Progress:==========>                   36%] [Cov:=============>                     38%][Progress:===========>                  38%] [Cov:>                                  0%][Progress:============>                 43%] [Cov:>                                  0%][Progress:============>                 43%] [Cov:====>                              12%][Progress:===============>              51%] [Cov:===>                               11%][Progress:====================>         68%] [Cov:===>                               11%][Progress:=====================>        71%] [Cov:==>                                8%][Progress:=====================>        71%] [Cov:====>                              13%][Progress:=====================>        71%] [Cov:=========>                         26%][Progress:=====================>        71%] [Cov:===========>                       34%][Progress:=====================>        71%] [Cov:============>                      36%][Progress:======================>       75%] [Cov:===============>                   43%][Progress:======================>       75%] [Cov:=================>                 49%][Progress:======================>       75%] [Cov:==================>                52%][Progress:=======================>      78%] [Cov:=>                                 4%][Progress:=======================>      78%] [Cov:==>                                7%][Progress:=======================>      78%] [Cov:=======>                           20%][Progress:=======================>      78%] [Cov:========>                          24%][Progress:=======================>      78%] [Cov:========>                          25%][Progress:=======================>      78%] [Cov:=========>                         28%][Progress:=======================>      78%] [Cov:==========>                        30%][Progress:=======================>      78%] [Cov:==========>                        31%][Progress:========================>     80%] [Cov:=======>                           22%][Progress:========================>     80%] [Cov:=========>                         27%][Progress:========================>     80%] [Cov:==========>                        30%][Progress:========================>     80%] [Cov:===========>                       33%][Progress:========================>     80%] [Cov:============>                      35%][Progress:========================>     81%] [Cov:===========>                       32%][Progress:========================>     81%] [Cov:===========>                       33%][Progress:=========================>    85%] [Cov:=>                                 3%][Progress:=========================>    85%] [Cov:=>                                 5%][Progress:=========================>    85%] [Cov:=====>                             17%][Progress:==========================>   88%] [Cov:=======>                           20%][Progress:==========================>   88%] [Cov:=======>                           21%][Progress:===========================>  93%] [Cov:=>                                 4%][Progress:===========================>  93%] [Cov:==>                                7%][Progress:===========================>  93%] [Cov:=======>                           20%][Progress:==============================100%] [Cov:========>                          24%][Progress:==============================100%] [Cov:========>                          25%][Progress:==============================100%] [Cov:=========>                         28%][Progress:==============================100%] [Cov:==========>                        31%][Progress:==============================100%] [Cov:===========>                       32%][Progress:==============================100%] [Cov:==================>                52%][MASTER] 17:27:55.156 [logback-1] WARN  TimeController - Operation 'update from archive' took too long: 8938ms
[Progress:==============================100%] [Cov:======================>            64%]
* Search finished after 75s and 0 generations, 940 statements, best individual has fitness: 546.9748366013072
[MASTER] 17:27:55.960 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 14 seconds more than allowed.
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 74%
* Total number of goals: 189
* Number of covered goals: 139
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 58%
* Total number of goals: 154
* Number of covered goals: 89
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 69%
* Total number of goals: 545
* Number of covered goals: 375
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 25%
* Total number of goals: 72
* Number of covered goals: 18
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 85%
* Total number of goals: 27
* Number of covered goals: 23
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 70%
* Total number of goals: 27
* Number of covered goals: 19
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 57%
* Total number of goals: 154
* Number of covered goals: 88
* Generated 31 tests with total length 212
* Resulting test suite's coverage: 64% (average coverage for all fitness functions)
* Compiling and checking tests
* Computation finished
