* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.math3.optimization.linear.SimplexTableau
* Starting client
* Connecting to master process on port 11059
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/patch1-Math-33-SketchFix/Math_33_1_sketchfix/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math3.optimization.linear.SimplexTableau
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 189
  - Branch 154
  - Exception 0
  - MutationFactory 545
  - Output 72
  - Method 27
  - MethodNoException 27
  - CBranchFitnessFactory 154
* Using seed 1585473579579
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%][Progress:====>                         15%] [Cov:==>                                6%][Progress:====>                         15%] [Cov:===>                               9%][Progress:====>                         15%] [Cov:=======>                           22%][Progress:====>                         15%] [Cov:=========>                         26%][Progress:====>                         15%] [Cov:=========>                         27%][Progress:====>                         15%] [Cov:==========>                        30%][Progress:====>                         15%] [Cov:===========>                       33%][Progress:====>                         15%] [Cov:============>                      35%][Progress:====>                         16%] [Cov:=>                                 5%][Progress:====>                         16%] [Cov:===>                               9%][Progress:====>                         16%] [Cov:=======>                           22%][Progress:====>                         16%] [Cov:=========>                         27%][Progress:====>                         16%] [Cov:==========>                        30%][Progress:====>                         16%] [Cov:===========>                       33%][Progress:====>                         16%] [Cov:============>                      35%][Progress:=====>                        18%] [Cov:============>                      35%][Progress:=====>                        18%] [Cov:=============>                     38%][Progress:=====>                        18%] [Cov:==============>                    40%][Progress:=====>                        18%] [Cov:===============>                   43%][Progress:======>                       20%] [Cov:=>                                 4%][Progress:======>                       20%] [Cov:==>                                6%][Progress:======>                       20%] [Cov:======>                            19%][Progress:======>                       20%] [Cov:========>                          23%][Progress:======>                       20%] [Cov:========>                          25%][Progress:======>                       20%] [Cov:=========>                         26%][Progress:======>                       20%] [Cov:=========>                         27%][Progress:======>                       21%] [Cov:=======>                           22%][Progress:======>                       21%] [Cov:=========>                         28%][Progress:======>                       21%] [Cov:==========>                        29%][Progress:======>                       21%] [Cov:==========>                        31%][Progress:======>                       21%] [Cov:===========>                       33%][Progress:======>                       21%] [Cov:============>                      36%][Progress:======>                       23%] [Cov:========>                          24%][Progress:======>                       23%] [Cov:=========>                         27%][Progress:======>                       23%] [Cov:=========>                         28%][Progress:======>                       23%] [Cov:==========>                        30%][Progress:=======>                      25%] [Cov:===========>                       32%][Progress:=======>                      25%] [Cov:============>                      36%][Progress:=======>                      25%] [Cov:=============>                     38%][Progress:=========>                    30%] [Cov:==>                                7%][Progress:==========>                   36%] [Cov:====>                              12%][Progress:============>                 41%] [Cov:========>                          24%][Progress:===============>              53%] [Cov:==========>                        31%][Progress:===============>              53%] [Cov:===========>                       33%][Progress:===============>              53%] [Cov:=============>                     38%][Progress:===============>              53%] [Cov:===============>                   43%][Progress:===============>              53%] [Cov:===============>                   45%][Progress:==================>           61%] [Cov:=>                                 4%][Progress:==================>           63%] [Cov:==>                                6%][Progress:===================>          66%] [Cov:======>                            19%][Progress:===================>          66%] [Cov:=======>                           22%][Progress:===================>          66%] [Cov:========>                          23%][Progress:=====================>        71%] [Cov:========>                          24%][Progress:=====================>        71%] [Cov:=========>                         26%][Progress:=====================>        71%] [Cov:=========>                         28%][Progress:=====================>        73%] [Cov:=======>                           21%][Progress:=====================>        73%] [Cov:=======>                           22%][Progress:=====================>        73%] [Cov:========>                          23%][Progress:=====================>        73%] [Cov:========>                          24%][Progress:=====================>        73%] [Cov:========>                          25%][Progress:==============================100%] [Cov:=>                                 5%][Progress:==============================100%] [Cov:===>                               9%][Progress:==============================100%] [Cov:=======>                           22%][Progress:==============================100%] [Cov:=========>                         26%][Progress:==============================100%] [Cov:=========>                         28%][Progress:==============================100%] [Cov:==========>                        30%][Progress:==============================100%] [Cov:===========>                       32%][Progress:==============================100%] [Cov:=>                                 5%][Progress:==============================100%] [Cov:===>                               9%][Progress:==============================100%] [Cov:=======>                           22%][Progress:==============================100%] [Cov:=========>                         27%][Progress:==============================100%] [Cov:==========>                        29%][Progress:==============================100%] [Cov:===========>                       32%][Progress:==============================100%] [Cov:===========>                       34%][Progress:==============================100%] [Cov:===============>                   43%][Progress:==============================100%] [Cov:=========================>         74%]
* Search finished after 64s and 0 generations, 1478 statements, best individual has fitness: 379.7420634920635
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 86%
* Total number of goals: 189
* Number of covered goals: 162
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 73%
* Total number of goals: 154
* Number of covered goals: 112
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 76%
* Total number of goals: 545
* Number of covered goals: 414
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 35%
* Total number of goals: 72
* Number of covered goals: 25
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 93%
* Total number of goals: 27
* Number of covered goals: 25
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 85%
* Total number of goals: 27
* Number of covered goals: 23
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 73%
* Total number of goals: 154
* Number of covered goals: 112
* Generated 38 tests with total length 277
* Resulting test suite's coverage: 74% (average coverage for all fitness functions)
* Compiling and checking tests
* Writing JUnit test case 'SimplexTableau_ESTest' to evosuite-tests
* Done!

* Computation finished
