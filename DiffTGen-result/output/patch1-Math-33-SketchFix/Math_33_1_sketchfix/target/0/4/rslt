* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.math3.optimization.linear.SimplexTableau
* Starting client
* Connecting to master process on port 15225
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/patch1-Math-33-SketchFix/Math_33_1_sketchfix/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math3.optimization.linear.SimplexTableau
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 189
  - Branch 154
  - Exception 0
  - MutationFactory 545
  - Output 72
  - Method 27
  - MethodNoException 27
  - CBranchFitnessFactory 154
* Using seed 1585473579000
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%][Progress:=====>                        18%] [Cov:==>                                6%][Progress:=====>                        18%] [Cov:===>                               10%][Progress:=====>                        18%] [Cov:=======>                           22%][Progress:======>                       20%] [Cov:=========>                         28%][Progress:======>                       20%] [Cov:==========>                        29%][Progress:======>                       20%] [Cov:===========>                       33%][Progress:======>                       20%] [Cov:============>                      36%][Progress:======>                       20%] [Cov:=============>                     38%][Progress:======>                       21%] [Cov:=>                                 4%][Progress:======>                       21%] [Cov:==>                                7%][Progress:======>                       21%] [Cov:=======>                           20%][Progress:======>                       23%] [Cov:========>                          24%][Progress:======>                       23%] [Cov:========>                          25%][Progress:======>                       23%] [Cov:==========>                        30%][Progress:======>                       23%] [Cov:============>                      35%][Progress:======>                       23%] [Cov:============>                      36%][Progress:=======>                      25%] [Cov:=>                                 4%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:======>                            19%][Progress:=============>                46%] [Cov:========>                          23%][Progress:==============>               48%] [Cov:========>                          24%][Progress:==============>               48%] [Cov:=========>                         26%][Progress:==============>               48%] [Cov:==========>                        29%][Progress:==============>               48%] [Cov:==========>                        30%][Progress:===============>              50%] [Cov:=>                                 4%][Progress:================>             55%] [Cov:==>                                7%][Progress:=================>            58%] [Cov:======>                            19%][Progress:==================>           61%] [Cov:========>                          23%][Progress:=====================>        73%] [Cov:========>                          24%][Progress:=====================>        73%] [Cov:=========>                         28%][Progress:=====================>        73%] [Cov:===========>                       32%][Progress:=====================>        73%] [Cov:===========>                       33%][Progress:=========================>    86%] [Cov:=>                                 3%][Progress:=========================>    86%] [Cov:==>                                6%][Progress:=========================>    86%] [Cov:======>                            18%][Progress:=========================>    86%] [Cov:=======>                           21%][Progress:=========================>    86%] [Cov:========>                          23%][Progress:=========================>    86%] [Cov:========>                          25%][Progress:=========================>    86%] [Cov:=========>                         26%][Progress:=========================>    86%] [Cov:=========>                         28%][Progress:=========================>    86%] [Cov:==========>                        29%][Progress:=========================>    86%] [Cov:===========>                       34%][Progress:=========================>    86%] [Cov:=============>                     38%][Progress:=========================>    86%] [Cov:==============>                    40%][Progress:===========================>  91%] [Cov:==>                                6%][Progress:===========================>  91%] [Cov:===>                               10%][Progress:===========================>  91%] [Cov:========>                          23%][Progress:===========================>  91%] [Cov:==========>                        29%][Progress:===========================>  91%] [Cov:==========>                        30%][Progress:===========================>  91%] [Cov:===========>                       34%][Progress:===========================>  91%] [Cov:============>                      37%][Progress:===========================>  91%] [Cov:=============>                     39%][Progress:===========================>  93%] [Cov:==>                                8%][Progress:===========================>  93%] [Cov:=====>                             15%][Progress:===========================>  93%] [Cov:=========>                         27%][Progress:===========================>  93%] [Cov:============>                      36%][Progress:===========================>  93%] [Cov:============>                      37%][Progress:===========================>  93%] [Cov:=============>                     39%][Progress:===========================>  93%] [Cov:==============>                    41%][Progress:===========================>  93%] [Cov:===============>                   45%][Progress:===========================>  93%] [Cov:================>                  46%][Progress:===========================>  93%] [Cov:================>                  48%][Progress:=============================>98%] [Cov:==>                                6%][Progress:=============================>98%] [Cov:===>                               10%][Progress:=============================>98%] [Cov:========>                          23%][Progress:=============================>98%] [Cov:==========>                        29%][Progress:=============================>98%] [Cov:==========>                        30%][Progress:=============================>98%] [Cov:===========>                       33%][Progress:=============================>98%] [Cov:============>                      37%][Progress:=============================>98%] [Cov:=============>                     39%][Progress:=============================>98%] [Cov:==============>                    41%][Progress:=============================>98%] [Cov:===============>                   43%][Progress:==============================100%] [Cov:=>                                 3%][Progress:==============================100%] [Cov:=>                                 5%][Progress:==============================100%] [Cov:======>                            18%][Progress:==============================100%] [Cov:=======>                           21%][Progress:==============================100%] [Cov:========>                          23%][Progress:==============================100%] [Cov:========>                          24%][Progress:==============================100%] [Cov:========>                          25%][Progress:==============================100%] [Cov:=========>                         26%][Progress:==============================100%] [Cov:==========>                        29%][Progress:==============================100%] [Cov:==========>                        30%][Progress:==============================100%] [Cov:===========>                       34%][Progress:==============================100%] [Cov:============>                      36%][Progress:==============================100%] [Cov:=============>                     39%][Progress:==============================100%] [Cov:==============>                    42%][Progress:==============================100%] [Cov:===============>                   45%][Progress:==============================100%] [Cov:==========>                        30%][Progress:==============================100%] [Cov:===========>                       32%][Progress:==============================100%] [Cov:============>                      36%][Progress:==============================100%] [Cov:==============>                    41%][Progress:==============================100%] [Cov:===============>                   43%][Progress:==============================100%] [Cov:===============>                   45%][Progress:==============================100%] [Cov:=============================>     84%]
* Search finished after 63s and 0 generations, 3784 statements, best individual has fitness: 177.77424242424243
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 93%
* Total number of goals: 189
* Number of covered goals: 175
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 86%
* Total number of goals: 154
* Number of covered goals: 133
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 10
* Number of covered goals: 10
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 91%
* Total number of goals: 545
* Number of covered goals: 498
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 46%
* Total number of goals: 72
* Number of covered goals: 33
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 27
* Number of covered goals: 27
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 27
* Number of covered goals: 27
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 86%
* Total number of goals: 154
* Number of covered goals: 133
* Generated 50 tests with total length 329
* Resulting test suite's coverage: 84% (average coverage for all fitness functions)
* Compiling and checking tests
* Writing JUnit test case 'SimplexTableau_ESTest' to evosuite-tests
* Done!

* Computation finished
