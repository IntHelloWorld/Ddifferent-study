* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.math3.optimization.linear.SimplexTableau
* Starting client
* Connecting to master process on port 21436
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/patch1-Math-33-SketchFix/Math_33_1_sketchfix/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math3.optimization.linear.SimplexTableau
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 189
  - Branch 154
  - Exception 0
  - MutationFactory 545
  - Output 72
  - Method 27
  - MethodNoException 27
  - CBranchFitnessFactory 154
* Using seed 1585473981618
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%][Progress:=====>                        18%] [Cov:=>                                 4%][Progress:=====>                        18%] [Cov:==>                                6%][Progress:=====>                        18%] [Cov:======>                            19%][Progress:======>                       20%] [Cov:=======>                           22%][Progress:======>                       20%] [Cov:========>                          24%][Progress:======>                       20%] [Cov:========>                          25%][Progress:======>                       20%] [Cov:=========>                         26%][Progress:======>                       21%] [Cov:=>                                 5%][Progress:======>                       21%] [Cov:==>                                8%][Progress:======>                       21%] [Cov:=======>                           21%][Progress:======>                       21%] [Cov:========>                          25%][Progress:======>                       21%] [Cov:=========>                         26%][Progress:======>                       21%] [Cov:=========>                         28%][Progress:======>                       21%] [Cov:==========>                        29%][Progress:======>                       21%] [Cov:==========>                        31%][Progress:======>                       23%] [Cov:=>                                 4%][Progress:======>                       23%] [Cov:==>                                7%][Progress:======>                       23%] [Cov:=======>                           20%][Progress:======>                       23%] [Cov:========>                          24%][Progress:======>                       23%] [Cov:========>                          25%][Progress:======>                       23%] [Cov:=========>                         27%][Progress:======>                       23%] [Cov:==========>                        29%][Progress:======>                       23%] [Cov:==========>                        31%][Progress:=======>                      25%] [Cov:========>                          24%][Progress:=======>                      25%] [Cov:=========>                         26%][Progress:=======>                      25%] [Cov:=========>                         28%][Progress:=======>                      25%] [Cov:==========>                        29%][Progress:=======>                      25%] [Cov:===========>                       34%][Progress:=======>                      25%] [Cov:============>                      35%][Progress:=======>                      25%] [Cov:============>                      37%][Progress:=======>                      26%] [Cov:==============>                    40%][Progress:=======>                      26%] [Cov:===============>                   44%][Progress:=========>                    30%] [Cov:==>                                6%][Progress:=========>                    33%] [Cov:===>                               11%][Progress:=========>                    33%] [Cov:========>                          23%][Progress:=========>                    33%] [Cov:==========>                        30%][Progress:==========>                   36%] [Cov:==========>                        31%][Progress:==========>                   36%] [Cov:===========>                       34%][Progress:==========>                   36%] [Cov:=============>                     38%][Progress:==========>                   36%] [Cov:==============>                    40%][Progress:===========>                  38%] [Cov:=>                                 5%][Progress:============>                 41%] [Cov:==>                                8%][Progress:============>                 41%] [Cov:=======>                           21%][Progress:============>                 41%] [Cov:=========>                         26%][Progress:============>                 41%] [Cov:==========>                        30%][Progress:============>                 41%] [Cov:===========>                       33%][Progress:============>                 41%] [Cov:===========>                       34%][Progress:============>                 43%] [Cov:=>                                 4%][Progress:============>                 43%] [Cov:==>                                6%][Progress:=============>                45%] [Cov:======>                            18%][Progress:=============>                45%] [Cov:=======>                           22%][Progress:=============>                45%] [Cov:========>                          23%][Progress:=============>                45%] [Cov:========>                          24%][Progress:=============>                45%] [Cov:========>                          25%][Progress:===============>              50%] [Cov:==>                                6%][Progress:===============>              50%] [Cov:===>                               11%][Progress:===============>              50%] [Cov:========>                          23%][Progress:===============>              50%] [Cov:==========>                        30%][Progress:===============>              50%] [Cov:===========>                       32%][Progress:===============>              50%] [Cov:=============>                     38%][Progress:===============>              50%] [Cov:===============>                   43%][Progress:===============>              50%] [Cov:================>                  46%][Progress:=====================>        71%] [Cov:=>                                 5%][Progress:=====================>        71%] [Cov:==>                                8%][Progress:=====================>        71%] [Cov:=======>                           20%][Progress:=====================>        73%] [Cov:========>                          25%][Progress:=====================>        73%] [Cov:==========>                        30%][Progress:=====================>        73%] [Cov:===========>                       34%][Progress:=====================>        73%] [Cov:============>                      36%][Progress:======================>       76%] [Cov:==>                                7%][Progress:======================>       76%] [Cov:====>                              14%][Progress:======================>       76%] [Cov:=========>                         26%][Progress:======================>       76%] [Cov:============>                      35%][Progress:======================>       76%] [Cov:============>                      37%][Progress:======================>       76%] [Cov:=============>                     39%][Progress:======================>       76%] [Cov:==============>                    42%][Progress:=======================>      78%] [Cov:=>                                 4%][Progress:=======================>      78%] [Cov:==>                                7%][Progress:=======================>      78%] [Cov:======>                            19%][Progress:=======================>      78%] [Cov:========>                          23%][Progress:=======================>      78%] [Cov:========>                          25%][Progress:=======================>      78%] [Cov:=========>                         26%][Progress:=======================>      78%] [Cov:=========>                         27%][Progress:========================>     83%] [Cov:==>                                7%][Progress:========================>     83%] [Cov:====>                              13%][Progress:========================>     83%] [Cov:========>                          25%][Progress:========================>     83%] [Cov:===========>                       33%][Progress:========================>     83%] [Cov:============>                      37%][Progress:========================>     83%] [Cov:==============>                    41%][Progress:=========================>    85%] [Cov:===============>                   44%][Progress:=========================>    86%] [Cov:================>                  48%][Progress:=========================>    86%] [Cov:===================>               55%][Progress:=========================>    86%] [Cov:====================>              58%][Progress:===========================>  93%] [Cov:=>                                 4%][Progress:===========================>  93%] [Cov:==>                                6%][Progress:===========================>  93%] [Cov:======>                            18%][Progress:============================> 96%] [Cov:=======>                           22%][Progress:============================> 96%] [Cov:========>                          23%][Progress:=============================>98%] [Cov:========>                          25%][Progress:=============================>98%] [Cov:=========>                         28%][Progress:=============================>98%] [Cov:==========>                        29%][Progress:==============================100%] [Cov:=>                                 4%][Progress:==============================100%] [Cov:==>                                7%][Progress:==============================100%] [Cov:=======>                           20%][Progress:==============================100%] [Cov:========>                          24%][Progress:==============================100%] [Cov:========>                          25%][Progress:==============================100%] [Cov:==========>                        29%][Progress:==============================100%] [Cov:===========>                       33%][Progress:==============================100%] [Cov:===========>                       34%][Progress:==============================100%] [Cov:====================>              58%][Progress:==============================100%] [Cov:==========================>        75%]
* Search finished after 64s and 0 generations, 2510 statements, best individual has fitness: 383.9194444439786
[MASTER] 17:27:49.072 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 7 seconds more than allowed.
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 79%
* Total number of goals: 189
* Number of covered goals: 150
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 68%
* Total number of goals: 154
* Number of covered goals: 104
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 78%
* Total number of goals: 545
* Number of covered goals: 427
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 43%
* Total number of goals: 72
* Number of covered goals: 31
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 27
* Number of covered goals: 27
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 27
* Number of covered goals: 27
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 68%
* Total number of goals: 154
* Number of covered goals: 104
* Generated 42 tests with total length 267
* Resulting test suite's coverage: 76% (average coverage for all fitness functions)
* Compiling and checking tests
* Writing JUnit test case 'SimplexTableau_ESTest' to evosuite-tests
[MASTER] 17:29:32.562 [logback-1] WARN  TestSuiteGenerator - JUnit checking timed out
* Done!

* Computation finished
