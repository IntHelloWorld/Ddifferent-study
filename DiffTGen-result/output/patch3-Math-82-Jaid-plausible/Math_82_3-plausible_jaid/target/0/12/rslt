* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.math.optimization.linear.SimplexSolver
* Starting client
* Connecting to master process on port 13322
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/patch3-Math-82-Jaid-plausible/Math_82_3-plausible_jaid/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math.optimization.linear.SimplexSolver
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 62
  - Branch 58
  - Exception 0
  - MutationFactory 216
  - Output 6
  - Method 6
  - MethodNoException 6
  - CBranchFitnessFactory 58
* Using seed 1585440783861
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%][Progress:===>                          13%] [Cov:>                                  1%][Progress:===>                          13%] [Cov:====>                              14%][Progress:===>                          13%] [Cov:======>                            18%][Progress:===>                          13%] [Cov:=======>                           22%][Progress:===>                          13%] [Cov:========>                          23%][Progress:====>                         15%] [Cov:=========>                         27%][Progress:====>                         15%] [Cov:=========>                         28%][Progress:====>                         15%] [Cov:============>                      35%][Progress:====>                         16%] [Cov:>                                  2%][Progress:====>                         16%] [Cov:=>                                 3%][Progress:====>                         16%] [Cov:=====>                             16%][Progress:====>                         16%] [Cov:========>                          23%][Progress:====>                         16%] [Cov:=========>                         27%][Progress:====>                         16%] [Cov:=========>                         28%][Progress:====>                         16%] [Cov:==========>                        30%][Progress:====>                         16%] [Cov:===========>                       32%][Progress:=====>                        18%] [Cov:=>                                 4%][Progress:=====>                        18%] [Cov:==>                                6%][Progress:=====>                        18%] [Cov:======>                            18%][Progress:=====>                        18%] [Cov:======>                            19%][Progress:=====>                        18%] [Cov:=========>                         27%][Progress:=====>                        18%] [Cov:==========>                        31%][Progress:=====>                        18%] [Cov:===========>                       32%][Progress:======>                       20%] [Cov:>                                  1%][Progress:======>                       20%] [Cov:====>                              13%][Progress:======>                       20%] [Cov:=====>                             16%][Progress:======>                       20%] [Cov:=======>                           20%][Progress:======>                       20%] [Cov:========>                          25%][Progress:======>                       20%] [Cov:==========>                        31%][Progress:======>                       20%] [Cov:===========>                       32%][Progress:======>                       20%] [Cov:=============>                     39%][Progress:======>                       20%] [Cov:================>                  47%][Progress:======>                       20%] [Cov:=================>                 49%][Progress:======>                       21%] [Cov:>                                  2%][Progress:======>                       21%] [Cov:=>                                 3%][Progress:======>                       21%] [Cov:=====>                             15%][Progress:======>                       21%] [Cov:=====>                             16%][Progress:======>                       21%] [Cov:========>                          23%][Progress:======>                       21%] [Cov:==========>                        29%][Progress:======>                       21%] [Cov:==========>                        30%][Progress:======>                       21%] [Cov:===========>                       34%][Progress:======>                       21%] [Cov:============>                      36%][Progress:======>                       23%] [Cov:>                                  2%][Progress:======>                       23%] [Cov:=>                                 3%][Progress:======>                       23%] [Cov:=====>                             16%][Progress:======>                       23%] [Cov:======>                            18%][Progress:======>                       23%] [Cov:=========>                         27%][Progress:======>                       23%] [Cov:===========>                       33%][Progress:======>                       23%] [Cov:===========>                       34%][Progress:======>                       23%] [Cov:============>                      35%][Progress:======>                       23%] [Cov:============>                      36%][Progress:========>                     28%] [Cov:=>                                 3%][Progress:========>                     28%] [Cov:=>                                 4%][Progress:========>                     28%] [Cov:=====>                             17%][Progress:========>                     28%] [Cov:======>                            18%][Progress:========>                     28%] [Cov:========>                          23%][Progress:========>                     28%] [Cov:=========>                         27%][Progress:=========>                    30%] [Cov:>                                  1%][Progress:=========>                    30%] [Cov:====>                              14%][Progress:=========>                    30%] [Cov:======>                            18%][Progress:=========>                    30%] [Cov:=======>                           22%][Progress:=========>                    30%] [Cov:=========>                         28%][Progress:=========>                    30%] [Cov:============>                      35%][Progress:=========>                    30%] [Cov:============>                      36%][Progress:=========>                    30%] [Cov:=================>                 49%][Progress:=========>                    31%] [Cov:=========>                         28%][Progress:=========>                    31%] [Cov:=================>                 49%][Progress:=========>                    33%] [Cov:===========>                       33%][Progress:=========>                    33%] [Cov:=============>                     39%][Progress:=========>                    33%] [Cov:==============>                    40%][Progress:=========>                    33%] [Cov:===============>                   43%][Progress:=========>                    33%] [Cov:===============>                   45%][Progress:==========>                   35%] [Cov:===================>               56%][Progress:==========>                   35%] [Cov:===================>               57%][Progress:==========>                   36%] [Cov:==================>                54%][Progress:==========>                   36%] [Cov:===================>               55%][Progress:============>                 40%] [Cov:===================>               56%][Progress:============>                 41%] [Cov:===================>               56%][Progress:============>                 43%] [Cov:==================>                54%][Progress:============>                 43%] [Cov:===================>               56%][Progress:============>                 43%] [Cov:===================>               57%][Progress:=============>                45%] [Cov:==================>                54%][Progress:=============>                45%] [Cov:===================>               55%][Progress:=============>                45%] [Cov:===================>               56%][Progress:=============>                45%] [Cov:===================>               57%][Progress:=============>                46%] [Cov:===================>               56%][Progress:==============>               48%] [Cov:===================>               57%][Progress:===============>              50%] [Cov:=====================>             60%][Progress:===============>              50%] [Cov:======================>            63%][Progress:===============>              50%] [Cov:========================>          69%][Progress:===============>              50%] [Cov:========================>          70%][Progress:===============>              50%] [Cov:========================>          71%][Progress:===============>              51%] [Cov:======================>            65%][Progress:===============>              51%] [Cov:========================>          71%][Progress:===============>              53%] [Cov:========================>          71%][Progress:=================>            58%] [Cov:=======================>           67%][Progress:=================>            58%] [Cov:=======================>           68%][Progress:=================>            58%] [Cov:========================>          71%][Progress:==================>           60%] [Cov:========================>          71%][Progress:==================>           61%] [Cov:=======================>           68%][Progress:==================>           61%] [Cov:========================>          71%][Progress:==================>           61%] [Cov:=========================>         72%][Progress:===================>          65%] [Cov:=======================>           67%][Progress:===================>          65%] [Cov:========================>          69%][Progress:===================>          65%] [Cov:========================>          71%][Progress:===================>          66%] [Cov:========================>          71%][Progress:====================>         68%] [Cov:=========================>         72%][Progress:=====================>        70%] [Cov:=========================>         72%][Progress:=====================>        71%] [Cov:=========================>         72%][Progress:=====================>        71%] [Cov:=========================>         72%][Progress:======================>       75%] [Cov:=========================>         72%][Progress:======================>       75%] [Cov:=========================>         72%][Progress:======================>       76%] [Cov:=========================>         72%][Progress:========================>     80%] [Cov:========================>          69%][Progress:========================>     80%] [Cov:=========================>         72%][Progress:========================>     81%] [Cov:=========================>         72%][Progress:========================>     83%] [Cov:=========================>         72%][Progress:=========================>    86%] [Cov:========================>          70%][Progress:=========================>    86%] [Cov:=========================>         72%][Progress:==========================>   88%] [Cov:=========================>         72%][Progress:===========================>  90%] [Cov:=========================>         72%][Progress:===========================>  93%] [Cov:=========================>         72%][Progress:===========================>  93%] [Cov:=========================>         72%][Progress:=============================>98%] [Cov:=========================>         72%][Progress:==============================100%] [Cov:=========================>         72%][Progress:==============================100%] [Cov:=========================>         74%][Progress:==============================100%] [Cov:==========================>        76%][Progress:==============================100%] [Cov:=========================>         72%][Progress:==============================100%] [Cov:==========================>        76%][Progress:==============================100%] [Cov:===========================>       78%]
* Search finished after 63s and 12 generations, 8033 statements, best individual has fitness: 160.49999998928976
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 97%
* Total number of goals: 62
* Number of covered goals: 60
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 66%
* Total number of goals: 58
* Number of covered goals: 38
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 5
* Number of covered goals: 5
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 67%
* Total number of goals: 216
* Number of covered goals: 145
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 50%
* Total number of goals: 6
* Number of covered goals: 3
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 6
* Number of covered goals: 6
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 83%
* Total number of goals: 6
* Number of covered goals: 5
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 64%
* Total number of goals: 58
* Number of covered goals: 37
* Generated 13 tests with total length 89
* Resulting test suite's coverage: 78% (average coverage for all fitness functions)
* Compiling and checking tests
* Writing JUnit test case 'SimplexSolver_ESTest' to evosuite-tests
* Done!

* Computation finished
