/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 28 14:43:31 GMT 2020
 */

package org.apache.commons.math.linear;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.linear.Array2DRowRealMatrix;
import org.apache.commons.math.linear.ArrayRealVector;
import org.apache.commons.math.linear.DecompositionSolver;
import org.apache.commons.math.linear.EigenDecompositionImpl;
import org.apache.commons.math.linear.OpenMapRealMatrix;
import org.apache.commons.math.linear.OpenMapRealVector;
import org.apache.commons.math.linear.RealMatrix;
import org.apache.commons.math.linear.RealVector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EigenDecompositionImpl_ESTest extends EigenDecompositionImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (-460.0118860959);
      doubleArray0[1] = 1598.6962769331008;
      doubleArray0[2] = 134.503126224817;
      doubleArray0[3] = (-1165.369983299);
      doubleArray0[4] = 2481.4;
      doubleArray0[5] = 0.08325;
      doubleArray0[6] = (-2360.034838);
      doubleArray0[7] = 1777.867135467;
      doubleArray0[8] = 1205.61077;
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = (-2360.034838);
      doubleArray1[1] = (-460.0118860959);
      doubleArray1[2] = 1777.867135467;
      doubleArray1[3] = 0.08325;
      doubleArray1[4] = 1777.867135467;
      doubleArray1[5] = (-460.0118860959);
      doubleArray1[1] = (-2360.034838);
      doubleArray1[7] = 0.08325;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-2360.034838));
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getV();
      double double0 = eigenDecompositionImpl0.getDeterminant();
      double[] doubleArray2 = eigenDecompositionImpl0.getImagEigenvalues();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (-460.0118860959);
      doubleArray0[1] = 1598.6962769331008;
      doubleArray0[2] = 134.503126224817;
      doubleArray0[3] = (-1165.369983299);
      doubleArray0[4] = 2481.4;
      doubleArray0[5] = 0.08325;
      doubleArray0[6] = (-2360.034838);
      doubleArray0[7] = 1777.867135467;
      doubleArray0[8] = 1205.61077;
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = (-2360.034838);
      doubleArray1[1] = (-460.0118860959);
      doubleArray1[2] = 1777.867135467;
      doubleArray1[3] = 0.08325;
      doubleArray1[4] = 134.503126224817;
      doubleArray1[5] = (-460.0118860959);
      doubleArray1[6] = (-2360.034838);
      doubleArray1[7] = 0.08325;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-2360.034838));
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      double[] doubleArray2 = eigenDecompositionImpl0.getImagEigenvalues();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 1748.476;
      doubleArray0[1] = 529.31441765;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 529.31441765;
      doubleArray0[4] = (-264.39609978);
      doubleArray0[5] = (-1713.37465);
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = 529.31441765;
      doubleArray1[1] = 2.0;
      doubleArray1[2] = (-2331.9392203);
      doubleArray1[3] = 529.31441765;
      doubleArray1[4] = 0.0;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getVT();
      double[] doubleArray2 = eigenDecompositionImpl0.getRealEigenvalues();
      double double0 = eigenDecompositionImpl0.getDeterminant();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 1748.476;
      doubleArray0[1] = 529.31441765;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = (-2331.9392203);
      doubleArray0[4] = (-264.39609978);
      doubleArray0[5] = (-1713.37465);
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = 529.31441765;
      doubleArray1[1] = 2.0;
      doubleArray1[2] = (-2331.9392203);
      doubleArray1[3] = 529.31441765;
      doubleArray1[4] = 0.0;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 314.0);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getVT();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getVT();
      double double0 = eigenDecompositionImpl0.getDeterminant();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 1748.476;
      doubleArray0[1] = 529.31441765;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = (-264.39609978);
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = 529.31441765;
      doubleArray1[1] = 2.0;
      doubleArray1[2] = 1748.476;
      doubleArray1[3] = 529.31441765;
      doubleArray1[4] = 0.0;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getV();
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getVT();
      double[] doubleArray2 = eigenDecompositionImpl0.getRealEigenvalues();
      try { 
        eigenDecompositionImpl0.getEigenvector(1253);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1253
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (-460.0118860959);
      doubleArray0[1] = 1598.6962769331008;
      doubleArray0[2] = 134.503126224817;
      doubleArray0[4] = 2481.4;
      doubleArray0[5] = 0.08325;
      doubleArray0[6] = (-2360.034838);
      doubleArray0[8] = 1205.61077;
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = (-2360.034838);
      doubleArray1[1] = (-460.0118860959);
      doubleArray1[2] = 1777.867135467;
      doubleArray1[3] = 0.08325;
      doubleArray1[5] = (-460.0118860959);
      doubleArray1[6] = (-2360.034838);
      doubleArray1[7] = 0.08325;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-2360.034838));
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getD();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getD();
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      double[] doubleArray2 = eigenDecompositionImpl0.getRealEigenvalues();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (-460.0118860959);
      doubleArray0[1] = 1598.6962769331008;
      doubleArray0[2] = 134.503126224817;
      doubleArray0[3] = (-1165.369983299);
      doubleArray0[4] = 2481.4;
      doubleArray0[5] = 0.08325;
      doubleArray0[6] = (-2360.034838);
      doubleArray0[7] = 1777.867135467;
      doubleArray0[8] = 1205.61077;
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = (-2360.034838);
      doubleArray1[1] = (-460.0118860959);
      doubleArray1[2] = 1777.867135467;
      doubleArray1[3] = 0.08325;
      doubleArray1[4] = 1777.867135467;
      doubleArray1[6] = (-2360.034838);
      doubleArray1[7] = 0.08325;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-2360.034838));
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[1] = 529.31441765;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = (-2331.9392203);
      doubleArray0[4] = (-264.39609978);
      doubleArray0[5] = (-1713.37465);
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = 529.31441765;
      doubleArray1[1] = 529.31441765;
      doubleArray1[2] = (-2331.9392203);
      doubleArray1[3] = 529.31441765;
      doubleArray1[4] = 0.0;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getVT();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 1748.476;
      doubleArray0[1] = 529.31441765;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = (-2331.9392203);
      doubleArray0[4] = (-264.39609978);
      doubleArray0[5] = (-1713.37465);
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = 529.31441765;
      doubleArray1[1] = 2.0;
      doubleArray1[2] = (-2331.9392203);
      doubleArray1[3] = 529.31441765;
      doubleArray1[4] = 0.0;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      try { 
        eigenDecompositionImpl0.getEigenvector((-1228));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1228
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (-460.0118860959);
      doubleArray0[1] = 1598.6962769331008;
      doubleArray0[2] = 134.503126224817;
      doubleArray0[3] = (-1165.369983299);
      doubleArray0[4] = 2481.4;
      doubleArray0[5] = 0.08325;
      doubleArray0[6] = (-2360.034838);
      doubleArray0[7] = 1777.867135467;
      doubleArray0[8] = 1205.61077;
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = (-2360.034838);
      doubleArray1[1] = (-460.0118860959);
      doubleArray1[2] = 1777.867135467;
      doubleArray1[4] = 1777.867135467;
      doubleArray1[5] = (-460.0118860959);
      doubleArray1[6] = (-2360.034838);
      doubleArray1[7] = 0.08325;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-2360.034838));
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getVT();
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[1] = 1.05;
      doubleArray0[2] = (-720.03);
      doubleArray0[4] = 1.0E-12;
      doubleArray0[5] = 177.367;
      doubleArray0[6] = 557.082247;
      doubleArray0[7] = 3226.424970730395;
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
      OpenMapRealVector openMapRealVector1 = new OpenMapRealVector((RealVector) openMapRealVector0);
      OpenMapRealMatrix openMapRealMatrix0 = openMapRealVector1.outerproduct(openMapRealVector0);
      OpenMapRealMatrix openMapRealMatrix1 = new OpenMapRealMatrix(openMapRealMatrix0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(openMapRealMatrix1, 1.0E-12);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 1748.476;
      doubleArray0[1] = 529.31441765;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = (-2331.9392203);
      doubleArray0[4] = (-264.39609978);
      doubleArray0[5] = (-1713.37465);
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = 529.31441765;
      doubleArray1[2] = (-2331.9392203);
      doubleArray1[3] = 529.31441765;
      doubleArray1[4] = 0.0;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 314.0);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getVT();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getVT();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 1748.476;
      doubleArray0[1] = 529.31441765;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = (-2345.4705765061462);
      doubleArray0[4] = (-264.39609978);
      doubleArray0[5] = (-1713.37465);
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = 529.31441765;
      doubleArray1[1] = 2.0;
      doubleArray1[2] = (-2345.4705765061462);
      doubleArray1[3] = 529.31441765;
      doubleArray1[4] = 0.0;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getVT();
      double[] doubleArray2 = eigenDecompositionImpl0.getRealEigenvalues();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getV();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (-460.0118860959);
      doubleArray0[1] = 1598.6962769331008;
      doubleArray0[2] = (-460.0118860959);
      doubleArray0[3] = (-1165.369983299);
      doubleArray0[4] = 2481.4;
      doubleArray0[5] = 0.08325;
      doubleArray0[6] = (-2360.034838);
      doubleArray0[7] = 1777.867135467;
      doubleArray0[8] = 1205.61077;
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = (-2360.034838);
      doubleArray1[1] = (-460.0118860959);
      doubleArray1[2] = 1777.867135467;
      doubleArray1[3] = 0.08325;
      doubleArray1[4] = 1777.867135467;
      doubleArray1[5] = (-460.0118860959);
      doubleArray1[6] = (-2360.034838);
      doubleArray1[7] = 0.08325;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-2360.034838));
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (-460.0118860959);
      doubleArray0[1] = 1598.6962769331008;
      doubleArray0[2] = 134.503126224817;
      doubleArray0[3] = (-1165.369983299);
      doubleArray0[4] = 2481.4;
      doubleArray0[5] = 0.08325;
      doubleArray0[6] = (-2360.034838);
      doubleArray0[7] = 1777.867135467;
      doubleArray0[8] = 1205.61077;
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = (-2360.034838);
      doubleArray1[1] = (-460.0118860959);
      doubleArray1[2] = 1777.867135467;
      doubleArray1[3] = 0.08325;
      doubleArray1[4] = 1777.867135467;
      doubleArray1[5] = (-460.0118860959);
      doubleArray1[6] = (-2360.034838);
      doubleArray1[7] = 0.08325;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-2360.034838));
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      try { 
        eigenDecompositionImpl0.getEigenvector(629);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 629
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (-460.0118860959);
      doubleArray0[1] = 1598.6962769331008;
      doubleArray0[2] = 134.503126224817;
      doubleArray0[3] = (-1165.369983299);
      doubleArray0[4] = 2481.4;
      doubleArray0[5] = 0.08325;
      doubleArray0[6] = (-2360.034838);
      doubleArray0[7] = 1777.867135467;
      doubleArray0[8] = 1205.61077;
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = (-2360.034838);
      doubleArray1[1] = (-460.0118860959);
      doubleArray1[2] = 1777.867135467;
      doubleArray1[3] = 0.08325;
      doubleArray1[4] = 1777.867135467;
      doubleArray1[5] = (-460.0118860959);
      doubleArray1[6] = (-2360.034838);
      doubleArray1[7] = 0.08325;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-2360.034838));
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getD();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getD();
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      double[] doubleArray2 = eigenDecompositionImpl0.getRealEigenvalues();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (-460.0118860959);
      doubleArray0[1] = 1598.6962769331008;
      doubleArray0[2] = 134.503126224817;
      doubleArray0[3] = (-1165.369983299);
      doubleArray0[4] = 2481.4;
      doubleArray0[5] = 0.08325;
      doubleArray0[6] = (-2360.034838);
      doubleArray0[7] = 1777.867135467;
      doubleArray0[8] = 1205.61077;
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = (-2360.034838);
      doubleArray1[1] = (-460.0118860959);
      doubleArray1[2] = 1777.867135467;
      doubleArray1[3] = 0.08325;
      doubleArray1[4] = 1777.867135467;
      doubleArray1[5] = (-460.0118860959);
      doubleArray1[6] = (-2360.034838);
      doubleArray1[7] = 0.08325;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-2360.034838));
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      DecompositionSolver decompositionSolver1 = eigenDecompositionImpl0.getSolver();
      double[] doubleArray2 = eigenDecompositionImpl0.getImagEigenvalues();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 1828.0690969796108;
      doubleArray0[2] = (-720.03);
      doubleArray0[3] = (-1277.08361928);
      doubleArray0[4] = 1.0E-12;
      doubleArray0[5] = 177.367;
      doubleArray0[6] = 557.082247;
      doubleArray0[7] = 3226.424970730395;
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
      OpenMapRealVector openMapRealVector1 = new OpenMapRealVector((RealVector) openMapRealVector0);
      OpenMapRealMatrix openMapRealMatrix0 = openMapRealVector1.outerproduct(openMapRealVector0);
      OpenMapRealMatrix openMapRealMatrix1 = new OpenMapRealMatrix(openMapRealMatrix0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(openMapRealMatrix1, 1.0E-12);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (-460.0118860959);
      doubleArray0[1] = 1598.6962769331008;
      doubleArray0[2] = 134.503126224817;
      doubleArray0[3] = (-1165.369983299);
      doubleArray0[4] = 2481.4;
      doubleArray0[5] = 0.08325;
      doubleArray0[7] = 1777.867135467;
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = (-2360.034838);
      doubleArray1[1] = (-460.0118860959);
      doubleArray1[2] = 1777.867135467;
      doubleArray1[3] = 0.08325;
      doubleArray1[4] = 1777.867135467;
      doubleArray1[5] = (-460.0118860959);
      doubleArray1[6] = (-2360.034838);
      doubleArray1[7] = 0.08325;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 1748.476;
      doubleArray0[1] = 529.31441765;
      doubleArray0[1] = 0.0;
      doubleArray0[3] = (-2331.9392203);
      doubleArray0[4] = (-264.39609978);
      doubleArray0[3] = (-1713.37465);
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = 529.31441765;
      doubleArray1[1] = 2.0;
      doubleArray1[2] = (-2331.9392203);
      doubleArray1[3] = 529.31441765;
      doubleArray1[4] = 0.0;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 1748.476;
      doubleArray0[1] = 529.31441765;
      doubleArray0[2] = 1748.476;
      doubleArray0[3] = (-2331.9392203);
      doubleArray0[4] = (-264.39609978);
      doubleArray0[5] = (-1713.37465);
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = 529.31441765;
      doubleArray1[1] = 2.0;
      doubleArray1[3] = 529.31441765;
      doubleArray1[4] = 1748.476;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getVT();
      double[] doubleArray2 = eigenDecompositionImpl0.getRealEigenvalues();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (-460.0118860959);
      doubleArray0[1] = 1598.6962769331008;
      doubleArray0[2] = 134.503126224817;
      doubleArray0[3] = (-1165.369983299);
      doubleArray0[4] = (-2448.0003023143);
      doubleArray0[5] = 0.08325;
      doubleArray0[6] = (-2360.034838);
      doubleArray0[7] = 1777.867135467;
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = (-2360.034838);
      doubleArray1[1] = (-460.0118860959);
      doubleArray1[2] = 1777.867135467;
      doubleArray1[3] = 0.08325;
      doubleArray1[4] = 1777.867135467;
      doubleArray1[5] = (-460.0118860959);
      doubleArray1[6] = (-2360.034838);
      doubleArray1[7] = 0.08325;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-2360.034838));
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      double[] doubleArray2 = eigenDecompositionImpl0.getImagEigenvalues();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (-460.0118860959);
      doubleArray0[1] = 1598.6962769331008;
      doubleArray0[2] = 134.503126224817;
      doubleArray0[3] = (-1165.369983299);
      doubleArray0[4] = 2481.4;
      doubleArray0[5] = 0.08325;
      doubleArray0[6] = (-2360.034838);
      doubleArray0[7] = 1777.867135467;
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = (-2360.034838);
      doubleArray1[1] = (-460.0118860959);
      doubleArray1[2] = 1777.867135467;
      doubleArray1[3] = 0.08325;
      doubleArray1[4] = 1777.867135467;
      doubleArray1[5] = (-460.0118860959);
      doubleArray1[6] = (-2360.034838);
      doubleArray1[7] = 0.08325;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-2360.034838));
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = (-46.8213838);
      doubleArray0[2] = 1.1102230246251565E-14;
      doubleArray0[3] = 1695.9346669312044;
      doubleArray0[4] = (-806.1840415124);
      doubleArray0[5] = 1533.362154;
      doubleArray0[6] = Double.POSITIVE_INFINITY;
      doubleArray0[7] = 1.0E-12;
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
      openMapRealVector0.unitize();
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, false);
      RealMatrix realMatrix0 = openMapRealVector0.outerProduct((RealVector) arrayRealVector0);
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 237.286060231);
      } catch(RuntimeException e) {
         //
         // 
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 1748.476;
      doubleArray0[1] = 529.31441765;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = (-2331.9392203);
      doubleArray0[4] = (-264.39609978);
      doubleArray0[5] = (-1713.37465);
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = 529.31441765;
      doubleArray1[1] = 2.0;
      doubleArray1[2] = (-2331.9392203);
      doubleArray1[3] = 529.31441765;
      doubleArray1[4] = 0.0;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getVT();
      double[] doubleArray2 = eigenDecompositionImpl0.getRealEigenvalues();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (-523.7828654774971);
      doubleArray0[1] = (-2359.381989);
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 0.0;
      ArrayRealVector arrayRealVector0 = new ArrayRealVector();
      ArrayRealVector arrayRealVector1 = new ArrayRealVector(doubleArray0, arrayRealVector0);
      RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 1063.8003874662554);
      double double0 = eigenDecompositionImpl0.getDeterminant();
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(30, 30);
      OpenMapRealMatrix openMapRealMatrix1 = new OpenMapRealMatrix(openMapRealMatrix0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(openMapRealMatrix1, (-1934.0));
      // Undeclared exception!
      eigenDecompositionImpl0.getSolver();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      double[][] doubleArray0 = new double[1][0];
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = 0.0;
      doubleArray1[1] = (-2520.8021065);
      doubleArray1[2] = 0.0;
      doubleArray1[3] = 1491.0;
      doubleArray1[4] = 54.0;
      doubleArray1[5] = 1320.652359502579;
      doubleArray1[6] = (-1.0);
      doubleArray0[0] = doubleArray1;
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
      RealMatrix realMatrix0 = array2DRowRealMatrix0.scalarAdd((-2520.8021065));
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
      } catch(RuntimeException e) {
         //
         // no entry at indices (1, 0) in a 1x7 matrix
         //
         verifyException("org.apache.commons.math.linear.Array2DRowRealMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      int int0 = 1995;
      OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(1995, 1995);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(openMapRealMatrix0, (-38.0));
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (-1109.19913754291);
      doubleArray0[1] = (-3074.014424075);
      doubleArray0[2] = 27.0;
      doubleArray0[3] = (-2826.03101688);
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
      RealMatrix realMatrix0 = array2DRowRealMatrix0.getColumnMatrix(0);
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (-1.0));
      } catch(RuntimeException e) {
         //
         // a 4x1 matrix was provided instead of a square matrix
         //
         verifyException("org.apache.commons.math.linear.TriDiagonalTransformer", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (-1557.633464230626);
      doubleArray0[1] = 0.0;
      doubleArray0[2] = (-1316.509048269);
      doubleArray0[3] = 0.0;
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, doubleArray0);
      ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, true);
      RealMatrix realMatrix0 = arrayRealVector0.outerProduct(arrayRealVector1);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (-1557.633464230626));
      try { 
        eigenDecompositionImpl0.getRealEigenvalue(963);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 963
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, 0.0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl((RealMatrix) null, 110.9477398593789);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix();
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, (-242.516405));
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.linear.TriDiagonalTransformer", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl((double[]) null, (double[]) null, 0.0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 3260.2565828;
      doubleArray0[3] = (-2251.0);
      doubleArray0[4] = (-642.4700724832);
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, 1165.21694);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(16, 16);
      OpenMapRealMatrix openMapRealMatrix1 = new OpenMapRealMatrix(openMapRealMatrix0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(openMapRealMatrix1, 0.0);
      try { 
        eigenDecompositionImpl0.getRealEigenvalue(16);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 16
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (-1132.63415109605);
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, (-1132.63415109605));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl((double[]) null, (double[]) null, 186.8);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = (-46.8213838);
      doubleArray0[2] = 1.1102230246251565E-14;
      doubleArray0[3] = 1675.5087655992;
      doubleArray0[4] = (-806.1840415124);
      doubleArray0[5] = 1533.362154;
      doubleArray0[6] = Double.POSITIVE_INFINITY;
      doubleArray0[7] = 1.0E-12;
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, false);
      RealMatrix realMatrix0 = openMapRealVector0.outerProduct((RealVector) arrayRealVector0);
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 237.286060231);
      } catch(RuntimeException e) {
         //
         // eigen decomposition of assymetric matrices not supported yet
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, 75.56);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (-460.0118860959);
      doubleArray0[1] = 1598.6962769331008;
      doubleArray0[2] = 134.503126224817;
      doubleArray0[3] = (-1165.369983299);
      doubleArray0[4] = 2481.4;
      doubleArray0[5] = 0.08325;
      doubleArray0[6] = (-2360.034838);
      doubleArray0[7] = 1777.867135467;
      doubleArray0[8] = 1205.61077;
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = (-2360.034838);
      doubleArray1[1] = (-460.0118860959);
      doubleArray1[2] = 1777.867135467;
      doubleArray1[3] = 0.08325;
      doubleArray1[4] = 1777.867135467;
      doubleArray1[5] = (-460.0118860959);
      doubleArray1[6] = (-2360.034838);
      doubleArray1[7] = 0.08325;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-2360.034838));
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getV();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getVT();
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 1828.0690969796108;
      doubleArray0[1] = 1.428348867574109;
      doubleArray0[2] = (-720.03);
      doubleArray0[3] = (-1277.08361928);
      doubleArray0[4] = 1.0E-12;
      doubleArray0[5] = 177.367;
      doubleArray0[6] = 557.082247;
      doubleArray0[7] = 3226.424970730395;
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
      OpenMapRealVector openMapRealVector1 = new OpenMapRealVector((RealVector) openMapRealVector0);
      OpenMapRealMatrix openMapRealMatrix0 = openMapRealVector1.outerproduct(openMapRealVector0);
      OpenMapRealVector openMapRealVector2 = openMapRealVector1.mapInvToSelf();
      OpenMapRealMatrix openMapRealMatrix1 = new OpenMapRealMatrix(openMapRealMatrix0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(openMapRealMatrix1, 1.0E-12);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 1828.0690969796108;
      doubleArray0[1] = 1.05;
      doubleArray0[2] = (-720.03);
      doubleArray0[3] = (-1277.08361928);
      doubleArray0[4] = 1.0E-12;
      doubleArray0[5] = 177.367;
      doubleArray0[6] = 557.082247;
      doubleArray0[7] = 3226.424970730395;
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
      OpenMapRealVector openMapRealVector1 = new OpenMapRealVector((RealVector) openMapRealVector0);
      OpenMapRealMatrix openMapRealMatrix0 = openMapRealVector1.outerproduct(openMapRealVector0);
      OpenMapRealMatrix openMapRealMatrix1 = new OpenMapRealMatrix(openMapRealMatrix0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(openMapRealMatrix1, 1.0E-12);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl((RealMatrix) null, (-3417.294503873));
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Array2DRowRealMatrix array2DRowRealMatrix0 = null;
      try {
        array2DRowRealMatrix0 = new Array2DRowRealMatrix((double[]) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.linear.Array2DRowRealMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 1.0;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 93.436719;
      doubleArray0[4] = 2737.777;
      doubleArray0[5] = Double.NEGATIVE_INFINITY;
      doubleArray0[6] = 100.0;
      doubleArray0[7] = 1.0;
      double double0 = 0.0;
      doubleArray0[8] = 0.0;
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
      try { 
        array2DRowRealMatrix0.getRowMatrix((-710));
      } catch(RuntimeException e) {
         //
         // row index -710 out of allowed range [0, 8]
         //
         verifyException("org.apache.commons.math.linear.MatrixUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      int int0 = 382;
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(382);
      OpenMapRealVector openMapRealVector1 = new OpenMapRealVector(0, (-9));
      try { 
        openMapRealVector0.outerproduct(openMapRealVector1);
      } catch(IllegalArgumentException e) {
         //
         // vector length mismatch: got 382 but expected 0
         //
         verifyException("org.apache.commons.math.MathRuntimeException", e);
      }
  }
}
