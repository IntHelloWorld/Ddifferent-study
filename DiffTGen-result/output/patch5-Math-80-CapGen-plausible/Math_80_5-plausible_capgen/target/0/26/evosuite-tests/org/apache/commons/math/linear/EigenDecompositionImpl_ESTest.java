/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 28 14:49:05 GMT 2020
 */

package org.apache.commons.math.linear;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.linear.Array2DRowRealMatrix;
import org.apache.commons.math.linear.ArrayRealVector;
import org.apache.commons.math.linear.DecompositionSolver;
import org.apache.commons.math.linear.EigenDecompositionImpl;
import org.apache.commons.math.linear.OpenMapRealMatrix;
import org.apache.commons.math.linear.OpenMapRealVector;
import org.apache.commons.math.linear.RealMatrix;
import org.apache.commons.math.linear.RealVector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EigenDecompositionImpl_ESTest extends EigenDecompositionImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (-1573.9348049);
      doubleArray0[1] = (-1573.9348049);
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
      RealMatrix realMatrix0 = openMapRealVector0.outerProduct(doubleArray0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getD();
      double double0 = eigenDecompositionImpl0.getDeterminant();
      RealMatrix realMatrix2 = eigenDecompositionImpl0.getD();
      RealMatrix realMatrix3 = eigenDecompositionImpl0.getD();
      double[] doubleArray1 = eigenDecompositionImpl0.getImagEigenvalues();
      double[] doubleArray2 = eigenDecompositionImpl0.getImagEigenvalues();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 535.7260781659727;
      doubleArray0[1] = 4.0;
      doubleArray0[2] = 214.166;
      doubleArray0[3] = (-2074.8810196334);
      doubleArray0[4] = 1361.546449471;
      doubleArray0[5] = 0.0;
      doubleArray0[6] = (-842.188891);
      doubleArray0[2] = 4.0;
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = 1361.546449471;
      doubleArray1[2] = 1361.546449471;
      doubleArray1[3] = 214.166;
      doubleArray1[4] = (-842.188891);
      doubleArray1[5] = (-842.188891);
      doubleArray1[6] = 535.7260781659727;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      try { 
        eigenDecompositionImpl0.getRealEigenvalue((-356));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -356
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (-4145.37568949);
      doubleArray0[1] = (-1.0);
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = (-1.0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-1.0));
      int int0 = 0;
      RealVector realVector0 = eigenDecompositionImpl0.getEigenvector(0);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getD();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getVT();
      RealMatrix realMatrix2 = eigenDecompositionImpl0.getD();
      RealMatrix realMatrix3 = eigenDecompositionImpl0.getV();
      RealMatrix realMatrix4 = eigenDecompositionImpl0.getD();
      RealVector realVector1 = eigenDecompositionImpl0.getEigenvector(0);
      RealMatrix realMatrix5 = eigenDecompositionImpl0.getD();
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector();
      RealMatrix realMatrix6 = eigenDecompositionImpl0.getD();
      RealVector realVector2 = eigenDecompositionImpl0.getEigenvector(0);
      RealMatrix realMatrix7 = eigenDecompositionImpl0.getVT();
      try { 
        eigenDecompositionImpl0.getRealEigenvalue(41);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 41
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 537.658507727;
      doubleArray0[1] = 4.0;
      doubleArray0[2] = 214.166;
      doubleArray0[3] = 214.166;
      doubleArray0[4] = 1361.546449471;
      doubleArray0[5] = 0.0;
      doubleArray0[6] = (-842.188891);
      doubleArray0[7] = (-2055.6222246956);
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = 1361.546449471;
      doubleArray1[1] = 537.658507727;
      doubleArray1[2] = 1361.546449471;
      doubleArray1[3] = 214.166;
      doubleArray1[4] = (-842.188891);
      doubleArray1[5] = (-2074.8810196334);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      try { 
        eigenDecompositionImpl0.getRealEigenvalue((-356));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -356
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (double) (-5);
      doubleArray0[2] = 0.0;
      double[][] doubleArray1 = new double[2][9];
      doubleArray1[0] = doubleArray0;
      doubleArray1[1] = doubleArray0;
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray1, false);
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, 0.0);
      } catch(RuntimeException e) {
         //
         // eigen decomposition of assymetric matrices not supported yet
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 535.7260781659727;
      doubleArray0[1] = 4.0;
      doubleArray0[2] = 214.166;
      doubleArray0[3] = (-2074.8810196334);
      doubleArray0[4] = 1361.546449471;
      doubleArray0[5] = 0.0;
      doubleArray0[6] = (-842.188891);
      doubleArray0[2] = (-2055.6222246956);
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = 1361.546449471;
      doubleArray1[2] = 1361.546449471;
      doubleArray1[3] = 214.166;
      doubleArray1[4] = (-842.188891);
      doubleArray1[5] = (-2074.8810196334);
      doubleArray1[6] = 535.7260781659727;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      try { 
        eigenDecompositionImpl0.getRealEigenvalue((-356));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -356
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 537.658507727;
      doubleArray0[1] = 4.0;
      doubleArray0[2] = 214.166;
      doubleArray0[3] = (-2074.8810196334);
      doubleArray0[4] = 1361.546449471;
      doubleArray0[5] = 0.0;
      doubleArray0[6] = (-842.188891);
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = 1361.546449471;
      doubleArray1[1] = 537.658507727;
      doubleArray1[2] = 1361.546449471;
      doubleArray1[3] = 214.166;
      doubleArray1[4] = (-842.188891);
      doubleArray1[5] = (-2074.8810196334);
      doubleArray1[6] = 537.658507727;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      try { 
        eigenDecompositionImpl0.getRealEigenvalue((-356));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -356
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 537.658507727;
      doubleArray0[1] = 4.0;
      doubleArray0[2] = 214.166;
      doubleArray0[3] = (-2074.8810196334);
      doubleArray0[4] = 1361.546449471;
      doubleArray0[5] = 0.0;
      doubleArray0[6] = (-842.188891);
      doubleArray0[2] = (-2055.6222246956);
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = 1361.546449471;
      doubleArray1[1] = (-2074.8810196334);
      doubleArray1[4] = (-842.188891);
      doubleArray1[5] = (-2074.8810196334);
      doubleArray1[6] = 537.658507727;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      try { 
        eigenDecompositionImpl0.getRealEigenvalue((-356));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -356
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 537.658507727;
      doubleArray0[1] = 4.0;
      doubleArray0[2] = 214.166;
      doubleArray0[3] = (-2074.8810196334);
      doubleArray0[4] = 1361.546449471;
      doubleArray0[5] = 0.0;
      doubleArray0[6] = (-842.188891);
      doubleArray0[7] = (-2055.6222246956);
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = 1361.546449471;
      doubleArray1[1] = 537.658507727;
      doubleArray1[2] = 1361.546449471;
      doubleArray1[3] = 214.166;
      doubleArray1[4] = (-842.188891);
      doubleArray1[5] = (-2074.8810196334);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      try { 
        eigenDecompositionImpl0.getRealEigenvalue((-356));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -356
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[1] = 4.0;
      doubleArray0[2] = 214.166;
      doubleArray0[3] = (-2074.8810196334);
      doubleArray0[4] = 1361.546449471;
      doubleArray0[5] = 0.0;
      doubleArray0[6] = (-842.188891);
      doubleArray0[7] = (-2055.6222246956);
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = 1361.546449471;
      doubleArray1[1] = 537.658507727;
      doubleArray1[2] = 1361.546449471;
      doubleArray1[3] = 214.166;
      doubleArray1[4] = (-842.188891);
      doubleArray1[5] = (-2074.8810196334);
      doubleArray1[6] = 537.658507727;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      try { 
        eigenDecompositionImpl0.getRealEigenvalue((-356));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -356
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 537.658507727;
      doubleArray0[1] = 4.0;
      doubleArray0[2] = 214.166;
      doubleArray0[3] = (-2074.8810196334);
      doubleArray0[4] = 1361.546449471;
      doubleArray0[5] = 0.0;
      doubleArray0[6] = (-842.188891);
      doubleArray0[7] = (-2055.6222246956);
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = 1361.546449471;
      doubleArray1[1] = (-2055.6222246956);
      doubleArray1[2] = 1361.546449471;
      doubleArray1[3] = 214.166;
      doubleArray1[4] = (-842.188891);
      doubleArray1[5] = (-2074.8810196334);
      doubleArray1[6] = 537.658507727;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      try { 
        eigenDecompositionImpl0.getRealEigenvalue((-356));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -356
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (-1573.9348049);
      doubleArray0[0] = 473.099;
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
      OpenMapRealMatrix openMapRealMatrix0 = openMapRealVector0.outerproduct(openMapRealVector0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(openMapRealMatrix0, (-0.43682847464914465));
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      double double0 = new Double((-0.43682847464914465));
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getD();
      double double1 = eigenDecompositionImpl0.getDeterminant();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getD();
      double[] doubleArray1 = eigenDecompositionImpl0.getImagEigenvalues();
      double[] doubleArray2 = eigenDecompositionImpl0.getImagEigenvalues();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 537.658507727;
      doubleArray0[1] = 4.0;
      doubleArray0[2] = 214.166;
      doubleArray0[3] = (-2074.8810196334);
      doubleArray0[4] = 1361.546449471;
      doubleArray0[5] = 0.0;
      doubleArray0[6] = (-842.188891);
      doubleArray0[7] = (-2055.6222246956);
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = 1361.546449471;
      doubleArray1[1] = 537.658507727;
      doubleArray1[2] = 1361.546449471;
      doubleArray1[3] = 214.166;
      doubleArray1[4] = (-842.188891);
      doubleArray1[5] = (-2074.8810196334);
      doubleArray1[6] = 537.658507727;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getVT();
      try { 
        eigenDecompositionImpl0.getRealEigenvalue((-356));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -356
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      double[][] doubleArray0 = new double[1][0];
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = 0.333;
      doubleArray0[0] = doubleArray1;
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, 0.333);
      double double0 = eigenDecompositionImpl0.getRealEigenvalue(0);
      double double1 = eigenDecompositionImpl0.getRealEigenvalue(0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = (-349.8270472006112);
      doubleArray0[2] = 2.0;
      doubleArray0[3] = 1039.343483734;
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
      RealMatrix realMatrix0 = array2DRowRealMatrix0.transpose();
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (-911.113474629518));
      } catch(RuntimeException e) {
         //
         // no entry at indices (1, 0) in a 1x4 matrix
         //
         verifyException("org.apache.commons.math.linear.Array2DRowRealMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (-4145.37568949);
      doubleArray0[1] = (-1.0);
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = (-1.0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-1.0));
      int int0 = 0;
      RealVector realVector0 = eigenDecompositionImpl0.getEigenvector(0);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getD();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getVT();
      RealMatrix realMatrix2 = eigenDecompositionImpl0.getD();
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      RealMatrix realMatrix3 = eigenDecompositionImpl0.getV();
      RealMatrix realMatrix4 = eigenDecompositionImpl0.getD();
      RealMatrix realMatrix5 = eigenDecompositionImpl0.getV();
      RealVector realVector1 = eigenDecompositionImpl0.getEigenvector(0);
      RealMatrix realMatrix6 = eigenDecompositionImpl0.getD();
      try { 
        eigenDecompositionImpl0.getEigenvector((-1048));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1048
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (-4145.37568949);
      doubleArray0[1] = (-1.0);
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = (-1.0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-1.0));
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getD();
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getVT();
      RealMatrix realMatrix2 = eigenDecompositionImpl0.getD();
      DecompositionSolver decompositionSolver1 = eigenDecompositionImpl0.getSolver();
      RealMatrix realMatrix3 = eigenDecompositionImpl0.getV();
      RealMatrix realMatrix4 = eigenDecompositionImpl0.getD();
      RealMatrix realMatrix5 = eigenDecompositionImpl0.getV();
      RealMatrix realMatrix6 = eigenDecompositionImpl0.getD();
      try { 
        eigenDecompositionImpl0.getEigenvector((-1048));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1048
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (-1368.4545505311853);
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, true);
      RealMatrix realMatrix0 = arrayRealVector0.outerProduct(doubleArray0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (-1368.4545505311853));
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getV();
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      RealVector realVector0 = arrayRealVector0.subtract(doubleArray0);
      RealMatrix realMatrix2 = eigenDecompositionImpl0.getD();
      double[] doubleArray1 = eigenDecompositionImpl0.getImagEigenvalues();
      int int0 = (-3063);
      RealMatrix realMatrix3 = eigenDecompositionImpl0.getV();
      arrayRealVector0.data = doubleArray0;
      try { 
        eigenDecompositionImpl0.getRealEigenvalue((-3063));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3063
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (-1573.9348049);
      doubleArray0[1] = 473.099;
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
      RealMatrix realMatrix0 = openMapRealVector0.outerProduct(doubleArray0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      try { 
        eigenDecompositionImpl0.getImagEigenvalue(1565);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1565
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      double[][] doubleArray0 = new double[1][2];
      double[] doubleArray1 = new double[9];
      doubleArray1[0] = (-3340.356100244);
      doubleArray1[1] = 0.0;
      doubleArray1[2] = 1322.303373869;
      doubleArray1[3] = (-901.07290098);
      doubleArray1[4] = -0.0;
      doubleArray1[5] = 0.0;
      doubleArray1[6] = (-2562.300455988);
      doubleArray1[7] = 27.0;
      doubleArray1[8] = 3766.397934315816;
      doubleArray0[0] = doubleArray1;
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
      RealMatrix realMatrix0 = array2DRowRealMatrix0.transpose();
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (-3340.356100244));
      } catch(RuntimeException e) {
         //
         // a 9x1 matrix was provided instead of a square matrix
         //
         verifyException("org.apache.commons.math.linear.TriDiagonalTransformer", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix();
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, 1322.3530413690805);
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.linear.TriDiagonalTransformer", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 537.658507727;
      doubleArray0[1] = 4.0;
      doubleArray0[2] = 214.166;
      doubleArray0[3] = (-2074.8810196334);
      doubleArray0[4] = 1361.546449471;
      doubleArray0[5] = 0.0;
      doubleArray0[6] = (-842.188891);
      doubleArray0[7] = (-2055.6222246956);
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = 1361.546449471;
      doubleArray1[1] = 537.658507727;
      doubleArray1[2] = 1361.546449471;
      doubleArray1[3] = 214.166;
      doubleArray1[4] = (-842.188891);
      doubleArray1[5] = (-2074.8810196334);
      doubleArray1[6] = 537.658507727;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      try { 
        eigenDecompositionImpl0.getRealEigenvalue((-356));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -356
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = 1023.29310205591;
      doubleArray0[1] = (-1.0);
      doubleArray0[2] = 0.563;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = 4.0;
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0);
      RealMatrix realMatrix0 = arrayRealVector0.outerProduct(doubleArray0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 1272.56323015926);
      int int0 = 2263;
      try { 
        eigenDecompositionImpl0.getEigenvector(2263);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2263
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl((double[]) null, (double[]) null, 0.0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl((RealMatrix) null, 0.0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, 0.0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = -0.0;
      doubleArray0[1] = 2.2250738585072014E-308;
      doubleArray0[2] = 0.0;
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
      int int0 = 3573;
      OpenMapRealVector openMapRealVector1 = new OpenMapRealVector(openMapRealVector0, 3573);
      OpenMapRealVector openMapRealVector2 = new OpenMapRealVector((RealVector) openMapRealVector1);
      OpenMapRealMatrix openMapRealMatrix0 = openMapRealVector2.outerproduct(openMapRealVector1);
      OpenMapRealVector openMapRealVector3 = openMapRealVector0.append(0.0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(openMapRealMatrix0, 694.759328020866);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(52, 52);
      RealMatrix realMatrix0 = array2DRowRealMatrix0.scalarMultiply(52);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 2022.8637942798);
      // Undeclared exception!
      eigenDecompositionImpl0.getEigenvector(9);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 54.0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 1.05;
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, 0.0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 537.658507727;
      doubleArray0[1] = 4.0;
      doubleArray0[2] = 214.166;
      doubleArray0[3] = (-2074.8810196334);
      doubleArray0[4] = 1361.546449471;
      doubleArray0[5] = 0.0;
      doubleArray0[6] = (-842.188891);
      doubleArray0[7] = (-2055.6222246956);
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = 1361.546449471;
      doubleArray1[1] = 537.658507727;
      doubleArray1[2] = 1361.546449471;
      doubleArray1[3] = 214.166;
      doubleArray1[4] = (-842.188891);
      doubleArray1[5] = (-2074.8810196334);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-11.154038777600103));
      try { 
        eigenDecompositionImpl0.getRealEigenvalue((-356));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -356
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (-2317.02);
      doubleArray0[1] = 12.566370614359172;
      doubleArray0[2] = 54.0;
      doubleArray0[3] = 717.6725690656369;
      doubleArray0[4] = 1.0E-12;
      doubleArray0[5] = 1030.752703243685;
      doubleArray0[6] = 1318.0;
      doubleArray0[7] = (-118.04);
      doubleArray0[8] = 0.25;
      double[] doubleArray1 = new double[9];
      doubleArray1[0] = 717.6725690656369;
      doubleArray1[1] = 1.0E-12;
      doubleArray1[2] = 1.0E-12;
      doubleArray1[3] = (-1.0);
      doubleArray1[4] = 1318.0;
      doubleArray1[5] = (-2317.02);
      doubleArray1[6] = 1318.0;
      doubleArray1[7] = 0.25;
      doubleArray1[8] = 54.0;
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-2317.02));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 537.658507727;
      doubleArray0[1] = 4.0;
      doubleArray0[2] = 214.166;
      doubleArray0[3] = (-2074.8810196334);
      doubleArray0[4] = 1361.546449471;
      doubleArray0[6] = (-842.188891);
      doubleArray0[7] = (-2055.6222246956);
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = 1361.546449471;
      doubleArray1[1] = 537.658507727;
      doubleArray1[3] = 214.166;
      doubleArray1[4] = (-842.188891);
      doubleArray1[5] = (-2074.8810196334);
      doubleArray1[6] = 537.658507727;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getV();
      try { 
        eigenDecompositionImpl0.getRealEigenvalue((-356));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -356
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 3776.7707098;
      doubleArray0[2] = 5118.287;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = 860.3;
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, 3465.38716);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (-1573.9348049);
      doubleArray0[1] = 473.099;
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
      RealMatrix realMatrix0 = openMapRealVector0.outerProduct(doubleArray0);
      OpenMapRealVector openMapRealVector1 = openMapRealVector0.append(doubleArray0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      double[] doubleArray1 = eigenDecompositionImpl0.getImagEigenvalues();
      try { 
        eigenDecompositionImpl0.getImagEigenvalue(1565);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1565
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 12.566370614359172;
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, (-1934.7564638311));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (-1858.0);
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, (-598.2034756));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }
}
