/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 28 14:43:25 GMT 2020
 */

package org.apache.commons.math.linear;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.linear.Array2DRowRealMatrix;
import org.apache.commons.math.linear.ArrayRealVector;
import org.apache.commons.math.linear.BlockRealMatrix;
import org.apache.commons.math.linear.DecompositionSolver;
import org.apache.commons.math.linear.EigenDecompositionImpl;
import org.apache.commons.math.linear.OpenMapRealMatrix;
import org.apache.commons.math.linear.OpenMapRealVector;
import org.apache.commons.math.linear.RealMatrix;
import org.apache.commons.math.linear.RealVector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EigenDecompositionImpl_ESTest extends EigenDecompositionImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double[] doubleArray0 = new double[21];
      doubleArray0[13] = (-1907.120182596731);
      doubleArray0[1] = 0.0;
      doubleArray0[13] = 0.0;
      doubleArray0[3] = (-2242.4345);
      doubleArray0[4] = (-2907.01709);
      doubleArray0[11] = 0.0;
      doubleArray0[6] = (-3096.5400564868096);
      doubleArray0[7] = 97.61036;
      ArrayRealVector arrayRealVector0 = new ArrayRealVector();
      ArrayRealVector arrayRealVector1 = new ArrayRealVector(doubleArray0, arrayRealVector0);
      RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
      } catch(RuntimeException e) {
         //
         // 
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 2.2250738585072014E-308;
      doubleArray0[3] = (-1086.90158364715);
      doubleArray0[4] = 4163.08;
      doubleArray0[5] = 1944.1718;
      doubleArray0[6] = (-2043.567738085);
      doubleArray0[7] = (-3844.77);
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = 4163.08;
      doubleArray1[1] = (-3844.77);
      doubleArray1[2] = 1944.1718;
      doubleArray1[3] = 1944.1718;
      doubleArray1[4] = 1944.1718;
      doubleArray1[5] = (-3844.77);
      doubleArray1[6] = 0.0;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-1086.90158364715));
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      double[] doubleArray2 = eigenDecompositionImpl0.getImagEigenvalues();
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getV();
      double[] doubleArray3 = eigenDecompositionImpl0.getImagEigenvalues();
      double double0 = eigenDecompositionImpl0.getImagEigenvalue(0);
      double[] doubleArray4 = eigenDecompositionImpl0.getRealEigenvalues();
      double[] doubleArray5 = eigenDecompositionImpl0.getImagEigenvalues();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = Double.NaN;
      doubleArray0[3] = (-1086.90158364715);
      doubleArray0[4] = 4163.08;
      doubleArray0[5] = 1944.1718;
      doubleArray0[6] = (-2043.567738085);
      doubleArray0[7] = (-3844.77);
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = 4163.08;
      doubleArray1[1] = (-3844.77);
      doubleArray1[2] = 1944.1718;
      doubleArray1[3] = (-3844.77);
      doubleArray1[4] = 1944.1718;
      doubleArray1[5] = (-3844.77);
      doubleArray1[6] = 0.0;
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-1086.90158364715));
      } catch(RuntimeException e) {
         //
         // 
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = (-1086.90158364715);
      doubleArray0[5] = 1944.1718;
      doubleArray0[6] = (-2043.567738085);
      doubleArray0[7] = (-3844.77);
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = 4163.08;
      doubleArray1[1] = (-3844.77);
      doubleArray1[2] = 1944.1718;
      doubleArray1[3] = (-3844.77);
      doubleArray1[4] = 1944.1718;
      doubleArray1[5] = (-3844.77);
      doubleArray1[6] = 0.0;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-1086.90158364715));
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      double[] doubleArray2 = eigenDecompositionImpl0.getImagEigenvalues();
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getV();
      try { 
        eigenDecompositionImpl0.getEigenvector((-823));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -823
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 2.2250738585072014E-308;
      doubleArray0[3] = (-1086.90158364715);
      doubleArray0[4] = 4163.08;
      doubleArray0[5] = 1944.1718;
      doubleArray0[6] = (-2043.567738085);
      doubleArray0[7] = (-3844.77);
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = 4163.08;
      doubleArray1[1] = (-3844.77);
      doubleArray1[2] = 1944.1718;
      doubleArray1[3] = 2.2250738585072014E-308;
      doubleArray1[4] = 1944.1718;
      doubleArray1[5] = (-3844.77);
      doubleArray1[6] = 0.0;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-1086.90158364715));
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      double[] doubleArray2 = eigenDecompositionImpl0.getImagEigenvalues();
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getV();
      try { 
        eigenDecompositionImpl0.getEigenvector((-823));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -823
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (-3381.610881);
      doubleArray0[1] = 506.0381177;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = 0.563;
      doubleArray0[5] = 0.0;
      doubleArray0[7] = (-1913.0794896);
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0);
      ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, true);
      RealMatrix realMatrix0 = arrayRealVector0.outerProduct(arrayRealVector1);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (-3408.988169));
      double[] doubleArray1 = eigenDecompositionImpl0.getRealEigenvalues();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(16, 16);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(openMapRealMatrix0, (-1171.209033956601));
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getVT();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getV();
      double double0 = eigenDecompositionImpl0.getDeterminant();
      RealMatrix realMatrix2 = eigenDecompositionImpl0.getD();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 2.2250738585072014E-308;
      doubleArray0[3] = (-1086.90158364715);
      doubleArray0[4] = 4163.08;
      doubleArray0[6] = (-2043.567738085);
      doubleArray0[7] = (-3844.77);
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = 4163.08;
      doubleArray1[1] = (-3844.77);
      doubleArray1[2] = 1944.1718;
      doubleArray1[3] = (-3844.77);
      doubleArray1[4] = 1944.1718;
      doubleArray1[5] = (-3844.77);
      doubleArray1[6] = 0.0;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-1086.90158364715));
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      double[] doubleArray2 = eigenDecompositionImpl0.getImagEigenvalues();
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getV();
      double[] doubleArray3 = eigenDecompositionImpl0.getImagEigenvalues();
      double double0 = eigenDecompositionImpl0.getImagEigenvalue(0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 2.2250738585072014E-308;
      doubleArray0[3] = (-1086.90158364715);
      doubleArray0[4] = 4163.08;
      doubleArray0[5] = 1944.1718;
      doubleArray0[6] = (-2043.567738085);
      doubleArray0[7] = (-3844.77);
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = 4163.08;
      doubleArray1[1] = (-3844.77);
      doubleArray1[2] = 1944.1718;
      doubleArray1[3] = (-3844.77);
      doubleArray1[4] = 1944.1718;
      doubleArray1[5] = (-3844.77);
      doubleArray1[6] = 0.0;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-1086.90158364715));
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      double[] doubleArray2 = eigenDecompositionImpl0.getImagEigenvalues();
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getV();
      double[] doubleArray3 = eigenDecompositionImpl0.getImagEigenvalues();
      double double0 = eigenDecompositionImpl0.getImagEigenvalue(0);
      double double1 = eigenDecompositionImpl0.getDeterminant();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(20, 138.6);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = Double.NEGATIVE_INFINITY;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 138.6;
      doubleArray0[3] = 138.6;
      doubleArray0[4] = 138.6;
      doubleArray0[5] = (double) 20;
      doubleArray0[6] = 0.0;
      ArrayRealVector arrayRealVector1 = new ArrayRealVector(20, 138.6);
      RealMatrix realMatrix0 = arrayRealVector0.outerProduct((RealVector) arrayRealVector1);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 20);
      double[] doubleArray1 = eigenDecompositionImpl0.getRealEigenvalues();
      double[] doubleArray2 = eigenDecompositionImpl0.getRealEigenvalues();
      try { 
        eigenDecompositionImpl0.getEigenvector(Integer.MAX_VALUE);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2147483647
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 2.2250738585072014E-308;
      doubleArray0[3] = (-1086.90158364715);
      doubleArray0[4] = 4163.08;
      doubleArray0[5] = 1944.1718;
      doubleArray0[6] = (-2043.567738085);
      doubleArray0[7] = (-3844.77);
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = 4163.08;
      doubleArray1[1] = (-3844.77);
      doubleArray1[2] = 1944.1718;
      doubleArray1[3] = (-3844.77);
      doubleArray1[4] = 1944.1718;
      doubleArray1[5] = (-3844.77);
      doubleArray1[6] = 0.0;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-1086.90158364715));
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      double[] doubleArray2 = eigenDecompositionImpl0.getImagEigenvalues();
      DecompositionSolver decompositionSolver1 = eigenDecompositionImpl0.getSolver();
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getV();
      double[] doubleArray3 = eigenDecompositionImpl0.getImagEigenvalues();
      double double0 = eigenDecompositionImpl0.getImagEigenvalue(0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 2.2250738585072014E-308;
      doubleArray0[3] = (-1086.90158364715);
      doubleArray0[4] = 4163.08;
      doubleArray0[5] = 1944.1718;
      doubleArray0[6] = (-2043.567738085);
      doubleArray0[7] = (-3844.77);
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = 4163.08;
      doubleArray1[1] = (-3844.77);
      doubleArray1[2] = 1944.1718;
      doubleArray1[3] = (-3844.77);
      doubleArray1[4] = 1944.1718;
      doubleArray1[5] = (-3844.77);
      doubleArray1[6] = 0.0;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-1086.90158364715));
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      double[] doubleArray2 = eigenDecompositionImpl0.getImagEigenvalues();
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getV();
      double[] doubleArray3 = eigenDecompositionImpl0.getImagEigenvalues();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getV();
      double double0 = eigenDecompositionImpl0.getImagEigenvalue(0);
      RealMatrix realMatrix2 = eigenDecompositionImpl0.getV();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(20, 138.6);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = Double.NEGATIVE_INFINITY;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 138.6;
      doubleArray0[3] = 138.6;
      doubleArray0[4] = 138.6;
      doubleArray0[5] = (double) 20;
      doubleArray0[6] = 138.6;
      ArrayRealVector arrayRealVector1 = new ArrayRealVector(20, 138.6);
      RealMatrix realMatrix0 = arrayRealVector0.outerProduct((RealVector) arrayRealVector1);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 20);
      double[] doubleArray1 = eigenDecompositionImpl0.getRealEigenvalues();
      double[] doubleArray2 = eigenDecompositionImpl0.getRealEigenvalues();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (-3381.610881);
      doubleArray0[1] = 506.0381177;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = 0.563;
      doubleArray0[5] = 0.0;
      doubleArray0[6] = Double.POSITIVE_INFINITY;
      doubleArray0[7] = (-1913.0794896);
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0);
      ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, true);
      RealMatrix realMatrix0 = arrayRealVector0.outerProduct(arrayRealVector1);
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (-3408.988169));
      } catch(RuntimeException e) {
         //
         // 
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix();
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, 0.0);
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.linear.TriDiagonalTransformer", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 8.013490448546;
      doubleArray0[1] = 1.05;
      doubleArray0[2] = 1.0E-12;
      doubleArray0[3] = 0.0;
      double[] doubleArray1 = new double[3];
      doubleArray1[0] = 8.013490448546;
      doubleArray1[1] = 1.05;
      doubleArray1[2] = 0.0;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 8.013490448546);
      int int0 = (-2042);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getD();
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getV();
      RealMatrix realMatrix2 = eigenDecompositionImpl0.getD();
      try { 
        eigenDecompositionImpl0.getEigenvector((-2042));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2042
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (-1907.120182596731);
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = (-2242.4345);
      doubleArray0[4] = (-2907.01709);
      doubleArray0[5] = 2057.493399862;
      doubleArray0[6] = (-3096.5400564868096);
      doubleArray0[7] = 97.61035729240757;
      ArrayRealVector arrayRealVector0 = new ArrayRealVector();
      ArrayRealVector arrayRealVector1 = new ArrayRealVector(doubleArray0, arrayRealVector0);
      RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 2057.493399862);
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl((RealMatrix) null, 1.01);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 256.47526244395505;
      doubleArray0[1] = (-3167.757070742);
      doubleArray0[2] = 0.0;
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, 256.47526244395505);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl((double[]) null, (double[]) null, (-4148.8415594551));
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      double[][] doubleArray0 = new double[1][6];
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = 0.0;
      doubleArray1[1] = 0.0;
      doubleArray1[2] = 993.9722960293025;
      doubleArray1[3] = (-1424.9);
      doubleArray1[4] = (-1551.40675816);
      doubleArray1[5] = 4856.0;
      doubleArray1[6] = (-1162.16693862559);
      doubleArray1[7] = 1.5;
      doubleArray0[0] = doubleArray1;
      BlockRealMatrix blockRealMatrix0 = new BlockRealMatrix(doubleArray0);
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(blockRealMatrix0, (-1424.9));
      } catch(RuntimeException e) {
         //
         // no entry at indices (1, 0) in a 1x8 matrix
         //
         verifyException("org.apache.commons.math.linear.BlockRealMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 2.0;
      doubleArray0[1] = (-1639.8851417930541);
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, 0.0);
      } catch(RuntimeException e) {
         //
         // a 2x1 matrix was provided instead of a square matrix
         //
         verifyException("org.apache.commons.math.linear.TriDiagonalTransformer", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(4, 4);
      OpenMapRealVector openMapRealVector1 = new OpenMapRealVector(openMapRealVector0);
      OpenMapRealMatrix openMapRealMatrix0 = openMapRealVector1.outerproduct(openMapRealVector0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(openMapRealMatrix0, 1.0E-12);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = Double.NEGATIVE_INFINITY;
      doubleArray0[1] = -0.0;
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, -0.0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, 0.0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl((double[]) null, (double[]) null, 1341.25545);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      double[] doubleArray0 = new double[21];
      doubleArray0[0] = (-1907.120182596731);
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = (-2242.4345);
      doubleArray0[4] = (-2907.01709);
      doubleArray0[5] = (-1907.120182596731);
      doubleArray0[6] = (-3096.5400564868096);
      doubleArray0[7] = 97.61035729240757;
      ArrayRealVector arrayRealVector0 = new ArrayRealVector();
      ArrayRealVector arrayRealVector1 = new ArrayRealVector(doubleArray0, arrayRealVector0);
      RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (-1907.120182596731));
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      DecompositionSolver decompositionSolver1 = eigenDecompositionImpl0.getSolver();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getVT();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[1] = 506.0381177;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = 0.563;
      doubleArray0[5] = 0.0;
      doubleArray0[6] = Double.POSITIVE_INFINITY;
      doubleArray0[7] = (-1913.0794896);
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0);
      ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, false);
      RealMatrix realMatrix0 = arrayRealVector0.outerProduct(arrayRealVector1);
      RealVector realVector0 = arrayRealVector1.mapAdd(0.563);
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (-3408.988169));
      } catch(RuntimeException e) {
         //
         // 
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (-3381.610881);
      doubleArray0[1] = 506.0381177;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = 0.563;
      doubleArray0[5] = 0.0;
      doubleArray0[6] = Double.POSITIVE_INFINITY;
      doubleArray0[7] = (-1913.0794896);
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0);
      ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, false);
      RealMatrix realMatrix0 = arrayRealVector0.outerProduct(arrayRealVector1);
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (-3408.988169));
      } catch(RuntimeException e) {
         //
         // 
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (-2664.926320356);
      doubleArray0[1] = 1461.91593403683;
      doubleArray0[2] = 2259.2115216064544;
      doubleArray0[3] = (-4794.626846522375);
      doubleArray0[4] = 301.85858398548;
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, (-4794.626846522375));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 2079.511;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 1.0E-12;
      doubleArray0[1] = 2532.72446926296;
      doubleArray0[4] = (-3340.2222283610595);
      doubleArray0[5] = 1.0;
      doubleArray0[6] = (-1.0);
      doubleArray0[7] = (-3340.2222283610595);
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, 2532.72446926296);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 2.2250738585072014E-308;
      doubleArray0[3] = (-1086.90158364715);
      doubleArray0[4] = 4163.08;
      doubleArray0[5] = 1944.1718;
      doubleArray0[6] = (-2043.567738085);
      doubleArray0[7] = (-3844.77);
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = 4163.08;
      doubleArray1[1] = (-3844.77);
      doubleArray1[2] = 1944.1718;
      doubleArray1[3] = (-3844.77);
      doubleArray1[4] = 1944.1718;
      doubleArray1[5] = (-3844.77);
      doubleArray1[6] = 0.0;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-1086.90158364715));
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getV();
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      double[] doubleArray2 = eigenDecompositionImpl0.getImagEigenvalues();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getV();
      RealMatrix realMatrix2 = eigenDecompositionImpl0.getVT();
      try { 
        eigenDecompositionImpl0.getEigenvector((-823));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -823
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 2795.86;
      doubleArray0[1] = 6.283185307179586;
      doubleArray0[2] = (-111.79);
      doubleArray0[3] = 1549.3390785;
      doubleArray0[4] = 0.08325;
      doubleArray0[5] = (-48.084190487574);
      doubleArray0[6] = 0.0;
      doubleArray0[7] = 0.0;
      doubleArray0[8] = (-1595.080942709487);
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
      RealMatrix realMatrix0 = array2DRowRealMatrix0.scalarAdd((-3017.7716));
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 2250.53908);
      } catch(RuntimeException e) {
         //
         // a 9x1 matrix was provided instead of a square matrix
         //
         verifyException("org.apache.commons.math.linear.TriDiagonalTransformer", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 1.0E-12;
      doubleArray0[1] = 1.0E-12;
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, 1.0E-12);
      } catch(RuntimeException e) {
         //
         // a 2x1 matrix was provided instead of a square matrix
         //
         verifyException("org.apache.commons.math.linear.TriDiagonalTransformer", e);
      }
  }
}
