* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.math.optimization.linear.SimplexSolver
* Starting client
* Connecting to master process on port 14428
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/patch3-Math-82-SequenceR/Math_82_3_sequencer/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math.optimization.linear.SimplexSolver
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 65
  - Branch 46
  - Exception 0
  - MutationFactory 183
  - Output 6
  - Method 6
  - MethodNoException 6
  - CBranchFitnessFactory 46
* Using seed 1585427911934
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%][Progress:=>                            6%] [Cov:>                                  0%][Progress:=>                            6%] [Cov:====>                              13%][Progress:==>                           8%] [Cov:====>                              12%][Progress:==>                           8%] [Cov:====>                              13%][Progress:==>                           8%] [Cov:=====>                             15%][Progress:==>                           8%] [Cov:=====>                             16%][Progress:==>                           8%] [Cov:======>                            18%][Progress:==>                           8%] [Cov:=======>                           20%][Progress:==>                           8%] [Cov:=======>                           22%][Progress:==>                           8%] [Cov:==========>                        29%][Progress:==>                           8%] [Cov:============>                      35%][Progress:==>                           8%] [Cov:============>                      37%][Progress:===>                          10%] [Cov:=====>                             16%][Progress:===>                          10%] [Cov:======>                            18%][Progress:===>                          10%] [Cov:========>                          25%][Progress:===>                          10%] [Cov:==========>                        31%][Progress:===>                          10%] [Cov:===========>                       32%][Progress:===>                          10%] [Cov:============>                      37%][Progress:===>                          10%] [Cov:==============>                    40%][Progress:===>                          11%] [Cov:>                                  2%][Progress:===>                          11%] [Cov:=====>                             15%][Progress:===>                          11%] [Cov:=======>                           21%][Progress:===>                          11%] [Cov:========>                          25%][Progress:====>                         16%] [Cov:>                                  1%][Progress:====>                         16%] [Cov:====>                              14%][Progress:====>                         16%] [Cov:======>                            18%][Progress:====>                         16%] [Cov:=======>                           22%][Progress:=====>                        18%] [Cov:>                                  1%][Progress:=====>                        18%] [Cov:>                                  2%][Progress:=====>                        18%] [Cov:=====>                             15%][Progress:=====>                        18%] [Cov:========>                          23%][Progress:=====>                        18%] [Cov:==========>                        29%][Progress:=====>                        18%] [Cov:==========>                        31%][Progress:=====>                        18%] [Cov:============>                      35%][Progress:=====>                        18%] [Cov:============>                      36%][Progress:=======>                      25%] [Cov:>                                  1%][Progress:=======>                      25%] [Cov:>                                  2%][Progress:=======>                      25%] [Cov:====>                              14%][Progress:=======>                      25%] [Cov:=======>                           21%][Progress:=======>                      25%] [Cov:=========>                         27%][Progress:=======>                      25%] [Cov:===========>                       32%][Progress:=======>                      25%] [Cov:===========>                       33%][Progress:=======>                      25%] [Cov:============>                      37%][Progress:=======>                      25%] [Cov:=============>                     39%][Progress:=======>                      25%] [Cov:===============>                   43%][Progress:=======>                      25%] [Cov:===============>                   45%][Progress:=======>                      25%] [Cov:===============>                   45%][Progress:=======>                      26%] [Cov:===========>                       34%][Progress:=======>                      26%] [Cov:=============>                     38%][Progress:=======>                      26%] [Cov:==============>                    40%][Progress:=======>                      26%] [Cov:==============>                    41%][Progress:========>                     28%] [Cov:=======>                           22%][Progress:========>                     28%] [Cov:========>                          23%][Progress:========>                     28%] [Cov:================>                  46%][Progress:========>                     28%] [Cov:================>                  48%][Progress:=========>                    30%] [Cov:==========>                        29%][Progress:=========>                    30%] [Cov:===========>                       32%][Progress:=========>                    30%] [Cov:=============>                     38%][Progress:=========>                    31%] [Cov:==================>                53%][Progress:=========>                    33%] [Cov:=================>                 50%][Progress:=========>                    33%] [Cov:=================>                 51%][Progress:=========>                    33%] [Cov:==================>                52%][Progress:==========>                   35%] [Cov:=================>                 49%][Progress:==========>                   35%] [Cov:=================>                 50%][Progress:==========>                   35%] [Cov:==================>                52%][Progress:==========>                   35%] [Cov:==================>                53%][Progress:==========>                   36%] [Cov:=================>                 50%][Progress:==========>                   36%] [Cov:==================>                53%][Progress:===========>                  38%] [Cov:==================>                52%][Progress:===========>                  38%] [Cov:==================>                53%][Progress:===========>                  38%] [Cov:==================>                53%][Progress:============>                 40%] [Cov:==================>                53%][Progress:============>                 43%] [Cov:==================>                53%][Progress:=============>                45%] [Cov:=================>                 51%][Progress:=============>                45%] [Cov:==================>                53%][Progress:=============>                45%] [Cov:==================>                53%][Progress:=============>                46%] [Cov:==================>                53%][Progress:=============>                46%] [Cov:==================>                53%][Progress:==============>               48%] [Cov:==================>                53%][Progress:===============>              50%] [Cov:==================>                53%][Progress:===============>              50%] [Cov:==================>                53%][Progress:===============>              51%] [Cov:==================>                53%][Progress:===============>              51%] [Cov:==================>                53%][Progress:===============>              53%] [Cov:==================>                53%][Progress:===============>              53%] [Cov:==================>                53%][Progress:===============>              53%] [Cov:==================>                54%][Progress:===============>              53%] [Cov:===================>               55%][Progress:===============>              53%] [Cov:===================>               57%][Progress:===============>              53%] [Cov:====================>              58%][Progress:================>             55%] [Cov:==================>                53%][Progress:================>             56%] [Cov:==================>                53%][Progress:================>             56%] [Cov:====================>              59%][Progress:=================>            58%] [Cov:===================>               57%][Progress:=================>            58%] [Cov:====================>              58%][Progress:=================>            58%] [Cov:====================>              59%][Progress:=================>            58%] [Cov:====================>              59%][Progress:==================>           60%] [Cov:====================>              58%][Progress:==================>           60%] [Cov:====================>              59%][Progress:==================>           61%] [Cov:====================>              58%][Progress:==================>           61%] [Cov:====================>              59%][Progress:===================>          65%] [Cov:====================>              58%][Progress:====================>         68%] [Cov:====================>              58%][Progress:====================>         68%] [Cov:====================>              59%][Progress:====================>         68%] [Cov:=====================>             60%][Progress:=====================>        70%] [Cov:======================>            63%][Progress:=====================>        71%] [Cov:=====================>             61%][Progress:=====================>        71%] [Cov:=====================>             62%][Progress:=====================>        71%] [Cov:======================>            63%][Progress:=====================>        71%] [Cov:======================>            64%][Progress:========================>     80%] [Cov:======================>            64%][Progress:========================>     80%] [Cov:======================>            64%][Progress:========================>     81%] [Cov:======================>            64%][Progress:========================>     81%] [Cov:======================>            64%][Progress:========================>     83%] [Cov:======================>            64%][Progress:=========================>    85%] [Cov:======================>            64%][Progress:=========================>    86%] [Cov:======================>            64%][Progress:=========================>    86%] [Cov:======================>            64%][Progress:==========================>   88%] [Cov:======================>            64%][Progress:==========================>   88%] [Cov:======================>            64%][Progress:==========================>   88%] [Cov:======================>            64%][Progress:===========================>  90%] [Cov:======================>            64%][Progress:===========================>  91%] [Cov:======================>            64%][Progress:===========================>  91%] [Cov:======================>            64%][Progress:===========================>  91%] [Cov:======================>            65%][Progress:===========================>  93%] [Cov:======================>            65%][Progress:============================> 95%] [Cov:======================>            65%][Progress:============================> 95%] [Cov:======================>            65%][Progress:============================> 96%] [Cov:======================>            64%][Progress:============================> 96%] [Cov:======================>            65%][Progress:============================> 96%] [Cov:======================>            65%][Progress:=============================>98%] [Cov:======================>            64%][Progress:=============================>98%] [Cov:======================>            65%][Progress:=============================>98%] [Cov:=======================>           66%][Progress:=============================>98%] [Cov:=======================>           67%][Progress:==============================100%] [Cov:=======================>           68%][Progress:==============================100%] [Cov:=======================>           67%][Progress:==============================100%] [Cov:=======================>           68%][Progress:==============================100%] [Cov:========================>          70%]
* Search finished after 62s and 25 generations, 11537 statements, best individual has fitness: 182.01893939393938
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 68%
* Total number of goals: 65
* Number of covered goals: 44
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 57%
* Total number of goals: 46
* Number of covered goals: 26
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 7
* Number of covered goals: 7
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 50%
* Total number of goals: 183
* Number of covered goals: 91
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 67%
* Total number of goals: 6
* Number of covered goals: 4
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 6
* Number of covered goals: 6
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 83%
* Total number of goals: 6
* Number of covered goals: 5
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 54%
* Total number of goals: 46
* Number of covered goals: 25
* Generated 16 tests with total length 116
* Resulting test suite's coverage: 70% (average coverage for all fitness functions)
* Compiling and checking tests
* Writing JUnit test case 'SimplexSolver_ESTest' to evosuite-tests
* Done!

* Computation finished
