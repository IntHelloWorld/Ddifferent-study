/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 28 18:05:45 GMT 2020
 */

package org.apache.commons.lang.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.Writer;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import org.apache.commons.lang.text.StrBuilder;
import org.apache.commons.lang.text.StrMatcher;
import org.apache.commons.lang.text.StrTokenizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StrBuilder_ESTest extends StrBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      char[] charArray0 = new char[2];
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset((String) null);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, (String) null);
      charArray0[0] = 't';
      charArray0[1] = 'N';
      StrBuilder strBuilder2 = new StrBuilder();
      boolean boolean0 = strBuilder2.endsWith((String) null);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.replaceAll((String) null, "7`>deO/s2");
      StrBuilder strBuilder2 = strBuilder0.replaceAll('~', '~');
      StrBuilder strBuilder3 = strBuilder0.deleteAll('C');
      int int0 = strBuilder3.capacity();
      StrBuilder strBuilder4 = strBuilder2.deleteAll('C');
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.awt.fonts");
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance("java.awt.fonts");
      char char0 = strBuilder0.charAt(0);
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrBuilder strBuilder2 = strBuilder1.append((double) 0);
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder3 = strBuilder1.setNewLineText("java.awt.fonts");
      StrBuilder strBuilder4 = strBuilder3.appendWithSeparators((Iterator) strTokenizer0, "*0@FXqPZ;");
      StrBuilder strBuilder5 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder5.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      StrBuilder strBuilder6 = strBuilder3.replaceAll("java.awt.fonts", (String) null);
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('j');
      StrBuilder strBuilder7 = strBuilder4.replace(strMatcher0, "java.awt.fonts", 0, 117, 0);
      int int0 = strBuilder6.indexOf(strMatcher1);
      StringBuffer stringBuffer1 = strBuilder7.toStringBuffer();
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "";
      StringBuffer stringBuffer0 = new StringBuffer("");
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      int int0 = 32;
      // Undeclared exception!
      try { 
        strBuilder1.appendFixedWidthPadRight((Object) strBuilder0, 32, '%');
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("1.1");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(0, 39, 'c');
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("1.1");
      int int0 = strBuilder1.lastIndexOf(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.append(strBuilder0);
      StrBuilder strBuilder3 = strBuilder2.appendNewLine();
      StrBuilder strBuilder4 = strBuilder1.setCharAt(9, 'c');
      StrBuilder strBuilder5 = strBuilder0.appendFixedWidthPadLeft(1458, 1458, '5');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      int int1 = strBuilder_StrBuilderReader0.read();
      int int2 = strBuilder_StrBuilderReader0.read();
      char[] charArray0 = new char[8];
      StrBuilder strBuilder6 = strBuilder3.deleteAll("1.1");
      charArray0[0] = 'c';
      charArray0[1] = 'c';
      charArray0[2] = 'c';
      charArray0[3] = '5';
      charArray0[4] = '5';
      charArray0[5] = 'c';
      charArray0[6] = 'c';
      charArray0[7] = '5';
      StrBuilder strBuilder7 = strBuilder4.append((-1284.343));
      int int3 = strMatcher0.isMatch(charArray0, 0, 1458, (-1807));
      strBuilder_StrBuilderReader0.close();
      char[] charArray1 = strBuilder4.toCharArray();
      String string0 = strBuilder0.substring(0, 0);
      int int4 = strBuilder3.lastIndexOf(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      String string0 = "v]'QVeP";
      StrBuilder strBuilder0 = new StrBuilder("v]'QVeP");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.next();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      Writer writer0 = strBuilder0.asWriter();
      int int0 = strBuilder0.capacity();
      StringBuffer stringBuffer0 = new StringBuffer("v]'QVeP");
      int int1 = 1896;
      // Undeclared exception!
      try { 
        stringBuffer0.insert(426, (CharSequence) "v]'QVeP");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 426
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid startIndex: ");
      char[] charArray0 = new char[6];
      charArray0[0] = '@';
      charArray0[1] = 'k';
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0, (-2982));
      charArray0[2] = '&';
      charArray0[3] = 'f';
      charArray0[4] = 'Y';
      charArray0[5] = '@';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StrBuilder strBuilder2 = strBuilder1.replaceAll("Invalid startIndex: ", "Invalid startIndex: ");
      StrBuilder strBuilder3 = strBuilder0.append(false);
      StrBuilder strBuilder4 = strBuilder3.append(charArray0, 0, 0);
      int int1 = strBuilder3.indexOf("Invalid startIndex: ", 746);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      boolean boolean0 = strBuilder1.equals((Object) null);
      char[] charArray1 = strBuilder2.getChars(charArray0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("ox\"f]aO#OtL");
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.insert(0, 0);
      StrBuilder strBuilder2 = strBuilder0.clear();
      StrBuilder strBuilder3 = strBuilder1.append(strBuilder2, 0, 0);
      int int1 = (-2690);
      StrBuilder strBuilder4 = strBuilder1.ensureCapacity((-2690));
      char char0 = '>';
      StrBuilder strBuilder5 = strBuilder4.deleteAll('>');
      String string0 = "startIndex must be valid";
      int int2 = 0;
      // Undeclared exception!
      try { 
        strBuilder5.append("startIndex must be valid", 0, 1406);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      char[] charArray0 = new char[9];
      charArray0[0] = '~';
      charArray0[1] = '4';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StrBuilder strBuilder2 = strBuilder1.trim();
      StringBuffer stringBuffer0 = new StringBuffer(1);
      // Undeclared exception!
      try { 
        strBuilder2.append(stringBuffer0, 2655, 1);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[0] = 'H';
      charArray0[1] = '[';
      charArray0[2] = '>';
      charArray0[3] = 'g';
      charArray0[4] = '';
      charArray0[5] = 'T';
      charArray0[6] = '/';
      charArray0[8] = '&';
      StrBuilder strBuilder0 = new StrBuilder("4.0");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("4.0", "");
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("1.1");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(0, 39, 'c');
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("1.1");
      int int0 = strBuilder1.lastIndexOf(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.append(strBuilder0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoredChar('c');
      StrTokenizer strTokenizer1 = strBuilder_StrBuilderTokenizer0.setDelimiterChar('c');
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators((Iterator) strTokenizer1, "1.1");
      StrBuilder strBuilder4 = strBuilder2.appendNewLine();
      StrBuilder strBuilder5 = strBuilder1.setCharAt(9, 'c');
      StrBuilder strBuilder6 = strBuilder0.appendFixedWidthPadLeft(1458, 1458, '5');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      int int1 = strBuilder_StrBuilderReader0.read();
      int int2 = strBuilder_StrBuilderReader0.read();
      char[] charArray0 = new char[8];
      charArray0[0] = 'c';
      charArray0[1] = 'c';
      charArray0[2] = 'c';
      charArray0[3] = '5';
      charArray0[4] = '5';
      charArray0[5] = 'c';
      charArray0[6] = 'c';
      charArray0[7] = '5';
      int int3 = strMatcher0.isMatch(charArray0, 0, 1458, (-1807));
      strBuilder_StrBuilderReader0.close();
      char[] charArray1 = strBuilder5.toCharArray();
      String string0 = strBuilder0.substring(0, 0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1095);
      StrBuilder strBuilder1 = strBuilder0.insert(0, 486.21184);
      String string0 = "org.apache.commons.lang.text.StrBuilder$StrBuilderReader";
      StrBuilder strBuilder2 = strBuilder0.replaceAll("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", "org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      int int0 = 1650;
      StrBuilder strBuilder3 = strBuilder1.setLength(1650);
      char char0 = strBuilder2.charAt(0);
      StrBuilder strBuilder4 = strBuilder1.delete(0, 4);
      StrBuilder strBuilder5 = strBuilder4.ensureCapacity(1650);
      StrBuilder strBuilder6 = strBuilder2.minimizeCapacity();
      int int1 = strBuilder0.hashCode();
      Integer integer0 = new Integer(1095);
      StrBuilder strBuilder7 = strBuilder4.appendFixedWidthPadLeft((Object) integer0, 5, '4');
      char[] charArray0 = new char[4];
      charArray0[0] = 'E';
      charArray0[1] = '4';
      charArray0[2] = '4';
      charArray0[3] = '4';
      // Undeclared exception!
      try { 
        strBuilder7.insert((-205), charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -205
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("Ph)[", "");
      StringBuffer stringBuffer1 = strBuilder1.toStringBuffer();
      StrBuilder strBuilder2 = strBuilder1.clear();
      int int0 = strBuilder0.indexOf((StrMatcher) null, 1684);
      StrBuilder strBuilder3 = strBuilder1.setNullText("Ph)[");
      StringBuffer stringBuffer2 = strBuilder1.toStringBuffer();
      int int1 = strBuilder1.size();
      String string0 = strBuilder2.getNullText();
      StrBuilder strBuilder4 = strBuilder3.appendFixedWidthPadRight((Object) strBuilder1, (-1509), '9');
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) stringBuffer1;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder4.new StrBuilderTokenizer();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer1 = (StrBuilder.StrBuilderTokenizer)strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer2 = (StrBuilder.StrBuilderTokenizer)strBuilder_StrBuilderTokenizer1.setIgnoredMatcher((StrMatcher) null);
      objectArray0[1] = (Object) strBuilder_StrBuilderTokenizer1;
      StrBuilder strBuilder5 = strBuilder4.appendWithSeparators(objectArray0, "");
      StrBuilder strBuilder6 = strBuilder0.setNullText("m4mT3jK/_G8ap");
      int int2 = strBuilder0.lastIndexOf('>', 1684);
      char[] charArray0 = strBuilder0.getChars((char[]) null);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Object object0 = new Object();
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(object0, 0, '.');
      StrBuilder strBuilder2 = new StrBuilder("Invalid startIndex: ");
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        strBuilder2.append(stringBuffer0, 0, 1615);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Windows");
      int int0 = strBuilder0.lastIndexOf('&');
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("");
      int int1 = strBuilder0.lastIndexOf(strMatcher0, 0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      String string0 = "\"\\6m5~s]OMoK}gBnjB";
      StrBuilder strBuilder0 = new StrBuilder("\"\u0006m5~s]OMoK}gBnjB");
      int int0 = 1;
      StrBuilder strBuilder1 = strBuilder0.deleteCharAt(1);
      String string1 = "end < start";
      int int1 = 4;
      char[] charArray0 = new char[5];
      charArray0[0] = 'o';
      charArray0[1] = '*';
      charArray0[2] = 'y';
      charArray0[3] = 'x';
      charArray0[4] = '$';
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1436), charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1436
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("{|#\"^7]");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('3');
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset("&sT%70]q>z");
      StrMatcher strMatcher2 = StrMatcher.stringMatcher("]+m");
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "{|#\"^7]");
      StrBuilder strBuilder2 = strBuilder0.replaceFirst("]+m", "{|#\"^7]");
      StrBuilder strBuilder3 = new StrBuilder("{|#\"^7]");
      char[] charArray0 = new char[2];
      charArray0[0] = '+';
      strBuilder3.buffer = charArray0;
      charArray0[1] = '#';
      // Undeclared exception!
      try { 
        strBuilder3.insert(0, charArray0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("NH");
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) "NH";
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "NH");
      StrBuilder strBuilder2 = strBuilder1.appendPadding(1168, 'c');
      char[] charArray0 = new char[0];
      StrBuilder strBuilder3 = strBuilder0.insert(117, charArray0);
      StrBuilder strBuilder4 = strBuilder0.appendNull();
      StrBuilder strBuilder5 = strBuilder2.append(charArray0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("ox\"f]aO#OtL");
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1, 0, 0);
      StrBuilder strBuilder3 = strBuilder0.deleteAll('>');
      StrBuilder strBuilder4 = strBuilder3.append("startIndex must be valid", 0, 0);
      int int0 = strBuilder0.indexOf("org.apache.commons.lang.text.StrBuilder", (-2700));
      StrBuilder strBuilder5 = strBuilder0.append(0);
      StrBuilder strBuilder6 = strBuilder0.replaceAll("startIndex must be valid", "startIndex must be valid");
      StrBuilder strBuilder7 = strBuilder0.append(strBuilder0, 0, 0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      char[] charArray0 = new char[5];
      charArray0[0] = '>';
      charArray0[1] = '>';
      charArray0[2] = '>';
      charArray0[3] = '>';
      charArray0[4] = 'T';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, (-3657), 1);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("1.1");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(0, 39, 'c');
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("1.1");
      int int0 = strBuilder1.lastIndexOf(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.append(strBuilder0);
      int int1 = strBuilder2.indexOf(strMatcher0);
      StrBuilder strBuilder3 = strBuilder2.appendNewLine();
      StrBuilder strBuilder4 = strBuilder1.setCharAt(9, 'c');
      StrBuilder strBuilder5 = strBuilder0.appendFixedWidthPadLeft(1458, 1458, '5');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      int int2 = strBuilder_StrBuilderReader0.read();
      int int3 = strBuilder_StrBuilderReader0.read();
      char[] charArray0 = new char[8];
      charArray0[0] = 'c';
      charArray0[1] = 'c';
      charArray0[2] = 'c';
      charArray0[3] = '5';
      charArray0[4] = '5';
      charArray0[5] = 'c';
      charArray0[6] = 'c';
      charArray0[7] = '5';
      int int4 = strMatcher0.isMatch(charArray0, 0, 1458, (-1807));
      strBuilder_StrBuilderReader0.close();
      char[] charArray1 = strBuilder4.toCharArray();
      String string0 = strBuilder0.substring(0, 0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      int int0 = 1117;
      char char0 = 'E';
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadLeft((Object) null, 1117, 'E');
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadLeft((Object) null, 734, '(');
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("ox\"f]aO#OtL");
      StrBuilder strBuilder1 = strBuilder0.insert(0, 0);
      StrBuilder strBuilder2 = strBuilder0.clear();
      StrBuilder strBuilder3 = strBuilder1.append(strBuilder2, 0, 0);
      StrBuilder strBuilder4 = strBuilder1.ensureCapacity((-2700));
      int int0 = strBuilder0.indexOf("org.apache.commons.lang.text.StrBuilder", (-2700));
      StrBuilder strBuilder5 = strBuilder0.append(0);
      StrBuilder strBuilder6 = strBuilder0.replaceAll("startIndex must be valid", "startIndex must be valid");
      StrBuilder strBuilder7 = strBuilder4.append(strBuilder0, 0, 0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder3.new StrBuilderWriter();
      char[] charArray0 = new char[5];
      charArray0[4] = 'T';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, (-3657), 1);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("NH");
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) "NH";
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "NH");
      StrBuilder strBuilder2 = strBuilder1.appendPadding(1168, 'c');
      StrBuilder strBuilder3 = strBuilder2.deleteAll('K');
      char[] charArray0 = new char[0];
      StrBuilder strBuilder4 = strBuilder0.insert(117, charArray0);
      StrBuilder strBuilder5 = strBuilder0.appendNull();
      StrBuilder strBuilder6 = strBuilder2.replaceFirst('|', 'c');
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      linkedList0.push((Integer) null);
      Integer integer0 = new Integer((-2323));
      boolean boolean0 = linkedList0.add(integer0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
      int int0 = strBuilder0.indexOf("", (-2323));
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = new StrBuilder();
      String string0 = strBuilder0.rightString(0);
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((Object) "KVV$c~Ku0J}@M5NVlL", 0, ';');
      int int1 = strBuilder0.lastIndexOf(';', (-2333));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int2 = new Integer((-2333));
      strBuilder_StrBuilderReader0.mark(116);
      StrBuilder strBuilder3 = strBuilder2.reverse();
      String string1 = strBuilder2.getNullText();
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      // Undeclared exception!
      try { 
        strBuilder1.replace(strMatcher0, "", (-2333), 116, (-2333));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2333
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      StrBuilder strBuilder1 = new StrBuilder(0);
      StrBuilder strBuilder2 = new StrBuilder("ox\"f]aO#OtL");
      StrBuilder strBuilder3 = strBuilder1.append(strBuilder2, 0, 0);
      int int1 = (-2700);
      StrBuilder strBuilder4 = strBuilder1.ensureCapacity((-2700));
      char char0 = '>';
      StrBuilder strBuilder5 = strBuilder4.deleteAll('>');
      String string0 = "startIndex must be valid";
      int int2 = 0;
      // Undeclared exception!
      try { 
        strBuilder5.append("startIndex must be valid", 0, (-2397));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteAll("nvalid startIndx: ");
      boolean boolean0 = strBuilder1.contains('R');
      int int0 = strBuilder0.indexOf('S', 2430);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll("");
      StrBuilder strBuilder2 = strBuilder0.replaceAll((StrMatcher) null, (String) null);
      String string0 = strBuilder2.leftString(116);
      int int0 = strBuilder0.hashCode();
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer0 = new Integer(Integer.MAX_VALUE);
      boolean boolean0 = linkedList0.offerLast(integer0);
      linkedList0.push((Integer) null);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "");
      StrBuilder strBuilder2 = strBuilder0.append(stringBuffer0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      char[] charArray0 = strBuilder0.getChars((char[]) null);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1));
      StrBuilder strBuilder1 = strBuilder0.insert(0, (long) (-1));
      StrBuilder strBuilder2 = strBuilder0.append((double) (-1));
      StrBuilder strBuilder3 = strBuilder1.append("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      char char0 = 'B';
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadLeft(0, 0, 'B');
      int int0 = strBuilder4.indexOf(strMatcher0);
      int int1 = strBuilder2.lastIndexOf(strMatcher0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      // Undeclared exception!
      try { 
        strBuilder3.deleteCharAt(32);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3318);
      StrBuilder strBuilder1 = strBuilder0.append((-2323L));
      StrBuilder strBuilder2 = strBuilder0.deleteAll('V');
      Object[] objectArray0 = new Object[2];
      StrBuilder strBuilder3 = strBuilder0.insert(0, false);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      objectArray0[0] = object0;
      objectArray0[1] = (Object) strBuilder0;
      StrBuilder strBuilder4 = strBuilder2.appendWithSeparators(objectArray0, "");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer1 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer1.getTrimmerMatcher();
      int int0 = strBuilder1.lastIndexOf(strMatcher0);
      boolean boolean0 = strBuilder1.contains("");
      StrBuilder strBuilder5 = strBuilder0.append((long) 0);
      Object[] objectArray1 = new Object[4];
      objectArray1[0] = (Object) strBuilder_StrBuilderTokenizer1;
      objectArray1[1] = (Object) strBuilder2;
      objectArray1[2] = (Object) "";
      objectArray1[3] = (Object) strBuilder0;
      StrBuilder strBuilder6 = strBuilder5.appendWithSeparators(objectArray1, "");
      int int1 = strBuilder1.validateRange(9, 1145);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(5);
      // Undeclared exception!
      try { 
        strBuilder0.insert(5, (Object) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 5
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder strBuilder1 = strBuilder0.append((-255.20587F));
      int int0 = strBuilder0.lastIndexOf("GQT;faTqvN)gr", 571);
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      char[] charArray0 = new char[5];
      charArray0[0] = 'T';
      charArray0[1] = 'C';
      charArray0[2] = 'M';
      charArray0[3] = '&';
      charArray0[4] = '$';
      // Undeclared exception!
      try { 
        strMatcher0.isMatch(charArray0, 571, 0, 116);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("ij0\"&( `MN8");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) null, "Invalid startIndex: ");
      int int0 = 597;
      // Undeclared exception!
      try { 
        strBuilder1.validateIndex(597);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 597
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.charAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      String string0 = "Invalid offset: ";
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      StrBuilder strBuilder1 = new StrBuilder();
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrMatcher strMatcher0 = StrMatcher.charMatcher('Y');
      StrMatcher strMatcher1 = StrMatcher.charMatcher('Y');
      boolean boolean0 = strBuilder1.contains((StrMatcher) strMatcher_NoMatcher0);
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, (-1146), (-1146));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrBuilder strBuilder1 = strBuilder0.append((StrBuilder) null);
      char[] charArray0 = new char[5];
      charArray0[0] = '\\';
      charArray0[1] = '0';
      charArray0[2] = '1';
      char char0 = '/';
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      // Undeclared exception!
      try { 
        strBuilder0.replace((StrMatcher) strMatcher_NoMatcher0, "&", 1064, 97, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid startIndex: ");
      char[] charArray0 = new char[6];
      charArray0[0] = '@';
      charArray0[1] = 'k';
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0, (-2982));
      charArray0[2] = '&';
      charArray0[3] = 'f';
      charArray0[4] = 'H';
      charArray0[5] = '@';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StrBuilder strBuilder2 = strBuilder1.replaceAll("Invalid startIndex: ", "Invalid startIndex: ");
      StrBuilder strBuilder3 = strBuilder0.append(false);
      StrBuilder strBuilder4 = strBuilder3.append(charArray0, 0, 0);
      int int1 = strBuilder3.indexOf("Invalid startIndex: ", 746);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      boolean boolean0 = strBuilder1.equals((Object) null);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-2389);
      char char0 = '6';
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt((-2389), '6');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2389
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid startIndex: ");
      char[] charArray0 = new char[6];
      charArray0[0] = '@';
      charArray0[1] = 'k';
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0, (-2982));
      charArray0[3] = 'f';
      charArray0[4] = 'Y';
      charArray0[5] = '@';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StrBuilder strBuilder2 = strBuilder1.replaceAll("Invalid startIndex: ", "Invalid startIndex: ");
      StrBuilder strBuilder3 = strBuilder0.append(false);
      StrBuilder strBuilder4 = strBuilder3.append(charArray0, 0, 0);
      int int1 = strBuilder3.indexOf("Invalid startIndex: ", 746);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      // Undeclared exception!
      try { 
        strBuilder3.delete((-2982), 746);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2982
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-1665);
      char char0 = '$';
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt((-1665), '$');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1665
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid length: ");
      Object[] objectArray0 = new Object[0];
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "Invalid length: ");
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      String string0 = "O*x/,/^T";
      StrBuilder strBuilder0 = new StrBuilder("O*x/,/^T");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(2549, 2549, 'g');
      int int0 = 0;
      String string1 = strBuilder0.substring(0);
      StrBuilder strBuilder2 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder3 = strBuilder2.deleteFirst("O*x/,/^T");
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadRight((Object) "lZdCK&l|", 0, 'W');
      StrBuilder strBuilder5 = strBuilder4.setNewLineText("\"Hp");
      StringBuffer stringBuffer0 = new StringBuffer(722);
      StrBuilder strBuilder6 = strBuilder5.append(stringBuffer0);
      int int1 = strBuilder0.lastIndexOf('Z', 5);
      strBuilder0.size = 0;
      int int2 = strBuilder0.lastIndexOf((StrMatcher) null, (-1541));
      // Undeclared exception!
      try { 
        strBuilder4.insert((-2013), 'g');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2013
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2275));
      String string0 = strBuilder0.getNewLineText();
      int int0 = (-4560);
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity((-4560));
      StrBuilder strBuilder2 = strBuilder0.deleteFirst((String) null);
      String string1 = strBuilder2.rightString((-2275));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      char[] charArray0 = new char[5];
      charArray0[0] = 'm';
      charArray0[1] = 'z';
      charArray0[2] = 'f';
      charArray0[3] = 'A';
      charArray0[4] = '8';
      int int1 = 0;
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, (-2275), 0);
      String string2 = strBuilder_StrBuilderTokenizer0.getContent();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      int int2 = 0;
      int int3 = strBuilder0.indexOf(strMatcher0, 0);
      StrBuilder strBuilder3 = strBuilder2.ensureCapacity(3050);
      StrBuilder strBuilder4 = strBuilder0.trim();
      // Undeclared exception!
      try { 
        strBuilder2.insert((-2275), charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2275
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.getNewLineText();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst((String) null);
      StrBuilder strBuilder2 = strBuilder0.append((StrBuilder) null, 0, 0);
      char[] charArray0 = new char[7];
      charArray0[0] = '\'';
      charArray0[1] = 'x';
      charArray0[2] = 'B';
      charArray0[3] = 'f';
      charArray0[4] = ']';
      charArray0[5] = 'Q';
      charArray0[6] = 'p';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      StrBuilder strBuilder3 = strBuilder2.replaceAll((StrMatcher) strMatcher_CharSetMatcher0, (String) null);
      boolean boolean0 = strBuilder1.contains((String) null);
      char[] charArray1 = new char[1];
      charArray1[0] = 'r';
      // Undeclared exception!
      try { 
        strBuilder1.insert(221, charArray1, 0, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 221
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-966));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((String) null, (-966), (-966));
      String string0 = strBuilder0.getNewLineText();
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("C*");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[5];
      charArray0[0] = 'y';
      charArray0[1] = '\"';
      charArray0[2] = 'L';
      charArray0[3] = 'E';
      charArray0[4] = 'N';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 0, (-2115));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      long long0 = strBuilder_StrBuilderReader0.skip(0L);
      strBuilder_StrBuilderReader0.mark((-2037));
      String string0 = strBuilder0.getNullText();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      String string1 = strBuilder0.rightString(1);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      String string2 = strBuilder_StrBuilderTokenizer0.previousToken();
      StrBuilder strBuilder1 = strBuilder0.append((float) 0L);
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher((String) null);
      StrMatcher strMatcher2 = StrMatcher.stringMatcher("!CK$NqV");
      int int0 = strBuilder0.indexOf(strMatcher0, 3);
      StrBuilder strBuilder2 = strBuilder0.insert(0, (long) (-2037));
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset();
      char[] charArray0 = strBuilder0.toCharArray();
      StrBuilder strBuilder3 = strBuilder0.setLength(3);
      StrMatcher strMatcher3 = StrMatcher.charMatcher('<');
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 1390, 0);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("{|#\"^7]");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('3');
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset("&sT%70]q>z");
      StrMatcher strMatcher2 = StrMatcher.stringMatcher("]+m");
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "{|#\"^7]");
      StrBuilder strBuilder2 = strBuilder0.replaceFirst("]+m", "{|#\"^7]");
      StrBuilder strBuilder3 = new StrBuilder("{|#\"^7]");
      char[] charArray0 = new char[2];
      charArray0[0] = '+';
      charArray0[1] = '#';
      StrBuilder strBuilder4 = strBuilder3.insert(0, charArray0);
      boolean boolean1 = strBuilder2.equalsIgnoreCase(strBuilder3);
      int int0 = strBuilder4.indexOf((String) null, 0);
      char char0 = strBuilder0.charAt(4);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      linkedList0.push((Integer) null);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("|2{G?W-qX0n2!17k");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
      boolean boolean0 = strBuilder0.startsWith("|2{G?W-qX0n2!17k");
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.replaceAll(':', ':');
      StrBuilder strBuilder2 = strBuilder1.replaceFirst(strMatcher0, "|2{G?W-qX0n2!17k");
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("c");
      StrBuilder strBuilder1 = strBuilder0.append((-384.62F));
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight(34, 2002, '#');
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder3 = strBuilder0.deleteFirst((StrMatcher) strMatcher_TrimMatcher0);
      StrBuilder strBuilder4 = strBuilder3.insert(593, "c");
      StrBuilder strBuilder5 = strBuilder3.appendPadding(593, 'b');
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StringBuffer stringBuffer1 = new StringBuffer();
      StrBuilder strBuilder2 = strBuilder0.append(stringBuffer1);
      StrBuilder strBuilder3 = strBuilder1.append(0L);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder3.new StrBuilderTokenizer();
      char char0 = ';';
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoredChar(';');
      StrBuilder strBuilder4 = strBuilder3.appendWithSeparators((Iterator) strTokenizer0, "7bv2e8*nC';wf,JZMyv");
      String string0 = null;
      boolean boolean0 = strBuilder0.endsWith((String) null);
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) strBuilder_StrBuilderTokenizer0;
      objectArray0[1] = (Object) null;
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      objectArray0[2] = object0;
      Object object1 = new Object();
      objectArray0[3] = object1;
      objectArray0[4] = (Object) null;
      objectArray0[5] = (Object) stringBuffer1;
      objectArray0[6] = (Object) null;
      objectArray0[7] = (Object) strTokenizer0;
      char[] charArray0 = new char[8];
      charArray0[0] = ';';
      charArray0[1] = ';';
      charArray0[2] = ';';
      charArray0[3] = ';';
      charArray0[4] = ';';
      charArray0[5] = ';';
      charArray0[6] = ';';
      charArray0[7] = ';';
      StrTokenizer strTokenizer1 = strBuilder_StrBuilderTokenizer0.reset(charArray0);
      StrBuilder strBuilder5 = strBuilder0.appendWithSeparators(objectArray0, (String) null);
      char[] charArray1 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray1, 5, 5);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 5
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-91));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "");
      char[] charArray0 = new char[3];
      charArray0[0] = 'p';
      charArray0[1] = '4';
      charArray0[2] = 'i';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      boolean boolean0 = strBuilder0.equals((Object) strBuilder_StrBuilderTokenizer0);
      boolean boolean1 = strBuilder1.isEmpty();
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.length();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset("+aZNn{E\fR");
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "+aZNn{E\fR");
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 789;
      boolean boolean0 = false;
      strBuilder0.size = 789;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      // Undeclared exception!
      try { 
        strBuilder0.contains(strMatcher0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 32
         //
         verifyException("org.apache.commons.lang.text.StrMatcher$CharSetMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("?$");
      // Undeclared exception!
      try { 
        strBuilder0.insert(2016, 'I');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2016
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[0];
      StrBuilder strBuilder1 = strBuilder0.insert(0, charArray0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append("H8aXg{bT6zk~/{E_,Ss");
      char[] charArray0 = new char[9];
      charArray0[0] = ':';
      charArray0[1] = 'j';
      charArray0[2] = '1';
      charArray0[3] = 's';
      charArray0[4] = 'P';
      charArray0[5] = 'i';
      charArray0[6] = '=';
      charArray0[7] = 'W';
      charArray0[8] = '!';
      // Undeclared exception!
      try { 
        strBuilder1.append(charArray0, (-2371), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.vm.vendor");
      char[] charArray0 = new char[5];
      charArray0[0] = ' ';
      charArray0[1] = '@';
      charArray0[2] = 'a';
      charArray0[3] = 'Q';
      charArray0[4] = '!';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(0, 0, charArray0, 461);
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Object[]) null, "");
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      char char0 = ')';
      StrMatcher strMatcher2 = StrMatcher.charMatcher(')');
      int int0 = strBuilder0.indexOf(strMatcher0, (-149));
      StrBuilder strBuilder2 = strBuilder0.setLength(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[3];
      charArray0[0] = ')';
      charArray0[1] = ')';
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setTrimmerMatcher(strMatcher0);
      charArray0[2] = ')';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 1674, 0);
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "");
      StrBuilder strBuilder3 = strBuilder1.append(stringBuffer0);
      StrBuilder strBuilder4 = strBuilder2.deleteFirst(')');
      // Undeclared exception!
      try { 
        strBuilder4.append("", (-1), (-149));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(1, 1, '!');
      StrBuilder strBuilder2 = strBuilder1.appendPadding(1429, 'W');
      char[] charArray0 = new char[4];
      charArray0[0] = '!';
      charArray0[1] = 'W';
      charArray0[2] = '!';
      charArray0[3] = '!';
      StrBuilder strBuilder3 = strBuilder2.insert(1, charArray0);
      StrBuilder strBuilder4 = strBuilder0.append(135L);
      StrBuilder strBuilder5 = strBuilder0.replaceFirst("", "line.separator");
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("");
      int int0 = strBuilder0.indexOf(strMatcher0);
      strBuilder4.validateIndex(445);
      int int1 = strBuilder0.lastIndexOf("", (-2493));
      int int2 = strBuilder1.indexOf('W', 4);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "java.io.tmpdir";
      Integer integer0 = new Integer(0);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) integer0, 0, 'H');
      StrBuilder strBuilder2 = strBuilder1.append((long) 0);
      StrBuilder strBuilder3 = new StrBuilder("java.io.tmpdir");
      StrBuilder strBuilder4 = strBuilder3.appendNull();
      StrBuilder strBuilder5 = strBuilder1.clear();
      boolean boolean0 = strBuilder0.equals(strBuilder3);
      // Undeclared exception!
      try { 
        strBuilder4.substring(5666, 3534);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(5);
      StrBuilder strBuilder1 = strBuilder0.append(97);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      char[] charArray0 = new char[0];
      int int0 = (-515);
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft(1, 34, '_');
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators((Collection) linkedList0, (String) null);
      strBuilder2.size = 5;
      StrBuilder strBuilder4 = strBuilder1.insert(1, 0.0);
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 97, (-515));
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      String string0 = strBuilder0.getNewLineText();
      String string1 = strBuilder4.substring(5, 97);
      StrBuilder strBuilder5 = strBuilder0.append(3191L);
      Reader reader0 = strBuilder5.asReader();
      StrBuilder strBuilder6 = strBuilder4.append(true);
      Reader reader1 = strBuilder5.asReader();
      // Undeclared exception!
      try { 
        strBuilder4.substring(97);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Object object0 = new Object();
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(object0, 0, '.');
      StrBuilder strBuilder2 = new StrBuilder("Invalid startIndex: ");
      StrBuilder strBuilder3 = strBuilder1.append((Object) strBuilder2);
      int int1 = 2025;
      StrBuilder strBuilder4 = strBuilder0.appendPadding(2025, 'k');
      char[] charArray0 = new char[1];
      charArray0[0] = 'e';
      // Undeclared exception!
      try { 
        strBuilder4.getChars(Integer.MAX_VALUE, 9, charArray0, 2025);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[4];
      charArray0[0] = '-';
      charArray0[1] = '}';
      charArray0[2] = 'n';
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('}');
      StrBuilder strBuilder2 = strBuilder1.trim();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      int int0 = (-1);
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadRight(object0, (-1), '-');
      StrBuilder strBuilder4 = strBuilder1.append(object0);
      charArray0[3] = 'i';
      StrBuilder strBuilder5 = strBuilder0.append(charArray0, 2, 2);
      boolean boolean0 = strBuilder0.startsWith("CjNRpY&BK~2H#pMDU(^");
      int int1 = strBuilder0.length();
      StrBuilder strBuilder6 = strBuilder1.appendFixedWidthPadLeft(2, (-1), '}');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("CjNRpY&BK~2H#pMDU(^");
      strBuilder_StrBuilderWriter0.close();
      StrBuilder strBuilder7 = new StrBuilder("Solaris");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder7.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      // Undeclared exception!
      try { 
        strBuilder7.deleteCharAt((-4257));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -4257
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      int int0 = 102;
      StrBuilder strBuilder0 = new StrBuilder(102);
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrBuilder strBuilder2 = strBuilder1.deleteAll("[-Z|&\"");
      int int1 = 0;
      int int2 = 0;
      StrBuilder strBuilder3 = strBuilder1.appendFixedWidthPadRight(0, 0, 'P');
      String string0 = strBuilder0.midString(102, 102);
      StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder5 = strBuilder0.append("|eL=6?-*1<");
      String string1 = strBuilder5.substring(0, 0);
      StrBuilder strBuilder6 = strBuilder4.replaceAll("|eL=6?-*1<", "=UnnN=)qGG6");
      int int3 = (-1902);
      // Undeclared exception!
      try { 
        strBuilder0.setLength((-1902));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1902
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(".nt;UA+B_K Z#");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0);
      strBuilder_StrBuilderReader0.reset();
      long long0 = strBuilder_StrBuilderReader0.skip(0L);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(11, 11, 'z');
      int int1 = (-857);
      strBuilder_StrBuilderReader0.mark((-857));
      char[] charArray0 = new char[0];
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setQuoteChar('');
      int int2 = 2300;
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 2300, 2300);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      int int0 = 44;
      StrBuilder strBuilder0 = new StrBuilder(44);
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex((-2191));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2191
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight((Object) null, 1295, 'j');
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("P6-nn");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(3828L);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      char[] charArray0 = new char[9];
      charArray0[0] = '|';
      charArray0[1] = '\\';
      charArray0[2] = 'S';
      charArray0[3] = ')';
      charArray0[4] = '+';
      StrMatcher strMatcher0 = StrMatcher.charMatcher('(');
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder0.indexOf(strMatcher0, (-2965));
      charArray0[5] = 'g';
      charArray0[6] = '}';
      charArray0[7] = ';';
      charArray0[8] = 'b';
      char[] charArray1 = strBuilder0.getChars(charArray0);
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      String string0 = strBuilder0.toString();
      StrBuilder strBuilder2 = strBuilder0.replaceAll("", "");
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1828);
      char[] charArray0 = new char[7];
      charArray0[0] = '~';
      charArray0[1] = '|';
      charArray0[2] = '`';
      charArray0[3] = 'Q';
      charArray0[4] = 'K';
      charArray0[5] = 'T';
      charArray0[6] = 's';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.replace((StrMatcher) strMatcher_CharSetMatcher0, "x/M?C=qP9tK_>G", 0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[5];
      charArray0[0] = 'h';
      charArray0[1] = 'M';
      charArray0[2] = 'Y';
      charArray0[3] = 'Z';
      charArray0[4] = 'F';
      StrBuilder strBuilder1 = strBuilder0.insert(0, charArray0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder2 = strBuilder1.deleteFirst('m');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[7];
      charArray0[0] = ':';
      charArray0[1] = '|';
      charArray0[2] = 'Z';
      charArray0[3] = 'T';
      charArray0[4] = '\"';
      StrBuilder strBuilder3 = strBuilder1.insert(0, charArray0, 0, 0);
      StrTokenizer strTokenizer0 = strBuilder3.asTokenizer();
      int int0 = strBuilder_StrBuilderReader0.read(charArray0, 0, 0);
      charArray0[5] = 'r';
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrBuilder strBuilder4 = strBuilder1.replaceAll(strMatcher0, "Solaris");
      charArray0[6] = 'N';
      StrBuilder strBuilder5 = strBuilder0.append(378.92);
      int int1 = strBuilder_StrBuilderReader0.read(charArray0);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read((char[]) null, 48, 48);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("+UCv4^");
      String string0 = "F-3XH t*r6q5";
      int int0 = 4;
      char[] charArray0 = new char[1];
      char char0 = 'o';
      charArray0[0] = 'o';
      int int1 = (-804);
      // Undeclared exception!
      try { 
        strBuilder0.insert(4, charArray0, (-804), 4);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: -804
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrBuilder strBuilder1 = strBuilder0.insert(0, 0);
      char[] charArray0 = new char[5];
      strBuilder0.getChars(0, 0, charArray0, 0);
      char char0 = ':';
      // Undeclared exception!
      try { 
        strBuilder0.validateRange(4103, 4103);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      int int0 = strBuilder0.size();
      String string0 = strBuilder0.midString(0, 2044);
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("");
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("os.arch");
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("file.encoding");
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher("");
      StrMatcher strMatcher3 = StrMatcher.charSetMatcher("");
      StrMatcher strMatcher4 = StrMatcher.charMatcher('.');
      StrMatcher strMatcher5 = StrMatcher.stringMatcher("java.specification.name");
      int int1 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_StringMatcher0, 0);
      StrBuilder strBuilder1 = strBuilder0.insert(0, true);
      StrBuilder strBuilder2 = strBuilder1.append(true);
      StrBuilder strBuilder3 = strBuilder1.append((Object) "file.encoding");
      String string1 = strBuilder1.leftString((-2095));
      String string2 = strBuilder0.getNewLineText();
      String string3 = strBuilder3.leftString(0);
      int int2 = strBuilder2.hashCode();
      // Undeclared exception!
      try { 
        strBuilder1.insert(2044, 2052L);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2044
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.midString(1404, 1404);
      StrBuilder strBuilder1 = strBuilder0.clear();
      LinkedList<StrBuilder> linkedList0 = new LinkedList<StrBuilder>();
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Collection) linkedList0, "user.timezone");
      StrBuilder strBuilder3 = strBuilder1.appendNewLine();
      StrBuilder strBuilder4 = strBuilder2.insert(0, (float) 1404);
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) strBuilder2;
      objectArray0[1] = (Object) strBuilder2;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.next();
      objectArray0[2] = (Object) "1404.0";
      StrBuilder strBuilder5 = strBuilder4.appendWithSeparators(objectArray0, "");
      char char0 = 'R';
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('R');
      StrBuilder strBuilder6 = strBuilder2.deleteAll((StrMatcher) strMatcher_CharMatcher0);
      String string1 = strBuilder6.rightString(1635);
      StrBuilder strBuilder7 = strBuilder5.append(116);
      StringBuffer stringBuffer0 = new StringBuffer();
      int int0 = 1461;
      int int1 = 1764;
      // Undeclared exception!
      try { 
        strBuilder7.append(stringBuffer0, 1461, 1764);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("6");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) "6", 0, 'n');
      StrBuilder strBuilder2 = strBuilder0.clear();
      int int0 = strBuilder0.validateRange(0, 0);
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadRight(0, 0, '6');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[7];
      charArray0[0] = 'n';
      charArray0[1] = '6';
      charArray0[2] = 'n';
      charArray0[3] = 'n';
      charArray0[4] = 'n';
      charArray0[5] = 'n';
      charArray0[6] = 'n';
      char[] charArray1 = strBuilder2.getChars(charArray0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("}rf@TQC%YU(x");
      StrBuilder strBuilder1 = strBuilder0.insert(0, false);
      StrBuilder strBuilder2 = strBuilder0.deleteAll("}rf@TQC%YU(x");
      // Undeclared exception!
      try { 
        strBuilder1.insert(1054, false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1054
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(48);
      StrBuilder strBuilder1 = new StrBuilder(48);
      StrBuilder strBuilder2 = strBuilder0.append((Object) strBuilder1);
      String string0 = "J\\I;~BE,\\Y^";
      StrBuilder strBuilder3 = strBuilder2.appendNewLine();
      StrBuilder strBuilder4 = strBuilder2.deleteFirst("JI;~BE,Y^");
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder2;
      String string1 = "Invalid startIndex: ";
      StrBuilder strBuilder5 = strBuilder1.appendWithSeparators(objectArray0, "Invalid startIndex: ");
      StrBuilder strBuilder6 = strBuilder0.reverse();
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('e');
      char[] charArray0 = new char[4];
      charArray0[0] = '\"';
      charArray0[1] = 'A';
      charArray0[2] = 'e';
      charArray0[3] = 'e';
      // Undeclared exception!
      try { 
        strBuilder1.getChars(0, 48, charArray0, 48);
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      int int0 = (-1322);
      StrBuilder strBuilder0 = new StrBuilder((-1322));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder2 = new StrBuilder((String) null);
      // Undeclared exception!
      try { 
        strBuilder2.charAt((-1322));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1322
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[3];
      charArray0[0] = 'A';
      strBuilder_StrBuilderReader0.mark(0);
      charArray0[1] = 'T';
      charArray0[2] = 'w';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0);
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('&');
      StrBuilder strBuilder2 = strBuilder1.deleteAll('T');
      int int1 = strBuilder0.size();
      StrBuilder strBuilder3 = strBuilder1.append((-1));
      StrTokenizer strTokenizer0 = strBuilder3.asTokenizer();
      StrMatcher strMatcher0 = StrMatcher.charMatcher('3');
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      int int2 = strBuilder0.indexOf(strMatcher0, (-376));
      // Undeclared exception!
      try { 
        strBuilder2.append("", 0, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('!');
      StrBuilder strBuilder1 = strBuilder0.replaceAll((StrMatcher) strMatcher_CharMatcher0, "bFdK@=@DR(Y");
      char[] charArray0 = new char[1];
      charArray0[0] = '!';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      boolean boolean0 = strBuilder0.contains((StrMatcher) strMatcher_CharMatcher0);
      StrBuilder strBuilder2 = strBuilder0.append(46.616024F);
      StrBuilder strBuilder3 = strBuilder2.deleteFirst(strMatcher0);
      StringBuffer stringBuffer0 = new StringBuffer(2008);
      // Undeclared exception!
      try { 
        strBuilder1.append(stringBuffer0, (-1296), 1);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      int int0 = 1829;
      StrBuilder strBuilder0 = new StrBuilder(1829);
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceAll((StrMatcher) strMatcher_TrimMatcher0, "oSHa[<piA");
      StrMatcher strMatcher0 = StrMatcher.charMatcher('=');
      // Undeclared exception!
      try { 
        strBuilder1.setCharAt(202, '_');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 202
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      int int0 = 502;
      StrBuilder strBuilder0 = new StrBuilder(502);
      StrBuilder strBuilder1 = strBuilder0.append((char[]) null, 502, 502);
      // Undeclared exception!
      try { 
        strBuilder1.charAt(502);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 502
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("");
      int int0 = strBuilder0.indexOf(strMatcher0, (-887));
      // Undeclared exception!
      try { 
        strBuilder0.insert(1075, "%*[ {>1)Y[V?8zJY");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1075
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(0, '`');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("ox\"f]aO#OtL");
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.insert(0, 0);
      StrBuilder strBuilder2 = strBuilder0.clear();
      StrBuilder strBuilder3 = strBuilder1.append(strBuilder2, 0, 0);
      int int1 = (-2700);
      char char0 = '>';
      StrBuilder strBuilder4 = strBuilder0.deleteAll('>');
      String string0 = "startIndex must be valid";
      int int2 = 0;
      // Undeclared exception!
      try { 
        strBuilder4.append("startIndex must be valid", 0, (-2397));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      String string1 = "";
      strBuilder0.size = (-375);
      StrBuilder strBuilder1 = new StrBuilder("");
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      LinkedList<StrBuilder> linkedList0 = new LinkedList<StrBuilder>();
      boolean boolean1 = linkedList0.add(strBuilder2);
      int int0 = (-1073);
      // Undeclared exception!
      try { 
        linkedList0.subList((-375), (-1073));
      } catch(IndexOutOfBoundsException e) {
         //
         // fromIndex = -375
         //
         verifyException("java.util.SubList", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.toString();
      StrBuilder strBuilder1 = strBuilder0.trim();
      String string1 = strBuilder0.leftString(2985);
      // Undeclared exception!
      try { 
        strBuilder1.replace(108, 2985, "u|w{oZk']8tGqz3$");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[5];
      char char0 = 'J';
      charArray0[0] = 'J';
      charArray0[1] = 'l';
      charArray0[2] = '%';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0);
      strBuilder_StrBuilderReader0.mark('%');
      charArray0[3] = 'q';
      charArray0[4] = ']';
      int int1 = strBuilder_StrBuilderReader0.read(charArray0);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, (-1), (-1550));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      StrMatcher strMatcher0 = StrMatcher.stringMatcher((String) null);
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("5F$DSb0_-4Y7.ua");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.appendNull();
      int int0 = strBuilder1.lastIndexOf(strMatcher0);
      int int1 = strBuilder0.indexOf(strMatcher1);
      StrBuilder strBuilder3 = strBuilder1.replaceAll(strMatcher1, "");
      StrBuilder strBuilder4 = strBuilder1.appendFixedWidthPadRight(0, (-1011), 'e');
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1005);
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      int int0 = strBuilder0.indexOf((StrMatcher) strMatcher_NoMatcher0, 1005);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) null, 0, 'h');
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder0.insert((-680), charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -680
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = 'X';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(115, 115, 'X');
      // Undeclared exception!
      try { 
        strBuilder1.setLength((-1018));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1018
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-925));
      StrBuilder strBuilder1 = new StrBuilder("");
      char char0 = '0';
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((Object) strBuilder1, (-925), '0');
      StrBuilder strBuilder3 = strBuilder2.append(strBuilder1);
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrBuilder strBuilder4 = strBuilder1.deleteFirst("");
      StrMatcher strMatcher1 = StrMatcher.charMatcher('}');
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      String string0 = strBuilder0.substring(0);
      String string1 = strBuilder0.midString(902, 0);
      StrBuilder strBuilder5 = strBuilder3.ensureCapacity((-1110));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder5.new StrBuilderReader();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "", 0, 0);
      int int1 = strBuilder_StrBuilderReader0.read(charBuffer0);
      long long0 = strBuilder_StrBuilderReader0.skip((-925));
      int int2 = strBuilder_StrBuilderReader0.read();
      StrBuilder strBuilder6 = strBuilder2.append((-2592.452989451357));
      StrBuilder strBuilder7 = strBuilder3.append((float) 0);
      boolean boolean0 = strBuilder0.endsWith("");
      // Undeclared exception!
      try { 
        strBuilder4.insert((-4873), true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -4873
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      String string0 = "bAaIZx~jos-^?$H";
      StrBuilder strBuilder0 = new StrBuilder("bAaIZx~jos-^?$H");
      long long0 = 1852L;
      StrBuilder strBuilder1 = strBuilder0.append(1852L);
      int int0 = (-1328);
      // Undeclared exception!
      try { 
        strBuilder1.setLength((-1328));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1328
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2859);
      StrBuilder strBuilder1 = new StrBuilder(2859);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Collection) linkedList0, "?C4l=@\"4,LYGNgO~Cfp");
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder3 = strBuilder0.append(stringBuffer0);
      // Undeclared exception!
      try { 
        strBuilder3.replace(2, 0, "?C4l=@\"4,LYGNgO~Cfp");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      int int0 = (-892);
      StrBuilder strBuilder0 = new StrBuilder((-892));
      char char0 = 'm';
      StrBuilder strBuilder1 = strBuilder0.replaceAll('m', 'm');
      // Undeclared exception!
      try { 
        strBuilder1.append("Windows", 774, 835);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("i'");
      char char0 = '`';
      char[] charArray0 = new char[0];
      int int0 = 4295;
      int int1 = 1795;
      // Undeclared exception!
      try { 
        strBuilder0.insert((-2754), charArray0, 4295, 1795);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2754
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("8u/n.:H1a%");
      char[] charArray0 = new char[6];
      charArray0[0] = 'v';
      charArray0[1] = 'Y';
      charArray0[2] = '!';
      charArray0[3] = 'c';
      charArray0[4] = 'a';
      charArray0[5] = '7';
      // Undeclared exception!
      try { 
        strBuilder0.getChars((-2381), 44, charArray0, 1096);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2381
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      char[] charArray0 = new char[3];
      charArray0[0] = '3';
      charArray0[1] = '6';
      charArray0[2] = '&';
      // Undeclared exception!
      try { 
        strBuilder0.insert(2, charArray0, (-1834), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((-5560), (-5560), 'E');
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher((char[]) null);
      StrBuilder strBuilder2 = strBuilder1.replaceAll(strMatcher0, "");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip((-1392L));
      StrBuilder strBuilder3 = strBuilder1.appendFixedWidthPadLeft(0, 3803, ';');
      int int0 = 2553;
      StrBuilder strBuilder4 = strBuilder2.insert(2553, false);
      StrTokenizer strTokenizer0 = strBuilder4.asTokenizer();
      String string0 = strBuilder1.midString((-5560), 97);
      StrBuilder strBuilder5 = strBuilder3.replaceFirst((String) null, "R)\"r;Nb An.In?Q;A~6");
      StringBuffer stringBuffer0 = new StringBuffer("fBqi3k?$/0\"(\"Fp*");
      StrBuilder strBuilder6 = strBuilder5.append(stringBuffer0);
      boolean boolean0 = strBuilder4.endsWith("a");
      String string1 = "n";
      StrBuilder strBuilder7 = strBuilder2.appendFixedWidthPadLeft((Object) "n", 3803, 'T');
      // Undeclared exception!
      try { 
        strBuilder1.insert((-2680), (String) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2680
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('5');
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("");
      StrMatcher strMatcher1 = StrMatcher.stringMatcher((String) null);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst((StrMatcher) strMatcher_CharMatcher0);
      int int0 = strBuilder0.indexOf('r');
      boolean boolean0 = strBuilder0.endsWith("Invalid length: ");
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.append((Object) null);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      char[] charArray0 = new char[2];
      charArray0[0] = 'T';
      String string0 = null;
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      strBuilder_StrBuilderWriter0.write((String) null);
      charArray0[1] = 'j';
      int int0 = (-4305);
      int int1 = 0;
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, (-4305), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteAll("");
      StrBuilder strBuilder2 = strBuilder1.append((String) null);
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators((Collection) null, (String) null);
      StrBuilder strBuilder4 = strBuilder0.replaceFirst("", "");
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance("-");
      StrBuilder strBuilder5 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "*myqY{C<`Ts%");
      StrBuilder strBuilder6 = strBuilder1.append((-741.58));
      String string0 = strBuilder1.toString();
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("");
      boolean boolean0 = strBuilder6.contains(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      char[] charArray0 = new char[8];
      charArray0[0] = 'v';
      charArray0[1] = '(';
      charArray0[2] = 'q';
      charArray0[3] = '{';
      charArray0[4] = '7';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) "", 0, '?');
      charArray0[5] = '5';
      charArray0[6] = ';';
      charArray0[7] = '6';
      StrBuilder strBuilder2 = strBuilder0.append(charArray0);
      StrBuilder strBuilder3 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder4 = strBuilder2.append(1.0);
      Writer writer0 = strBuilder0.asWriter();
      boolean boolean0 = strBuilder3.equals((Object) strBuilder1);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder strBuilder1 = new StrBuilder();
      boolean boolean0 = strBuilder0.equals(strBuilder1);
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrBuilder strBuilder2 = strBuilder1.replaceAll(strMatcher0, "+VL/0tfg)");
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-1103);
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      String string0 = strBuilder0.rightString((-1103));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      // Undeclared exception!
      try { 
        strBuilder1.append(";]+\"BR:gu1N", (-1103), (-1103));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      int int0 = (-483);
      StrBuilder strBuilder0 = new StrBuilder((-483));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[4];
      charArray0[0] = '=';
      charArray0[1] = 'R';
      charArray0[2] = '\\';
      charArray0[3] = 'o';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, (-4553), 0);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setNullText("VE");
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight(2624, 2624, 'R');
      StrBuilder strBuilder3 = strBuilder1.append(0.0F);
      StrBuilder strBuilder4 = strBuilder3.appendNull();
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1));
      StrBuilder strBuilder1 = strBuilder0.insert(0, (long) (-1));
      StrBuilder strBuilder2 = strBuilder0.append((double) (-1));
      StrBuilder strBuilder3 = strBuilder1.append("tO8xh>s_om,,)x)J");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadLeft(0, 0, 'B');
      int int0 = strBuilder4.indexOf(strMatcher0);
      int int1 = strBuilder2.lastIndexOf(strMatcher0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      // Undeclared exception!
      try { 
        strBuilder3.deleteCharAt(32);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      int int0 = 1259;
      StrBuilder strBuilder0 = new StrBuilder(1259);
      int int1 = (-1687);
      char[] charArray0 = new char[6];
      charArray0[0] = 'T';
      charArray0[1] = 'O';
      charArray0[2] = '7';
      charArray0[3] = 'H';
      charArray0[4] = 'd';
      charArray0[5] = 'I';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 1259, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      String string0 = ".??5wmR>_)sp^G";
      StrBuilder strBuilder0 = new StrBuilder(".??5wmR>_)sp^G");
      StrBuilder strBuilder1 = strBuilder0.append((Object) ".??5wmR>_)sp^G");
      int int0 = 0;
      int int1 = (-1);
      // Undeclared exception!
      try { 
        strBuilder0.substring((-1), 5);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      int int0 = (-1);
      StrBuilder strBuilder0 = new StrBuilder((-1));
      StrBuilder strBuilder1 = strBuilder0.insert(0, (long) (-1));
      StrBuilder strBuilder2 = strBuilder0.append((double) (-1));
      StrBuilder strBuilder3 = strBuilder1.append("tO8xh>s_om,,)x)J");
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadLeft(0, 0, 'B');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int1 = 32;
      // Undeclared exception!
      try { 
        strBuilder3.deleteCharAt(32);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(556);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight(556, (-135), '@');
      strBuilder_StrBuilderWriter0.flush();
      boolean boolean0 = strBuilder0.contains((String) null);
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) null;
      objectArray0[2] = (Object) null;
      objectArray0[3] = (Object) null;
      objectArray0[4] = (Object) strBuilder2;
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators(objectArray0, (String) null);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2469);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(0, 2469, 'W');
      char char0 = '?';
      StrBuilder strBuilder2 = strBuilder0.replaceAll('?', 'd');
      StrBuilder strBuilder3 = strBuilder1.deleteAll('W');
      // Undeclared exception!
      try { 
        strBuilder3.charAt(2469);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2469
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("R.#i]pWT");
      StrBuilder strBuilder1 = new StrBuilder(1989);
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[2];
      charArray0[0] = '$';
      charArray0[1] = 'm';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 1508, 1508);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 1508
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = strBuilder0.lastIndexOf('x', (-420));
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Windows");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(2918, 0, 'O');
      int int0 = strBuilder0.lastIndexOf('&');
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteAll('Z');
      Object object0 = new Object();
      StrBuilder strBuilder2 = strBuilder0.append(object0);
      // Undeclared exception!
      try { 
        strBuilder2.deleteCharAt((-4359));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -4359
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      String string0 = strBuilder0.rightString(0);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(0.0F);
      int int0 = 2783;
      // Undeclared exception!
      try { 
        strBuilder1.delete(2783, 2783);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[6];
      charArray0[0] = 'r';
      charArray0[1] = 'Z';
      charArray0[2] = ')';
      charArray0[3] = 'L';
      charArray0[4] = '6';
      charArray0[5] = 'g';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(3, 3, charArray0, 3);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.deleteAll('-');
      char[] charArray0 = new char[0];
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      int int0 = strBuilder1.lastIndexOf((StrMatcher) strMatcher_CharSetMatcher0, 1);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      // Undeclared exception!
      try { 
        strBuilder0.getChars(102, 102, (char[]) null, 1118);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 102
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(383);
      StrBuilder strBuilder1 = strBuilder0.setNewLineText((String) null);
      StrBuilder strBuilder2 = strBuilder1.appendNull();
      StrMatcher strMatcher0 = StrMatcher.charMatcher('T');
      StrBuilder strBuilder3 = strBuilder0.replaceFirst(strMatcher0, "cI|VaVD;");
      StrBuilder strBuilder4 = strBuilder3.deleteFirst(strMatcher0);
      StrBuilder strBuilder5 = strBuilder1.deleteAll(strMatcher0);
      StrBuilder strBuilder6 = strBuilder0.append((StringBuffer) null, 2883, (-2624));
      StrBuilder strBuilder7 = strBuilder6.replaceFirst("!", (String) null);
      int int0 = strBuilder0.lastIndexOf("Invalid length: ", 383);
      boolean boolean0 = strBuilder0.contains('L');
      StrBuilder strBuilder8 = strBuilder0.replaceAll("d`~<", (String) null);
      boolean boolean1 = strBuilder6.contains('[');
      int int1 = (-2275);
      String string0 = strBuilder7.leftString((-2275));
      StrBuilder strBuilder9 = strBuilder7.deleteFirst('%');
      StrBuilder strBuilder10 = strBuilder1.append(strBuilder4);
      // Undeclared exception!
      try { 
        strBuilder10.substring(472);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("3}");
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[3];
      charArray0[0] = 'E';
      charArray0[1] = 'n';
      charArray0[2] = 'M';
      strBuilder_StrBuilderWriter0.write(charArray0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.replaceAll('~', '.');
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "");
      int int0 = strBuilder0.hashCode();
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = new StringBuffer("");
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      char[] charArray0 = new char[1];
      charArray0[0] = '%';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      StrMatcher strMatcher0 = StrMatcher.charMatcher('(');
      StrBuilder strBuilder2 = strBuilder1.replaceFirst((StrMatcher) strMatcher_CharSetMatcher0, "");
      StrBuilder strBuilder3 = strBuilder2.append(charArray0);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-2828), false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2828
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer";
      String string1 = "";
      int int0 = (-50);
      StrBuilder strBuilder1 = strBuilder0.appendPadding((-50), 'V');
      String string2 = strBuilder1.midString((-2478), (-1879));
      StrBuilder strBuilder2 = strBuilder0.setNewLineText("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      StrBuilder strBuilder3 = strBuilder0.replaceAll("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer", "");
      boolean boolean0 = true;
      int int1 = 102;
      // Undeclared exception!
      try { 
        strBuilder0.replace(102, 102, "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("U^0R*G^c_>MIk");
      StrBuilder strBuilder1 = strBuilder0.reverse();
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      int int0 = (-779);
      int int1 = 32;
      String string0 = "";
      StrBuilder strBuilder3 = strBuilder1.trim();
      // Undeclared exception!
      try { 
        strBuilder3.append("SlShPVm2[", (-125), 5);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 48;
      int int1 = strBuilder0.lastIndexOf("", 48);
      StrBuilder strBuilder1 = strBuilder0.deleteAll("");
      // Undeclared exception!
      try { 
        strBuilder1.deleteCharAt((-282));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -282
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      String string0 = "s";
      StrBuilder strBuilder0 = new StrBuilder("s");
      int int0 = (-2291);
      StrBuilder strBuilder1 = strBuilder0.deleteAll('_');
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight((Object) strBuilder0, (-2291), '_');
      StrBuilder strBuilder3 = strBuilder0.appendPadding((-2291), '_');
      char[] charArray0 = new char[8];
      charArray0[0] = '_';
      charArray0[1] = '_';
      charArray0[2] = '!';
      charArray0[3] = '_';
      charArray0[4] = '_';
      charArray0[5] = '_';
      charArray0[6] = '_';
      // Undeclared exception!
      try { 
        strBuilder3.substring((-2291), (-2291));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2291
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      Reader reader0 = strBuilder0.asReader();
      // Undeclared exception!
      try { 
        strBuilder0.append("#(--2y|r~#>h", (-2188), 415);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(5);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterMatcher((StrMatcher) null);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "");
      StringBuffer stringBuffer0 = new StringBuffer("I,3b");
      StrBuilder strBuilder2 = strBuilder1.append(stringBuffer0);
      StrBuilder strBuilder3 = strBuilder2.trim();
      int int0 = strBuilder1.indexOf("%=j!`\",'W5y8Zu)");
      StrBuilder strBuilder4 = strBuilder0.append("%=j!`\",'W5y8Zu)");
      // Undeclared exception!
      try { 
        strBuilder3.validateIndex((-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("H+l");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('l', 'l');
      StrBuilder strBuilder2 = strBuilder0.setNewLineText("org.apache.commons.lang.SystemUtils");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("8,Qoj/zr#4");
      StrBuilder strBuilder1 = strBuilder0.replaceAll("8,Qoj/zr#4", "");
      char[] charArray0 = null;
      // Undeclared exception!
      try { 
        strBuilder0.insert((-2578), (double) (-2578));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2578
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(1L);
      int int0 = (-820);
      // Undeclared exception!
      try { 
        strBuilder1.deleteCharAt((-820));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -820
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      String string0 = null;
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      int int0 = (-2436);
      int int1 = (-1);
      int int2 = 772;
      // Undeclared exception!
      try { 
        strBuilder1.toCharArray(772, (-2109));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      int int0 = 117;
      StrBuilder strBuilder0 = new StrBuilder(117);
      StrBuilder strBuilder1 = strBuilder0.append('N');
      // Undeclared exception!
      try { 
        strBuilder1.deleteCharAt((-987));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -987
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      boolean boolean0 = strBuilder0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2190);
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(2190);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      String string0 = "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer";
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      String string1 = strBuilder0.midString((-601), 350);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-2730), (-1210));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2730
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.append((-1L));
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('j');
      String string0 = "";
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight(0, 1913, '%');
      // Undeclared exception!
      try { 
        strBuilder2.validateRange(1913, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      int int0 = 3414;
      int int1 = (-2307);
      // Undeclared exception!
      try { 
        strBuilder0.replace(strMatcher0, "length must be valid", 3414, 3414, (-2307));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceAll("@Ba5[$", "");
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder2 = strBuilder0.append((-2788.13));
      StrBuilder strBuilder3 = strBuilder1.setNullText("");
      String string0 = strBuilder3.midString(1, 235);
      // Undeclared exception!
      try { 
        strBuilder2.append(strBuilder0, 1965, 1);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      String string1 = strBuilder0.midString((-2054), (-2054));
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("");
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("^&](6%Nw*%IFqe");
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      int int1 = 509;
      // Undeclared exception!
      try { 
        strBuilder0.validateRange((-2054), 509);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2054
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((-123L));
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("Ph)[", "");
      StringBuffer stringBuffer1 = strBuilder1.toStringBuffer();
      StrBuilder strBuilder2 = strBuilder1.clear();
      int int0 = strBuilder0.indexOf((StrMatcher) null, 1684);
      StrBuilder strBuilder3 = strBuilder1.setNullText("Ph)[");
      StringBuffer stringBuffer2 = strBuilder1.toStringBuffer();
      int int1 = strBuilder1.size();
      String string0 = strBuilder2.getNullText();
      StrBuilder strBuilder4 = strBuilder3.appendFixedWidthPadRight((Object) strBuilder1, (-1509), '9');
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) stringBuffer1;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder4.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      objectArray0[1] = object0;
      StrBuilder strBuilder5 = strBuilder4.appendWithSeparators(objectArray0, "");
      StrBuilder strBuilder6 = strBuilder0.setNullText("m4mT3jK/_G8ap");
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Array element ");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      int int0 = 929;
      char char0 = '>';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(1, 929, '>');
      // Undeclared exception!
      try { 
        strBuilder0.substring(2234);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = (-4250);
      float float0 = (-1.0F);
      StrBuilder strBuilder1 = strBuilder0.append((-1.0F));
      int int1 = 0;
      StrBuilder strBuilder2 = strBuilder0.appendNewLine();
      strBuilder0.validateIndex(0);
      char char0 = '9';
      // Undeclared exception!
      try { 
        strBuilder1.append(strBuilder2, 0, 114);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.replace((-1825), (-1825), "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1825
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrBuilder strBuilder2 = strBuilder1.appendPadding(0, 'j');
      StrBuilder strBuilder3 = strBuilder1.appendNull();
      String string0 = null;
      StrBuilder strBuilder4 = strBuilder0.append((-2225));
      // Undeclared exception!
      try { 
        strBuilder4.insert(3311, 1.0F);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3311
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("*#");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      String string0 = strBuilder0.substring(0);
      strBuilder_StrBuilderWriter0.write(31);
      strBuilder_StrBuilderWriter0.flush();
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) strBuilder_StrBuilderTokenizer0;
      objectArray0[1] = (Object) strBuilder_StrBuilderTokenizer0;
      objectArray0[2] = (Object) "org.apache.commons.lang.text.StrBuilder$StrBuilderReader";
      objectArray0[3] = (Object) strBuilder_StrBuilderWriter0;
      objectArray0[4] = (Object) "org.apache.commons.lang.text.StrBuilder$StrBuilderReader";
      objectArray0[5] = (Object) "org.apache.commons.lang.text.StrBuilder$StrBuilderReader";
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "v>i'{nG6igNM#1bGZ*");
      String string1 = strBuilder_StrBuilderTokenizer0.getContent();
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("UB&35I}OJ");
      StrBuilder strBuilder1 = strBuilder0.append(true);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[6];
      charArray0[0] = 'K';
      charArray0[1] = '<';
      charArray0[2] = 'M';
      charArray0[3] = '[';
      charArray0[4] = '#';
      charArray0[5] = 'I';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrBuilder strBuilder1 = strBuilder0.append(false);
      char[] charArray0 = new char[1];
      charArray0[0] = 'f';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder0.indexOf((StrMatcher) strMatcher_NoMatcher0, 0);
      StrBuilder strBuilder2 = strBuilder0.append((double) 0);
      // Undeclared exception!
      try { 
        strBuilder2.insert((-195), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -195
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      char char0 = ']';
      float float0 = 0.0F;
      StrBuilder strBuilder1 = strBuilder0.insert(0, 'n');
      StrBuilder strBuilder2 = strBuilder1.appendNull();
      int int0 = 526;
      // Undeclared exception!
      try { 
        strBuilder0.insert(526, (-1386.2));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 526
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      StrBuilder strBuilder1 = strBuilder0.insert(4, (Object) "length must be valid");
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft(2468, 16, 'T');
      // Undeclared exception!
      try { 
        strBuilder1.append(strBuilder0, 16, 117);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.setNullText("H");
      StrBuilder strBuilder2 = strBuilder0.replaceAll("", "");
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      StrBuilder strBuilder3 = strBuilder0.replaceFirst(strMatcher0, "");
      int int0 = strBuilder0.lastIndexOf("");
      StrBuilder strBuilder4 = strBuilder0.insert(0, false);
      StrBuilder strBuilder5 = new StrBuilder((-1));
      StrBuilder strBuilder6 = strBuilder2.append(strBuilder5);
      StrBuilder strBuilder7 = strBuilder3.append((double) (-1));
      char[] charArray0 = strBuilder5.toCharArray(0, 0);
      StrBuilder strBuilder8 = strBuilder5.trim();
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(102);
      StrBuilder strBuilder1 = strBuilder0.replaceAll("(E9KH[KZ~kw9", "(E9KH[KZ~kw9");
      char[] charArray0 = strBuilder1.toCharArray(0, 102);
      String string0 = strBuilder1.getNullText();
      // Undeclared exception!
      try { 
        strBuilder0.charAt(102);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 102
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) "laa9";
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "laa9");
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight((Object) "laa9", 400, '5');
      StrBuilder strBuilder3 = strBuilder0.deleteAll("laa9");
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      StrBuilder strBuilder4 = strBuilder3.deleteFirst(strMatcher0);
      StringBuffer stringBuffer0 = strBuilder3.toStringBuffer();
      int int0 = strBuilder0.hashCode();
      StrBuilder strBuilder5 = strBuilder3.reverse();
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1));
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("1e}*T[t-p9", "1e}*T[t-p9");
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      StrBuilder strBuilder2 = strBuilder1.deleteFirst(">0Mq>j]Man");
      StrBuilder strBuilder3 = strBuilder1.trim();
      StrBuilder strBuilder4 = strBuilder1.append(2054.409F);
      StrBuilder strBuilder5 = strBuilder1.setNullText("");
      StrBuilder strBuilder6 = strBuilder5.trim();
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      int int0 = strBuilder4.lastIndexOf(strMatcher0, 954);
      StrBuilder strBuilder7 = strBuilder0.insert(0, (float) (-1));
      boolean boolean0 = strBuilder0.startsWith("0M)!WZ]4_");
      StrBuilder strBuilder8 = strBuilder0.replaceAll("0M)!WZ]4_", "#lwNzGhF8uc");
      StrBuilder strBuilder9 = strBuilder8.replaceAll(strMatcher0, "0M)!WZ]4_");
      StrBuilder strBuilder10 = strBuilder8.setNullText("startIndex must be valid");
      int int1 = strBuilder8.indexOf('@', 954);
      StrBuilder strBuilder11 = strBuilder1.clear();
      char[] charArray0 = strBuilder11.toCharArray();
      int int2 = strBuilder0.indexOf('W', (-1));
      int int3 = strBuilder6.lastIndexOf("");
      StrBuilder strBuilder12 = strBuilder11.appendFixedWidthPadRight((Object) strBuilder4, 738, 'W');
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.toString();
      StrBuilder strBuilder1 = strBuilder0.append((char[]) null, 0, 0);
      StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadRight(0, 20, 'C');
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      // Undeclared exception!
      try { 
        strBuilder0.replace(strMatcher0, "", (-215), (-1032), (-215));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -215
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 2);
      // Undeclared exception!
      try { 
        strBuilder0.replace(2, 3, "(*Ts|aMB^");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2375));
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder2 = strBuilder0.insert(0, (float) (-2375));
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("lEfEU");
      String string0 = strBuilder0.getNewLineText();
      StrBuilder strBuilder1 = strBuilder0.append(0);
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2933);
      StrBuilder strBuilder1 = strBuilder0.appendNull();
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(234);
      StrBuilder strBuilder1 = strBuilder0.append((float) 234);
      StrBuilder strBuilder2 = strBuilder1.appendPadding(234, '/');
      StrBuilder strBuilder3 = strBuilder2.appendNewLine();
      String string0 = "kF_sW59dwMg";
      int int0 = strBuilder0.indexOf("kF_sW59dwMg");
      char[] charArray0 = strBuilder3.toCharArray();
      char char0 = 'w';
      // Undeclared exception!
      try { 
        strBuilder1.validateRange(227, 116);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("-8S|']\"Q");
      char char0 = '%';
      StrBuilder strBuilder1 = strBuilder0.replaceAll('%', '%');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[2];
      charArray0[0] = '%';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 1678, 204);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer0 = new Integer((-2147483624));
      boolean boolean0 = linkedList0.offerLast(integer0);
      linkedList0.push((Integer) null);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "");
      StrBuilder strBuilder2 = strBuilder0.append(stringBuffer0);
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("{|#\"^7]");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('3');
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset("&sT%70]q>z");
      StrMatcher strMatcher2 = StrMatcher.stringMatcher("]+m");
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "{|#\"^7]");
      StrBuilder strBuilder2 = strBuilder0.replaceFirst("]+m", "{|#\"^7]");
      StrBuilder strBuilder3 = new StrBuilder("{|#\"^7]");
      char[] charArray0 = new char[2];
      charArray0[0] = '+';
      charArray0[1] = '#';
      StrBuilder strBuilder4 = strBuilder3.insert(0, charArray0);
      boolean boolean1 = strBuilder2.equalsIgnoreCase(strBuilder3);
      StrBuilder strBuilder5 = strBuilder0.replaceAll(strMatcher2, "&sT%70]q>z");
      int int0 = strBuilder4.indexOf((String) null, 0);
      int int1 = 4;
      char char0 = strBuilder0.charAt(4);
      // Undeclared exception!
      try { 
        strBuilder0.validateRange(4, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1095);
      StrBuilder strBuilder1 = strBuilder0.insert(0, 486.21184);
      StrBuilder strBuilder2 = strBuilder0.replaceAll("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", "org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      int int0 = 1650;
      StrBuilder strBuilder3 = strBuilder1.setLength(1650);
      char char0 = strBuilder2.charAt(0);
      StrBuilder strBuilder4 = strBuilder1.delete(0, 4);
      StrBuilder strBuilder5 = strBuilder4.ensureCapacity(1650);
      StrBuilder strBuilder6 = strBuilder2.minimizeCapacity();
      int int1 = strBuilder0.hashCode();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder3.new StrBuilderWriter();
      char[] charArray0 = new char[4];
      charArray0[0] = '4';
      charArray0[1] = '4';
      charArray0[2] = '4';
      charArray0[3] = '4';
      strBuilder_StrBuilderWriter0.write(charArray0);
      int int2 = (-2553);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", 1650, (-2553));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      char char0 = 'N';
      // Undeclared exception!
      try { 
        strBuilder0.insert(32, 'N');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      String string0 = "O*x/,/^T";
      StrBuilder strBuilder0 = new StrBuilder("O*x/,/^T");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(2549, 2549, 'g');
      int int0 = 0;
      String string1 = strBuilder0.substring(0);
      StrBuilder strBuilder2 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder3 = strBuilder2.deleteFirst("O*x/,/^T");
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadRight((Object) "lZdCK&l|", 0, 'W');
      StrBuilder strBuilder5 = strBuilder2.trim();
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrBuilder strBuilder6 = strBuilder5.replaceFirst(strMatcher0, string1);
      int int1 = strBuilder0.lastIndexOf('g', 5);
      strBuilder0.size = (-1);
      int int2 = strBuilder0.lastIndexOf((StrMatcher) null, (-1541));
      // Undeclared exception!
      try { 
        strBuilder4.insert((-2013), 'g');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2013
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("1.1");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(0, 39, 'c');
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("1.1");
      int int0 = strBuilder1.lastIndexOf(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.append(strBuilder0);
      StrBuilder strBuilder3 = strBuilder2.appendNewLine();
      StrBuilder strBuilder4 = strBuilder1.setCharAt(9, 'c');
      StrBuilder strBuilder5 = strBuilder0.appendFixedWidthPadLeft(1458, 1458, '5');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      int int1 = strBuilder_StrBuilderReader0.read();
      int int2 = strBuilder_StrBuilderReader0.read();
      char[] charArray0 = new char[8];
      charArray0[0] = 'c';
      charArray0[1] = 'c';
      charArray0[2] = 'c';
      charArray0[3] = '5';
      charArray0[4] = '5';
      charArray0[5] = 'c';
      charArray0[6] = 'c';
      charArray0[7] = '5';
      int int3 = strMatcher0.isMatch(charArray0, 0, 1458, (-1807));
      strBuilder_StrBuilderReader0.close();
      char[] charArray1 = strBuilder4.toCharArray();
      String string0 = strBuilder0.substring(0, 0);
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.insert(0, true);
      char[] charArray0 = new char[9];
      charArray0[0] = 'H';
      charArray0[1] = '[';
      charArray0[2] = '>';
      charArray0[3] = 'g';
      charArray0[4] = '';
      charArray0[5] = 'T';
      charArray0[6] = '/';
      charArray0[7] = 'Y';
      charArray0[8] = '&';
      // Undeclared exception!
      try { 
        strBuilder1.append(charArray0, 0, 1908);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 1908
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      String string0 = "java.awt.fonts";
      StrBuilder strBuilder0 = new StrBuilder("java.awt.fonts");
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance("java.awt.fonts");
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "java.specification.name");
      int int0 = 0;
      char char0 = strBuilder1.charAt(0);
      String string1 = strBuilder0.leftString(0);
      StrBuilder strBuilder2 = strBuilder0.clear();
      StrBuilder strBuilder3 = strBuilder2.append((double) 0);
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        strBuilder2.append(stringBuffer0, (-3595), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }
}
