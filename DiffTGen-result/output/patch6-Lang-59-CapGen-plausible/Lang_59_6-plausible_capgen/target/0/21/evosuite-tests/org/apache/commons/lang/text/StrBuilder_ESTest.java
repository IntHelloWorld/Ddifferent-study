/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 28 18:05:42 GMT 2020
 */

package org.apache.commons.lang.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.Writer;
import java.nio.CharBuffer;
import java.nio.ReadOnlyBufferException;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.NoSuchElementException;
import java.util.function.Consumer;
import org.apache.commons.lang.text.StrBuilder;
import org.apache.commons.lang.text.StrMatcher;
import org.apache.commons.lang.text.StrTokenizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StrBuilder_ESTest extends StrBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.size = 596;
      String string0 = " \t\n\r\f";
      boolean boolean0 = strBuilder0.startsWith(" \t\n\r\f");
      StrBuilder strBuilder1 = new StrBuilder((String) null);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("pmzF@[ODHrq");
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight((Object) "pmzF@[ODHrq", 596, ']');
      char[] charArray0 = new char[1];
      charArray0[0] = ']';
      // Undeclared exception!
      try { 
        strBuilder1.insert(596, charArray0, 61, (-2859));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: 61
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("ds/P?N");
      StrBuilder strBuilder1 = new StrBuilder((-3037));
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, 0, (-450));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.size = 596;
      boolean boolean0 = strBuilder0.startsWith(" \t\n\r\f");
      StrBuilder strBuilder1 = new StrBuilder((String) null);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("pmzF@[ODHrq");
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight((Object) "pmzF@[ODHrq", 596, ']');
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) strBuilder0;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      objectArray0[2] = object0;
      StrBuilder strBuilder3 = strBuilder1.appendWithSeparators(objectArray0, "Ksgee4z<&G7W7<FtD");
      int int0 = strBuilder2.lastIndexOf((String) null, 4006);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[3];
      charArray0[1] = 'V';
      charArray0[2] = ' ';
      StrBuilder strBuilder1 = strBuilder0.insert(0, charArray0);
      StrBuilder strBuilder2 = new StrBuilder("*'TU*B");
      StrBuilder strBuilder3 = strBuilder1.insert(0, '@');
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance();
      StrBuilder strBuilder4 = strBuilder0.insert(0, '>');
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrBuilder strBuilder5 = strBuilder0.replaceAll(strMatcher0, "*'TU*B");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrBuilder strBuilder6 = strBuilder0.append('>');
      boolean boolean0 = strBuilder0.endsWith("");
      StrBuilder strBuilder7 = strBuilder0.insert(0, (Object) strBuilder_StrBuilderTokenizer0);
      int int0 = strBuilder5.capacity();
      StrBuilder strBuilder8 = strBuilder4.append((long) 0);
      StrBuilder strBuilder9 = strBuilder8.append((String) null);
      StrBuilder strBuilder10 = strBuilder8.appendWithSeparators((Iterator) strTokenizer0, "*'TU*B");
      StrBuilder strBuilder11 = strBuilder4.replaceAll(strMatcher0, "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      int int1 = strBuilder3.validateRange(0, 1351);
      char[] charArray1 = strBuilder4.getChars(charArray0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder11.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray1, 76, 77);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 77
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter";
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((-1725), (-1725), '^');
      StrBuilder strBuilder2 = strBuilder1.deleteFirst('^');
      StrBuilder strBuilder3 = strBuilder0.deleteAll("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      StrBuilder strBuilder4 = strBuilder0.appendPadding((-625), 'R');
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      // Undeclared exception!
      try { 
        strBuilder4.append(stringBuffer0, (-1725), 527);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1272));
      StrBuilder strBuilder1 = strBuilder0.deleteAll('');
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher((char[]) null);
      int int0 = strBuilder0.indexOf(strMatcher0);
      char[] charArray0 = new char[7];
      charArray0[0] = 'K';
      charArray0[1] = '9';
      charArray0[2] = '7';
      char char0 = '-';
      charArray0[3] = '-';
      charArray0[4] = '>';
      charArray0[5] = '}';
      charArray0[6] = '(';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      int int1 = strBuilder0.lastIndexOf(strMatcher1, 527);
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Object[]) null, "CLfEUsGe");
      char[] charArray1 = strBuilder0.toCharArray();
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt((-1), '!');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.size = 596;
      boolean boolean0 = strBuilder0.startsWith(" \t\n\r\f");
      StrBuilder strBuilder1 = new StrBuilder((String) null);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((String) null);
      strBuilder_StrBuilderWriter0.write("pmzF@[ODHrq");
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight((Object) "pmzF@[ODHrq", 596, ']');
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) " \t\n\r\f";
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      objectArray0[2] = object0;
      StrBuilder strBuilder3 = strBuilder1.appendWithSeparators(objectArray0, "Ksgee4z<&G7W7<FtD");
      StrBuilder strBuilder4 = strBuilder2.append(']');
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.size = 97;
      // Undeclared exception!
      try { 
        strBuilder0.indexOf('V');
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.size = 596;
      boolean boolean0 = strBuilder0.startsWith(" \t\n\r\f");
      StrBuilder strBuilder1 = new StrBuilder((String) null);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("pmzF@[ODHrq");
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight((Object) "pmzF@[ODHrq", 596, ']');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      String string0 = strBuilder2.midString(596, 84);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      String string0 = "MA^NMA3@27]h#";
      StrBuilder strBuilder0 = new StrBuilder("MA^NMA3@27]h#");
      StrBuilder strBuilder1 = strBuilder0.append("MA^NMA3@27]h#");
      StrBuilder strBuilder2 = strBuilder1.append(strBuilder0);
      StrBuilder strBuilder3 = strBuilder2.append(452.0005229357);
      StrBuilder strBuilder4 = strBuilder3.append('A');
      char[] charArray0 = new char[0];
      strBuilder4.buffer = charArray0;
      // Undeclared exception!
      try { 
        strBuilder2.appendNewLine();
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((-1725), (-1725), '^');
      StrBuilder strBuilder2 = strBuilder1.deleteFirst('^');
      StrBuilder strBuilder3 = strBuilder0.deleteAll((String) null);
      StrBuilder strBuilder4 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder3.new StrBuilderReader();
      StrBuilder strBuilder5 = strBuilder0.appendNull();
      // Undeclared exception!
      try { 
        strBuilder1.setCharAt((-352), 'J');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -352
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("GXSNN'Emu=t{O");
      Writer writer0 = strBuilder0.asWriter();
      char[] charArray0 = strBuilder0.toCharArray();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("GXSNN'Emu=t{O", "GXSNN'Emu=t{O");
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) "GXSNN'Emu=t{O";
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators(objectArray0, "");
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators((Collection) null, (String) null);
      Writer writer1 = strBuilder0.asWriter();
      strBuilder2.getChars(0, 0, charArray0, 0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(charArray0);
      String string0 = strBuilder1.toString();
      StrMatcher strMatcher0 = StrMatcher.stringMatcher((String) null);
      int int0 = strBuilder2.indexOf(strMatcher0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(3044L);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("`zvT$L;oK83");
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('F');
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("`zvT$L;oK83");
      StrBuilder strBuilder1 = strBuilder0.append((StringBuffer) null, 547, 547);
      StrMatcher strMatcher1 = StrMatcher.charMatcher('n');
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_CharMatcher0, (-93));
      int int1 = strBuilder0.capacity();
      Writer writer0 = strBuilder0.asWriter();
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) strBuilder1;
      objectArray0[1] = (Object) strMatcher1;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.next();
      objectArray0[2] = (Object) "`zvT$L;oK83";
      objectArray0[3] = (Object) strBuilder1;
      objectArray0[4] = (Object) writer0;
      objectArray0[5] = (Object) strMatcher1;
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators(objectArray0, "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("GXSNN'Emu=t{O");
      Writer writer0 = strBuilder0.asWriter();
      char[] charArray0 = strBuilder0.toCharArray();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("GXSNN'Emu=t{O", "GXSNN'Emu=t{O");
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) "GXSNN'Emu=t{O";
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators(objectArray0, "");
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators((Collection) null, (String) null);
      Writer writer1 = strBuilder0.asWriter();
      strBuilder2.getChars(0, 0, charArray0, 0);
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("E.aNg9kxk[");
      StrBuilder strBuilder4 = strBuilder2.deleteAll('S');
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("GQF;Q&84A5gHK@");
      StrBuilder strBuilder5 = strBuilder2.deleteFirst(strMatcher0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(charArray0);
      String string0 = strBuilder1.toString();
      StrMatcher strMatcher2 = StrMatcher.stringMatcher((String) null);
      int int0 = strBuilder2.indexOf(strMatcher2);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      int int0 = 48;
      StrBuilder strBuilder0 = new StrBuilder(48);
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrBuilder strBuilder2 = strBuilder1.append((char[]) null, 48, 101);
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrBuilder strBuilder3 = strBuilder1.deleteFirst(strMatcher0);
      StrBuilder strBuilder4 = strBuilder0.append((char[]) null, 48, 101);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      int int1 = 1;
      StrBuilder strBuilder5 = strBuilder2.setLength(1);
      strBuilder_StrBuilderWriter0.write((String) null, 48, 1);
      strBuilder_StrBuilderWriter0.write(1);
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      String string0 = "";
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("", 48, (-1140));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder(0);
      boolean boolean0 = strBuilder0.equals((Object) strBuilder1);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrBuilder strBuilder2 = strBuilder0.insert(0, false);
      int int0 = strBuilder_StrBuilderReader0.read();
      String string0 = strBuilder1.rightString(117);
      StringBuffer stringBuffer0 = new StringBuffer("");
      StrBuilder strBuilder3 = strBuilder1.append(stringBuffer0);
      StrBuilder strBuilder4 = strBuilder3.append((long) 117);
      StrBuilder strBuilder5 = strBuilder3.setNullText("");
      char char0 = '~';
      StrBuilder strBuilder6 = strBuilder0.deleteAll('~');
      int int1 = strBuilder1.indexOf('%');
      strBuilder1.size = 0;
      StrBuilder strBuilder7 = strBuilder1.trim();
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex(759);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 759
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.clear();
      String string0 = strBuilder2.midString((-1), (-2566));
      StrBuilder strBuilder3 = new StrBuilder((-1));
      char[] charArray0 = new char[3];
      charArray0[0] = ' ';
      charArray0[1] = 'J';
      char char0 = 'R';
      charArray0[2] = 'R';
      StrBuilder strBuilder4 = strBuilder3.insert(0, charArray0);
      StrBuilder strBuilder5 = strBuilder2.replaceAll("", "");
      StrBuilder strBuilder6 = strBuilder3.appendFixedWidthPadLeft((Object) "sJS[a<D p,>3k'", 0, 'x');
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      StrBuilder strBuilder7 = strBuilder6.appendWithSeparators((Collection) linkedList0, "");
      StrTokenizer strTokenizer1 = strBuilder7.asTokenizer();
      StrBuilder strBuilder8 = strBuilder0.reverse();
      StringBuffer stringBuffer0 = strBuilder8.toStringBuffer();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, (-2566), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("*'TU*B");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[3];
      charArray0[0] = 'p';
      charArray0[2] = ' ';
      StrBuilder strBuilder1 = strBuilder0.insert(0, charArray0);
      StrBuilder strBuilder2 = strBuilder1.insert((int) '\u0000', "*'TU*B");
      StrBuilder strBuilder3 = strBuilder1.insert(0, '@');
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance();
      StrBuilder strBuilder4 = strBuilder0.insert(0, '>');
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrBuilder strBuilder5 = strBuilder0.replaceAll(strMatcher0, "*'TU*B");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrBuilder strBuilder6 = strBuilder0.append('>');
      boolean boolean0 = strBuilder0.endsWith("");
      StrBuilder strBuilder7 = strBuilder0.insert(0, (Object) strBuilder_StrBuilderTokenizer0);
      int int0 = strBuilder5.capacity();
      StrBuilder strBuilder8 = strBuilder4.append((long) 0);
      StrBuilder strBuilder9 = strBuilder8.appendWithSeparators((Iterator) strTokenizer0, "*'TU*B");
      StrBuilder strBuilder10 = strBuilder4.replaceAll(strMatcher0, "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      int int1 = strBuilder3.validateRange(0, 1351);
      char[] charArray1 = strBuilder4.getChars(charArray0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder10.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray1, 88, 89);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 89
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid startIndex: ");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("user.region");
      StrBuilder strBuilder2 = strBuilder1.deleteFirst("user.region");
      StrBuilder strBuilder3 = strBuilder1.append((-777.098F));
      int int0 = strBuilder0.indexOf("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder3.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      String string0 = strBuilder3.midString(0, 4);
      String string1 = strBuilder0.toString();
      String string2 = strBuilder1.getNullText();
      char[] charArray0 = strBuilder0.toCharArray(0, 0);
      char[] charArray1 = new char[1];
      charArray1[0] = '(';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray1);
      StrMatcher strMatcher1 = StrMatcher.charMatcher('(');
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher(charArray1);
      boolean boolean0 = strBuilder0.contains((StrMatcher) strMatcher_CharSetMatcher0);
      StrBuilder strBuilder4 = strBuilder0.setNewLineText("wxixdE3i6");
      StrBuilder strBuilder5 = strBuilder4.insert(0, charArray0);
      int int1 = strBuilder2.lastIndexOf("Invalid startIndex: ");
      String string3 = strBuilder1.rightString(0);
      StrBuilder strBuilder6 = strBuilder1.replaceAll('g', 'g');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(9);
      String string0 = null;
      boolean boolean0 = strBuilder0.startsWith((String) null);
      int int0 = 6;
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadLeft((Object) null, 6, 'y');
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.clear();
      String string0 = strBuilder2.midString((-1), (-2566));
      StrBuilder strBuilder3 = strBuilder0.append(0.0F);
      char[] charArray0 = new char[3];
      charArray0[0] = ' ';
      charArray0[1] = 'J';
      charArray0[2] = 'R';
      StrBuilder strBuilder4 = strBuilder3.insert(0, charArray0);
      StrBuilder strBuilder5 = strBuilder2.replaceAll("", "");
      StrBuilder strBuilder6 = strBuilder3.appendFixedWidthPadLeft((Object) "sJS[a<D p,>3k'", 0, ' ');
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      StrBuilder strBuilder7 = strBuilder6.appendWithSeparators((Collection) linkedList0, "");
      StrBuilder strBuilder8 = strBuilder0.reverse();
      StringBuffer stringBuffer0 = strBuilder8.toStringBuffer();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      int int1 = strBuilder3.size();
      int int2 = strBuilder8.indexOf('#', 6);
      int int3 = strBuilder8.lastIndexOf('R');
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1);
      StrBuilder strBuilder1 = strBuilder0.deleteAll("");
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex(1);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setLength(0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("MA^NMA3@27]h#");
      StrBuilder strBuilder1 = strBuilder0.append("MA^NMA3@27]h#");
      StrBuilder strBuilder2 = strBuilder1.append(strBuilder0);
      StrBuilder strBuilder3 = strBuilder2.append(452.0005229357);
      StrBuilder strBuilder4 = strBuilder3.append('A');
      StrBuilder strBuilder5 = strBuilder2.appendNewLine();
      StrBuilder strBuilder6 = new StrBuilder('A');
      StrBuilder strBuilder7 = strBuilder2.appendFixedWidthPadLeft(102, 2, '&');
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      StrBuilder strBuilder8 = strBuilder2.deleteAll(strMatcher0);
      StrBuilder strBuilder9 = new StrBuilder('&');
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder10 = strBuilder9.appendWithSeparators((Collection) linkedList0, "MA^NMA3@27]h#");
      int int0 = strBuilder0.lastIndexOf(']', 2635);
      int int1 = 1716;
      // Undeclared exception!
      try { 
        strBuilder1.append(strBuilder3, Integer.MAX_VALUE, 1716);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Writer writer0 = strBuilder0.asWriter();
      char[] charArray0 = strBuilder0.toCharArray();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("GXSNN'Emu=t{O", "GXSNN'Emu=t{O");
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) "GXSNN'Emu=t{O";
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators(objectArray0, "");
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators((Collection) null, (String) null);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder2.getChars(0, 0, charArray0, 0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter1 = strBuilder2.new StrBuilderWriter();
      strBuilder_StrBuilderWriter1.write(charArray0);
      String string0 = strBuilder1.toString();
      StrMatcher strMatcher0 = StrMatcher.stringMatcher((String) null);
      int int0 = strBuilder2.indexOf(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Writer writer0 = strBuilder0.asWriter();
      char[] charArray0 = strBuilder0.toCharArray();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("GXSNN'Emu=t{O", "GXSNN'Emu=t{O");
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) "GXSNN'Emu=t{O";
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators(objectArray0, "");
      Writer writer1 = strBuilder0.asWriter();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(charArray0);
      String string0 = strBuilder1.toString();
      StrMatcher strMatcher0 = StrMatcher.stringMatcher((String) null);
      int int0 = strBuilder2.indexOf(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(0);
      StrBuilder strBuilder2 = strBuilder1.replace(0, 0, "3(&_L@7G~L#");
      StrBuilder strBuilder3 = strBuilder0.deleteFirst("m");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrBuilder strBuilder4 = strBuilder1.append('8');
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder5 = strBuilder3.deleteAll((StrMatcher) strMatcher_TrimMatcher0);
      Writer writer0 = strBuilder3.asWriter();
      StrBuilder strBuilder6 = strBuilder1.deleteAll('@');
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      int int0 = strBuilder3.lastIndexOf(strMatcher0, 0);
      StrBuilder strBuilder7 = strBuilder6.replaceFirst(')', 'o');
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("GXSNN'Emu=t{O");
      Writer writer0 = strBuilder0.asWriter();
      char[] charArray0 = strBuilder0.toCharArray();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("GXSNN'Emu=t{O", "GXSNN'Emu=t{O");
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) "GXSNN'Emu=t{O";
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators(objectArray0, "");
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators((Collection) null, (String) null);
      Writer writer1 = strBuilder0.asWriter();
      // Undeclared exception!
      try { 
        strBuilder2.getChars(0, 0, charArray0, 40);
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      int int0 = (-258);
      StrBuilder strBuilder0 = new StrBuilder((-258));
      char char0 = '\'';
      StrBuilder strBuilder1 = strBuilder0.append((char[]) null);
      StrBuilder strBuilder2 = strBuilder1.replaceAll((String) null, (String) null);
      Reader reader0 = strBuilder1.asReader();
      StrBuilder strBuilder3 = strBuilder1.setNullText((String) null);
      // Undeclared exception!
      try { 
        strBuilder1.deleteCharAt((-258));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -258
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append("");
      StrBuilder strBuilder2 = strBuilder1.deleteFirst("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      char char0 = ';';
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadLeft(object0, (-1), ';');
      int int0 = strBuilder1.indexOf((StrMatcher) null, 4);
      int int1 = 55;
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1214), 55);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1214
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 1273;
      char[] charArray0 = new char[5];
      StrBuilder strBuilder1 = strBuilder0.append((long) 1273);
      String string0 = strBuilder1.rightString(1273);
      charArray0[0] = ';';
      charArray0[1] = 'r';
      int int1 = 1129;
      StrBuilder strBuilder2 = new StrBuilder(992);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      // Undeclared exception!
      try { 
        strBuilder0.insert(1129, object0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1129
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder strBuilder1 = strBuilder0.append(0.0F);
      StrBuilder strBuilder2 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder3 = strBuilder0.setNewLineText("_?IO_B/p");
      char[] charArray0 = new char[8];
      charArray0[0] = 'p';
      charArray0[1] = 'J';
      charArray0[2] = 'l';
      charArray0[3] = 'I';
      charArray0[4] = 'o';
      charArray0[5] = '+';
      charArray0[6] = '@';
      charArray0[7] = 'J';
      strBuilder3.buffer = charArray0;
      int int0 = strBuilder0.size();
      String string0 = strBuilder3.getNewLineText();
      StrBuilder strBuilder4 = strBuilder3.append(1422);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1216));
      StrBuilder strBuilder1 = strBuilder0.append("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrBuilder strBuilder2 = strBuilder1.deleteAll(strMatcher0);
      boolean boolean0 = strBuilder0.contains('S');
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadRight((-147), 108, 'k');
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("*][bC|s;DZ?iHQvH|]S");
      StrBuilder strBuilder1 = strBuilder0.insert(0, (long) 0);
      char[] charArray0 = new char[9];
      charArray0[0] = '|';
      String string0 = strBuilder0.midString(5, 0);
      charArray0[1] = ';';
      charArray0[2] = 'F';
      charArray0[3] = 'v';
      charArray0[4] = 'f';
      charArray0[5] = 'P';
      charArray0[6] = 'L';
      charArray0[7] = ':';
      charArray0[8] = 'A';
      // Undeclared exception!
      try { 
        strBuilder1.insert(0, charArray0, 0, 101);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 101
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      int int0 = strBuilder0.indexOf((StrMatcher) null);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(5);
      StrBuilder strBuilder1 = new StrBuilder("f[");
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("LQ~");
      String string0 = "CYD >$(65^sEr2";
      StrBuilder strBuilder1 = strBuilder0.setNullText("CYD >$(65^sEr2");
      strBuilder0.buffer = null;
      char char0 = 'o';
      String string1 = null;
      StrBuilder strBuilder2 = strBuilder1.deleteFirst((String) null);
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "LQ~");
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 0, 1470);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.append("-LOdV{5qCOU7@]", (-4037), 4);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(777);
      char[] charArray0 = new char[0];
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance(charArray0);
      String string0 = null;
      strBuilder0.buffer = charArray0;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, (String) null);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Collection) linkedList0, "_");
      // Undeclared exception!
      try { 
        strBuilder1.append(charArray0, 777, 777);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 777
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      int int0 = strBuilder0.lastIndexOf("", 102);
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('4');
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight(48, 72, '4');
      StrMatcher strMatcher0 = StrMatcher.charMatcher('%');
      StrBuilder strBuilder3 = strBuilder0.replaceFirst((StrMatcher) strMatcher_CharMatcher0, "");
      String string0 = strBuilder1.toString();
      StrBuilder strBuilder4 = strBuilder2.replaceAll("\njava.lang.String@000000000344444444444444444444444444444444444444444444", ":h-2lpF2<,XM Y>");
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = ".O";
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder2 = strBuilder0.append(".O", 0, 0);
      char char0 = 'a';
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadRight((Object) ".O", 31, 'a');
      String string1 = "?F";
      StrBuilder strBuilder4 = strBuilder2.appendNewLine();
      StrBuilder strBuilder5 = strBuilder0.replaceAll("?F", "?F");
      String string2 = strBuilder5.substring(31);
      StrBuilder strBuilder6 = strBuilder2.setNullText("?F");
      int int0 = strBuilder2.indexOf('/', 31);
      int int1 = (-822);
      char[] charArray0 = new char[1];
      charArray0[0] = 'a';
      // Undeclared exception!
      try { 
        strBuilder3.insert((-822), charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -822
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      String string0 = "[8ux!56KILL";
      StrBuilder strBuilder0 = new StrBuilder("[8ux!56KILL");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("[8ux!56KILL");
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.previous();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) "", 97, 'C');
      StrBuilder strBuilder2 = strBuilder0.setLength(0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      StrBuilder strBuilder3 = strBuilder0.append('C');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      boolean boolean1 = strBuilder3.contains(strMatcher0);
      strBuilder_StrBuilderReader0.mark((-3774));
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "");
      StrBuilder strBuilder4 = strBuilder2.ensureCapacity(0);
      int int0 = strBuilder4.indexOf(strMatcher0, 294);
      StrBuilder strBuilder5 = strBuilder1.append(stringBuffer0);
      String string0 = strBuilder5.substring(0);
      strBuilder_StrBuilderReader0.reset();
      int int1 = strBuilder0.indexOf('C');
      char[] charArray0 = new char[3];
      charArray0[0] = 'C';
      charArray0[1] = 'C';
      charArray0[2] = 'C';
      char[] charArray1 = strBuilder0.getChars(charArray0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-519));
      String string0 = strBuilder0.midString((-519), (-519));
      int int0 = strBuilder0.indexOf("Al(Te(+XyywMpyGOEh", (-519));
      StrBuilder strBuilder1 = new StrBuilder(32);
      int int1 = 32;
      StrBuilder strBuilder2 = strBuilder0.setNewLineText("");
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, 32, (-519));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("h2a4}lETMAg_x");
      int int0 = strBuilder0.indexOf("S", (-2));
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      int int0 = 0;
      int int1 = strBuilder0.validateRange(0, 0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      String string0 = "Lm_,";
      strBuilder_StrBuilderWriter0.write("Lm_,");
      strBuilder_StrBuilderWriter0.flush();
      int int2 = 0;
      StrBuilder strBuilder1 = strBuilder0.insert(0, (float) 0);
      String string1 = "pbjU@&s{J;o{Um";
      // Undeclared exception!
      try { 
        strBuilder1.insert(32, "pbjU@&s{J;o{Um");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1522);
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder strBuilder1 = strBuilder0.deleteAll('E');
      boolean boolean0 = strBuilder1.startsWith("l-*<CejrD0,^%(yu");
      char[] charArray0 = new char[2];
      charArray0[0] = 'E';
      charArray0[1] = 'E';
      StrBuilder strBuilder2 = strBuilder0.append(charArray0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("', has a length less than 2");
      strBuilder_StrBuilderWriter0.close();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("", "");
      StrBuilder strBuilder2 = strBuilder0.replaceAll('\\', '{');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      StrTokenizer strTokenizer0 = strBuilder1.asTokenizer();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      Reader reader0 = strBuilder1.asReader();
      String string0 = strBuilder0.leftString(0);
      StrBuilder strBuilder3 = strBuilder2.replaceFirst('o', 't');
      // Undeclared exception!
      try { 
        strBuilder3.toCharArray(2059, 2059);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("ZyPJrFd");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(object0, (-1040), 'r');
      StrBuilder strBuilder2 = strBuilder1.ensureCapacity(39);
      // Undeclared exception!
      try { 
        strBuilder2.insert(39, (-1925));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 39
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      String string0 = strBuilder0.substring(0);
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "");
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      int int0 = (-2231);
      char[] charArray0 = new char[8];
      charArray0[0] = 'X';
      charArray0[1] = 't';
      charArray0[2] = 'O';
      charArray0[3] = 'U';
      charArray0[4] = 't';
      charArray0[5] = '`';
      charArray0[6] = 'J';
      charArray0[7] = '>';
      int int1 = strMatcher0.isMatch(charArray0, 0, 39, 97);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-2231), '{');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2231
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight((Object) strBuilder0, 0, '0');
      StrBuilder strBuilder3 = strBuilder0.replaceFirst('/', 'f');
      String string0 = strBuilder_StrBuilderTokenizer0.toString();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "StrTokenizer[not tokenized yet]");
      // Undeclared exception!
      try { 
        stringBuffer0.delete(34, 857);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("Invalid startIndex: ");
      StrBuilder strBuilder1 = strBuilder0.deleteAll((StrMatcher) strMatcher_StringMatcher0);
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoreEmptyTokens(true);
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      boolean boolean0 = strBuilder0.equals(object0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      char[] charArray0 = new char[5];
      charArray0[0] = 'N';
      charArray0[1] = 'Y';
      charArray0[2] = '8';
      charArray0[3] = 'e';
      charArray0[4] = '1';
      strBuilder_StrBuilderWriter0.write(charArray0);
      strBuilder_StrBuilderWriter0.flush();
      StrBuilder strBuilder2 = strBuilder0.append("Invalid startIndex: ");
      String string0 = strBuilder2.midString(605, 605);
      String string1 = strBuilder1.toString();
      StrBuilder strBuilder3 = strBuilder2.appendNull();
      // Undeclared exception!
      try { 
        strBuilder3.getChars(26, 26, charArray0, 26);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 26
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.replaceAll("yz", "");
      char[] charArray0 = new char[5];
      charArray0[0] = '<';
      charArray0[1] = 'e';
      charArray0[2] = 'r';
      charArray0[3] = '-';
      charArray0[4] = 'y';
      StrBuilder strBuilder2 = strBuilder1.append(charArray0);
      StrMatcher strMatcher0 = StrMatcher.charMatcher('<');
      boolean boolean0 = strBuilder2.contains(strMatcher0);
      String string0 = strBuilder1.leftString(31);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string1 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder strBuilder3 = strBuilder0.clear();
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((StringBuffer) null);
      StrBuilder strBuilder2 = strBuilder0.appendPadding((-2098), 'G');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      int int0 = strBuilder1.lastIndexOf('*', (-1057));
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("h2a4}l|_MAg_x");
      int int0 = strBuilder0.indexOf("S", 0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      String string0 = "o.yQDBDX/i _,?.\\@";
      StrBuilder strBuilder0 = new StrBuilder("o.yQDBDX/i _,?.@");
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("5.1");
      String string1 = "";
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("");
      int int0 = strMatcher0.isMatch((char[]) null, 562, 28, 0);
      StrBuilder strBuilder1 = strBuilder0.append((StrBuilder) null, (-104), (-104));
      // Undeclared exception!
      try { 
        strBuilder1.toCharArray((-1646), (-1646));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1646
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.insert(0, (long) 0);
      strBuilder1.size = (-2069);
      StrBuilder strBuilder2 = new StrBuilder("");
      boolean boolean0 = strBuilder0.equals(strBuilder2);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write((-1053));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2069
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.append((StrBuilder) null, 0, 108);
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("");
      int int0 = strBuilder1.indexOf((StrMatcher) strMatcher_StringMatcher0, 0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter";
      int int0 = 2;
      StrBuilder strBuilder1 = strBuilder0.append("?5nf~V62s2hzWZi;", 2, 2);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      StrBuilder strBuilder2 = strBuilder1.deleteFirst(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder2.append(strBuilder0, 2, 2);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1488));
      StrBuilder strBuilder1 = strBuilder0.append((Object) null);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(363);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      strBuilder_StrBuilderReader0.reset();
      char[] charArray0 = new char[7];
      charArray0[0] = '<';
      charArray0[1] = '@';
      charArray0[2] = '_';
      charArray0[3] = 'I';
      charArray0[4] = 'R';
      charArray0[5] = 'L';
      charArray0[6] = '#';
      StrBuilder strBuilder1 = strBuilder0.setLength(363);
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      StrBuilder strBuilder2 = strBuilder0.replace((StrMatcher) strMatcher_CharSetMatcher0, "", 363, 363, 363);
      StrBuilder strBuilder3 = strBuilder2.insert(363, 1083);
      StrBuilder strBuilder4 = strBuilder0.insert(1, "");
      // Undeclared exception!
      try { 
        strBuilder4.append(charArray0, (-1), 1);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[2];
      charArray0[0] = 'l';
      charArray0[1] = 'Z';
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("");
      char[] charArray1 = strBuilder0.getChars(charArray0);
      // Undeclared exception!
      try { 
        strBuilder0.insert(688, charArray1, (-1), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 688
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.delete(0, 3014);
      char[] charArray0 = new char[4];
      char char0 = 'l';
      charArray0[0] = 'l';
      char char1 = '5';
      charArray0[1] = '5';
      charArray0[2] = 'T';
      char char2 = 'W';
      charArray0[3] = 'W';
      strBuilder1.getChars(0, 0, charArray0, 0);
      StrBuilder strBuilder2 = strBuilder1.append((long) 0);
      char[] charArray1 = new char[1];
      char char3 = 'H';
      charArray1[0] = 'H';
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance(charArray1);
      StrBuilder strBuilder3 = strBuilder1.appendWithSeparators((Iterator) strTokenizer0, "");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrTokenizer strTokenizer1 = StrTokenizer.getTSVInstance("");
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 0, 3014);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.lang.text.StrMatcher$CharSetMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[1];
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      strBuilder_StrBuilderTokenizer0.forEachRemaining(consumer0);
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance("os.name");
      StrTokenizer strTokenizer1 = StrTokenizer.getCSVInstance("os.name");
      charArray0[0] = 'T';
      StrTokenizer strTokenizer2 = StrTokenizer.getTSVInstance(charArray0);
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      String string1 = strBuilder0.getNewLineText();
      StrBuilder strBuilder1 = new StrBuilder();
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrBuilder strBuilder2 = strBuilder1.deleteAll(strMatcher0);
      int int0 = 1316;
      StrBuilder strBuilder3 = strBuilder2.replaceFirst("9o[+.=kj)dH{OMWu<Uo", "");
      StrBuilder strBuilder4 = strBuilder3.appendPadding(1316, '=');
      StrBuilder strBuilder5 = strBuilder2.insert(1316, 0.0);
      // Undeclared exception!
      try { 
        strBuilder5.charAt(1597);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1597
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("", "_$>}_<.}");
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0, 114);
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder0.getChars(Integer.MAX_VALUE, Integer.MAX_VALUE, charArray0, Integer.MAX_VALUE);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2147483647
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(137);
      char[] charArray0 = new char[7];
      charArray0[0] = '^';
      charArray0[1] = '.';
      charArray0[2] = 'V';
      charArray0[3] = 'C';
      charArray0[4] = 'G';
      charArray0[5] = '*';
      charArray0[6] = '8';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(137, 137, charArray0, (-615));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 137
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("/'',<i6!j");
      char char0 = '*';
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrBuilder strBuilder2 = strBuilder0.appendNull();
      char[] charArray0 = new char[9];
      charArray0[0] = '*';
      charArray0[1] = '*';
      charArray0[2] = '*';
      charArray0[3] = 'I';
      charArray0[4] = '*';
      charArray0[5] = '*';
      charArray0[6] = 'X';
      charArray0[7] = '*';
      charArray0[8] = '*';
      strBuilder2.buffer = charArray0;
      StrBuilder strBuilder3 = strBuilder0.replaceFirst("/'',<i6!j", "/'',<i6!j");
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      StrBuilder strBuilder4 = strBuilder3.deleteAll(strMatcher0);
      int int0 = 39;
      int int1 = strBuilder0.indexOf('*', 39);
      // Undeclared exception!
      try { 
        strBuilder0.charAt((-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Qx");
      StrBuilder strBuilder1 = strBuilder0.setNullText("Qx");
      int int0 = 0;
      int int1 = (-2891);
      char[] charArray0 = new char[0];
      StrBuilder strBuilder2 = strBuilder0.append((float) 0);
      // Undeclared exception!
      try { 
        strBuilder1.getChars(0, (-2891), charArray0, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2891
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("fiwpr#j`)O6cpkLd");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder0.endsWith("");
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "OM+g$v!{=\"");
      StrBuilder strBuilder2 = strBuilder1.append(true);
      StrBuilder strBuilder3 = strBuilder0.setNewLineText("`ulCe$A6Xm5%0W");
      int int0 = strBuilder0.lastIndexOf("(SNsp`Tj", (-1938));
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      int int0 = 1082;
      StrBuilder strBuilder0 = new StrBuilder(1082);
      StrBuilder strBuilder1 = strBuilder0.reverse();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.remove();
      } catch(UnsupportedOperationException e) {
         //
         // remove() is unsupported
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      // Undeclared exception!
      try { 
        strBuilder0.charAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      String string0 = strBuilder0.getNewLineText();
      StrBuilder strBuilder1 = strBuilder0.reverse();
      int int0 = 614;
      StrBuilder strBuilder2 = strBuilder0.replaceFirst("java.specification.vendor", (String) null);
      // Undeclared exception!
      try { 
        strBuilder0.insert(114, '');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 114
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2206);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(2206, 2206, 'o');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[3];
      charArray0[0] = 'o';
      charArray0[1] = 'o';
      strBuilder_StrBuilderWriter0.write(2206);
      charArray0[2] = 'o';
      strBuilder_StrBuilderWriter0.write(charArray0);
      strBuilder_StrBuilderWriter0.flush();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(2206);
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      strBuilder_StrBuilderWriter0.close();
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      int int0 = strBuilder1.indexOf(strMatcher0);
      String string0 = strBuilder1.substring(2206, 2404);
      int int1 = strBuilder0.length();
      StrBuilder strBuilder2 = strBuilder0.appendNull();
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrMatcher$NoMatcher");
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 0);
      strBuilder0.size = 32;
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrBuilder strBuilder2 = strBuilder1.deleteAll('\'');
      StrBuilder strBuilder3 = strBuilder1.minimizeCapacity();
      // Undeclared exception!
      try { 
        strBuilder2.deleteCharAt(1272);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1272
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      String string0 = "Invalid startIndex: ";
      StrBuilder strBuilder0 = new StrBuilder("Invalid startIndex: ");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("user.region");
      StrBuilder strBuilder2 = strBuilder1.deleteFirst("user.region");
      StrBuilder strBuilder3 = strBuilder1.append((-777.098F));
      int int0 = strBuilder0.indexOf("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder3.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      String string1 = strBuilder3.midString(0, 4);
      // Undeclared exception!
      try { 
        strBuilder0.replace(strMatcher0, "user.region", 134, 34, 134);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = strBuilder0.toString();
      String string1 = strBuilder0.toString();
      int int0 = strBuilder0.indexOf('u');
      String string2 = strBuilder0.substring(0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(0);
      char[] charArray0 = new char[4];
      charArray0[0] = 'u';
      charArray0[1] = 'u';
      charArray0[2] = 'u';
      charArray0[3] = 'u';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.replace((StrMatcher) strMatcher_CharSetMatcher0, "", 0, 1438, 0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3);
      char[] charArray0 = new char[2];
      charArray0[0] = 'K';
      charArray0[1] = 'L';
      // Undeclared exception!
      try { 
        strBuilder0.getChars((-277), 0, charArray0, 3);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -277
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(5);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(3729, 419, 'V');
      boolean boolean0 = strBuilder0.endsWith("tYqPYA");
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder1 = strBuilder0.append(0);
      strBuilder1.validateIndex(0);
      int int1 = 102;
      char[] charArray0 = null;
      int int2 = 1758;
      StrBuilder strBuilder2 = strBuilder1.append((char[]) null, 5, 1758);
      char char0 = 'S';
      StrBuilder strBuilder3 = strBuilder2.deleteFirst('S');
      // Undeclared exception!
      try { 
        strBuilder1.insert(102, (long) 102);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 102
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[5];
      StrBuilder strBuilder1 = strBuilder0.append(0);
      charArray0[0] = '[';
      charArray0[1] = '6';
      charArray0[2] = ',';
      charArray0[3] = 'Z';
      charArray0[4] = 'x';
      StrBuilder strBuilder2 = strBuilder0.append(charArray0);
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators((Iterator) null, "eE$g2I_-;<zCbP-r");
      String string0 = strBuilder2.rightString(0);
      StrBuilder strBuilder4 = strBuilder3.deleteFirst('[');
      StrTokenizer strTokenizer0 = strBuilder2.asTokenizer();
      StrBuilder strBuilder5 = strBuilder0.setNullText("eE$g2I_-;<zCbP-r");
      StrBuilder strBuilder6 = strBuilder5.deleteFirst("LmIakeaU+#]83FSBv&l");
      StrBuilder strBuilder7 = strBuilder6.appendFixedWidthPadLeft((Object) null, 0, 'X');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      // Undeclared exception!
      try { 
        strBuilder0.substring((-1288));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1288
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      String string0 = "MA^NMA3@27]h#";
      StrBuilder strBuilder0 = new StrBuilder("MA^NMA3@27]h#");
      StrBuilder strBuilder1 = strBuilder0.append("MA^NMA3@27]h#");
      StrBuilder strBuilder2 = strBuilder1.append(strBuilder0);
      StrBuilder strBuilder3 = strBuilder2.append(452.0005229357);
      StrBuilder strBuilder4 = strBuilder3.append('A');
      StrBuilder strBuilder5 = strBuilder2.appendNewLine();
      StrBuilder strBuilder6 = strBuilder2.insert(0, "MA^NMA3@27]h#");
      StrBuilder strBuilder7 = strBuilder2.appendFixedWidthPadLeft(102, 2, '&');
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      StrBuilder strBuilder8 = strBuilder2.deleteAll(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder8.insert(102, 902L);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 102
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = new StrBuilder(182);
      int int1 = (-1595);
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, (-1595), 182);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(31);
      int int0 = (-1192);
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity((-1192));
      String string0 = "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter";
      StrBuilder strBuilder2 = strBuilder1.deleteAll("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      StrBuilder strBuilder3 = strBuilder2.append((char[]) null, 0, 0);
      StrBuilder strBuilder4 = strBuilder1.append((float) (-1192));
      // Undeclared exception!
      try { 
        strBuilder4.appendFixedWidthPadRight((Object) strBuilder0, 37, '/');
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder("-17?:");
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, 918, 9);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      strBuilder0.size = 0;
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.append((double) 0);
      int int1 = strBuilder0.hashCode();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[9];
      charArray0[0] = '>';
      charArray0[1] = 'q';
      charArray0[2] = 'f';
      StrBuilder strBuilder2 = strBuilder0.append(true);
      charArray0[3] = '/';
      charArray0[4] = 'y';
      charArray0[5] = 'f';
      charArray0[6] = '{';
      StrBuilder strBuilder3 = strBuilder0.replaceAll("org.apache.commons.lang.text.StrBuilder", "org.apache.commons.lang.text.StrBuilder");
      charArray0[7] = 'G';
      charArray0[8] = 'T';
      int int2 = strBuilder_StrBuilderReader0.read(charArray0);
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      // Undeclared exception!
      try { 
        strBuilder3.substring(117, 7);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceAll((StrMatcher) null, "8!QSDG^Y SB1`t");
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((Object) "8!QSDG^Y SB1`t", 3, '(');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("");
      StrBuilder strBuilder3 = strBuilder2.insert(0, (long) 0);
      // Undeclared exception!
      try { 
        strBuilder0.insert(48, (Object) "8!QSDG^Y SB1`t");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 48
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) "", 0, 'Z');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      int int0 = 3;
      // Undeclared exception!
      try { 
        strBuilder1.substring(32, 526);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      char[] charArray0 = new char[7];
      charArray0[0] = 'N';
      charArray0[1] = 'w';
      charArray0[2] = '/';
      charArray0[3] = '>';
      charArray0[4] = 'a';
      charArray0[5] = 'y';
      charArray0[6] = 'P';
      // Undeclared exception!
      try { 
        strBuilder0.insert((-3128), charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3128
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(48);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
      char[] charArray0 = new char[8];
      charArray0[0] = 'W';
      charArray0[1] = 's';
      charArray0[2] = 'm';
      charArray0[3] = '6';
      charArray0[4] = 'n';
      charArray0[5] = '*';
      charArray0[6] = '|';
      charArray0[7] = ',';
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance(charArray0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, (String) null);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("flcQQf2t=!g@^&lD17");
      StrBuilder strBuilder1 = strBuilder0.insert(0, 1.0);
      StrBuilder strBuilder2 = strBuilder0.replaceAll("flcQQf2t=!g@^&lD17", "', has a length less than 2");
      StrBuilder strBuilder3 = strBuilder0.replaceAll(';', 'X');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      String string0 = strBuilder_StrBuilderTokenizer0.nextToken();
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadLeft(object0, 898, 'l');
      StrBuilder strBuilder5 = strBuilder3.setCharAt(0, 'l');
      char[] charArray0 = new char[0];
      strBuilder1.getChars(0, 0, charArray0, 0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setLength(48);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      int int0 = 3916;
      StrBuilder strBuilder0 = new StrBuilder(3916);
      int int1 = (-1812);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1812), (double) (-1812));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1812
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      int int0 = (-1171);
      StrBuilder strBuilder0 = new StrBuilder((-1171));
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      String string0 = "4o/[{F:fI";
      char char0 = '#';
      StrMatcher strMatcher1 = StrMatcher.charMatcher('#');
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher("4o/[{F:fI");
      StrMatcher strMatcher3 = StrMatcher.charSetMatcher((char[]) null);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.setNewLineText("4o/[{F:fI");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(117);
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadRight((Object) "4o/[{F:fI", 117, 'F');
      StrBuilder strBuilder4 = strBuilder0.clear();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(2280);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read((char[]) null, (-1171), 2497);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = strBuilder0.toCharArray();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("4%aqU;yT=_Y!g1\"");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark((-146));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance((char[]) null);
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      int int0 = strBuilder0.indexOf('4', (-146));
      int int1 = strBuilder0.capacity();
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("4%aqU;yT=_Y!g1\"");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst((StrMatcher) strMatcher_TrimMatcher0);
      strBuilder_StrBuilderReader0.reset();
      StrBuilder strBuilder2 = strBuilder1.append(0.0F);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.clear();
      String string0 = strBuilder2.midString((-1), (-2566));
      StrBuilder strBuilder3 = strBuilder0.append(0.0F);
      char[] charArray0 = new char[3];
      charArray0[0] = ' ';
      charArray0[1] = 'J';
      char char0 = 'R';
      charArray0[2] = 'R';
      StrBuilder strBuilder4 = strBuilder3.insert(0, charArray0);
      StrBuilder strBuilder5 = strBuilder2.replaceAll("", "");
      StrBuilder strBuilder6 = strBuilder3.appendFixedWidthPadLeft((Object) "sJS[a<D p,>3k'", 0, 'x');
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      StrBuilder strBuilder7 = strBuilder6.appendWithSeparators((Collection) linkedList0, "");
      StrBuilder strBuilder8 = strBuilder0.reverse();
      StringBuffer stringBuffer0 = strBuilder8.toStringBuffer();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, (-2566), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('4');
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight(48, 72, '4');
      StrMatcher strMatcher0 = StrMatcher.charMatcher('%');
      String string0 = strBuilder1.toString();
      StrBuilder strBuilder3 = strBuilder2.replaceAll("\njava.lang.String@0000000003444444444444444444444444444444444444444444444", ":h-2lpF2<,XM Y>");
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      int int0 = 3;
      StrBuilder strBuilder0 = new StrBuilder(3);
      char[] charArray0 = new char[1];
      charArray0[0] = 'c';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StrBuilder strBuilder2 = strBuilder1.append(charArray0);
      StrTokenizer strTokenizer0 = strBuilder2.asTokenizer();
      StrBuilder strBuilder3 = strBuilder0.deleteFirst('H');
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) strBuilder3;
      String string0 = "S ^2,";
      StrBuilder strBuilder4 = strBuilder3.appendWithSeparators(objectArray0, "S ^2,");
      StrBuilder strBuilder5 = strBuilder4.insert(3, charArray0);
      StrBuilder strBuilder6 = strBuilder4.minimizeCapacity();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
      int int1 = (-576);
      // Undeclared exception!
      try { 
        strBuilder1.append(charArray0, (-576), (-576));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -576
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.deleteAll(')');
      char[] charArray0 = new char[1];
      charArray0[0] = 'k';
      strBuilder0.getChars(0, 0, charArray0, 0);
      StrBuilder strBuilder2 = new StrBuilder(845);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(0L);
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      int int0 = strBuilder2.lastIndexOf(strMatcher0, 0);
      StrBuilder strBuilder3 = strBuilder0.append("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      StrBuilder strBuilder4 = strBuilder2.deleteFirst((StrMatcher) null);
      // Undeclared exception!
      try { 
        strBuilder3.insert(117, 'f');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 117
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.lastIndexOf('\'', (-110));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[2];
      charArray0[0] = '\'';
      charArray0[1] = '3';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 2, (-1));
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2242);
      char[] charArray0 = new char[7];
      charArray0[0] = 'H';
      charArray0[1] = '_';
      charArray0[2] = 'k';
      charArray0[3] = '&';
      charArray0[4] = 'Q';
      charArray0[5] = '%';
      charArray0[6] = 'o';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 0, 637);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 637
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      String string0 = strBuilder0.getNewLineText();
      int int0 = strBuilder0.lastIndexOf((String) null);
      char char0 = 'm';
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt((-1), 'm');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      // Undeclared exception!
      try { 
        strBuilder0.replace(117, 117, "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid length: ");
      StrBuilder strBuilder1 = strBuilder0.append("h6HQvJlG~,||X67;l");
      int int0 = strBuilder0.hashCode();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = 0L;
      int int1 = (-475);
      char[] charArray0 = new char[8];
      charArray0[0] = '[';
      charArray0[1] = 'p';
      charArray0[2] = 'y';
      charArray0[3] = '6';
      charArray0[4] = 'R';
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "Invalid length: ");
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charBuffer0);
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.StringCharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.append((Object) "");
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      char[] charArray0 = new char[7];
      charArray0[0] = '6';
      charArray0[1] = ':';
      charArray0[2] = '\\';
      charArray0[3] = '\'';
      charArray0[4] = 'h';
      charArray0[5] = '0';
      charArray0[6] = ':';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("c8csVParXP>JvZ%");
      StrBuilder strBuilder2 = strBuilder1.append(strBuilder0);
      char[] charArray1 = strBuilder0.toCharArray(0, 0);
      StrBuilder strBuilder3 = strBuilder0.replaceAll((StrMatcher) strMatcher_TrimMatcher0, "'; the SystemUtils property value will default to null.");
      StrBuilder strBuilder4 = strBuilder3.appendNull();
      int int0 = strBuilder3.indexOf("c8csVParXP>JvZ%", 0);
      int int1 = strBuilder1.hashCode();
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("]");
      boolean boolean0 = strBuilder0.isEmpty();
      StrBuilder strBuilder1 = strBuilder0.append("");
      StrBuilder strBuilder2 = strBuilder1.clear();
      int int0 = strBuilder0.indexOf('M');
      int int1 = strBuilder0.hashCode();
      char[] charArray0 = new char[5];
      charArray0[0] = '+';
      charArray0[1] = 'M';
      charArray0[2] = '[';
      charArray0[3] = 'z';
      charArray0[4] = 'M';
      char[] charArray1 = strBuilder0.getChars(charArray0);
      int int2 = strBuilder2.indexOf('z');
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      int int3 = 117;
      // Undeclared exception!
      try { 
        strBuilder0.replace(strMatcher0, "", 117, 0, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = new StrBuilder("Linux");
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("V.e7k/Xl0bh");
      String string0 = strBuilder0.getNewLineText();
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("z@JaC2sC}Wpj4Fv");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterString("l7=M=R^'9X#oGsw8");
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 6);
      int int1 = strBuilder0.lastIndexOf("l7=M=R^'9X#oGsw8", 44);
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      int int2 = strBuilder0.lastIndexOf(strMatcher0, (-1));
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      char[] charArray0 = new char[1];
      charArray0[0] = '(';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      strBuilder1.size = (-453);
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("");
      // Undeclared exception!
      try { 
        strBuilder0.deleteAll(strMatcher0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) "*OGw", 1152, ')');
      int int0 = (-1611);
      String string0 = "";
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("");
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      char char0 = '/';
      StrBuilder strBuilder2 = strBuilder0.insert(0, '/');
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadRight(1152, 0, ')');
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1611), true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1611
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-263));
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(0);
      char[] charArray0 = new char[4];
      StrBuilder strBuilder2 = strBuilder0.append(false);
      charArray0[0] = 'w';
      charArray0[1] = 'h';
      charArray0[2] = 'R';
      StrBuilder strBuilder3 = strBuilder1.replaceFirst("", (String) null);
      charArray0[3] = '`';
      // Undeclared exception!
      try { 
        strBuilder0.insert(116, charArray0, (-3883), (-263));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 116
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.toString();
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0, (-3764));
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2601);
      StringBuffer stringBuffer0 = new StringBuffer(0);
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder2 = strBuilder1.append(44);
      StrBuilder strBuilder3 = strBuilder2.delete(0, 108);
      StrBuilder strBuilder4 = strBuilder0.replace(0, 2601, "");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[8];
      charArray0[0] = 'm';
      charArray0[1] = 'd';
      charArray0[2] = 'Z';
      charArray0[3] = '#';
      charArray0[4] = 'c';
      charArray0[5] = '>';
      charArray0[6] = '<';
      charArray0[7] = 't';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0);
      int int1 = strBuilder_StrBuilderReader0.read();
      int int2 = strBuilder_StrBuilderReader0.read();
      StrBuilder strBuilder5 = strBuilder1.replaceFirst('q', 'P');
      StrBuilder strBuilder6 = strBuilder3.setNullText("HP-UX");
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3);
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("length must be valid");
      StrBuilder strBuilder1 = strBuilder0.insert(0, 0L);
      StrBuilder strBuilder2 = strBuilder0.replaceAll(strMatcher0, "A<_BSsw57*<}");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher((char[]) null);
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.appendNewLine();
      StrBuilder strBuilder3 = strBuilder2.deleteAll('=');
      String string0 = strBuilder0.getNullText();
      StrBuilder strBuilder4 = strBuilder1.trim();
      StrBuilder strBuilder5 = strBuilder1.appendFixedWidthPadLeft((-544), 1129, 'C');
      StrBuilder strBuilder6 = strBuilder5.append(2834L);
      StrBuilder strBuilder7 = strBuilder5.append(482.8578F);
      int int0 = strBuilder5.lastIndexOf('P', 0);
      // Undeclared exception!
      try { 
        strBuilder3.insert(5577, (Object) strMatcher0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 5577
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-602));
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[2];
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      charArray0[0] = 'u';
      strBuilder_StrBuilderWriter0.write((-602));
      charArray0[1] = '/';
      strBuilder_StrBuilderWriter0.write(charArray0);
      StrBuilder strBuilder2 = strBuilder0.deleteAll('k');
      StrBuilder strBuilder3 = strBuilder2.ensureCapacity((-602));
      StrBuilder strBuilder4 = strBuilder0.append((long) (-602));
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      int int0 = strBuilder4.indexOf(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder1.substring((-602));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -602
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.size();
      StrBuilder strBuilder1 = strBuilder0.insert(0, false);
      StrBuilder strBuilder2 = strBuilder1.append("");
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher("");
      int int1 = strBuilder0.lastIndexOf(strMatcher0, 0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = ':';
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(3187, ':');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3187
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(1735, 'd');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1735
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = "java.runtime.version";
      StringBuffer stringBuffer0 = new StringBuffer("java.runtime.version");
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      // Undeclared exception!
      try { 
        stringBuffer0.delete((-279), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -279
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-713));
      char[] charArray0 = new char[1];
      charArray0[0] = 'N';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      Reader reader0 = strBuilder1.asReader();
      int int0 = strBuilder0.indexOf('o', (-713));
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1626);
      char char0 = 'f';
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.deleteAll('f');
      // Undeclared exception!
      try { 
        strBuilder2.validateRange(1626, 1626);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[7];
      charArray0[0] = 'O';
      charArray0[1] = 'E';
      charArray0[2] = 'N';
      charArray0[3] = '+';
      charArray0[4] = '`';
      charArray0[5] = 'H';
      charArray0[6] = 'h';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      // Undeclared exception!
      try { 
        strBuilder0.delete((-468), (-468));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -468
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "%#O2EcxCO.w;}");
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Collection) linkedList0, "org.apache.commons.lang.text.StrMatcher");
      // Undeclared exception!
      try { 
        strBuilder0.delete(0, (-921));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(65);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.insert(0, 'c');
      boolean boolean0 = strBuilder0.endsWith("user.timezone");
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-511));
      int int0 = strBuilder0.lastIndexOf((StrMatcher) null, (-1));
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('E');
      int int1 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_CharMatcher0, (-511));
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((-511), (-511), '(');
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[7];
      charArray0[0] = '*';
      charArray0[1] = '(';
      charArray0[2] = 'r';
      charArray0[3] = '@';
      charArray0[4] = 'J';
      StrBuilder strBuilder1 = strBuilder0.append(false);
      charArray0[5] = ')';
      charArray0[6] = ';';
      strBuilder0.getChars(0, 0, charArray0, 0);
      StrBuilder strBuilder2 = strBuilder0.replaceAll("", "");
      String string0 = strBuilder2.rightString(0);
      StrBuilder strBuilder3 = strBuilder2.append(charArray0, 0, 0);
      StrBuilder strBuilder4 = strBuilder2.clear();
      // Undeclared exception!
      try { 
        strBuilder3.append("", 0, 10);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("add() is unsupported", (String) null);
      int int0 = 0;
      int int1 = 0;
      StrBuilder strBuilder2 = strBuilder1.insert(0, 0);
      StrBuilder strBuilder3 = strBuilder0.append(0.0F);
      StrBuilder strBuilder4 = strBuilder3.appendNull();
      int int2 = (-2803);
      // Undeclared exception!
      try { 
        strBuilder1.insert((-2803), (Object) strBuilder0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2803
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      String string0 = "Yb,N%V>v@.]ir9xURO";
      StrBuilder strBuilder0 = new StrBuilder("Yb,N%V>v@.]ir9xURO");
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrMatcher strMatcher0 = StrMatcher.charMatcher('W');
      int int0 = (-1334);
      // Undeclared exception!
      try { 
        strBuilder1.replace(strMatcher0, (String) null, (-1334), 2038, 2038);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1334
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid length: ");
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.deleteCharAt(0);
      StrBuilder strBuilder2 = strBuilder1.append(strBuilder0);
      String string0 = strBuilder1.rightString(0);
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("Invalid length: ");
      char[] charArray0 = new char[6];
      charArray0[0] = '`';
      charArray0[1] = 'G';
      charArray0[2] = '`';
      charArray0[3] = '`';
      charArray0[4] = '`';
      charArray0[5] = '`';
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher(charArray0);
      StrMatcher strMatcher3 = StrMatcher.charMatcher('`');
      StrMatcher strMatcher4 = StrMatcher.charSetMatcher("Invalid length: ");
      StrBuilder strBuilder3 = strBuilder0.deleteFirst((StrMatcher) strMatcher_TrimMatcher0);
      StrBuilder strBuilder4 = strBuilder3.setNewLineText((String) null);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset();
      String string1 = strBuilder_StrBuilderTokenizer0.getContent();
      String string2 = strBuilder_StrBuilderTokenizer0.getContent();
      int int0 = strBuilder0.lastIndexOf(strMatcher1, 0);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.append(0);
      StrBuilder strBuilder3 = strBuilder2.appendPadding(0, '0');
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      int int0 = strBuilder_StrBuilderTokenizer0.size();
      int int1 = 3399;
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadRight(object0, 3399, 'T');
      char[] charArray0 = new char[9];
      charArray0[0] = 'T';
      StrBuilder strBuilder5 = strBuilder4.setLength(0);
      charArray0[1] = 'T';
      charArray0[2] = 'T';
      charArray0[3] = 'T';
      charArray0[4] = 'T';
      charArray0[5] = 'T';
      charArray0[6] = 'T';
      charArray0[7] = 'T';
      charArray0[8] = 'T';
      StrBuilder strBuilder6 = strBuilder4.append(charArray0, 1, 0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      String string0 = ", '";
      int int2 = 0;
      Writer writer0 = strBuilder_StrBuilderWriter0.append('T');
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.append((CharSequence) ", '", (-4679), 0);
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('#');
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 5);
      String string0 = strBuilder0.midString(100, 100);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[4];
      StrBuilder strBuilder1 = strBuilder0.append((-1L));
      charArray0[0] = ':';
      charArray0[1] = 'D';
      charArray0[2] = '\\';
      charArray0[3] = 'B';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 0, (-1138));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: -1138
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("", 0, 0);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('s');
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 4882);
      int int1 = strBuilder0.indexOf(strMatcher0, 418);
      String string0 = strBuilder0.midString(0, 0);
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Iterator) null, "");
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex(102);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 102
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("_Dj@Y");
      StrMatcher strMatcher0 = StrMatcher.charMatcher('T');
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray(1151, 1151);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = new StringBuffer();
      int int0 = 32;
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 32, 32);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[5];
      charArray0[0] = 'M';
      charArray0[1] = 'V';
      charArray0[2] = 'M';
      charArray0[3] = '3';
      charArray0[4] = '[';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      int int0 = (-258);
      StrBuilder strBuilder0 = new StrBuilder((-258));
      char char0 = '\'';
      StrBuilder strBuilder1 = strBuilder0.append((char[]) null);
      StrBuilder strBuilder2 = strBuilder1.replaceAll((String) null, (String) null);
      Reader reader0 = strBuilder1.asReader();
      // Undeclared exception!
      try { 
        strBuilder1.deleteCharAt((-258));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -258
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.indexOf("Q%=!|:~vJV4");
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      char[] charArray0 = new char[7];
      charArray0[0] = 'a';
      charArray0[1] = ')';
      charArray0[2] = 'F';
      charArray0[3] = 'G';
      charArray0[4] = '\\';
      charArray0[5] = '~';
      charArray0[6] = 'y';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "");
      String string0 = strBuilder0.rightString((-1249));
      int int0 = strBuilder0.lastIndexOf(strMatcher1);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("| ");
      String string0 = strBuilder0.leftString(16);
      int int0 = strBuilder0.indexOf("", 293);
      int int1 = strBuilder0.indexOf('L', (-1155));
      StrBuilder strBuilder1 = strBuilder0.append(false);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      int int0 = 3;
      StrBuilder strBuilder0 = new StrBuilder(3);
      int int1 = 179;
      // Undeclared exception!
      try { 
        strBuilder0.append("Invalid length: ", 3, 179);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(114);
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll((StrMatcher) strMatcher_TrimMatcher0);
      String string0 = "$3GG%s!Q";
      StringBuffer stringBuffer0 = new StringBuffer("$3GG%s!Q");
      StringBuffer stringBuffer1 = stringBuffer0.append((double) 114);
      stringBuffer0.setLength(0);
      // Undeclared exception!
      try { 
        strBuilder1.append(stringBuffer0, 114, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = new StrBuilder(0);
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      int int0 = strBuilder2.lastIndexOf(strMatcher0, 0);
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder0.getChars((-1), 0, charArray0, 187);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.append("k.FV'co");
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      StrBuilder strBuilder2 = strBuilder1.deleteAll(strMatcher0);
      boolean boolean0 = strBuilder0.endsWith("");
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[1];
      charArray0[0] = '=';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "java.util.prefs.PreferencesFactory");
      StrBuilder strBuilder2 = strBuilder1.appendPadding(0, '=');
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4.9");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      String string0 = null;
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      String string1 = "";
      int int0 = 2780;
      // Undeclared exception!
      try { 
        strBuilder0.append("", 2780, 2780);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-830);
      StrBuilder strBuilder1 = new StrBuilder((-830));
      char char0 = 'p';
      StrBuilder strBuilder2 = strBuilder1.appendPadding((-830), 'p');
      StrBuilder strBuilder3 = strBuilder2.trim();
      // Undeclared exception!
      try { 
        strBuilder3.validateIndex(2);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("{f@j");
      StrBuilder strBuilder1 = strBuilder0.append((-1687.75874114883));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      // Undeclared exception!
      try { 
        strBuilder1.insert((-2718), object0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2718
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      StrBuilder strBuilder1 = strBuilder0.insert(0, '_');
      StrBuilder strBuilder2 = strBuilder1.trim();
      StrBuilder strBuilder3 = new StrBuilder("");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder3.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
      strBuilder_StrBuilderWriter0.write("");
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("", 2, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-595));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrBuilder strBuilder1 = new StrBuilder((-595));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("");
      StrBuilder strBuilder2 = strBuilder1.deleteFirst(strMatcher0);
      StrBuilder strBuilder3 = strBuilder1.deleteAll('<');
      boolean boolean0 = strBuilder0.equals(strBuilder1);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      long long0 = strBuilder_StrBuilderReader0.skip((-595));
      boolean boolean1 = strBuilder0.contains('<');
      StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher1, "");
      strBuilder_StrBuilderReader0.reset();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("", (-1), 1224);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder((-66));
      boolean boolean0 = strBuilder0.equals(strBuilder1);
      StrBuilder strBuilder2 = strBuilder1.append(true);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        strBuilder2.insert((-66), object0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -66
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3512);
      char[] charArray0 = new char[4];
      charArray0[0] = 't';
      charArray0[1] = 'p';
      charArray0[2] = ' ';
      charArray0[3] = '4';
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance(charArray0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "");
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-2687);
      StrBuilder strBuilder1 = new StrBuilder((-2687));
      StrBuilder strBuilder2 = strBuilder0.append((Object) strBuilder1);
      int int1 = 4231;
      int int2 = 32;
      // Undeclared exception!
      try { 
        strBuilder1.charAt(4231);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 4231
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      String string0 = "7)+zM-R>aU^w:-d";
      StrBuilder strBuilder0 = new StrBuilder("7)+zM-R>aU^w:-d");
      char char0 = 'C';
      boolean boolean0 = strBuilder0.contains('C');
      int int0 = Integer.MAX_VALUE;
      // Undeclared exception!
      try { 
        strBuilder0.insert(Integer.MAX_VALUE, (-1.0F));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2147483647
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(5424);
      String string0 = strBuilder0.midString(2225, 2225);
      int int0 = 5;
      char char0 = 'z';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(0, 0, 'z');
      // Undeclared exception!
      try { 
        strBuilder0.insert(5, "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 5
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-921));
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.insert(0, (-1891));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder strBuilder2 = strBuilder1.append(1040);
      char[] charArray0 = new char[5];
      char char0 = 'V';
      // Undeclared exception!
      try { 
        strBuilder2.insert((-3528), (-1891));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3528
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(7);
      String string0 = strBuilder0.midString((-2272), 7);
      Object object0 = new Object();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(object0, 37, '&');
      boolean boolean0 = strBuilder0.isEmpty();
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance();
      Object object1 = new Object();
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft(object1, (-356), 'a');
      StrBuilder strBuilder3 = strBuilder1.appendWithSeparators((Iterator) strTokenizer0, "Solaris");
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1957);
      String string0 = strBuilder0.midString(2832, (-828));
      int int0 = strBuilder0.lastIndexOf('I');
      char[] charArray0 = new char[4];
      charArray0[0] = 'I';
      charArray0[1] = 'I';
      charArray0[2] = 'I';
      charArray0[3] = 'I';
      // Undeclared exception!
      try { 
        strBuilder0.insert(0, charArray0, 0, (-1025));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: -1025
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("LS;\"xe:");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(0, 0, '&');
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[8];
      charArray0[0] = '=';
      charArray0[1] = '(';
      charArray0[2] = 'b';
      charArray0[3] = 'I';
      charArray0[4] = 'd';
      charArray0[5] = 'P';
      charArray0[6] = 'A';
      charArray0[7] = '#';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(48);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark((-865));
      char[] charArray0 = new char[3];
      charArray0[0] = 'K';
      charArray0[1] = 'b';
      charArray0[2] = 'M';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 34, 238);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 2;
      // Undeclared exception!
      try { 
        strBuilder0.charAt(2);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      boolean boolean0 = strBuilder0.isEmpty();
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      char[] charArray0 = strBuilder0.toCharArray(44, 97);
      StrBuilder strBuilder1 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((Object) strBuilder1, 97, '*');
      boolean boolean1 = strBuilder0.contains('_');
      StrMatcher strMatcher1 = StrMatcher.noneMatcher();
      StrMatcher strMatcher2 = StrMatcher.charMatcher('_');
      String string0 = strBuilder0.toString();
      int int1 = strBuilder0.indexOf(strMatcher1, 44);
      StrBuilder strBuilder3 = strBuilder2.append(0.0F);
      StrBuilder strBuilder4 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder4.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      boolean boolean2 = strBuilder_StrBuilderReader0.markSupported();
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1216));
      boolean boolean0 = strBuilder0.contains('S');
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "ell";
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("ell");
      StrBuilder strBuilder2 = strBuilder1.minimizeCapacity();
      String string1 = strBuilder0.substring(0, 926);
      StrBuilder strBuilder3 = strBuilder1.insert(0, (float) 0);
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadRight(926, 926, '3');
      StrBuilder strBuilder5 = strBuilder4.append((Object) "ell");
      char char0 = strBuilder4.charAt(926);
      // Undeclared exception!
      try { 
        strBuilder4.setLength((-144));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -144
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(0L);
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      int int0 = strBuilder1.lastIndexOf(strMatcher0, (-641));
      String string0 = strBuilder1.midString((-569), (-2363));
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(34);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(34, 34, ')');
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.isEmpty();
      String string0 = strBuilder0.toString();
      StrBuilder strBuilder1 = strBuilder0.append((-226.52));
      StrBuilder strBuilder2 = strBuilder0.replaceAll('l', 'l');
      StrBuilder strBuilder3 = strBuilder2.reverse();
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize((char[]) null, 0, 0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strBuilder_StrBuilderTokenizer0, (String) null);
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      int int0 = strBuilder1.lastIndexOf(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.replaceFirst("r", "java.vm.vendor");
      StrBuilder strBuilder3 = strBuilder2.replaceFirst("", "r");
      int int1 = strBuilder1.size();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      char[] charArray0 = strBuilder1.toCharArray();
      Writer writer0 = strBuilder1.asWriter();
      int int2 = strBuilder0.indexOf('7');
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      // Undeclared exception!
      try { 
        strBuilder0.insert(1432, 1432);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1432
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.insert(0, (double) 0);
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(68);
      String string0 = strBuilder0.getNullText();
      StrBuilder strBuilder1 = strBuilder0.append(68);
      char[] charArray0 = new char[6];
      charArray0[0] = 'N';
      charArray0[1] = '';
      charArray0[2] = 'o';
      charArray0[3] = '@';
      charArray0[4] = 'l';
      charArray0[5] = ')';
      // Undeclared exception!
      try { 
        strBuilder1.insert(68, charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 68
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(40);
      int int0 = strBuilder0.indexOf('&');
      StrMatcher strMatcher0 = StrMatcher.charMatcher(' ');
      int int1 = strBuilder0.indexOf(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) strBuilder0;
      Object object0 = new Object();
      objectArray0[1] = object0;
      objectArray0[2] = (Object) strBuilder0;
      objectArray0[3] = (Object) strBuilder0;
      objectArray0[4] = (Object) strBuilder0;
      objectArray0[5] = (Object) strBuilder0;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object1 = strBuilder_StrBuilderTokenizer0.clone();
      objectArray0[6] = object1;
      Object object2 = strBuilder_StrBuilderTokenizer0.cloneReset();
      objectArray0[7] = object2;
      objectArray0[8] = (Object) strBuilder0;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "9ik)");
      int int0 = strBuilder0.size();
      char[] charArray0 = new char[5];
      charArray0[0] = 'n';
      charArray0[1] = 'E';
      charArray0[2] = 'F';
      charArray0[3] = '^';
      charArray0[4] = 'a';
      // Undeclared exception!
      try { 
        strBuilder1.append(charArray0, 499, 499);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 499
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-637);
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt((-637), '>');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -637
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1084));
      StrBuilder strBuilder1 = strBuilder0.append(876.934F);
      int int0 = 477;
      StrBuilder strBuilder2 = strBuilder0.append((long) 477);
      // Undeclared exception!
      try { 
        strBuilder2.deleteCharAt((-1084));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1084
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("GXSNN'Emu=t{O");
      Writer writer0 = strBuilder0.asWriter();
      char[] charArray0 = strBuilder0.toCharArray();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("GXSNN'Emu=t{O", "GXSNN'Emu=t{O");
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) "GXSNN'Emu=t{O";
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators(objectArray0, "");
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators((Collection) null, (String) null);
      Writer writer1 = strBuilder0.asWriter();
      StrBuilder strBuilder4 = strBuilder2.deleteFirst('Y');
      int int0 = 0;
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 55, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      // Undeclared exception!
      try { 
        strBuilder0.insert(116, 'u');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 116
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.indexOf('@', 34);
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((-1586.7F));
      StringBuffer stringBuffer0 = new StringBuffer(2);
      StrBuilder strBuilder2 = strBuilder0.append(stringBuffer0);
      String string0 = strBuilder0.leftString((-1654));
      int int0 = strBuilder0.capacity();
      StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
      StrTokenizer strTokenizer0 = strBuilder1.asTokenizer();
      Object[] objectArray0 = new Object[0];
      StrBuilder strBuilder4 = strBuilder3.appendWithSeparators(objectArray0, "");
      // Undeclared exception!
      try { 
        strBuilder4.setLength((-1654));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1654
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt((-2420));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2420
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      StrBuilder strBuilder2 = strBuilder0.replaceAll('9', '?');
      int int0 = strBuilder2.length();
      char[] charArray0 = new char[7];
      charArray0[0] = '?';
      charArray0[1] = '9';
      charArray0[2] = '9';
      charArray0[3] = '9';
      charArray0[4] = '9';
      charArray0[5] = '9';
      charArray0[6] = '9';
      // Undeclared exception!
      try { 
        strBuilder2.append(charArray0, (-1), 1131);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 1131
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("");
      int int0 = strBuilder0.indexOf((StrMatcher) strMatcher_StringMatcher0);
      StrBuilder strBuilder1 = strBuilder0.replaceAll('%', '%');
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[2];
      charArray0[0] = ';';
      int int0 = 0;
      strBuilder_StrBuilderWriter0.write("Oj*", 0, 0);
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      int int1 = strBuilder0.indexOf(strMatcher0);
      charArray0[1] = '~';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, (-1506), (-1506));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -1506
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(31);
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("P5rlp[[^9=UMwG^K");
      StrBuilder strBuilder1 = strBuilder0.replaceAll("P5rlp[[^9=UMwG^K", "T5+pVv`RDj");
      StrBuilder strBuilder2 = strBuilder0.deleteFirst("15H~m#%T=AFz8|R=I?");
      StrBuilder strBuilder3 = strBuilder1.append("CV(vSA62aN l[?m", 0, 4);
      int int0 = strBuilder3.lastIndexOf((StrMatcher) null);
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrBuilder strBuilder4 = strBuilder1.deleteFirst(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(166);
      StrBuilder strBuilder1 = new StrBuilder(0);
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((Object) strBuilder1, 166, '8');
      StrBuilder strBuilder3 = strBuilder2.replaceAll("IS", "IS");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(166);
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(0);
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrBuilder strBuilder2 = strBuilder1.deleteFirst(strMatcher0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(0);
      StrBuilder strBuilder2 = strBuilder1.replace(0, 0, "3(&_@7G~L#");
      StrBuilder strBuilder3 = strBuilder0.deleteFirst("m");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      Writer writer0 = strBuilder3.asWriter();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      int int0 = strBuilder3.lastIndexOf(strMatcher0, 0);
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("P5rlp[[^9=UMwG^K");
      StrBuilder strBuilder1 = strBuilder0.append("CV(vSA62aN l[?m", 0, 4);
      int int0 = strBuilder1.lastIndexOf((StrMatcher) null);
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      int int1 = strBuilder0.lastIndexOf(strMatcher0);
      int int2 = strBuilder0.indexOf(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(36);
      StrBuilder strBuilder1 = strBuilder0.insert(0, 's');
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("flcQQf2t=!g@^&lD17");
      StrBuilder strBuilder1 = strBuilder0.insert(0, 1.0);
      StrBuilder strBuilder2 = strBuilder0.replaceAll("flcQQf2t=!g@^&lD17", "', has a length less than 2");
      StrBuilder strBuilder3 = strBuilder0.replaceAll(';', 'X');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance("");
      String string0 = strBuilder_StrBuilderTokenizer0.nextToken();
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadLeft(object0, 898, 'l');
      StrBuilder strBuilder5 = strBuilder3.setCharAt(0, 'l');
      char[] charArray0 = new char[0];
      strBuilder1.getChars(0, 0, charArray0, 0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
      // Undeclared exception!
      try { 
        strBuilder0.insert((-2598), true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2598
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2096);
      char[] charArray0 = new char[7];
      charArray0[0] = 'k';
      charArray0[1] = 'L';
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('L');
      charArray0[2] = 'i';
      charArray0[3] = '!';
      charArray0[4] = 'S';
      charArray0[5] = 'f';
      charArray0[6] = 'T';
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance(charArray0);
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "");
      String string0 = strBuilder0.rightString(612);
      StrBuilder strBuilder3 = strBuilder0.deleteFirst('U');
      int int0 = strBuilder2.lastIndexOf("", 5);
      boolean boolean0 = strBuilder0.isEmpty();
      Reader reader0 = strBuilder1.asReader();
      StrBuilder strBuilder4 = strBuilder0.append(1L);
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      int int0 = 4562;
      StrBuilder strBuilder0 = new StrBuilder(4562);
      StrBuilder strBuilder1 = strBuilder0.deleteAll('&');
      // Undeclared exception!
      try { 
        strBuilder1.substring(4562);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.toString();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "StrTokenizer[not tokenized yet]");
      int int0 = 0;
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterMatcher(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 0, 57);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((-1725), (-1725), '^');
      StrBuilder strBuilder2 = strBuilder1.deleteFirst('^');
      StrBuilder strBuilder3 = strBuilder0.deleteAll("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      StrBuilder strBuilder4 = strBuilder0.appendPadding((-625), 'R');
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder5 = strBuilder0.appendNull();
      // Undeclared exception!
      try { 
        strBuilder1.setCharAt((-352), 'J');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -352
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.append("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter", 0, 0);
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.size = 596;
      boolean boolean0 = strBuilder0.startsWith(" \t\n\r\f");
      StrBuilder strBuilder1 = new StrBuilder((String) null);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("pmzF@[ODHrq");
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight((Object) "pmzF@[ODHrq", 596, ']');
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) " \t\n\r\f";
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      objectArray0[2] = object0;
      StrBuilder strBuilder3 = strBuilder1.appendWithSeparators(objectArray0, "Ksgee4z<&G7W7<FtD");
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1736);
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt((-687), 'e');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -687
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[3];
      charArray0[1] = 'V';
      charArray0[2] = ' ';
      StrBuilder strBuilder1 = strBuilder0.insert(0, charArray0);
      StrBuilder strBuilder2 = new StrBuilder("*'TU*B");
      StrBuilder strBuilder3 = strBuilder1.insert(0, '@');
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance();
      StrBuilder strBuilder4 = strBuilder0.insert(0, '>');
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrBuilder strBuilder5 = strBuilder0.replaceAll(strMatcher0, "*'TU*B");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrBuilder strBuilder6 = strBuilder0.append('>');
      boolean boolean0 = strBuilder0.endsWith("");
      StrBuilder strBuilder7 = strBuilder0.insert(0, (Object) strBuilder_StrBuilderTokenizer0);
      int int0 = strBuilder5.capacity();
      StrBuilder strBuilder8 = strBuilder4.append((long) 0);
      StrBuilder strBuilder9 = strBuilder8.appendWithSeparators((Iterator) strTokenizer0, "*'TU*B");
      StrBuilder strBuilder10 = strBuilder4.replaceAll(strMatcher0, "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      int int1 = strBuilder3.validateRange(0, 1351);
      char[] charArray1 = strBuilder4.getChars(charArray0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder10.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray1, 76, 77);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 77
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("MA^NMA3@27]h#");
      StrBuilder strBuilder1 = strBuilder0.append("MA^NMA3@27]h#");
      StrBuilder strBuilder2 = strBuilder1.append(strBuilder0);
      StrBuilder strBuilder3 = strBuilder2.append(452.0005229357);
      StrBuilder strBuilder4 = strBuilder3.append('A');
      StrBuilder strBuilder5 = strBuilder2.appendNewLine();
      StrBuilder strBuilder6 = strBuilder2.insert(0, "MA^NMA3@27]h#");
      StrBuilder strBuilder7 = strBuilder2.appendFixedWidthPadLeft(102, 2, '&');
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      StrBuilder strBuilder8 = strBuilder2.deleteAll(strMatcher0);
      StrBuilder strBuilder9 = new StrBuilder('&');
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder10 = strBuilder9.appendWithSeparators((Collection) linkedList0, "MA^NMA3@27]h#");
      int int0 = strBuilder0.lastIndexOf('q', 2635);
      int int1 = 1716;
      // Undeclared exception!
      try { 
        strBuilder1.append(strBuilder3, Integer.MAX_VALUE, 1716);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder(0);
      boolean boolean0 = strBuilder0.equals((Object) strBuilder1);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      String string0 = strBuilder1.rightString(117);
      StringBuffer stringBuffer0 = new StringBuffer("");
      StrBuilder strBuilder2 = strBuilder1.append(stringBuffer0);
      StrBuilder strBuilder3 = strBuilder2.append((long) 117);
      StrBuilder strBuilder4 = strBuilder2.setNullText("");
      char char0 = '~';
      StrBuilder strBuilder5 = strBuilder0.deleteAll('~');
      int int1 = strBuilder1.indexOf('%');
      strBuilder1.size = 0;
      StrBuilder strBuilder6 = strBuilder1.trim();
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex(759);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 759
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }
}
