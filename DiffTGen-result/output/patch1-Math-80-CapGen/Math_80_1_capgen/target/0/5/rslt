* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.math.linear.EigenDecompositionImpl
* Starting client
* Connecting to master process on port 7202
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/patch1-Math-80-CapGen/Math_80_1_capgen/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math.linear.EigenDecompositionImpl
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 851
  - Branch 428
  - Exception 0
  - MutationFactory 212
  - Output 28
  - Method 17
  - MethodNoException 17
  - CBranchFitnessFactory 428
[Progress:>                             0%] [Cov:>                                  0%]* Using seed 1585449955230
* Starting evolution
[Progress:>                             3%] [Cov:>                                  0%][Progress:>                             3%] [Cov:>                                  1%][Progress:>                             3%] [Cov:====>                              13%][Progress:>                             3%] [Cov:====>                              14%][Progress:=>                            5%] [Cov:>                                  1%][Progress:=>                            5%] [Cov:>                                  2%][Progress:=>                            5%] [Cov:====>                              14%][Progress:=>                            5%] [Cov:=====>                             15%][Progress:=>                            5%] [Cov:=====>                             16%][Progress:=>                            5%] [Cov:=====>                             17%][Progress:=>                            6%] [Cov:>                                  0%][Progress:=>                            6%] [Cov:>                                  1%][Progress:=>                            6%] [Cov:====>                              13%][Progress:=>                            6%] [Cov:====>                              14%][Progress:=>                            6%] [Cov:=====>                             16%][Progress:=>                            6%] [Cov:=====>                             17%][Progress:=>                            6%] [Cov:======>                            19%][Progress:=>                            6%] [Cov:=======>                           21%][Progress:==>                           8%] [Cov:>                                  0%][Progress:==>                           8%] [Cov:>                                  1%][Progress:==>                           8%] [Cov:====>                              13%][Progress:==>                           8%] [Cov:====>                              14%][Progress:==>                           8%] [Cov:=====>                             16%][Progress:==>                           8%] [Cov:=====>                             17%][Progress:==>                           8%] [Cov:======>                            18%][Progress:===>                          10%] [Cov:>                                  0%][Progress:===>                          10%] [Cov:>                                  1%][Progress:===>                          10%] [Cov:====>                              13%][Progress:===>                          10%] [Cov:====>                              14%][Progress:===>                          11%] [Cov:>                                  0%][Progress:===>                          11%] [Cov:>                                  1%][Progress:===>                          11%] [Cov:====>                              13%][Progress:===>                          11%] [Cov:====>                              14%][Progress:===>                          13%] [Cov:>                                  0%][Progress:===>                          13%] [Cov:>                                  1%][Progress:===>                          13%] [Cov:====>                              13%][Progress:===>                          13%] [Cov:====>                              14%][Progress:===>                          13%] [Cov:=======>                           21%][Progress:====>                         15%] [Cov:====>                              13%][Progress:====>                         15%] [Cov:=======>                           21%][Progress:====>                         16%] [Cov:====>                              13%][Progress:====>                         16%] [Cov:====>                              14%][Progress:====>                         16%] [Cov:======>                            18%][Progress:=====>                        18%] [Cov:======>                            18%][Progress:======>                       20%] [Cov:====>                              14%][Progress:======>                       21%] [Cov:========>                          23%][Progress:======>                       23%] [Cov:=======>                           22%][Progress:======>                       23%] [Cov:========>                          23%][Progress:=======>                      25%] [Cov:=======>                           22%][Progress:=======>                      25%] [Cov:========>                          23%][Progress:=======>                      25%] [Cov:========>                          24%][Progress:=======>                      26%] [Cov:=======>                           22%][Progress:=======>                      26%] [Cov:========>                          23%][Progress:========>                     28%] [Cov:========>                          23%][Progress:=========>                    31%] [Cov:========>                          24%][Progress:=========>                    33%] [Cov:========>                          23%][Progress:=========>                    33%] [Cov:========>                          24%][Progress:==========>                   35%] [Cov:========>                          24%][Progress:==========>                   35%] [Cov:========>                          24%][Progress:==========>                   36%] [Cov:========>                          23%][Progress:==========>                   36%] [Cov:========>                          24%][Progress:===========>                  38%] [Cov:========>                          23%][Progress:===========>                  38%] [Cov:========>                          24%][Progress:===========>                  38%] [Cov:========>                          25%][Progress:===========>                  38%] [Cov:=========>                         26%][Progress:===========>                  38%] [Cov:=========>                         27%][Progress:============>                 41%] [Cov:=========>                         27%][Progress:============>                 43%] [Cov:=========>                         26%][Progress:============>                 43%] [Cov:=========>                         27%][Progress:=============>                45%] [Cov:=========>                         26%][Progress:=============>                45%] [Cov:=========>                         27%][Progress:=============>                46%] [Cov:=========>                         27%][Progress:===============>              51%] [Cov:=========>                         27%][Progress:===============>              53%] [Cov:=========>                         27%][Progress:===============>              53%] [Cov:=========>                         28%][Progress:===============>              53%] [Cov:==========>                        29%][Progress:================>             55%] [Cov:=========>                         27%][Progress:================>             55%] [Cov:=========>                         28%][Progress:================>             55%] [Cov:==========>                        29%][Progress:================>             55%] [Cov:==========>                        31%][Progress:================>             56%] [Cov:=========>                         27%][Progress:==================>           60%] [Cov:===========>                       33%][Progress:==================>           61%] [Cov:===========>                       33%][Progress:==================>           63%] [Cov:===========>                       33%][Progress:==================>           63%] [Cov:===========>                       33%][Progress:===================>          65%] [Cov:===========>                       33%][Progress:===================>          66%] [Cov:===========>                       33%][Progress:====================>         68%] [Cov:===========>                       33%][Progress:=====================>        70%] [Cov:===========>                       33%][Progress:=====================>        70%] [Cov:============>                      35%][Progress:=====================>        70%] [Cov:============>                      36%][Progress:=====================>        71%] [Cov:===========>                       33%][Progress:======================>       75%] [Cov:============>                      36%][Progress:======================>       75%] [Cov:============>                      37%][Progress:======================>       76%] [Cov:============>                      36%][Progress:========================>     80%] [Cov:============>                      37%][Progress:========================>     81%] [Cov:============>                      37%][Progress:========================>     83%] [Cov:============>                      37%][Progress:=========================>    86%] [Cov:============>                      37%][Progress:==========================>   88%] [Cov:============>                      37%][Progress:===========================>  91%] [Cov:============>                      37%][Progress:===========================>  93%] [Cov:============>                      37%][Progress:============================> 96%] [Cov:============>                      37%][Progress:=============================>98%] [Cov:============>                      37%][Progress:==============================100%] [Cov:============>                      37%][Progress:==============================100%] [Cov:============>                      37%][Progress:==============================100%] [Cov:==============>                    40%]
* Search finished after 64s and 15 generations, 8431 statements, best individual has fitness: 3871.581717822049
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 27%
* Total number of goals: 851
* Number of covered goals: 233
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 17%
* Total number of goals: 428
* Number of covered goals: 73
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 24%
* Total number of goals: 212
* Number of covered goals: 51
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 21%
* Total number of goals: 28
* Number of covered goals: 6
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 71%
* Total number of goals: 17
* Number of covered goals: 12
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 47%
* Total number of goals: 17
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 17%
* Total number of goals: 428
* Number of covered goals: 73
* Generated 21 tests with total length 106
* Resulting test suite's coverage: 41% (average coverage for all fitness functions)
* Compiling and checking tests
* Writing JUnit test case 'EigenDecompositionImpl_ESTest' to evosuite-tests
* Done!

* Computation finished
