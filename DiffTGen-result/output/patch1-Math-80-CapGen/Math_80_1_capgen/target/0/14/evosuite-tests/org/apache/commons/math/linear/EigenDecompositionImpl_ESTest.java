/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 29 02:52:07 GMT 2020
 */

package org.apache.commons.math.linear;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.linear.Array2DRowRealMatrix;
import org.apache.commons.math.linear.ArrayRealVector;
import org.apache.commons.math.linear.BlockRealMatrix;
import org.apache.commons.math.linear.DecompositionSolver;
import org.apache.commons.math.linear.DefaultRealMatrixChangingVisitor;
import org.apache.commons.math.linear.EigenDecompositionImpl;
import org.apache.commons.math.linear.OpenMapRealMatrix;
import org.apache.commons.math.linear.OpenMapRealVector;
import org.apache.commons.math.linear.RealMatrix;
import org.apache.commons.math.linear.RealMatrixChangingVisitor;
import org.apache.commons.math.linear.RealVector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EigenDecompositionImpl_ESTest extends EigenDecompositionImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[1] = (-1265.47);
      doubleArray0[2] = 1821.3095;
      doubleArray0[3] = 1.0E-12;
      doubleArray0[4] = 536.258875116;
      doubleArray0[5] = 3075.97775;
      doubleArray0[6] = (-1650.43528920127);
      doubleArray0[7] = (-1.0);
      doubleArray0[8] = 3145.527666750912;
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0);
      ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, true);
      ArrayRealVector arrayRealVector2 = new ArrayRealVector(arrayRealVector1);
      RealMatrix realMatrix0 = arrayRealVector2.outerProduct((RealVector) arrayRealVector0);
      RealMatrix realMatrix1 = realMatrix0.scalarAdd(1827.5019577785167);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (-921.50913137515));
      RealMatrix realMatrix2 = eigenDecompositionImpl0.getVT();
      double[] doubleArray1 = eigenDecompositionImpl0.getImagEigenvalues();
      RealMatrix realMatrix3 = eigenDecompositionImpl0.getV();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 530.14754;
      doubleArray0[1] = 0.25;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = (-2929.3009);
      doubleArray0[4] = 0.333;
      doubleArray0[5] = (-2929.3009);
      doubleArray0[6] = 1.5;
      doubleArray0[7] = 0.0;
      doubleArray0[8] = (-1808.147);
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, doubleArray0);
      ArrayRealVector arrayRealVector1 = new ArrayRealVector((RealVector) arrayRealVector0);
      RealMatrix realMatrix0 = arrayRealVector0.outerProduct(arrayRealVector1);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.333);
      try { 
        eigenDecompositionImpl0.getImagEigenvalue(4554);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4554
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 530.14754;
      doubleArray0[1] = 0.25;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = (-2929.3009);
      doubleArray0[4] = (-2929.3009);
      doubleArray0[5] = (-1.0);
      doubleArray0[6] = 1.5;
      doubleArray0[7] = 0.0;
      doubleArray0[8] = (-1808.147);
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, doubleArray0);
      ArrayRealVector arrayRealVector1 = new ArrayRealVector((RealVector) arrayRealVector0);
      RealMatrix realMatrix0 = arrayRealVector0.outerProduct(arrayRealVector1);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.333);
      int int0 = 4554;
      OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(4554, 4554);
      OpenMapRealMatrix openMapRealMatrix1 = new OpenMapRealMatrix(openMapRealMatrix0);
      try { 
        realMatrix0.preMultiply((RealMatrix) openMapRealMatrix1);
      } catch(IllegalArgumentException e) {
         //
         // 4,554x4,554 and 18x18 matrices are not multiplication compatible
         //
         verifyException("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = (-1265.47);
      doubleArray0[2] = 1821.3095;
      doubleArray0[3] = 1.0E-12;
      doubleArray0[4] = 536.258875116;
      doubleArray0[5] = 3075.97775;
      doubleArray0[4] = (-1650.43528920127);
      doubleArray0[7] = (-1.0);
      doubleArray0[8] = 3145.527666750912;
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0);
      ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, true);
      ArrayRealVector arrayRealVector2 = new ArrayRealVector(arrayRealVector1);
      RealMatrix realMatrix0 = arrayRealVector2.outerProduct((RealVector) arrayRealVector0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (-921.50913137515));
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getD();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = (-1265.47);
      doubleArray0[2] = 1821.3095;
      doubleArray0[3] = 1.0E-12;
      doubleArray0[5] = 536.258875116;
      doubleArray0[5] = 3075.97775;
      doubleArray0[6] = (-1650.43528920127);
      doubleArray0[7] = (-1.0);
      doubleArray0[8] = 3145.527666750912;
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0);
      ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, true);
      ArrayRealVector arrayRealVector2 = new ArrayRealVector(arrayRealVector1);
      RealMatrix realMatrix0 = arrayRealVector2.outerProduct((RealVector) arrayRealVector0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (-921.50913137515));
      try { 
        eigenDecompositionImpl0.getEigenvector(34);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 34
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 530.14754;
      doubleArray0[1] = 0.25;
      doubleArray0[2] = 530.14754;
      doubleArray0[3] = 530.14754;
      doubleArray0[4] = 0.333;
      doubleArray0[5] = 0.333;
      doubleArray0[6] = 1.5;
      doubleArray0[7] = 0.0;
      doubleArray0[8] = (-1808.147);
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, doubleArray0);
      ArrayRealVector arrayRealVector1 = new ArrayRealVector((RealVector) arrayRealVector0);
      RealMatrix realMatrix0 = arrayRealVector0.outerProduct(arrayRealVector1);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.333);
      try { 
        eigenDecompositionImpl0.getImagEigenvalue(4554);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4554
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 530.14754;
      doubleArray0[1] = 0.25;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = (-2929.3009);
      doubleArray0[4] = 0.333;
      doubleArray0[6] = 1.5;
      doubleArray0[7] = 0.0;
      doubleArray0[8] = (-1808.147);
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, doubleArray0);
      RealMatrix realMatrix0 = arrayRealVector0.outerProduct(arrayRealVector0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.333);
      try { 
        eigenDecompositionImpl0.getImagEigenvalue(4554);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4554
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[2] = 345.177187194;
      doubleArray0[3] = 185.1075213773095;
      doubleArray0[4] = (-1091.1604948);
      doubleArray0[5] = 3314.671;
      doubleArray0[6] = 2079.99186;
      doubleArray0[7] = 3314.671;
      BlockRealMatrix blockRealMatrix0 = new BlockRealMatrix(1147, 1147);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(blockRealMatrix0, 9.0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 0.563;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 902.716706715535;
      doubleArray0[4] = 0.07669230174170544;
      doubleArray0[5] = (-737.60107050583);
      doubleArray0[6] = 492.5964;
      double[][] doubleArray1 = new double[7][7];
      doubleArray1[0] = doubleArray0;
      doubleArray1[1] = doubleArray0;
      doubleArray1[2] = doubleArray0;
      doubleArray1[3] = doubleArray0;
      doubleArray1[4] = doubleArray0;
      doubleArray1[5] = doubleArray0;
      doubleArray1[6] = doubleArray0;
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray1);
      RealMatrix realMatrix0 = array2DRowRealMatrix0.copy();
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (-817.34546121));
      } catch(RuntimeException e) {
         //
         // eigen decomposition of assymetric matrices not supported yet
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 0.0;
      doubleArray0[2] = 1821.3095;
      doubleArray0[3] = 1.0E-12;
      doubleArray0[4] = 536.258875116;
      doubleArray0[5] = 3075.97775;
      doubleArray0[6] = (-1650.43528920127);
      doubleArray0[2] = 3145.527666750912;
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0);
      ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, true);
      ArrayRealVector arrayRealVector2 = new ArrayRealVector(arrayRealVector1);
      RealMatrix realMatrix0 = arrayRealVector2.outerProduct((RealVector) arrayRealVector0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (-921.50913137515));
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = 62;
      OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(62, 62);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(openMapRealMatrix0, 62);
      // Undeclared exception!
      eigenDecompositionImpl0.getSolver();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 0.563;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 902.716706715535;
      doubleArray0[4] = 0.0;
      doubleArray0[5] = (-737.60107050583);
      doubleArray0[6] = 492.5964;
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, (-737.60107050583));
      } catch(RuntimeException e) {
         //
         // a 7x1 matrix was provided instead of a square matrix
         //
         verifyException("org.apache.commons.math.linear.TriDiagonalTransformer", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int int0 = 46;
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(46, 46);
      boolean boolean0 = array2DRowRealMatrix0.isSquare();
      double double0 = 142.30468417;
      DefaultRealMatrixChangingVisitor defaultRealMatrixChangingVisitor0 = new DefaultRealMatrixChangingVisitor();
      double double1 = array2DRowRealMatrix0.walkInOptimizedOrder((RealMatrixChangingVisitor) defaultRealMatrixChangingVisitor0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, 142.30468417);
      // Undeclared exception!
      eigenDecompositionImpl0.getEigenvector(46);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = 2.0;
      double[] doubleArray1 = new double[0];
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 2.0);
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getV();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getVT();
      DecompositionSolver decompositionSolver1 = eigenDecompositionImpl0.getSolver();
      RealMatrix realMatrix2 = eigenDecompositionImpl0.getVT();
      RealMatrix realMatrix3 = eigenDecompositionImpl0.getD();
      RealMatrix realMatrix4 = eigenDecompositionImpl0.getVT();
      RealMatrix realMatrix5 = eigenDecompositionImpl0.getV();
      try { 
        eigenDecompositionImpl0.getEigenvector((-535));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -535
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(2, 5);
      RealMatrix realMatrix0 = array2DRowRealMatrix0.scalarMultiply(0.0);
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 1.0E-12);
      } catch(RuntimeException e) {
         //
         // no entry at indices (2, 0) in a 2x5 matrix
         //
         verifyException("org.apache.commons.math.linear.Array2DRowRealMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix();
      double double0 = 2.0;
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, 2.0);
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.linear.TriDiagonalTransformer", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int int0 = 8;
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(8, 8);
      RealMatrix realMatrix0 = array2DRowRealMatrix0.scalarAdd(8);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 8);
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getD();
      RealMatrix realMatrix2 = eigenDecompositionImpl0.getV();
      RealMatrix realMatrix3 = eigenDecompositionImpl0.getD();
      double[] doubleArray0 = eigenDecompositionImpl0.getImagEigenvalues();
      DecompositionSolver decompositionSolver1 = eigenDecompositionImpl0.getSolver();
      DecompositionSolver decompositionSolver2 = eigenDecompositionImpl0.getSolver();
      RealMatrix realMatrix4 = eigenDecompositionImpl0.getD();
      double double0 = eigenDecompositionImpl0.getDeterminant();
      RealMatrix realMatrix5 = eigenDecompositionImpl0.getD();
      try { 
        eigenDecompositionImpl0.getImagEigenvalue(8);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = (-1265.47);
      doubleArray0[2] = 1821.3095;
      doubleArray0[3] = 1.0E-12;
      doubleArray0[4] = 536.258875116;
      doubleArray0[5] = 3075.97775;
      doubleArray0[6] = (-1650.43528920127);
      doubleArray0[7] = (-1.0);
      doubleArray0[8] = 3145.527666750912;
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0);
      ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, true);
      ArrayRealVector arrayRealVector2 = new ArrayRealVector(arrayRealVector1);
      RealMatrix realMatrix0 = arrayRealVector2.outerProduct((RealVector) arrayRealVector0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (-921.50913137515));
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 530.14754;
      doubleArray0[1] = 0.25;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = (-2929.3009);
      doubleArray0[4] = 0.333;
      doubleArray0[5] = (-1.0);
      doubleArray0[6] = 1.5;
      doubleArray0[7] = 0.0;
      doubleArray0[8] = (-1808.147);
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, doubleArray0);
      ArrayRealVector arrayRealVector1 = new ArrayRealVector((RealVector) arrayRealVector0);
      RealMatrix realMatrix0 = arrayRealVector0.outerProduct(arrayRealVector1);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.333);
      try { 
        eigenDecompositionImpl0.getImagEigenvalue(4554);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4554
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(41, 1366, 1366);
      OpenMapRealVector openMapRealVector1 = new OpenMapRealVector(openMapRealVector0);
      OpenMapRealMatrix openMapRealMatrix0 = openMapRealVector1.outerproduct(openMapRealVector0);
      OpenMapRealMatrix openMapRealMatrix1 = new OpenMapRealMatrix(openMapRealMatrix0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(openMapRealMatrix1, 41);
      // Undeclared exception!
      eigenDecompositionImpl0.getV();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix();
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, (-1572.1));
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.linear.TriDiagonalTransformer", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, 303.695677003729);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 601.176;
      doubleArray0[1] = 862.90013453559;
      doubleArray0[2] = (-3251.079375019077);
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, 601.176);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl((double[]) null, (double[]) null, (-176.6894119908177));
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl((RealMatrix) null, 247.125888);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = 0.08325;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = 0.333;
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, 0.0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 54.0;
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, 0.0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl((RealMatrix) null, 1942.73225);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 530.14754;
      doubleArray0[1] = 0.25;
      doubleArray0[2] = 0.25;
      doubleArray0[3] = (-2929.3009);
      doubleArray0[4] = 0.333;
      doubleArray0[5] = (-1.0);
      doubleArray0[6] = 1.5;
      doubleArray0[7] = 0.0;
      doubleArray0[8] = (-1808.147);
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, doubleArray0);
      ArrayRealVector arrayRealVector1 = new ArrayRealVector((RealVector) arrayRealVector0);
      RealMatrix realMatrix0 = arrayRealVector0.outerProduct(arrayRealVector1);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.333);
      RealVector realVector0 = arrayRealVector0.mapLog10();
      try { 
        eigenDecompositionImpl0.getImagEigenvalue(4554);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4554
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = (-1265.47);
      doubleArray0[2] = 1821.3095;
      doubleArray0[3] = 1.0E-12;
      doubleArray0[4] = 536.258875116;
      doubleArray0[5] = 3075.97775;
      doubleArray0[6] = (-1650.43528920127);
      doubleArray0[7] = (-1.0);
      doubleArray0[8] = 3145.527666750912;
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0);
      ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, true);
      ArrayRealVector arrayRealVector2 = new ArrayRealVector(arrayRealVector1);
      RealMatrix realMatrix0 = arrayRealVector2.outerProduct((RealVector) arrayRealVector0);
      double double0 = arrayRealVector2.getLInfDistance((RealVector) arrayRealVector0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (-921.50913137515));
      try { 
        eigenDecompositionImpl0.getEigenvector(715827883);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 715827883
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      double[][] doubleArray0 = new double[5][0];
      double[] doubleArray1 = new double[3];
      doubleArray1[0] = 0.08325;
      doubleArray1[1] = 781.535280892553;
      doubleArray1[2] = (-1350.4082881755703);
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[3];
      doubleArray2[0] = 0.08325;
      doubleArray2[1] = (-1350.4082881755703);
      doubleArray2[2] = 781.535280892553;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[2];
      doubleArray3[0] = 781.535280892553;
      doubleArray3[1] = (-1350.4082881755703);
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[4];
      doubleArray4[0] = 1.0E-12;
      doubleArray4[1] = (-1350.4082881755703);
      doubleArray4[2] = 0.08325;
      doubleArray4[3] = 781.535280892553;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[9];
      doubleArray5[0] = (-1350.4082881755703);
      doubleArray5[1] = 0.08325;
      doubleArray5[2] = 781.535280892553;
      doubleArray5[3] = 781.535280892553;
      doubleArray5[4] = 781.535280892553;
      doubleArray5[5] = (-1350.4082881755703);
      doubleArray5[6] = 0.08325;
      doubleArray5[7] = 1.0E-12;
      doubleArray5[8] = (-1350.4082881755703);
      doubleArray0[4] = doubleArray5;
      Array2DRowRealMatrix array2DRowRealMatrix0 = null;
      try {
        array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
      } catch(IllegalArgumentException e) {
         //
         // some rows have length 3 while others have length 2
         //
         verifyException("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (-335.248140102);
      doubleArray0[1] = (-1.0);
      doubleArray0[2] = 861.1729;
      doubleArray0[3] = 1759.51;
      doubleArray0[4] = 2.2250738585072014E-308;
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, (-335.248140102));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }
}
