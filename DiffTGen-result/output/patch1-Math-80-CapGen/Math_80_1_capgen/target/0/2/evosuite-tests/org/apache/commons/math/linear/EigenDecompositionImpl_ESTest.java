/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 29 02:48:55 GMT 2020
 */

package org.apache.commons.math.linear;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.linear.Array2DRowRealMatrix;
import org.apache.commons.math.linear.ArrayRealVector;
import org.apache.commons.math.linear.DecompositionSolver;
import org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor;
import org.apache.commons.math.linear.EigenDecompositionImpl;
import org.apache.commons.math.linear.OpenMapRealMatrix;
import org.apache.commons.math.linear.OpenMapRealVector;
import org.apache.commons.math.linear.RealMatrix;
import org.apache.commons.math.linear.RealMatrixPreservingVisitor;
import org.apache.commons.math.linear.RealVector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EigenDecompositionImpl_ESTest extends EigenDecompositionImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 3560.606;
      doubleArray0[1] = 1.1102230246251565E-14;
      doubleArray0[2] = 3560.606;
      doubleArray0[3] = (-1269.37673);
      doubleArray0[4] = 2482.6309997216786;
      doubleArray0[5] = 2482.6309997216786;
      doubleArray0[6] = 0.0;
      doubleArray0[7] = 0.0;
      doubleArray0[8] = 1.0;
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = 3560.606;
      doubleArray1[1] = 2482.6309997216786;
      doubleArray1[2] = (-1269.37673);
      doubleArray1[3] = 2.0;
      doubleArray1[4] = 2482.6309997216786;
      doubleArray1[5] = 1.0;
      doubleArray1[6] = 0.0;
      doubleArray1[7] = 3560.606;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getD();
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      try { 
        eigenDecompositionImpl0.getEigenvector((-2927));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2927
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 3560.606;
      doubleArray0[1] = 3560.606;
      doubleArray0[2] = 1.0E-12;
      doubleArray0[3] = (-1269.37673);
      doubleArray0[4] = 2482.6309997216786;
      doubleArray0[5] = 3560.606;
      doubleArray0[6] = 0.0;
      doubleArray0[7] = (-0.07948588439476596);
      doubleArray0[8] = 1.0;
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = (-1269.37673);
      doubleArray1[1] = 2482.6309997216786;
      doubleArray1[2] = 2482.6309997216786;
      doubleArray1[3] = 2.0;
      doubleArray1[4] = 2482.6309997216786;
      doubleArray1[5] = 1.0;
      doubleArray1[6] = (-0.07948588439476596);
      doubleArray1[7] = 1.0E-12;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getD();
      try { 
        eigenDecompositionImpl0.getRealEigenvalue(1822);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1822
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 3560.606;
      doubleArray0[1] = 3560.606;
      doubleArray0[2] = 1.0E-12;
      doubleArray0[3] = (-1269.37673);
      doubleArray0[4] = 2482.6309997216786;
      doubleArray0[5] = (-1269.37673);
      doubleArray0[6] = 0.0;
      doubleArray0[7] = 0.0;
      doubleArray0[8] = 1.0;
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = (-1269.37673);
      doubleArray1[1] = 2482.6309997216786;
      doubleArray1[2] = 2482.6309997216786;
      doubleArray1[3] = 2.0;
      doubleArray1[4] = 2482.6309997216786;
      doubleArray1[5] = 1.0;
      doubleArray1[6] = 0.0;
      doubleArray1[7] = 1.0E-12;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getD();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getV();
      try { 
        eigenDecompositionImpl0.getRealEigenvalue(1822);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1822
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 0.25;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 2.0;
      doubleArray0[4] = 1.0E-12;
      doubleArray0[5] = (-2236.65);
      doubleArray0[6] = 1094.446264945231;
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
      RealMatrix realMatrix0 = array2DRowRealMatrix0.getRowMatrix(0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getD();
      RealMatrix realMatrix2 = eigenDecompositionImpl0.getV();
      RealVector realVector0 = eigenDecompositionImpl0.getEigenvector(0);
      RealMatrix realMatrix3 = eigenDecompositionImpl0.getV();
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 38.78136063932023;
      doubleArray0[4] = 0.25;
      doubleArray0[2] = 6.283185307179586;
      doubleArray0[3] = 2.0;
      doubleArray0[4] = 6.283185307179586;
      doubleArray0[5] = (-2236.65);
      doubleArray0[6] = 1127.3114747;
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
      RealMatrix realMatrix0 = array2DRowRealMatrix0.getRowMatrix(0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double[][] doubleArray0 = new double[1][9];
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = 1902.031751986;
      doubleArray0[0] = doubleArray1;
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, 237.0);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getVT();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 3560.606;
      doubleArray0[1] = 1.1102230246251565E-14;
      doubleArray0[2] = 1.0E-12;
      doubleArray0[3] = (-1269.37673);
      doubleArray0[4] = 2482.6309997216786;
      doubleArray0[5] = (-12.214404794536005);
      doubleArray0[6] = 0.0;
      doubleArray0[7] = (-0.5509661672789227);
      doubleArray0[8] = 1.0;
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = (-12.214404794536005);
      doubleArray1[1] = 2482.6309997216786;
      doubleArray1[2] = (-12.214404794536005);
      doubleArray1[3] = 2.0;
      doubleArray1[4] = 2482.6309997216786;
      doubleArray1[5] = 1.0;
      doubleArray1[6] = (-0.5509661672789227);
      doubleArray1[7] = 1.0E-12;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getD();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 3560.606;
      doubleArray0[1] = 1.1102230246251565E-14;
      doubleArray0[2] = 3560.606;
      doubleArray0[3] = (-1269.37673);
      doubleArray0[4] = 2482.6309997216786;
      doubleArray0[5] = 4.0;
      doubleArray0[6] = 24.70224422342033;
      doubleArray0[7] = 0.0;
      doubleArray0[8] = 1.0;
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = 4.0;
      doubleArray1[1] = 2482.6309997216786;
      doubleArray1[2] = 4.0;
      doubleArray1[3] = 2.0;
      doubleArray1[4] = 2482.6309997216786;
      doubleArray1[5] = 1.0;
      doubleArray1[6] = 0.0;
      doubleArray1[7] = 3560.606;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 24.70224422342033);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getV();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getD();
      RealMatrix realMatrix2 = eigenDecompositionImpl0.getD();
      double[] doubleArray2 = eigenDecompositionImpl0.getRealEigenvalues();
      double[] doubleArray3 = eigenDecompositionImpl0.getImagEigenvalues();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[1] = 1.1102230246251565E-14;
      doubleArray0[2] = 1.0E-12;
      doubleArray0[3] = (-1269.37673);
      doubleArray0[4] = 2482.6309997216786;
      doubleArray0[5] = 4.0;
      doubleArray0[7] = 0.0;
      doubleArray0[8] = 1.0;
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = 4.0;
      doubleArray1[1] = 2482.6309997216786;
      doubleArray1[2] = 4.0;
      doubleArray1[3] = 2.0;
      doubleArray1[4] = 2482.6309997216786;
      doubleArray1[5] = 1.0;
      doubleArray1[6] = 0.0;
      doubleArray1[7] = 1.0E-12;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getD();
      try { 
        eigenDecompositionImpl0.getRealEigenvalue(1822);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1822
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 3560.606;
      doubleArray0[1] = 1.1102230246251565E-14;
      doubleArray0[2] = 1.0E-12;
      doubleArray0[3] = (-1269.37673);
      doubleArray0[4] = 2482.6309997216786;
      doubleArray0[5] = 4.0;
      doubleArray0[6] = 0.0;
      doubleArray0[7] = 0.0;
      doubleArray0[8] = 1.0;
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = 4.0;
      doubleArray1[1] = 2482.6309997216786;
      doubleArray1[2] = 4.0;
      doubleArray1[3] = 2.0;
      doubleArray1[4] = 2482.6309997216786;
      doubleArray1[5] = 1.0;
      doubleArray1[6] = 0.0;
      doubleArray1[7] = 1.0E-12;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getV();
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getD();
      try { 
        eigenDecompositionImpl0.getRealEigenvalue(1822);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1822
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[1] = 0.25;
      doubleArray0[2] = 6.283185307179586;
      doubleArray0[3] = 2.0;
      doubleArray0[4] = 1.0E-12;
      doubleArray0[5] = (-2236.65);
      doubleArray0[6] = 1127.3114747;
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
      RealMatrix realMatrix0 = array2DRowRealMatrix0.getRowMatrix(0);
      DefaultRealMatrixPreservingVisitor defaultRealMatrixPreservingVisitor0 = new DefaultRealMatrixPreservingVisitor();
      double double0 = array2DRowRealMatrix0.walkInOptimizedOrder((RealMatrixPreservingVisitor) defaultRealMatrixPreservingVisitor0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      DecompositionSolver decompositionSolver1 = eigenDecompositionImpl0.getSolver();
      double double1 = eigenDecompositionImpl0.getDeterminant();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 3560.606;
      doubleArray0[1] = 1.1102230246251565E-14;
      doubleArray0[2] = 1.0E-12;
      doubleArray0[3] = (-1269.37673);
      doubleArray0[4] = 2482.6309997216786;
      doubleArray0[5] = 4.0;
      doubleArray0[6] = 0.0;
      doubleArray0[7] = 0.0;
      doubleArray0[8] = 1.0;
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = 4.0;
      doubleArray1[1] = 2482.6309997216786;
      doubleArray1[2] = 4.0;
      doubleArray1[3] = 2.0;
      doubleArray1[4] = 2482.6309997216786;
      doubleArray1[5] = 1.0;
      doubleArray1[6] = 0.0;
      doubleArray1[7] = 1.0E-12;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getV();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getD();
      RealMatrix realMatrix2 = eigenDecompositionImpl0.getD();
      double[] doubleArray2 = eigenDecompositionImpl0.getRealEigenvalues();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 3560.606;
      doubleArray0[1] = 1.1102230246251565E-14;
      doubleArray0[2] = 1.0E-12;
      doubleArray0[3] = (-1269.37673);
      doubleArray0[4] = 2482.6309997216786;
      doubleArray0[5] = 3560.606;
      doubleArray0[6] = 0.0;
      doubleArray0[7] = 0.0;
      doubleArray0[8] = 1.0;
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = 1.1102230246251565E-14;
      doubleArray1[1] = 2482.6309997216786;
      doubleArray1[2] = 2482.6309997216786;
      doubleArray1[3] = 2.0;
      doubleArray1[4] = 2482.6309997216786;
      doubleArray1[5] = 1.0;
      doubleArray1[6] = 0.0;
      doubleArray1[7] = 1.0E-12;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      try { 
        eigenDecompositionImpl0.getEigenvector((-2146722916));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2146722916
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 3560.606;
      doubleArray0[1] = 3560.606;
      doubleArray0[2] = 1.0E-12;
      doubleArray0[3] = (-1269.37673);
      doubleArray0[4] = 1.1102230246251565E-14;
      doubleArray0[5] = (-1269.37673);
      doubleArray0[6] = 0.0;
      doubleArray0[1] = 1.0;
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = (-1269.37673);
      doubleArray1[1] = 3560.606;
      doubleArray1[2] = (-1269.37673);
      doubleArray1[3] = 2.0;
      doubleArray1[4] = 1.0;
      doubleArray1[5] = 1.0;
      doubleArray1[3] = 0.0;
      doubleArray1[7] = 1.0E-12;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getD();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getD();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 3560.606;
      doubleArray0[1] = 1.1102230246251565E-14;
      doubleArray0[2] = 1.0E-12;
      doubleArray0[3] = (-1269.37673);
      doubleArray0[4] = 2482.6309997216786;
      doubleArray0[5] = 4.0;
      doubleArray0[6] = 0.0;
      doubleArray0[7] = 0.0;
      doubleArray0[8] = 1.0;
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = 4.0;
      doubleArray1[1] = 2482.6309997216786;
      doubleArray1[2] = 4.0;
      doubleArray1[3] = 2.0;
      doubleArray1[4] = 2482.6309997216786;
      doubleArray1[5] = 1.0;
      doubleArray1[6] = 0.0;
      doubleArray1[7] = 1.0E-12;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getD();
      double double0 = eigenDecompositionImpl0.getDeterminant();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 3560.606;
      doubleArray0[1] = 1.1102230246251565E-14;
      doubleArray0[2] = 1.0E-12;
      doubleArray0[3] = (-1269.37673);
      doubleArray0[4] = 2482.6309997216786;
      doubleArray0[5] = 4.0;
      doubleArray0[6] = 0.0;
      doubleArray0[7] = 0.0;
      doubleArray0[8] = 1.0;
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = 4.0;
      doubleArray1[1] = 2482.6309997216786;
      doubleArray1[2] = 4.0;
      doubleArray1[3] = 2.0;
      doubleArray1[4] = 2482.6309997216786;
      doubleArray1[5] = 1.0;
      doubleArray1[6] = 0.0;
      doubleArray1[7] = 1.0E-12;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      RealVector realVector0 = eigenDecompositionImpl0.getEigenvector(1);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getD();
      double[] doubleArray2 = eigenDecompositionImpl0.getRealEigenvalues();
      double double0 = eigenDecompositionImpl0.getRealEigenvalue(1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 3560.606;
      doubleArray0[1] = 1.1102230246251565E-14;
      doubleArray0[2] = 1.0E-12;
      doubleArray0[3] = (-1269.37673);
      doubleArray0[4] = 2482.6309997216786;
      doubleArray0[5] = 4.0;
      doubleArray0[6] = 0.0;
      doubleArray0[7] = 0.0;
      doubleArray0[8] = 1.0;
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = 4.0;
      doubleArray1[1] = 2482.6309997216786;
      doubleArray1[2] = 4.0;
      doubleArray1[3] = 2.0;
      doubleArray1[4] = 2482.6309997216786;
      doubleArray1[5] = 1.0;
      doubleArray1[6] = 0.0;
      doubleArray1[7] = 1.0E-12;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getD();
      double[] doubleArray2 = eigenDecompositionImpl0.getRealEigenvalues();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 3560.606;
      doubleArray0[1] = 3560.606;
      doubleArray0[2] = 1.0E-12;
      doubleArray0[3] = (-1269.37673);
      doubleArray0[4] = 2482.6309997216786;
      doubleArray0[5] = 3560.606;
      doubleArray0[6] = 0.0;
      doubleArray0[7] = 0.0;
      doubleArray0[8] = 1.0;
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = (-1269.37673);
      doubleArray1[1] = 2482.6309997216786;
      doubleArray1[2] = 2482.6309997216786;
      doubleArray1[3] = 2.0;
      doubleArray1[4] = 2482.6309997216786;
      doubleArray1[5] = 1.0;
      doubleArray1[6] = 0.0;
      doubleArray1[7] = 1.0E-12;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getD();
      try { 
        eigenDecompositionImpl0.getRealEigenvalue(1822);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1822
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 3560.606;
      doubleArray0[1] = 1.1102230246251565E-14;
      doubleArray0[2] = 1.0E-12;
      doubleArray0[3] = (-1269.37673);
      doubleArray0[4] = 2482.6309997216786;
      doubleArray0[5] = 4.0;
      doubleArray0[6] = 0.0;
      doubleArray0[7] = 0.0;
      doubleArray0[8] = 1.0;
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = 4.0;
      doubleArray1[1] = 2482.6309997216786;
      doubleArray1[2] = 4.0;
      doubleArray1[3] = 2.0;
      doubleArray1[5] = 1.0;
      doubleArray1[6] = 0.0;
      doubleArray1[7] = 1.0E-12;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getD();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 3560.606;
      doubleArray0[1] = 1.1102230246251565E-14;
      doubleArray0[2] = (-25.131409765440946);
      doubleArray0[3] = (-1269.37673);
      doubleArray0[4] = 2482.6309997216786;
      doubleArray0[5] = 4.0;
      doubleArray0[6] = 0.0;
      doubleArray0[7] = 0.0;
      doubleArray0[8] = 1.0;
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = 4.0;
      doubleArray1[1] = 2482.6309997216786;
      doubleArray1[2] = 4.0;
      doubleArray1[3] = 2.0;
      doubleArray1[4] = 2482.6309997216786;
      doubleArray1[5] = 1.0;
      doubleArray1[6] = 0.0;
      doubleArray1[7] = (-25.131409765440946);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getD();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 3560.606;
      doubleArray0[1] = 1.1102230246251565E-14;
      doubleArray0[2] = 1.0E-12;
      doubleArray0[3] = (-1269.37673);
      doubleArray0[4] = 2482.6309997216786;
      doubleArray0[5] = 4.0;
      doubleArray0[6] = 0.0;
      doubleArray0[7] = 0.0;
      doubleArray0[8] = 1.0;
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = 4.0;
      doubleArray1[1] = 2482.6309997216786;
      doubleArray1[2] = 4.0;
      doubleArray1[3] = 2.0;
      doubleArray1[4] = 2482.6309997216786;
      doubleArray1[5] = 1.0;
      doubleArray1[6] = 0.0;
      doubleArray1[7] = 1.0E-12;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      RealVector realVector0 = eigenDecompositionImpl0.getEigenvector(1);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getD();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 0.25;
      doubleArray0[2] = 6.283185307179586;
      doubleArray0[3] = 2.0;
      doubleArray0[4] = 1.0E-12;
      doubleArray0[0] = (-2236.65);
      doubleArray0[6] = 1127.3114747;
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
      RealMatrix realMatrix0 = array2DRowRealMatrix0.getRowMatrix(0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getVT();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 3560.606;
      doubleArray0[1] = 1.1102230246251565E-14;
      doubleArray0[2] = 1.0E-12;
      doubleArray0[3] = (-1269.37673);
      doubleArray0[4] = 2482.6309997216786;
      doubleArray0[5] = 4.0;
      doubleArray0[6] = 0.0;
      doubleArray0[7] = 0.0;
      doubleArray0[8] = 1.0;
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = 4.0;
      doubleArray1[1] = 2482.6309997216786;
      doubleArray1[2] = 4.0;
      doubleArray1[3] = 2.0;
      doubleArray1[4] = 2482.6309997216786;
      doubleArray1[5] = 1.0;
      doubleArray1[6] = 0.0;
      doubleArray1[7] = 1.0E-12;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getVT();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getD();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 3560.606;
      doubleArray0[1] = 1.1102230246251565E-14;
      doubleArray0[2] = 1.0E-12;
      doubleArray0[3] = (-1269.37673);
      doubleArray0[4] = 2482.6309997216786;
      doubleArray0[5] = 4.0;
      doubleArray0[6] = 0.0;
      doubleArray0[7] = 0.0;
      doubleArray0[8] = 1.0;
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = 4.0;
      doubleArray1[1] = 2482.6309997216786;
      doubleArray1[2] = 4.0;
      doubleArray1[3] = 2.0;
      doubleArray1[4] = 2482.6309997216786;
      doubleArray1[5] = 1.0;
      doubleArray1[6] = 0.0;
      doubleArray1[7] = 1.0E-12;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getD();
      try { 
        eigenDecompositionImpl0.getRealEigenvalue(1822);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1822
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 3560.606;
      doubleArray0[1] = 1.1102230246251565E-14;
      doubleArray0[2] = 1.0E-12;
      doubleArray0[3] = (-1269.37673);
      doubleArray0[4] = 2482.6309997216786;
      doubleArray0[5] = 4.0;
      doubleArray0[6] = 0.0;
      doubleArray0[7] = 0.0;
      doubleArray0[8] = 1.0;
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = 4.0;
      doubleArray1[1] = 2482.6309997216786;
      doubleArray1[2] = 4.0;
      doubleArray1[3] = 2.0;
      doubleArray1[4] = 2482.6309997216786;
      doubleArray1[5] = 1.0;
      doubleArray1[3] = 0.0;
      doubleArray1[7] = 1.0E-12;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getD();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getD();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      int int0 = 12;
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(12, 12);
      String string0 = array2DRowRealMatrix0.toString();
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, 1.1102230246251565E-16);
      try { 
        eigenDecompositionImpl0.getEigenvector((-1335));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1335
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 0.25;
      doubleArray0[2] = 6.283185307179586;
      doubleArray0[3] = 2.0;
      doubleArray0[4] = 1.0E-12;
      doubleArray0[5] = (-2236.65);
      doubleArray0[6] = 1127.3114747;
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
      RealMatrix realMatrix0 = array2DRowRealMatrix0.getRowMatrix(0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getVT();
      RealMatrix realMatrix2 = eigenDecompositionImpl0.getV();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(7);
      OpenMapRealVector openMapRealVector1 = new OpenMapRealVector(openMapRealVector0);
      OpenMapRealMatrix openMapRealMatrix0 = openMapRealVector0.outerproduct(openMapRealVector1);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(openMapRealMatrix0, 1.0E-12);
      double double0 = eigenDecompositionImpl0.getDeterminant();
      int[] intArray0 = new int[8];
      intArray0[0] = 7;
      intArray0[1] = 7;
      intArray0[2] = 7;
      intArray0[3] = 7;
      intArray0[4] = 7;
      intArray0[5] = 7;
      intArray0[6] = 7;
      intArray0[7] = 7;
      double[][] doubleArray0 = new double[9][5];
      double[] doubleArray1 = new double[3];
      doubleArray1[0] = (double) 7;
      doubleArray1[1] = 0.0;
      doubleArray1[2] = 1.0E-12;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[3];
      doubleArray2[0] = 1.0E-12;
      doubleArray2[1] = (double) 7;
      doubleArray2[2] = (double) 7;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[9];
      doubleArray3[0] = (double) 7;
      doubleArray3[1] = 0.0;
      doubleArray3[2] = 1.0E-12;
      doubleArray3[3] = (double) 7;
      doubleArray3[4] = (double) 7;
      doubleArray3[5] = (double) 7;
      doubleArray3[6] = (double) 7;
      doubleArray3[7] = (double) 7;
      doubleArray3[8] = 1.0E-12;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[9];
      doubleArray4[0] = 1.0E-12;
      doubleArray4[1] = (double) 7;
      doubleArray4[2] = (double) 7;
      doubleArray4[3] = 1.0E-12;
      doubleArray4[4] = (double) 7;
      doubleArray4[5] = (double) 7;
      doubleArray4[6] = (double) 7;
      doubleArray4[7] = 231.42673519;
      doubleArray4[8] = (double) 7;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[7];
      doubleArray5[0] = 0.0;
      doubleArray5[1] = (double) 7;
      doubleArray5[2] = 0.0;
      doubleArray5[3] = (double) 7;
      doubleArray5[4] = 419.813233;
      doubleArray5[5] = (double) 7;
      doubleArray5[6] = (double) 7;
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[1];
      doubleArray6[0] = 0.0;
      doubleArray0[5] = doubleArray6;
      double[] doubleArray7 = new double[5];
      doubleArray7[0] = 1.0E-12;
      doubleArray7[1] = (double) 7;
      doubleArray7[2] = (double) 7;
      doubleArray7[3] = 231.42673519;
      doubleArray7[4] = (double) 7;
      doubleArray0[6] = doubleArray7;
      double[] doubleArray8 = new double[7];
      doubleArray8[0] = 419.813233;
      doubleArray8[1] = (double) 7;
      doubleArray8[2] = (double) 7;
      doubleArray8[3] = 231.42673519;
      doubleArray8[4] = 0.0;
      doubleArray8[5] = 0.0;
      doubleArray8[6] = (double) 7;
      doubleArray0[7] = doubleArray8;
      double[] doubleArray9 = new double[8];
      doubleArray9[0] = (double) 7;
      doubleArray9[1] = 231.42673519;
      doubleArray9[2] = 1.0E-12;
      doubleArray9[3] = (double) 7;
      doubleArray9[4] = 0.0;
      doubleArray9[5] = 894.0;
      doubleArray9[6] = 0.0;
      doubleArray9[7] = (double) 7;
      doubleArray0[8] = doubleArray9;
      try { 
        openMapRealMatrix0.copySubMatrix(intArray0, intArray0, doubleArray0);
      } catch(RuntimeException e) {
         //
         // row index 7 out of allowed range [0, 6]
         //
         verifyException("org.apache.commons.math.linear.MatrixUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Double[] doubleArray0 = new Double[3];
      Double double0 = new Double((-2270.0418163));
      doubleArray0[0] = double0;
      Double double1 = new Double((-2270.0418163));
      doubleArray0[1] = double1;
      Double double2 = new Double(0.0);
      double double3 = Double.min((-187.8652), 0.0);
      double double4 = (-2898.71141551503);
      double double5 = Double.min((-2250.47), (-2898.71141551503));
      doubleArray0[2] = double2;
      ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0);
      ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0);
      RealMatrix realMatrix0 = arrayRealVector0.outerProduct(arrayRealVector1);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, (double) doubleArray0[0]);
      try { 
        arrayRealVector1.set(1, arrayRealVector0);
      } catch(RuntimeException e) {
         //
         // index 3 out of allowed range [0, 2]
         //
         verifyException("org.apache.commons.math.linear.ArrayRealVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      int int0 = 12;
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(12, 12);
      String string0 = array2DRowRealMatrix0.toString();
      RealMatrix realMatrix0 = array2DRowRealMatrix0.scalarMultiply(12);
      double double0 = 1.1102230246251565E-16;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 1.1102230246251565E-16);
      int int1 = 1213;
      try { 
        eigenDecompositionImpl0.getImagEigenvalue(1213);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1213
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Double[] doubleArray0 = new Double[6];
      Double double0 = new Double(3541.61);
      doubleArray0[0] = double0;
      Double double1 = new Double(2.2250738585072014E-308);
      doubleArray0[1] = double1;
      Double double2 = new Double(2.2250738585072014E-308);
      doubleArray0[2] = double2;
      Double double3 = new Double(0.0);
      doubleArray0[3] = double3;
      Double double4 = new Double(3541.61);
      doubleArray0[4] = double4;
      Double double5 = new Double(0.0);
      doubleArray0[5] = double5;
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
      double[] doubleArray1 = new double[6];
      doubleArray1[0] = (double) doubleArray0[2];
      doubleArray1[1] = 1.0E-12;
      doubleArray1[2] = 3541.61;
      doubleArray1[3] = (double) doubleArray0[2];
      doubleArray1[4] = (-1302.90537208);
      doubleArray1[5] = 0.0;
      OpenMapRealVector openMapRealVector1 = new OpenMapRealVector(doubleArray1);
      OpenMapRealMatrix openMapRealMatrix0 = openMapRealVector0.outerproduct(openMapRealVector1);
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(openMapRealMatrix0, 0.0);
      } catch(RuntimeException e) {
         //
         // eigen decomposition of assymetric matrices not supported yet
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix();
      double double0 = Double.POSITIVE_INFINITY;
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, Double.POSITIVE_INFINITY);
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.linear.TriDiagonalTransformer", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      double[][] doubleArray0 = new double[1][4];
      double[] doubleArray1 = new double[9];
      doubleArray1[0] = 1881.3;
      doubleArray1[1] = (-1092.3);
      doubleArray1[2] = 608.91;
      doubleArray1[3] = 0.0;
      doubleArray1[4] = 0.0;
      doubleArray1[5] = 0.0;
      doubleArray1[6] = 0.0;
      doubleArray1[7] = 3538.7595948177;
      doubleArray1[8] = (-1363.0);
      doubleArray0[0] = doubleArray1;
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
      RealMatrix realMatrix0 = array2DRowRealMatrix0.copy();
      RealMatrix realMatrix1 = array2DRowRealMatrix0.add(realMatrix0);
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix1, Double.NaN);
      } catch(RuntimeException e) {
         //
         // no entry at indices (1, 0) in a 1x9 matrix
         //
         verifyException("org.apache.commons.math.linear.Array2DRowRealMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl((RealMatrix) null, Double.POSITIVE_INFINITY);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 1705.382918987;
      doubleArray0[1] = 1875.2473497328;
      doubleArray0[2] = (-1239.27059249);
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
      RealMatrix realMatrix0 = array2DRowRealMatrix0.copy();
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, 0.0);
      } catch(RuntimeException e) {
         //
         // a 3x1 matrix was provided instead of a square matrix
         //
         verifyException("org.apache.commons.math.linear.TriDiagonalTransformer", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      int int0 = 12;
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(12, 12);
      String string0 = array2DRowRealMatrix0.toString();
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, 1.1102230246251565E-16);
      try { 
        eigenDecompositionImpl0.getImagEigenvalue(1213);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1213
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(375, 375);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(openMapRealMatrix0, (-1951.05));
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = 2.0;
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, (-1006.83));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl((double[]) null, (double[]) null, 0.0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 3560.606;
      doubleArray0[1] = 1.1102230246251565E-14;
      doubleArray0[2] = 3560.606;
      doubleArray0[3] = (-1269.37673);
      doubleArray0[4] = 2482.6309997216786;
      doubleArray0[5] = 4.0;
      doubleArray0[6] = 24.70224422342033;
      doubleArray0[7] = 0.0;
      doubleArray0[8] = 1.0;
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = 4.0;
      doubleArray1[1] = 2482.6309997216786;
      doubleArray1[2] = 4.0;
      doubleArray1[3] = 2.0;
      doubleArray1[5] = 1.0;
      doubleArray1[6] = 0.0;
      doubleArray1[7] = 3560.606;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 24.70224422342033);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getV();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getD();
      RealMatrix realMatrix2 = eigenDecompositionImpl0.getD();
      double[] doubleArray2 = eigenDecompositionImpl0.getRealEigenvalues();
      double[] doubleArray3 = eigenDecompositionImpl0.getImagEigenvalues();
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector();
      int int0 = 0;
      OpenMapRealVector openMapRealVector1 = new OpenMapRealVector(0, (-5950.792768835081));
      OpenMapRealVector openMapRealVector2 = new OpenMapRealVector(0, 0);
      try { 
        openMapRealVector0.outerProduct((RealVector) openMapRealVector1);
      } catch(IllegalArgumentException e) {
         //
         // invalid row dimension 0 (must be positive)
         //
         verifyException("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 2553.318831714;
      doubleArray0[1] = (-3370.99);
      doubleArray0[2] = 0.0;
      doubleArray0[3] = (-3444.7849175571037);
      doubleArray0[4] = (-4355.5684012925);
      doubleArray0[5] = 878.57798471481;
      doubleArray0[6] = 2705.5;
      doubleArray0[7] = 1902.031751986;
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, 788.90787);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      EigenDecompositionImpl eigenDecompositionImpl0 = null;
      try {
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, 1220.895878903202);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 0.25;
      doubleArray0[2] = 6.283185307179586;
      doubleArray0[3] = 2.0;
      doubleArray0[4] = 1.0E-12;
      doubleArray0[5] = (-2236.65);
      doubleArray0[6] = 1127.3114747;
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
      RealMatrix realMatrix0 = array2DRowRealMatrix0.getRowMatrix(0);
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      RealMatrix realMatrix1 = eigenDecompositionImpl0.getV();
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 3560.606;
      doubleArray0[1] = 1.1102230246251565E-14;
      doubleArray0[2] = 1.0E-12;
      doubleArray0[3] = (-1269.37673);
      doubleArray0[4] = 2482.6309997216786;
      doubleArray0[5] = 4.0;
      doubleArray0[6] = 0.0;
      doubleArray0[7] = 0.0;
      doubleArray0[8] = 1.0;
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = 4.0;
      doubleArray1[1] = 2482.6309997216786;
      doubleArray1[2] = 4.0;
      doubleArray1[3] = 2.0;
      doubleArray1[4] = 2482.6309997216786;
      doubleArray1[5] = 1.0;
      doubleArray1[6] = 3560.606;
      doubleArray1[7] = 1.0E-12;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
      RealMatrix realMatrix0 = eigenDecompositionImpl0.getD();
      DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
      try { 
        eigenDecompositionImpl0.getEigenvector((-2927));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2927
         //
         verifyException("org.apache.commons.math.linear.EigenDecompositionImpl", e);
      }
  }
}
