/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 29 04:59:52 GMT 2020
 */

package org.apache.commons.lang;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import org.apache.commons.lang.LocaleUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LocaleUtils_ESTest extends LocaleUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("z.>1zs{U");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: z.>1zs{U
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale(")|$nCfT");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: )|$nCfT
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Locale locale0 = new Locale("", "", "Korean");
      List list0 = LocaleUtils.localeLookupList(locale0, locale0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      List list0 = LocaleUtils.availableLocaleList();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Locale locale0 = Locale.GERMANY;
      String string0 = locale0.getDisplayLanguage();
      boolean boolean0 = LocaleUtils.isAvailableLocale(locale0);
      List list0 = LocaleUtils.countriesByLanguage("th");
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Locale locale0 = Locale.ENGLISH;
      String[] stringArray0 = Locale.getISOLanguages();
      String[] stringArray1 = Locale.getISOLanguages();
      Locale locale1 = locale0.stripExtensions();
      String string0 = locale1.getDisplayScript();
      boolean boolean0 = LocaleUtils.isAvailableLocale(locale0);
      List list0 = LocaleUtils.localeLookupList(locale1);
      String[] stringArray2 = Locale.getISOCountries();
      List list1 = LocaleUtils.countriesByLanguage((String) null);
      List list2 = LocaleUtils.localeLookupList(locale0, locale0);
      LocaleUtils localeUtils0 = new LocaleUtils();
      List list3 = LocaleUtils.localeLookupList(locale1, locale0);
      Locale locale2 = LocaleUtils.toLocale("th");
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("org.apache.commons.lang.LocaleUtils");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: org.apache.commons.lang.LocaleUtils
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Set set0 = LocaleUtils.availableLocaleSet();
      Set set1 = LocaleUtils.availableLocaleSet();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Locale locale0 = Locale.KOREA;
      Locale locale1 = new Locale("", "", "Korean");
      List list0 = LocaleUtils.localeLookupList(locale0, locale1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("w{(8<kNO3<@V>XCj*");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: w{(8<kNO3<@V>XCj*
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale(";JPm0/E88^");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: ;JPm0/E88^
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: 
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Locale locale0 = LocaleUtils.toLocale((String) null);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("m0S5}");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: m0S5}
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      List list0 = LocaleUtils.countriesByLanguage("");
      List list1 = LocaleUtils.languagesByCountry("");
      List list2 = LocaleUtils.languagesByCountry("");
      List list3 = LocaleUtils.localeLookupList((Locale) null);
      List list4 = LocaleUtils.localeLookupList((Locale) null, (Locale) null);
      List list5 = LocaleUtils.countriesByLanguage("");
      List list6 = LocaleUtils.languagesByCountry((String) null);
      boolean boolean0 = LocaleUtils.isAvailableLocale((Locale) null);
      List list7 = LocaleUtils.countriesByLanguage("");
      List list8 = LocaleUtils.countriesByLanguage("vi");
  }
}
