/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 29 05:03:29 GMT 2020
 */

package org.apache.commons.lang;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import org.apache.commons.lang.LocaleUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LocaleUtils_ESTest extends LocaleUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      List list0 = LocaleUtils.countriesByLanguage((String) null);
      LocaleUtils localeUtils0 = new LocaleUtils();
      List list1 = LocaleUtils.languagesByCountry("");
      List list2 = LocaleUtils.countriesByLanguage("");
      List list3 = LocaleUtils.languagesByCountry((String) null);
      List list4 = LocaleUtils.languagesByCountry("");
      List list5 = LocaleUtils.countriesByLanguage("#u?*bj1#2|");
      Locale locale0 = LocaleUtils.toLocale((String) null);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      List list0 = LocaleUtils.languagesByCountry("es");
      Locale locale0 = Locale.FRANCE;
      Set<Character> set0 = locale0.getExtensionKeys();
      Locale locale1 = locale0.stripExtensions();
      String string0 = locale0.getDisplayScript(locale1);
      String string1 = locale1.getDisplayScript();
      List list1 = LocaleUtils.localeLookupList(locale1);
      Locale locale2 = LocaleUtils.toLocale("es");
      String string2 = locale2.getDisplayScript();
      Locale locale3 = locale0.stripExtensions();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      String[] stringArray0 = Locale.getISOLanguages();
      Locale locale4 = Locale.lookup(linkedList0, linkedList1);
      List list2 = LocaleUtils.countriesByLanguage("es");
      List list3 = LocaleUtils.localeLookupList(locale2, locale1);
      Set set1 = LocaleUtils.availableLocaleSet();
      LocaleUtils localeUtils0 = new LocaleUtils();
      List list4 = LocaleUtils.languagesByCountry("G4!z1Li1j,*x[Z");
      Set set2 = LocaleUtils.availableLocaleSet();
      List list5 = LocaleUtils.countriesByLanguage("M0eMy6x'K");
      List list6 = LocaleUtils.availableLocaleList();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Locale locale0 = Locale.GERMANY;
      boolean boolean0 = LocaleUtils.isAvailableLocale(locale0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      boolean boolean0 = LocaleUtils.isAvailableLocale((Locale) null);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Locale locale0 = new Locale("", "Invalid locale format: ", "Invalid locale format: ");
      List list0 = LocaleUtils.localeLookupList(locale0, locale0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      List list0 = LocaleUtils.localeLookupList((Locale) null, (Locale) null);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("t<");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: t<
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("S[m.%F3");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: S[m.%F3
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("\u4E2D\u6587 (\u53F0\u6E7E\u5730\u533A)");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: \u4E2D\u6587 (\u53F0\u6E7E\u5730\u533A)
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("de-DE");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: de-DE
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: 
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }
}
