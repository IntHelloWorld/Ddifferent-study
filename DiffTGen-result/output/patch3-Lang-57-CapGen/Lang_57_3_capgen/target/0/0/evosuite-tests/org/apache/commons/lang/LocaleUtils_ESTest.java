/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 29 04:58:15 GMT 2020
 */

package org.apache.commons.lang;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import org.apache.commons.lang.LocaleUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LocaleUtils_ESTest extends LocaleUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("rasN^e2PS");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: rasN^e2PS
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("aeAh4x9M@");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: aeAh4x9M@
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("/]0tDmX");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: /]0tDmX
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      List list0 = LocaleUtils.localeLookupList((Locale) null, (Locale) null);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      List list0 = LocaleUtils.languagesByCountry("LE)9#");
      List list1 = LocaleUtils.languagesByCountry(")NfraM9hLYk3kiH\"EJ");
      List list2 = LocaleUtils.languagesByCountry("RS");
      List list3 = LocaleUtils.countriesByLanguage("RS");
      Locale locale0 = Locale.GERMANY;
      Locale locale1 = Locale.SIMPLIFIED_CHINESE;
      Set<String> set0 = locale1.getUnicodeLocaleKeys();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      boolean boolean0 = linkedList1.add(locale1);
      Locale locale2 = Locale.lookup(linkedList0, linkedList1);
      Set<String> set1 = locale1.getUnicodeLocaleAttributes();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      List<String> list4 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set1, locale_FilteringMode0);
      Set<String> set2 = locale0.getUnicodeLocaleKeys();
      String string0 = locale0.getDisplayLanguage(locale1);
      List list5 = LocaleUtils.localeLookupList(locale0);
      String string1 = "8O(N517:p%Gt-@,H";
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("8O(N517:p%Gt-@,H");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: 8O(N517:p%Gt-@,H
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      Locale.setDefault(locale_Category0, locale0);
      boolean boolean0 = LocaleUtils.isAvailableLocale(locale0);
      Locale locale1 = Locale.US;
      String string0 = locale1.getDisplayName();
      boolean boolean1 = LocaleUtils.isAvailableLocale(locale1);
      List list0 = LocaleUtils.languagesByCountry((String) null);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      List list0 = LocaleUtils.languagesByCountry("");
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      boolean boolean0 = LocaleUtils.isAvailableLocale((Locale) null);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Set set0 = LocaleUtils.availableLocaleSet();
      Set set1 = LocaleUtils.availableLocaleSet();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      List list0 = LocaleUtils.localeLookupList(locale0, (Locale) null);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Locale locale0 = new Locale("~G", "~G", "P/;6[+se{xVa+*");
      List list0 = LocaleUtils.localeLookupList(locale0, locale0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Locale locale0 = LocaleUtils.toLocale("fr");
      List list0 = LocaleUtils.localeLookupList(locale0, locale0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("i~>q'4n=0-I_BBcv7");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: i~>q'4n=0-I_BBcv7
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("n24_AUjU1.ihVh#d");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: n24_AUjU1.ihVh#d
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("tVE~e*Ki");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: tVE~e*Ki
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("`:?Hu");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: `:?Hu
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Locale locale0 = LocaleUtils.toLocale("no");
      List list0 = LocaleUtils.countriesByLanguage("no");
      LocaleUtils localeUtils0 = new LocaleUtils();
      List list1 = LocaleUtils.countriesByLanguage("no");
      List list2 = LocaleUtils.languagesByCountry("no");
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: 
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Locale locale0 = LocaleUtils.toLocale((String) null);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LocaleUtils localeUtils0 = new LocaleUtils();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Locale locale1 = Locale.JAPAN;
      String string0 = locale0.getDisplayCountry(locale1);
      List list0 = LocaleUtils.localeLookupList(locale0);
      List list1 = LocaleUtils.languagesByCountry("");
      Locale locale2 = Locale.ENGLISH;
      List list2 = LocaleUtils.localeLookupList(locale2);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale locale3 = Locale.lookup(linkedList0, (Collection<Locale>) null);
      List list3 = LocaleUtils.countriesByLanguage((String) null);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      List list0 = LocaleUtils.availableLocaleList();
  }
}
