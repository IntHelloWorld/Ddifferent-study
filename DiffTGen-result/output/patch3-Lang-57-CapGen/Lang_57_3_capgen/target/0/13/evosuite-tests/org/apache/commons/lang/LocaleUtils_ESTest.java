/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 29 05:00:04 GMT 2020
 */

package org.apache.commons.lang;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import org.apache.commons.lang.LocaleUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LocaleUtils_ESTest extends LocaleUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("hj+1bM$");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: hj+1bM$
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      List list0 = LocaleUtils.localeLookupList((Locale) null, (Locale) null);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Locale locale0 = Locale.JAPANESE;
      String string0 = locale0.toLanguageTag();
      boolean boolean0 = LocaleUtils.isAvailableLocale(locale0);
      List list0 = LocaleUtils.localeLookupList(locale0, locale0);
      boolean boolean1 = LocaleUtils.isAvailableLocale(locale0);
      List list1 = LocaleUtils.countriesByLanguage("ja");
      Locale locale1 = LocaleUtils.toLocale("ja");
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      List list0 = LocaleUtils.countriesByLanguage((String) null);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Locale.setDefault(locale_Category0, locale0);
      boolean boolean0 = LocaleUtils.isAvailableLocale(locale0);
      List list0 = LocaleUtils.localeLookupList(locale0, locale0);
      List list1 = LocaleUtils.availableLocaleList();
      Locale locale1 = Locale.TAIWAN;
      Locale.setDefault(locale1);
      Set<String> set0 = locale1.getUnicodeLocaleAttributes();
      boolean boolean1 = LocaleUtils.isAvailableLocale(locale1);
      List list2 = LocaleUtils.countriesByLanguage("Ouy_'l';y");
      List list3 = LocaleUtils.languagesByCountry("");
      String string0 = "";
      List list4 = LocaleUtils.languagesByCountry("");
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: 
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      List list0 = LocaleUtils.languagesByCountry((String) null);
      Locale locale0 = LocaleUtils.toLocale((String) null);
      List list1 = LocaleUtils.countriesByLanguage((String) null);
      Locale locale1 = Locale.CANADA_FRENCH;
      String string0 = locale1.getDisplayLanguage();
      String string1 = locale1.toLanguageTag();
      List list2 = LocaleUtils.localeLookupList(locale1, locale1);
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: 
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = "$";
      List list0 = LocaleUtils.languagesByCountry("$");
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("org.apache.commons.lang.LocaleUtils");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: org.apache.commons.lang.LocaleUtils
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Locale locale0 = null;
      List list0 = LocaleUtils.localeLookupList((Locale) null);
      String string0 = "v2w,h\"#H0[rwntQ[;G";
      List list1 = LocaleUtils.languagesByCountry("v2w,h\"#H0[rwntQ[;G");
      Set set0 = LocaleUtils.availableLocaleSet();
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("?|e");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: ?|e
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      boolean boolean0 = LocaleUtils.isAvailableLocale((Locale) null);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Set set0 = LocaleUtils.availableLocaleSet();
      Set set1 = LocaleUtils.availableLocaleSet();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Locale locale0 = Locale.JAPAN;
      List list0 = LocaleUtils.localeLookupList(locale0, (Locale) null);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Locale locale0 = new Locale("4V7F[>x", "Invalid locale format: ", "4V7F[>x");
      List list0 = LocaleUtils.localeLookupList(locale0, locale0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("u[{33?2.");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: u[{33?2.
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("{$YZC`-en=wi&");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: {$YZC`-en=wi&
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("l|$S^R(!WCF'");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: l|$S^R(!WCF'
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("I(q+8");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: I(q+8
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LocaleUtils localeUtils0 = new LocaleUtils();
  }
}
