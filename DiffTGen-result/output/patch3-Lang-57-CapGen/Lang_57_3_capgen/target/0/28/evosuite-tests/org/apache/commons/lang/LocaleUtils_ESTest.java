/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 29 05:03:33 GMT 2020
 */

package org.apache.commons.lang;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import java.util.stream.Stream;
import org.apache.commons.lang.LocaleUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LocaleUtils_ESTest extends LocaleUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("zh-TW");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: zh-TW
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("Y8o!Z0F");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: Y8o!Z0F
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Locale locale0 = new Locale("fS;wOG", "@O<N4|%{cL", "fS;wOG");
      List list0 = LocaleUtils.localeLookupList(locale0, locale0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      List list0 = LocaleUtils.countriesByLanguage("Gjo+");
      List list1 = LocaleUtils.languagesByCountry("");
      List list2 = LocaleUtils.availableLocaleList();
      List list3 = LocaleUtils.availableLocaleList();
      List list4 = LocaleUtils.languagesByCountry("");
      LocaleUtils localeUtils0 = new LocaleUtils();
      Locale locale0 = Locale.CHINESE;
      List list5 = LocaleUtils.localeLookupList(locale0, locale0);
      List list6 = LocaleUtils.availableLocaleList();
      List list7 = LocaleUtils.countriesByLanguage((String) null);
      Locale locale1 = Locale.CANADA_FRENCH;
      Locale locale2 = Locale.CANADA;
      List list8 = LocaleUtils.localeLookupList(locale1, locale2);
      List list9 = LocaleUtils.countriesByLanguage("es");
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      boolean boolean0 = LocaleUtils.isAvailableLocale(locale0);
      LocaleUtils localeUtils0 = new LocaleUtils();
      List list0 = LocaleUtils.countriesByLanguage("");
      List list1 = LocaleUtils.languagesByCountry("");
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Stream<Locale.LanguageRange> stream0 = linkedList0.stream();
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      List<String> list2 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0);
      List list3 = LocaleUtils.countriesByLanguage("");
      List list4 = LocaleUtils.languagesByCountry("3.@id`o(*Sk )f=Pjf)");
      Locale locale1 = null;
      List list5 = LocaleUtils.localeLookupList(locale0, (Locale) null);
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("S");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: S
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      List list0 = LocaleUtils.languagesByCountry((String) null);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Locale locale0 = Locale.GERMANY;
      Set<Character> set0 = locale0.getExtensionKeys();
      String string0 = locale0.getDisplayScript();
      String string1 = locale0.getDisplayName();
      Locale locale1 = new Locale("");
      String string2 = locale0.getDisplayVariant(locale1);
      boolean boolean0 = locale0.hasExtensions();
      Locale locale2 = Locale.forLanguageTag("!");
      List list0 = LocaleUtils.localeLookupList(locale0);
      List list1 = LocaleUtils.availableLocaleList();
      Set<String> set1 = locale0.getUnicodeLocaleKeys();
      List list2 = LocaleUtils.countriesByLanguage("org.apache.commons.lang.LocaleUtils");
      List list3 = LocaleUtils.localeLookupList(locale0);
      Locale locale3 = LocaleUtils.toLocale("hr");
      Locale locale4 = Locale.forLanguageTag("hr");
      List list4 = LocaleUtils.languagesByCountry("");
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      boolean boolean0 = LocaleUtils.isAvailableLocale((Locale) null);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Set set0 = LocaleUtils.availableLocaleSet();
      Set set1 = LocaleUtils.availableLocaleSet();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      List list0 = LocaleUtils.localeLookupList((Locale) null, (Locale) null);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("org.apache.commons.lang.LocaleUtils");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: org.apache.commons.lang.LocaleUtils
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("y~j}i#pS");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: y~j}i#pS
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("m=#mV.jYSm<tD:eG");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: m=#mV.jYSm<tD:eG
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("},4zs");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: },4zs
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Locale locale0 = LocaleUtils.toLocale((String) null);
  }
}
