/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 29 04:58:16 GMT 2020
 */

package org.apache.commons.lang;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import org.apache.commons.lang.LocaleUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LocaleUtils_ESTest extends LocaleUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("24?WZuf");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: 24?WZuf
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: 
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      List list0 = LocaleUtils.localeLookupList((Locale) null, (Locale) null);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("O*B-[");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: O*B-[
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      List list0 = LocaleUtils.countriesByLanguage("");
      LocaleUtils localeUtils0 = new LocaleUtils();
      List list1 = LocaleUtils.countriesByLanguage("el");
      Locale locale0 = Locale.CHINESE;
      List list2 = LocaleUtils.localeLookupList(locale0);
      Locale locale1 = Locale.PRC;
      List list3 = LocaleUtils.localeLookupList(locale1);
      List list4 = LocaleUtils.countriesByLanguage("");
      List list5 = LocaleUtils.localeLookupList(locale1, locale1);
      List list6 = LocaleUtils.localeLookupList(locale0, locale0);
      List list7 = LocaleUtils.countriesByLanguage("");
      Locale locale2 = Locale.US;
      List list8 = LocaleUtils.localeLookupList(locale2, locale0);
      boolean boolean0 = LocaleUtils.isAvailableLocale(locale0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      List list0 = LocaleUtils.countriesByLanguage((String) null);
      List list1 = LocaleUtils.availableLocaleList();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      List list0 = LocaleUtils.languagesByCountry((String) null);
      List list1 = LocaleUtils.languagesByCountry((String) null);
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("xaliZi25gN.tT@");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: xaliZi25gN.tT@
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      List list0 = LocaleUtils.languagesByCountry("");
      Locale.LanguageRange locale_LanguageRange0 = null;
      try {
        locale_LanguageRange0 = new Locale.LanguageRange((String) null, 1.0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Locale$LanguageRange", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      boolean boolean0 = LocaleUtils.isAvailableLocale((Locale) null);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Set set0 = LocaleUtils.availableLocaleSet();
      Set set1 = LocaleUtils.availableLocaleSet();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Locale locale0 = new Locale("^ND89J@", "|Mg _[s[Lc]1pW3A", "|Mg _[s[Lc]1pW3A");
      List list0 = LocaleUtils.localeLookupList(locale0, locale0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("org.apache.commons.lang.LocaleUtils");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: org.apache.commons.lang.LocaleUtils
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("k|@9PkPt .$9]ms8h#");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: k|@9PkPt .$9]ms8h#
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("{jj-!O# I<*");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: {jj-!O# I<*
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Locale locale0 = LocaleUtils.toLocale("th");
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Locale locale0 = LocaleUtils.toLocale((String) null);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("bA%'r7ejmE}D1;R=");
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: bA%'r7ejmE}D1;R=
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }
}
