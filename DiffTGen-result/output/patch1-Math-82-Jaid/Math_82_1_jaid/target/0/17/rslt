* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.math.optimization.linear.SimplexSolver
* Starting client
* Connecting to master process on port 18578
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/patch1-Math-82-Jaid/Math_82_1_jaid/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math.optimization.linear.SimplexSolver
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 65
  - Branch 46
  - Exception 0
  - MutationFactory 186
  - Output 6
  - Method 6
  - MethodNoException 6
  - CBranchFitnessFactory 46
* Using seed 1585483257934
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%][Progress:=>                            6%] [Cov:=>                                 3%][Progress:=>                            6%] [Cov:=>                                 5%][Progress:=>                            6%] [Cov:=====>                             17%][Progress:==>                           8%] [Cov:======>                            19%][Progress:==>                           8%] [Cov:========>                          24%][Progress:==>                           8%] [Cov:=========>                         28%][Progress:===>                          13%] [Cov:>                                  1%][Progress:===>                          13%] [Cov:====>                              14%][Progress:===>                          13%] [Cov:======>                            18%][Progress:===>                          13%] [Cov:=======>                           22%][Progress:===>                          13%] [Cov:=========>                         27%][Progress:====>                         15%] [Cov:>                                  1%][Progress:====>                         15%] [Cov:====>                              14%][Progress:====>                         15%] [Cov:======>                            18%][Progress:====>                         15%] [Cov:=======>                           22%][Progress:====>                         15%] [Cov:========>                          24%][Progress:====>                         15%] [Cov:==========>                        29%][Progress:====>                         15%] [Cov:==========>                        30%][Progress:====>                         16%] [Cov:>                                  2%][Progress:====>                         16%] [Cov:=>                                 4%][Progress:====>                         16%] [Cov:=====>                             17%][Progress:====>                         16%] [Cov:======>                            18%][Progress:====>                         16%] [Cov:=======>                           22%][Progress:====>                         16%] [Cov:==========>                        31%][Progress:====>                         16%] [Cov:=============>                     39%][Progress:====>                         16%] [Cov:==============>                    40%][Progress:=====>                        18%] [Cov:>                                  0%][Progress:=====>                        18%] [Cov:>                                  1%][Progress:=====>                        18%] [Cov:====>                              13%][Progress:=====>                        18%] [Cov:=====>                             16%][Progress:=====>                        18%] [Cov:=====>                             17%][Progress:=====>                        18%] [Cov:======>                            18%][Progress:=====>                        18%] [Cov:=======>                           21%][Progress:=====>                        18%] [Cov:========>                          25%][Progress:=====>                        18%] [Cov:==========>                        29%][Progress:=====>                        18%] [Cov:===========>                       34%][Progress:======>                       20%] [Cov:=========>                         27%][Progress:======>                       20%] [Cov:==========>                        31%][Progress:======>                       20%] [Cov:=============>                     38%][Progress:======>                       21%] [Cov:============>                      36%][Progress:======>                       21%] [Cov:============>                      37%][Progress:======>                       21%] [Cov:=============>                     39%][Progress:======>                       21%] [Cov:===============>                   43%][Progress:======>                       21%] [Cov:===============>                   45%][Progress:======>                       21%] [Cov:================>                  46%][Progress:======>                       23%] [Cov:========>                          23%][Progress:======>                       23%] [Cov:========>                          24%][Progress:======>                       23%] [Cov:==========>                        30%][Progress:======>                       23%] [Cov:===========>                       32%][Progress:======>                       23%] [Cov:===========>                       34%][Progress:======>                       23%] [Cov:============>                      36%][Progress:=======>                      25%] [Cov:=======>                           22%][Progress:=======>                      25%] [Cov:=========>                         26%][Progress:=======>                      25%] [Cov:=========>                         28%][Progress:=======>                      25%] [Cov:==========>                        29%][Progress:=======>                      25%] [Cov:==========>                        31%][Progress:=======>                      25%] [Cov:============>                      36%][Progress:=======>                      25%] [Cov:============>                      37%][Progress:=======>                      25%] [Cov:=============>                     38%][Progress:=======>                      26%] [Cov:================>                  48%][Progress:========>                     28%] [Cov:================>                  46%][Progress:========>                     28%] [Cov:================>                  47%][Progress:========>                     28%] [Cov:================>                  48%][Progress:========>                     28%] [Cov:=================>                 50%][Progress:========>                     28%] [Cov:=================>                 51%][Progress:=========>                    30%] [Cov:================>                  46%][Progress:=========>                    30%] [Cov:================>                  48%][Progress:=========>                    31%] [Cov:==================>                52%][Progress:=========>                    33%] [Cov:=================>                 50%][Progress:=========>                    33%] [Cov:==================>                52%][Progress:=========>                    33%] [Cov:==================>                52%][Progress:==========>                   35%] [Cov:=================>                 49%][Progress:==========>                   35%] [Cov:==================>                52%][Progress:==========>                   36%] [Cov:==================>                52%][Progress:==========>                   36%] [Cov:==================>                52%][Progress:===========>                  38%] [Cov:==================>                52%][Progress:===========>                  38%] [Cov:==================>                52%][Progress:============>                 40%] [Cov:==================>                52%][Progress:============>                 41%] [Cov:==================>                52%][Progress:============>                 41%] [Cov:==================>                52%][Progress:============>                 43%] [Cov:==================>                52%][Progress:============>                 43%] [Cov:==================>                52%][Progress:=============>                45%] [Cov:=================>                 50%][Progress:=============>                45%] [Cov:==================>                52%][Progress:=============>                46%] [Cov:==================>                52%][Progress:=============>                46%] [Cov:==================>                52%][Progress:==============>               48%] [Cov:==================>                52%][Progress:==============>               48%] [Cov:==================>                52%][Progress:===============>              50%] [Cov:==================>                53%][Progress:===============>              50%] [Cov:==================>                54%][Progress:===============>              50%] [Cov:====================>              58%][Progress:===============>              50%] [Cov:====================>              59%][Progress:===============>              51%] [Cov:==================>                52%][Progress:===============>              51%] [Cov:=====================>             60%][Progress:===============>              53%] [Cov:====================>              58%][Progress:===============>              53%] [Cov:=====================>             60%][Progress:================>             55%] [Cov:====================>              58%][Progress:================>             55%] [Cov:=====================>             60%][Progress:================>             55%] [Cov:=====================>             60%][Progress:================>             56%] [Cov:====================>              58%][Progress:================>             56%] [Cov:=====================>             60%][Progress:================>             56%] [Cov:=====================>             60%][Progress:=================>            58%] [Cov:=====================>             60%][Progress:=================>            58%] [Cov:=====================>             60%][Progress:==================>           60%] [Cov:====================>              58%][Progress:==================>           60%] [Cov:=====================>             60%][Progress:==================>           61%] [Cov:=====================>             60%][Progress:==================>           61%] [Cov:=====================>             60%][Progress:==================>           63%] [Cov:=====================>             60%][Progress:==================>           63%] [Cov:=====================>             60%][Progress:===================>          65%] [Cov:=====================>             60%][Progress:===================>          65%] [Cov:=====================>             60%][Progress:===================>          66%] [Cov:=====================>             60%][Progress:===================>          66%] [Cov:=====================>             60%][Progress:====================>         68%] [Cov:=====================>             60%][Progress:====================>         68%] [Cov:=====================>             60%][Progress:=====================>        70%] [Cov:=====================>             60%][Progress:=====================>        70%] [Cov:=====================>             60%][Progress:=====================>        71%] [Cov:=====================>             60%][Progress:=====================>        73%] [Cov:=====================>             60%][Progress:=====================>        73%] [Cov:=====================>             60%][Progress:======================>       75%] [Cov:=====================>             60%][Progress:======================>       75%] [Cov:=====================>             60%][Progress:======================>       76%] [Cov:====================>              58%][Progress:======================>       76%] [Cov:=====================>             60%][Progress:======================>       76%] [Cov:=====================>             60%][Progress:=======================>      78%] [Cov:=====================>             60%][Progress:=======================>      78%] [Cov:=====================>             60%][Progress:========================>     80%] [Cov:=====================>             60%][Progress:========================>     80%] [Cov:=====================>             60%][Progress:========================>     81%] [Cov:=====================>             60%][Progress:========================>     83%] [Cov:=====================>             60%][Progress:========================>     83%] [Cov:=====================>             60%][Progress:=========================>    85%] [Cov:=====================>             60%][Progress:=========================>    86%] [Cov:=====================>             60%][Progress:=========================>    86%] [Cov:=====================>             60%][Progress:==========================>   88%] [Cov:=====================>             60%][Progress:==========================>   88%] [Cov:=====================>             61%][Progress:===========================>  90%] [Cov:=====================>             61%][Progress:===========================>  90%] [Cov:=====================>             61%][Progress:===========================>  91%] [Cov:=====================>             61%][Progress:===========================>  93%] [Cov:=====================>             61%][Progress:===========================>  93%] [Cov:=====================>             61%][Progress:============================> 95%] [Cov:=====================>             61%][Progress:============================> 95%] [Cov:=====================>             62%][Progress:============================> 95%] [Cov:======================>            63%][Progress:============================> 96%] [Cov:=====================>             61%][Progress:============================> 96%] [Cov:======================>            64%][Progress:=============================>98%] [Cov:======================>            63%][Progress:=============================>98%] [Cov:======================>            64%][Progress:==============================100%] [Cov:======================>            63%][Progress:==============================100%] [Cov:======================>            64%][Progress:==============================100%] [Cov:======================>            65%]
* Search finished after 62s and 33 generations, 13662 statements, best individual has fitness: 188.41485507246378
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 68%
* Total number of goals: 65
* Number of covered goals: 44
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 57%
* Total number of goals: 46
* Number of covered goals: 26
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 7
* Number of covered goals: 7
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 50%
* Total number of goals: 186
* Number of covered goals: 93
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 33%
* Total number of goals: 6
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 6
* Number of covered goals: 6
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 67%
* Total number of goals: 6
* Number of covered goals: 4
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 54%
* Total number of goals: 46
* Number of covered goals: 25
* Generated 15 tests with total length 102
* Resulting test suite's coverage: 65% (average coverage for all fitness functions)
* Compiling and checking tests
* Writing JUnit test case 'SimplexSolver_ESTest' to evosuite-tests
* Done!

* Computation finished
