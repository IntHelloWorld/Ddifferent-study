* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer
* Starting client
* Connecting to master process on port 11123
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/patch1-Math-57-CapGen/Math_57_1_capgen/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 115
  - Branch 64
  - Exception 0
  - MutationFactory 161
  - Output 6
  - Method 3
  - MethodNoException 3
  - CBranchFitnessFactory 64
* Using seed 1585449785588
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%][Progress:====>                         15%] [Cov:>                                  0%][Progress:====>                         15%] [Cov:>                                  1%][Progress:====>                         15%] [Cov:====>                              13%][Progress:====>                         15%] [Cov:======>                            19%][Progress:====>                         15%] [Cov:========>                          23%][Progress:=========>                    31%] [Cov:>                                  1%][Progress:=========>                    31%] [Cov:====>                              13%][Progress:=========>                    31%] [Cov:========>                          24%][Progress:=========>                    31%] [Cov:==========>                        31%][Progress:=========>                    33%] [Cov:>                                  1%][Progress:=========>                    33%] [Cov:====>                              13%][Progress:=========>                    33%] [Cov:========>                          24%][Progress:=========>                    33%] [Cov:==========>                        31%][Progress:===========>                  38%] [Cov:>                                  0%][Progress:===========>                  38%] [Cov:>                                  1%][Progress:===========>                  38%] [Cov:====>                              13%][Progress:===========>                  38%] [Cov:======>                            19%][Progress:===========>                  38%] [Cov:========>                          23%][Progress:===========>                  38%] [Cov:========>                          24%][Progress:===========>                  38%] [Cov:==========>                        31%][Progress:============>                 40%] [Cov:====>                              13%][Progress:============>                 40%] [Cov:========>                          24%][Progress:============>                 40%] [Cov:==========>                        31%][Progress:============>                 43%] [Cov:>                                  1%][Progress:============>                 43%] [Cov:====>                              13%][Progress:============>                 43%] [Cov:========>                          24%][Progress:============>                 43%] [Cov:==========>                        31%][Progress:============>                 43%] [Cov:===========>                       33%][Progress:============>                 43%] [Cov:==============>                    41%][Progress:============>                 43%] [Cov:==============>                    42%][Progress:============>                 43%] [Cov:=================>                 49%][Progress:============>                 43%] [Cov:=================>                 51%][Progress:==============>               48%] [Cov:>                                  2%][Progress:==============>               48%] [Cov:=>                                 3%][Progress:==============>               48%] [Cov:=====>                             15%][Progress:==============>               48%] [Cov:=========>                         26%][Progress:==============>               48%] [Cov:===========>                       34%][Progress:===============>              53%] [Cov:>                                  1%][Progress:===============>              53%] [Cov:>                                  2%][Progress:===============>              53%] [Cov:=====>                             15%][Progress:===============>              53%] [Cov:========>                          23%][Progress:===============>              53%] [Cov:=========>                         26%][Progress:===============>              53%] [Cov:=========>                         27%][Progress:===============>              53%] [Cov:==========>                        31%][Progress:===============>              53%] [Cov:===========>                       34%][Progress:===============>              53%] [Cov:===============>                   45%][Progress:===============>              53%] [Cov:================>                  47%][Progress:================>             56%] [Cov:>                                  2%][Progress:================>             56%] [Cov:=>                                 3%][Progress:================>             56%] [Cov:=====>                             15%][Progress:================>             56%] [Cov:=====>                             16%][Progress:================>             56%] [Cov:=========>                         27%][Progress:================>             56%] [Cov:===========>                       34%][Progress:================>             56%] [Cov:============>                      35%][Progress:================>             56%] [Cov:=================>                 51%][Progress:=================>            58%] [Cov:======>                            19%][Progress:=================>            58%] [Cov:==========>                        31%][Progress:=================>            58%] [Cov:===========>                       34%][Progress:==================>           63%] [Cov:=========>                         26%][Progress:==================>           63%] [Cov:===========>                       34%][Progress:==================>           63%] [Cov:==============>                    42%][Progress:==================>           63%] [Cov:===============>                   44%][Progress:==================>           63%] [Cov:================>                  46%][Progress:==================>           63%] [Cov:================>                  47%][Progress:==================>           63%] [Cov:=================>                 51%][Progress:===================>          65%] [Cov:==========>                        31%][Progress:===================>          65%] [Cov:===========>                       34%][Progress:===================>          65%] [Cov:===================>               55%][Progress:=====================>        70%] [Cov:===================>               55%][Progress:=====================>        71%] [Cov:==================>                52%][Progress:=====================>        71%] [Cov:==================>                53%][Progress:=====================>        71%] [Cov:===================>               55%][Progress:=====================>        71%] [Cov:===================>               55%][Progress:======================>       76%] [Cov:===================>               55%][Progress:=======================>      78%] [Cov:===================>               55%][Progress:=======================>      78%] [Cov:===================>               56%][Progress:========================>     83%] [Cov:==================>                53%][Progress:========================>     83%] [Cov:===================>               55%][Progress:========================>     83%] [Cov:===================>               56%][Progress:========================>     83%] [Cov:===================>               56%][Progress:==========================>   88%] [Cov:===================>               56%][Progress:===========================>  93%] [Cov:===================>               56%][Progress:===========================>  93%] [Cov:===================>               56%][Progress:=============================>98%] [Cov:===================>               55%][Progress:=============================>98%] [Cov:===================>               56%][Progress:==============================100%] [Cov:===================>               56%][Progress:==============================100%] [Cov:===================>               56%][Progress:==============================100%] [Cov:=====================>             60%]
* Search finished after 64s and 6 generations, 4596 statements, best individual has fitness: 294.90196078151973
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 42%
* Total number of goals: 115
* Number of covered goals: 48
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 33%
* Total number of goals: 64
* Number of covered goals: 21
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 40%
* Total number of goals: 161
* Number of covered goals: 64
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 33%
* Total number of goals: 6
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 33%
* Total number of goals: 64
* Number of covered goals: 21
* Generated 6 tests with total length 41
* Resulting test suite's coverage: 60% (average coverage for all fitness functions)
* Compiling and checking tests
* Writing JUnit test case 'KMeansPlusPlusClusterer_ESTest' to evosuite-tests
* Done!

* Computation finished
