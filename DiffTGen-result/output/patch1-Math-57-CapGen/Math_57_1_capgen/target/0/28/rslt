* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer
* Starting client
* Connecting to master process on port 6110
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/patch1-Math-57-CapGen/Math_57_1_capgen/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 115
  - Branch 64
  - Exception 0
  - MutationFactory 161
  - Output 6
  - Method 3
  - MethodNoException 3
  - CBranchFitnessFactory 64
* Using seed 1585449785605
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%][Progress:===>                          13%] [Cov:>                                  1%][Progress:===>                          13%] [Cov:====>                              13%][Progress:===>                          13%] [Cov:========>                          24%][Progress:===>                          13%] [Cov:==========>                        31%][Progress:=======>                      25%] [Cov:>                                  1%][Progress:=======>                      25%] [Cov:====>                              13%][Progress:=======>                      25%] [Cov:========>                          24%][Progress:=======>                      25%] [Cov:==========>                        31%][Progress:=========>                    30%] [Cov:>                                  0%][Progress:=========>                    30%] [Cov:>                                  1%][Progress:=========>                    30%] [Cov:====>                              13%][Progress:=========>                    30%] [Cov:======>                            19%][Progress:=========>                    30%] [Cov:========>                          23%][Progress:=========>                    31%] [Cov:>                                  1%][Progress:=========>                    31%] [Cov:====>                              13%][Progress:=========>                    31%] [Cov:========>                          24%][Progress:=========>                    31%] [Cov:==========>                        31%][Progress:==========>                   36%] [Cov:>                                  1%][Progress:==========>                   36%] [Cov:====>                              13%][Progress:==========>                   36%] [Cov:========>                          24%][Progress:==========>                   36%] [Cov:==========>                        31%][Progress:============>                 41%] [Cov:>                                  1%][Progress:============>                 41%] [Cov:====>                              13%][Progress:============>                 41%] [Cov:========>                          24%][Progress:============>                 41%] [Cov:==========>                        31%][Progress:============>                 43%] [Cov:========>                          24%][Progress:============>                 43%] [Cov:==========>                        31%][Progress:============>                 43%] [Cov:=============>                     38%][Progress:============>                 43%] [Cov:=================>                 49%][Progress:============>                 43%] [Cov:=================>                 50%][Progress:============>                 43%] [Cov:==================>                52%][Progress:=============>                45%] [Cov:>                                  1%][Progress:=============>                45%] [Cov:====>                              13%][Progress:=============>                45%] [Cov:========>                          24%][Progress:=============>                45%] [Cov:==========>                        31%][Progress:=============>                45%] [Cov:==================>                52%][Progress:=============>                46%] [Cov:==========>                        31%][Progress:=============>                46%] [Cov:================>                  47%][Progress:=============>                46%] [Cov:=================>                 50%][Progress:=============>                46%] [Cov:==================>                52%][Progress:==============>               48%] [Cov:==================>                52%][Progress:===============>              50%] [Cov:==================>                52%][Progress:================>             55%] [Cov:==================>                52%][Progress:================>             55%] [Cov:==================>                53%][Progress:================>             55%] [Cov:==================>                54%][Progress:==================>           60%] [Cov:==================>                52%][Progress:==================>           60%] [Cov:==================>                53%][Progress:==================>           60%] [Cov:==================>                54%][Progress:==================>           61%] [Cov:==================>                54%][Progress:===================>          66%] [Cov:==================>                53%][Progress:===================>          66%] [Cov:==================>                54%][Progress:=====================>        71%] [Cov:==================>                54%][Progress:=====================>        71%] [Cov:===================>               55%][Progress:=====================>        71%] [Cov:===================>               55%][Progress:=====================>        73%] [Cov:==================>                54%][Progress:=====================>        73%] [Cov:===================>               55%][Progress:=====================>        73%] [Cov:===================>               56%][Progress:======================>       75%] [Cov:===================>               55%][Progress:======================>       75%] [Cov:===================>               56%][Progress:======================>       75%] [Cov:===================>               56%][Progress:======================>       76%] [Cov:===================>               56%][Progress:======================>       76%] [Cov:===================>               56%][Progress:======================>       76%] [Cov:===================>               56%][Progress:=======================>      78%] [Cov:===================>               56%][Progress:========================>     83%] [Cov:===================>               56%][Progress:==========================>   88%] [Cov:===================>               56%][Progress:===========================>  91%] [Cov:===================>               56%][Progress:===========================>  93%] [Cov:===================>               56%][Progress:=============================>98%] [Cov:===================>               56%][Progress:==============================100%] [Cov:===================>               56%][Progress:==============================100%] [Cov:===================>               56%][Progress:==============================100%] [Cov:=====================>             60%]
* Search finished after 65s and 10 generations, 5523 statements, best individual has fitness: 296.5002545532377
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 43%
* Total number of goals: 115
* Number of covered goals: 49
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 33%
* Total number of goals: 64
* Number of covered goals: 21
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 41%
* Total number of goals: 161
* Number of covered goals: 66
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 33%
* Total number of goals: 6
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 33%
* Total number of goals: 64
* Number of covered goals: 21
* Generated 6 tests with total length 47
* Resulting test suite's coverage: 60% (average coverage for all fitness functions)
* Compiling and checking tests
* Writing JUnit test case 'KMeansPlusPlusClusterer_ESTest' to evosuite-tests
* Done!

* Computation finished
