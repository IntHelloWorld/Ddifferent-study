* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer
* Starting client
* Connecting to master process on port 6932
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/patch1-Math-57-CapGen/Math_57_1_capgen/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 115
  - Branch 64
  - Exception 0
  - MutationFactory 161
  - Output 6
  - Method 3
  - MethodNoException 3
  - CBranchFitnessFactory 64
[Progress:>                             0%] [Cov:>                                  0%]* Using seed 1585449632881
* Starting evolution
[Progress:======>                       20%] [Cov:>                                  0%][Progress:======>                       20%] [Cov:>                                  1%][Progress:======>                       20%] [Cov:====>                              13%][Progress:======>                       20%] [Cov:======>                            19%][Progress:======>                       20%] [Cov:========>                          23%][Progress:======>                       20%] [Cov:========>                          24%][Progress:======>                       21%] [Cov:>                                  1%][Progress:======>                       21%] [Cov:====>                              13%][Progress:======>                       21%] [Cov:========>                          24%][Progress:======>                       21%] [Cov:==========>                        31%][Progress:==========>                   35%] [Cov:>                                  1%][Progress:==========>                   35%] [Cov:====>                              13%][Progress:==========>                   35%] [Cov:========>                          24%][Progress:==========>                   35%] [Cov:==========>                        31%][Progress:==========>                   36%] [Cov:====>                              13%][Progress:==========>                   36%] [Cov:========>                          24%][Progress:==========>                   36%] [Cov:==========>                        31%][Progress:============>                 41%] [Cov:>                                  2%][Progress:============>                 41%] [Cov:=>                                 3%][Progress:============>                 41%] [Cov:=====>                             15%][Progress:============>                 41%] [Cov:=========>                         26%][Progress:============>                 41%] [Cov:===========>                       34%][Progress:=============>                46%] [Cov:>                                  0%][Progress:=============>                46%] [Cov:====>                              12%][Progress:=============>                46%] [Cov:====>                              13%][Progress:=============>                46%] [Cov:=======>                           20%][Progress:=============>                46%] [Cov:========>                          23%][Progress:=============>                46%] [Cov:========>                          24%][Progress:=============>                46%] [Cov:==========>                        31%][Progress:==============>               48%] [Cov:>                                  1%][Progress:==============>               48%] [Cov:====>                              13%][Progress:==============>               48%] [Cov:========>                          24%][Progress:==============>               48%] [Cov:==========>                        31%][Progress:===============>              53%] [Cov:>                                  0%][Progress:===============>              53%] [Cov:>                                  1%][Progress:===============>              53%] [Cov:====>                              13%][Progress:===============>              53%] [Cov:=====>                             16%][Progress:===============>              53%] [Cov:======>                            19%][Progress:===============>              53%] [Cov:=======>                           20%][Progress:===============>              53%] [Cov:========>                          24%][Progress:===============>              53%] [Cov:==========>                        31%][Progress:================>             55%] [Cov:>                                  0%][Progress:================>             55%] [Cov:>                                  1%][Progress:================>             55%] [Cov:====>                              13%][Progress:================>             55%] [Cov:========>                          23%][Progress:================>             55%] [Cov:==========>                        31%][Progress:================>             56%] [Cov:>                                  1%][Progress:================>             56%] [Cov:====>                              13%][Progress:================>             56%] [Cov:========>                          24%][Progress:================>             56%] [Cov:==========>                        31%][Progress:=================>            58%] [Cov:>                                  0%][Progress:=================>            58%] [Cov:====>                              13%][Progress:=================>            58%] [Cov:=====>                             15%][Progress:=================>            58%] [Cov:======>                            19%][Progress:=================>            58%] [Cov:=========>                         27%][Progress:=================>            58%] [Cov:=========>                         27%][Progress:=================>            58%] [Cov:==========>                        31%][Progress:==================>           60%] [Cov:==========>                        31%][Progress:==================>           61%] [Cov:==========>                        31%][Progress:==================>           63%] [Cov:============>                      35%][Progress:===================>          65%] [Cov:===========>                       34%][Progress:=====================>        70%] [Cov:===========>                       34%][Progress:=====================>        70%] [Cov:============>                      35%][Progress:=====================>        71%] [Cov:===========>                       34%][Progress:=====================>        71%] [Cov:============>                      35%][Progress:=====================>        71%] [Cov:============>                      35%][Progress:=====================>        73%] [Cov:===========>                       34%][Progress:=====================>        73%] [Cov:============>                      35%][Progress:=======================>      78%] [Cov:===========>                       34%][Progress:=======================>      78%] [Cov:============>                      35%][Progress:=======================>      78%] [Cov:============>                      35%][Progress:========================>     80%] [Cov:============>                      35%][Progress:========================>     80%] [Cov:============>                      35%][Progress:========================>     81%] [Cov:============>                      35%][Progress:========================>     81%] [Cov:============>                      36%][Progress:========================>     81%] [Cov:============>                      37%][Progress:========================>     83%] [Cov:============>                      36%][Progress:========================>     83%] [Cov:============>                      37%][Progress:========================>     83%] [Cov:============>                      37%][Progress:=========================>    85%] [Cov:============>                      36%][Progress:=========================>    85%] [Cov:============>                      37%][Progress:=========================>    85%] [Cov:============>                      37%][Progress:=========================>    86%] [Cov:============>                      37%][Progress:=========================>    86%] [Cov:============>                      37%][Progress:===========================>  91%] [Cov:============>                      37%][Progress:===========================>  93%] [Cov:============>                      37%][Progress:===========================>  93%] [Cov:============>                      37%][Progress:============================> 95%] [Cov:============>                      37%][Progress:============================> 95%] [Cov:=============>                     38%][Progress:============================> 95%] [Cov:=============>                     39%][Progress:============================> 95%] [Cov:===============>                   43%][Progress:============================> 95%] [Cov:================>                  46%][Progress:============================> 95%] [Cov:=================>                 50%][Progress:============================> 95%] [Cov:==================>                52%][Progress:============================> 96%] [Cov:=================>                 50%][Progress:============================> 96%] [Cov:==================>                52%][Progress:==============================100%] [Cov:=================>                 50%][Progress:==============================100%] [Cov:==================>                52%][Progress:==============================100%] [Cov:===================>               55%]
* Search finished after 62s and 12 generations, 8496 statements, best individual has fitness: 353.3184282178578
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 36%
* Total number of goals: 115
* Number of covered goals: 41
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 25%
* Total number of goals: 64
* Number of covered goals: 16
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 24%
* Total number of goals: 161
* Number of covered goals: 39
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 33%
* Total number of goals: 6
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 25%
* Total number of goals: 64
* Number of covered goals: 16
* Generated 3 tests with total length 15
* Resulting test suite's coverage: 55% (average coverage for all fitness functions)
* Compiling and checking tests
* Writing JUnit test case 'KMeansPlusPlusClusterer_ESTest' to evosuite-tests
* Done!

* Computation finished
