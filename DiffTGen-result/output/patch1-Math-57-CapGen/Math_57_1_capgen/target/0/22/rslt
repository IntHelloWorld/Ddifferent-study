* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer
* Starting client
* Connecting to master process on port 9465
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/patch1-Math-57-CapGen/Math_57_1_capgen/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 115
  - Branch 64
  - Exception 0
  - MutationFactory 161
  - Output 6
  - Method 3
  - MethodNoException 3
  - CBranchFitnessFactory 64
* Using seed 1585449632537
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%][Progress:====>                         15%] [Cov:>                                  1%][Progress:====>                         15%] [Cov:====>                              13%][Progress:====>                         15%] [Cov:========>                          24%][Progress:====>                         15%] [Cov:==========>                        31%][Progress:====>                         16%] [Cov:>                                  1%][Progress:====>                         16%] [Cov:====>                              13%][Progress:====>                         16%] [Cov:========>                          24%][Progress:====>                         16%] [Cov:==========>                        31%][Progress:=========>                    30%] [Cov:>                                  0%][Progress:=========>                    30%] [Cov:>                                  1%][Progress:=========>                    30%] [Cov:====>                              13%][Progress:=========>                    30%] [Cov:======>                            19%][Progress:=========>                    30%] [Cov:========>                          23%][Progress:=========>                    30%] [Cov:========>                          24%][Progress:=========>                    30%] [Cov:==========>                        31%][Progress:=========>                    31%] [Cov:>                                  0%][Progress:=========>                    31%] [Cov:>                                  1%][Progress:=========>                    31%] [Cov:====>                              13%][Progress:=========>                    31%] [Cov:========>                          23%][Progress:=========>                    31%] [Cov:==========>                        31%][Progress:==========>                   36%] [Cov:>                                  0%][Progress:==========>                   36%] [Cov:>                                  1%][Progress:==========>                   36%] [Cov:====>                              13%][Progress:==========>                   36%] [Cov:======>                            19%][Progress:==========>                   36%] [Cov:========>                          23%][Progress:==========>                   36%] [Cov:========>                          24%][Progress:==========>                   36%] [Cov:==========>                        31%][Progress:===========>                  38%] [Cov:>                                  1%][Progress:===========>                  38%] [Cov:====>                              13%][Progress:===========>                  38%] [Cov:========>                          24%][Progress:===========>                  38%] [Cov:==========>                        31%][Progress:============>                 43%] [Cov:>                                  1%][Progress:============>                 43%] [Cov:====>                              13%][Progress:============>                 43%] [Cov:========>                          24%][Progress:============>                 43%] [Cov:==========>                        31%][Progress:=============>                45%] [Cov:>                                  0%][Progress:=============>                45%] [Cov:>                                  1%][Progress:=============>                45%] [Cov:====>                              13%][Progress:=============>                45%] [Cov:======>                            19%][Progress:=============>                45%] [Cov:========>                          23%][Progress:=============>                45%] [Cov:========>                          24%][Progress:=============>                45%] [Cov:==========>                        31%][Progress:===============>              50%] [Cov:>                                  1%][Progress:===============>              50%] [Cov:====>                              13%][Progress:===============>              50%] [Cov:=======>                           20%][Progress:===============>              50%] [Cov:========>                          24%][Progress:===============>              50%] [Cov:=========>                         26%][Progress:===============>              50%] [Cov:===========>                       34%][Progress:===============>              50%] [Cov:==============>                    41%][Progress:===============>              50%] [Cov:===============>                   43%][Progress:================>             56%] [Cov:>                                  1%][Progress:================>             56%] [Cov:====>                              13%][Progress:================>             56%] [Cov:========>                          24%][Progress:================>             56%] [Cov:==========>                        31%][Progress:================>             56%] [Cov:=============>                     38%][Progress:================>             56%] [Cov:=================>                 49%][Progress:================>             56%] [Cov:=================>                 50%][Progress:=================>            58%] [Cov:>                                  0%][Progress:=================>            58%] [Cov:>                                  1%][Progress:=================>            58%] [Cov:====>                              13%][Progress:=================>            58%] [Cov:======>                            19%][Progress:=================>            58%] [Cov:========>                          23%][Progress:=================>            58%] [Cov:========>                          24%][Progress:=================>            58%] [Cov:==========>                        31%][Progress:==================>           60%] [Cov:=================>                 50%][Progress:==================>           61%] [Cov:========>                          24%][Progress:==================>           61%] [Cov:==========>                        31%][Progress:==================>           61%] [Cov:===========>                       33%][Progress:==================>           61%] [Cov:===========>                       34%][Progress:==================>           63%] [Cov:========>                          23%][Progress:==================>           63%] [Cov:==========>                        31%][Progress:==================>           63%] [Cov:===================>               57%][Progress:====================>         68%] [Cov:===================>               55%][Progress:====================>         68%] [Cov:===================>               57%][Progress:=====================>        70%] [Cov:===================>               55%][Progress:=====================>        70%] [Cov:===================>               56%][Progress:=====================>        70%] [Cov:===================>               57%][Progress:=====================>        70%] [Cov:===================>               57%][Progress:=====================>        71%] [Cov:===================>               55%][Progress:=====================>        71%] [Cov:===================>               57%][Progress:=====================>        73%] [Cov:===================>               57%][Progress:========================>     80%] [Cov:===================>               55%][Progress:========================>     80%] [Cov:===================>               56%][Progress:========================>     80%] [Cov:===================>               57%][Progress:=========================>    85%] [Cov:===================>               57%][Progress:=========================>    85%] [Cov:===================>               57%][Progress:===========================>  90%] [Cov:===================>               55%][Progress:===========================>  90%] [Cov:===================>               57%][Progress:===========================>  91%] [Cov:===================>               57%][Progress:===========================>  93%] [Cov:===================>               57%][Progress:=============================>98%] [Cov:===================>               56%][Progress:=============================>98%] [Cov:===================>               57%][Progress:=============================>98%] [Cov:====================>              58%][Progress:==============================100%] [Cov:===================>               57%][Progress:==============================100%] [Cov:====================>              58%][Progress:==============================100%] [Cov:===================>               57%][Progress:==============================100%] [Cov:====================>              58%][Progress:==============================100%] [Cov:=====================>             61%]
* Search finished after 61s and 7 generations, 4218 statements, best individual has fitness: 283.23022586154366
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 49%
* Total number of goals: 115
* Number of covered goals: 56
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 34%
* Total number of goals: 64
* Number of covered goals: 22
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 47%
* Total number of goals: 161
* Number of covered goals: 75
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 33%
* Total number of goals: 6
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 34%
* Total number of goals: 64
* Number of covered goals: 22
* Generated 5 tests with total length 35
* Resulting test suite's coverage: 62% (average coverage for all fitness functions)
* Compiling and checking tests
* Writing JUnit test case 'KMeansPlusPlusClusterer_ESTest' to evosuite-tests
* Done!

* Computation finished
