* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.math.linear.EigenDecompositionImpl
* Starting client
* Connecting to master process on port 14587
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/patch1-Math-80-Jaid-plausible/Math_80_1-plausible_jaid/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math.linear.EigenDecompositionImpl
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 853
  - Branch 432
  - Exception 0
  - MutationFactory 216
  - Output 28
  - Method 17
  - MethodNoException 17
  - CBranchFitnessFactory 432
[Progress:>                             0%] [Cov:>                                  0%]* Using seed 1585442176663
* Starting evolution
[Progress:====>                         16%] [Cov:>                                  0%][Progress:====>                         16%] [Cov:>                                  1%][Progress:====>                         16%] [Cov:====>                              13%][Progress:======>                       23%] [Cov:>                                  0%][Progress:======>                       23%] [Cov:>                                  1%][Progress:======>                       23%] [Cov:====>                              13%][Progress:=======>                      25%] [Cov:====>                              12%][Progress:=======>                      25%] [Cov:====>                              13%][Progress:=======>                      25%] [Cov:====>                              14%][Progress:========>                     28%] [Cov:=>                                 3%][Progress:=========>                    30%] [Cov:==>                                6%][Progress:=========>                    30%] [Cov:======>                            19%][Progress:=========>                    30%] [Cov:=======>                           22%][Progress:=========>                    30%] [Cov:========>                          23%][Progress:=========>                    30%] [Cov:========>                          25%][Progress:=========>                    31%] [Cov:>                                  0%][Progress:=========>                    31%] [Cov:====>                              12%][Progress:=========>                    31%] [Cov:====>                              13%][Progress:=========>                    31%] [Cov:====>                              14%][Progress:=========>                    33%] [Cov:>                                  0%][Progress:=========>                    33%] [Cov:>                                  1%][Progress:=========>                    33%] [Cov:====>                              13%][Progress:=========>                    33%] [Cov:====>                              14%][Progress:==========>                   35%] [Cov:>                                  0%][Progress:==========>                   35%] [Cov:>                                  1%][Progress:==========>                   35%] [Cov:====>                              13%][Progress:==========>                   35%] [Cov:====>                              14%][Progress:==========>                   36%] [Cov:>                                  0%][Progress:==========>                   36%] [Cov:>                                  1%][Progress:==========>                   36%] [Cov:====>                              13%][Progress:==========>                   36%] [Cov:====>                              14%][Progress:===========>                  38%] [Cov:>                                  0%][Progress:===========>                  38%] [Cov:>                                  1%][Progress:===========>                  38%] [Cov:====>                              13%][Progress:===========>                  38%] [Cov:====>                              14%][Progress:===========>                  38%] [Cov:=======>                           21%][Progress:===========>                  38%] [Cov:========>                          25%][Progress:===========>                  38%] [Cov:=========>                         27%][Progress:===========>                  38%] [Cov:=========>                         28%][Progress:===========>                  38%] [Cov:==========>                        31%][Progress:============>                 40%] [Cov:>                                  0%][Progress:============>                 40%] [Cov:>                                  1%][Progress:============>                 40%] [Cov:====>                              13%][Progress:============>                 40%] [Cov:====>                              14%][Progress:============>                 40%] [Cov:=====>                             16%][Progress:============>                 40%] [Cov:======>                            18%][Progress:============>                 40%] [Cov:======>                            19%][Progress:============>                 40%] [Cov:=======>                           22%][Progress:============>                 40%] [Cov:========>                          25%][Progress:============>                 40%] [Cov:=========>                         26%][Progress:============>                 40%] [Cov:==========>                        31%][Progress:============>                 41%] [Cov:====>                              14%][Progress:============>                 41%] [Cov:========>                          24%][Progress:============>                 41%] [Cov:========>                          25%][Progress:============>                 43%] [Cov:=====>                             15%][Progress:============>                 43%] [Cov:========>                          24%][Progress:============>                 43%] [Cov:========>                          25%][Progress:============>                 43%] [Cov:=========>                         26%][Progress:=============>                45%] [Cov:==============>                    41%][Progress:=============>                46%] [Cov:==============>                    41%][Progress:=============>                46%] [Cov:==============>                    42%][Progress:==============>               48%] [Cov:=============>                     39%][Progress:==============>               48%] [Cov:==============>                    41%][Progress:==============>               48%] [Cov:==============>                    42%][Progress:===============>              50%] [Cov:==============>                    41%][Progress:===============>              50%] [Cov:==============>                    42%][Progress:===============>              51%] [Cov:=============>                     39%][Progress:===============>              51%] [Cov:==============>                    41%][Progress:===============>              53%] [Cov:==============>                    42%][Progress:===============>              53%] [Cov:===============>                   43%][Progress:================>             55%] [Cov:==============>                    42%][Progress:================>             55%] [Cov:===============>                   43%][Progress:================>             56%] [Cov:==============>                    42%][Progress:================>             56%] [Cov:==============>                    42%][Progress:================>             56%] [Cov:===============>                   43%][Progress:=================>            58%] [Cov:===============>                   43%][Progress:==================>           60%] [Cov:==============>                    42%][Progress:==================>           60%] [Cov:===============>                   43%][Progress:==================>           61%] [Cov:==============>                    42%][Progress:==================>           61%] [Cov:===============>                   43%][Progress:==================>           61%] [Cov:===============>                   44%][Progress:==================>           63%] [Cov:===============>                   43%][Progress:===================>          65%] [Cov:==============>                    42%][Progress:===================>          65%] [Cov:===============>                   43%][Progress:===================>          66%] [Cov:===============>                   43%][Progress:====================>         68%] [Cov:===============>                   44%][Progress:=====================>        70%] [Cov:===============>                   44%][Progress:=====================>        71%] [Cov:===============>                   44%][Progress:=====================>        73%] [Cov:===============>                   44%][Progress:======================>       75%] [Cov:===============>                   44%][Progress:======================>       76%] [Cov:===============>                   44%][Progress:======================>       76%] [Cov:===============>                   45%][Progress:=======================>      78%] [Cov:===============>                   45%][Progress:========================>     80%] [Cov:===============>                   45%][Progress:========================>     81%] [Cov:===============>                   45%][Progress:========================>     83%] [Cov:===============>                   45%][Progress:========================>     83%] [Cov:================>                  46%][Progress:=========================>    85%] [Cov:===============>                   45%][Progress:=========================>    86%] [Cov:================>                  46%][Progress:==========================>   88%] [Cov:================>                  46%][Progress:===========================>  90%] [Cov:================>                  46%][Progress:===========================>  91%] [Cov:================>                  46%][Progress:===========================>  91%] [Cov:================>                  47%][Progress:===========================>  93%] [Cov:================>                  46%][Progress:============================> 95%] [Cov:================>                  47%][Progress:============================> 95%] [Cov:================>                  48%][Progress:============================> 96%] [Cov:================>                  47%][Progress:============================> 96%] [Cov:================>                  48%][Progress:=============================>98%] [Cov:================>                  47%][Progress:=============================>98%] [Cov:================>                  48%][Progress:==============================100%] [Cov:================>                  47%][Progress:==============================100%] [Cov:================>                  48%][Progress:==============================100%] [Cov:================>                  48%][Progress:==============================100%] [Cov:=================>                 49%]
* Search finished after 63s and 14 generations, 10816 statements, best individual has fitness: 2377.5412641621947
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 50%
* Total number of goals: 853
* Number of covered goals: 424
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 36%
* Total number of goals: 432
* Number of covered goals: 156
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 38%
* Total number of goals: 216
* Number of covered goals: 82
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 21%
* Total number of goals: 28
* Number of covered goals: 6
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 65%
* Total number of goals: 17
* Number of covered goals: 11
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 53%
* Total number of goals: 17
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 36%
* Total number of goals: 432
* Number of covered goals: 156
* Generated 26 tests with total length 104
* Resulting test suite's coverage: 50% (average coverage for all fitness functions)
* Compiling and checking tests
* Writing JUnit test case 'EigenDecompositionImpl_ESTest' to evosuite-tests
* Done!

* Computation finished
