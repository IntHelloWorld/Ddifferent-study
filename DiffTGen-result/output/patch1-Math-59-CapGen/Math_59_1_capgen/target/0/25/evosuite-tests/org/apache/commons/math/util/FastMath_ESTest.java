/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 29 04:16:40 GMT 2020
 */

package org.apache.commons.math.util;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.math.util.FastMath;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FastMath_ESTest extends FastMath_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double double0 = FastMath.toRadians(1915.24336);
      double double1 = FastMath.abs(2067.10759737399);
      double double2 = FastMath.atanh(1915.24336);
      double double3 = FastMath.pow(33.42730260895907, (-360.99048563));
      int int0 = FastMath.abs(5);
      long long0 = FastMath.abs(2670L);
      double double4 = FastMath.max((double) 5, (double) 5);
      double double5 = FastMath.random();
      double double6 = FastMath.atan2(6.123233995736766E-17, 0.0);
      double double7 = FastMath.sqrt(1009.736);
      double double8 = FastMath.signum((-1534.090943));
      double double9 = FastMath.atanh(0.0);
      double double10 = FastMath.pow(0.39362657592563277, (-1055.941548028594));
      double double11 = FastMath.sinh(0.0);
      double double12 = FastMath.log1p(1.0);
      double double13 = FastMath.cos(0.5000000000042687);
      float float0 = FastMath.max((float) 2670L, (float) 2670L);
      double double14 = FastMath.signum(291.31);
      double double15 = FastMath.log1p(Double.POSITIVE_INFINITY);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      long long0 = FastMath.max((-1007L), (-1007L));
      long long1 = FastMath.max((-1007L), (-1007L));
      long long2 = FastMath.min((-1007L), 4503599627370496L);
      int int0 = FastMath.max((-501), 2464);
      float float0 = FastMath.max((-2265.31F), (float) (-501));
      double double0 = FastMath.rint(4503599627370496L);
      double double1 = FastMath.cosh(2464);
      double double2 = FastMath.sin((-5844.998236887087));
      double double3 = FastMath.min((double) (-1007L), 1.0);
      double double4 = FastMath.log((-501.0F));
      int int1 = FastMath.round((float) (-1007L));
      double double5 = FastMath.log1p(0.07842259109020233);
      int int2 = FastMath.abs(2464);
      int int3 = FastMath.abs(2464);
      double double6 = FastMath.toDegrees(0.5403022766113281);
      int int4 = FastMath.min((-1234), (-1007));
      double double7 = FastMath.tanh(0.0);
      int int5 = FastMath.min((-901), (-1007));
      double double8 = FastMath.max(0.04168701738764507, (double) (-2265.31F));
      int int6 = FastMath.abs((-1234));
      double double9 = FastMath.random();
      double double10 = FastMath.atan(0.0);
      double double11 = FastMath.random();
      long long3 = FastMath.abs((long) 1234);
      double double12 = FastMath.nextUp(2464);
      double double13 = FastMath.tan(1.2331016983979697);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double double0 = FastMath.signum(3.0095696738628313);
      double double1 = FastMath.asin(3.0095696738628313);
      float float0 = FastMath.min(7503.092F, 7503.092F);
      double double2 = FastMath.acos(1.0);
      double double3 = FastMath.nextAfter((-1.0), 0.01745329052209854);
      double double4 = FastMath.atanh(3.0095696738628313);
      double double5 = FastMath.acos(374.192);
      double double6 = FastMath.sinh((-20.0));
      int int0 = FastMath.min((-1), (-1531));
      long long0 = FastMath.round(374.192);
      double double7 = FastMath.log(1.074682223392077);
      long long1 = FastMath.round(2103.1);
      float float1 = FastMath.min((float) (-1531), (float) (-1531));
      double double8 = FastMath.cosh(2.319235767811865);
      double double9 = FastMath.toRadians(1.0);
      double double10 = FastMath.nextUp(0.0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = FastMath.round((-1.0F));
      double double0 = FastMath.nextAfter(0.0, (-1));
      int int1 = FastMath.max((-1), (-1));
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      long long0 = FastMath.min((-9223372036854775808L), (-9223372036854775808L));
      double double0 = FastMath.atan2(351.48096609, 351.48096609);
      double double1 = FastMath.atan(351.48096609);
      int int0 = FastMath.min(1122, 0);
      double double2 = FastMath.cbrt(0);
      double double3 = FastMath.pow(351.48096609, 0);
      long long1 = FastMath.min(2819561105158720014L, 2819561105158720014L);
      long long2 = FastMath.round(0.5403022766113281);
      double double4 = FastMath.log(0.0);
      double double5 = FastMath.cosh((-419.7851840443));
      double double6 = FastMath.log10(2.092571276372179);
      int int1 = FastMath.max(0, 0);
      double double7 = FastMath.pow((-730.0), (-730.0));
      long long3 = FastMath.max((long) 0, 7910884519577875640L);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double double0 = FastMath.pow(0.16666666666666666, 0.16666666666666666);
      double double1 = FastMath.signum(0.7418363755904023);
      double double2 = FastMath.cosh(173.5807194969);
      double double3 = FastMath.cbrt((-897.2551782711437));
      int int0 = FastMath.max(950, 950);
      double double4 = FastMath.atan((-1963.78495712));
      double double5 = FastMath.expm1(1.0);
      double double6 = FastMath.exp((-1.0));
      double double7 = FastMath.ulp((-1.570287106113712));
      double double8 = FastMath.sinh(0.5039018405998233);
      double double9 = FastMath.cos((-1963.78495712));
      float float0 = FastMath.abs((float) 950);
      double double10 = FastMath.nextAfter((-1218.255995), (-0.2499999701976776));
      double double11 = FastMath.random();
      float float1 = FastMath.min(0.0F, 2389.1F);
      double double12 = FastMath.sin(0.36787944117144233);
      double double13 = FastMath.ulp(40.19140625);
      double double14 = FastMath.sin((-3671.0));
      double double15 = FastMath.cos(0.0);
      double double16 = FastMath.asinh(7.105427357601002E-15);
      double double17 = FastMath.signum(0.0F);
      double double18 = FastMath.sqrt(1.0);
      double double19 = FastMath.sinh(560.03);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double double0 = FastMath.cbrt(412.34);
      long long0 = FastMath.min(0L, 0L);
      double double1 = FastMath.atan2(0L, 0L);
      double double2 = FastMath.atan2(0L, 1135.0180766021028);
      double double3 = FastMath.tan(0L);
      double double4 = FastMath.rint(3738.780275325);
      int int0 = FastMath.round((-2493.52F));
      double double5 = FastMath.log10(3739.0);
      double double6 = FastMath.acos((-3329.9183902));
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      double double0 = FastMath.log10((-649.72));
      double double1 = FastMath.sqrt(Double.NaN);
      double double2 = FastMath.random();
      double double3 = FastMath.sin(Double.NaN);
      long long0 = FastMath.max(0L, 0L);
      double double4 = FastMath.log(0L);
      long long1 = FastMath.abs((-3142L));
      double double5 = FastMath.sin(0.8775825500488281);
      double double6 = FastMath.log(0L);
      float float0 = FastMath.abs(0.0F);
      double double7 = FastMath.tanh(235.3);
      double double8 = FastMath.floor((-3142L));
      double double9 = FastMath.asin(0.0F);
      double double10 = FastMath.rint(4043.9);
      double double11 = FastMath.log1p(0.3333333333333333);
      float float1 = FastMath.max((float) 0L, 305.94F);
      double double12 = FastMath.nextUp((-3142L));
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double double0 = FastMath.acosh((-3509.4));
      double double1 = FastMath.acos(Double.NaN);
      double double2 = FastMath.log10((-1964.510296546));
      double double3 = FastMath.acos(Double.NaN);
      double double4 = FastMath.toRadians((-3509.4));
      int int0 = FastMath.min(8, (-381));
      double double5 = FastMath.expm1(Double.NaN);
      double double6 = FastMath.asin((-2772.0));
      double double7 = FastMath.min(Double.NaN, 0.0);
      float float0 = FastMath.max((float) 8, 0.0F);
      double double8 = FastMath.log(956.0829703103805);
      double double9 = FastMath.atanh(1958.3156838);
      double double10 = FastMath.acosh(Double.NaN);
      double double11 = FastMath.toDegrees((-1.0));
      int int1 = FastMath.abs((-381));
      int int2 = FastMath.max(3978, 4);
      double double12 = FastMath.max((-3079.92380653849), Double.NaN);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double double0 = FastMath.random();
      double double1 = FastMath.log(0.0);
      int int0 = FastMath.min(1610219232, 17);
      double double2 = FastMath.acosh(0.0);
      double double3 = FastMath.acos(1.8358548930975745E-7);
      double double4 = FastMath.tanh((-1583.0149600658149));
      int int1 = FastMath.round((-3518.7744F));
      double double5 = FastMath.tan(2.092571276372179);
      int int2 = FastMath.abs(2760);
      double double6 = FastMath.cosh(Double.NaN);
      double double7 = FastMath.log10(2.092571276372179);
      double double8 = FastMath.signum(2.092571276372179);
      double double9 = FastMath.rint(0.3206802596917892);
      double double10 = FastMath.rint(1.8508157176809257);
      long long0 = FastMath.min((long) 17, (long) 1610219232);
      double double11 = FastMath.cbrt(1.0);
      double double12 = FastMath.sin((-3518.7744F));
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double double0 = FastMath.expm1((-711.615438617772));
      float float0 = FastMath.min((-605.5027F), 625.1765F);
      double double1 = FastMath.cosh((-1138.686230457696));
      int int0 = FastMath.abs(0);
      double double2 = FastMath.signum(625.1765F);
      double double3 = FastMath.pow(782.198, 1.0);
      double double4 = FastMath.abs(218.34);
      double double5 = FastMath.log(782.198);
      int int1 = FastMath.min(0, 0);
      double double6 = FastMath.asinh(0);
      double double7 = FastMath.random();
      float float1 = FastMath.min((-605.5027F), (-1643.8F));
      double double8 = FastMath.cbrt((-1.0));
      double double9 = FastMath.min(5.650007086920087E-9, 1.0);
      double double10 = FastMath.tan((-3737.06514096));
      double double11 = FastMath.acosh((-18.457971236441537));
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int int0 = FastMath.min(1736, 19);
      long long0 = FastMath.round((double) 1736);
      double double0 = FastMath.expm1(0.0);
      double double1 = FastMath.pow(0.25534192122103627, (-8.0E298));
      double double2 = FastMath.nextUp((-1873.13695457));
      double double3 = FastMath.acosh(Double.POSITIVE_INFINITY);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double double0 = FastMath.tanh(1.0);
      double double1 = FastMath.acos(305.171082569);
      double double2 = FastMath.pow(1.0, 305.171082569);
      int int0 = FastMath.min((-1937), (-1937));
      long long0 = FastMath.min((long) (-1937), 1956L);
      double double3 = FastMath.tan((-1937L));
      double double4 = FastMath.toDegrees((-0.05417713522911072));
      double double5 = FastMath.tanh(1956L);
      double double6 = FastMath.acos(Double.NaN);
      double double7 = FastMath.atanh((-0.05417713522911072));
      double double8 = FastMath.ulp(1956L);
      double double9 = FastMath.toDegrees(1.2246467991473532E-16);
      double double10 = FastMath.floor(305.171082569);
      double double11 = FastMath.atan2(7.016709298534876E-15, (-0.05417713522911072));
      double double12 = FastMath.rint(Double.NaN);
      double double13 = FastMath.atan(4.73513350078079);
      double double14 = FastMath.abs(3736.31);
      double double15 = FastMath.asin(2.319235767811865);
      double double16 = FastMath.toRadians(1033.189383485981);
      double double17 = FastMath.toDegrees(Double.NaN);
      int int1 = FastMath.round(560.6931F);
      double double18 = FastMath.log1p((-794.0));
      double double19 = FastMath.tanh(644.998997811);
      double double20 = FastMath.log((-1937));
      double double21 = FastMath.ulp(305.171082569);
      double double22 = FastMath.log1p(560.6931F);
      double double23 = FastMath.rint(4.73513350078079);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int int0 = FastMath.max((-1), (-1));
      double double0 = FastMath.log10((-1));
      int int1 = FastMath.round((float) (-1));
      double double1 = FastMath.asin(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      double double0 = FastMath.abs(0.0);
      double double1 = FastMath.max(3.038148934955037E-7, 0.0);
      int int0 = FastMath.max(1078, 1078);
      long long0 = FastMath.min((-4119L), (long) 1078);
      int int1 = FastMath.min(2451, 1078);
      double double2 = FastMath.nextAfter(4589.634683109926, 431.44560896192);
      float float0 = FastMath.abs(Float.NaN);
      double double3 = FastMath.sinh(431.44560896192);
      float float1 = FastMath.min(1.0F, (-2396.385F));
      float float2 = FastMath.max((float) 2451, Float.NaN);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      double double0 = FastMath.max((-1.0), (-989.0870900626));
      double double1 = FastMath.floor((-1.0));
      double double2 = FastMath.asinh((-1.0));
      double double3 = FastMath.abs((-2314.13303199));
      long long0 = FastMath.round((-1.0));
      double double4 = FastMath.signum(0.375);
      double double5 = FastMath.cos(1.0);
      int int0 = FastMath.abs((-1));
      long long1 = FastMath.min((long) (-1), 50L);
      double double6 = FastMath.floor((-1L));
      double double7 = FastMath.nextAfter((-1.0), (-0.8813735870195429));
      double double8 = FastMath.atanh((-1L));
      double double9 = FastMath.pow(2.639144044101463E-7, 670.67451);
      long long2 = FastMath.abs(1459L);
      double double10 = FastMath.max(Double.NEGATIVE_INFINITY, 0.0);
      double double11 = FastMath.cbrt(1.1730463525082348E-7);
      int int1 = FastMath.min((-1251), (-1251));
      double double12 = FastMath.atan2(0.0, Double.NEGATIVE_INFINITY);
      double double13 = FastMath.sqrt(1.1730463525082348E-7);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      float float0 = FastMath.max(0.0F, 0.0F);
      double double0 = FastMath.sin(0.0F);
      double double1 = FastMath.atan2((-1384.2018105202771), 538.4840153228694);
      long long0 = FastMath.max((-3512299194304650054L), (-3512299194304650054L));
      int int0 = FastMath.min(Integer.MAX_VALUE, Integer.MAX_VALUE);
      long long1 = FastMath.min((long) Integer.MAX_VALUE, (-3512299194304650054L));
      double double2 = FastMath.acosh((-1275.5802193593));
      float float1 = FastMath.min(0.0F, (-749.7F));
      double double3 = FastMath.sin((-3512299194304650054L));
      double double4 = FastMath.cbrt((-1.0));
      int int1 = FastMath.min(5, 3280);
      double double5 = FastMath.sin((-749.7F));
      double double6 = FastMath.toDegrees((-516.7957884629199));
      double double7 = FastMath.signum((-1.0));
      int int2 = FastMath.max(3280, Integer.MAX_VALUE);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      float float0 = FastMath.abs(976.165F);
      float float1 = FastMath.min((-3123.4438F), (-3123.4438F));
      double double0 = FastMath.exp(2676.102986139);
      double double1 = FastMath.log10(976.165F);
      double double2 = FastMath.tan(610.9911156);
      long long0 = FastMath.min(0L, 0L);
      double double3 = FastMath.tan((-3123.4438F));
      double double4 = FastMath.nextUp(0.08371849358081818);
      double double5 = FastMath.log10((-3123.4438F));
      double double6 = FastMath.sin(0L);
      double double7 = FastMath.cosh(0L);
      double double8 = FastMath.acosh(2.9895232223716093);
      int int0 = FastMath.min(24, 24);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      double double0 = FastMath.abs((-2107.578));
      double double1 = FastMath.log1p((-1.0));
      double double2 = FastMath.ulp((-1.0));
      double double3 = FastMath.nextAfter((-2107.578), (-1.0));
      double double4 = FastMath.log(Double.NEGATIVE_INFINITY);
      double double5 = FastMath.log10(Double.NEGATIVE_INFINITY);
      float float0 = FastMath.max(1293.3F, 1293.3F);
      double double6 = FastMath.signum(0.7214844409909045);
      double double7 = FastMath.atan2(1293.3F, 2107.578);
      double double8 = FastMath.pow(1.0, 1293.3F);
      double double9 = FastMath.ceil(14.136832902969902);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      double double0 = FastMath.atanh(2721.6);
      double double1 = FastMath.tan(Double.NaN);
      int int0 = FastMath.abs(1);
      double double2 = FastMath.signum(5.0);
      double double3 = FastMath.cbrt(3129.786021076);
      double double4 = FastMath.asin(3129.786021076);
      float float0 = FastMath.abs((float) 1);
      double double5 = FastMath.toRadians(0.0);
      double double6 = FastMath.pow(1.0F, 0.0);
      int int1 = FastMath.max(1, 0);
      double double7 = FastMath.expm1((-2329.8));
      double double8 = FastMath.cos(0.8109631538391113);
      double double9 = FastMath.tan(1);
      double double10 = FastMath.nextAfter(1, 0.0);
      double double11 = FastMath.ulp(1.0);
      int int2 = FastMath.round((-1.0F));
      double double12 = FastMath.atan2(0.19999999999923582, 0.0);
      double double13 = FastMath.log1p(1944.584);
      double double14 = FastMath.exp(1);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      double double0 = FastMath.sin(0.8775825500488281);
      long long0 = FastMath.round(0.7691963472741135);
      double double1 = FastMath.cos(0.7691963472741135);
      float float0 = FastMath.max((float) 1L, (float) 1L);
      int int0 = FastMath.abs((-4103));
      double double2 = FastMath.ceil(0.3999999761581421);
      double double3 = FastMath.signum(0.8775825500488281);
      double double4 = FastMath.pow((-4103), 1.0);
      int int1 = FastMath.round((float) 1L);
      double double5 = FastMath.cbrt((-1640.69383594));
      double double6 = FastMath.cbrt((-316.82968));
      double double7 = FastMath.acos((-2.957007209750105E-8));
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int int0 = FastMath.min(1499, (-845));
      double double0 = FastMath.toDegrees((-845));
      int int1 = FastMath.max((-2147483647), 0);
      double double1 = FastMath.expm1((-845));
      double double2 = FastMath.toDegrees((-845));
      double double3 = FastMath.asinh((-48414.93368855456));
      double double4 = FastMath.min(3630.719770511, (-473.209));
      long long0 = FastMath.max(2328L, 909L);
      double double5 = FastMath.min((double) 0, 1.3526894423597173E-6);
      long long1 = FastMath.max(0L, (long) 0);
      float float0 = FastMath.abs((float) 909L);
      float float1 = FastMath.min((-1087.3185F), 3188.0F);
      double double6 = FastMath.floor((-1.0));
      long long2 = FastMath.max((-3512299194304650054L), (long) 0);
      double double7 = FastMath.log10(Double.POSITIVE_INFINITY);
      double double8 = FastMath.tan((-11.480710773064585));
      double double9 = FastMath.ceil(11.0);
      double double10 = FastMath.pow(0.25534192122103627, 0.25534192122103627);
      double double11 = FastMath.ulp(2328L);
      double double12 = FastMath.tanh((-1087.3185F));
      float float2 = FastMath.min(0.0F, 0.0F);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      double double0 = FastMath.log(0.0);
      long long0 = FastMath.abs((-747L));
      double double1 = FastMath.nextAfter((-1.0), 0.39362657592563277);
      long long1 = FastMath.max((-747L), 1283L);
      double double2 = FastMath.atan(747L);
      double double3 = FastMath.cos(1.569457639508901);
      double double4 = FastMath.toRadians(1283L);
      double double5 = FastMath.expm1(0.39362657592563277);
      long long2 = FastMath.round((-2932.5387989475844));
      double double6 = FastMath.cosh(12.0);
      double double7 = FastMath.log((-0.9999999999999999));
      double double8 = FastMath.acos(747L);
      double double9 = FastMath.abs(81377.39571257407);
      long long3 = FastMath.abs(981L);
      double double10 = FastMath.log10(14.136832902969902);
      double double11 = FastMath.asin(0.39362657592563277);
      double double12 = FastMath.floor((-8.0E298));
      int int0 = FastMath.max(18, 18);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      double double0 = FastMath.ceil((-286.5831990747));
      int int0 = FastMath.max((-776), 2526);
      double double1 = FastMath.cbrt((-286.5831990747));
      double double2 = FastMath.cos(2400.029251289624);
      double double3 = FastMath.abs((-286.0));
      long long0 = FastMath.min(0L, 4503599627370495L);
      float float0 = FastMath.min((float) 4503599627370495L, (float) 2526);
      long long1 = FastMath.abs(0L);
      long long2 = FastMath.max((long) 2526, 4503599627370495L);
      double double4 = FastMath.atan2((-4.469603409122654E-6), 4503599627370495L);
      double double5 = FastMath.cos(4503599627370495L);
      float float1 = FastMath.max((float) 0L, (-153.151F));
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      double double0 = FastMath.nextAfter(983.3111894443933, 983.3111894443933);
      double double1 = FastMath.pow(0.0, 0.0);
      double double2 = FastMath.asinh(1.0);
      double double3 = FastMath.random();
      long long0 = FastMath.max(0L, 0L);
      double double4 = FastMath.atan(2120.854743679467);
      double double5 = FastMath.rint(0.0);
      double double6 = FastMath.ulp(0.8813735870195429);
      long long1 = FastMath.round((-77.1198054));
      int int0 = FastMath.max(2347, 2347);
      double double7 = FastMath.sqrt(403.2769573);
      int int1 = FastMath.min(2347, 2827);
      double double8 = FastMath.abs(5.041915256481364);
      float float0 = FastMath.min(0.0F, 0.0F);
      double double9 = FastMath.asinh(0.0);
      double double10 = FastMath.nextAfter(1.0, 2347);
      double double11 = FastMath.acosh(0.07073719799518585);
      double double12 = FastMath.log10(0.0);
      float float1 = FastMath.abs(0.0F);
      double double13 = FastMath.toRadians((-1804.0363039582462));
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      double double0 = FastMath.log10(1.0);
      double double1 = FastMath.toDegrees(1128.018);
      double double2 = FastMath.sinh(1.0);
      double double3 = FastMath.acos(1.0);
      double double4 = FastMath.toRadians(64630.6706147881);
      double double5 = FastMath.log(1128.018);
      double double6 = FastMath.acosh(6.951502372232782E-7);
      double double7 = FastMath.cosh(1.0);
      double double8 = FastMath.sqrt(7.028217389377494);
      double double9 = FastMath.pow(247.825646308, 1.0);
      float float0 = FastMath.abs((-70.4F));
      double double10 = FastMath.exp(6.951502372232782E-7);
      double double11 = FastMath.cbrt(1128.018);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      double double0 = FastMath.ulp(0.0);
      double double1 = FastMath.acosh(4.9E-324);
      double double2 = FastMath.cbrt(0.0);
      double double3 = FastMath.sqrt(0.0);
      double double4 = FastMath.abs(4.9E-324);
      double double5 = FastMath.random();
      long long0 = FastMath.abs((-2575L));
      double double6 = FastMath.sin(2.0);
      double double7 = FastMath.exp(0.0);
      double double8 = FastMath.tanh(0.0);
      double double9 = FastMath.atan2(1.0, 33.42730260895907);
      double double10 = FastMath.nextAfter(0.0, 0.0);
      Random.setNextRandom((-260));
      double double11 = FastMath.nextAfter(Double.NaN, (-1374.0));
      double double12 = FastMath.floor(2.0);
      long long1 = FastMath.abs((long) (-260));
      double double13 = FastMath.acos(33.42730260895907);
      float float0 = FastMath.abs((float) 2575L);
      float float1 = FastMath.abs((float) (-2575L));
      double double14 = FastMath.pow(260L, 2.0);
      Random.setNextRandom((-2046));
      double double15 = FastMath.cos((-1.0));
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      double double0 = FastMath.toDegrees(276.79171854015);
      int int0 = FastMath.round(0.0F);
      double double1 = FastMath.exp(15858.997276523574);
      double double2 = FastMath.nextUp(0.1538461446762085);
      long long0 = FastMath.abs((long) 0);
      double double3 = FastMath.acosh((-1035.135499916225));
      double double4 = FastMath.max((-142.7133353), (-1035.135499916225));
      double double5 = FastMath.nextUp(Double.NaN);
      double double6 = FastMath.cosh(1.560070049119026);
      double double7 = FastMath.rint(4960.4);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      double double0 = FastMath.exp((-214.85953));
      double double1 = FastMath.sqrt((-214.85953));
      double double2 = FastMath.acosh(4.871825639271388E-94);
      double double3 = FastMath.random();
      double double4 = FastMath.toDegrees(3.171357693770103);
      double double5 = FastMath.signum((-2948.1695668));
      double double6 = FastMath.toDegrees((-1434.6993708));
      double double7 = FastMath.abs(3868.40692);
      long long0 = FastMath.abs(2155L);
      long long1 = FastMath.min(9218868437227405312L, 1495L);
      double double8 = FastMath.pow(0.0, 1.8508157176809257);
      double double9 = FastMath.exp(3868.40692);
      double double10 = FastMath.nextAfter((-1.0), 3236.77);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      double double0 = FastMath.cosh((-900.6928784832448));
      int int0 = FastMath.max(16, 514816443);
      long long0 = FastMath.max((-3716L), (long) 514816443);
      double double1 = FastMath.pow(0.0, (-900.6928784832448));
      double double2 = FastMath.asin((-2379.01635));
      double double3 = FastMath.nextUp(0.0);
      double double4 = FastMath.asin((-2379.01635));
      double double5 = FastMath.nextUp((-1671.18352449945));
      float float0 = FastMath.min((-133.63477F), (float) 16);
      double double6 = FastMath.nextUp((-311.46978664));
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      double double0 = FastMath.sqrt(0.0);
      int int0 = FastMath.round(0.0F);
      double double1 = FastMath.min(5161.540315910186, (-811.633680959831));
      double double2 = FastMath.atanh((-2157.29));
      double double3 = FastMath.cosh(5161.540315910186);
      double double4 = FastMath.atan(0.0);
      double double5 = FastMath.expm1((-2157.29));
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      double double0 = FastMath.random();
      int int0 = FastMath.min(0, 1);
      int int1 = FastMath.round((float) 0);
      int int2 = FastMath.round(705.0F);
      double double1 = FastMath.signum(0);
      double double2 = FastMath.log(0.0);
      double double3 = FastMath.acosh(0);
      double double4 = FastMath.cbrt(2.6365310530323782E-6);
      double double5 = FastMath.expm1(0.013814790298651337);
      double double6 = FastMath.random();
      double double7 = FastMath.asinh(3406.23);
      float float0 = FastMath.min((-4624.1597F), (float) 1);
      double double8 = FastMath.exp(1.5830993332061267E-10);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      float float0 = FastMath.min(Float.NaN, 0.0F);
      double double0 = FastMath.tan((-0.16666666666666666));
      double double1 = FastMath.ulp(0.0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      double double0 = FastMath.abs((-2171.0));
      double double1 = FastMath.log1p((-8.0E298));
      double double2 = FastMath.max(2.563009154379015E-7, (-8.0E298));
      float float0 = FastMath.max(0.0F, 2215.11F);
      double double3 = FastMath.pow(0.9305076599121094, 5.261908426442558E-7);
      double double4 = FastMath.sinh(5.261908426442558E-7);
      float float1 = FastMath.abs(2215.11F);
      double double5 = FastMath.expm1((-1.0));
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      long long0 = FastMath.min(0L, 0L);
      double double0 = FastMath.ulp((-73.4358135938565));
      double double1 = FastMath.sinh(0L);
      double double2 = FastMath.signum(0L);
      double double3 = FastMath.random();
      double double4 = FastMath.ulp((-73.4358135938565));
      double double5 = FastMath.toRadians(14.101419947171719);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      double double0 = FastMath.abs((-2550.953853591696));
      int int0 = FastMath.abs((-73));
      int int1 = FastMath.min((-73), (-1));
      double double1 = FastMath.acosh((-2550.953853591696));
      float float0 = FastMath.abs((float) (-1));
      double double2 = FastMath.cos(425.3163468929548);
      float float1 = FastMath.abs((-4329.887F));
      double double3 = FastMath.asinh(425.3163468929548);
      int int2 = FastMath.abs((-73));
      double double4 = FastMath.pow((-200.0), (-4329.887F));
      double double5 = FastMath.acos(1.074682223392077);
      long long0 = FastMath.max((long) (-73), 0L);
      int int3 = FastMath.round((float) (-73));
      double double6 = FastMath.cos(1.0F);
      double double7 = FastMath.random();
      double double8 = FastMath.toRadians((-2518.939492));
      double double9 = FastMath.atan2(1.074682223392077, 0.0);
      double double10 = FastMath.ceil((-1276.3573798811556));
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      double double0 = FastMath.sin((-4.469603409122654E-6));
      long long0 = FastMath.abs((-3209L));
      float float0 = FastMath.max(1774.811F, 0.0F);
      double double1 = FastMath.toRadians(1774.811F);
      double double2 = FastMath.exp(1.0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      double double0 = FastMath.abs(3.171357693770103);
      long long0 = FastMath.min(4398046511103L, 4398046511103L);
      double double1 = FastMath.cos(1187.70449125);
      double double2 = FastMath.nextUp((-3647.2));
      float float0 = FastMath.min(188.63F, 994.306F);
      float float1 = FastMath.max((-1.0F), 0.0F);
      double double3 = FastMath.pow(282.552037928, (-3647.1999999999994));
      double double4 = FastMath.cosh(528.937799912038);
      double double5 = FastMath.abs(0.1538461446762085);
      long long1 = FastMath.min(4398046511103L, 4398046511103L);
      double double6 = FastMath.acos((-1.0F));
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      double double0 = FastMath.expm1((-0.33333333333333287));
      int int0 = FastMath.round(161.16582F);
      int int1 = FastMath.round((float) 161);
      double double1 = FastMath.random();
      double double2 = FastMath.acos(534.193098180117);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      double double0 = FastMath.atanh(1.074682223392077);
      double double1 = FastMath.sinh(0.125);
      double double2 = FastMath.sinh(0.125);
      double double3 = FastMath.exp(Double.NaN);
      double double4 = FastMath.sqrt(0.12532577524111546);
      int int0 = FastMath.max((-784), (-784));
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      double double0 = FastMath.random();
      long long0 = FastMath.abs(0L);
      double double1 = FastMath.max((double) 0L, (-1208.7185309397));
      float float0 = FastMath.min(1.0F, 3686.85F);
      double double2 = FastMath.ceil(16.0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      double double0 = FastMath.exp(302.2704861842827);
      double double1 = FastMath.asin(1.88106668591214E131);
      double double2 = FastMath.toDegrees(0.19454771280288696);
      double double3 = FastMath.random();
      double double4 = FastMath.atan2(302.2704861842827, 11.146762857528675);
      double double5 = FastMath.asin(1.88106668591214E131);
      double double6 = FastMath.ulp(6.951502372232782E-7);
      double double7 = FastMath.log(789.7);
      double double8 = FastMath.nextAfter((-25.02106692346), (-4.469603409122654E-6));
      double double9 = FastMath.asinh(0.0);
      double double10 = FastMath.log10(302.2704861842827);
      double double11 = FastMath.ceil(0.0);
      double double12 = FastMath.atanh((-25.02106692346));
      double double13 = FastMath.sinh(0.0);
      long long0 = FastMath.min(1842L, 1842L);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      double double0 = FastMath.acosh((-2447.562599153399));
      int int0 = FastMath.max(0, (-699));
      double double1 = FastMath.cos(Double.NaN);
      int int1 = FastMath.abs(0);
      double double2 = FastMath.log10(1.0320850239843855);
      double double3 = FastMath.log10((-699));
      double double4 = FastMath.cosh((-0.05417713522911072));
      double double5 = FastMath.nextUp((-1006.8));
      float float0 = FastMath.max((float) 0, (float) 0);
      double double6 = FastMath.sqrt(Double.NaN);
      long long0 = FastMath.round(1.0014679399916);
      double double7 = FastMath.tanh((-5127.6));
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      double double0 = FastMath.cosh(1.0);
      long long0 = FastMath.round(1.139493927324549);
      double double1 = FastMath.expm1(1.139493927324549);
      double double2 = FastMath.tanh(1L);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      double double0 = FastMath.asinh(0.13333332538604736);
      long long0 = FastMath.round(0.1329413911762254);
      double double1 = FastMath.asin((-1774.89942123));
      long long1 = FastMath.min(719L, 0L);
      double double2 = FastMath.sin(1.2331016983979697);
      double double3 = FastMath.sinh((-1486.4));
      int int0 = FastMath.max(10, (-4965));
      double double4 = FastMath.atan(0.13333332538604736);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      double double0 = FastMath.nextAfter(0.0, 0.0);
      long long0 = FastMath.round((-566.9207));
      double double1 = FastMath.sqrt(4.9E-324);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      float float0 = FastMath.max((-1403.0F), (-1403.0F));
      float float1 = FastMath.max((-1403.0F), (-1403.0F));
      double double0 = FastMath.max((double) (-1403.0F), (-3970.1539722783327));
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      double double0 = FastMath.signum((-4.469603409122654E-6));
      double double1 = FastMath.log(1.0320850239843855);
      double double2 = FastMath.random();
      double double3 = FastMath.sqrt((-4.469603409122654E-6));
      double double4 = FastMath.cos(0.031581051247469474);
      double double5 = FastMath.sinh(5.140127377170679);
      double double6 = FastMath.expm1(2915.390671461838);
      double double7 = FastMath.toRadians(0.9995013600468641);
      double double8 = FastMath.cos((-3545.89));
      float float0 = FastMath.min(0.0F, 1265.5245F);
      double double9 = FastMath.acos(0.017444589610979083);
      int int0 = FastMath.max(2621, 2621);
      double double10 = FastMath.sinh(0.0);
      double double11 = FastMath.atanh((-1.0));
      double double12 = FastMath.floor(Double.NaN);
      double double13 = FastMath.log10((-3545.89));
      double double14 = FastMath.rint(Double.NaN);
      double double15 = FastMath.pow(0.017444589610979083, 2603.2699465);
      int int1 = FastMath.max((-480), 1024);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      double double0 = FastMath.ulp(0.19454771280288696);
      int int0 = FastMath.min(1176, 1176);
      double double1 = FastMath.atanh(0.19454771280288696);
      double double2 = FastMath.sqrt(2.7755575615628914E-17);
      double double3 = FastMath.random();
      double double4 = FastMath.floor(2.7755575615628914E-17);
      double double5 = FastMath.acos((-639.8365445764));
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      double double0 = FastMath.sinh(1.8508157176809257);
      double double1 = FastMath.cosh((-2128.0));
      double double2 = FastMath.asinh((-0.05417713522911072));
      double double3 = FastMath.ulp((-2128.0));
      double double4 = FastMath.log10((-2128.0));
      int int0 = FastMath.round(3102.2366F);
      double double5 = FastMath.asinh((-247.85761262234868));
      double double6 = FastMath.exp((-3379.24675));
      double double7 = FastMath.cbrt(14.101419947171719);
      double double8 = FastMath.expm1(2154.6304764565766);
      double double9 = FastMath.acos(1.074682223392077);
      double double10 = FastMath.rint(Double.POSITIVE_INFINITY);
      double double11 = FastMath.atanh((-2128.0));
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      double double0 = FastMath.asin(450.09);
      long long0 = FastMath.round(Double.NaN);
      double double1 = FastMath.toRadians(3149.8345908266747);
      double double2 = FastMath.random();
      double double3 = FastMath.toDegrees((-431.9091063));
      double double4 = FastMath.log1p(914.2513);
      double double5 = FastMath.toRadians(0L);
      double double6 = FastMath.expm1(0.0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      double double0 = FastMath.asin(2806.130759);
      long long0 = FastMath.min(3162L, 3162L);
      double double1 = FastMath.expm1(0.030589580535888672);
      double double2 = FastMath.atan2(1.2331016983979697, 5.140127377170679);
      double double3 = FastMath.toDegrees(0.030589580535888672);
      double double4 = FastMath.sinh(3162L);
      double double5 = FastMath.asinh(3.0095696738628313);
      double double6 = FastMath.log10(3162L);
      double double7 = FastMath.atanh(0.008333333333333333);
      double double8 = FastMath.toDegrees(6.951502372232782E-7);
      int int0 = FastMath.min(1, 212);
      double double9 = FastMath.sin(1.8214683196993307);
      double double10 = FastMath.nextUp(1.3526894423597173E-6);
      long long1 = FastMath.round((-2664.087));
      long long2 = FastMath.min(0L, (-1899L));
      float float0 = FastMath.abs((float) 0L);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      double double0 = FastMath.floor(1.0);
      double double1 = FastMath.sinh(1.0);
      float float0 = FastMath.min(0.0F, (-1.0F));
      double double2 = FastMath.asin(1.0);
      int int0 = FastMath.min(18, 18);
      double double3 = FastMath.acos(0.0F);
      double double4 = FastMath.signum(2115.438562084907);
      long long0 = FastMath.abs((-3250L));
      double double5 = FastMath.asinh((-1.0F));
      double double6 = FastMath.toDegrees(1.8358548930975745E-7);
      double double7 = FastMath.cosh(1.5707963267948966);
      double double8 = FastMath.nextUp((-0.8813735870195429));
      double double9 = FastMath.cos(596.41045511);
      int int1 = FastMath.round((-1.0F));
      double double10 = FastMath.asinh(1.1752011936438014);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      double double0 = FastMath.exp((-719.0));
      double double1 = FastMath.tan(5.5241760615E-313);
      float float0 = FastMath.min(0.0F, (-1707.1908F));
      double double2 = FastMath.atan(0.036);
      float float1 = FastMath.abs(0.0F);
      double double3 = FastMath.max(1.197421629234348, (double) (-1707.1908F));
      double double4 = FastMath.asinh(5.5241760615E-313);
      float float2 = FastMath.min(113.23607F, 0.0F);
      double double5 = FastMath.min((-2956.0948947), 0.0);
      float float3 = FastMath.abs(113.23607F);
      double double6 = FastMath.log((-2956.0948947));
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      double double0 = FastMath.sin(1362.058);
      double double1 = FastMath.atan2((-0.9842732382932754), (-0.9842732382932754));
      double double2 = FastMath.asinh(0.07073719799518585);
      double double3 = FastMath.random();
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      double double0 = FastMath.max(122.6214732, 122.6214732);
      double double1 = FastMath.asin(0.1111111111111111);
      int int0 = FastMath.min((-695), (-695));
      double double2 = FastMath.atanh(0.11134101434096388);
      double double3 = FastMath.log(0.1111111111111111);
      double double4 = FastMath.cbrt(1032.4775486838);
      double double5 = FastMath.rint(1636.3);
      float float0 = FastMath.min(0.0F, (float) (-695));
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      double double0 = FastMath.log1p(3.4620039155736807E-7);
      double double1 = FastMath.nextUp(3.4620033163002633E-7);
      double double2 = FastMath.ulp(3.410491133089812E-7);
      double double3 = FastMath.sqrt(1.0);
      double double4 = FastMath.pow(1.2958646899018938E-9, (-900.326806113));
      double double5 = FastMath.asinh(834.24073315);
      double double6 = FastMath.cbrt(5.293955920339377E-23);
      double double7 = FastMath.tanh(3.4620039155736807E-7);
      double double8 = FastMath.log1p(3.754857331201056E-8);
      double double9 = FastMath.toRadians(0.9315964599440725);
      double double10 = FastMath.nextAfter(1.0, 3.462003316300264E-7);
      double double11 = FastMath.min(3.0, 0.9315964599440725);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      double double0 = FastMath.floor((-1403.1));
      float float0 = FastMath.max((-1.0F), (-1.0F));
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      double double0 = FastMath.acosh((-1177.6961843885));
      double double1 = FastMath.atan2(0.0, Double.NaN);
      double double2 = FastMath.nextUp(1.0);
      double double3 = FastMath.sqrt(1.0);
      double double4 = FastMath.log(0.8775825500488281);
      double double5 = FastMath.acosh(1.0);
      double double6 = FastMath.log1p(1470.524371);
      float float0 = FastMath.abs(1892.0F);
      long long0 = FastMath.min((-2123L), (-2123L));
      double double7 = FastMath.toDegrees(0.0);
      double double8 = FastMath.exp((-2123L));
      long long1 = FastMath.max((-3055L), 0L);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      double double0 = FastMath.acosh(2078.39);
      double double1 = FastMath.sinh(8.332495957196999);
      double double2 = FastMath.max(1272.87851, 1272.87851);
      double double3 = FastMath.acosh((-3192.9479216865));
      double double4 = FastMath.signum(1272.87851);
      double double5 = FastMath.sinh(2078.38975942916);
      float float0 = FastMath.min((-2691.308F), 70.8F);
      double double6 = FastMath.sin(0.0);
      long long0 = FastMath.abs(0L);
      double double7 = FastMath.acos(1341.7);
      double double8 = FastMath.min(Double.NaN, Double.NaN);
      double double9 = FastMath.ceil((-3192.9479216865));
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      double double0 = FastMath.log1p(248.56480672);
      double double1 = FastMath.signum(248.56480672);
      double double2 = FastMath.sin(248.56480672);
      double double3 = FastMath.expm1((-1550.25));
      double double4 = FastMath.floor(5.51971862783607);
      double double5 = FastMath.cbrt(1.0);
      double double6 = FastMath.tanh(273.39);
      double double7 = FastMath.tanh((-4.469603409122654E-6));
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      double double0 = FastMath.cos(1851.95348);
      double double1 = FastMath.cbrt(1851.95348);
      double double2 = FastMath.cbrt((-0.01538868374870955));
      double double3 = FastMath.cosh((-2549.614299267263));
      double double4 = FastMath.ulp((-2549.614299267263));
      float float0 = FastMath.abs(2210.1F);
      long long0 = FastMath.round((-1.0));
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      double double0 = FastMath.tan(3.171357693770103);
      double double1 = FastMath.min(1017.9, 3899.287835385);
      double double2 = FastMath.nextUp(1017.9);
      double double3 = FastMath.log10(0.029773833484543023);
      double double4 = FastMath.atan((-1.5261652448292389));
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      double double0 = FastMath.signum((-1444.6944931073));
      double double1 = FastMath.asinh((-5868.292965116));
      long long0 = FastMath.abs((-5034868814120038111L));
      double double2 = FastMath.floor(1663.836);
      double double3 = FastMath.floor(5034868814120038111L);
      double double4 = FastMath.ulp((-18.457971236441537));
      double double5 = FastMath.asinh((-18.457971236441537));
      double double6 = FastMath.cbrt(5.0348688141200384E18);
      float float0 = FastMath.abs(0.0F);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      double double0 = FastMath.expm1(0.19454771280288696);
      double double1 = FastMath.cbrt(0.19454771280288696);
      double double2 = FastMath.max(1.2393345855018391E-8, 1.2393345855018391E-8);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      double double0 = FastMath.atan(1.0);
      double double1 = FastMath.toRadians(0.7853981633974483);
      long long0 = FastMath.min(0L, 151L);
      double double2 = FastMath.atanh(2.092571276372179);
      int int0 = FastMath.round(1138.5281F);
      double double3 = FastMath.pow(0.7853981633974483, Double.NaN);
      double double4 = FastMath.exp(2653.9);
      double double5 = FastMath.nextUp((-2240.781608));
      double double6 = FastMath.acos(Double.NaN);
      double double7 = FastMath.asinh((-2240.781608));
      double double8 = FastMath.signum(Double.POSITIVE_INFINITY);
      double double9 = FastMath.abs((double) 0L);
      double double10 = FastMath.sin(1.0);
      double double11 = FastMath.ulp(316.683469575786);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      double double0 = FastMath.cosh((-1921.78419));
      float float0 = FastMath.min(0.0F, 0.0F);
      double double1 = FastMath.acosh(0.0F);
      double double2 = FastMath.pow(386.94, Double.NaN);
      double double3 = FastMath.pow(Double.POSITIVE_INFINITY, 1331.525);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      long long0 = FastMath.max(1358L, 1358L);
      long long1 = FastMath.round((-8.0E298));
      float float0 = FastMath.min((float) 1358L, (-819.41486F));
      double double0 = FastMath.random();
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      long long0 = FastMath.abs((-210L));
      double double0 = FastMath.cosh((-210L));
      long long1 = FastMath.round((double) 210L);
      double double1 = FastMath.expm1(0.0);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      double double0 = FastMath.acos(621.0706317);
      double double1 = FastMath.tanh(Double.NaN);
      double double2 = FastMath.toDegrees(166.588);
      double double3 = FastMath.ulp(Double.NaN);
      double double4 = FastMath.pow(0.6409968137741089, (-4.469603409122654E-6));
      int int0 = FastMath.abs((-1));
      long long0 = FastMath.abs((long) 1);
      double double5 = FastMath.exp((-1));
      int int1 = FastMath.abs((-3781));
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      double double0 = FastMath.nextAfter(0.8775825500488281, 0.8775825500488281);
      double double1 = FastMath.exp(0.8775825500488282);
      int int0 = FastMath.abs(18);
      double double2 = FastMath.random();
      double double3 = FastMath.tan(0.0);
      double double4 = FastMath.atanh(0.7214844409909045);
      double double5 = FastMath.atan(0.3153223395347595);
      double double6 = FastMath.nextUp((-1.0));
      double double7 = FastMath.cosh(0.30545404006612575);
      double double8 = FastMath.toDegrees(0.8775825500488282);
      float float0 = FastMath.min((float) 18, (float) 18);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      float float0 = FastMath.min(Float.NaN, Float.NaN);
      double double0 = FastMath.tan((-59.36993197));
      double double1 = FastMath.rint((-59.36993197));
      double double2 = FastMath.ulp(Float.NaN);
      double double3 = FastMath.nextUp(1.0);
      double double4 = FastMath.cbrt(Float.NaN);
      int int0 = FastMath.min(3, 3);
      double double5 = FastMath.asinh((-344.501063));
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      double double0 = FastMath.atan((-148.967370527));
      long long0 = FastMath.abs(1470L);
      double double1 = FastMath.rint((-148.967370527));
      double double2 = FastMath.acosh((-149.0));
      double double3 = FastMath.pow(Double.NaN, Double.NaN);
      double double4 = FastMath.ceil((-149.0));
      int int0 = FastMath.round(0.0F);
      double double5 = FastMath.exp((-1.5640835481779978));
      double double6 = FastMath.expm1(0.0F);
      double double7 = FastMath.toDegrees(0.20927972009557588);
      double double8 = FastMath.tanh(1470L);
      double double9 = FastMath.asin(1.366701124672226);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      double double0 = FastMath.log((-684.131627));
      double double1 = FastMath.asinh((-4476.2927099));
      long long0 = FastMath.min(0L, 0L);
      int int0 = FastMath.max(1, 1);
      double double2 = FastMath.log1p(487.785288274901);
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      double double0 = FastMath.asin(0.19999954120254515);
      int int0 = FastMath.round((-519.34546F));
      double double1 = FastMath.toRadians((-545.2509));
      double double2 = FastMath.exp((-545.2509));
      double double3 = FastMath.log1p((-545.2509));
      int int1 = FastMath.min(1003734390, 107);
      int int2 = FastMath.max((-495), 15);
      float float0 = FastMath.abs((float) 1003734390);
      double double4 = FastMath.max(14.101419947171719, (double) 1.0037344E9F);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      double double0 = FastMath.toDegrees(612.5993019644);
      double double1 = FastMath.pow(35099.354535220395, (-145.6));
      double double2 = FastMath.random();
      double double3 = FastMath.log(0.39362657592563277);
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      double double0 = FastMath.tan(1.366701124672226);
      double double1 = FastMath.random();
      double double2 = FastMath.log1p(4.831452808584261);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      double double0 = FastMath.pow(5.261908426442558E-7, 1.225743062930824E-8);
      double double1 = FastMath.asinh(0.19454771280288696);
      double double2 = FastMath.log(0.19454771280288696);
      double double3 = FastMath.asin(0.19334092257398816);
      double double4 = FastMath.acosh((-1.0));
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      double double0 = FastMath.atanh((-1.0));
      double double1 = FastMath.cos(Double.NEGATIVE_INFINITY);
      double double2 = FastMath.min(0.0, Double.NaN);
      double double3 = FastMath.abs((-1009.6));
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      double double0 = FastMath.abs(1045.94607229);
      long long0 = FastMath.max(1L, 1L);
      float float0 = FastMath.max(865.1758F, (-4436.112F));
      double double1 = FastMath.nextAfter((-4436.112F), 0.9315964599440725);
      double double2 = FastMath.pow((-4436.112F), 865.1758F);
      double double3 = FastMath.abs(1045.94607229);
      long long1 = FastMath.max(1L, (-2186L));
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      double double0 = FastMath.toDegrees(3.038148934955037E-7);
      double double1 = FastMath.atanh(72.390510427);
      double double2 = FastMath.cos((-1594.30534554525));
      double double3 = FastMath.sqrt(1.7407311150508968E-5);
      double double4 = FastMath.expm1(1774.9000326617202);
      double double5 = FastMath.toRadians(1774.9000326617202);
      double double6 = FastMath.cosh(2065.812442612922);
      double double7 = FastMath.asin((-1.0));
      float float0 = FastMath.max(0.0F, 0.0F);
      double double8 = FastMath.max(1.7407311150508968E-5, 2802.9877295166975);
      double double9 = FastMath.toDegrees((-1083.5077));
      double double10 = FastMath.rint(0.0041722069879751855);
      double double11 = FastMath.nextUp(0.0);
      double double12 = FastMath.cbrt(4.9E-324);
      double double13 = FastMath.cosh(0.0);
      double double14 = FastMath.tanh(0.0);
      int int0 = FastMath.max(0, (-1));
      double double15 = FastMath.signum((-1.0));
      double double16 = FastMath.tan(0.3153223395347595);
      long long0 = FastMath.max((-1L), 3952090531849364496L);
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      double double0 = FastMath.abs(2.092571276372179);
      long long0 = FastMath.round((-2272.370855));
      double double1 = FastMath.cos((-2272.370855));
      float float0 = FastMath.abs((float) (-2272L));
      double double2 = FastMath.max((double) 2272.0F, 1.0320850239843855);
      double double3 = FastMath.pow((-0.5408353074880821), 2.092571276372179);
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      double double0 = FastMath.acos(1946.7128853);
      double double1 = FastMath.expm1(1946.7128853);
      double double2 = FastMath.toRadians(952.4);
      double double3 = FastMath.max(16.622515795993994, Double.NaN);
      double double4 = FastMath.toDegrees(16.622515795993994);
      double double5 = FastMath.max(Double.NaN, Double.NaN);
      long long0 = FastMath.min(0L, 0L);
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      double double0 = FastMath.cosh(3.4620039155736807E-7);
      double double1 = FastMath.atan(0.9315964599440725);
      double double2 = FastMath.sin(0.9315964599440725);
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      int int0 = FastMath.round((-2214.5688F));
      double double0 = FastMath.log1p((-2214.5688F));
      double double1 = FastMath.ulp((-2214.5688F));
      double double2 = FastMath.sinh((-2214.5688F));
      long long0 = FastMath.round(4.547473508864641E-13);
      int int1 = FastMath.abs((-2215));
      long long1 = FastMath.round(3880.770147);
      double double3 = FastMath.sin(1732.298720276891);
      float float0 = FastMath.max((-4792.2F), (float) (-2215));
      double double4 = FastMath.exp((-2215.0F));
      double double5 = FastMath.cosh(1732.298720276891);
      double double6 = FastMath.tanh((-2215));
      double double7 = FastMath.atan2((-646.73676346), Double.POSITIVE_INFINITY);
      double double8 = FastMath.nextUp((-2078.0222264749));
      double double9 = FastMath.min((double) 0L, (-534.32687804058));
      double double10 = FastMath.cos(0.0);
      double double11 = FastMath.log10(1.0);
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      double double0 = FastMath.random();
      double double1 = FastMath.toRadians((-4966.0));
      float float0 = FastMath.max(0.0F, 0.0F);
      double double2 = FastMath.expm1(0.0F);
      double double3 = FastMath.acosh(2.319235767811865);
      double double4 = FastMath.asin(4.503599627370496E15);
      double double5 = FastMath.log10(2.639144044101463E-7);
      double double6 = FastMath.sqrt((-1204.3));
      double double7 = FastMath.atanh(0.0);
      int int0 = FastMath.max((-1), (-1));
      double double8 = FastMath.atan2(0.0, 2723.4818);
      double double9 = FastMath.asinh((-4966.0));
      double double10 = FastMath.signum((-6.57853690540284));
      double double11 = FastMath.cos(2.6365310530323782E-6);
      double double12 = FastMath.atan(Double.NaN);
      double double13 = FastMath.nextUp(69.40271506593);
      double double14 = FastMath.pow((-86.6730506540384), 2869.34867794);
      double double15 = FastMath.cosh(1680.482181706);
      double double16 = FastMath.atan2(Double.POSITIVE_INFINITY, (-4966.0));
      double double17 = FastMath.floor(0.0);
      double double18 = FastMath.sqrt((-1000.4418403));
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      double double0 = FastMath.sinh((-1983.100593503));
      double double1 = FastMath.random();
      double double2 = FastMath.tan(Double.NEGATIVE_INFINITY);
      double double3 = FastMath.ceil(0.0);
      double double4 = FastMath.rint(3672.90645);
      double double5 = FastMath.cbrt(3673.0);
      double double6 = FastMath.atan(3673.0);
      int int0 = FastMath.abs(3018);
      double double7 = FastMath.toRadians(1.5705240697910055);
      float float0 = FastMath.max(0.0F, (float) 3018);
      int int1 = FastMath.round((-1.0F));
      double double8 = FastMath.asin(0.0);
      double double9 = FastMath.sqrt((-1.0F));
      double double10 = FastMath.min((double) 0.0F, 0.0);
      double double11 = FastMath.acos(295.439115651099);
      double double12 = FastMath.sinh((-1.0F));
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      double double0 = FastMath.floor(54.553577686174);
      double double1 = FastMath.ulp(8.0E298);
      float float0 = FastMath.max(0.0F, 0.0F);
      double double2 = FastMath.random();
      double double3 = FastMath.sin(9.293855677986144E282);
      double double4 = FastMath.atan2(9.293855677986144E282, 0.1818181574344635);
      long long0 = FastMath.round(1.3526894423597173E-6);
      long long1 = FastMath.max(0L, 0L);
      double double5 = FastMath.log1p(0.0F);
      double double6 = FastMath.log(8.0E298);
      double double7 = FastMath.atanh(0.4311765432357788);
      double double8 = FastMath.acos(0.4311765432357788);
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      double double0 = FastMath.tanh(3680.43649217503);
      double double1 = FastMath.toRadians(0.0);
      double double2 = FastMath.random();
      double double3 = FastMath.cbrt(1.0);
      double double4 = FastMath.cos((-329.75861));
      double double5 = FastMath.sinh(762.3342172364);
      double double6 = FastMath.tanh(0.0);
      double double7 = FastMath.sqrt(503.5512072767378);
      int int0 = FastMath.round(1468.0F);
      double double8 = FastMath.cos(0.0);
      double double9 = FastMath.atanh(Double.POSITIVE_INFINITY);
      double double10 = FastMath.toDegrees(2587.35944877);
      double double11 = FastMath.atan2(1408.25000693, 22.43994668613849);
      double double12 = FastMath.ulp(0.0);
      double double13 = FastMath.toRadians(762.3342172364);
      int int1 = FastMath.min(1468, 2462);
      double double14 = FastMath.log(1.0);
      double double15 = FastMath.atan(1408.25000693);
      double double16 = FastMath.log1p((-8.0E298));
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      double double0 = FastMath.acosh(0.375);
      double double1 = FastMath.exp((-1326.6354572608));
      double double2 = FastMath.ceil(1.125);
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      long long0 = FastMath.max((-906L), (-1L));
      double double0 = FastMath.cos(0.0);
      double double1 = FastMath.log10(1.3526894423597173E-6);
      int int0 = FastMath.abs((-5507));
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      long long0 = FastMath.min(2596L, 0L);
      double double0 = FastMath.asin(0L);
      double double1 = FastMath.max(1.0, 0.5463024898437905);
      double double2 = FastMath.abs(0.0);
      long long1 = FastMath.round(9.219544613762692E-9);
      double double3 = FastMath.sinh(0.0);
      double double4 = FastMath.log10((-1306.1383));
      int int0 = FastMath.max((-1), (-1));
      double double5 = FastMath.atan2((-1), (-1));
      double double6 = FastMath.asinh((-98.0694495114104));
      double double7 = FastMath.sinh(0.5463024898437905);
      double double8 = FastMath.log1p((-2359.5391838877395));
      double double9 = FastMath.log10(689.2744976913);
      float float0 = FastMath.min(1955.9908F, 0.0F);
      double double10 = FastMath.abs((-2359.5391838877395));
      long long2 = FastMath.round((double) 2596L);
      double double11 = FastMath.floor((-1));
      float float1 = FastMath.abs(4589.824F);
      float float2 = FastMath.max(0.0F, 1219.6898F);
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      int int0 = FastMath.min((-1585), 12);
      double double0 = FastMath.random();
      double double1 = FastMath.nextAfter((-1585), 266.49);
      int int1 = FastMath.round(2227.0703F);
      int int2 = FastMath.abs(12);
      double double2 = FastMath.tanh(1.8358548930975745E-7);
      double double3 = FastMath.ceil((-0.05417713522911072));
      double double4 = FastMath.signum((-2068.32548144818));
      long long0 = FastMath.abs(3658L);
      double double5 = FastMath.signum(Double.NaN);
      double double6 = FastMath.nextUp((-0.05417713522911072));
      double double7 = FastMath.atan((-0.05417713522911072));
      int int3 = FastMath.min((-1585), 2227);
      double double8 = FastMath.exp(3825.0);
      double double9 = FastMath.sin(1.8358548930975745E-7);
  }
}
