/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 29 04:16:50 GMT 2020
 */

package org.apache.commons.math.util;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.math.util.FastMath;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FastMath_ESTest extends FastMath_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      double double0 = FastMath.toDegrees(1.0);
      double double1 = FastMath.log10((-2565.004915741277));
      long long0 = FastMath.min((-104L), 1967L);
      double double2 = FastMath.max(Double.NaN, (double) 1967L);
      double double3 = FastMath.log10(1967L);
      long long1 = FastMath.round(565.20657976277);
      double double4 = FastMath.atan(-0.0);
      double double5 = FastMath.cbrt(Double.NaN);
      double double6 = FastMath.expm1((-104L));
      float float0 = FastMath.max((float) (-104L), (-1459.21F));
      double double7 = FastMath.cosh((-2565.004915741277));
      double double8 = FastMath.cos(1068.73015);
      double double9 = FastMath.toDegrees(565L);
      double double10 = FastMath.floor(0.25);
      double double11 = FastMath.sqrt(1.0);
      long long2 = FastMath.round((-1.0));
      double double12 = FastMath.toRadians(0.25);
      double double13 = FastMath.cosh((-1.0));
      double double14 = FastMath.random();
      double double15 = FastMath.toRadians(57.29577951308232);
      double double16 = FastMath.asin(4907.5706734);
      double double17 = FastMath.acos(0.0875862700108075);
      double double18 = FastMath.random();
      long long3 = FastMath.abs(565L);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      long long0 = FastMath.round(741.275);
      double double0 = FastMath.pow(1687.5845683359, 741.275);
      long long1 = FastMath.abs(741L);
      double double1 = FastMath.sinh(1687.5845683359);
      double double2 = FastMath.cos(1.0);
      double double3 = FastMath.pow(0.5403023058681398, 741L);
      double double4 = FastMath.sinh(7.653927767821281E-199);
      double double5 = FastMath.log(741L);
      double double6 = FastMath.min((double) 741L, 741.275);
      int int0 = FastMath.abs((-1169));
      double double7 = FastMath.asin(741L);
      double double8 = FastMath.cos((-4129.881775));
      int int1 = FastMath.round(589.3003F);
      double double9 = FastMath.ceil(741L);
      double double10 = FastMath.acos(Double.NaN);
      double double11 = FastMath.nextUp(0.7316888570785522);
      double double12 = FastMath.toRadians((-1169));
      double double13 = FastMath.log1p(2.319235767811865);
      double double14 = FastMath.toDegrees(0.11764700710773468);
      double double15 = FastMath.sinh(2568.13);
      double double16 = FastMath.acosh(1.139493927324549);
      long long2 = FastMath.round(5042.714091);
      double double17 = FastMath.cosh(1.0);
      double double18 = FastMath.max(0.0, (-606.99102));
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      double double0 = FastMath.asinh(0.7316888570785522);
      double double1 = FastMath.atan(0.6784338513015187);
      double double2 = FastMath.toDegrees((-2382.6916856671));
      double double3 = FastMath.toRadians(0.5961049338962274);
      double double4 = FastMath.atanh((-2382.6916856671));
      double double5 = FastMath.asin(Double.NaN);
      float float0 = FastMath.min(0.0F, 0.0F);
      double double6 = FastMath.pow(0.7316888570785522, 2283.166);
      double double7 = FastMath.signum((-3.76186818));
      long long0 = FastMath.round(2283.166);
      float float1 = FastMath.max(0.0F, 0.0F);
      double double8 = FastMath.cosh(0.7316888570785522);
      double double9 = FastMath.acosh(2022.26084075216);
      double double10 = FastMath.ceil((-1507.871));
      double double11 = FastMath.toRadians(0.5463024898437905);
      int int0 = FastMath.round((float) 2283L);
      double double12 = FastMath.min((double) 2283L, 1.197421629234348);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      double double0 = FastMath.log10(0.0);
      double double1 = FastMath.abs(Double.NaN);
      double double2 = FastMath.floor(Double.NaN);
      double double3 = FastMath.atan2(0.0, 2.319235767811865);
      double double4 = FastMath.tan(0.5000000000042687);
      double double5 = FastMath.max(1.8508157176809257, 0.5000000000042687);
      double double6 = FastMath.toRadians(0.5463024898437905);
      long long0 = FastMath.abs(0L);
      double double7 = FastMath.nextUp(2098.51675);
      double double8 = FastMath.signum((-3232.99797));
      double double9 = FastMath.log(2219.0010125);
      double double10 = FastMath.log10((-1.0));
      int int0 = FastMath.abs((-1104));
      double double11 = FastMath.atan2(1.0, 1834.61574277);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      double double0 = FastMath.max(431.838928, 1.0);
      double double1 = FastMath.acos((-0.09088450866185192));
      double double2 = FastMath.sqrt(431.838928);
      double double3 = FastMath.log(1.2246467991473532E-16);
      double double4 = FastMath.toDegrees((-1661.82288));
      double double5 = FastMath.cos(20.78073453947189);
      double double6 = FastMath.abs(0.25534192122103627);
      double double7 = FastMath.nextUp((-0.09088450866185192));
      double double8 = FastMath.expm1((-2582.78073923158));
      double double9 = FastMath.log10((-0.09088450866185191));
      double double10 = FastMath.log10((-0.09088450866185192));
      int int0 = FastMath.abs(1);
      double double11 = FastMath.asin((-0.35263199258654326));
      double double12 = FastMath.asinh(20.78073453947189);
      int int1 = FastMath.max(12, (-39));
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      double double0 = FastMath.min((-8.0E298), (-8.0E298));
      double double1 = FastMath.toRadians(8.0E298);
      int int0 = FastMath.abs((-30));
      double double2 = FastMath.sinh((-8.0E298));
      double double3 = FastMath.sqrt((-8.0E298));
      double double4 = FastMath.atan2(8.0E298, Double.NaN);
      double double5 = FastMath.atan(0.39362657592563277);
      double double6 = FastMath.atan((-8.0E298));
      double double7 = FastMath.random();
      double double8 = FastMath.cos(72.5138419);
      double double9 = FastMath.max(1.5, Double.NaN);
      double double10 = FastMath.rint((-2025.3));
      double double11 = FastMath.min(1.2331016983979697, (-2305.098));
      double double12 = FastMath.acos(3.4620039155736807E-7);
      float float0 = FastMath.max(1.0F, 0.0F);
      double double13 = FastMath.random();
      double double14 = FastMath.cbrt((-0.9671032500467843));
      double double15 = FastMath.max((-622.01127631), (-1691.5223042));
      double double16 = FastMath.expm1((-0.988911925699787));
      double double17 = FastMath.log10(1.570795980594505);
      int int1 = FastMath.abs((-30));
      double double18 = FastMath.expm1((-1245.758578));
      double double19 = FastMath.min(360.0, (-2305.098));
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      double double0 = FastMath.atan2(0.625, 5.261908426442558E-7);
      double double1 = FastMath.asinh(5.261908426442558E-7);
      int int0 = FastMath.max(13, 13);
      double double2 = FastMath.rint(0.0);
      double double3 = FastMath.asinh((-3226.916154));
      double double4 = FastMath.nextAfter((-2683.150464841969), 1.5707954848895485);
      double double5 = FastMath.floor(0.0);
      long long0 = FastMath.round(5.261908426442314E-7);
      double double6 = FastMath.nextAfter((-2683.150464841969), 0.625);
      double double7 = FastMath.nextUp((-2683.150464841969));
      double double8 = FastMath.sinh(0.0);
      double double9 = FastMath.nextUp((-1.0));
      double double10 = FastMath.log((-18.457971236441537));
      double double11 = FastMath.max((-2683.150464841969), (-1870.2320801312571));
      long long1 = FastMath.min(0L, (long) 13);
      double double12 = FastMath.tan((-1870.2320801312571));
      double double13 = FastMath.expm1(0.0);
      double double14 = FastMath.pow(0.0, (-2683.1504648419686));
      double double15 = FastMath.acos(0.0);
      long long2 = FastMath.min((long) 13, (-1248L));
      float float0 = FastMath.abs((float) (-1248L));
      long long3 = FastMath.max((-1248L), 3472L);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      double double0 = FastMath.signum(1.560070049119026);
      double double1 = FastMath.random();
      double double2 = FastMath.atan2(1.0, 1.560070049119026);
      int int0 = FastMath.round(0.0F);
      double double3 = FastMath.asinh(0.5700200632774924);
      double double4 = FastMath.floor(3706.0);
      double double5 = FastMath.random();
      double double6 = FastMath.log1p(6.951502372232782E-7);
      double double7 = FastMath.ulp(3706.0);
      float float0 = FastMath.max((-5095.0F), (-1109.0F));
      double double8 = FastMath.sin(3706.0);
      double double9 = FastMath.max(6.951499956064641E-7, (-0.05417713522911072));
      double double10 = FastMath.cosh(4.547473508864641E-13);
      double double11 = FastMath.atanh(76.61);
      double double12 = FastMath.pow(0, 0.9315964599440725);
      long long0 = FastMath.max((long) 0, 3080L);
      double double13 = FastMath.sin(0.5429479359019502);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      double double0 = FastMath.pow((-672.59909), 1.0);
      double double1 = FastMath.asin((-672.59909));
      float float0 = FastMath.min(1534.249F, 1534.249F);
      double double2 = FastMath.rint(1115.7);
      int int0 = FastMath.abs((-3000));
      double double3 = FastMath.log1p((-672.59909));
      double double4 = FastMath.asinh(5.261908426442558E-7);
      double double5 = FastMath.floor(1028.4090172027);
      float float1 = FastMath.abs((float) (-3000));
      double double6 = FastMath.rint(9.220590270857665E-9);
      int int1 = FastMath.abs(4504);
      double double7 = FastMath.sin(0.0);
      double double8 = FastMath.atan(0.0);
      double double9 = FastMath.exp((-3731.033414847));
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      double double0 = FastMath.signum(0.39362657592563277);
      double double1 = FastMath.atan(1.8014398509481984E16);
      double double2 = FastMath.random();
      double double3 = FastMath.min((-1.0), 1.0);
      float float0 = FastMath.abs((-109.1F));
      double double4 = FastMath.exp(1.5707963267948966);
      double double5 = FastMath.cos(162.375970225302);
      double double6 = FastMath.asinh(0.5513224835490351);
      double double7 = FastMath.cos(3.038148934955037E-7);
      double double8 = FastMath.atan2(0.5513224835490351, 1.7029898543501842E-8);
      int int0 = FastMath.round(906.5728F);
      double double9 = FastMath.tanh((-634.0));
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      double double0 = FastMath.tan(191.62);
      int int0 = FastMath.min((-2219), (-2192));
      float float0 = FastMath.abs((-1534.3032F));
      double double1 = FastMath.exp(2544.65508);
      double double2 = FastMath.random();
      double double3 = FastMath.exp(3231.36315);
      float float1 = FastMath.max((float) (-2219), (float) (-2192));
      double double4 = FastMath.atan((-0.05417713522911072));
      double double5 = FastMath.asin((-8.0E298));
      double double6 = FastMath.min(1.0, (-454.282110388));
      double double7 = FastMath.nextAfter(3470.1817277, (-0.05417713522911072));
      double double8 = FastMath.nextAfter(2417.057, (-0.05417713522911072));
      double double9 = FastMath.toRadians(3470.1817276999996);
      double double10 = FastMath.log10((-2219));
      int int1 = FastMath.abs((-2219));
      double double11 = FastMath.signum((-8.0E298));
      double double12 = FastMath.acosh((-8.0E298));
      double double13 = FastMath.log1p((-1.0));
      double double14 = FastMath.sqrt(191.62);
      float float2 = FastMath.max((-338.3F), 0.0F);
      double double15 = FastMath.toRadians(3231.36315);
      double double16 = FastMath.acosh(0.0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      double double0 = FastMath.log1p(3590.423);
      double double1 = FastMath.abs(1245.7890708379);
      double double2 = FastMath.expm1((-1.0));
      double double3 = FastMath.log10(1291.945);
      int int0 = FastMath.abs(58);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      float float0 = FastMath.abs(0.0F);
      double double0 = FastMath.sinh(0.0F);
      double double1 = FastMath.nextUp(0.0);
      long long0 = FastMath.abs((-1L));
      int int0 = FastMath.min((-64), (-1169));
      double double2 = FastMath.acosh((-1.0));
      double double3 = FastMath.sinh(0.0F);
      double double4 = FastMath.asin(1.0320850239843855);
      int int1 = FastMath.abs((-1446));
      double double5 = FastMath.acos((-1L));
      double double6 = FastMath.atanh(0.041666666666666664);
      double double7 = FastMath.sin(Double.NaN);
      double double8 = FastMath.max(4.455505956692757, 2382.2354498);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      double double0 = FastMath.atan2((-402.3172), 1.074682223392077);
      double double1 = FastMath.tanh(1.074682223392077);
      double double2 = FastMath.nextUp((-1.0));
      double double3 = FastMath.random();
      double double4 = FastMath.atan(0.0);
      long long0 = FastMath.round(0.0);
      long long1 = FastMath.abs(0L);
      double double5 = FastMath.acosh((-0.05417713522911072));
      double double6 = FastMath.log10(1.494140625);
      int int0 = FastMath.round((float) 0L);
      double double7 = FastMath.cbrt((-114.0));
      double double8 = FastMath.rint((-1.0));
      double double9 = FastMath.nextAfter(0.0, (-402.3172));
      double double10 = FastMath.nextUp((-403.596345631));
      double double11 = FastMath.cosh((-1.0));
      double double12 = FastMath.atanh(1.494140625);
      double double13 = FastMath.sinh(251.6297504841);
      double double14 = FastMath.floor(202.519856716092);
      double double15 = FastMath.min((-4749.970667), 324.4352);
      double double16 = FastMath.asinh((-0.05417713522911072));
      int int1 = FastMath.min(14, 14);
      double double17 = FastMath.atan2(0L, 0.0);
      double double18 = FastMath.atanh(0.17439147417778686);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      long long0 = FastMath.min((-5034868814120038111L), 1795L);
      double double0 = FastMath.max((double) (-5034868814120038111L), 0.5463024898437905);
      double double1 = FastMath.nextUp(1.074682223392077);
      double double2 = FastMath.log(1.074682223392077);
      double double3 = FastMath.ulp((-2841.467898637));
      double double4 = FastMath.floor(1.8358548930975745E-7);
      double double5 = FastMath.exp(298.5305877743);
      double double6 = FastMath.asinh(0.07202501173261171);
      double double7 = FastMath.asin(1.074682223392077);
      double double8 = FastMath.min(202.75, 0.5463024898437905);
      long long1 = FastMath.abs(1833L);
      double double9 = FastMath.max((-2841.467898637), 1.0746822233920772);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      long long0 = FastMath.round(1.0);
      double double0 = FastMath.toDegrees((-2940.3618562714));
      long long1 = FastMath.max(1L, 1L);
      double double1 = FastMath.floor((-168470.3246056036));
      double double2 = FastMath.cos((-1.0));
      long long2 = FastMath.min(1L, 1L);
      double double3 = FastMath.log((-2940.3618562714));
      double double4 = FastMath.sqrt(1L);
      double double5 = FastMath.asinh(0.5403022766113281);
      double double6 = FastMath.ulp(1L);
      double double7 = FastMath.ulp((-2940.3618562714));
      double double8 = FastMath.max((-4.469603409122654E-6), (double) 1L);
      double double9 = FastMath.toRadians(609.076151095);
      double double10 = FastMath.nextAfter(1L, (-1081.8294737));
      double double11 = FastMath.ceil(6.951502372232782E-7);
      long long3 = FastMath.min(1L, 1077L);
      double double12 = FastMath.floor((-168471.0));
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      double double0 = FastMath.atanh((-1.0));
      float float0 = FastMath.min(0.0F, 0.0F);
      float float1 = FastMath.max(0.0F, (-2078.0F));
      double double1 = FastMath.nextAfter(8.0E298, 8.0E298);
      int int0 = FastMath.min(1610087935, 1610087935);
      int int1 = FastMath.abs(1610087935);
      double double2 = FastMath.toDegrees(1.5574077246549023);
      long long0 = FastMath.abs((long) 1610087935);
      double double3 = FastMath.log1p(1610087935);
      double double4 = FastMath.min((double) 1610087935, 21.19955463308478);
      int int2 = FastMath.abs(1610087935);
      double double5 = FastMath.acos(8.0E298);
      double double6 = FastMath.acos(1610087935L);
      float float2 = FastMath.max((float) 1610087935, 0.0F);
      double double7 = FastMath.log10(Double.NaN);
      double double8 = FastMath.log10((-3740.199532857353));
      long long1 = FastMath.abs(0L);
      double double9 = FastMath.expm1(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      double double0 = FastMath.ulp((-920.9063263371));
      double double1 = FastMath.tanh((-920.9063263371));
      double double2 = FastMath.tan((-920.9063263371));
      int int0 = FastMath.min(961659605, 961659605);
      double double3 = FastMath.log10((-0.44618738787562695));
      double double4 = FastMath.toDegrees((-272.12));
      double double5 = FastMath.ulp(5.140127377170679);
      long long0 = FastMath.min((-2040L), 9193070505571053912L);
      double double6 = FastMath.cos(0.19999999999923582);
      double double7 = FastMath.tan((-272.12));
      double double8 = FastMath.acosh((-2040L));
      int int1 = FastMath.abs(961659605);
      double double9 = FastMath.tan(5846.76317408641);
      double double10 = FastMath.cos(9193070505571053912L);
      int int2 = FastMath.round((float) (-2040L));
      long long1 = FastMath.abs((-901L));
      double double11 = FastMath.min(0.8806908915378047, (double) 9193070505571053912L);
      double double12 = FastMath.tan(2787.25);
      double double13 = FastMath.nextUp((-1250.41902));
      double double14 = FastMath.tanh(0.8109631538391113);
      double double15 = FastMath.pow(0.8806908915378047, 4002.21010456);
      float float0 = FastMath.max((float) (-2040L), 0.0F);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      double double0 = FastMath.rint(0.125);
      double double1 = FastMath.cos(0.0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      double double0 = FastMath.pow((-185.4536), (-185.4536));
      double double1 = FastMath.expm1(Double.NaN);
      double double2 = FastMath.cos(Double.NaN);
      double double3 = FastMath.asinh(Double.NaN);
      long long0 = FastMath.abs((-2278L));
      double double4 = FastMath.cos((-2278L));
      double double5 = FastMath.abs((-1817.02));
      long long1 = FastMath.round(1240.36);
      double double6 = FastMath.ceil(1817.02);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      double double0 = FastMath.ulp(5.140127377170679);
      double double1 = FastMath.sin(5.140127377170679);
      double double2 = FastMath.asinh(3.410491133089812E-7);
      double double3 = FastMath.min(8.881784197001252E-16, 5.140127377170679);
      double double4 = FastMath.asinh(21.932093574448);
      double double5 = FastMath.atanh(5.140127377170679);
      double double6 = FastMath.floor((-548.4470179));
      double double7 = FastMath.log1p(1.2675934823758863E-8);
      int int0 = FastMath.max(1032, 1032);
      double double8 = FastMath.pow(4442.1467, 3.410491133089812E-7);
      double double9 = FastMath.rint((-549.0));
      double double10 = FastMath.sqrt((-8.0E298));
      float float0 = FastMath.max((float) 1032, (float) 1032);
      double double11 = FastMath.asinh((-8.0E298));
      double double12 = FastMath.pow(1032, Double.NaN);
      double double13 = FastMath.abs(2599.80856852164);
      long long0 = FastMath.abs(9154082963658192752L);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      double double0 = FastMath.pow(3212.386279088, 3212.386279088);
      int int0 = FastMath.min(486, (-1));
      double double1 = FastMath.atanh(3212.386279088);
      double double2 = FastMath.atan((-1057.67));
      double double3 = FastMath.cosh(Double.NaN);
      double double4 = FastMath.cosh((-2644.498480801));
      float float0 = FastMath.max((-1817.858F), (float) (-1));
      double double5 = FastMath.log((-1));
      int int1 = FastMath.abs((-1));
      double double6 = FastMath.signum(3212.386279088);
      double double7 = FastMath.log10(3.171357693770103);
      long long0 = FastMath.round(Double.NaN);
      double double8 = FastMath.asinh(Double.NaN);
      double double9 = FastMath.floor(0.0952233225107193);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      double double0 = FastMath.signum(1052.99);
      double double1 = FastMath.toRadians(1052.99);
      int int0 = FastMath.abs(3);
      double double2 = FastMath.toRadians(1.0);
      double double3 = FastMath.ceil(0.017453292519943295);
      double double4 = FastMath.cos(1.625);
      double double5 = FastMath.asin(1.0320850239843855);
      double double6 = FastMath.asinh(1052.99);
      double double7 = FastMath.nextUp(1052.99);
      double double8 = FastMath.acos(620.62853);
      float float0 = FastMath.max(825.7156F, (float) 3);
      double double9 = FastMath.sqrt((-1.0E-6));
      double double10 = FastMath.cosh((-1.0));
      double double11 = FastMath.acosh(1.0);
      int int1 = FastMath.min(2194, Integer.MAX_VALUE);
      double double12 = FastMath.cbrt(2194);
      double double13 = FastMath.cosh(16.6);
      double double14 = FastMath.exp(0.07073719799518585);
      double double15 = FastMath.expm1(3.001117512531765E-7);
      double double16 = FastMath.signum((-191.946203471859));
      double double17 = FastMath.atan(12.994080144900924);
      double double18 = FastMath.tan(Double.NaN);
      double double19 = FastMath.atan2(620.62853, 2194);
      double double20 = FastMath.cbrt(2194);
      double double21 = FastMath.nextAfter(1.625, 1.625);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      double double0 = FastMath.nextUp(Double.POSITIVE_INFINITY);
      int int0 = FastMath.round(0.0F);
      float float0 = FastMath.max(0.0F, (float) 0);
      double double1 = FastMath.log10(0.0);
      float float1 = FastMath.max(0.0F, 0.0F);
      double double2 = FastMath.random();
      int int1 = FastMath.max(0, 1023);
      double double3 = FastMath.cosh((-691.461));
      double double4 = FastMath.tan((-3344.46991384));
      double double5 = FastMath.min((-3344.46991384), Double.POSITIVE_INFINITY);
      int int2 = FastMath.min(12, 52);
      double double6 = FastMath.cbrt(4.007571144946156);
      double double7 = FastMath.cos(1820.5796576);
      long long0 = FastMath.min((long) 52, 4577762542105553359L);
      double double8 = FastMath.atan2(1643.88472285557, 9.923542994353831E299);
      float float2 = FastMath.min((float) 0, 2066.8F);
      double double9 = FastMath.toRadians(1643.88472285557);
      double double10 = FastMath.atanh(0.0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      long long0 = FastMath.round((-597.21820797704));
      double double0 = FastMath.cos((-1.0));
      double double1 = FastMath.random();
      double double2 = FastMath.ulp((-597L));
      double double3 = FastMath.toDegrees((-1375.0));
      double double4 = FastMath.sinh(2.092571276372179);
      double double5 = FastMath.asinh(2.092571276372179);
      double double6 = FastMath.cbrt((-1957.5333941));
      double double7 = FastMath.log(0.99);
      double double8 = FastMath.asin(0.0);
      double double9 = FastMath.sqrt(0.3333333333333333);
      double double10 = FastMath.log10(0.5403023058681398);
      float float0 = FastMath.max((float) (-597L), (float) (-597L));
      double double11 = FastMath.sinh((-12.509397507258083));
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      double double0 = FastMath.random();
      int int0 = FastMath.round(0.0F);
      double double1 = FastMath.sqrt(0.0F);
      double double2 = FastMath.nextAfter(0, 1.3526894423597173E-6);
      double double3 = FastMath.log10(0.0);
      int int1 = FastMath.max(0, 0);
      double double4 = FastMath.atan2(4.9E-324, 0.0F);
      double double5 = FastMath.log10(0.0);
      long long0 = FastMath.max((long) 0, (long) 0);
      long long1 = FastMath.abs(0L);
      float float0 = FastMath.max((-781.40326F), 2014.1257F);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      double double0 = FastMath.random();
      double double1 = FastMath.toDegrees(0.0);
      double double2 = FastMath.cbrt(0.0);
      double double3 = FastMath.atan2(0.0, (-1.0));
      float float0 = FastMath.max(0.0F, 0.0F);
      long long0 = FastMath.max(0L, 0L);
      float float1 = FastMath.min((float) 0L, (-87.5079F));
      double double4 = FastMath.floor(1.0);
      double double5 = FastMath.max(1.01, 4.9E-324);
      double double6 = FastMath.rint(0.0);
      int int0 = FastMath.abs(2147430388);
      double double7 = FastMath.sinh(1.0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      double double0 = FastMath.cos((-8.0E298));
      double double1 = FastMath.acos(0.39362657592563277);
      float float0 = FastMath.max(1.0F, 1.0F);
      double double2 = FastMath.tan(1.01);
      double double3 = FastMath.nextUp(0.5403022766113281);
      double double4 = FastMath.ulp(1.0F);
      double double5 = FastMath.cosh(1.560070049119026);
      long long0 = FastMath.min(0L, 0L);
      int int0 = FastMath.max((-1023), (-1023));
      double double6 = FastMath.nextAfter(3802.5659875989, 1.8508157176809257);
      double double7 = FastMath.toDegrees(1945.886196);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      double double0 = FastMath.rint(0.0);
      double double1 = FastMath.cosh(0.0);
      double double2 = FastMath.sin(3.171357693770103);
      double double3 = FastMath.floor(1.8358548930975745E-7);
      double double4 = FastMath.tanh((-0.02976064528098811));
      double double5 = FastMath.cosh(0.0);
      double double6 = FastMath.cos(0.9315964599440725);
      int int0 = FastMath.round(0.0F);
      long long0 = FastMath.round(0.3153223395347595);
      double double7 = FastMath.rint((-1095.8048));
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      long long0 = FastMath.max((-1264L), 0L);
      double double0 = FastMath.log1p(0L);
      long long1 = FastMath.min((-1264L), (-802L));
      double double1 = FastMath.exp(0.0);
      double double2 = FastMath.exp(1038.4820952605514);
      double double3 = FastMath.min((-3715.89742010848), 0.7249995199969751);
      int int0 = FastMath.min((-184), (-184));
      double double4 = FastMath.asin((-1.0));
      float float0 = FastMath.max(0.0F, (-1.0F));
      int int1 = FastMath.abs(1144);
      float float1 = FastMath.min((float) 0L, 0.0F);
      double double5 = FastMath.nextAfter(0.0, 2.479773539153719E-5);
      int int2 = FastMath.max((-184), (-1337));
      int int3 = FastMath.abs(1144);
      double double6 = FastMath.cos(2119.053511);
      double double7 = FastMath.floor((-802L));
      int int4 = FastMath.min(1144, 417);
      double double8 = FastMath.acos(3937.7825853521695);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      double double0 = FastMath.ulp((-210.214));
      double double1 = FastMath.toRadians(2.8421709430404007E-14);
      double double2 = FastMath.sin(148.0839257614422);
      float float0 = FastMath.min(Float.NaN, 0.0F);
      double double3 = FastMath.max((-3.141592653589793), (-3.141592653589793));
      float float1 = FastMath.abs(0.0F);
      int int0 = FastMath.max((-1), (-1));
      long long0 = FastMath.min((long) (-1), (-1L));
      int int1 = FastMath.min((-1), 3);
      double double4 = FastMath.random();
      double double5 = FastMath.asinh(4.960524086056721E-16);
      double double6 = FastMath.rint(4.960524086056721E-16);
      double double7 = FastMath.sqrt((-591.375663));
      double double8 = FastMath.atanh(0.0F);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      double double0 = FastMath.atan(0.07073719799518585);
      double double1 = FastMath.atanh(0.07073719799518585);
      double double2 = FastMath.expm1(0.0708555372623453);
      double double3 = FastMath.tanh(0.07061956717165072);
      double double4 = FastMath.atanh(0.07073719799518585);
      double double5 = FastMath.log10(0.0708555372623453);
      double double6 = FastMath.toDegrees(1.5574077246549023);
      double double7 = FastMath.floor((-3110.067839));
      long long0 = FastMath.round(0.07073719799518585);
      long long1 = FastMath.round(960.5317);
      double double8 = FastMath.asinh(2.4384203044354907E-8);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      double double0 = FastMath.cosh((-1579.11535447548));
      double double1 = FastMath.max(1.366701124672226, Double.POSITIVE_INFINITY);
      double double2 = FastMath.asinh((-1.0));
      double double3 = FastMath.sqrt(Double.POSITIVE_INFINITY);
      double double4 = FastMath.max((-0.8813735870195429), (-2502.5837335));
      long long0 = FastMath.max(80L, 80L);
      double double5 = FastMath.sinh((-0.8813735870195429));
      float float0 = FastMath.min(1850.4F, 1850.4F);
      double double6 = FastMath.sinh((-273.194628));
      double double7 = FastMath.cbrt((-273.194628));
      double double8 = FastMath.nextUp(901.139998570427);
      double double9 = FastMath.min(1324.78638551, (-2.217631747675454E118));
      double double10 = FastMath.tan((-1.0));
      double double11 = FastMath.sqrt(0.19454771280288696);
      double double12 = FastMath.signum((-2502.5837335));
      int int0 = FastMath.max((-1602), 709);
      long long1 = FastMath.min(80L, (-3958705157555305932L));
      long long2 = FastMath.max(972L, 0L);
      double double13 = FastMath.atan2(901.139998570427, 972L);
      double double14 = FastMath.nextUp((-0.9999999999999999));
      long long3 = FastMath.round((double) (-3958705157555305932L));
      double double15 = FastMath.tanh(0.0);
      long long4 = FastMath.max((-797L), (-927L));
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      double double0 = FastMath.acos((-2919.390061881));
      double double1 = FastMath.signum((-389.3502335));
      double double2 = FastMath.signum(Double.NaN);
      int int0 = FastMath.max(750, 750);
      double double3 = FastMath.sin((-389.3502335));
      double double4 = FastMath.cbrt((-2919.390061881));
      double double5 = FastMath.random();
      double double6 = FastMath.rint(0.14982303977012634);
      double double7 = FastMath.log10(1750.8468362826);
      double double8 = FastMath.cbrt(731.444299097);
      double double9 = FastMath.toRadians((-2919.390061881));
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      double double0 = FastMath.asinh((-1967.23));
      double double1 = FastMath.sinh((-1967.23));
      double double2 = FastMath.ceil(Double.NEGATIVE_INFINITY);
      double double3 = FastMath.tan((-1967.23));
      double double4 = FastMath.atan2((-206.0499873), (-4509.922859766806));
      double double5 = FastMath.acosh(1.8358548930975745E-7);
      double double6 = FastMath.sqrt(1945.67081);
      double double7 = FastMath.sqrt((-1351.7));
      double double8 = FastMath.acos(1.8014398509481984E16);
      double double9 = FastMath.acos(5.669184079525E-24);
      double double10 = FastMath.sinh(Double.NaN);
      double double11 = FastMath.tan(Double.NaN);
      double double12 = FastMath.acosh((-4.5769509808878667E-17));
      double double13 = FastMath.cosh((-1.0E-6));
      double double14 = FastMath.asinh(Double.NaN);
      double double15 = FastMath.nextUp(6.0);
      Random.setNextRandom((-3296));
      double double16 = FastMath.log1p(Double.NaN);
      Random.setNextRandom(3531);
      double double17 = FastMath.nextUp(1.8014398509481984E16);
      double double18 = FastMath.cos((-2909.2));
      double double19 = FastMath.nextAfter(2554.9670682512, 3531);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      int int0 = FastMath.max((-2724), 1696);
      double double0 = FastMath.sin(2712.22083361);
      double double1 = FastMath.pow((-1375.208023018), (-1375.208023018));
      double double2 = FastMath.sinh((-0.8554263974767917));
      double double3 = FastMath.ulp((-3784.92));
      double double4 = FastMath.max(0.7937005259840998, (-510.0333834067708));
      long long0 = FastMath.min((long) 1696, 3241L);
      double double5 = FastMath.abs((double) 1696L);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      double double0 = FastMath.acosh((-769.353794320302));
      double double1 = FastMath.toRadians(Double.NaN);
      double double2 = FastMath.asin((-769.353794320302));
      double double3 = FastMath.atan2(Double.NaN, (-769.353794320302));
      double double4 = FastMath.rint(3.038148934955037E-7);
      int int0 = FastMath.max(1, 1);
      int int1 = FastMath.min(1431655765, 1);
      double double5 = FastMath.ceil(0.07073719799518585);
      double double6 = FastMath.tan(1431655765);
      double double7 = FastMath.ceil(1.2331016983979697);
      double double8 = FastMath.pow(Double.NaN, 5.140127377170679);
      long long0 = FastMath.min((-1572L), (long) 1);
      double double9 = FastMath.tanh(3.410491133089812E-7);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      double double0 = FastMath.log10(1.8508157176809257);
      double double1 = FastMath.cbrt(1.8508157176809257);
      double double2 = FastMath.acosh(0.2673631790022217);
      long long0 = FastMath.abs(0L);
      double double3 = FastMath.atan(0.2673631790022217);
      double double4 = FastMath.atanh(0.2673631790022217);
      double double5 = FastMath.ceil(214.83967792415677);
      double double6 = FastMath.sinh(0L);
      double double7 = FastMath.atan2(214.83967792415677, 1.139493927324549);
      double double8 = FastMath.log10(0.7214844409909045);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      double double0 = FastMath.pow(2.092571276372179, 14.101419947171719);
      double double1 = FastMath.rint((-2932.9157036539523));
      double double2 = FastMath.acosh(0.39362657592563277);
      double double3 = FastMath.ceil(2.092571276372179);
      double double4 = FastMath.asin(168.931);
      double double5 = FastMath.toRadians(2.092571276372179);
      double double6 = FastMath.tan((-2933.0));
      float float0 = FastMath.max(Float.NaN, 0.0F);
      long long0 = FastMath.max(699L, 699L);
      double double7 = FastMath.sin(0.5403022766113281);
      double double8 = FastMath.pow(14.101419947171719, 0.0);
      double double9 = FastMath.log(33269.55643408027);
      float float1 = FastMath.max(0.0F, 0.0F);
      long long1 = FastMath.min((-7278142539171889152L), (-2644281811660520851L));
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      double double0 = FastMath.sinh((-302.78822594627));
      double double1 = FastMath.expm1(0.0);
      double double2 = FastMath.atanh((-1.5784314227271893E131));
      double double3 = FastMath.sinh((-302.78822594627));
      double double4 = FastMath.acos(3.171357693770103);
      double double5 = FastMath.abs(Double.NaN);
      double double6 = FastMath.exp(1.0);
      double double7 = FastMath.tan(0.0);
      double double8 = FastMath.sin((-1.5784314227271893E131));
      double double9 = FastMath.acos(1.0);
      double double10 = FastMath.ceil(1.0);
      float float0 = FastMath.abs((-1513.4F));
      double double11 = FastMath.signum((-1.5784314227271893E131));
      double double12 = FastMath.max(0.0, (-893.73277829987));
      int int0 = FastMath.abs((-512));
      double double13 = FastMath.log1p((-1.5784314227271893E131));
      double double14 = FastMath.acosh(2.319235767811865);
      double double15 = FastMath.atan2(1.0, (-459.0));
      double double16 = FastMath.cos(1.197421629234348);
      float float1 = FastMath.max(0.0F, 1513.4F);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      double double0 = FastMath.atan2(0.14285714285714285, 9.0);
      double double1 = FastMath.expm1(3238.3);
      double double2 = FastMath.log10(1936.95062345);
      long long0 = FastMath.max(0L, 0L);
      double double3 = FastMath.pow(181.9162, 0L);
      double double4 = FastMath.floor(810.49365127593);
      double double5 = FastMath.pow(Double.POSITIVE_INFINITY, 3.287118549869074);
      int int0 = FastMath.round((float) 0L);
      float float0 = FastMath.abs((float) 0L);
      float float1 = FastMath.max(0.0F, (float) 0L);
      double double6 = FastMath.sqrt(1.0);
      double double7 = FastMath.sinh(0.015871682991790047);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      double double0 = FastMath.acosh((-18.457971236441537));
      double double1 = FastMath.nextUp(Double.NaN);
      double double2 = FastMath.nextAfter(Double.NaN, (-18.457971236441537));
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      double double0 = FastMath.cbrt(0.0);
      double double1 = FastMath.expm1(0.0);
      double double2 = FastMath.nextAfter(0.0, 0.0);
      double double3 = FastMath.signum((-18.43086276236962));
      long long0 = FastMath.round(2.092571276372179);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      int int0 = FastMath.round(0.0F);
      double double0 = FastMath.abs(0.875);
      double double1 = FastMath.log10(695.42922035);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      int int0 = FastMath.min(5, 5);
      double double0 = FastMath.cbrt(5);
      long long0 = FastMath.min((-827L), (long) 5);
      double double1 = FastMath.signum(5);
      double double2 = FastMath.toDegrees(5);
      double double3 = FastMath.ceil((-827L));
      double double4 = FastMath.expm1(286.4788975654116);
      double double5 = FastMath.random();
      double double6 = FastMath.acos(0.7937005259840998);
      double double7 = FastMath.toRadians(0.0);
      double double8 = FastMath.atan(0.0);
      double double9 = FastMath.toDegrees(0.0);
      double double10 = FastMath.signum(1.0);
      double double11 = FastMath.acosh((-3.940510424527919E-20));
      float float0 = FastMath.min((float) 5, 0.0F);
      double double12 = FastMath.exp((-653.1784154012));
      long long1 = FastMath.max((-3574L), (-827L));
      double double13 = FastMath.asinh(0.8109631538391113);
      double double14 = FastMath.pow(2921.725023, 0.7412061681953814);
      double double15 = FastMath.log((-1668.369888528635));
      double double16 = FastMath.atan2(0.0, 2.6073803869591123E124);
      double double17 = FastMath.asinh((-2276.761));
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      double double0 = FastMath.min(1027.41002048093, 1027.41002048093);
      double double1 = FastMath.log1p(1027.41002048093);
      double double2 = FastMath.sinh(644.51);
      double double3 = FastMath.atan2(2912.3, 644.51);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      double double0 = FastMath.ceil((-3329.1604348205055));
      double double1 = FastMath.acos((-3329.0));
      double double2 = FastMath.expm1((-0.05417713522911072));
      double double3 = FastMath.rint((-3329.1604348205055));
      double double4 = FastMath.max((-3329.1604348205055), 2307.72231);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      int int0 = FastMath.min(0, 0);
      double double0 = FastMath.rint((-92.710202));
      double double1 = FastMath.pow(0, 0);
      double double2 = FastMath.atan(0);
      double double3 = FastMath.expm1(1.0);
      double double4 = FastMath.random();
      double double5 = FastMath.sin((-1.0));
      double double6 = FastMath.min(0.0, (double) 0);
      int int1 = FastMath.round((-2178.28F));
      int int2 = FastMath.abs(1);
      long long0 = FastMath.round((-92.710202));
      double double7 = FastMath.nextAfter(1.366701124672226, (-286.929079048));
      double double8 = FastMath.cos(1.560070049119026);
      double double9 = FastMath.abs(0.0);
      int int3 = FastMath.abs(1);
      long long1 = FastMath.round(1.560070049119026);
      double double10 = FastMath.log10((-1237.752));
      int int4 = FastMath.abs(0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      double double0 = FastMath.random();
      float float0 = FastMath.abs((-1.0F));
      double double1 = FastMath.abs(2.639144044101463E-7);
      double double2 = FastMath.log((-3841.892905));
      double double3 = FastMath.acos(2320.0);
      double double4 = FastMath.asin(2091.9);
      double double5 = FastMath.ulp(Double.NaN);
      float float1 = FastMath.abs(0.0F);
      double double6 = FastMath.floor((-1019.80178822778));
      double double7 = FastMath.tan(2091.9);
      double double8 = FastMath.min(Double.NaN, (-3841.892905));
      double double9 = FastMath.ceil((-0.42362719020328643));
      double double10 = FastMath.exp(1.8508157176809257);
      double double11 = FastMath.rint(-0.0);
      int int0 = FastMath.abs(2457);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      double double0 = FastMath.log(0.1428571343421936);
      double double1 = FastMath.acosh((-1.0));
      double double2 = FastMath.min((-1.9459102086599598), (-1.9459102086599598));
      double double3 = FastMath.atan2((-1.9459102086599598), Double.NaN);
      long long0 = FastMath.abs((-1164L));
      double double4 = FastMath.cbrt(1018.0);
      double double5 = FastMath.ceil(10.05964355736237);
      float float0 = FastMath.abs((float) 1164L);
      long long1 = FastMath.max((-1164L), 0L);
      double double6 = FastMath.asinh(10.05964355736237);
      float float1 = FastMath.max((float) 0L, (float) 0L);
      int int0 = FastMath.max((-3942), (-3942));
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      double double0 = FastMath.min(14.136832902969902, (-2846.79));
      double double1 = FastMath.signum(5.650007086920087E-9);
      double double2 = FastMath.random();
      double double3 = FastMath.cosh((-2846.79));
      double double4 = FastMath.nextUp(1.0);
      double double5 = FastMath.tanh((-3762.24));
      double double6 = FastMath.cbrt((-451.735651227797));
      long long0 = FastMath.round(0.99);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      int int0 = FastMath.abs(2432);
      double double0 = FastMath.nextUp(2284.609965568927);
      double double1 = FastMath.ceil(2284.609965568927);
      double double2 = FastMath.sinh(11.0);
      double double3 = FastMath.exp(2559.334985115);
      double double4 = FastMath.sinh(Double.POSITIVE_INFINITY);
      double double5 = FastMath.rint(1.5574077246549023);
      double double6 = FastMath.exp(2432);
      double double7 = FastMath.acos(29937.07084924806);
      double double8 = FastMath.cos((-4416.932521847821));
      double double9 = FastMath.tanh(0.39362657592563277);
      double double10 = FastMath.expm1(0.37448244985993234);
      double double11 = FastMath.ceil(Double.NaN);
      double double12 = FastMath.acosh(11.0);
      double double13 = FastMath.exp(Double.NaN);
      double double14 = FastMath.rint(2284.6099655689272);
      double double15 = FastMath.cos(2285.0);
      double double16 = FastMath.rint((-446.9133676942));
      double double17 = FastMath.random();
      double double18 = FastMath.log10(1872.80134);
      double double19 = FastMath.random();
      double double20 = FastMath.ceil(1957.89);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      double double0 = FastMath.ceil(3.410491133089812E-7);
      double double1 = FastMath.asinh(1.0);
      int int0 = FastMath.min(265, 265);
      double double2 = FastMath.exp(3711.0);
      double double3 = FastMath.acos(Double.POSITIVE_INFINITY);
      double double4 = FastMath.acosh(3097.092772693594);
      int int1 = FastMath.round((-312.0F));
      double double5 = FastMath.log1p(265);
      double double6 = FastMath.asinh(Double.POSITIVE_INFINITY);
      double double7 = FastMath.cos(3097.092772693594);
      double double8 = FastMath.ceil(265);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      double double0 = FastMath.atan((-1220.74289870348));
      double double1 = FastMath.toDegrees((-669.302));
      double double2 = FastMath.toDegrees(6.951502372232782E-7);
      double double3 = FastMath.nextAfter(1.074682223392077, (-2197.321951943834));
      double double4 = FastMath.pow(3.982917472041182E-5, 15.0);
      double double5 = FastMath.expm1(4.503599627370496E15);
      long long0 = FastMath.max(131L, (-2644281811660520851L));
      double double6 = FastMath.nextAfter(1.0320850239843855, 766.0300171873337);
      double double7 = FastMath.log10(4.503599627370496E15);
      double double8 = FastMath.atan2(469.443095557, Double.POSITIVE_INFINITY);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      double double0 = FastMath.log10((-1482.8335));
      double double1 = FastMath.max(Double.NaN, Double.NaN);
      double double2 = FastMath.asinh(443.897505);
      double double3 = FastMath.expm1(2.563009154379015E-7);
      double double4 = FastMath.toRadians(1378.993);
      double double5 = FastMath.random();
      int int0 = FastMath.round((-4434.6943F));
      double double6 = FastMath.rint((-4435));
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      double double0 = FastMath.floor((-2178.957));
      double double1 = FastMath.floor((-2179.0));
      double double2 = FastMath.tan((-2179.0));
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      double double0 = FastMath.abs(2.639144044101463E-7);
      double double1 = FastMath.min(2.639144044101463E-7, (-4.469603409122654E-6));
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      double double0 = FastMath.acos(0.0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      long long0 = FastMath.max(3186L, 1L);
      double double0 = FastMath.rint(3186L);
      double double1 = FastMath.acos((-18.43086276236962));
      double double2 = FastMath.rint((-1934.764));
      double double3 = FastMath.pow(1126.5842318969776, 3186L);
      float float0 = FastMath.min(0.0F, (float) 3186L);
      double double4 = FastMath.toRadians(0.7316888570785522);
      float float1 = FastMath.max((float) 1L, 0.0F);
      double double5 = FastMath.log1p(0.0F);
      double double6 = FastMath.nextAfter(0.012770379656174955, (-1.0));
      double double7 = FastMath.sin(0.7316888570785522);
      double double8 = FastMath.expm1((-1935.0));
      double double9 = FastMath.tanh(1971.6422484941402);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      double double0 = FastMath.asinh(0.0);
      double double1 = FastMath.acosh(0.5463024898437905);
      double double2 = FastMath.nextUp(0.0);
      int int0 = FastMath.min(3007, 2706);
      double double3 = FastMath.random();
      int int1 = FastMath.min((-933), (-933));
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      double double0 = FastMath.asin(1.0);
      double double1 = FastMath.random();
      double double2 = FastMath.log1p(1.5574077246549023);
      double double3 = FastMath.cbrt(1.0);
      double double4 = FastMath.signum(694.279689726387);
      float float0 = FastMath.min((-2679.659F), (-33.0F));
      double double5 = FastMath.log10((-2040.8431672194977));
      double double6 = FastMath.random();
      double double7 = FastMath.sqrt(763.911204);
      double double8 = FastMath.acos(694.279689726387);
      double double9 = FastMath.exp((-2679.659F));
      double double10 = FastMath.atan2(1.0, 0.0);
      double double11 = FastMath.tan(1.0);
      double double12 = FastMath.toDegrees(0.3999999761581421);
      double double13 = FastMath.floor(0.07692307692307693);
      float float1 = FastMath.abs((-2679.659F));
      long long0 = FastMath.min(0L, 0L);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      double double0 = FastMath.sin(2197.6926);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      int int0 = FastMath.min(2061584302, (-790));
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      double double0 = FastMath.nextAfter((-2325.343230901446), 850.98478899);
      long long0 = FastMath.min(0L, (-2400L));
      double double1 = FastMath.acosh(850.98478899);
      long long1 = FastMath.max((-2400L), (-2400L));
      double double2 = FastMath.abs((-1840.402));
      float float0 = FastMath.min((float) 0L, (-3224.053F));
      double double3 = FastMath.nextAfter((-3224.053F), (-888.86534497516));
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      long long0 = FastMath.abs((-2095L));
      double double0 = FastMath.pow(0.3153223395347595, 0.3153223395347595);
      int int0 = FastMath.min(7, 7);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      double double0 = FastMath.log(1384.0219634176);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      double double0 = FastMath.nextAfter(4.503599627370496E15, 4.503599627370496E15);
      double double1 = FastMath.atan2(4.503599627370497E15, (-4.503599627370496E15));
      double double2 = FastMath.tanh(1.0);
      double double3 = FastMath.expm1(2.356194490192345);
      double double4 = FastMath.sqrt(1.0);
      double double5 = FastMath.ulp((-1038.266667913025));
      int int0 = FastMath.max(1, 495);
      long long0 = FastMath.round(0.0);
      double double6 = FastMath.atan(1386.3830347752);
      int int1 = FastMath.abs(495);
      double double7 = FastMath.floor(4.503599627370496E15);
      double double8 = FastMath.log(0.0);
      double double9 = FastMath.signum(8.0E298);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      int int0 = FastMath.round(0.0F);
      double double0 = FastMath.asin((-800.693135669964));
      int int1 = FastMath.round((float) 0);
      double double1 = FastMath.nextUp(0.0F);
      double double2 = FastMath.toDegrees(520.2518685);
      double double3 = FastMath.atan((-804.7012));
      float float0 = FastMath.min((float) 0, (float) 0);
      double double4 = FastMath.floor(0.6931470632553101);
      double double5 = FastMath.expm1((-1318.2230113));
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      double double0 = FastMath.atan2((-1223.907291619603), (-2461.263));
      double double1 = FastMath.toRadians((-2.6801330444682656));
      float float0 = FastMath.abs(0.0F);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      double double0 = FastMath.min((-1986.68), (-127.47753273599785));
      int int0 = FastMath.abs(0);
      double double1 = FastMath.ceil(102.58);
      double double2 = FastMath.random();
      double double3 = FastMath.tanh(102.58);
      double double4 = FastMath.signum((-1986.68));
      double double5 = FastMath.exp(102.58);
      double double6 = FastMath.ceil(3.5475453309893416E44);
      double double7 = FastMath.ulp(3.5475453309893416E44);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      double double0 = FastMath.cos((-1.0));
      double double1 = FastMath.ulp(0.5403023058681398);
      double double2 = FastMath.pow(1.1102230246251565E-16, 0.5403023058681398);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      double double0 = FastMath.nextAfter((-753.0103), (-753.0103));
      double double1 = FastMath.cosh((-2910.8997952066925));
      double double2 = FastMath.acosh(3.0095696738628313);
      double double3 = FastMath.sin(1.5707963267948966);
      long long0 = FastMath.round(2436.0);
      double double4 = FastMath.sin(3.171357693770103);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      double double0 = FastMath.signum((-3705.045497));
      double double1 = FastMath.sqrt((-1.0));
      int int0 = FastMath.round(1206.67F);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      long long0 = FastMath.min(0L, 0L);
      double double0 = FastMath.signum(0L);
      double double1 = FastMath.asin(0.0);
      double double2 = FastMath.nextAfter((-2.957007209750105E-8), 0.0);
      double double3 = FastMath.cbrt((-2.9570072097501045E-8));
      double double4 = FastMath.abs((-18.457971236441537));
      int int0 = FastMath.max(2147477730, (-2147483647));
      long long1 = FastMath.round((double) 0L);
      double double5 = FastMath.rint((-2.957007209750105E-8));
      double double6 = FastMath.pow((-2.9570072097501045E-8), 2147477730);
      double double7 = FastMath.tanh(0.0);
      double double8 = FastMath.floor(631.5);
      long long2 = FastMath.abs(49L);
      long long3 = FastMath.round(621.9);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      double double0 = FastMath.acosh(2067.1243302498115);
      float float0 = FastMath.max(0.0F, 0.0F);
      double double1 = FastMath.toRadians((-3167.870829589934));
      long long0 = FastMath.round((double) 0.0F);
      double double2 = FastMath.toRadians(1.0);
      double double3 = FastMath.toRadians((-2.356194490192345));
      double double4 = FastMath.acosh(0.5463024898437905);
      int int0 = FastMath.abs((-1734));
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      double double0 = FastMath.ceil(0.0);
      double double1 = FastMath.random();
      double double2 = FastMath.toDegrees(0.0);
      double double3 = FastMath.nextAfter(634.78224112, 1.0);
      int int0 = FastMath.max((-1460), 2047);
      float float0 = FastMath.min((float) 2047, Float.NaN);
      double double4 = FastMath.atan2((-4187.8752935149), 2047);
      double double5 = FastMath.log((-1026.02455758411));
      double double6 = FastMath.max((-0.05417713522911072), 0.7937005259840998);
      double double7 = FastMath.max((-157.673444), 0.0);
      long long0 = FastMath.abs((long) (-1460));
      double double8 = FastMath.exp((-157.673444));
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      double double0 = FastMath.asinh(0.7316888570785522);
      double double1 = FastMath.toRadians((-844.5437910173));
      double double2 = FastMath.cosh(0.6784338513015187);
      long long0 = FastMath.abs(1L);
      double double3 = FastMath.toDegrees(0.6784338513015187);
      double double4 = FastMath.tan(0.6784338513015187);
      double double5 = FastMath.cbrt(38.871396358383095);
      double double6 = FastMath.log1p(322.1174);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      int int0 = FastMath.max((-2379), (-2379));
      double double0 = FastMath.nextUp((-2379));
      double double1 = FastMath.nextAfter(2.563009154379015E-7, 2.563009154379015E-7);
      double double2 = FastMath.sinh((-2379));
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      int int0 = FastMath.min(27, 3360);
      int int1 = FastMath.max((-1), 1076);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      double double0 = FastMath.asin(1856.5497258339417);
      double double1 = FastMath.floor(0.01745329052209854);
      double double2 = FastMath.random();
      long long0 = FastMath.abs((-1453L));
      double double3 = FastMath.cosh((-2581.69266994));
      int int0 = FastMath.min(0, 0);
      double double4 = FastMath.sinh(0);
      double double5 = FastMath.acosh(1184.187084);
      float float0 = FastMath.min((-126.7F), 0.0F);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      long long0 = FastMath.abs((-1L));
      double double0 = FastMath.log10(1L);
      double double1 = FastMath.pow(382.5767, (-1136.4709237));
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      double double0 = FastMath.tan((-1.0));
      double double1 = FastMath.cos((-1.5574077246549023));
      double double2 = FastMath.tanh(0.013388202148675738);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      double double0 = FastMath.floor(0.11113807559013367);
      double double1 = FastMath.ceil(0.0);
      double double2 = FastMath.pow(0.0, 0.0);
      double double3 = FastMath.log1p(0.11113807559013367);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      double double0 = FastMath.max((-0.09088450866185192), (-0.09088450866185192));
      long long0 = FastMath.abs(0L);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      long long0 = FastMath.min(0L, 184L);
      double double0 = FastMath.cosh(178.995083893612);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      double double0 = FastMath.abs(3.038148934955037E-7);
      double double1 = FastMath.tan((-236.8));
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      double double0 = FastMath.cosh(2186.636714399);
      int int0 = FastMath.min(1, 5);
      double double1 = FastMath.toDegrees(5);
      double double2 = FastMath.atanh(2186.636714399);
      double double3 = FastMath.log10(1346.09254288);
      double double4 = FastMath.atanh(3.129074918343044);
      long long0 = FastMath.max((long) 5, (long) 1);
      double double5 = FastMath.ceil(1346.09254288);
      int int1 = FastMath.abs(1);
      long long1 = FastMath.round(4367.780560988713);
      double double6 = FastMath.acos(1);
      double double7 = FastMath.rint(Double.NaN);
      double double8 = FastMath.asin(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      float float0 = FastMath.min(0.0F, 0.0F);
      double double0 = FastMath.toDegrees(0.0F);
      double double1 = FastMath.acosh(0.0F);
      float float1 = FastMath.abs(0.0F);
      double double2 = FastMath.atan2(0.0F, 2179.82);
      double double3 = FastMath.tan(0.0F);
      double double4 = FastMath.expm1(0.0);
      double double5 = FastMath.atan2((-3685.828339), 0.0);
      double double6 = FastMath.log((-1.0));
      double double7 = FastMath.exp(0.0F);
      double double8 = FastMath.abs(1.0);
      double double9 = FastMath.tanh(1.0);
      double double10 = FastMath.min((-1104.2916313), (-1104.2916313));
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      double double0 = FastMath.sinh(1.560070049119026);
      double double1 = FastMath.log(1.0);
      double double2 = FastMath.floor(2.2745166280898927);
      double double3 = FastMath.acosh(1.0);
      double double4 = FastMath.tan(507.592644);
      double double5 = FastMath.ceil(507.592644);
      double double6 = FastMath.sin(3206.4);
      double double7 = FastMath.floor((-2588.5));
      int int0 = FastMath.abs((-809));
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      long long0 = FastMath.max(0L, 0L);
      double double0 = FastMath.sqrt((-1563.0));
      double double1 = FastMath.nextUp((-1.0));
      double double2 = FastMath.atan(1.5574077246549023);
      double double3 = FastMath.asin(1.366701124672226);
      double double4 = FastMath.asinh(Double.NaN);
      double double5 = FastMath.tanh(0L);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      double double0 = FastMath.atan2(2904.85930862422, 2904.85930862422);
      double double1 = FastMath.toDegrees(2904.85930862422);
      double double2 = FastMath.expm1(166436.17846345805);
      double double3 = FastMath.acosh(166436.17846345805);
      int int0 = FastMath.round(2635.845F);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      double double0 = FastMath.log10(0.99);
      double double1 = FastMath.ulp(0.99);
      double double2 = FastMath.abs(1.2331016983979697);
      double double3 = FastMath.sin(0.99);
      float float0 = FastMath.max((-1714.0F), 422.8F);
      double double4 = FastMath.nextUp(1426.236);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      double double0 = FastMath.sinh(1473.91);
      double double1 = FastMath.atan(1473.91);
      double double2 = FastMath.toDegrees(1.5701178594213387);
      int int0 = FastMath.abs(1609825150);
      float float0 = FastMath.min((float) 1609825150, (float) 1609825150);
      double double3 = FastMath.expm1(1473.91);
      double double4 = FastMath.rint(40.19140625);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      float float0 = FastMath.min(0.0F, (-1611.33F));
      double double0 = FastMath.log((-1695.586860753));
      double double1 = FastMath.expm1((-1611.33F));
      double double2 = FastMath.toRadians((-1695.586860753));
      double double3 = FastMath.nextUp(0.0F);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      double double0 = FastMath.asinh(1.139493927324549);
      double double1 = FastMath.ulp(1.139493927324549);
      double double2 = FastMath.acos((-1.0));
      double double3 = FastMath.cos((-2200.729));
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      double double0 = FastMath.sin(0.2222222089767456);
      double double1 = FastMath.random();
      double double2 = FastMath.log10(3987.175965);
      double double3 = FastMath.asinh(3987.175965);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      double double0 = FastMath.exp((-1665.2418104226));
      double double1 = FastMath.asinh((-1665.2418104226));
      double double2 = FastMath.sin((-1665.2418104226));
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      double double0 = FastMath.toDegrees((-475.21));
      long long0 = FastMath.abs((-1L));
      double double1 = FastMath.cbrt((-27227.52738241185));
      double double2 = FastMath.pow((-30.0840337918359), 1437.993347934677);
      double double3 = FastMath.cosh((-30.0840337918359));
      long long1 = FastMath.round((-475.21));
      double double4 = FastMath.min((double) (-1L), 1.0);
      long long2 = FastMath.max((-2886L), 1L);
      double double5 = FastMath.nextAfter(5.811655647105635E12, (-27227.52738241185));
      float float0 = FastMath.abs(3996.4724F);
      double double6 = FastMath.tanh(Double.NaN);
      double double7 = FastMath.acosh((-2886L));
      double double8 = FastMath.expm1(307.3119806553599);
      double double9 = FastMath.log((-171.0320309));
      double double10 = FastMath.floor(1612.9);
      double double11 = FastMath.toDegrees((-3.940510424527919E-20));
      double double12 = FastMath.pow((-3996.0), 1.366701124672226);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      double double0 = FastMath.cosh((-2962.254666869609));
      double double1 = FastMath.cosh(0.2857142686843872);
      int int0 = FastMath.abs(1003734390);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      double double0 = FastMath.atan2((-1917.17187628), 1951.388);
      double double1 = FastMath.E;
      double double2 = FastMath.cosh((-739.8445));
      double double3 = FastMath.asin((-1344.374741));
      double double4 = FastMath.log((-3409.533));
      int int0 = FastMath.abs((-2324));
      long long0 = FastMath.round(590.0458994900829);
      double double5 = FastMath.sin((-3409.533));
      double double6 = FastMath.asinh(1.139493927324549);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      double double0 = FastMath.cosh((-0.7853981633974483));
      double double1 = FastMath.asin(1.560070049119026);
      int int0 = FastMath.max(32, 32);
      double double2 = FastMath.toDegrees((-0.7853981633974483));
      double double3 = FastMath.nextUp(Double.NaN);
      double double4 = FastMath.nextUp(32);
      double double5 = FastMath.random();
      double double6 = FastMath.nextUp(1.2331016983979697);
      double double7 = FastMath.sqrt(0.0);
      long long0 = FastMath.abs((-2644281811660520851L));
      int int1 = FastMath.max(1840700269, 3513);
      double double8 = FastMath.acosh((-0.7853981633974483));
      double double9 = FastMath.atan(32);
      double double10 = FastMath.atan(1.3246090892520057);
      long long1 = FastMath.abs((-2644281811660520851L));
      double double11 = FastMath.log1p((-2822.5));
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      double double0 = FastMath.atanh((-1928.360152));
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      int int0 = FastMath.round(1.0F);
      double double0 = FastMath.sinh(1.0F);
      double double1 = FastMath.expm1(1.1752011936438014);
      long long0 = FastMath.max(2106L, 2106L);
      double double2 = FastMath.atan(1.1752011936438014);
      double double3 = FastMath.nextUp((-886.8694038));
      int int1 = FastMath.round(1.0F);
      double double4 = FastMath.cosh(1.0F);
      double double5 = FastMath.ulp(1.074682223392077);
      double double6 = FastMath.asinh(2.220446049250313E-16);
      int int2 = FastMath.max(40, (-1232));
      double double7 = FastMath.ulp(2106L);
      double double8 = FastMath.acosh(348.4);
      double double9 = FastMath.cosh(40);
      double double10 = FastMath.pow((-1232), (-1232));
      int int3 = FastMath.round((float) 40);
      double double11 = FastMath.log10(0.8657694832396586);
      double double12 = FastMath.log1p(Double.NEGATIVE_INFINITY);
      double double13 = FastMath.rint((-886.8694037999999));
      double double14 = FastMath.nextUp(901.5078);
      double double15 = FastMath.signum(0.9315964599440725);
      double double16 = FastMath.ulp(0.0);
      double double17 = FastMath.acos(2.220446049250313E-16);
      double double18 = FastMath.nextUp(138.71416111);
      double double19 = FastMath.sin(1.1769263341851E17);
      double double20 = FastMath.ceil(0.8657694832396586);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      double double0 = FastMath.tanh(1.2958646899018938E-9);
      double double1 = FastMath.pow(1.2958646899018938E-9, 1.073741824E9);
      float float0 = FastMath.abs(0.0F);
      double double2 = FastMath.rint((-1631.300720288458));
      double double3 = FastMath.ceil(0.3153223395347595);
      double double4 = FastMath.sqrt(1.0);
      double double5 = FastMath.log10(0.0F);
      int int0 = FastMath.max(3271, (-1948));
      double double6 = FastMath.cosh(0.3153223395347595);
      double double7 = FastMath.toRadians((-1509.669719729935));
      double double8 = FastMath.expm1(5.261908426442558E-7);
      double double9 = FastMath.ceil(3271);
      double double10 = FastMath.cos((-26.348707226947365));
      double double11 = FastMath.nextUp((-1320.171003));
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      int int0 = FastMath.min((-192), (-873));
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      long long0 = FastMath.max(0L, 1012L);
      double double0 = FastMath.ulp(1012L);
      int int0 = FastMath.min(2880, 2880);
      double double1 = FastMath.random();
      double double2 = FastMath.atanh(2274.708);
      double double3 = FastMath.log10(2.563009154379015E-7);
      double double4 = FastMath.ceil(1.1368683772161603E-13);
      float float0 = FastMath.abs((float) 2880);
      double double5 = FastMath.sin((-20.0));
      double double6 = FastMath.cbrt(1012L);
      double double7 = FastMath.expm1((-0.9129452507276277));
      double double8 = FastMath.cosh(3.0095696738628313);
      long long1 = FastMath.min((long) 2880, 1012L);
      double double9 = FastMath.signum((-0.9129452507276277));
      double double10 = FastMath.ceil(112.0963634);
      double double11 = FastMath.tan((-8.0E298));
      double double12 = FastMath.floor(112.0963634);
      double double13 = FastMath.log1p(112.0963634);
      double double14 = FastMath.ceil(4.728240228758975);
      double double15 = FastMath.pow((-20.0), (-680.8153));
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      double double0 = FastMath.ulp((-771.20735));
      double double1 = FastMath.exp(0.8109631538391113);
      float float0 = FastMath.max(0.0F, (-539.3F));
      double double2 = FastMath.toRadians(2.250074110871772);
      double double3 = FastMath.expm1(0.0);
      double double4 = FastMath.nextAfter(0.0, (-539.3F));
      double double5 = FastMath.log(0.0F);
      double double6 = FastMath.cbrt(0.0);
      double double7 = FastMath.log1p(1.1368683772161603E-13);
      double double8 = FastMath.rint(0.0F);
      double double9 = FastMath.max(1.1368683772160957E-13, 0.0);
      double double10 = FastMath.max((double) 0.0F, 483.6407);
      double double11 = FastMath.atan(1.0);
      double double12 = FastMath.cos((-3025.455626));
      int int0 = FastMath.min(3036, 7);
      float float1 = FastMath.abs(0.0F);
      double double13 = FastMath.cos(14.101419947171719);
  }
}
