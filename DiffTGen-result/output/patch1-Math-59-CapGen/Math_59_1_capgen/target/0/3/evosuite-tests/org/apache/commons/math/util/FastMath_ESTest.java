/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 29 04:04:30 GMT 2020
 */

package org.apache.commons.math.util;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.math.util.FastMath;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FastMath_ESTest extends FastMath_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double double0 = FastMath.exp(1292.93593);
      double double1 = FastMath.asinh(1292.93593);
      double double2 = FastMath.log1p(1292.93593);
      double double3 = FastMath.sin((-691.08));
      double double4 = FastMath.acos((-2629.714913065));
      double double5 = FastMath.tanh((-2629.714913065));
      double double6 = FastMath.exp(Double.NaN);
      double double7 = FastMath.acos(0.1111111111111111);
      double double8 = FastMath.nextAfter(1292.93593, (-1.0));
      double double9 = FastMath.rint(7.1654439606974725);
      double double10 = FastMath.asinh(0.07032569203049324);
      double double11 = FastMath.cos(1574.23);
      double double12 = FastMath.nextUp(908.174699255);
      double double13 = FastMath.cos((-0.9576468636353571));
      double double14 = FastMath.nextAfter(0.25534192122103627, 7.857818156223131);
      double double15 = FastMath.abs(1.4594553124539327);
      double double16 = FastMath.cbrt(3521.281);
      double double17 = FastMath.ulp(7.857818156223131);
      double double18 = FastMath.cbrt((-2265.4647453372013));
      double double19 = FastMath.tan((-2265.4647453372013));
      double double20 = FastMath.floor(0.25534192122103627);
      double double21 = FastMath.asin((-567.2065844315));
      double double22 = FastMath.abs(0.07032569203049324);
      double double23 = FastMath.asin((-2265.4647453372013));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double double0 = FastMath.exp(1.0);
      double double1 = FastMath.cosh(2.718281828459045);
      double double2 = FastMath.cosh(7.610125138662287);
      double double3 = FastMath.cosh(1.0);
      double double4 = FastMath.abs(0.031);
      double double5 = FastMath.sinh(287.887);
      double double6 = FastMath.asinh(0.30999227291532394);
      double double7 = FastMath.floor(7.610125138662287);
      double double8 = FastMath.exp((-439.67211));
      double double9 = FastMath.rint(0.031);
      double double10 = FastMath.nextAfter(0.031, 5.329733773152467E124);
      Random.setNextRandom(40);
      double double11 = FastMath.asinh(131.1979739);
      double double12 = FastMath.sinh(0.0);
      double double13 = FastMath.acosh(0.031);
      double double14 = FastMath.abs(7.610125138662287);
      double double15 = FastMath.acosh(1139.8543135146865);
      double double16 = FastMath.sin(7.610125138662287);
      double double17 = FastMath.atan2(0.031, 5.569869137782595);
      double double18 = FastMath.log1p((-1468.0));
      double double19 = FastMath.sqrt((-8.0E298));
      double double20 = FastMath.rint(1.0);
      double double21 = FastMath.sinh(1.0);
      double double22 = FastMath.abs(Double.NaN);
      double double23 = FastMath.pow((-4.503599627370496E15), 1.0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      float float0 = FastMath.abs((-1.0F));
      double double0 = FastMath.atanh(1.0F);
      double double1 = FastMath.floor(Double.POSITIVE_INFINITY);
      double double2 = FastMath.asin(Double.POSITIVE_INFINITY);
      double double3 = FastMath.cbrt(1198.8400021734);
      double double4 = FastMath.nextAfter((-1.0F), (-1.0));
      double double5 = FastMath.cos((-1.0000000000000002));
      double double6 = FastMath.sqrt((-1.0));
      double double7 = FastMath.cbrt(788.599787);
      Random.setNextRandom(294);
      Random.setNextRandom(4241);
      double double8 = FastMath.rint(4241);
      double double9 = FastMath.cosh((-255.80472));
      double double10 = FastMath.asinh(1691.86241045601);
      Random.setNextRandom(294);
      double double11 = FastMath.random();
      double double12 = FastMath.cosh((-255.80472));
      double double13 = FastMath.acosh(294);
      double double14 = FastMath.floor((-8.0E298));
      double double15 = FastMath.abs(6.216534456191679E110);
      double double16 = FastMath.exp((-1125.209471827634));
      double double17 = FastMath.atanh((-0.09088450866185192));
      double double18 = FastMath.random();
      int int0 = FastMath.abs(4241);
      Random.setNextRandom(13);
      float float1 = FastMath.abs((-1703.0F));
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double double0 = FastMath.pow((-3012.213587744), (-251.4120298787));
      double double1 = FastMath.sin((-2947.79));
      double double2 = FastMath.ulp(1.0);
      double double3 = FastMath.floor(2.220446049250313E-16);
      double double4 = FastMath.pow(4.503599627370496E15, (-1752.2743416));
      double double5 = FastMath.random();
      double double6 = FastMath.random();
      double double7 = FastMath.signum(Double.NaN);
      double double8 = FastMath.floor(2.220446049250313E-16);
      double double9 = FastMath.tan(2.0430806348152437);
      double double10 = FastMath.nextAfter(Double.NaN, (-2969.52548));
      int int0 = FastMath.abs((-1719));
      double double11 = FastMath.signum(0.5);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double double0 = FastMath.pow(2895.53330662128, 2895.53330662128);
      double double1 = FastMath.sinh(655.54379444);
      double double2 = FastMath.sinh((-2.356194490192345));
      double double3 = FastMath.log1p((-2.356194490192345));
      double double4 = FastMath.abs((-404.810549962831));
      double double5 = FastMath.ulp(Double.POSITIVE_INFINITY);
      double double6 = FastMath.atan2((-8.470329472543003E-22), (-8.0E298));
      double double7 = FastMath.sin(Double.POSITIVE_INFINITY);
      double double8 = FastMath.asinh((-8.0E298));
      double double9 = FastMath.asinh(357.3966786);
      double double10 = FastMath.cosh(651.44947);
      double double11 = FastMath.cbrt(Double.NEGATIVE_INFINITY);
      double double12 = FastMath.asin((-54.0808));
      int int0 = FastMath.abs((-2742));
      double double13 = FastMath.asin(8.0E298);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double double0 = FastMath.toRadians(0.0);
      double double1 = FastMath.log10((-3454.23405));
      double double2 = FastMath.log1p(57.2957763671875);
      double double3 = FastMath.acos(1.366701124672226);
      double double4 = FastMath.rint((-3345.7023283128565));
      double double5 = FastMath.log1p(4.065529644200123);
      double double6 = FastMath.rint(1.560070049119026);
      double double7 = FastMath.max((-1162.9093848358), 1.2331016983979697);
      double double8 = FastMath.ulp(3.410491133089812E-7);
      int int0 = FastMath.round(1420.0F);
      int int1 = FastMath.min(1420, (-2293));
      double double9 = FastMath.nextAfter((-2813.38754), 0.0);
      double double10 = FastMath.log10(8.251545029714408E-9);
      int int2 = FastMath.max(1420, (-2293));
      double double11 = FastMath.log1p((-2288.8507));
      double double12 = FastMath.cos((-2813.38754));
      double double13 = FastMath.nextAfter(0.0, (-3345.7023283128565));
      double double14 = FastMath.abs((-8.083464725988721));
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double double0 = FastMath.asinh(0.0);
      double double1 = FastMath.abs(0.0);
      double double2 = FastMath.sqrt(0.0);
      double double3 = FastMath.nextAfter(0.0, (-540.83203650456));
      double double4 = FastMath.sqrt((-0.570259372614762));
      double double5 = FastMath.nextUp((-540.83203650456));
      double double6 = FastMath.ulp(0.0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      double double0 = FastMath.exp(0.19454771280288696);
      double double1 = FastMath.sqrt(0.19454771280288696);
      double double2 = FastMath.floor(1.2147614411755536);
      int int0 = FastMath.abs((-246));
      double double3 = FastMath.cbrt(1.2147614411755536);
      double double4 = FastMath.ulp(2213.8993534);
      long long0 = FastMath.max((long) 246, 1L);
      double double5 = FastMath.sinh(1L);
      double double6 = FastMath.log10(1.0);
      long long1 = FastMath.abs(1L);
      double double7 = FastMath.rint(0.19454771280288696);
      double double8 = FastMath.toDegrees(3100.18);
      double double9 = FastMath.min(1.0, 1.0);
      double double10 = FastMath.sin(177627.22973086755);
      double double11 = FastMath.expm1(0.0);
      double double12 = FastMath.toDegrees(177627.22973086755);
      double double13 = FastMath.tan(0.9305076599121094);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double double0 = FastMath.log1p(631.3588859617114);
      int int0 = FastMath.min(1, (-2188));
      double double1 = FastMath.log1p((-2999.128759));
      long long0 = FastMath.max((long) (-2188), 0L);
      double double2 = FastMath.ceil((-2999.128759));
      double double3 = FastMath.atan2((-2188), (-775.225032656319));
      double double4 = FastMath.signum(83.6525955478);
      double double5 = FastMath.nextAfter((-2188), 0L);
      long long1 = FastMath.max((long) (-2188), 0L);
      double double6 = FastMath.toDegrees((-18.43086276236962));
      double double7 = FastMath.floor((-2999.128759));
      int int1 = FastMath.round(0.0F);
      double double8 = FastMath.toDegrees(3.171357693770103);
      double double9 = FastMath.atan2((-357.03928015), (-775.225032656319));
      double double10 = FastMath.cosh((-2.7099900680471602));
      double double11 = FastMath.ceil(6.449457090511133);
      long long2 = FastMath.max((long) (-2188), 0L);
      double double12 = FastMath.atan2((-18.43086276236962), 0L);
      double double13 = FastMath.tan((-3000.0));
      double double14 = FastMath.atan2(450.0, (-18.43086276236962));
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double double0 = FastMath.atan2(1.8358548930975745E-7, 1.8358548930975745E-7);
      double double1 = FastMath.atan2(1181.051995983451, 1181.051995983451);
      int int0 = FastMath.abs(3033);
      double double2 = FastMath.rint(1.8358548930975745E-7);
      long long0 = FastMath.round(0.7853981633974483);
      double double3 = FastMath.log10(0.7853981633974483);
      double double4 = FastMath.toRadians(0.0);
      double double5 = FastMath.floor(0.333333333333333);
      double double6 = FastMath.tan(1181.051995983451);
      double double7 = FastMath.min(0.7316888570785522, 0.0);
      double double8 = FastMath.cosh(2.7553817452272217E-6);
      double double9 = FastMath.expm1(0.333333333333333);
      double double10 = FastMath.ceil((-4707.3967868));
      long long1 = FastMath.min(0L, (-1629L));
      double double11 = FastMath.ulp((-1.0));
      double double12 = FastMath.atan2(1L, 0.7853981633974483);
      double double13 = FastMath.nextUp(923.0);
      double double14 = FastMath.expm1(0.0);
      double double15 = FastMath.abs(0.0);
      double double16 = FastMath.asin((-4707.3967868));
      double double17 = FastMath.asin(1.8358548930975745E-7);
      int int1 = FastMath.min((-2001), (-2001));
      double double18 = FastMath.pow((-1629L), (-1629L));
      double double19 = FastMath.sinh(1.000000000003796);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = FastMath.round((-104.0F));
      double double0 = FastMath.asin((-104));
      double double1 = FastMath.pow((-8.0E298), (-104));
      double double2 = FastMath.asinh(4.5767985959803);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int int0 = FastMath.max(1, 1);
      double double0 = FastMath.ceil((-224.2475464348455));
      int int1 = FastMath.min(1467, 1467);
      double double1 = FastMath.atanh(6.123233995736766E-17);
      double double2 = FastMath.sqrt(6.123233995736766E-17);
      double double3 = FastMath.max((double) 1467, 6.123233995736766E-17);
      double double4 = FastMath.asinh(6.123233995736766E-17);
      double double5 = FastMath.atanh(4480.7432457898);
      double double6 = FastMath.log10(14.136832902969902);
      double double7 = FastMath.rint(1467);
      double double8 = FastMath.expm1(1.0);
      float float0 = FastMath.abs((float) 1467);
      double double9 = FastMath.signum((-1.0));
      double double10 = FastMath.expm1((-6.663542893624021E-14));
      double double11 = FastMath.sin((-2031.80292544));
      double double12 = FastMath.cos(4295.44557343);
      double double13 = FastMath.cos((-224.2475464348455));
      double double14 = FastMath.ulp((-0.16624879837036133));
      double double15 = FastMath.cos((-3417.218));
      float float1 = FastMath.max((-1070.7577F), 148.07805F);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double double0 = FastMath.acos(765.9891732628);
      int int0 = FastMath.abs(1698);
      double double1 = FastMath.acos(Double.NaN);
      int int1 = FastMath.round((float) 1698);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      float float0 = FastMath.max(0.0F, 0.0F);
      double double0 = FastMath.cosh(0.0F);
      double double1 = FastMath.asin((-3009.818943));
      double double2 = FastMath.rint(1.0);
      float float1 = FastMath.max(0.0F, 1.0F);
      double double3 = FastMath.tan(1.0);
      double double4 = FastMath.log1p(0.07073719799518585);
      long long0 = FastMath.abs(598L);
      long long1 = FastMath.min((-1033L), (-1033L));
      double double5 = FastMath.log1p((-0.16666666666666666));
      double double6 = FastMath.abs(1.5574077246549023);
      long long2 = FastMath.round(1.5574077246549023);
      double double7 = FastMath.cbrt(598L);
      double double8 = FastMath.acosh((-4517.0));
      double double9 = FastMath.atan(0.0F);
      int int0 = FastMath.min(1023, 1403);
      float float2 = FastMath.abs((float) 1023);
      double double10 = FastMath.atan2(0.7214844409909045, 598L);
      double double11 = FastMath.min((-0.5), (double) 1023.0F);
      double double12 = FastMath.asin((-3023.546));
      double double13 = FastMath.ulp(0.07073719799518585);
      double double14 = FastMath.cosh((-0.16666666666666666));
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int int0 = FastMath.min(435, 435);
      double double0 = FastMath.abs((double) 435);
      int int1 = FastMath.min(435, 435);
      double double1 = FastMath.atan2(435.0, 3.4620039155736807E-7);
      double double2 = FastMath.sin(435);
      float float0 = FastMath.min(0.0F, 1347.8F);
      double double3 = FastMath.asin(1.074682223392077);
      double double4 = FastMath.cosh(435);
      float float1 = FastMath.min(1164.0F, 0.0F);
      double double5 = FastMath.toRadians((-1331.468820172431));
      double double6 = FastMath.sin(2.319235767811865);
      double double7 = FastMath.acos((-3.940510424527919E-20));
      double double8 = FastMath.tan(1.0);
      double double9 = FastMath.max(1219.2804846656222, 1.0);
      double double10 = FastMath.sqrt(435.0);
      double double11 = FastMath.asin((-1324.8));
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      double double0 = FastMath.sinh(30.7);
      float float0 = FastMath.abs(0.0F);
      double double1 = FastMath.acosh(1.0759958560929648E13);
      long long0 = FastMath.round((double) 0.0F);
      double double2 = FastMath.max(2781.17818, (double) 0.0F);
      int int0 = FastMath.round((float) 0L);
      double double3 = FastMath.max((double) 0.0F, (double) 0.0F);
      double double4 = FastMath.sqrt(0.0);
      double double5 = FastMath.cbrt(0.0);
      double double6 = FastMath.nextUp(0.0);
      float float1 = FastMath.min((float) 0L, 0.0F);
      long long1 = FastMath.round(3.001117512531765E-7);
      double double7 = FastMath.ulp(1.0);
      float float2 = FastMath.abs(0.0F);
      long long2 = FastMath.max(2935890503282001226L, 2612L);
      double double8 = FastMath.exp(2612L);
      double double9 = FastMath.asin(1.0);
      int int1 = FastMath.min(642, 642);
      double double10 = FastMath.ulp(1.5707963267948966);
      double double11 = FastMath.min((double) 2935890503282001226L, (double) 0.0F);
      double double12 = FastMath.PI;
      double double13 = FastMath.ceil(1388.930569);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      long long0 = FastMath.max((-1985L), (-1L));
      double double0 = FastMath.acosh((-1508.6998402079223));
      float float0 = FastMath.abs((float) (-1L));
      double double1 = FastMath.ceil(0.01745329052209854);
      long long1 = FastMath.min(1L, 0L);
      long long2 = FastMath.round((-4.469603409122654E-6));
      double double2 = FastMath.tanh(Double.NaN);
      double double3 = FastMath.atan2(1.0, 14.136832902969902);
      double double4 = FastMath.signum(0.8775825500488281);
      double double5 = FastMath.asinh(744.628644688);
      double double6 = FastMath.random();
      double double7 = FastMath.acos((-2858.62818737));
      double double8 = FastMath.log10(2022.9818);
      double double9 = FastMath.pow(0.0, 1.0);
      float float1 = FastMath.max((float) 0L, (float) (-1985L));
      int int0 = FastMath.abs((-2795));
      double double10 = FastMath.acos(1.2246467991473532E-16);
      double double11 = FastMath.random();
      double double12 = FastMath.cos(0.0);
      double double13 = FastMath.log10((-4.469603409122654E-6));
      double double14 = FastMath.acos(1.0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      long long0 = FastMath.max(0L, 0L);
      float float0 = FastMath.max((float) 0L, (float) 0L);
      double double0 = FastMath.sinh(163.68393);
      double double1 = FastMath.sin(0L);
      double double2 = FastMath.cosh(1598.9609677590652);
      double double3 = FastMath.cosh(0.0);
      double double4 = FastMath.expm1(0.0);
      double double5 = FastMath.toRadians(2113.841483118);
      double double6 = FastMath.log(1.0);
      double double7 = FastMath.asin(Double.POSITIVE_INFINITY);
      double double8 = FastMath.nextUp((-1833.280261));
      double double9 = FastMath.asin(2260.8145);
      double double10 = FastMath.cbrt(2.4384203044354907E-8);
      double double11 = FastMath.cos(163.68393);
      long long1 = FastMath.abs(0L);
      double double12 = FastMath.asin((-586.249));
      double double13 = FastMath.sqrt((-429.5));
      int int0 = FastMath.abs(15);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      double double0 = FastMath.acos(2371.7038609);
      double double1 = FastMath.acos(882.304);
      double double2 = FastMath.asin(112.0);
      double double3 = FastMath.tan(2371.7038609);
      double double4 = FastMath.exp(Double.NaN);
      double double5 = FastMath.atan(2371.7038609);
      double double6 = FastMath.sin(Double.NaN);
      double double7 = FastMath.log10((-649.416165073956));
      double double8 = FastMath.nextUp(Double.NaN);
      double double9 = FastMath.atan2(942.43, 1.8358548930975745E-7);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      double double0 = FastMath.toRadians(229.7534093883394);
      double double1 = FastMath.signum(4.009953461508974);
      double double2 = FastMath.tan(0.19454771280288696);
      double double3 = FastMath.signum(4.009953461508974);
      double double4 = FastMath.min(5.261908426442558E-7, 0.19454771280288696);
      double double5 = FastMath.log10(229.7534093883394);
      float float0 = FastMath.min(Float.NaN, Float.NaN);
      double double6 = FastMath.atanh(298.0095639691227);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      int int0 = FastMath.min(817, (-1));
      long long0 = FastMath.max(4031L, 4031L);
      double double0 = FastMath.expm1((-1));
      double double1 = FastMath.log1p(817);
      double double2 = FastMath.log1p(137.6874015);
      double double3 = FastMath.toDegrees((-8.0E298));
      long long1 = FastMath.min(4031L, (long) 817);
      long long2 = FastMath.min((long) 817, (long) 817);
      double double4 = FastMath.tanh(0.7937005259840998);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      double double0 = FastMath.expm1((-535.0379017026968));
      double double1 = FastMath.min((-1.0), (-1.0));
      long long0 = FastMath.abs(0L);
      float float0 = FastMath.max((float) 0L, 0.0F);
      double double2 = FastMath.cosh((-1217.4));
      double double3 = FastMath.nextUp((-1.0));
      double double4 = FastMath.cbrt(14.136832902969902);
      double double5 = FastMath.min(0.7214844409909045, 3085.80423);
      double double6 = FastMath.pow(1.139493927324549, 1042.5770048);
      double double7 = FastMath.rint(247.0);
      double double8 = FastMath.abs((-535.0379017026968));
      double double9 = FastMath.exp(8.0E298);
      double double10 = FastMath.rint(1.3385752328713065E59);
      double double11 = FastMath.asin(2.417968886505087);
      double double12 = FastMath.floor(Double.NEGATIVE_INFINITY);
      double double13 = FastMath.sinh(0.0F);
      int int0 = FastMath.min(1431655765, 1431655765);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      double double0 = FastMath.random();
      double double1 = FastMath.sinh(1.0);
      double double2 = FastMath.sin(0.8775825500488281);
      double double3 = FastMath.log1p(0.7691963472741135);
      double double4 = FastMath.log10(1.633123935319537E16);
      double double5 = FastMath.rint(1.8508157176809257);
      double double6 = FastMath.asinh((-1.0));
      double double7 = FastMath.signum((-1.0));
      double double8 = FastMath.acosh(960.1);
      double double9 = FastMath.atanh(7.560184355052558);
      double double10 = FastMath.tan((-2016.8839607707237));
      double double11 = FastMath.abs(16.21301914394243);
      double double12 = FastMath.tanh(2.0);
      double double13 = FastMath.asinh(3.4620039155736807E-7);
      double double14 = FastMath.nextUp((-1.0));
      double double15 = FastMath.max((-1.0), 1.0);
      double double16 = FastMath.expm1(1.0);
      double double17 = FastMath.expm1((-2216.483157583668));
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      double double0 = FastMath.asinh((-2127.7723));
      double double1 = FastMath.asinh((-2127.7723));
      double double2 = FastMath.rint(962.469278);
      double double3 = FastMath.log10(962.0);
      long long0 = FastMath.round(2.983175072037813);
      double double4 = FastMath.atanh(6.951502372232782E-7);
      double double5 = FastMath.log10(6.951502372233902E-7);
      int int0 = FastMath.abs(0);
      double double6 = FastMath.atanh(0.0);
      double double7 = FastMath.toRadians((-2924.05482));
      double double8 = FastMath.max(1.139493927324549, (-3026.725880226461));
      int int1 = FastMath.abs(54);
      double double9 = FastMath.rint(54);
      double double10 = FastMath.atan2(0.0, 3L);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      double double0 = FastMath.cos(81.0514);
      double double1 = FastMath.expm1((-1207.65));
      double double2 = FastMath.max((-1.0), 152.218);
      double double3 = FastMath.atanh((-1170.58));
      int int0 = FastMath.round(1.0F);
      double double4 = FastMath.nextUp(152.218);
      long long0 = FastMath.round(648.326935241);
      double double5 = FastMath.atan((-1170.58));
      double double6 = FastMath.nextUp(152.21800000000002);
      double double7 = FastMath.ceil((-1207.65));
      double double8 = FastMath.asinh(152.21800000000005);
      double double9 = FastMath.max((-1170.58), 0.5403022766113281);
      long long1 = FastMath.round((-8.0E298));
      double double10 = FastMath.cos(5.718471673925936);
      double double11 = FastMath.sqrt((-2191.42397800699));
      double double12 = FastMath.random();
      double double13 = FastMath.atanh((-1952.288526));
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      double double0 = FastMath.log1p(5.140127377170679);
      double double1 = FastMath.max(1.8148454874114042, 1741.947687422111);
      double double2 = FastMath.sqrt(1741.947687422111);
      double double3 = FastMath.nextAfter(0.125, (-1.0));
      double double4 = FastMath.nextAfter(0.0, 1236.162);
      double double5 = FastMath.exp(40.19140625);
      double double6 = FastMath.abs(0.12499999999999999);
      double double7 = FastMath.atan(40.19140625);
      double double8 = FastMath.ulp(41.736646815743484);
      long long0 = FastMath.abs(0L);
      double double9 = FastMath.sqrt(2.6365310530323782E-6);
      double double10 = FastMath.ulp(0.125);
      double double11 = FastMath.exp(0.125);
      double double12 = FastMath.log10(1640.7197034558162);
      double double13 = FastMath.abs((-1710.8373629));
      double double14 = FastMath.log1p(2.6365310530323782E-6);
      int int0 = FastMath.abs(1035090420);
      double double15 = FastMath.nextAfter(1141.6088, 2615.263527378858);
      double double16 = FastMath.log1p(1.5459205183532614);
      double double17 = FastMath.log((-232.56));
      double double18 = FastMath.sin((-2256.0));
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      double double0 = FastMath.log10((-481.0));
      double double1 = FastMath.max((-481.0), (-481.0));
      double double2 = FastMath.cos(Double.NaN);
      double double3 = FastMath.cbrt(Double.NaN);
      double double4 = FastMath.max(Double.NaN, (-4014.91));
      double double5 = FastMath.toDegrees(1.8508157176809257);
      double double6 = FastMath.ulp((-433.0028));
      double double7 = FastMath.log10((-55.618253467));
      double double8 = FastMath.abs(0.0);
      double double9 = FastMath.acosh((-481.0));
      double double10 = FastMath.random();
      float float0 = FastMath.min((-17.4F), (-1.0F));
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      double double0 = FastMath.toRadians(1.366701124672226);
      float float0 = FastMath.abs(3539.7793F);
      double double1 = FastMath.pow((-439.9981819633), (-4633.9285));
      double double2 = FastMath.cbrt(0.0);
      double double3 = FastMath.log1p(2.6365310530323782E-6);
      double double4 = FastMath.sin(0.0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      double double0 = FastMath.signum(5.041915256481364);
      double double1 = FastMath.atanh(1.0);
      double double2 = FastMath.rint(Double.POSITIVE_INFINITY);
      double double3 = FastMath.acos(1.0);
      double double4 = FastMath.toRadians(Double.POSITIVE_INFINITY);
      double double5 = FastMath.ceil(Double.NaN);
      double double6 = FastMath.max((-681.7719010486), (-681.7719010486));
      double double7 = FastMath.sinh((-681.7719010486));
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      double double0 = FastMath.sin((-2322.126235570685));
      double double1 = FastMath.sqrt(0.4699768649872941);
      double double2 = FastMath.log1p(0.4699768649872941);
      double double3 = FastMath.sqrt((-18.43086276236962));
      double double4 = FastMath.ceil((-1.0));
      long long0 = FastMath.max(0L, 0L);
      double double5 = FastMath.nextAfter((-2116.8205), (-18.43086276236962));
      double double6 = FastMath.min((double) 0L, 3.171357693770103);
      float float0 = FastMath.min((-2439.3042F), 1516.1238F);
      double double7 = FastMath.tanh(909.8748942971447);
      float float1 = FastMath.abs((-2439.3042F));
      int int0 = FastMath.round((-1.0F));
      double double8 = FastMath.abs((-1.0));
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      double double0 = FastMath.sinh((-848.61368775069));
      double double1 = FastMath.cos(Double.NEGATIVE_INFINITY);
      double double2 = FastMath.cos(0.8775825500488281);
      double double3 = FastMath.abs(0.8775825500488281);
      double double4 = FastMath.ulp((-1510.1533295));
      long long0 = FastMath.max((-4181L), (-4181L));
      double double5 = FastMath.tanh((-587.5));
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      int int0 = FastMath.abs((-11));
      double double0 = FastMath.acos(1.5574077246549023);
      double double1 = FastMath.random();
      double double2 = FastMath.toDegrees(1.0);
      double double3 = FastMath.asinh(57.29577951308232);
      double double4 = FastMath.sinh(0.9305076599121094);
      double double5 = FastMath.ceil((-0.5));
      int int1 = FastMath.abs((-11));
      float float0 = FastMath.min((float) (-11), 795.7F);
      double double6 = FastMath.acosh((-0.5));
      double double7 = FastMath.expm1(2461.109990095258);
      double double8 = FastMath.min(1.0, (-1.0));
      double double9 = FastMath.acos(11);
      double double10 = FastMath.ulp(1.0707213554357788);
      double double11 = FastMath.max(-0.0, (double) 795.7F);
      float float1 = FastMath.abs((-788.587F));
      double double12 = FastMath.asin(Double.NaN);
      double double13 = FastMath.atan2(0.7316888570785522, 57.29577951308232);
      double double14 = FastMath.tan(0.7316888570785522);
      double double15 = FastMath.cos((-1.0));
      double double16 = FastMath.ulp((-0.5));
      double double17 = FastMath.toRadians(795.7F);
      long long0 = FastMath.abs((long) 11);
      double double18 = FastMath.cosh(2.220446049250313E-16);
      double double19 = FastMath.log1p(Double.POSITIVE_INFINITY);
      double double20 = FastMath.signum(Double.POSITIVE_INFINITY);
      double double21 = FastMath.toRadians(0.9315964599440725);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      double double0 = FastMath.acos(0.0);
      double double1 = FastMath.tanh(1.5707963267948966);
      int int0 = FastMath.min((-1043), 0);
      double double2 = FastMath.sqrt(0);
      double double3 = FastMath.nextUp((-18.43086276236962));
      int int1 = FastMath.max(0, (-1043));
      double double4 = FastMath.acos(0.9171523356672744);
      double double5 = FastMath.expm1(1697.9);
      double double6 = FastMath.sinh(4.0);
      double double7 = FastMath.toDegrees(6.951502372232782E-7);
      double double8 = FastMath.min((-18.43086276236962), 1454.6088);
      double double9 = FastMath.pow(0, (-876.0858811907));
      double double10 = FastMath.asin((-18.43086276236962));
      double double11 = FastMath.atan(0.0);
      double double12 = FastMath.cosh(3.982917472041182E-5);
      double double13 = FastMath.log10(27.289917197127753);
      float float0 = FastMath.min((-1654.8F), 0.0F);
      double double14 = FastMath.max(0.0, 1.4360022179386742);
      double double15 = FastMath.ceil(3254.131);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      double double0 = FastMath.log((-18.43086276236962));
      double double1 = FastMath.tan(Double.NaN);
      int int0 = FastMath.max(18, 18);
      double double2 = FastMath.ulp(Double.NaN);
      long long0 = FastMath.abs((long) 18);
      double double3 = FastMath.nextAfter(18L, 1176.3017);
      double double4 = FastMath.asin(Double.NaN);
      double double5 = FastMath.sqrt(18.000000000000004);
      double double6 = FastMath.sinh(3203.897199259276);
      double double7 = FastMath.abs(3338.0);
      double double8 = FastMath.pow(18L, Double.NaN);
      double double9 = FastMath.max(4360.727842890244, 0.5403022766113281);
      double double10 = FastMath.toDegrees(18);
      long long1 = FastMath.abs(0L);
      double double11 = FastMath.rint(18);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      double double0 = FastMath.min(0.14285714285714285, 0.14285714285714285);
      double double1 = FastMath.asin(1.074682223392077);
      double double2 = FastMath.floor(-0.0);
      double double3 = FastMath.expm1(-0.0);
      double double4 = FastMath.acos(2239.524054);
      double double5 = FastMath.tanh((-0.05417713522911072));
      double double6 = FastMath.sqrt(2055.7623135027);
      double double7 = FastMath.ceil(0.7214844409909045);
      double double8 = FastMath.cosh(0.9305076599121094);
      double double9 = FastMath.acos(0.9305076599121094);
      double double10 = FastMath.tanh(Double.NaN);
      double double11 = FastMath.atanh(14.136832902969902);
      double double12 = FastMath.nextAfter(1609.110022233, -0.0);
      double double13 = FastMath.exp(2282.5840373153974);
      double double14 = FastMath.nextAfter(2282.5840373153974, Double.POSITIVE_INFINITY);
      long long0 = FastMath.abs((-1615L));
      double double15 = FastMath.atan2(0.9305076599121094, Double.POSITIVE_INFINITY);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      int int0 = FastMath.abs(2372);
      double double0 = FastMath.abs((-18.457971236441537));
      double double1 = FastMath.min((double) 2372, (double) 2372);
      double double2 = FastMath.pow(2372, 18.457971236441537);
      double double3 = FastMath.asin(5.261908426442558E-7);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      float float0 = FastMath.abs(1018.742F);
      double double0 = FastMath.cbrt(1018.742F);
      double double1 = FastMath.nextAfter(0.0, 0.0);
      int int0 = FastMath.min(1204, 1204);
      double double2 = FastMath.abs(0.8109631538391113);
      double double3 = FastMath.atanh(3.001117512531765E-7);
      long long0 = FastMath.max(2750L, 2750L);
      double double4 = FastMath.tan((-0.05417713522911072));
      double double5 = FastMath.atan(1018.742F);
      double double6 = FastMath.tan((-0.05417713522911072));
      double double7 = FastMath.floor((-0.05423020375840629));
      float float1 = FastMath.max(1181.5065F, (float) 1204);
      long long1 = FastMath.min(2750L, 140L);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      double double0 = FastMath.asin((-1418.12));
      double double1 = FastMath.signum((-1418.12));
      double double2 = FastMath.exp((-1418.12));
      double double3 = FastMath.random();
      double double4 = FastMath.floor(0.0);
      long long0 = FastMath.round(0.6366197723675814);
      double double5 = FastMath.max(20.0, Double.NaN);
      double double6 = FastMath.tan(0.0);
      long long1 = FastMath.round((double) 1L);
      double double7 = FastMath.abs((-635.494988057));
      double double8 = FastMath.floor((-1418.12));
      double double9 = FastMath.rint(0.6366197723675814);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      double double0 = FastMath.cbrt(3662.8478);
      double double1 = FastMath.nextAfter(0.167, 15.41486140569232);
      long long0 = FastMath.round((-429.43523232286));
      double double2 = FastMath.pow((-429L), 0.16700000000000004);
      double double3 = FastMath.signum(3662.8478);
      double double4 = FastMath.floor(Double.NaN);
      int int0 = FastMath.round((float) (-429L));
      double double5 = FastMath.acos(0.16700000000000004);
      int int1 = FastMath.abs(588);
      double double6 = FastMath.rint(0.16700000000000004);
      double double7 = FastMath.atan2(2999.919718604956, 0.10526403784751892);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      int int0 = FastMath.round(0.0F);
      float float0 = FastMath.abs(0.0F);
      double double0 = FastMath.sinh(0.0F);
      double double1 = FastMath.cos(0.0F);
      double double2 = FastMath.ulp(0.0F);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      double double0 = FastMath.tanh((-4603.94989));
      double double1 = FastMath.tan((-4603.94989));
      double double2 = FastMath.max((-4603.94989), 0.0);
      double double3 = FastMath.signum((-1.0));
      float float0 = FastMath.abs((-1693.7242F));
      double double4 = FastMath.atanh(1389.6640141905);
      int int0 = FastMath.min(514816443, 514816443);
      double double5 = FastMath.tan((-1095.5106428953197));
      double double6 = FastMath.cos((-2163.0));
      long long0 = FastMath.max(0L, (long) 514816443);
      int int1 = FastMath.abs((-1951));
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      double double0 = FastMath.sqrt(14.136832902969902);
      double double1 = FastMath.cosh(14.136832902969902);
      long long0 = FastMath.abs((-4035746434778044925L));
      double double2 = FastMath.ulp((-944.228162));
      double double3 = FastMath.asin(684.9421620603);
      double double4 = FastMath.tan(14.136832902969902);
      double double5 = FastMath.exp(14.136832902969902);
      float float0 = FastMath.min((-3206.649F), (float) 4035746434778044925L);
      double double6 = FastMath.log(3.7598979910324566);
      double double7 = FastMath.toDegrees((-944.228162));
      double double8 = FastMath.toRadians(1716.46482571);
      double double9 = FastMath.max((-54100.28857999497), 689475.0034545574);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      double double0 = FastMath.asinh((-1.0));
      double double1 = FastMath.asin((-1.0));
      float float0 = FastMath.max((-1.0F), (-1.0F));
      double double2 = FastMath.log((-4.469603409122654E-6));
      double double3 = FastMath.expm1(0.6409968137741089);
      double double4 = FastMath.sinh((-1.0));
      double double5 = FastMath.min((-3209.0), (-1.5707963267948966));
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      double double0 = FastMath.abs(1.0);
      long long0 = FastMath.abs((-4267615245585081135L));
      double double1 = FastMath.atan((-4267615245585081135L));
      double double2 = FastMath.log1p(1.0);
      int int0 = FastMath.round((float) (-4267615245585081135L));
      int int1 = FastMath.round((float) (-4267615245585081135L));
      double double3 = FastMath.abs(1.0);
      double double4 = FastMath.acos(0.9315964599440725);
      double double5 = FastMath.log1p(Integer.MIN_VALUE);
      double double6 = FastMath.nextAfter((-980.9347772687122), Integer.MIN_VALUE);
      double double7 = FastMath.log1p(0.37201593077490336);
      int int2 = FastMath.round((-584.0F));
      double double8 = FastMath.tanh(0.9315964599440725);
      double double9 = FastMath.sin(4842.296);
      long long1 = FastMath.abs(0L);
      long long2 = FastMath.min(0L, 0L);
      double double10 = FastMath.floor(98.4);
      int int3 = FastMath.round((float) 4267615245585081135L);
      double double11 = FastMath.toDegrees(1.0);
      double double12 = FastMath.sqrt(4842.296);
      double double13 = FastMath.atan2(20.0, 0.37201593077490336);
      double double14 = FastMath.rint(1.2331016983979697);
      double double15 = FastMath.toRadians(3537.0773436733743);
      double double16 = FastMath.atan2(1.0, 1.074682223392077);
      double double17 = FastMath.sin(3.410491133089812E-7);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      long long0 = FastMath.round(2646.03075137);
      float float0 = FastMath.abs((float) 2646L);
      double double0 = FastMath.acos(2646L);
      double double1 = FastMath.ceil(Double.NaN);
      double double2 = FastMath.toDegrees(Double.NaN);
      double double3 = FastMath.exp(2646.03075137);
      double double4 = FastMath.asin(Double.POSITIVE_INFINITY);
      double double5 = FastMath.toDegrees(Double.POSITIVE_INFINITY);
      long long1 = FastMath.max((-969L), (-969L));
      double double6 = FastMath.acos((-258.651767));
      long long2 = FastMath.abs((-969L));
      float float1 = FastMath.max((-1679.3F), 0.0F);
      double double7 = FastMath.atan2(969L, Double.NaN);
      double double8 = FastMath.ulp((-88.4725673));
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      long long0 = FastMath.round((-1491.0));
      double double0 = FastMath.ulp((-551.462));
      double double1 = FastMath.min((double) (-1491L), (-2343.781941523));
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      double double0 = FastMath.toDegrees(595.1149909177);
      int int0 = FastMath.max(1, 1);
      long long0 = FastMath.abs((long) 1);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      double double0 = FastMath.signum((-658.585748517));
      double double1 = FastMath.log10(3214.55223);
      double double2 = FastMath.acos(1190.952755);
      double double3 = FastMath.pow(Double.NaN, 1190.952755);
      double double4 = FastMath.pow(1190.952755, Double.NaN);
      double double5 = FastMath.acos((-1.0));
      double double6 = FastMath.ceil((-658.585748517));
      double double7 = FastMath.expm1(Double.NaN);
      double double8 = FastMath.nextAfter(Double.NaN, (-729.4072574947));
      double double9 = FastMath.atan((-2889.2834045163));
      double double10 = FastMath.cosh((-658.0));
      double double11 = FastMath.signum((-658.585748517));
      double double12 = FastMath.tan(2297.22404634);
      double double13 = FastMath.cosh((-729.4072574947));
      int int0 = FastMath.min(0, 0);
      double double14 = FastMath.atan2(5.261908426442558E-7, 1766.1853429464);
      double double15 = FastMath.log10(0.07073719799518585);
      double double16 = FastMath.atan2((-576.6630843), 2297.22404634);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      double double0 = FastMath.tan((-488.4));
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      double double0 = FastMath.acos((-8.0E298));
      double double1 = FastMath.atan2(Double.NaN, 0.6409968137741089);
      double double2 = FastMath.rint(1841.967980055034);
      float float0 = FastMath.min((-262.12F), (-262.12F));
      double double3 = FastMath.log10((-705.2814292944955));
      double double4 = FastMath.abs(1842.0);
      double double5 = FastMath.log10(1.074682223392077);
      double double6 = FastMath.random();
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      double double0 = FastMath.signum(1336.0932);
      double double1 = FastMath.abs(2630.8064907);
      double double2 = FastMath.acosh(0.7214844409909045);
      float float0 = FastMath.min((-2155.753F), (-882.0911F));
      double double3 = FastMath.atan2(1545.30407393, 1336.0932);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      double double0 = FastMath.cbrt((-868.363705266483));
      long long0 = FastMath.min(225L, 225L);
      double double1 = FastMath.asin(225L);
      double double2 = FastMath.exp(610.864405669488);
      float float0 = FastMath.abs((float) 225L);
      double double3 = FastMath.toDegrees(610.864405669488);
      double double4 = FastMath.sinh(58.2333547864775);
      double double5 = FastMath.ceil(610.864405669488);
      double double6 = FastMath.tanh((-9.540413999831019));
      long long1 = FastMath.min(0L, 225L);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      double double0 = FastMath.asinh(1065.92970861);
      double double1 = FastMath.exp(1065.92970861);
      double double2 = FastMath.log10(2.6365310530323782E-6);
      double double3 = FastMath.toRadians(2.6365310530323782E-6);
      double double4 = FastMath.toDegrees((-4123.6876032));
      double double5 = FastMath.toRadians(1065.92970861);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      double double0 = FastMath.random();
      double double1 = FastMath.pow(1.2958646899018938E-9, 1.2958646899018938E-9);
      long long0 = FastMath.max((-1L), (-1L));
      double double2 = FastMath.random();
      double double3 = FastMath.sin(2944.1071292426);
      double double4 = FastMath.exp((-0.42124065418040046));
      double double5 = FastMath.cosh(0.6562321573929998);
      double double6 = FastMath.sin((-4.469603409122654E-6));
      double double7 = FastMath.exp((-1.0));
      double double8 = FastMath.atan2((-1L), (-1.0));
      double double9 = FastMath.max(0.6562321573929998, (-4.469603409107773E-6));
      double double10 = FastMath.log(0.0);
      double double11 = FastMath.toRadians((-0.42124065418040046));
      double double12 = FastMath.tanh(1.2958646899018938E-9);
      float float0 = FastMath.abs((float) (-1L));
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      float float0 = FastMath.max(0.0F, (-90.16F));
      double double0 = FastMath.cos(0.0F);
      double double1 = FastMath.ulp(0.0F);
      double double2 = FastMath.cosh(1.2675934823758863E-8);
      double double3 = FastMath.ulp(0.5);
      double double4 = FastMath.toRadians(0.0F);
      double double5 = FastMath.tanh(3052.0);
      double double6 = FastMath.atanh(3052.0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      double double0 = FastMath.max(14.101419947171719, 14.101419947171719);
      double double1 = FastMath.toDegrees((-4995.643194297614));
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      double double0 = FastMath.sqrt(0.0);
      long long0 = FastMath.round(0.0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      double double0 = FastMath.asin(2359.92);
      double double1 = FastMath.sinh(2359.92);
      double double2 = FastMath.ulp(1553.9771493873868);
      double double3 = FastMath.ceil(1553.9771493873868);
      double double4 = FastMath.nextUp(Double.POSITIVE_INFINITY);
      int int0 = FastMath.abs(141871392);
      int int1 = FastMath.min(141871392, 0);
      double double5 = FastMath.toDegrees(0);
      double double6 = FastMath.asinh(0.0);
      double double7 = FastMath.sin(1.5830993332061267E-10);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      double double0 = FastMath.nextAfter(3194.0403, 3194.0403);
      double double1 = FastMath.tanh(0.0);
      double double2 = FastMath.atan2(0.0, 2035.0);
      double double3 = FastMath.tanh(0.0);
      double double4 = FastMath.ceil(0.0);
      int int0 = FastMath.min(5, 1056788253);
      double double5 = FastMath.atan2(3.4620039155736807E-7, 15.0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      long long0 = FastMath.min(1546L, 1546L);
      double double0 = FastMath.ulp(0.9315964599440725);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      double double0 = FastMath.log1p(0.0);
      double double1 = FastMath.atanh(0.0);
      double double2 = FastMath.exp(596.0);
      double double3 = FastMath.abs(594.5257381018);
      long long0 = FastMath.max(0L, 2819561105158720014L);
      double double4 = FastMath.exp(0.0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      float float0 = FastMath.abs(0.0F);
      double double0 = FastMath.sin(0.0F);
      double double1 = FastMath.tanh(0.0F);
      double double2 = FastMath.cosh(0.0F);
      double double3 = FastMath.expm1(0.0F);
      long long0 = FastMath.min((-1L), 0L);
      int int0 = FastMath.min((-3353), 19);
      double double4 = FastMath.toRadians(9.220590270857665E-9);
      double double5 = FastMath.nextAfter(3211.164, 9.220590270857665E-9);
      double double6 = FastMath.nextUp(9.220590270857665E-9);
      double double7 = FastMath.cbrt(1.0);
      double double8 = FastMath.acosh((-3353));
      double double9 = FastMath.toRadians((-1L));
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      double double0 = FastMath.ulp(411.121006891);
      double double1 = FastMath.abs(0.0952233225107193);
      double double2 = FastMath.acos(0.0952233225107193);
      double double3 = FastMath.atan((-2046.0));
      double double4 = FastMath.nextAfter((-1.570307568280541), 0.0952233225107193);
      double double5 = FastMath.toRadians((-2103.7067171597955));
      double double6 = FastMath.signum(0.030589580535888672);
      long long0 = FastMath.min(7L, 1L);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      double double0 = FastMath.exp(1.5574077246549023);
      int int0 = FastMath.max((-2420), (-2420));
      long long0 = FastMath.abs((long) (-2420));
      double double1 = FastMath.expm1((-1896.2747));
      double double2 = FastMath.rint((-1.0));
      double double3 = FastMath.atan2((-2420), 3.0095696738628313);
      double double4 = FastMath.tan(3.0095696738628313);
      double double5 = FastMath.ceil(1.5574077246549023);
      double double6 = FastMath.floor((-2420));
      int int1 = FastMath.abs((-2420));
      float float0 = FastMath.max((float) 2420, 2711.13F);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      double double0 = FastMath.cosh(0.8775825500488281);
      double double1 = FastMath.tan(0.8775825500488281);
      float float0 = FastMath.abs(477.56088F);
      double double2 = FastMath.atan2(0.07073719799518585, 0.8775825500488281);
      double double3 = FastMath.cosh(477.56088F);
      double double4 = FastMath.log1p(0.07073719799518585);
      double double5 = FastMath.sqrt(1.261903301583003E207);
      double double6 = FastMath.asinh(1.261903301583003E207);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      float float0 = FastMath.max(0.0F, 915.8F);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      long long0 = FastMath.max(0L, 0L);
      double double0 = FastMath.signum(0.19454771280288696);
      double double1 = FastMath.cos(343.2099655603923);
      double double2 = FastMath.atan(0L);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      double double0 = FastMath.log10((-363.5));
      float float0 = FastMath.min(0.0F, 0.0F);
      double double1 = FastMath.signum(0.0F);
      double double2 = FastMath.atanh((-363.5));
      double double3 = FastMath.tanh(Double.NaN);
      int int0 = FastMath.round(0.0F);
      double double4 = FastMath.signum((-363.5));
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      double double0 = FastMath.signum((-2406.0));
      double double1 = FastMath.log10((-2961.96616059186));
      double double2 = FastMath.sinh((-2409.362824));
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      double double0 = FastMath.tanh((-1391.653079));
      double double1 = FastMath.rint((-1.0));
      double double2 = FastMath.log1p((-1.0));
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      double double0 = FastMath.asinh(3.766139102600044);
      double double1 = FastMath.asin(3.766139102600044);
      float float0 = FastMath.max((-1.1409743F), (-1.1409743F));
      double double2 = FastMath.log((-4.469603409122654E-6));
      double double3 = FastMath.expm1(0.6409968137741089);
      double double4 = FastMath.sinh(Double.NaN);
      double double5 = FastMath.min((-3209.0), Double.NaN);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      long long0 = FastMath.max((-445L), 0L);
      float float0 = FastMath.abs((float) 0L);
      long long1 = FastMath.round((double) 0L);
      double double0 = FastMath.tanh(0.0F);
      double double1 = FastMath.cbrt((-460.623));
      double double2 = FastMath.asin(0.0F);
      double double3 = FastMath.exp(0.19999954104423523);
      double double4 = FastMath.cosh((-445L));
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      double double0 = FastMath.atanh(2491.241494068);
      double double1 = FastMath.atan(Double.NaN);
      double double2 = FastMath.sinh(Double.NaN);
      double double3 = FastMath.log10(Double.NaN);
      double double4 = FastMath.acosh(Double.NaN);
      double double5 = FastMath.min(1.0, 3.001117512531765E-7);
      double double6 = FastMath.pow(684.14184579898, Double.NaN);
      double double7 = FastMath.atanh((-0.05417713522911072));
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      double double0 = FastMath.toDegrees(2.092571276372179);
      double double1 = FastMath.log1p(1.0);
      double double2 = FastMath.toDegrees(119.8955024664296);
      double double3 = FastMath.cosh(119.8955024664296);
      double double4 = FastMath.atan2((-1478.4257829474031), 293.7);
      double double5 = FastMath.sqrt(119.8955024664296);
      double double6 = FastMath.ceil((-1949.655));
      double double7 = FastMath.pow(562.48, (-1964.0019));
      double double8 = FastMath.asinh(562.48);
      double double9 = FastMath.atan2(0.0, (-0.010714690733195933));
      double double10 = FastMath.log10((-0.010714690733195933));
      double double11 = FastMath.ulp((-2487.31999628));
      long long0 = FastMath.round((-0.010714690733195933));
      long long1 = FastMath.max((-2484L), (-1715L));
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      double double0 = FastMath.ceil(0.0);
      double double1 = FastMath.acosh(0.0);
      double double2 = FastMath.random();
      double double3 = FastMath.atan((-18.457971236441537));
      double double4 = FastMath.atanh((-1.0));
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      double double0 = FastMath.acos((-0.05417713522911072));
      double double1 = FastMath.log10((-0.05417713522911072));
      double double2 = FastMath.max((-0.05417713522911072), 506.52);
      long long0 = FastMath.round(506.52);
      double double3 = FastMath.log(56.336232723517);
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      long long0 = FastMath.min((-3729L), 510L);
      float float0 = FastMath.min(0.0F, 0.0F);
      double double0 = FastMath.toRadians((-3729L));
      float float1 = FastMath.max(0.0F, 0.0F);
      double double1 = FastMath.asinh(0.0F);
      double double2 = FastMath.expm1(0.0);
      double double3 = FastMath.pow((-18.43086276236962), 1217.798);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      double double0 = FastMath.exp((-3770.0238464));
      float float0 = FastMath.max(0.0F, Float.NaN);
      long long0 = FastMath.abs((-9223372036854775808L));
      double double1 = FastMath.log(2346.568865359);
      double double2 = FastMath.tan(Float.NaN);
      double double3 = FastMath.tanh((-9223372036854775808L));
      double double4 = FastMath.cbrt(2346.568865359);
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      double double0 = FastMath.ulp((-1.0));
      double double1 = FastMath.min(2.220446049250313E-16, 2.220446049250313E-16);
      double double2 = FastMath.tanh(2.220446049250313E-16);
      double double3 = FastMath.min(2.220446049250313E-16, 1.366701124672226);
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      int int0 = FastMath.min((-1), (-1));
      double double0 = FastMath.tanh(1565.21770794843);
      double double1 = FastMath.asinh(1565.21770794843);
      double double2 = FastMath.cosh((-1));
      double double3 = FastMath.sin((-1));
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      float float0 = FastMath.abs((-1.0F));
      double double0 = FastMath.nextUp((-1.0F));
      double double1 = FastMath.atan2(1.0F, 494.57163);
      double double2 = FastMath.random();
      double double3 = FastMath.expm1((-2993.0));
      double double4 = FastMath.atanh((-485.3920849));
      double double5 = FastMath.nextAfter((-1.9841269659586505E-4), (-2392.29481));
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      double double0 = FastMath.min(1.1430250008909141E-8, 0.9315964599440725);
      double double1 = FastMath.sqrt(5.261908426442558E-7);
      double double2 = FastMath.log1p((-256.049));
      double double3 = FastMath.sinh(7.253901313391683E-4);
      double double4 = FastMath.ulp(0.8109631538391113);
      int int0 = FastMath.round(0.0F);
      double double5 = FastMath.log1p(1.1102230246251565E-16);
      double double6 = FastMath.asin(0);
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      double double0 = FastMath.sin(2024.14242);
      long long0 = FastMath.round(2214.2751340888);
      double double1 = FastMath.sinh(2214L);
      double double2 = FastMath.atan(0.19454771280288696);
      double double3 = FastMath.abs(Double.POSITIVE_INFINITY);
      int int0 = FastMath.min(42, 42);
      double double4 = FastMath.atan(Double.POSITIVE_INFINITY);
      float float0 = FastMath.min(334.4097F, (float) 2214L);
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      double double0 = FastMath.toRadians(1500.92424202944);
      double double1 = FastMath.cos(26.196069846413984);
      double double2 = FastMath.sqrt(1500.92424202944);
      double double3 = FastMath.acosh(38.741763537937196);
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      double double0 = FastMath.rint(897.8572693056719);
      double double1 = FastMath.acos(897.8572693056719);
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      double double0 = FastMath.cbrt(0.087);
      double double1 = FastMath.tan(0.087);
      double double2 = FastMath.cbrt(1504.5522);
      double double3 = FastMath.sqrt(0.08722016760346978);
      double double4 = FastMath.nextUp(11.458710660264897);
      double double5 = FastMath.cbrt(0.4431047621693634);
      double double6 = FastMath.cbrt(0.087);
      double double7 = FastMath.atanh(11.458710660264897);
      double double8 = FastMath.cos(0.4431047621693634);
      double double9 = FastMath.asin(0.08722016760346978);
      double double10 = FastMath.log1p(Double.NaN);
      double double11 = FastMath.ulp(0.295330607292014);
      int int0 = FastMath.abs((-64569708));
      double double12 = FastMath.acos(3.814697265625E-6);
      double double13 = FastMath.random();
      double double14 = FastMath.random();
      double double15 = FastMath.floor(0.9034248639119105);
      double double16 = FastMath.cosh(0.097);
      double double17 = FastMath.exp((-4659.76176714));
      double double18 = FastMath.sqrt(0.4431047621693634);
      double double19 = FastMath.asin((-1785.654));
      double double20 = FastMath.atan2(0.3333333333333333, (-1785.654));
      int int1 = FastMath.abs(4726);
      double double21 = FastMath.tan((-4659.76176714));
      int int2 = FastMath.abs((-64569708));
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      double double0 = FastMath.rint((-3564.61163186941));
      int int0 = FastMath.min(267, 2897);
      double double1 = FastMath.tanh((-1.0));
      long long0 = FastMath.min((long) 267, (-284L));
      double double2 = FastMath.exp((-3564.61163186941));
      long long1 = FastMath.max(1461L, (-2433L));
      double double3 = FastMath.expm1(14.136832902969902);
      double double4 = FastMath.sin(0.9315964599440725);
      double double5 = FastMath.nextUp(0.6366197723675814);
      double double6 = FastMath.random();
      double double7 = FastMath.sinh(1.560070049119026);
      double double8 = FastMath.atan((-639.51));
      double double9 = FastMath.floor(471.962274199481);
      double double10 = FastMath.nextAfter(1066.43, 471.962274199481);
      double double11 = FastMath.exp(1994.771961);
      int int1 = FastMath.min(1103, 0);
      double double12 = FastMath.cbrt(Double.POSITIVE_INFINITY);
      double double13 = FastMath.cos(1461L);
      double double14 = FastMath.asinh((-671.7319416265526));
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      double double0 = FastMath.ulp((-3064.6575487));
      double double1 = FastMath.atan2((-3064.6575487), (-1.0));
      double double2 = FastMath.nextAfter((-1.0), (-126.70745));
      float float0 = FastMath.abs(807.7352F);
      double double3 = FastMath.exp(807.7352F);
      double double4 = FastMath.exp((-3064.6575487));
      double double5 = FastMath.abs(1.633123935319537E16);
      double double6 = FastMath.abs(1.1094683376595846);
      double double7 = FastMath.sinh((-573.5571843328685));
      float float1 = FastMath.abs(807.7352F);
      double double8 = FastMath.ulp((-2.957007209750105E-8));
      double double9 = FastMath.signum(2626.4191);
      double double10 = FastMath.sin(0.0);
      double double11 = FastMath.cosh(1.633123935319537E16);
      double double12 = FastMath.exp((-1.0));
      double double13 = FastMath.cbrt(429.5090995935492);
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      double double0 = FastMath.atan2(1.2331016983979697, 1.2331016983979697);
      double double1 = FastMath.asinh(1.2331016983979697);
      double double2 = FastMath.acosh(1.0);
      float float0 = FastMath.max((-1.0F), (-1098.0F));
      double double3 = FastMath.max(1.0369930565707794, 0.0);
      double double4 = FastMath.tan(2519.1420922);
      double double5 = FastMath.acosh(1.2331016983979697);
      double double6 = FastMath.sinh(0.6701784776198912);
      double double7 = FastMath.exp(1.0369930565707794);
      double double8 = FastMath.nextUp(0.0);
      double double9 = FastMath.sqrt(1.0369930565707794);
      double double10 = FastMath.ulp(1.2331016983979697);
      double double11 = FastMath.abs(0.7853981633974483);
      double double12 = FastMath.atanh(2.220446049250313E-16);
      double double13 = FastMath.cbrt((-2628.501307261441));
      int int0 = FastMath.max((-3448), (-3448));
      double double14 = FastMath.log1p(2.820722496508135);
      double double15 = FastMath.expm1(2.220446049250313E-16);
      double double16 = FastMath.abs(1.2331016983979697);
      double double17 = FastMath.rint(1.2331016983979697);
      double double18 = FastMath.exp(1356.1);
      double double19 = FastMath.nextUp(2390.314561);
      int int1 = FastMath.abs(3);
      float float1 = FastMath.abs((float) 3);
      double double20 = FastMath.toDegrees(1660.13527214858);
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      int int0 = FastMath.abs(2345);
      double double0 = FastMath.abs((-18.457971236441537));
      double double1 = FastMath.min((double) 2345, (double) 2345);
      double double2 = FastMath.asin(5.261908426442558E-7);
      Random.setNextRandom(2345);
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      double double0 = FastMath.rint(1.197421629234348);
      int int0 = FastMath.min(1110, 1110);
      double double1 = FastMath.pow(1110, 0.25534192122103627);
      double double2 = FastMath.atan(1.197421629234348);
      double double3 = FastMath.log((-0.12502530217170715));
      int int1 = FastMath.abs(1110);
      double double4 = FastMath.min(1.197421629234348, 1.197421629234348);
      double double5 = FastMath.expm1(1347.5550602349247);
      double double6 = FastMath.atan((-1855.941166599046));
      double double7 = FastMath.cosh(Double.POSITIVE_INFINITY);
      double double8 = FastMath.random();
      double double9 = FastMath.floor(Double.POSITIVE_INFINITY);
      double double10 = FastMath.tan(2658.713027903);
      long long0 = FastMath.round(1.3287538290291052);
      double double11 = FastMath.atan((-1855.941166599046));
      long long1 = FastMath.round((double) 1110);
      double double12 = FastMath.nextAfter(0.0, 0.1111111111111111);
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      double double0 = FastMath.max(2.563009154379015E-7, 2.563009154379015E-7);
      double double1 = FastMath.atan2(3581.82385149, 3.410491133089812E-7);
      double double2 = FastMath.rint(3.410491133089812E-7);
      double double3 = FastMath.ceil(2.563009154379015E-7);
      double double4 = FastMath.pow(2.563009154379015E-7, 3581.82385149);
      double double5 = FastMath.log1p(0.0);
      int int0 = FastMath.max(347, (-1));
      double double6 = FastMath.acosh((-822.1489887975));
      double double7 = FastMath.atan2(0.0, 0.0);
      double double8 = FastMath.cos(1.366701124672226);
      double double9 = FastMath.log1p((-18.457971236441537));
      double double10 = FastMath.pow(793.8568934, 3412.565658);
      double double11 = FastMath.cos(2176.0);
      double double12 = FastMath.log1p(347);
      double double13 = FastMath.pow(1.366701124672226, (-1635.7591135076));
      double double14 = FastMath.min((-822.1489887975), 2543.4);
      double double15 = FastMath.sin(1.073741824E9);
      double double16 = FastMath.cosh(Double.POSITIVE_INFINITY);
      float float0 = FastMath.min(0.0F, (float) 347);
      double double17 = FastMath.min(880.85247587, (double) 347);
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      int int0 = FastMath.min((-1), (-1));
      double double0 = FastMath.cos((-1));
      int int1 = FastMath.max((-2529), (-2529));
      double double1 = FastMath.toDegrees(3044.742837);
      double double2 = FastMath.cosh(3044.742837);
      long long0 = FastMath.abs((-1354L));
      double double3 = FastMath.log10((-1354L));
      double double4 = FastMath.log((-1354L));
      double double5 = FastMath.log(0.5403022766113281);
      long long1 = FastMath.abs(0L);
      int int2 = FastMath.abs(218);
      double double6 = FastMath.nextAfter(Double.NaN, 0.5403023058681398);
  }

  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      double double0 = FastMath.pow((-595.21), (-595.21));
      double double1 = FastMath.floor(0.333333333333333);
      int int0 = FastMath.max((-1362), 0);
      double double2 = FastMath.pow((-1362), (-595.21));
      float float0 = FastMath.max(1811.459F, 1543.678F);
      double double3 = FastMath.cosh((-1362));
      float float1 = FastMath.abs(1811.459F);
      double double4 = FastMath.pow((-2150.0), 0.0);
      double double5 = FastMath.atan2(1811.459F, 0.0);
      double double6 = FastMath.asinh(0.333333333333333);
      double double7 = FastMath.sin((-1362));
      double double8 = FastMath.ceil((-320.2724));
      int int1 = FastMath.round(1811.459F);
      long long0 = FastMath.round((double) 0);
      double double9 = FastMath.log((-595.21));
      double double10 = FastMath.sinh(1.0);
      double double11 = FastMath.sqrt(0.6299605249474366);
      long long1 = FastMath.abs((-3183605296591799669L));
      double double12 = FastMath.floor((-2566.917874));
      double double13 = FastMath.max((-320.0), (-282.18918188251));
      double double14 = FastMath.cos((-320.2724));
      float float2 = FastMath.min(1811.459F, (float) 0);
      double double15 = FastMath.min(1.5707963267948966, 1051.035215638865);
  }

  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      double double0 = FastMath.pow((-299.6585535725), (-299.6585535725));
  }
}
