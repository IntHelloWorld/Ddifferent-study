/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 28 16:44:17 GMT 2020
 */

package org.apache.commons.lang.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.Writer;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.NoSuchElementException;
import org.apache.commons.lang.text.StrBuilder;
import org.apache.commons.lang.text.StrMatcher;
import org.apache.commons.lang.text.StrTokenizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StrBuilder_ESTest extends StrBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.toString();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      char[] charArray0 = new char[6];
      charArray0[0] = '?';
      charArray0[1] = 'o';
      charArray0[1] = '0';
      charArray0[3] = ';';
      charArray0[4] = ',';
      charArray0[5] = 'R';
      char[] charArray1 = strBuilder0.getChars(charArray0);
      boolean boolean0 = strBuilder0.isEmpty();
      stringBuffer0.setLength(620);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) stringBuffer0);
      strBuilder_StrBuilderWriter0.write(charArray1, 0, 0);
      Writer writer1 = strBuilder_StrBuilderWriter0.append('\u0000');
      strBuilder_StrBuilderWriter0.write(charArray1, 0, 0);
      Writer writer2 = strBuilder_StrBuilderWriter0.append('\u0000');
      strBuilder_StrBuilderWriter0.close();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string1 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder strBuilder1 = new StrBuilder(1);
      StrBuilder strBuilder2 = strBuilder0.append((Object) strBuilder1);
      StrBuilder strBuilder3 = strBuilder2.insert(0, (float) 0);
      int int0 = strBuilder1.indexOf('x');
      StrBuilder strBuilder4 = strBuilder3.appendWithSeparators((Collection) null, "");
      StrBuilder strBuilder5 = strBuilder4.reverse();
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[6];
      charArray0[1] = 'r';
      charArray0[1] = 's';
      StrBuilder strBuilder1 = strBuilder0.append(true);
      StrBuilder strBuilder2 = strBuilder1.deleteAll(".qVE]qOV6%.b)\"\"pGg");
      charArray0[3] = '';
      charArray0[4] = 't';
      strBuilder_StrBuilderWriter0.write(charArray0);
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) "";
      StrBuilder strBuilder3 = strBuilder0.appendWithSeparators(objectArray0, "");
      strBuilder3.buffer = charArray0;
      charArray0[5] = '?';
      int int0 = strBuilder1.capacity();
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      // Undeclared exception!
      try { 
        strBuilder0.deleteAll(strMatcher0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.lang.text.StrMatcher$CharSetMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[6];
      charArray0[0] = '8';
      charArray0[1] = 'r';
      charArray0[2] = 's';
      StrBuilder strBuilder1 = strBuilder0.append(true);
      StrBuilder strBuilder2 = strBuilder1.deleteAll(".qVE]qOV6%.b)\"\"pGg");
      charArray0[3] = '';
      charArray0[4] = 't';
      strBuilder_StrBuilderWriter0.write(charArray0);
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) "";
      objectArray0[1] = (Object) "";
      StrBuilder strBuilder3 = strBuilder0.appendWithSeparators(objectArray0, "");
      strBuilder3.buffer = charArray0;
      charArray0[5] = '?';
      int int0 = strBuilder1.capacity();
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      // Undeclared exception!
      try { 
        strBuilder1.appendFixedWidthPadLeft(objectArray0[0], 6, 'P');
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      char[] charArray0 = new char[4];
      charArray0[0] = ' ';
      charArray0[1] = '3';
      charArray0[2] = '&';
      charArray0[3] = '@';
      StrBuilder strBuilder2 = strBuilder1.insert(0, charArray0);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher((String) null);
      StrBuilder strBuilder3 = strBuilder2.deleteAll(strMatcher0);
      StrBuilder strBuilder4 = strBuilder1.appendFixedWidthPadLeft(615, 615, '-');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterString("");
      List list0 = strBuilder_StrBuilderTokenizer0.getTokenList();
      char[] charArray1 = new char[1];
      charArray1[0] = '-';
      StrBuilder strBuilder5 = strBuilder4.replaceFirst((String) null, "");
      List list1 = strBuilder_StrBuilderTokenizer0.tokenize(charArray1, 1188, 0);
      StrBuilder strBuilder6 = strBuilder0.append((double) 1188);
      char char0 = strBuilder6.charAt(0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder4.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(0);
      boolean boolean0 = strBuilder6.contains(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder4.getChars(0, 101, charArray0, 1321);
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(":KSub)BCJYH2b|");
      StrBuilder strBuilder1 = strBuilder0.append('k');
      String string0 = strBuilder0.toString();
      int int0 = strBuilder0.lastIndexOf('{');
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder2 = strBuilder0.replaceAll(":KSub)BCJYH2b|k", "PRIllLH}^rWl~\"");
      int int1 = strBuilder2.capacity();
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(":KSub)BCJYH2b|");
      String string0 = strBuilder0.toString();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(":KSub)BCJYH2b|");
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("Xhl6,_5Ar1wq");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      int int0 = strBuilder0.lastIndexOf('{');
      boolean boolean0 = strBuilder1.endsWith(":KSub)BCJYH2b|");
      StringBuffer stringBuffer0 = new StringBuffer();
      boolean boolean1 = strBuilder0.equals((Object) null);
      int int1 = strBuilder1.indexOf((String) null, 0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[6];
      Writer writer0 = strBuilder_StrBuilderWriter0.append(')');
      charArray0[0] = '8';
      charArray0[1] = 'r';
      charArray0[2] = 's';
      StrBuilder strBuilder1 = strBuilder0.append(true);
      StrBuilder strBuilder2 = strBuilder1.deleteAll(".qVE]qOV6%.b)\"\"pGg");
      charArray0[4] = 't';
      strBuilder_StrBuilderWriter0.write(charArray0);
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) "";
      objectArray0[1] = (Object) "";
      StrBuilder strBuilder3 = strBuilder0.appendWithSeparators(objectArray0, "");
      StrTokenizer strTokenizer0 = strBuilder3.asTokenizer();
      strBuilder3.buffer = charArray0;
      charArray0[5] = 'r';
      int int0 = StrBuilder.CAPACITY;
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      // Undeclared exception!
      try { 
        strBuilder2.insert(32, (double) 32);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteAll('3');
      StrBuilder strBuilder2 = strBuilder1.append(397.0F);
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("9oV&g=-U$o^m8{F");
      StrBuilder strBuilder3 = strBuilder0.replaceFirst((StrMatcher) strMatcher_StringMatcher0, "u2!");
      StrBuilder strBuilder4 = strBuilder3.deleteFirst((StrMatcher) strMatcher_StringMatcher0);
      int int0 = strBuilder0.lastIndexOf('3', 0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[6];
      charArray0[0] = '8';
      charArray0[1] = 'r';
      charArray0[2] = 'l';
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder1.deleteAll(".qVE]qOV6%.b)\"\"pGg");
      charArray0[3] = '';
      charArray0[4] = 't';
      strBuilder_StrBuilderWriter0.write(charArray0);
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) "";
      objectArray0[1] = (Object) "";
      String string0 = "";
      StrBuilder strBuilder3 = strBuilder0.appendWithSeparators(objectArray0, "");
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("'y{j0]%I<N3KM\"");
      int int0 = strBuilder3.indexOf(strMatcher0);
      strBuilder3.buffer = charArray0;
      charArray0[5] = '?';
      int int1 = strBuilder1.capacity();
      StrMatcher strMatcher1 = StrMatcher.quoteMatcher();
      // Undeclared exception!
      try { 
        strBuilder0.deleteAll(strMatcher1);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.lang.text.StrMatcher$CharSetMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      char[] charArray0 = new char[4];
      charArray0[0] = ' ';
      char char0 = '3';
      charArray0[1] = '3';
      char char1 = '&';
      charArray0[2] = '&';
      charArray0[3] = '@';
      StrBuilder strBuilder2 = new StrBuilder('3');
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher((String) null);
      StrBuilder strBuilder3 = strBuilder2.deleteAll(strMatcher0);
      char char2 = 'o';
      StrBuilder strBuilder4 = strBuilder1.appendFixedWidthPadLeft(615, 615, 'o');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterString("");
      List list0 = strBuilder_StrBuilderTokenizer0.getTokenList();
      char[] charArray1 = new char[1];
      charArray1[0] = 'o';
      List list1 = strBuilder_StrBuilderTokenizer0.tokenize(charArray1, 1188, 0);
      StrBuilder strBuilder5 = strBuilder0.append((double) 1188);
      char char3 = strBuilder5.charAt(0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder4.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(0);
      boolean boolean0 = strBuilder5.contains(strMatcher0);
      int int0 = 0;
      // Undeclared exception!
      try { 
        strBuilder4.getChars(0, 101, charArray0, 1321);
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      boolean boolean0 = strBuilder0.contains("");
      char[] charArray0 = new char[8];
      charArray0[0] = '6';
      charArray0[1] = 'P';
      charArray0[2] = '.';
      charArray0[3] = '+';
      charArray0[4] = '2';
      charArray0[5] = '0';
      charArray0[6] = 'V';
      charArray0[7] = '\"';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("', has a length less than 2");
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setTrimmerMatcher(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Iterator) strTokenizer0, "");
      // Undeclared exception!
      try { 
        strBuilder2.deleteCharAt(5404);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 5404
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("ZY;^Zy\"h]P(pc\u0001");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "ZY;^Zy\"h]P(pc\u0001");
      char[] charArray0 = new char[0];
      char[] charArray1 = strBuilder1.getChars(charArray0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1667));
      String string0 = "!}IY(1}kO";
      StrBuilder strBuilder1 = new StrBuilder("!}IY(1}kO");
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft((-1667), (-1667), '{');
      StrBuilder strBuilder3 = strBuilder2.append((Object) ", Length: 0");
      StrBuilder strBuilder4 = strBuilder1.deleteFirst('{');
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      StrBuilder strBuilder5 = strBuilder1.append((long) (-1667));
      // Undeclared exception!
      try { 
        strBuilder1.insert((-1667), (long) (-1667));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1667
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[3];
      charArray0[0] = ':';
      charArray0[1] = 'I';
      charArray0[2] = 'S';
      strBuilder_StrBuilderWriter0.write(charArray0, 0, 0);
      strBuilder_StrBuilderWriter0.write((-91));
      String string0 = strBuilder0.getNullText();
      String string1 = strBuilder0.midString(1321, 0);
      int int0 = strBuilder0.lastIndexOf((String) null);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(34);
      StrBuilder strBuilder1 = strBuilder0.append((Object) "L<K0`t;8sT4-@|#^");
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance("L<K0`t;8sT4-@|#^");
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "L<K0`t;8sT4-@|#^");
      StrBuilder strBuilder3 = strBuilder2.appendNewLine();
      StrBuilder strBuilder4 = strBuilder2.appendNewLine();
      StrBuilder strBuilder5 = strBuilder0.deleteCharAt(0);
      StrBuilder strBuilder6 = strBuilder0.insert(34, (char[]) null);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      int int0 = (-40);
      char[] charArray0 = new char[0];
      StrBuilder strBuilder2 = strBuilder1.appendNull();
      // Undeclared exception!
      try { 
        strBuilder2.append("z?,", 0, 105);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteAll('3');
      StrBuilder strBuilder2 = strBuilder1.append(1055.0F);
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("9oV&g=-U$o^m8{F");
      StrBuilder strBuilder3 = strBuilder0.replaceFirst((StrMatcher) strMatcher_StringMatcher0, "u2!");
      StrBuilder strBuilder4 = strBuilder3.deleteFirst((StrMatcher) strMatcher_StringMatcher0);
      int int0 = strBuilder0.lastIndexOf('3', 0);
      char[] charArray0 = new char[9];
      charArray0[0] = '3';
      charArray0[1] = '3';
      charArray0[2] = '0';
      charArray0[3] = '3';
      charArray0[4] = '3';
      charArray0[5] = '3';
      charArray0[6] = '3';
      charArray0[7] = '3';
      charArray0[8] = '3';
      char[] charArray1 = strBuilder0.getChars(charArray0);
      boolean boolean0 = strBuilder4.contains('3');
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(603);
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) "NR^^EU`2`I\"gB:8", 603, 'J');
      StrBuilder strBuilder2 = strBuilder1.replaceAll("NR^^EU`2`I\"gB:8", "Windows");
      StrBuilder strBuilder3 = strBuilder1.trim();
      strBuilder0.size = 682;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      StrBuilder strBuilder4 = strBuilder1.appendFixedWidthPadLeft(object0, (-563), 'K');
      LinkedList<StrBuilder> linkedList0 = new LinkedList<StrBuilder>();
      StrBuilder strBuilder5 = strBuilder4.appendWithSeparators((Collection) linkedList0, "'\"");
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      char[] charArray0 = new char[4];
      charArray0[0] = ' ';
      charArray0[1] = '3';
      charArray0[2] = '&';
      charArray0[3] = '&';
      StrBuilder strBuilder2 = strBuilder1.insert(0, charArray0);
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrBuilder strBuilder3 = strBuilder2.deleteAll((StrMatcher) strMatcher_NoMatcher0);
      StrBuilder strBuilder4 = strBuilder1.appendFixedWidthPadLeft(615, 615, 'Q');
      StrBuilder strBuilder5 = strBuilder4.trim();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterString("");
      List list0 = strBuilder_StrBuilderTokenizer0.getTokenList();
      char[] charArray1 = new char[1];
      charArray1[0] = 'Q';
      List list1 = strBuilder_StrBuilderTokenizer0.tokenize(charArray1, (-273), 0);
      StrBuilder strBuilder6 = strBuilder0.append((double) (-273));
      char char0 = strBuilder6.charAt(0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder4.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(0);
      boolean boolean0 = strBuilder6.contains((StrMatcher) strMatcher_NoMatcher0);
      int int0 = 0;
      // Undeclared exception!
      try { 
        strBuilder1.append(charArray0, (-3597), (-273));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -273
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = new StringBuffer("$LKKt\"[1O");
      char[] charArray0 = new char[7];
      charArray0[0] = '[';
      char[] charArray1 = strBuilder0.toCharArray(0, 0);
      charArray0[1] = 'E';
      charArray0[2] = '?';
      char char0 = '2';
      charArray0[3] = '2';
      charArray0[4] = '3';
      charArray0[5] = '_';
      charArray0[6] = 'b';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 39, (-1117));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("TDw&givLoh 6");
      Collection<Object> collection0 = null;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) null, (String) null);
      StrBuilder strBuilder2 = strBuilder1.setNewLineText((String) null);
      int int0 = 3496;
      // Undeclared exception!
      try { 
        strBuilder1.insert(3496, true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3496
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) "1.6", (-4087), 'j');
      StrBuilder strBuilder2 = strBuilder1.append((long) (-4087));
      StrBuilder strBuilder3 = strBuilder0.append("", 0, 0);
      StrBuilder strBuilder4 = strBuilder3.deleteAll('7');
      // Undeclared exception!
      try { 
        strBuilder4.append(strBuilder3, (-4087), (-4087));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.length();
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder0.replaceAll("Invalid startIndex: ", "Invalid startIndex: ");
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadRight((Object) strBuilder1, (-2510), 'G');
      int int1 = strBuilder2.lastIndexOf(",-$", (-2510));
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('G');
      int int2 = strBuilder1.lastIndexOf((StrMatcher) strMatcher_CharMatcher0, 0);
      StrBuilder strBuilder4 = strBuilder1.appendFixedWidthPadLeft((Object) strBuilder3, (-1380), 'S');
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('~');
      StrBuilder strBuilder2 = strBuilder0.append((-2294.50830097288));
      StrBuilder strBuilder3 = strBuilder2.trim();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("Invalid startIndex: ");
      int int1 = strBuilder2.lastIndexOf(strMatcher0, 0);
      StrBuilder strBuilder4 = strBuilder0.insert(0, false);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      char[] charArray0 = new char[8];
      charArray0[0] = '~';
      charArray0[1] = '~';
      charArray0[2] = '~';
      charArray0[3] = '~';
      charArray0[4] = '~';
      charArray0[5] = '~';
      charArray0[6] = '~';
      charArray0[7] = '~';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 0, (-1061));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.appendPadding('t', 't');
      int int0 = strBuilder0.indexOf('t');
      StrBuilder strBuilder2 = strBuilder0.deleteFirst('E');
      boolean boolean0 = strBuilder2.equalsIgnoreCase(strBuilder0);
      String string1 = "\\3~AEJ@Wqcf^9qJtm";
      StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "\u0003~AEJ@Wqcf^9qJtm");
      int int1 = strBuilder2.validateRange(0, 765);
      boolean boolean1 = strBuilder2.contains('B');
      int int2 = strBuilder2.length();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      Object object0 = new Object();
      StrBuilder strBuilder4 = strBuilder2.appendFixedWidthPadRight(object0, (-1019), 't');
      String string2 = strBuilder3.getNullText();
      long long0 = strBuilder_StrBuilderReader0.skip((-2786L));
      long long1 = 0L;
      char[] charArray0 = new char[0];
      StrBuilder strBuilder5 = strBuilder2.insert(116, (String) null);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 116, 356);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("j[2{mHg93");
      int int0 = 4;
      String string0 = strBuilder0.leftString(4);
      int int1 = 32;
      String string1 = strBuilder0.midString(4, 32);
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance();
      char[] charArray0 = new char[2];
      char char0 = 'e';
      charArray0[0] = 'e';
      char char1 = 'h';
      charArray0[1] = 'h';
      strBuilder0.buffer = charArray0;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "gTwH0(mB2Fm7i]\"9");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      strBuilder_StrBuilderReader0.mark(32);
      int int2 = 0;
      // Undeclared exception!
      try { 
        strBuilder1.append((double) 0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.charMatcher('0');
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder3 = strBuilder2.append((Object) strBuilder0);
      StrBuilder strBuilder4 = strBuilder0.append(strBuilder2, 32, 1);
      char[] charArray0 = new char[1];
      StrBuilder strBuilder5 = strBuilder0.deleteFirst('z');
      charArray0[0] = '0';
      int int0 = 4;
      // Undeclared exception!
      try { 
        strBuilder4.insert(32, charArray0, 32, 4);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder();
      int int0 = strBuilder0.lastIndexOf((StrMatcher) null, (-1188));
      char[] charArray0 = new char[3];
      charArray0[0] = 'L';
      charArray0[1] = '#';
      charArray0[2] = 'c';
      // Undeclared exception!
      try { 
        strBuilder0.insert(115, charArray0, (-1188), (-1188));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 115
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      int int0 = 1;
      StrBuilder strBuilder0 = new StrBuilder(1);
      int int1 = 2410;
      String string0 = strBuilder0.midString(2410, 1);
      char char0 = '9';
      int int2 = strBuilder0.lastIndexOf('9', 1);
      int int3 = 32;
      // Undeclared exception!
      try { 
        strBuilder0.insert(32, 0.0F);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(" a)t)CAaUk@@");
      int int0 = 4164;
      StrBuilder strBuilder1 = strBuilder0.appendPadding(34, '(');
      char char0 = 'o';
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight((Object) " a)t)CAaUk@@", 5, 'o');
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      Object object0 = new Object();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(object0, 0, 'S');
      StrBuilder strBuilder2 = strBuilder1.append((-364.862F));
      String string0 = strBuilder0.substring(0, 46);
      int int1 = 101;
      // Undeclared exception!
      try { 
        strBuilder1.charAt(101);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 101
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(604);
      StrBuilder strBuilder1 = new StrBuilder("");
      StrBuilder strBuilder2 = strBuilder1.minimizeCapacity();
      StrBuilder strBuilder3 = new StrBuilder(604);
      StrBuilder strBuilder4 = new StrBuilder("6ZOaf");
      int int0 = (-2072);
      StrBuilder strBuilder5 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder5.appendFixedWidthPadRight((Object) null, 459, 'i');
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 5;
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight((Object) null, 5, '@');
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.append(0.0F);
      StrBuilder strBuilder2 = strBuilder1.append(1097L);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("");
      int int0 = strBuilder2.indexOf(strMatcher0, 39);
      String string0 = strBuilder0.leftString((-266));
      char[] charArray0 = new char[5];
      charArray0[0] = '#';
      charArray0[1] = '\'';
      charArray0[2] = 'G';
      charArray0[3] = '_';
      charArray0[4] = 'x';
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder3 = strBuilder0.appendWithSeparators((Iterator) strBuilder_StrBuilderTokenizer0, "length must be valid");
      int int1 = strBuilder0.lastIndexOf('X', (-1));
      StringBuffer stringBuffer0 = null;
      try {
        stringBuffer0 = new StringBuffer((-266));
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("IGDASbzr4+%9{X(-CBB");
      StrBuilder strBuilder1 = new StrBuilder("IGDASbzr4+%9{X(-CBB");
      StrBuilder strBuilder2 = strBuilder0.ensureCapacity(4);
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrBuilder strBuilder3 = strBuilder0.deleteFirst(strMatcher0);
      StrBuilder strBuilder4 = strBuilder0.replace(4, 4, "Invalid startIndex: ");
      StrBuilder strBuilder5 = strBuilder1.setNewLineText("Invalid startIndex: ");
      char[] charArray0 = new char[0];
      StrBuilder strBuilder6 = strBuilder0.insert(1, charArray0);
      strBuilder5.size = 4;
      char[] charArray1 = strBuilder5.toCharArray(1, 4);
      StrBuilder strBuilder7 = strBuilder0.append(strBuilder1);
      StringBuffer stringBuffer0 = new StringBuffer(115);
      StrBuilder strBuilder8 = strBuilder2.append(stringBuffer0);
      StrBuilder strBuilder9 = strBuilder7.append("");
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[8];
      charArray0[0] = 'S';
      charArray0[1] = 'w';
      StrBuilder strBuilder1 = strBuilder0.insert(0, true);
      StringBuffer stringBuffer0 = strBuilder1.toStringBuffer();
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      boolean boolean0 = strBuilder1.contains(strMatcher0);
      charArray0[2] = 'Q';
      StrBuilder strBuilder2 = strBuilder0.append(charArray0);
      charArray0[3] = 'h';
      charArray0[4] = 'k';
      charArray0[5] = 'u';
      charArray0[6] = '2';
      charArray0[7] = 'l';
      StrBuilder strBuilder3 = strBuilder0.insert(0, charArray0);
      StrBuilder strBuilder4 = strBuilder0.append(1.5);
      StrBuilder strBuilder5 = strBuilder4.insert(0, true);
      StrBuilder strBuilder6 = strBuilder0.insert(0, 'u');
      StrBuilder strBuilder7 = strBuilder3.append(0.0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("oC");
      char[] charArray0 = new char[5];
      char char0 = ',';
      charArray0[0] = ',';
      StrBuilder strBuilder1 = strBuilder0.append((-211.297794));
      charArray0[1] = 'r';
      charArray0[2] = 'w';
      charArray0[3] = '~';
      charArray0[4] = ':';
      char[] charArray1 = strBuilder0.getChars(charArray0);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      String string0 = strBuilder0.getNewLineText();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      String string1 = ", '";
      Object[] objectArray0 = new Object[4];
      Object object0 = new Object();
      objectArray0[0] = object0;
      objectArray0[1] = (Object) ':';
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      Object object1 = strBuilder_StrBuilderTokenizer0.clone();
      objectArray0[2] = object1;
      objectArray0[3] = (Object) strBuilder_StrBuilderReader0;
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators(objectArray0, "org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      // Undeclared exception!
      try { 
        strBuilder1.insert(757, (float) 757);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 757
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) strBuilder0;
      Object object0 = new Object();
      objectArray0[3] = object0;
      objectArray0[4] = (Object) strBuilder0;
      objectArray0[5] = (Object) strBuilder0;
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder0.appendPadding(0, '$');
      StrBuilder strBuilder3 = strBuilder0.insert(0, (Object) strBuilder1);
      StrBuilder strBuilder4 = strBuilder0.appendWithSeparators(objectArray0, "");
      StrBuilder strBuilder5 = strBuilder0.append("Invalid offset: ");
      StrTokenizer strTokenizer0 = strBuilder4.asTokenizer();
      StrBuilder strBuilder6 = strBuilder5.trim();
      strBuilder6.validateIndex(0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder7 = strBuilder0.appendWithSeparators((Collection) linkedList0, "7~O^b;");
      StrBuilder strBuilder8 = strBuilder4.replaceFirst('J', 'J');
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("");
      int int0 = strBuilder1.lastIndexOf(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.append(0);
      StringBuffer stringBuffer0 = new StringBuffer(0);
      StrBuilder strBuilder2 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder3 = strBuilder0.append(163.3147F);
      String string0 = "8m9";
      StrBuilder strBuilder4 = strBuilder3.insert(0, "8m9");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      Writer writer0 = strBuilder0.asWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read((char[]) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Miib:c}S<%DLE.");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(1L);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("F@:@zpen.+ch");
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity((-2259));
      StrBuilder strBuilder2 = strBuilder1.appendNull();
      StrBuilder strBuilder3 = strBuilder2.replaceFirst(" F%5%5V^rCvOcd?WE|", "F@:@zpen.+ch");
      StrBuilder strBuilder4 = strBuilder0.append(0.0F);
      char[] charArray0 = strBuilder0.toCharArray();
      StrBuilder strBuilder5 = strBuilder4.appendWithSeparators((Object[]) null, "");
      StrBuilder strBuilder6 = strBuilder5.replaceAll("path.separator", "");
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      boolean boolean0 = strBuilder2.contains(strMatcher0);
      String string0 = strBuilder1.substring(0);
      int int0 = strBuilder2.size();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder5.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(charArray0);
      Writer writer0 = strBuilder1.asWriter();
      int int1 = strBuilder4.indexOf(strMatcher0);
      StrTokenizer strTokenizer0 = strBuilder2.asTokenizer();
      StrBuilder strBuilder7 = strBuilder5.append(false);
      StrBuilder strBuilder8 = strBuilder7.replaceAll("^Pl4@", "Invalid startIndex: ");
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      String string0 = "java.vm.specification.version";
      StrBuilder strBuilder0 = new StrBuilder("java.vm.specification.version");
      int int0 = 116;
      char[] charArray0 = new char[3];
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, (-2673), 116);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 116
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) "1.6", (-4087), 'j');
      StrBuilder strBuilder2 = strBuilder0.append("", 0, 0);
      StrBuilder strBuilder3 = strBuilder2.deleteAll('7');
      // Undeclared exception!
      try { 
        strBuilder3.append(strBuilder2, (-4087), (-4087));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder0.replaceAll("Invalid startIndex: ", "Invalid startIndex: ");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(621L);
      char[] charArray0 = new char[2];
      charArray0[0] = 'G';
      charArray0[1] = 'G';
      // Undeclared exception!
      try { 
        strBuilder1.append(charArray0, (-2510), (-2510));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -2510
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("F@:@zpen.+ch");
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity((-2259));
      StrBuilder strBuilder2 = strBuilder1.appendNull();
      StrBuilder strBuilder3 = strBuilder2.replaceFirst(" F%5%5V^rCvOcd?WE|", "F@:@zpen.+ch");
      StrBuilder strBuilder4 = strBuilder0.append(0.0F);
      char[] charArray0 = strBuilder0.toCharArray();
      StrBuilder strBuilder5 = strBuilder4.appendWithSeparators((Object[]) null, "");
      StrBuilder strBuilder6 = strBuilder5.replaceAll("path.separator", "");
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      boolean boolean0 = strBuilder2.contains(strMatcher0);
      String string0 = strBuilder1.substring(0);
      int int0 = strBuilder2.size();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder5.new StrBuilderWriter();
      Writer writer0 = strBuilder1.asWriter();
      int int1 = strBuilder4.indexOf(strMatcher0);
      StrTokenizer strTokenizer0 = strBuilder2.asTokenizer();
      StrBuilder strBuilder7 = strBuilder5.append(false);
      StrBuilder strBuilder8 = strBuilder7.replaceAll("^Pl4@", "Invalid startIndex: ");
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("KI4t");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) "KI4t", (-947), 'p');
      StrBuilder strBuilder2 = strBuilder0.deleteFirst("KI4t");
      Writer writer0 = strBuilder0.asWriter();
      String string0 = strBuilder0.midString((-5582), 548);
      boolean boolean0 = strBuilder0.endsWith("KI4t");
      int int0 = strBuilder0.length();
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        strBuilder2.append(stringBuffer0, (-764), (-5582));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = null;
      StrBuilder strBuilder1 = strBuilder0.deleteAll((String) null);
      int int0 = strBuilder1.indexOf((String) null);
      int int1 = 0;
      char char0 = 'G';
      String string1 = "";
      StrBuilder strBuilder2 = strBuilder0.replaceAll((String) null, "");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.previous();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[6];
      charArray0[0] = '8';
      charArray0[1] = 'r';
      charArray0[2] = 's';
      StrBuilder strBuilder1 = strBuilder0.append(true);
      charArray0[3] = '';
      charArray0[4] = 't';
      strBuilder_StrBuilderWriter0.write(charArray0);
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) "";
      objectArray0[1] = (Object) "";
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators(objectArray0, "");
      strBuilder2.buffer = charArray0;
      charArray0[5] = '?';
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      // Undeclared exception!
      try { 
        strBuilder0.deleteAll(strMatcher0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.lang.text.StrMatcher$CharSetMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      int int0 = 114;
      StrBuilder strBuilder0 = new StrBuilder(114);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrBuilder strBuilder1 = strBuilder0.setNullText("");
      char[] charArray0 = new char[6];
      charArray0[0] = '^';
      charArray0[1] = '/';
      charArray0[2] = 'f';
      charArray0[3] = 'w';
      charArray0[4] = ',';
      charArray0[5] = '@';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 341, 0);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrBuilder strBuilder2 = new StrBuilder(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      int int0 = strBuilder2.lastIndexOf(strMatcher0);
      StrBuilder strBuilder3 = strBuilder2.appendPadding(0, '!');
      StrBuilder strBuilder4 = strBuilder3.append(strBuilder1);
      StrBuilder strBuilder5 = strBuilder2.replaceAll("KvXAOo2pydc+bSe", "");
      boolean boolean0 = strBuilder0.equals((Object) strBuilder2);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[4];
      charArray0[0] = '{';
      charArray0[1] = 'Q';
      charArray0[2] = 'e';
      charArray0[3] = 'E';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("x)LLKPIl*7AmPWVA'");
      StrBuilder strBuilder1 = strBuilder0.deleteAll('P');
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      char[] charArray0 = new char[3];
      charArray0[0] = 'P';
      charArray0[1] = 'P';
      charArray0[2] = 'P';
      int int0 = strMatcher0.isMatch(charArray0, 2549, 2549, 2549);
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("os.arch");
      StrBuilder strBuilder2 = strBuilder1.deleteAll('P');
      int int1 = strBuilder1.indexOf(strMatcher0, 114);
      String string0 = strBuilder1.toString();
      int int2 = strBuilder0.lastIndexOf("");
      String string1 = strBuilder0.getNewLineText();
      char[] charArray1 = strBuilder0.toCharArray();
      // Undeclared exception!
      try { 
        strBuilder0.getChars(114, 0, charArray1, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4.1");
      StrBuilder strBuilder1 = strBuilder0.append(3169);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[3];
      charArray0[0] = 't';
      charArray0[1] = 'Q';
      charArray0[2] = 'c';
      int int0 = 102;
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.append((CharSequence) "4.1", 0, 117);
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2629));
      StrBuilder strBuilder1 = strBuilder0.insert(0, 'j');
      StrBuilder strBuilder2 = new StrBuilder("Invalid startIndex: ");
      char[] charArray0 = new char[9];
      charArray0[0] = 'j';
      charArray0[1] = 'j';
      charArray0[2] = 'j';
      charArray0[3] = 'j';
      charArray0[4] = 'j';
      charArray0[5] = 'j';
      charArray0[6] = 'j';
      charArray0[7] = 'j';
      charArray0[8] = 'j';
      StrBuilder strBuilder3 = strBuilder2.insert(0, charArray0);
      StrBuilder strBuilder4 = strBuilder1.append(strBuilder2, 0, 0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1));
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('|', ']');
      char[] charArray0 = new char[7];
      charArray0[0] = '|';
      charArray0[1] = ']';
      charArray0[2] = ']';
      charArray0[3] = ']';
      charArray0[4] = '|';
      charArray0[5] = ']';
      charArray0[6] = ']';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      // Undeclared exception!
      try { 
        strBuilder0.replace(strMatcher0, (String) null, (-1), 5049, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      Object object0 = new Object();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(object0, 0, 'S');
      StrBuilder strBuilder2 = strBuilder1.append((-364.862F));
      String string0 = strBuilder0.substring(0, 0);
      int int1 = 101;
      // Undeclared exception!
      try { 
        strBuilder1.charAt(101);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 101
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.startsWith("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('y');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
      StrBuilder strBuilder2 = strBuilder1.deleteFirst('y');
      String string0 = strBuilder2.substring(0, 0);
      StrBuilder strBuilder3 = strBuilder0.clear();
      StrBuilder strBuilder4 = strBuilder3.append((-404.3F));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder4.new StrBuilderTokenizer();
      String string1 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder strBuilder5 = strBuilder1.append('y');
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(793);
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      int int0 = strBuilder1.indexOf(strMatcher0);
      String string0 = strBuilder1.toString();
      String string1 = "";
      boolean boolean0 = strBuilder0.endsWith("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int1 = strBuilder_StrBuilderReader0.read();
      int int2 = 0;
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((Object) strBuilder_StrBuilderReader0, 0, 'L');
      int int3 = strBuilder2.indexOf(strMatcher0, 370);
      // Undeclared exception!
      try { 
        strBuilder2.validateRange(0, (-2353));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("1.4");
      int int0 = strBuilder0.hashCode();
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      char[] charArray0 = new char[4];
      charArray0[0] = 'T';
      charArray0[1] = '4';
      StrMatcher strMatcher1 = StrMatcher.charMatcher('T');
      charArray0[2] = 'G';
      charArray0[3] = 'G';
      int int1 = strMatcher0.isMatch(charArray0, 0, (-585), 1883);
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.append((-663.7F));
      boolean boolean1 = strBuilder1.equals(strBuilder0);
      int int2 = strBuilder0.size();
      StrBuilder strBuilder2 = strBuilder1.append(true);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(", '");
      StrBuilder strBuilder1 = new StrBuilder(2);
      StrBuilder strBuilder2 = strBuilder1.deleteFirst("?~P<dp+K)j0Lj");
      Reader reader0 = strBuilder2.asReader();
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder1);
      int int0 = (-782);
      char[] charArray0 = new char[0];
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      int int1 = strBuilder2.indexOf((StrMatcher) strMatcher_CharSetMatcher0, (-782));
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadRight((-782), (-3230), 'A');
      // Undeclared exception!
      try { 
        strBuilder4.deleteCharAt((-782));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -782
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("%\"P-v$Hwgu1l}^d");
      boolean boolean0 = strBuilder0.contains("");
      char[] charArray0 = new char[8];
      charArray0[0] = '6';
      charArray0[1] = 'P';
      charArray0[2] = '.';
      charArray0[3] = '+';
      charArray0[4] = '2';
      charArray0[5] = '0';
      charArray0[6] = 'V';
      charArray0[7] = '\"';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("', has a length less than 2");
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setTrimmerMatcher(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Iterator) strTokenizer0, "%\"P-v$Hwgu1l}^d");
      // Undeclared exception!
      try { 
        strBuilder2.deleteCharAt(5404);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 5404
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      int int0 = 4164;
      // Undeclared exception!
      try { 
        strBuilder0.insert(4164, (Object) strBuilder_StrBuilderTokenizer0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 4164
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      int int0 = 0;
      char[] charArray0 = new char[0];
      StrBuilder strBuilder2 = strBuilder1.appendNull();
      // Undeclared exception!
      try { 
        strBuilder2.append("z?,", 0, (-2354));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(")D|WKi~xP]W,))(D2GM");
      char[] charArray0 = strBuilder0.toCharArray();
      String string0 = strBuilder0.midString(1994, 5);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      String string0 = "x(t7Vcwa";
      StrBuilder strBuilder0 = new StrBuilder("x(t7Vcwa");
      int int0 = (-1608);
      int int1 = 0;
      StrBuilder strBuilder1 = strBuilder0.append((float) (-1608));
      char char0 = 'T';
      StrBuilder strBuilder2 = strBuilder0.append(true);
      StrBuilder strBuilder3 = strBuilder2.append((Object) "x(t7Vcwa");
      // Undeclared exception!
      try { 
        strBuilder1.insert((-1608), 'T');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1608
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1614));
      int int0 = strBuilder0.validateRange(0, 0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendPadding((-2698), '}');
      int int0 = strBuilder1.indexOf("", (-2698));
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("3X9Kl_o{$#z-?");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.next();
      StrBuilder strBuilder1 = strBuilder0.append((Object) "3X9Kl_o{$#z-?");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Collection) linkedList0, "3X9Kl_o{$#z-?");
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      String string0 = "";
      int int1 = strBuilder_StrBuilderReader0.read();
      StringBuffer stringBuffer0 = new StringBuffer("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[9];
      charArray0[0] = '}';
      charArray0[1] = 'Q';
      charArray0[2] = ')';
      charArray0[3] = 'E';
      charArray0[4] = 'E';
      charArray0[5] = 'i';
      charArray0[6] = '?';
      charArray0[7] = 'P';
      charArray0[8] = ')';
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance(charArray0);
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 0, 4);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.specification.version");
      StrBuilder strBuilder1 = strBuilder0.insert(0, (-1.0));
      strBuilder0.validateIndex(0);
      StrBuilder strBuilder2 = strBuilder0.insert(0, (-2370.0F));
      Object[] objectArray0 = new Object[8];
      StrBuilder strBuilder3 = new StrBuilder(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder3.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      objectArray0[0] = object0;
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) "java.specification.version";
      objectArray0[3] = (Object) "java.specification.version";
      objectArray0[4] = (Object) strBuilder2;
      objectArray0[5] = (Object) strBuilder1;
      objectArray0[6] = (Object) "java.specification.version";
      objectArray0[7] = (Object) strBuilder1;
      StrBuilder strBuilder4 = strBuilder2.appendWithSeparators(objectArray0, "java.specification.version");
      // Undeclared exception!
      try { 
        strBuilder0.insert((-573), (long) (-573));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -573
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrMatcher");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('j');
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(394);
      String string0 = "Invalid offset: ";
      StrBuilder strBuilder1 = strBuilder0.deleteAll("Invalid offset: ");
      StrBuilder strBuilder2 = strBuilder0.deleteFirst('\\');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      Reader reader0 = strBuilder1.asReader();
      char[] charArray0 = new char[9];
      charArray0[0] = '\\';
      charArray0[1] = '\\';
      charArray0[2] = '\\';
      charArray0[3] = '\\';
      StrBuilder strBuilder3 = strBuilder1.appendFixedWidthPadRight((Object) strBuilder_StrBuilderReader0, 0, 'L');
      charArray0[4] = '\\';
      charArray0[5] = '\\';
      charArray0[6] = '\\';
      charArray0[7] = '\\';
      charArray0[8] = '\\';
      int int0 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 101, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      int int0 = 1638;
      StrBuilder strBuilder0 = new StrBuilder(1638);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      String string0 = "LINUX";
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "LINUX");
      StrBuilder strBuilder2 = strBuilder1.trim();
      // Undeclared exception!
      try { 
        strBuilder2.deleteCharAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("03gZ.TFot39");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(1006);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1006
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(604);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("");
      StrBuilder strBuilder2 = strBuilder0.append((StringBuffer) null);
      StrBuilder strBuilder3 = new StrBuilder("6ZOaf");
      int int0 = (-2072);
      // Undeclared exception!
      try { 
        strBuilder3.insert(604, (-425.4995F));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 604
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt((-1278));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1278
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
      char[] charArray0 = new char[8];
      charArray0[0] = 'a';
      charArray0[1] = '3';
      charArray0[2] = 'A';
      charArray0[3] = 'Y';
      charArray0[4] = '$';
      charArray0[5] = '\"';
      charArray0[6] = 'U';
      charArray0[7] = '6';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      // Undeclared exception!
      try { 
        strBuilder1.append(strBuilder0, 0, (-469));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.endsWith(">%M<Q\"h");
      StrBuilder strBuilder1 = strBuilder0.deleteAll("Invalid length: ");
      StrBuilder strBuilder2 = strBuilder1.append(strBuilder0, 0, 0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.previous();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[5];
      charArray0[0] = '`';
      charArray0[1] = '.';
      charArray0[2] = '.';
      charArray0[3] = 'p';
      charArray0[4] = 'M';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 117, 1056);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 1056
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder strBuilder1 = strBuilder0.insert(0, object0);
      int int1 = (-3010);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-3010), true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3010
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("[Z^w*/+3");
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder1.append(strBuilder0);
      String string0 = strBuilder2.midString(0, 0);
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, 32, 32);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      int int0 = 49;
      StrBuilder strBuilder0 = new StrBuilder(49);
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance();
      String string0 = "";
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "");
      StringBuffer stringBuffer0 = new StringBuffer(49);
      int int1 = 628;
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 628, 628);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = new StrBuilder("|oGi@");
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      // Undeclared exception!
      try { 
        strBuilder0.substring(118);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.toString();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      char[] charArray0 = new char[6];
      charArray0[0] = '?';
      charArray0[1] = 'o';
      charArray0[2] = '0';
      charArray0[3] = ';';
      charArray0[4] = ',';
      charArray0[5] = 'R';
      char[] charArray1 = strBuilder0.getChars(charArray0);
      boolean boolean0 = strBuilder0.isEmpty();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) stringBuffer0);
      strBuilder_StrBuilderWriter0.write(charArray1, 0, 0);
      strBuilder_StrBuilderWriter0.write(charArray1, 0, 0);
      Writer writer1 = strBuilder_StrBuilderWriter0.append('0');
      strBuilder_StrBuilderWriter0.close();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string1 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder strBuilder1 = new StrBuilder(1);
      StrBuilder strBuilder2 = strBuilder0.append((Object) strBuilder1);
      StrBuilder strBuilder3 = strBuilder2.insert(0, (float) 0);
      int int0 = strBuilder1.indexOf('x');
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("");
      StringBuffer stringBuffer0 = new StringBuffer(0);
      StringBuffer stringBuffer1 = new StringBuffer(stringBuffer0);
      // Undeclared exception!
      try { 
        strBuilder1.append(stringBuffer1, (-1485), (-873));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StringBuffer stringBuffer0 = new StringBuffer("");
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0, 0, 0);
      String string0 = strBuilder0.leftString(0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("end < start");
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('y');
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      int int1 = strBuilder0.lastIndexOf("end < start");
      // Undeclared exception!
      try { 
        strBuilder0.insert((-2036), (Object) strMatcher0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2036
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1));
      int int0 = strBuilder0.lastIndexOf('l', (-1));
      String string0 = "";
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      StrBuilder strBuilder3 = strBuilder2.insert(0, (-758.99561));
      // Undeclared exception!
      try { 
        strBuilder3.delete(0, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.appendPadding((-840), 't');
      StrBuilder strBuilder2 = strBuilder1.deleteAll('t');
      Reader reader0 = strBuilder1.asReader();
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      boolean boolean0 = strBuilder1.contains(strMatcher0);
      int int0 = strBuilder0.indexOf('t');
      StrBuilder strBuilder3 = strBuilder0.deleteFirst('E');
      boolean boolean1 = strBuilder3.equalsIgnoreCase(strBuilder0);
      String string1 = "\\3~AEJ@Wqcf^9qJtm";
      StrBuilder strBuilder4 = strBuilder0.replaceFirst("", "\u0003~AEJ@Wqcf^9qJtm");
      // Undeclared exception!
      try { 
        strBuilder3.validateRange((-1), 765);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("StrTokenizer[not tokenized yet]");
      String string0 = strBuilder0.toString();
      int int0 = 117;
      int int1 = strBuilder0.lastIndexOf("", 117);
      char char0 = '%';
      StrBuilder strBuilder1 = strBuilder0.deleteAll('%');
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      char char1 = '.';
      // Undeclared exception!
      try { 
        strBuilder1.setCharAt(117, '.');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 117
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = new StrBuilder(0);
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((Object) strBuilder1, 0, 't');
      Reader reader0 = strBuilder0.asReader();
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(0, 'g');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1254);
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.replace(0, 1254, "U[GF-c3-<,qAcC%");
      StrBuilder strBuilder2 = strBuilder1.appendNull();
      int int1 = (-1310);
      // Undeclared exception!
      try { 
        strBuilder2.insert((-1310), 0.0F);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1310
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      int int0 = 9;
      StrBuilder strBuilder0 = new StrBuilder(9);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      String string0 = null;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, (String) null);
      int int1 = 0;
      String string1 = strBuilder1.rightString(0);
      int int2 = 871;
      // Undeclared exception!
      try { 
        strBuilder0.substring(871, 871);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = 'J';
      char[] charArray0 = new char[6];
      charArray0[0] = 'J';
      charArray0[1] = 'J';
      charArray0[2] = 'J';
      charArray0[3] = 'l';
      charArray0[4] = 'J';
      charArray0[5] = 'J';
      // Undeclared exception!
      try { 
        strBuilder0.insert(0, charArray0, 89, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: 89
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(488);
      boolean boolean0 = strBuilder0.isEmpty();
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) strBuilder0;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "h*v*~q");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[4];
      charArray0[0] = 'O';
      charArray0[1] = '#';
      charArray0[2] = '5';
      charArray0[3] = '[';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 488, 488);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1121);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.previousToken();
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) null);
      char[] charArray0 = new char[3];
      charArray0[0] = '0';
      String string1 = "Gj/EdUjgk";
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.replace((StrMatcher) null, "Gj/EdUjgk", 0, 0, 1121);
      charArray0[1] = 'S';
      strBuilder_StrBuilderWriter0.write(1121);
      charArray0[2] = 'E';
      StrBuilder strBuilder2 = strBuilder0.append((double) 0);
      int int1 = 0;
      strBuilder_StrBuilderWriter0.write(charArray0, 0, 0);
      StrBuilder strBuilder3 = strBuilder0.setCharAt(0, '{');
      Writer writer1 = strBuilder3.asWriter();
      int int2 = 2418;
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("Gj/EdUjgk", 2418, 2418);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid startIndex: ");
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      boolean boolean0 = strBuilder_StrBuilderTokenizer0.hasNext();
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setQuoteMatcher(strMatcher_NoMatcher0);
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      // Undeclared exception!
      try { 
        strBuilder0.equals((StrBuilder) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      Object object0 = new Object();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(object0, 0, 'S');
      StrBuilder strBuilder2 = strBuilder1.append((-364.862F));
      String string0 = strBuilder0.substring(0, 0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("X0#`[u>v%]P:epdjf)V");
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder1.replaceFirst("length must be valid", "X0#`[u>v%]P:epdjf)V");
      int int0 = 724;
      StrBuilder strBuilder3 = new StrBuilder((String) null);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder3.new StrBuilderTokenizer();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.previous();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[0];
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setQuoteMatcher(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "Lx(1xC4");
      StrBuilder strBuilder2 = strBuilder0.append(charArray0, 0, 0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      StrBuilder strBuilder3 = strBuilder0.deleteAll(strMatcher0);
      StringBuffer stringBuffer0 = new StringBuffer("0+;L&E+bn<92-Y");
      StrBuilder strBuilder4 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder5 = strBuilder4.deleteFirst("0+;L&E+bn<92-Y");
      StrBuilder strBuilder6 = strBuilder4.setNullText("0+;L&E+bn<92-Y");
      int int0 = strBuilder3.lastIndexOf(strMatcher0, 614);
      int int1 = strBuilder2.lastIndexOf("0+;L&E+bn<92-Y");
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder7 = strBuilder4.replaceFirst(strMatcher1, ">");
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      char char0 = 'D';
      StrMatcher strMatcher0 = StrMatcher.charMatcher('D');
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "");
      StrBuilder strBuilder2 = strBuilder0.insert(0, (-1293.437F));
      // Undeclared exception!
      try { 
        strBuilder2.replace((-230), (-230), "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -230
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      int int0 = (-1);
      StrBuilder strBuilder0 = new StrBuilder((-1));
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      int int1 = 105;
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(105);
      StrBuilder strBuilder2 = strBuilder1.reverse();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      strBuilder_StrBuilderReader0.mark((-1));
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      int int2 = 114;
      // Undeclared exception!
      try { 
        strBuilder0.insert(114, false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 114
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.runtime.version");
      StrBuilder strBuilder1 = strBuilder0.replace(0, 0, "java.runtime.version");
      StrBuilder strBuilder2 = strBuilder1.ensureCapacity(2415);
      StrBuilder strBuilder3 = strBuilder0.setNullText("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      StrMatcher strMatcher0 = StrMatcher.charMatcher('{');
      int int0 = strBuilder1.lastIndexOf(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setQuoteChar('*');
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Iterator) strTokenizer0, "L[\"tohm~{m`qjl");
      boolean boolean0 = strBuilder1.contains('');
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder2.append("2q$L7HD*Y00gwg", (-1153), (-1153));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = strBuilder0.leftString(0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(115);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("Invalid offset: ");
      String string0 = strBuilder0.rightString((-1031));
      strBuilder_StrBuilderWriter0.flush();
      Reader reader0 = strBuilder0.asReader();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[6];
      charArray0[0] = 'T';
      charArray0[1] = ' ';
      charArray0[2] = 'd';
      charArray0[3] = 'a';
      charArray0[4] = '2';
      charArray0[5] = 'C';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, (-1031), (-1031));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('~');
      StrBuilder strBuilder2 = strBuilder0.append((-2294.50830097288));
      StrBuilder strBuilder3 = strBuilder2.trim();
      StrBuilder strBuilder4 = strBuilder0.insert(0, false);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      char[] charArray0 = new char[8];
      charArray0[0] = '~';
      charArray0[1] = '~';
      charArray0[2] = '~';
      charArray0[3] = '~';
      charArray0[4] = '~';
      charArray0[5] = '~';
      charArray0[6] = '~';
      charArray0[7] = '~';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 0, (-1061));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      int int0 = 2546;
      StrBuilder strBuilder0 = new StrBuilder(2546);
      char[] charArray0 = new char[9];
      charArray0[0] = '5';
      charArray0[1] = '';
      charArray0[2] = 'S';
      charArray0[3] = 'U';
      charArray0[4] = 'Q';
      charArray0[5] = '[';
      charArray0[6] = '_';
      charArray0[7] = '2';
      charArray0[8] = ' ';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StrBuilder strBuilder2 = strBuilder0.appendNewLine();
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex(3335);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3335
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3071);
      boolean boolean0 = strBuilder0.contains("");
      StrBuilder strBuilder1 = strBuilder0.deleteAll('-');
      StrBuilder strBuilder2 = new StrBuilder("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      char[] charArray0 = new char[9];
      charArray0[0] = '-';
      charArray0[1] = '-';
      charArray0[2] = '-';
      charArray0[3] = '-';
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder3 = strBuilder1.appendWithSeparators((Collection) linkedList0, "");
      charArray0[4] = '-';
      charArray0[5] = '-';
      charArray0[6] = '-';
      charArray0[7] = '-';
      charArray0[8] = '-';
      // Undeclared exception!
      try { 
        strBuilder3.append(strBuilder1, 3071, 3071);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder1 = new StrBuilder(4);
      StrBuilder strBuilder2 = strBuilder1.deleteFirst('0');
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, 97, 97);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher((char[]) null);
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, (String) null);
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance((String) null);
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, (String) null);
      String string0 = strBuilder0.midString((-2318), (-2318));
      Reader reader0 = strBuilder0.asReader();
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder(0);
      char[] charArray0 = new char[8];
      charArray0[0] = 'j';
      charArray0[1] = '+';
      charArray0[2] = 'L';
      charArray0[3] = 'R';
      charArray0[4] = '}';
      charArray0[5] = ':';
      charArray0[6] = 'q';
      charArray0[7] = '\"';
      StrBuilder strBuilder2 = strBuilder1.append(charArray0);
      StrBuilder strBuilder3 = strBuilder0.append((Object) strBuilder1);
      String string0 = strBuilder1.substring(0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.lastIndexOf('M');
      StrBuilder strBuilder1 = strBuilder0.deleteAll((StrMatcher) null);
      char[] charArray0 = new char[2];
      charArray0[0] = 'M';
      charArray0[1] = 'M';
      // Undeclared exception!
      try { 
        strBuilder1.insert((-1), charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[5];
      charArray0[0] = '<';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(1765, 238, charArray0, 18);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 238
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.lastIndexOf('u', 0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.lastIndexOf("WDP");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(1L);
      strBuilder_StrBuilderReader0.mark((-1));
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('z');
      int int1 = strBuilder1.size();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      Writer writer0 = strBuilder_StrBuilderWriter0.append('s');
      strBuilder_StrBuilderWriter0.close();
      String string0 = strBuilder0.rightString(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      int int2 = strBuilder1.indexOf(strMatcher0, 0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      String string0 = "q&emcaRj26#'JQZX*/`";
      StrBuilder strBuilder0 = new StrBuilder("q&emcaRj26#'JQZX*/`");
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("q&emcaRj26#'JQZX*/`");
      Writer writer0 = strBuilder0.asWriter();
      // Undeclared exception!
      try { 
        strBuilder1.insert(1064, (float) 1064);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1064
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("Go;*R8]0");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      boolean boolean1 = strBuilder0.contains(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.deleteAll('}');
      StrBuilder strBuilder3 = new StrBuilder((-757));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder3.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      String string1 = strBuilder0.leftString(32);
      Writer writer0 = strBuilder0.asWriter();
      // Undeclared exception!
      try { 
        strBuilder1.substring(32);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.delete(0, 0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[7];
      charArray0[0] = 'G';
      charArray0[1] = 'X';
      charArray0[2] = 'G';
      charArray0[3] = 'A';
      charArray0[4] = 'K';
      charArray0[5] = '`';
      charArray0[6] = '6';
      strBuilder_StrBuilderWriter0.write(charArray0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst((StrMatcher) null);
      StrBuilder strBuilder2 = strBuilder1.replaceFirst("startIndex must be valid", "5.1");
      StrBuilder strBuilder3 = strBuilder1.append(false);
      int int0 = strBuilder1.lastIndexOf("-[Up3ogyc.\u0007O[TFV");
      StrBuilder strBuilder4 = strBuilder0.deleteFirst('l');
      char[] charArray0 = new char[4];
      charArray0[0] = 'l';
      charArray0[1] = 'l';
      charArray0[2] = 'l';
      charArray0[3] = 'l';
      StrBuilder strBuilder5 = strBuilder0.append(charArray0);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((String) null, (-3455), 3716);
      // Undeclared exception!
      try { 
        strBuilder1.insert(97, (float) (-3455));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 97
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = 'q';
      StrBuilder strBuilder1 = strBuilder0.replaceAll('q', 'q');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[8];
      StrBuilder strBuilder2 = strBuilder0.appendPadding(0, 'W');
      StrBuilder strBuilder3 = strBuilder2.insert(0, 0);
      charArray0[0] = 'k';
      charArray0[1] = 'q';
      charArray0[2] = 'q';
      charArray0[3] = 'w';
      charArray0[4] = 'q';
      charArray0[5] = 'q';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read((CharBuffer) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.indexOf("E5~VxjArxNK0d'");
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      String string0 = "Caught a SecurityException reading the system property '";
      StrBuilder strBuilder0 = new StrBuilder("Caught a SecurityException reading the system property '");
      StrBuilder strBuilder1 = strBuilder0.append((-1.0));
      StrTokenizer strTokenizer0 = strBuilder1.asTokenizer();
      StrBuilder strBuilder2 = strBuilder0.deleteAll("Caught a SecurityException reading the system property '");
      int int0 = 4574;
      // Undeclared exception!
      try { 
        strBuilder2.insert(4574, 0L);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 4574
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteAll("yB+=Om");
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1638);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder1 = new StrBuilder("=*HwKJr");
      StrBuilder strBuilder2 = strBuilder1.trim();
      StrBuilder strBuilder3 = strBuilder2.deleteCharAt(0);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = "NGThq>I]3T\\+G";
      char[] charArray0 = new char[5];
      charArray0[0] = '0';
      charArray0[1] = 'p';
      StrBuilder strBuilder1 = strBuilder0.insert(0, charArray0);
      charArray0[2] = 's';
      charArray0[3] = 'F';
      charArray0[4] = '>';
      int int0 = strBuilder0.lastIndexOf((StrMatcher) null);
      int int1 = (-791);
      // Undeclared exception!
      try { 
        strBuilder0.getChars(0, 0, charArray0, (-791));
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder();
      int int0 = strBuilder0.lastIndexOf((StrMatcher) null, (-1188));
      char[] charArray0 = new char[3];
      charArray0[0] = 'L';
      charArray0[1] = '#';
      charArray0[2] = 'o';
      String string0 = strBuilder1.midString((-3391), (-3391));
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder(";'>a|<jV*Rf8}=");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.next();
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((Object) ";'>a|<jV*Rf8}=", 32, '8');
      int int0 = 31;
      StrBuilder strBuilder3 = strBuilder0.ensureCapacity(31);
      int int1 = strBuilder1.indexOf("end < start", (-191));
      // Undeclared exception!
      try { 
        strBuilder1.insert(2302, "end < start");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2302
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("path.separator");
      StrBuilder strBuilder1 = strBuilder0.insert(9, 'm');
      StrBuilder strBuilder2 = strBuilder0.append("path.separator");
      String string0 = strBuilder0.leftString(1804);
      boolean boolean0 = strBuilder2.contains("path.separator");
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      // Undeclared exception!
      try { 
        strBuilder2.replace(strMatcher0, "7QDC~kAH^vb_\\", 227, (-1443), (-1443));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid startIndex: ");
      boolean boolean0 = strBuilder0.contains("Invalid startIndex: ");
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("t!S!s;7(ivN0u");
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("");
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("");
      StrBuilder strBuilder2 = strBuilder1.replaceAll('Y', 'Y');
      StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
      StrBuilder strBuilder4 = strBuilder1.append((-718L));
      StrBuilder strBuilder5 = strBuilder4.append('Y');
      StrBuilder strBuilder6 = strBuilder2.deleteAll(strMatcher0);
      StrBuilder strBuilder7 = strBuilder6.appendPadding(2016, '_');
      StrBuilder strBuilder8 = strBuilder0.minimizeCapacity();
      String string0 = strBuilder2.substring(0);
      // Undeclared exception!
      try { 
        strBuilder5.charAt((-383));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -383
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2);
      // Undeclared exception!
      try { 
        strBuilder0.charAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      // Undeclared exception!
      try { 
        strBuilder0.insert(1390, (long) 1390);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1390
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.replaceAll("org.apache.commons.lang.ArrayUtils", "org.apache.commons.lang.ArrayUtils");
      StrBuilder strBuilder2 = strBuilder1.append(false);
      char char0 = strBuilder1.charAt(1);
      StrBuilder strBuilder3 = strBuilder1.minimizeCapacity();
      StrBuilder strBuilder4 = strBuilder3.appendNewLine();
      StrBuilder strBuilder5 = strBuilder1.insert(0, "org.apache.commons.lang.ArrayUtils");
      // Undeclared exception!
      try { 
        strBuilder4.replace((StrMatcher) null, "org.apache.commons.lang.ArrayUtils", 4, 1, 4);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.setNullText((String) null);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("= bcG/{r`/s5z9g:p#");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "= bcG/{r`/s5z9g:p#");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.next();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = new StrBuilder("ac0O4sVj");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterChar(' ');
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "ac0O4sVj");
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      String string0 = "Lj'/3}`";
      StrBuilder strBuilder0 = new StrBuilder("Lj'/3}`");
      StrBuilder strBuilder1 = strBuilder0.append(1.5);
      // Undeclared exception!
      try { 
        strBuilder1.insert(2403, (long) 2403);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2403
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      // Undeclared exception!
      try { 
        strBuilder0.insert(102, (double) 102);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 102
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder2 = strBuilder0.append(0.0F);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(",");
      int int0 = strBuilder0.capacity();
      StrBuilder strBuilder1 = strBuilder0.append((long) 33);
      // Undeclared exception!
      try { 
        strBuilder1.substring(33, 33);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("j[2{mHg93");
      String string0 = strBuilder0.leftString(4);
      int int0 = 32;
      String string1 = strBuilder0.midString(4, 32);
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance();
      char[] charArray0 = new char[2];
      char char0 = 'e';
      charArray0[0] = 'e';
      char char1 = 'h';
      charArray0[1] = 'h';
      strBuilder0.buffer = charArray0;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "gTwH0(mB2Fm7i]\"9");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      strBuilder_StrBuilderReader0.mark(32);
      int int1 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 0, 4);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 4
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Rc:6)`f<XRKyXmI5^p");
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "");
      StrBuilder strBuilder2 = strBuilder0.deleteAll('?');
      StrBuilder strBuilder3 = strBuilder0.appendPadding((-1704), 'G');
      Writer writer0 = strBuilder2.asWriter();
      // Undeclared exception!
      try { 
        strBuilder0.append("Rc:6)`f<XRKyXmI5^p", 495, 4);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.insert(0, (-461.37523314));
      StrBuilder strBuilder2 = strBuilder0.appendNull();
      int int0 = strBuilder2.lastIndexOf('0');
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "";
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("");
      StrMatcher strMatcher0 = StrMatcher.charMatcher('j');
      StrMatcher strMatcher1 = StrMatcher.charMatcher('0');
      StrMatcher strMatcher2 = StrMatcher.charMatcher('5');
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_StringMatcher0, 101);
      int int1 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_StringMatcher0);
      int int2 = strBuilder0.indexOf((StrMatcher) strMatcher_StringMatcher0, 101);
      StrBuilder strBuilder1 = strBuilder0.deleteAll(';');
      int int3 = strBuilder0.lastIndexOf("", 0);
      StrBuilder strBuilder2 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder1.insert((-1), 101);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = 0;
      strBuilder_StrBuilderReader0.mark(0);
      char char0 = 'Y';
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('Y', 'Y');
      StrBuilder strBuilder2 = strBuilder0.setLength(0);
      String string1 = strBuilder1.rightString(1356);
      int int1 = 1523;
      // Undeclared exception!
      try { 
        strBuilder1.toCharArray(1523, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      LinkedList<StrBuilder> linkedList0 = new LinkedList<StrBuilder>();
      StrBuilder strBuilder1 = strBuilder0.append('C');
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
      StrBuilder strBuilder3 = strBuilder2.append((char[]) null, 0, 725);
      StrBuilder strBuilder4 = strBuilder3.setNewLineText((String) null);
      StrBuilder strBuilder5 = strBuilder1.replaceFirst('-', '-');
      int int0 = strBuilder1.lastIndexOf("", 5);
      // Undeclared exception!
      try { 
        strBuilder2.delete(939, (-427));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1555));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1555), "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1555
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("Mac");
      char[] charArray0 = new char[5];
      charArray0[0] = '9';
      charArray0[1] = 'r';
      charArray0[2] = '?';
      charArray0[3] = '5';
      charArray0[4] = 'T';
      int int0 = strMatcher0.isMatch(charArray0, 0, 0, 0);
      int int1 = strMatcher0.isMatch(charArray0, 0, 0, (-1513));
      StrBuilder strBuilder1 = strBuilder0.replace(strMatcher0, "Mac", 0, 0, 5233);
      StrBuilder strBuilder2 = strBuilder0.reverse();
      int int2 = strBuilder2.indexOf(strMatcher0, 0);
      StrBuilder strBuilder3 = strBuilder2.deleteFirst('5');
      StrBuilder strBuilder4 = strBuilder3.setLength(0);
      StrBuilder strBuilder5 = strBuilder0.appendNewLine();
      String string0 = strBuilder1.getNullText();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder5.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("Mac", 4509, 4509);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(39);
      StrBuilder strBuilder1 = strBuilder0.append('s');
      StrBuilder strBuilder2 = strBuilder0.deleteAll("");
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      StrBuilder strBuilder3 = strBuilder2.replaceAll(strMatcher0, "length must be valid");
      String string0 = strBuilder0.getNewLineText();
      StrBuilder strBuilder4 = strBuilder1.appendNewLine();
      StrBuilder strBuilder5 = strBuilder4.append((StringBuffer) null, 0, 814);
      StrBuilder strBuilder6 = strBuilder0.replaceFirst('s', 's');
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.append(false);
      StrBuilder strBuilder3 = strBuilder0.reverse();
      Writer writer0 = strBuilder3.asWriter();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(114);
      strBuilder_StrBuilderReader0.close();
      String string0 = "";
      // Undeclared exception!
      try { 
        strBuilder2.append("", 1622, (-993));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.appendPadding((-642), 'N');
      StrBuilder strBuilder2 = strBuilder0.append(false);
      // Undeclared exception!
      try { 
        strBuilder2.appendFixedWidthPadRight((Object) "}N\"gUd'Y>C+!LV|f", 1448, '9');
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      StrBuilder strBuilder1 = strBuilder0.append(true);
      Reader reader0 = strBuilder1.asReader();
      // Undeclared exception!
      try { 
        strBuilder0.append("", (-1), 32);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(115);
      StrBuilder strBuilder1 = new StrBuilder("");
      boolean boolean0 = strBuilder0.equals(strBuilder1);
      // Undeclared exception!
      try { 
        strBuilder1.setCharAt((-510), 'V');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -510
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(101);
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_NoMatcher0, 101);
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("end < start");
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1896));
      int int0 = strBuilder0.lastIndexOf("N!OpiT1DaK%G");
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      boolean boolean0 = strBuilder0.contains((StrMatcher) strMatcher_TrimMatcher0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[3];
      charArray0[0] = '^';
      charArray0[1] = 'X';
      charArray0[2] = '?';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 1232, 1232);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("{}");
      // Undeclared exception!
      try { 
        strBuilder0.insert(115, 115);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 115
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("HlM");
      int int0 = strBuilder0.capacity();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      String string0 = "0E&F&,qP<s+K,@PY~";
      StrBuilder strBuilder0 = new StrBuilder("0E&F&,qP<s+K,@PY~");
      int int0 = (-3184);
      StrBuilder strBuilder1 = strBuilder0.appendPadding((-3184), '5');
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("0E&F&,qP<s+K,@PY~");
      // Undeclared exception!
      try { 
        strBuilder1.replaceAll(strMatcher0, "0E&F&,qP<s+K,@PY~");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 51
         //
         verifyException("org.apache.commons.lang.text.StrMatcher$CharSetMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(117);
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('&');
      StrBuilder strBuilder1 = strBuilder0.replaceAll((StrMatcher) strMatcher_CharMatcher0, "qUE*GEb*");
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replace(0, 0, ";");
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(0);
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      // Undeclared exception!
      try { 
        strBuilder0.substring(124, 1885);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("user.country");
      String string0 = strBuilder0.rightString(1033);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) null, (-505), 'u');
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('f', 'a');
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = strBuilder0.toCharArray(0, 0);
      String string0 = strBuilder0.leftString(1930);
      StrBuilder strBuilder1 = strBuilder0.setNullText("");
      StrBuilder strBuilder2 = strBuilder1.deleteFirst("");
      StrBuilder strBuilder3 = strBuilder0.setNewLineText("5NWG`Fz.*?~zuD");
      boolean boolean0 = strBuilder3.contains((String) null);
      StrBuilder strBuilder4 = strBuilder2.deleteAll("");
      StrBuilder strBuilder5 = strBuilder4.replaceAll("", (String) null);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder4.new StrBuilderTokenizer();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 0, 116);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.lang.text.StrMatcher$CharSetMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      int int0 = (-1986);
      StrBuilder strBuilder0 = new StrBuilder((-1986));
      int int1 = strBuilder0.hashCode();
      char[] charArray0 = new char[8];
      charArray0[0] = 'h';
      charArray0[1] = '#';
      charArray0[2] = '_';
      StrBuilder strBuilder1 = strBuilder0.setLength(4);
      charArray0[3] = 'u';
      charArray0[4] = '!';
      StrBuilder strBuilder2 = strBuilder0.deleteFirst("end < start");
      charArray0[5] = ' ';
      charArray0[6] = ')';
      charArray0[7] = '+';
      // Undeclared exception!
      try { 
        strBuilder0.insert(9, charArray0, (-4358), (-3151));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 9
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      String string0 = "{#JOOR7EojSC{q";
      StrBuilder strBuilder0 = new StrBuilder("{#JOOR7EojSC{q");
      int int0 = (-1090);
      // Undeclared exception!
      try { 
        strBuilder0.setLength((-1090));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1090
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = new StrBuilder(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      Object object1 = strBuilder_StrBuilderTokenizer0.clone();
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight(object1, 0, 'v');
      int int0 = strBuilder0.indexOf('L');
      String string0 = strBuilder0.rightString((-1));
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder2);
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(0, 0, 'B');
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(115);
      StrBuilder strBuilder1 = new StrBuilder(115);
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-648);
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder1 = new StrBuilder("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      StrBuilder strBuilder2 = strBuilder0.append(object0);
      int int1 = Integer.MAX_VALUE;
      // Undeclared exception!
      try { 
        strBuilder1.substring((-648), Integer.MAX_VALUE);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -648
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[6];
      charArray0[0] = ']';
      charArray0[1] = 'W';
      charArray0[2] = '4';
      charArray0[3] = '~';
      charArray0[4] = 'A';
      charArray0[5] = 'a';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0);
      long long0 = strBuilder_StrBuilderReader0.skip(1L);
      StrBuilder strBuilder1 = new StrBuilder();
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.rightString((-452));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(0);
      int int0 = strBuilder0.lastIndexOf('0');
      StrBuilder strBuilder1 = new StrBuilder("org.apache.commons.lang.text.StrBuilder");
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Reader reader0 = strBuilder0.asReader();
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1));
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) strBuilder0;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "?)ESo;w");
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.append((float) 0);
      // Undeclared exception!
      try { 
        strBuilder1.append("vm:m2.w", 2104, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("user.country");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("user.region", 0, 0);
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2661));
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[8];
      charArray0[0] = '7';
      charArray0[1] = ';';
      charArray0[2] = 'v';
      charArray0[3] = 'Q';
      String string0 = strBuilder0.toString();
      charArray0[4] = '3';
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      charArray0[5] = '`';
      charArray0[6] = 'Z';
      charArray0[7] = '';
      strBuilder0.getChars(0, 0, charArray0, 0);
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(32);
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "path.separator");
      StrBuilder strBuilder2 = strBuilder0.replaceFirst("Linux", "Linux");
      StrBuilder strBuilder3 = strBuilder2.appendNewLine();
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadLeft((Object) strBuilder1, 616, ':');
      int int0 = strBuilder1.lastIndexOf("path.separator");
      StrBuilder strBuilder5 = strBuilder1.deleteAll('5');
      boolean boolean0 = strBuilder0.equals(strBuilder5);
      StrBuilder strBuilder6 = strBuilder0.deleteFirst("Linux");
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      boolean boolean0 = strBuilder0.startsWith((String) null);
      char char0 = 'I';
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity((-1659));
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight(2227, 116, 'I');
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      boolean boolean0 = strBuilder0.startsWith((String) null);
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity((-1659));
      StrBuilder strBuilder2 = new StrBuilder(131);
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder3 = strBuilder2.setLength(548);
      char[] charArray0 = new char[8];
      charArray0[0] = 'I';
      charArray0[1] = 'I';
      charArray0[2] = 'I';
      charArray0[3] = 'A';
      charArray0[4] = 'I';
      charArray0[5] = 'I';
      charArray0[6] = 'I';
      charArray0[7] = 'I';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder4 = strBuilder1.deleteFirst(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(":KSub)BCJYH2b|");
      String string0 = strBuilder0.toString();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(":KSub)BCJYH2b|");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      int int0 = strBuilder0.lastIndexOf('{');
      boolean boolean0 = strBuilder1.endsWith(":KSub)BCJYH2b|");
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        strBuilder1.append(stringBuffer0, 87, 4);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.toString();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      char[] charArray0 = new char[6];
      charArray0[0] = '?';
      charArray0[1] = 'o';
      StringBuffer stringBuffer1 = strBuilder0.toStringBuffer();
      charArray0[2] = '0';
      charArray0[3] = ';';
      charArray0[4] = ',';
      charArray0[5] = 'R';
      char[] charArray1 = strBuilder0.getChars(charArray0);
      boolean boolean0 = strBuilder0.isEmpty();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) stringBuffer0);
      strBuilder_StrBuilderWriter0.write(charArray1, 0, 0);
      Writer writer1 = strBuilder_StrBuilderWriter0.append('0');
      strBuilder_StrBuilderWriter0.write(charArray1, 0, 0);
      Writer writer2 = strBuilder_StrBuilderWriter0.append('0');
      strBuilder_StrBuilderWriter0.close();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string1 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder strBuilder1 = new StrBuilder(1);
      StrBuilder strBuilder2 = strBuilder0.append((Object) strBuilder1);
      StrBuilder strBuilder3 = strBuilder2.insert(0, (float) 0);
      int int0 = strBuilder1.indexOf('x');
      StrBuilder strBuilder4 = strBuilder3.appendWithSeparators((Collection) null, "");
      // Undeclared exception!
      try { 
        strBuilder0.setLength((-3709));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3709
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendPadding(0, 'i');
      StrBuilder strBuilder2 = strBuilder0.appendNewLine();
      char[] charArray0 = new char[9];
      charArray0[0] = 'i';
      charArray0[1] = 'i';
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("5.0");
      int int0 = strBuilder2.lastIndexOf(strMatcher0, 0);
      charArray0[2] = 'i';
      charArray0[3] = 'i';
      charArray0[4] = 'i';
      charArray0[5] = 'i';
      charArray0[6] = 'w';
      charArray0[7] = 'i';
      charArray0[8] = ']';
      StrBuilder strBuilder3 = strBuilder2.append(charArray0, 0, 0);
      StrBuilder strBuilder4 = strBuilder3.deleteFirst('i');
      StrBuilder strBuilder5 = strBuilder2.append((-1355.6217F));
      StrBuilder strBuilder6 = strBuilder5.appendFixedWidthPadLeft(5, 0, 'i');
      String string0 = strBuilder6.midString(34, (-1));
      // Undeclared exception!
      try { 
        strBuilder0.validateRange((-1), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[6];
      charArray0[0] = '8';
      charArray0[1] = 'r';
      charArray0[2] = 's';
      StrBuilder strBuilder1 = strBuilder0.append(true);
      StrBuilder strBuilder2 = strBuilder1.deleteAll(".qVE]qOV6%.b)\"\"pGg");
      charArray0[3] = '';
      charArray0[4] = 't';
      strBuilder_StrBuilderWriter0.write(charArray0);
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) "";
      objectArray0[1] = (Object) "";
      StrBuilder strBuilder3 = strBuilder0.appendWithSeparators(objectArray0, "");
      StrBuilder strBuilder4 = strBuilder3.appendNewLine();
      strBuilder3.buffer = charArray0;
      charArray0[5] = '?';
      int int0 = strBuilder1.capacity();
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      // Undeclared exception!
      try { 
        strBuilder0.deleteAll(strMatcher0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.lang.text.StrMatcher$CharSetMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      char[] charArray0 = new char[4];
      charArray0[0] = ' ';
      charArray0[1] = '3';
      charArray0[2] = '&';
      charArray0[3] = '@';
      StrBuilder strBuilder2 = strBuilder1.insert(0, charArray0);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher((String) null);
      StrBuilder strBuilder3 = strBuilder2.deleteAll(strMatcher0);
      StrBuilder strBuilder4 = strBuilder1.appendFixedWidthPadLeft(615, 615, '-');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterString("");
      List list0 = strBuilder_StrBuilderTokenizer0.getTokenList();
      char[] charArray1 = new char[1];
      charArray1[0] = '-';
      List list1 = strBuilder_StrBuilderTokenizer0.tokenize(charArray1, 1188, 0);
      StrBuilder strBuilder5 = strBuilder0.append((double) 1188);
      char char0 = strBuilder5.charAt(0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder4.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(0);
      boolean boolean0 = strBuilder5.contains(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder4.getChars(0, 101, charArray0, 1321);
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }
}
