/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 28 16:38:07 GMT 2020
 */

package org.apache.commons.lang.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.Writer;
import java.nio.CharBuffer;
import java.nio.ReadOnlyBufferException;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.NoSuchElementException;
import org.apache.commons.lang.text.StrBuilder;
import org.apache.commons.lang.text.StrMatcher;
import org.apache.commons.lang.text.StrTokenizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StrBuilder_ESTest extends StrBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(1290);
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) strBuilder1;
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) strBuilder0;
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight(1290, 1290, 'Y');
      objectArray0[3] = (Object) strBuilder0;
      objectArray0[4] = (Object) strBuilder1;
      objectArray0[5] = (Object) strBuilder0;
      objectArray0[4] = (Object) strBuilder0;
      objectArray0[7] = (Object) strBuilder0;
      objectArray0[8] = (Object) strBuilder1;
      StrBuilder strBuilder3 = strBuilder1.appendWithSeparators(objectArray0, "wmVDt");
      StrBuilder strBuilder4 = new StrBuilder("S{}$xw4)1XKaLvv");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder4.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(0);
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      char[] charArray0 = new char[7];
      charArray0[0] = '`';
      charArray0[1] = 'Y';
      charArray0[2] = 'Y';
      charArray0[3] = '#';
      charArray0[4] = 'Y';
      charArray0[5] = '`';
      charArray0[6] = 'Y';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder5 = strBuilder4.replaceFirst((StrMatcher) strMatcher_NoMatcher0, "~JKWFyq\u0006sDa");
      StringBuffer stringBuffer0 = new StringBuffer(1290);
      StringBuffer stringBuffer1 = stringBuffer0.append('r');
      // Undeclared exception!
      try { 
        strBuilder4.append(stringBuffer0, (-1), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(115);
      int int0 = (-31);
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      String string0 = "~>u===YSSZ1pN]ID";
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "~>u===YSSZ1pN]ID");
      int int1 = 0;
      // Undeclared exception!
      try { 
        strBuilder1.append("~>u===YSSZ1pN]ID", 0, (-31));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-974));
      StrBuilder strBuilder1 = strBuilder0.append(true);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("Invalid startIndex: ");
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Collection) linkedList0, (String) null);
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      StrBuilder strBuilder3 = new StrBuilder("Invalid startIndex: ");
      boolean boolean0 = linkedList1.add((Object) strBuilder3);
      StrBuilder strBuilder4 = strBuilder2.appendWithSeparators((Collection) linkedList1, (String) null);
      strBuilder_StrBuilderWriter0.flush();
      // Undeclared exception!
      try { 
        strBuilder1.insert((-974), (-974));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -974
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid length: ");
      char[] charArray0 = new char[22];
      charArray0[0] = '%';
      charArray0[1] = 'H';
      charArray0[2] = '3';
      StrBuilder strBuilder1 = strBuilder0.setCharAt(0, '<');
      StrBuilder strBuilder2 = strBuilder0.appendPadding(0, '&');
      charArray0[3] = '[';
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      boolean boolean0 = strBuilder1.contains('b');
      StrBuilder strBuilder3 = strBuilder2.deleteAll(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, (-848), (-848));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -848
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2231));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      char[] charArray0 = new char[10];
      charArray0[0] = '2';
      charArray0[1] = 'L';
      charArray0[2] = '7';
      charArray0[3] = '.';
      charArray0[4] = '^';
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterMatcher(strMatcher0);
      charArray0[5] = '\\';
      charArray0[6] = '0';
      charArray0[7] = '}';
      int int0 = strMatcher0.isMatch(charArray0, (-2231), (-2231), 0);
      StrBuilder strBuilder1 = new StrBuilder("");
      int int1 = strBuilder0.lastIndexOf(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder3 = strBuilder0.setLength(0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      char[] charArray0 = null;
      int int0 = 32;
      StrBuilder strBuilder1 = strBuilder0.append((char[]) null, 39, 32);
      StrBuilder strBuilder2 = strBuilder0.appendNull();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder strBuilder3 = strBuilder0.setNullText("length must be valid");
      StrBuilder strBuilder4 = strBuilder3.appendNull();
      StrBuilder strBuilder5 = strBuilder2.append("");
      StrBuilder strBuilder6 = strBuilder5.setNewLineText("5HlS0");
      StrTokenizer strTokenizer0 = strBuilder5.asTokenizer();
      StrBuilder strBuilder7 = strBuilder2.setNewLineText("length must be valid");
      strBuilder2.validateIndex(32);
      StrBuilder strBuilder8 = strBuilder2.appendPadding(39, 'q');
      StrBuilder strBuilder9 = strBuilder0.insert(32, (float) 32);
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('q');
      StrBuilder strBuilder10 = strBuilder3.deleteAll(strMatcher0);
      char[] charArray1 = new char[0];
      StrBuilder strBuilder11 = strBuilder4.insert(39, charArray1);
      int int1 = strBuilder11.lastIndexOf(strMatcher0);
      StrBuilder strBuilder12 = strBuilder9.append((-608L));
      StrBuilder strBuilder13 = strBuilder8.appendPadding((-1), 'q');
      // Undeclared exception!
      try { 
        strBuilder4.append("ctg1(JA%EX>dZn&Xu`2", (-31), 32);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.awt.graphicsenv");
      StrBuilder strBuilder1 = strBuilder0.setCharAt(5, 'G');
      StrBuilder strBuilder2 = strBuilder1.setNewLineText("i");
      char[] charArray0 = new char[2];
      charArray0[0] = 'G';
      StrBuilder strBuilder3 = strBuilder1.setNewLineText("i");
      charArray0[1] = 'G';
      strBuilder2.buffer = charArray0;
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrBuilder strBuilder4 = strBuilder2.replaceFirst(strMatcher0, "i");
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('z');
      StrMatcher.CharMatcher strMatcher_CharMatcher1 = new StrMatcher.CharMatcher('z');
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("Invalid startIndex: ");
      // Undeclared exception!
      try { 
        strBuilder0.indexOf((StrMatcher) strMatcher_CharMatcher0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      int int0 = 2299;
      StrBuilder strBuilder0 = new StrBuilder(2299);
      StrBuilder strBuilder1 = strBuilder0.append(false);
      StrBuilder strBuilder2 = strBuilder1.append((String) null);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      int int1 = strBuilder0.lastIndexOf(strMatcher0, (-2876));
      boolean boolean0 = strBuilder0.contains("HP-UX");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[5];
      charArray0[0] = 'U';
      charArray0[1] = '1';
      charArray0[2] = 'x';
      charArray0[3] = '>';
      char char0 = '\'';
      String string0 = strBuilder1.rightString(2299);
      // Undeclared exception!
      try { 
        strBuilder1.append("O(BDG2Ph&S", (-1), 39);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      char[] charArray0 = new char[9];
      StrBuilder strBuilder2 = strBuilder1.minimizeCapacity();
      StrBuilder strBuilder3 = strBuilder2.replace(1, 1, "Invalid offset: ");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setQuoteMatcher(strMatcher0);
      StrBuilder strBuilder4 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "Invalid offset: ");
      charArray0[0] = 'f';
      charArray0[1] = 'W';
      charArray0[2] = '\\';
      charArray0[3] = 'm';
      charArray0[4] = '=';
      String string0 = strBuilder0.midString(1, 1);
      charArray0[5] = 'b';
      charArray0[6] = ':';
      charArray0[7] = 'E';
      charArray0[8] = '#';
      int int0 = strMatcher0.isMatch(charArray0, 0, 97, (-2707));
      // Undeclared exception!
      try { 
        strBuilder1.insert((-1622), (long) (-1622));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1622
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("(H");
      StrBuilder strBuilder1 = strBuilder0.append(1491L);
      StrBuilder strBuilder2 = strBuilder1.append((Object) strBuilder0);
      StrBuilder strBuilder3 = strBuilder0.deleteFirst("7");
      int int0 = 2215;
      StringBuffer stringBuffer0 = new StringBuffer(2215);
      StrBuilder strBuilder4 = strBuilder3.clear();
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 2215, 2215);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.insert(0, (double) 0);
      char[] charArray0 = new char[0];
      strBuilder1.getChars(0, 0, charArray0, 0);
      int int0 = 0;
      int int1 = strBuilder1.lastIndexOf("HP-UX", 1793);
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight(97, 0, '^');
      boolean boolean0 = strBuilder0.contains("(pB{");
      StrBuilder strBuilder3 = strBuilder1.deleteFirst('0');
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      int int2 = strBuilder1.lastIndexOf(strMatcher0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder3.new StrBuilderReader();
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 2, (-824));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -824
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      int int0 = 0;
      StrBuilder strBuilder2 = strBuilder1.insert(0, false);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      char[] charArray0 = new char[4];
      charArray0[0] = '[';
      charArray0[1] = ';';
      StrBuilder strBuilder3 = strBuilder1.insert(0, charArray0);
      charArray0[2] = '*';
      charArray0[3] = '6';
      strBuilder_StrBuilderWriter0.write(charArray0, 0, 0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(4083L);
      String string0 = "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter";
      StrBuilder strBuilder4 = strBuilder2.deleteAll("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      int int1 = 116;
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, (-1294), 116);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 116
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft((Object) strBuilder0, (-1803), 'Q');
      StrBuilder strBuilder3 = strBuilder0.ensureCapacity(0);
      int int0 = strBuilder1.lastIndexOf("", 3);
      StringBuffer stringBuffer0 = new StringBuffer("");
      StrBuilder strBuilder4 = strBuilder1.append(stringBuffer0);
      boolean boolean0 = strBuilder1.equals(strBuilder3);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder3.new StrBuilderWriter();
      char[] charArray0 = new char[8];
      charArray0[0] = 'Q';
      charArray0[1] = 'Q';
      charArray0[2] = '`';
      charArray0[3] = 'Q';
      charArray0[4] = 'Q';
      charArray0[5] = 'Q';
      charArray0[6] = 'Q';
      charArray0[7] = 'Q';
      strBuilder_StrBuilderWriter0.write(charArray0, 0, 3);
      StrBuilder strBuilder5 = strBuilder1.trim();
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      String string0 = "d)";
      StrBuilder strBuilder0 = new StrBuilder("d)");
      char[] charArray0 = new char[2];
      charArray0[0] = ' ';
      StrBuilder strBuilder1 = strBuilder0.append((char[]) null);
      StrBuilder strBuilder2 = strBuilder1.appendNewLine();
      charArray0[1] = '&';
      StrBuilder strBuilder3 = strBuilder0.deleteAll('&');
      StrBuilder strBuilder4 = strBuilder3.deleteAll(' ');
      strBuilder0.buffer = charArray0;
      StrBuilder strBuilder5 = strBuilder0.deleteAll("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      // Undeclared exception!
      try { 
        strBuilder1.rightString(884);
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft((Object) strBuilder0, (-1803), 'Q');
      StrBuilder strBuilder3 = strBuilder0.ensureCapacity(0);
      int int0 = strBuilder1.lastIndexOf("", 3);
      boolean boolean0 = strBuilder1.equals(strBuilder3);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder3.new StrBuilderWriter();
      char[] charArray0 = new char[8];
      charArray0[0] = 'Q';
      charArray0[1] = 'Q';
      charArray0[2] = '`';
      charArray0[3] = 'Q';
      charArray0[4] = 'Q';
      charArray0[5] = 'Q';
      charArray0[6] = 'Q';
      charArray0[7] = 'Q';
      strBuilder_StrBuilderWriter0.write(charArray0, 0, 3);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder4 = strBuilder0.appendWithSeparators((Collection) linkedList0, "end < start");
      StrBuilder strBuilder5 = strBuilder1.replaceFirst('R', '!');
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string1 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder strBuilder1 = strBuilder0.appendPadding(32, '(');
      boolean boolean0 = strBuilder_StrBuilderTokenizer0.isEmptyTokenAsNull();
      char[] charArray0 = new char[5];
      charArray0[0] = '(';
      charArray0[1] = '(';
      charArray0[2] = '(';
      charArray0[3] = '(';
      Writer writer0 = strBuilder0.asWriter();
      charArray0[4] = '(';
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((-8), 32, '(');
      strBuilder2.size = (-1196);
      StringBuffer stringBuffer0 = new StringBuffer("");
      StrBuilder strBuilder3 = strBuilder1.append(stringBuffer0);
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, (-19), 2550);
      char char0 = 'h';
      int int0 = 0;
      StrBuilder strBuilder4 = strBuilder0.replaceFirst("", "");
      // Undeclared exception!
      try { 
        strBuilder4.append(0L);
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = '6';
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadLeft((Object) null, 2299, '6');
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      int int0 = (-974);
      StrBuilder strBuilder0 = new StrBuilder((-974));
      StrBuilder strBuilder1 = strBuilder0.append(true);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("Invalid startIndex: ");
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      LinkedList<Integer> linkedList1 = new LinkedList<Integer>();
      boolean boolean0 = linkedList0.addAll((Collection<? extends Integer>) linkedList1);
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Collection) linkedList0, (String) null);
      // Undeclared exception!
      try { 
        strBuilder1.append(strBuilder0, (-1519), (-1519));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[6];
      charArray0[0] = 'Y';
      charArray0[1] = 'Q';
      charArray0[2] = 'z';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      int int0 = strBuilder0.indexOf((StrMatcher) strMatcher_CharSetMatcher0, (-1));
      charArray0[3] = '6';
      charArray0[4] = 'M';
      charArray0[5] = 'r';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, (-3101), (-3101));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -3101
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("/fB");
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 849);
      boolean boolean0 = strBuilder0.equals((Object) "/fB");
      boolean boolean1 = strBuilder0.contains("/fB");
      StrBuilder strBuilder1 = new StrBuilder((-2307));
      boolean boolean2 = strBuilder0.equalsIgnoreCase(strBuilder1);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = 1;
      char char0 = 'p';
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('p');
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher((String) null);
      int int1 = strBuilder0.indexOf((StrMatcher) strMatcher_CharMatcher0);
      StrBuilder strBuilder1 = new StrBuilder();
      StringBuffer stringBuffer0 = new StringBuffer(1);
      // Undeclared exception!
      try { 
        strBuilder1.append(stringBuffer0, 0, (-1779));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-66));
      int int0 = strBuilder0.size();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("hc'K.;rcNN", "hc'K.;rcNN");
      StrBuilder strBuilder2 = strBuilder0.append((float) 0);
      StrBuilder strBuilder3 = strBuilder1.deleteAll('~');
      StrBuilder strBuilder4 = strBuilder1.deleteFirst(']');
      StrBuilder strBuilder5 = strBuilder0.append("", 0, 0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder5.new StrBuilderWriter();
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) "");
      strBuilder_StrBuilderWriter0.flush();
      StringBuffer stringBuffer0 = strBuilder5.toStringBuffer();
      int int1 = strBuilder3.lastIndexOf("ZxZ%:Q/", (-1785));
      boolean boolean1 = strBuilder5.startsWith("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder strBuilder6 = strBuilder0.appendFixedWidthPadRight((Object) strBuilder4, (-1), ']');
      StrBuilder strBuilder7 = strBuilder5.appendNewLine();
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(0);
      StrBuilder strBuilder1 = strBuilder0.appendPadding(0, 'g');
      StrBuilder strBuilder2 = strBuilder1.deleteFirst('6');
      StrBuilder strBuilder3 = strBuilder2.setNewLineText("");
      StrBuilder strBuilder4 = strBuilder2.append(0);
      StrBuilder strBuilder5 = strBuilder0.append(true);
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrBuilder strBuilder6 = strBuilder5.deleteAll(strMatcher0);
      StrBuilder strBuilder7 = strBuilder5.append("");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder5.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("org.apache.commons.lang.text.StrBuilder", 0, 0);
      StrBuilder strBuilder8 = strBuilder5.insert(0, (double) 0);
      String string0 = strBuilder6.getNewLineText();
      int int0 = strBuilder8.indexOf(' ', (-358));
      char[] charArray0 = new char[2];
      charArray0[0] = ' ';
      charArray0[1] = '8';
      char[] charArray1 = strBuilder2.getChars(charArray0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[7];
      charArray0[0] = '_';
      charArray0[1] = '0';
      int int0 = (-1282);
      String string0 = strBuilder0.midString((-1282), 2);
      charArray0[2] = '>';
      charArray0[3] = '\'';
      charArray0[4] = '[';
      charArray0[5] = 'f';
      charArray0[6] = 'h';
      // Undeclared exception!
      try { 
        strBuilder0.insert(2, charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((StrBuilder) null, 568, 568);
      char[] charArray0 = new char[6];
      charArray0[0] = ':';
      charArray0[1] = '2';
      String string0 = "Invalid startIndex: ";
      StrBuilder strBuilder2 = strBuilder0.replaceFirst("Invalid startIndex: ", "Invalid offset: ");
      String string1 = "\\m;&h2;}3-KC";
      // Undeclared exception!
      try { 
        strBuilder2.append("F0K bCsyIE0xT", 568, 4);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("5D-[O\"eP");
      StrBuilder strBuilder2 = strBuilder1.append(464.2F);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("Windows 9");
      int int0 = strBuilder2.indexOf(strMatcher0, 0);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1), 'U');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder strBuilder1 = new StrBuilder(2582);
      StrBuilder strBuilder2 = strBuilder1.append((Object) strBuilder0);
      StrBuilder strBuilder3 = strBuilder1.setNullText("htzp<|Bt}=;");
      boolean boolean0 = strBuilder0.equals(strBuilder1);
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "htzp<|Bt}=;");
      char[] charArray0 = new char[7];
      charArray0[0] = 'f';
      charArray0[1] = '$';
      charArray0[2] = 'A';
      charArray0[3] = 'C';
      charArray0[4] = 'a';
      charArray0[5] = '{';
      charArray0[6] = '+';
      StringBuffer stringBuffer1 = stringBuffer0.append(charArray0);
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 2582, (-3095));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-709));
      boolean boolean0 = strBuilder0.contains("end < start");
      StrBuilder strBuilder1 = new StrBuilder(957);
      StrBuilder strBuilder2 = strBuilder1.setLength(957);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = (-1318);
      String string0 = strBuilder0.leftString((-1318));
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) "", 0, '7');
      StrBuilder strBuilder2 = strBuilder0.minimizeCapacity();
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrBuilder strBuilder3 = strBuilder2.replaceFirst(strMatcher0, "OFrw\"");
      StringBuffer stringBuffer0 = strBuilder3.toStringBuffer();
      StrBuilder strBuilder4 = strBuilder3.setNewLineText("Q*lcFS");
      int int1 = 4997;
      int int2 = strBuilder2.indexOf('Q', 4997);
      char[] charArray0 = new char[7];
      charArray0[0] = '7';
      charArray0[1] = '=';
      charArray0[2] = '7';
      charArray0[3] = 'Q';
      charArray0[4] = '7';
      charArray0[5] = 'Q';
      charArray0[6] = 'Q';
      // Undeclared exception!
      try { 
        strBuilder2.append(charArray0, (-1318), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.appendPadding(4072, '*');
      StrBuilder strBuilder2 = strBuilder0.insert(101, (double) 101);
      String string0 = strBuilder0.toString();
      StrBuilder strBuilder3 = strBuilder0.append(2039L);
      StrBuilder strBuilder4 = strBuilder3.deleteCharAt(101);
      boolean boolean0 = strBuilder3.equalsIgnoreCase(strBuilder0);
      StrBuilder strBuilder5 = strBuilder0.clear();
      StrBuilder strBuilder6 = new StrBuilder(1342);
      StrBuilder strBuilder7 = strBuilder3.appendFixedWidthPadLeft((Object) strBuilder6, 9, 'Z');
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid startIndex: ");
      int int0 = 48;
      char[] charArray0 = new char[1];
      strBuilder0.size = 48;
      charArray0[0] = 'B';
      int int1 = 0;
      String string0 = strBuilder0.midString(0, (-1582));
      // Undeclared exception!
      try { 
        strBuilder0.insert(48, charArray0, 48, 117);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: 48
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("5.0");
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("Pcv8");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      int int0 = 97;
      char char0 = 'L';
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft(object0, 97, 'L');
      StrBuilder strBuilder3 = strBuilder2.clear();
      char char1 = '0';
      StrBuilder strBuilder4 = strBuilder1.appendFixedWidthPadRight((-1278), (-1278), '0');
      StrBuilder strBuilder5 = new StrBuilder("\u0003&}");
      StrBuilder strBuilder6 = strBuilder4.append(strBuilder5);
      StrBuilder strBuilder7 = strBuilder4.setNewLineText("Pcv8");
      StrBuilder strBuilder8 = strBuilder3.appendFixedWidthPadRight((Object) "5.0", 97, 'p');
      StrBuilder strBuilder9 = new StrBuilder(int0);
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder9);
      char[] charArray0 = new char[3];
      charArray0[0] = char0;
      charArray0[1] = char0;
      charArray0[2] = char1;
      StrBuilder strBuilder10 = strBuilder3.append(charArray0);
      char char2 = 'w';
      boolean boolean1 = strBuilder3.contains(char2);
      StrBuilder strBuilder11 = strBuilder10.appendNull();
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder(0);
      int int0 = 116;
      StrBuilder strBuilder2 = strBuilder0.clear();
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight((Object) strBuilder1, 116, 'p');
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1469));
      StrBuilder strBuilder1 = strBuilder0.setNullText("org.apache.commons.lang.text.StrMatcher");
      StrBuilder strBuilder2 = strBuilder0.append("org.apache.commons.lang.text.StrMatcher");
      int int0 = strBuilder0.indexOf("org.apache.commons.lang.text.StrMatcher", 2);
      StrBuilder strBuilder3 = strBuilder1.setNewLineText("org.apache.commons.lang.text.StrMatcher");
      char[] charArray0 = new char[6];
      charArray0[0] = 'O';
      charArray0[1] = 'W';
      charArray0[2] = 'E';
      charArray0[3] = 'e';
      charArray0[4] = ']';
      charArray0[5] = 'W';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      int int1 = strBuilder3.indexOf((StrMatcher) strMatcher_CharSetMatcher0);
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) strBuilder1;
      objectArray0[1] = (Object) strBuilder1;
      objectArray0[2] = (Object) strBuilder1;
      objectArray0[3] = (Object) strBuilder0;
      objectArray0[4] = (Object) strBuilder1;
      StrBuilder strBuilder4 = strBuilder1.appendWithSeparators(objectArray0, "`");
      Writer writer0 = strBuilder4.asWriter();
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrMatcher strMatcher0 = StrMatcher.charMatcher('8');
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.reverse();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      char[] charArray0 = new char[7];
      charArray0[0] = '(';
      charArray0[1] = '8';
      charArray0[2] = '8';
      charArray0[3] = '8';
      charArray0[4] = '8';
      charArray0[5] = '9';
      charArray0[6] = '8';
      int int0 = 0;
      int int1 = strMatcher0.isMatch(charArray0, 0, 0, 0);
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder strBuilder3 = strBuilder1.append((-1.0F));
      strBuilder3.buffer = charArray0;
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray1 = new char[2];
      charArray1[0] = '8';
      charArray1[1] = '8';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray1, (-1356), 593);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 593
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = 0;
      char char0 = '$';
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(0, '$');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Hd5UDu");
      strBuilder0.buffer = null;
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('|', '|');
      // Undeclared exception!
      try { 
        strBuilder0.replaceFirst('!', '7');
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = strBuilder0.toString();
      int int0 = strBuilder0.lastIndexOf('(', 0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int1 = strBuilder_StrBuilderReader0.read();
      char[] charArray0 = new char[3];
      charArray0[0] = '(';
      charArray0[1] = '(';
      charArray0[2] = '(';
      strBuilder0.buffer = charArray0;
      long long0 = strBuilder_StrBuilderReader0.skip(1L);
      StrBuilder strBuilder1 = strBuilder0.append(false);
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      char[] charArray1 = strBuilder0.toCharArray();
      int int2 = strBuilder0.length();
      int int3 = strBuilder0.hashCode();
      int int4 = strBuilder1.indexOf('(', 5);
      StrBuilder strBuilder2 = strBuilder1.replaceFirst("", "");
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) strBuilder_StrBuilderReader0;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.next();
      objectArray0[1] = (Object) "false";
      Object object1 = new Object();
      objectArray0[2] = object1;
      objectArray0[3] = (Object) '(';
      objectArray0[4] = (Object) '(';
      objectArray0[5] = (Object) strBuilder0;
      objectArray0[6] = (Object) strBuilder2;
      objectArray0[7] = (Object) strBuilder_StrBuilderReader0;
      StrBuilder strBuilder3 = strBuilder1.appendWithSeparators(objectArray0, "");
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder2 = strBuilder0.setNewLineText("\"`~-=QSnBW}#+&X1");
      StrBuilder strBuilder3 = new StrBuilder("\"`~-=QSnBW}#+&X1");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder3.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      char[] charArray0 = strBuilder3.toCharArray();
      // Undeclared exception!
      try { 
        strBuilder2.insert((-2880), (-2880));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2880
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.insert(0, (double) 0);
      char[] charArray0 = new char[0];
      strBuilder1.getChars(0, 0, charArray0, 0);
      int int1 = 97;
      int int2 = 0;
      String string0 = null;
      // Undeclared exception!
      try { 
        strBuilder0.replace(97, 0, (String) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[7];
      charArray0[0] = 'B';
      charArray0[1] = '0';
      charArray0[2] = '5';
      charArray0[3] = 'Y';
      charArray0[4] = 'i';
      charArray0[5] = '`';
      StrBuilder strBuilder1 = strBuilder0.append(1.0);
      charArray0[6] = '[';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(0, 0, charArray0, 57);
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) strBuilder0;
      objectArray0[3] = (Object) strBuilder0;
      objectArray0[4] = (Object) strBuilder0;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "Invalid startIndex: ");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("Invalid startIndex: ");
      int int0 = strBuilder0.lastIndexOf(strMatcher1);
      StrMatcher strMatcher2 = StrMatcher.stringMatcher("Invalid startIndex: ");
      int int1 = strBuilder0.lastIndexOf(strMatcher0, 0);
      int int2 = strBuilder0.indexOf("Invalid length: ");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, (-1008), 34);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 34
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      String string0 = "file.separator";
      StrBuilder strBuilder0 = new StrBuilder("file.separator");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('$');
      StrBuilder strBuilder2 = strBuilder1.append(440.7192F);
      StrBuilder strBuilder3 = null;
      // Undeclared exception!
      try { 
        strBuilder0.equalsIgnoreCase((StrBuilder) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("79,D(");
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("QQl3ljPBrliBVv-@HO");
      StrMatcher strMatcher2 = StrMatcher.charMatcher('_');
      String string0 = strBuilder0.leftString(Integer.MAX_VALUE);
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      StrMatcher strMatcher3 = StrMatcher.charMatcher('p');
      StrBuilder strBuilder2 = strBuilder0.appendNull();
      StrBuilder strBuilder3 = strBuilder2.appendNull();
      StrBuilder strBuilder4 = strBuilder0.append("org.apache.commons.lang.text.StrMatcher$NoMatcher");
      int int1 = strBuilder4.lastIndexOf(strMatcher0);
      StrBuilder strBuilder5 = strBuilder2.append(0);
      int int2 = strBuilder5.lastIndexOf(strMatcher1);
      String string1 = strBuilder2.midString((-1), 819);
      StrBuilder strBuilder6 = strBuilder2.deleteAll(strMatcher2);
      // Undeclared exception!
      try { 
        strBuilder2.insert((-1), (Object) "79,D(");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.version");
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(1616);
      StrBuilder strBuilder2 = strBuilder1.appendNull();
      String string0 = null;
      String string1 = strBuilder0.midString((-2255), 0);
      StrBuilder strBuilder3 = strBuilder2.append(false);
      StrBuilder strBuilder4 = strBuilder3.append("java.version");
      int int0 = 744;
      int int1 = (-2199);
      StrBuilder strBuilder5 = strBuilder0.append((String) null, 744, (-2199));
      int int2 = (-2115);
      char char0 = 'W';
      StrBuilder strBuilder6 = strBuilder1.appendFixedWidthPadLeft((-2115), 1616, 'W');
      // Undeclared exception!
      try { 
        strBuilder6.insert((-2115), (Object) strBuilder4);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2115
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Windows NT");
      char[] charArray0 = new char[8];
      charArray0[0] = 'l';
      charArray0[1] = '&';
      charArray0[2] = ':';
      charArray0[3] = 'Q';
      charArray0[4] = '%';
      charArray0[5] = 'N';
      charArray0[6] = 'N';
      charArray0[7] = 'z';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder0.indexOf(strMatcher0, 546);
      StrBuilder strBuilder1 = strBuilder0.insert(0, 4369L);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = 46;
      int int1 = 44;
      StrBuilder strBuilder1 = strBuilder0.append((-1.0F));
      char char0 = ')';
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight(46, 44, ')');
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(1290);
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) strBuilder1;
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) strBuilder0;
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight(1290, 1290, 'Y');
      objectArray0[3] = (Object) strBuilder0;
      objectArray0[4] = (Object) strBuilder1;
      objectArray0[5] = (Object) strBuilder0;
      objectArray0[6] = (Object) strBuilder0;
      objectArray0[7] = (Object) strBuilder0;
      objectArray0[8] = (Object) strBuilder1;
      StrBuilder strBuilder3 = strBuilder1.appendWithSeparators(objectArray0, "wmVDt");
      StrBuilder strBuilder4 = new StrBuilder("S{}$xw4)1XKaLvv");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder4.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(0);
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      char[] charArray0 = new char[7];
      charArray0[0] = '`';
      charArray0[1] = 'Y';
      charArray0[2] = 'Y';
      charArray0[3] = '#';
      charArray0[4] = 'Y';
      charArray0[5] = 'Y';
      charArray0[6] = 'Y';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder5 = strBuilder4.replaceFirst((StrMatcher) strMatcher_NoMatcher0, "~JKWFyq\u0006sDa");
      StringBuffer stringBuffer0 = new StringBuffer(1290);
      StringBuffer stringBuffer1 = stringBuffer0.append('r');
      // Undeclared exception!
      try { 
        strBuilder4.append(stringBuffer0, (-1), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(1290);
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) strBuilder1;
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) strBuilder0;
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight(1290, 1290, 'Y');
      objectArray0[3] = (Object) strBuilder0;
      objectArray0[4] = (Object) strBuilder1;
      objectArray0[5] = (Object) strBuilder0;
      objectArray0[6] = (Object) strBuilder0;
      objectArray0[7] = (Object) strBuilder0;
      objectArray0[8] = (Object) strBuilder1;
      StrBuilder strBuilder3 = new StrBuilder("S{}$xw4)1XKaLvv");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder3.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(0);
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      char[] charArray0 = new char[7];
      charArray0[0] = '`';
      charArray0[1] = 'Y';
      charArray0[2] = 'Y';
      charArray0[3] = '#';
      charArray0[4] = 'Y';
      charArray0[5] = 'Y';
      charArray0[6] = 'Y';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder4 = strBuilder3.replaceFirst((StrMatcher) strMatcher_NoMatcher0, "~JKWFyq\u0006sDa");
      StringBuffer stringBuffer0 = new StringBuffer(1290);
      StringBuffer stringBuffer1 = stringBuffer0.append('r');
      // Undeclared exception!
      try { 
        strBuilder3.append(stringBuffer0, (-1), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      String string0 = null;
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.append(1205.7089300790415);
      int int0 = strBuilder0.lastIndexOf((StrMatcher) null, 48);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher((String) null);
      StrBuilder strBuilder2 = strBuilder0.deleteFirst(strMatcher0);
      StrBuilder strBuilder3 = strBuilder2.append(strBuilder0);
      char[] charArray0 = new char[4];
      charArray0[0] = '-';
      char char0 = 'G';
      charArray0[1] = 'G';
      charArray0[2] = '\\';
      charArray0[3] = '\"';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder4 = strBuilder3.append(charArray0);
      // Undeclared exception!
      try { 
        strBuilder3.insert(707, 707);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 707
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrBuilder strBuilder1 = strBuilder0.append((Object) strBuilder_StrBuilderReader0);
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      boolean boolean1 = strBuilder_StrBuilderReader0.markSupported();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(3483);
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      strBuilder_StrBuilderWriter0.flush();
      char[] charArray0 = new char[4];
      charArray0[0] = 'q';
      charArray0[1] = 's';
      charArray0[2] = '\'';
      charArray0[3] = 'K';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0);
      // Undeclared exception!
      try { 
        strBuilder2.insert(743, (-1678.2573616266));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 743
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      char[] charArray0 = new char[9];
      charArray0[0] = '7';
      charArray0[1] = '(';
      charArray0[2] = '?';
      charArray0[3] = '^';
      charArray0[4] = 'S';
      charArray0[5] = 'L';
      charArray0[6] = '#';
      charArray0[7] = '&';
      charArray0[8] = ';';
      strBuilder0.buffer = charArray0;
      String string1 = strBuilder0.midString(96, (-2306));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
      int int0 = (-3151);
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt((-3151));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3151
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.size = 0;
      StrBuilder strBuilder1 = strBuilder0.trim();
      int int0 = strBuilder0.lastIndexOf('l', 91);
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrBuilder strBuilder2 = strBuilder1.deleteFirst(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder2.deleteCharAt((-7119));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -7119
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder1.deleteFirst('N');
      boolean boolean0 = strBuilder0.equals((Object) strBuilder1);
      boolean boolean1 = strBuilder1.startsWith("Q/J69GB");
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('B');
      boolean boolean2 = strBuilder0.contains((StrMatcher) strMatcher_CharMatcher0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.next();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      int int0 = (-554);
      // Undeclared exception!
      try { 
        strBuilder1.setLength((-554));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -554
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2823));
      String string0 = strBuilder0.toString();
      int int0 = strBuilder0.lastIndexOf('Q');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[9];
      charArray0[0] = 'l';
      charArray0[1] = 'Q';
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      int int1 = strBuilder0.indexOf(strMatcher0);
      charArray0[2] = 'Q';
      charArray0[3] = 'Q';
      charArray0[4] = 'Q';
      charArray0[5] = 'Q';
      charArray0[6] = 'Q';
      charArray0[7] = 'Q';
      charArray0[8] = 'Q';
      int int2 = strBuilder_StrBuilderReader0.read(charArray0);
      long long0 = strBuilder_StrBuilderReader0.skip((-2823));
      strBuilder_StrBuilderReader0.reset();
      strBuilder_StrBuilderReader0.close();
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      Reader reader0 = strBuilder1.asReader();
      StrBuilder strBuilder2 = strBuilder1.append((double) 0L);
      // Undeclared exception!
      try { 
        strBuilder1.validateIndex((-2823));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2823
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("lg'} brcsDr$D?n");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(']');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "lg'} brcsDr$D?n");
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charBuffer0);
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.StringCharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append("", 0, 0);
      StrBuilder strBuilder2 = strBuilder1.append((String) null, 0, 0);
      StrBuilder strBuilder3 = strBuilder0.deleteFirst("java.class.version");
      char[] charArray0 = new char[7];
      charArray0[0] = 'L';
      charArray0[1] = 'A';
      charArray0[2] = '@';
      charArray0[3] = 'V';
      charArray0[4] = 'W';
      charArray0[5] = '2';
      charArray0[6] = 'h';
      StrBuilder strBuilder4 = strBuilder3.append(charArray0);
      StrBuilder strBuilder5 = strBuilder3.append(false);
      // Undeclared exception!
      try { 
        strBuilder2.setLength((-561));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -561
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      char[] charArray0 = new char[9];
      StrBuilder strBuilder2 = strBuilder1.minimizeCapacity();
      StrBuilder strBuilder3 = strBuilder2.replace(1, 1, "Invalid offset: ");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setQuoteMatcher(strMatcher0);
      StrBuilder strBuilder4 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "Invalid offset: ");
      charArray0[0] = 'f';
      charArray0[1] = 'W';
      charArray0[2] = '\\';
      charArray0[3] = 'm';
      charArray0[4] = '=';
      charArray0[5] = 'b';
      charArray0[6] = ':';
      charArray0[7] = 'E';
      charArray0[8] = '#';
      int int0 = strMatcher0.isMatch(charArray0, 0, 97, (-2707));
      // Undeclared exception!
      try { 
        strBuilder1.insert((-1622), (long) (-1622));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1622
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      String string0 = "<*vK( $Nv7TcD\\3o#D";
      StrBuilder strBuilder0 = new StrBuilder("<*vK( $Nv7TcD\u0003o#D");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("<*vK( $Nv7TcD\u0003o#D");
      String string1 = strBuilder0.getNullText();
      int int0 = strBuilder0.lastIndexOf((String) null);
      // Undeclared exception!
      try { 
        strBuilder1.insert(44, 0.0F);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 44
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid length: ");
      char[] charArray0 = new char[4];
      charArray0[0] = '%';
      charArray0[1] = 'H';
      charArray0[2] = '3';
      StrBuilder strBuilder1 = strBuilder0.setCharAt(0, '<');
      StrBuilder strBuilder2 = strBuilder0.appendPadding(0, '&');
      charArray0[3] = '[';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, (-848), (-848));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -848
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceAll("qbaF )p", "qbaF )p");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      char[] charArray0 = new char[8];
      charArray0[0] = 'x';
      charArray0[1] = 'd';
      charArray0[2] = 'K';
      charArray0[3] = '$';
      charArray0[4] = 'o';
      charArray0[5] = 'E';
      charArray0[6] = '3';
      charArray0[7] = 'q';
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset(charArray0);
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      StrTokenizer strTokenizer1 = strBuilder_StrBuilderTokenizer0.reset();
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Iterator) strTokenizer1, "qbaF )p");
      String string1 = strBuilder1.getNewLineText();
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.vm.specification.vendor");
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      StrBuilder strBuilder2 = strBuilder1.appendNewLine();
      StrBuilder strBuilder3 = strBuilder0.setNullText((String) null);
      char[] charArray0 = null;
      StrBuilder strBuilder4 = strBuilder3.insert(0, (char[]) null, 0, (-1));
      int int0 = 297;
      // Undeclared exception!
      try { 
        strBuilder4.insert(3531, "rW7?");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3531
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("!]w[(");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("!]w[(", "!]w[(");
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "Ai\\";
      StrBuilder strBuilder1 = new StrBuilder("Ai");
      int int0 = 9;
      int int1 = strBuilder1.lastIndexOf((StrMatcher) null);
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight((Object) strBuilder1, 9, '@');
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.clear();
      int int0 = strBuilder0.indexOf("", 0);
      StrBuilder strBuilder2 = strBuilder1.append((Object) strBuilder0);
      StrBuilder strBuilder3 = strBuilder1.append(strBuilder0);
      StrBuilder strBuilder4 = strBuilder3.appendPadding(0, '*');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("user.region");
      StrBuilder strBuilder2 = strBuilder1.setLength(0);
      StrBuilder strBuilder3 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder2.insert(5, (Object) strBuilder3);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 5
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Y2PS");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((-216), 57, '5');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      String string1 = strBuilder0.midString(1164, Integer.MAX_VALUE);
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrBuilder strBuilder2 = strBuilder0.deleteAll(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      int int0 = 1631;
      StrBuilder strBuilder0 = new StrBuilder(1631);
      String string0 = strBuilder0.midString(1631, 1631);
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      // Undeclared exception!
      try { 
        strBuilder0.delete(1631, 1631);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(object0, 862, '!');
      StrBuilder strBuilder2 = strBuilder1.append(0);
      String string0 = "'dm4hqZTo2";
      char[] charArray0 = new char[0];
      StrBuilder strBuilder3 = strBuilder0.append(charArray0);
      int int0 = (-1289);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.previous();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder1.insert(0, '2');
      int int0 = 1;
      // Undeclared exception!
      try { 
        strBuilder1.append(strBuilder0, 0, 1);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      String string0 = "vy";
      StrBuilder strBuilder0 = new StrBuilder("vy");
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Object[]) null, "org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      // Undeclared exception!
      try { 
        strBuilder0.delete((-3322), (-1246));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3322
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 2;
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(2);
      char char0 = '>';
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight(2, (-1026), '>');
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadRight((Object) strBuilder0, (-1026), 'H');
      // Undeclared exception!
      try { 
        strBuilder1.charAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      StrBuilder strBuilder1 = new StrBuilder(0);
      StrBuilder strBuilder2 = strBuilder0.append((Object) strBuilder1);
      int int1 = strBuilder1.validateRange(0, 0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      long long0 = 0L;
      char[] charArray0 = new char[4];
      charArray0[0] = '7';
      charArray0[1] = '\\';
      charArray0[2] = '!';
      charArray0[3] = '4';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0, 0, 0);
      int int2 = strBuilder_StrBuilderReader0.read(charBuffer0);
      StrBuilder strBuilder3 = strBuilder1.deleteFirst("r&BtrbuwCTC}jc");
      // Undeclared exception!
      try { 
        strBuilder3.insert((-3815), (-3815));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3815
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.substring((-320));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -320
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      String string0 = "M-]_oa";
      StrBuilder strBuilder0 = new StrBuilder("M-]_oa");
      int int0 = 965;
      char char0 = 'e';
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      int int1 = strBuilder0.lastIndexOf(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) strMatcher0, (-1), 'e');
      // Undeclared exception!
      try { 
        strBuilder0.insert(965, 'e');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 965
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("p");
      char char0 = 'X';
      StrBuilder strBuilder1 = strBuilder0.deleteAll('X');
      StrBuilder strBuilder2 = strBuilder1.appendNewLine();
      int int0 = 2652;
      // Undeclared exception!
      try { 
        strBuilder2.insert(2652, 'n');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2652
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      String string0 = "1.2";
      StrBuilder strBuilder0 = new StrBuilder("1.2");
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher((char[]) null);
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("1.2");
      String string1 = ")3Rwkw";
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, ")3Rwkw");
      int int0 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.replace(34, 0, "1.2");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      String string0 = null;
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, (String) null);
      StrBuilder strBuilder2 = strBuilder1.appendNewLine();
      StrBuilder strBuilder3 = strBuilder0.ensureCapacity(117);
      StrBuilder strBuilder4 = strBuilder3.append((long) 117);
      StrBuilder strBuilder5 = strBuilder1.deleteFirst("");
      // Undeclared exception!
      try { 
        strBuilder5.deleteCharAt(582);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 582
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("B");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst((String) null);
      StrBuilder strBuilder2 = strBuilder1.append(1.0);
      StrBuilder strBuilder3 = strBuilder0.append('N');
      StrBuilder strBuilder4 = strBuilder0.append(1L);
      strBuilder4.size = (-1987);
      int int0 = 0;
      StrBuilder strBuilder5 = strBuilder4.appendPadding(0, 'z');
      char[] charArray0 = new char[9];
      charArray0[0] = 'z';
      charArray0[1] = 'z';
      charArray0[2] = 'z';
      charArray0[3] = 'z';
      charArray0[4] = '4';
      charArray0[5] = 'z';
      charArray0[6] = 'z';
      charArray0[7] = 'N';
      charArray0[8] = 'N';
      // Undeclared exception!
      try { 
        strBuilder2.append(charArray0);
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrBuilder strBuilder2 = strBuilder0.replaceFirst(strMatcher0, "startIndex must be valid");
      strBuilder2.size = 0;
      String string0 = strBuilder0.substring(0, 39);
      StrBuilder strBuilder3 = strBuilder2.insert(0, (double) 0);
      String string1 = strBuilder2.rightString(0);
      // Undeclared exception!
      try { 
        strBuilder3.insert(333, "r0`2rw_");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 333
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("");
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher((String) null);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      int int0 = strBuilder0.lastIndexOf("` oBsk?", 0);
      // Undeclared exception!
      try { 
        strBuilder1.deleteCharAt(1);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "";
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("", "");
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight((Object) strBuilder0, (-1), 'o');
      StrBuilder strBuilder3 = strBuilder0.append(0);
      String string1 = strBuilder2.toString();
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("");
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("");
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("0");
      StrBuilder strBuilder4 = strBuilder0.deleteFirst((StrMatcher) strMatcher_StringMatcher0);
      Reader reader0 = strBuilder4.asReader();
      StrBuilder strBuilder5 = strBuilder4.ensureCapacity((-1));
      char[] charArray0 = new char[2];
      charArray0[0] = 'o';
      charArray0[1] = 'o';
      strBuilder5.buffer = charArray0;
      StringBuffer stringBuffer0 = strBuilder4.toStringBuffer();
      StrBuilder strBuilder6 = strBuilder3.append((Object) "%6VsnWiQ");
      char char0 = 'O';
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt((-1970), '`');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1970
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      int int0 = (-456);
      StrBuilder strBuilder0 = new StrBuilder((-456));
      StrBuilder strBuilder1 = strBuilder0.append('%');
      int int1 = strBuilder0.indexOf("", (-456));
      StringBuffer stringBuffer0 = new StringBuffer("");
      StrBuilder strBuilder2 = strBuilder1.append(stringBuffer0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setEmptyTokenAsNull(true);
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators((Iterator) strTokenizer0, "5.0");
      String string0 = null;
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt((-456), '%');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -456
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("");
      int int0 = 32;
      // Undeclared exception!
      try { 
        strBuilder1.deleteCharAt(32);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      int int0 = 3287;
      StrBuilder strBuilder0 = new StrBuilder(3287);
      Object[] objectArray0 = new Object[4];
      Object object0 = new Object();
      objectArray0[0] = object0;
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) strBuilder0;
      objectArray0[3] = (Object) strBuilder0;
      String string0 = "";
      // Undeclared exception!
      try { 
        strBuilder0.insert(3287, 57);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3287
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = strBuilder0.toString();
      String string1 = null;
      StrBuilder strBuilder1 = new StrBuilder((String) null);
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      int int1 = 1187;
      strBuilder1.size = 1187;
      strBuilder2.size = 561;
      int int2 = (-2959);
      StrBuilder strBuilder3 = strBuilder0.appendNull();
      String string2 = "add() is unsupported";
      // Undeclared exception!
      try { 
        strBuilder0.replaceAll("add() is unsupported", "");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3);
      int int0 = strBuilder0.length();
      StringBuffer stringBuffer0 = new StringBuffer();
      StringBuffer stringBuffer1 = stringBuffer0.append("");
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder2 = strBuilder1.replaceFirst("]7.74uni", "]7.74uni");
      boolean boolean0 = strBuilder0.contains((StrMatcher) null);
      StrBuilder strBuilder3 = strBuilder0.replace((StrMatcher) null, "", 0, 3, 97);
      int int1 = strBuilder3.indexOf("path.separator", (-1279));
      int int2 = strBuilder0.lastIndexOf("x");
      // Undeclared exception!
      try { 
        strBuilder3.toCharArray((-1279), 2396);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1279
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1428);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("N3G]U'^");
      StrBuilder strBuilder2 = strBuilder1.append("N3G]U'^");
      char char0 = strBuilder0.charAt(0);
      StrBuilder strBuilder3 = strBuilder0.append((long) 1428);
      StrBuilder strBuilder4 = strBuilder2.replaceFirst('N', 'F');
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('F');
      StrMatcher strMatcher0 = StrMatcher.charMatcher('.');
      int int0 = strBuilder1.lastIndexOf((StrMatcher) strMatcher_CharMatcher0, (-1767));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder3.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("N3G]U'^");
      StrBuilder strBuilder5 = strBuilder3.append((StringBuffer) null);
      int int1 = strBuilder2.indexOf("r]GM^%", (-1));
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(0L);
      int int0 = strBuilder1.lastIndexOf("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      boolean boolean0 = strBuilder1.isEmpty();
      boolean boolean1 = strBuilder1.contains('z');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean2 = strBuilder_StrBuilderReader0.ready();
      Reader reader0 = strBuilder1.asReader();
      strBuilder0.buffer = null;
      Object[] objectArray0 = new Object[0];
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators(objectArray0, "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      // Undeclared exception!
      try { 
        strBuilder1.replace(712, 48, "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1359);
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray(4, (-3238));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "j#9mBr4";
      StrBuilder strBuilder1 = strBuilder0.append("j#9mBr4");
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder strBuilder2 = strBuilder0.deleteFirst("j#9mBr4");
      int int0 = strBuilder0.hashCode();
      char char0 = '!';
      boolean boolean0 = strBuilder2.contains('!');
      StrBuilder strBuilder3 = strBuilder1.deleteAll('!');
      char[] charArray0 = new char[0];
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      StrMatcher strMatcher0 = StrMatcher.charMatcher('!');
      // Undeclared exception!
      try { 
        strBuilder3.replace((StrMatcher) strMatcher_CharSetMatcher0, "j#9mBr4", (-1204), (-1204), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1204
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(57);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("[%~Gc`et3HIt_@2:Kw");
      char[] charArray0 = new char[4];
      charArray0[0] = 'f';
      charArray0[1] = '1';
      charArray0[2] = '\"';
      charArray0[3] = 'U';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder2 = strBuilder1.replaceAll(strMatcher0, "[%~Gc`et3HIt_@2:Kw");
      boolean boolean0 = strBuilder0.endsWith("[%~Gc`et3HIt_@2:Kw");
      // Undeclared exception!
      try { 
        strBuilder2.appendFixedWidthPadRight((Object) "startIndex must be valid", 3434, 'W');
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.append((double) 0);
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft((Object) strBuilder0, 0, '^');
      StrBuilder strBuilder3 = strBuilder2.deleteCharAt(0);
      StringBuffer stringBuffer0 = strBuilder2.toStringBuffer();
      StrBuilder strBuilder4 = strBuilder0.replace(0, 0, ", Length: ");
      String string0 = strBuilder1.getNewLineText();
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(651);
      char[] charArray0 = new char[1];
      charArray0[0] = '{';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(651, 651, charArray0, (-584));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 651
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      char char0 = 'r';
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight((-1593), 2527, 'r');
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceAll((StrMatcher) null, "");
      StrBuilder strBuilder2 = new StrBuilder("os.version");
      boolean boolean0 = strBuilder0.equals((Object) strBuilder2);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(150);
      int int0 = strBuilder0.indexOf((StrMatcher) null, 150);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[5];
      charArray0[0] = '2';
      charArray0[1] = 'h';
      charArray0[2] = 'D';
      charArray0[3] = '=';
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) 'D';
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      objectArray0[2] = object0;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "=h.`0qDh:A");
      charArray0[4] = 'F';
      char[] charArray1 = strBuilder0.getChars(charArray0);
      // Undeclared exception!
      try { 
        strBuilder0.getChars((-940), 0, charArray1, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -940
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "|qZxc`viqsiQ";
      int int0 = 116;
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight((-1047), 116, 'P');
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.append((Object) "");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string1 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder strBuilder2 = strBuilder1.appendPadding(32, '(');
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      char[] charArray0 = new char[5];
      charArray0[0] = '(';
      charArray0[1] = '(';
      charArray0[2] = '(';
      charArray0[3] = '(';
      Writer writer0 = strBuilder0.asWriter();
      charArray0[4] = '(';
      StrBuilder strBuilder3 = strBuilder1.appendFixedWidthPadLeft(4, 32, '(');
      strBuilder3.size = (-1196);
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder4 = strBuilder2.append(stringBuffer0);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 0, 2550);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 2395;
      char[] charArray0 = new char[2];
      charArray0[0] = 'i';
      charArray0[1] = 'r';
      // Undeclared exception!
      try { 
        strBuilder0.insert(2395, charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2395
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 823;
      long long0 = 3228L;
      // Undeclared exception!
      try { 
        strBuilder0.insert(823, 3228L);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 823
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.insert((-3239), (long) (-3239));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3239
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder(2529);
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      char[] charArray0 = new char[8];
      charArray0[0] = 'p';
      strBuilder_StrBuilderWriter0.write(charArray0);
      charArray0[1] = '.';
      charArray0[2] = 't';
      charArray0[3] = 'g';
      charArray0[4] = '4';
      charArray0[5] = '8';
      charArray0[6] = '0';
      charArray0[7] = 'F';
      strBuilder_StrBuilderWriter0.write(charArray0);
      StrTokenizer strTokenizer0 = strBuilder1.asTokenizer();
      String string0 = strBuilder0.leftString(97);
      StrBuilder strBuilder3 = strBuilder0.setNullText("");
      int int0 = strBuilder3.indexOf('-');
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(4590);
      String string0 = "]]5bSG.,B9u<JBbq#+b";
      int int0 = strBuilder0.lastIndexOf("]]5bSG.,B9u<JBbq#+b", 4590);
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      int int1 = strBuilder_StrBuilderTokenizer0.size();
      // Undeclared exception!
      try { 
        strBuilder1.charAt((-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("startIndex must be valid");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('A');
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        strBuilder1.append(stringBuffer0, 116, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrBuilder strBuilder1 = strBuilder0.replaceAll("", "");
      int int0 = (-1449);
      strBuilder_StrBuilderWriter0.write((-1449));
      // Undeclared exception!
      try { 
        strBuilder0.charAt((-1449));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1449
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      // Undeclared exception!
      try { 
        strBuilder0.charAt(1);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.midString(1176, 1176);
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("");
      int int0 = strBuilder2.lastIndexOf((StrMatcher) strMatcher_StringMatcher0, 0);
      StrBuilder strBuilder3 = strBuilder0.appendNull();
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      int int1 = strBuilder0.indexOf(strMatcher0);
      StrBuilder strBuilder4 = strBuilder0.setNullText("");
      boolean boolean0 = strBuilder0.isEmpty();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder4.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(0L);
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) strBuilder1;
      objectArray0[1] = (Object) "";
      objectArray0[2] = (Object) strBuilder1;
      StrBuilder strBuilder5 = strBuilder1.appendWithSeparators(objectArray0, "G'Lk,RSr4o");
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StringBuffer stringBuffer0 = new StringBuffer(")51Uc670");
      char[] charArray0 = new char[7];
      charArray0[0] = 'e';
      charArray0[1] = '!';
      charArray0[2] = '`';
      charArray0[3] = '&';
      charArray0[4] = 'i';
      charArray0[5] = '$';
      charArray0[6] = 'E';
      strBuilder_StrBuilderWriter0.write(charArray0);
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0, 0, 4);
      strBuilder_StrBuilderWriter0.write((char[]) null);
      StrBuilder strBuilder2 = strBuilder1.append((double) 4);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.getNewLineText();
      char[] charArray0 = new char[2];
      charArray0[0] = 'W';
      charArray0[1] = 'g';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(39, 0, charArray0, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Writer writer0 = strBuilder0.asWriter();
      String string0 = strBuilder0.getNullText();
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex((-390));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -390
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1606);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, ":.48:i7\f%/Z<W");
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      int int0 = strBuilder1.lastIndexOf(strMatcher0, 101);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = (-1L);
      long long1 = strBuilder_StrBuilderReader0.skip((-1L));
      StrBuilder strBuilder2 = strBuilder0.replaceAll("AIX", "AIX");
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(2526, '6');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2526
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.awt.graphicsenv");
      StrBuilder strBuilder1 = strBuilder0.setCharAt(5, 'G');
      StrBuilder strBuilder2 = strBuilder1.setNewLineText("");
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrBuilder strBuilder3 = strBuilder2.replaceFirst(strMatcher0, "");
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('z');
      StrMatcher strMatcher1 = StrMatcher.charMatcher('6');
      StrMatcher strMatcher2 = StrMatcher.stringMatcher("Invalid startIndex: ");
      int int0 = strBuilder0.indexOf((StrMatcher) strMatcher_CharMatcher0);
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder4 = strBuilder0.clear();
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.substring(0);
      Writer writer0 = strBuilder0.asWriter();
      String string1 = strBuilder0.toString();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("");
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 0);
      StrBuilder strBuilder1 = strBuilder0.replaceAll("", "");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      // Undeclared exception!
      try { 
        strBuilder1.insert((-1), true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("L");
      int int0 = 108;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      // Undeclared exception!
      try { 
        strBuilder0.insert(108, object0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 108
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[1];
      StrBuilder strBuilder1 = new StrBuilder("Ij");
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight((Object) strBuilder1, (-1156), '8');
      StrBuilder strBuilder3 = strBuilder0.replaceFirst("qnV'_ec'H{C_", "*23< )wmDN]Xh<e$!pr");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder strBuilder4 = strBuilder1.clear();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoreEmptyTokens(false);
      StrBuilder strBuilder5 = strBuilder2.appendWithSeparators((Iterator) strTokenizer0, "Windows 9");
      charArray0[0] = '#';
      StrBuilder strBuilder6 = strBuilder0.append(charArray0, 0, 0);
      StrTokenizer strTokenizer1 = strBuilder6.asTokenizer();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder6.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
      StrBuilder strBuilder7 = strBuilder2.ensureCapacity((-1982));
      StrTokenizer strTokenizer2 = strBuilder6.asTokenizer();
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(1489);
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder2 = strBuilder0.trim();
      StrBuilder strBuilder3 = strBuilder2.append(false);
      String string0 = strBuilder3.toString();
      boolean boolean0 = strBuilder1.endsWith("");
      // Undeclared exception!
      try { 
        strBuilder2.insert(1489, false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1489
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(":7GRV%.w`[D5");
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(":7GRV%.w`[D5");
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.setLength(0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "w;j@(VH");
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder1.insert(0, charArray0, 59, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: 59
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(1867, 11, '6');
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-974));
      StrBuilder strBuilder1 = strBuilder0.append(true);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("Invalid startIndex: ");
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Collection) linkedList0, (String) null);
      strBuilder_StrBuilderWriter0.flush();
      // Undeclared exception!
      try { 
        strBuilder1.insert((-974), (-974));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -974
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append("");
      StrBuilder strBuilder2 = strBuilder1.ensureCapacity(114);
      char[] charArray0 = new char[2];
      charArray0[0] = ',';
      charArray0[1] = 'y';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      boolean boolean0 = strBuilder1.contains(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(514);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 514
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = '&';
      int int0 = strBuilder0.indexOf('&', 0);
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder2 = strBuilder0.insert(0, (double) 0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip((-1));
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      String string0 = null;
      String string1 = strBuilder1.leftString(115);
      strBuilder_StrBuilderWriter0.write((String) null, (-1), 117);
      Reader reader0 = strBuilder1.asReader();
      StrMatcher strMatcher0 = StrMatcher.charMatcher('&');
      int int1 = 2586;
      // Undeclared exception!
      try { 
        strBuilder2.replace(strMatcher0, (String) null, 117, 3184, 2586);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Wj&dY/|c");
      // Undeclared exception!
      try { 
        strBuilder0.insert(1766, (double) 1766);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1766
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.ext.dirs");
      StrBuilder strBuilder1 = strBuilder0.insert(5, (Object) "java.ext.dirs");
      String string0 = strBuilder0.substring(5, 44);
      char[] charArray0 = new char[4];
      charArray0[0] = 'C';
      charArray0[1] = '5';
      charArray0[2] = 'g';
      charArray0[3] = 'E';
      // Undeclared exception!
      try { 
        strBuilder1.getChars(5, 9, charArray0, 44);
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(116);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(2, 2, 'f');
      StrBuilder strBuilder2 = new StrBuilder("");
      strBuilder2.buffer = null;
      int int0 = (-325);
      // Undeclared exception!
      try { 
        strBuilder2.insert(0, (Object) "");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      char[] charArray0 = new char[2];
      charArray0[0] = '+';
      charArray0[1] = 'v';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      int int0 = strBuilder1.lastIndexOf((StrMatcher) strMatcher_CharSetMatcher0);
      StrBuilder strBuilder2 = strBuilder0.append(object0);
      Object[] objectArray0 = new Object[0];
      StrBuilder strBuilder3 = strBuilder1.appendWithSeparators(objectArray0, "");
      StrBuilder strBuilder4 = strBuilder0.replaceAll('Z', 'Z');
      String string0 = strBuilder4.toString();
      StrBuilder strBuilder5 = strBuilder0.append((String) null, (-2438), 9);
      String string1 = strBuilder1.midString((-2438), (-2438));
      Object object1 = new Object();
      // Undeclared exception!
      try { 
        strBuilder4.insert((-1), object1);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('I');
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      char[] charArray0 = new char[5];
      charArray0[0] = 'I';
      charArray0[1] = 'I';
      charArray0[2] = 'I';
      charArray0[3] = 'I';
      char char0 = '%';
      StrBuilder strBuilder2 = strBuilder0.appendNewLine();
      // Undeclared exception!
      try { 
        strBuilder1.append(strBuilder0, 3, 1210);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      // Undeclared exception!
      try { 
        strBuilder0.replace(1860, 1860, "org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      int int0 = 3040;
      StrBuilder strBuilder0 = new StrBuilder(3040);
      String string0 = null;
      // Undeclared exception!
      try { 
        strBuilder0.insert(3040, (String) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3040
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      String string0 = "#Ut4+2mj2";
      StrBuilder strBuilder0 = new StrBuilder("#Ut4+2mj2");
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "#Ut4+2mj2");
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight((Object) strBuilder0, 0, 'f');
      StrBuilder strBuilder3 = strBuilder2.append('$');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[4];
      charArray0[0] = 'f';
      charArray0[1] = '$';
      charArray0[2] = 'f';
      charArray0[3] = 'f';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 16, (-2374));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2214));
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) null, " gldSghL3Rz_\t");
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("[F*aah-Z");
      char[] charArray0 = new char[7];
      charArray0[0] = ']';
      charArray0[1] = 'G';
      charArray0[2] = 'Z';
      charArray0[3] = 'M';
      charArray0[4] = '0';
      charArray0[5] = 'X';
      charArray0[6] = 'O';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StrBuilder strBuilder2 = strBuilder0.replaceFirst("[F*aah-Z", "");
      // Undeclared exception!
      try { 
        strBuilder1.append(strBuilder2, 1954, 1775);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("nV:Gx+");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('^');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      char[] charArray0 = new char[4];
      charArray0[0] = '^';
      charArray0[1] = '^';
      charArray0[2] = '^';
      charArray0[3] = '^';
      int int0 = 1509;
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 1509, 312);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4UVS)j13(ru 8Rq(?~");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[4];
      charArray0[0] = 'n';
      charArray0[1] = '0';
      charArray0[2] = '';
      charArray0[3] = 'v';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0, 0, 0);
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      int int0 = (-4492);
      StrBuilder strBuilder0 = new StrBuilder((-4492));
      char[] charArray0 = new char[3];
      charArray0[0] = 'B';
      StringBuffer stringBuffer0 = new StringBuffer("5ewQam");
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      charArray0[1] = 'e';
      charArray0[2] = 'Q';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(0, (-4492), charArray0, (-4492));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -4492
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(114);
      char[] charArray0 = new char[3];
      charArray0[0] = '2';
      charArray0[1] = 'V';
      charArray0[2] = 'v';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder1.lastIndexOf(strMatcher0, (-156));
      StringBuffer stringBuffer0 = new StringBuffer(0);
      StrBuilder strBuilder2 = strBuilder0.append(stringBuffer0);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("'mI");
      StrBuilder strBuilder1 = strBuilder0.append((StringBuffer) null);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-66));
      int int0 = strBuilder0.size();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("hc'K.;rcNN", "hc'K.;rcNN");
      StrBuilder strBuilder2 = strBuilder1.deleteAll('~');
      StrBuilder strBuilder3 = strBuilder1.deleteFirst(']');
      StrBuilder strBuilder4 = strBuilder0.append("", 0, 0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder4.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
      StringBuffer stringBuffer0 = strBuilder4.toStringBuffer();
      int int1 = strBuilder2.lastIndexOf("ZxZ%:Q/", (-1785));
      boolean boolean1 = strBuilder4.startsWith("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder strBuilder5 = strBuilder0.appendFixedWidthPadRight((Object) strBuilder3, (-1), ']');
      StrBuilder strBuilder6 = strBuilder4.appendNewLine();
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-3105));
      char[] charArray0 = new char[4];
      charArray0[0] = 'D';
      charArray0[1] = '';
      charArray0[2] = 'Q';
      charArray0[3] = '{';
      // Undeclared exception!
      try { 
        strBuilder0.insert((-3105), charArray0, (-926), (-3105));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3105
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-501));
      StrBuilder strBuilder1 = new StrBuilder();
      int int0 = 3005;
      String string0 = "";
      int int1 = (-896);
      // Undeclared exception!
      try { 
        strBuilder1.append("", (-501), (-896));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("*.N,j$p/ ]S8=2q");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrBuilder strBuilder1 = strBuilder0.append("*.N,j$p/ ]S8=2q");
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight((-4460), (-4460), '?');
      long long0 = strBuilder_StrBuilderReader0.skip((-1L));
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.lastIndexOf("/S9,q?GDB2D", 2);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrBuilder strBuilder1 = strBuilder0.deleteAll('6');
      long long0 = strBuilder_StrBuilderReader0.skip(0L);
      strBuilder_StrBuilderReader0.reset();
      String string0 = strBuilder1.rightString(3138);
      StrBuilder strBuilder2 = strBuilder1.append("8akbQif<wX!");
      StrBuilder strBuilder3 = strBuilder0.trim();
      boolean boolean0 = strBuilder2.equals((Object) "");
      // Undeclared exception!
      try { 
        strBuilder1.validateRange(3138, 1);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(1867, 0, '6');
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      StringBuffer stringBuffer0 = new StringBuffer("!n6Z");
      StrBuilder strBuilder2 = strBuilder0.append(stringBuffer0, 0, 0);
      int int0 = strBuilder0.indexOf('E');
      Reader reader0 = strBuilder0.asReader();
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1399), charArray0, 115, (-1399));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1399
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      Reader reader0 = strBuilder0.asReader();
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("h;]%{L", 32, (-1612));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-3693);
      // Undeclared exception!
      try { 
        strBuilder0.validateRange((-3693), (-3693));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3693
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      int int0 = 1565;
      StrBuilder strBuilder0 = new StrBuilder(1565);
      StrBuilder strBuilder1 = strBuilder0.append(true);
      String string0 = strBuilder1.leftString(1565);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      boolean boolean0 = strBuilder0.startsWith("S_v`R9VgOh*#lk");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterString("length must be valid");
      String string1 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder strBuilder2 = strBuilder1.append(1565);
      boolean boolean1 = strBuilder0.equalsIgnoreCase(strBuilder2);
      // Undeclared exception!
      try { 
        strBuilder2.validateIndex(1565);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1565
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3818);
      StrBuilder strBuilder1 = strBuilder0.deleteAll("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      int int0 = strBuilder1.indexOf(strMatcher0, 3818);
      // Undeclared exception!
      try { 
        strBuilder1.replace(strMatcher0, "", 3818, 32, 3818);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(0, 39, 'r');
      int int0 = strBuilder0.indexOf("VH|X{aOcmWv/36 dgM<");
      StrBuilder strBuilder2 = strBuilder0.deleteAll("VH|X{aOcmWv/36 dgM<");
      StrBuilder strBuilder3 = strBuilder2.replaceFirst("", "");
      StrBuilder strBuilder4 = strBuilder0.deleteAll("");
      StrBuilder strBuilder5 = strBuilder4.append(strBuilder0);
      String string0 = strBuilder5.rightString(534);
      boolean boolean0 = strBuilder1.endsWith("VH|X{aOcmWv/36 dgM<");
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.clear();
      int int0 = (-429);
      int int1 = 4;
      char[] charArray0 = new char[2];
      char char0 = 'R';
      // Undeclared exception!
      try { 
        strBuilder1.append(charArray0, 4, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      char[] charArray0 = null;
      int int0 = 32;
      StrBuilder strBuilder1 = strBuilder0.append((char[]) null, 39, 32);
      StrBuilder strBuilder2 = strBuilder0.appendNull();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder strBuilder3 = strBuilder0.setNullText("length must be valid");
      StrBuilder strBuilder4 = strBuilder3.appendNull();
      int int1 = (-492);
      StrBuilder strBuilder5 = strBuilder2.append("");
      StrTokenizer strTokenizer0 = strBuilder5.asTokenizer();
      StrBuilder strBuilder6 = strBuilder2.setNewLineText("length must be valid");
      char char0 = 'q';
      strBuilder2.validateIndex(32);
      StrBuilder strBuilder7 = strBuilder2.appendPadding((-492), 'q');
      // Undeclared exception!
      try { 
        strBuilder0.insert((-492), (float) (-492));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -492
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[3];
      charArray0[0] = '.';
      charArray0[1] = '!';
      charArray0[2] = 'W';
      char[] charArray1 = strBuilder0.getChars(charArray0);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[3];
      charArray0[0] = 'i';
      charArray0[1] = 'z';
      charArray0[2] = '~';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, (-442), (-442));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -442
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      int int0 = (-2915);
      StrBuilder strBuilder0 = new StrBuilder((-2915));
      char char0 = 'R';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(2219, (-2915), 'R');
      char[] charArray0 = new char[0];
      String string0 = "Y`";
      StrBuilder strBuilder2 = strBuilder0.replaceAll("^8Za-!Q2Ep{e4D| a", "Y`");
      String string1 = strBuilder2.rightString((-2915));
      int int1 = 0;
      StrBuilder strBuilder3 = strBuilder1.trim();
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 0, (-2915));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: -2915
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.substring(5, 5);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.trim();
      int int0 = strBuilder0.lastIndexOf('l', 97);
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrBuilder strBuilder2 = strBuilder1.deleteFirst(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceAll((String) null, "Invalid length: ");
      StrBuilder strBuilder2 = strBuilder1.appendPadding(32, 'O');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset((String) null);
      StrBuilder strBuilder3 = strBuilder1.appendWithSeparators((Iterator) strTokenizer0, "Invalid length: ");
      boolean boolean0 = strBuilder0.contains("im>O2wl`");
      StrBuilder strBuilder4 = strBuilder2.replaceAll("Invalid length: ", "");
      StringBuffer stringBuffer0 = strBuilder4.toStringBuffer();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder3.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(32);
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("startIndex must be valid");
      StrBuilder strBuilder1 = strBuilder0.replaceAll("", "org.apache.commons.lang.text.StrBuilder");
      StrBuilder strBuilder2 = strBuilder0.clear();
      StrBuilder strBuilder3 = strBuilder2.deleteAll("startIndex must be valid");
      StrBuilder strBuilder4 = strBuilder3.deleteAll("startIndex must be valid");
      StrBuilder strBuilder5 = strBuilder4.replaceAll((String) null, "startIndex must be valid");
      boolean boolean0 = strBuilder0.isEmpty();
      Writer writer0 = strBuilder0.asWriter();
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("|dZP1T,r4]Cf");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(0, 0, ')');
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("1");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[1];
      charArray0[0] = '3';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 0, (-909));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: -909
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.setNullText("org.apache.commons.lang.text.StrBuilder");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("Irix");
      StrBuilder strBuilder2 = new StrBuilder(0);
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder2);
      int int0 = strBuilder1.lastIndexOf('w', 0);
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.setNullText((String) null);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
      String string0 = strBuilder1.rightString((-2678));
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Object[]) null, (String) null);
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-304));
      StrBuilder strBuilder1 = strBuilder0.clear();
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.append("");
      boolean boolean0 = strBuilder0.startsWith("");
      boolean boolean1 = strBuilder0.contains("");
      int int1 = strBuilder0.indexOf('U', 2);
      int int2 = strBuilder0.lastIndexOf('P');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      char[] charArray0 = new char[3];
      charArray0[0] = 'l';
      charArray0[1] = 'U';
      charArray0[2] = 'P';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 32, 0);
      StrBuilder strBuilder2 = strBuilder0.append(true);
      int int3 = strBuilder1.size();
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      int int1 = strBuilder0.indexOf(']', (-558));
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      String string0 = strBuilder0.toString();
      StrMatcher strMatcher0 = StrMatcher.stringMatcher((String) null);
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      int int0 = strBuilder0.validateRange(0, 0);
      StrBuilder strBuilder1 = new StrBuilder("Mac");
      boolean boolean1 = strBuilder0.equalsIgnoreCase(strBuilder1);
      boolean boolean2 = strBuilder1.startsWith("");
      StrBuilder strBuilder2 = strBuilder1.setNewLineText("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[4];
      charArray0[0] = '?';
      charArray0[1] = 'L';
      charArray0[2] = 'R';
      charArray0[3] = 'K';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("ck=(Fr\")B^JsD'aN]");
      boolean boolean0 = strBuilder0.startsWith("ck=(Fr\")B^JsD'aN]");
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("5.1");
      StringBuffer stringBuffer0 = new StringBuffer("C(~");
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, (-1931), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(2381.0F);
      int int0 = strBuilder0.lastIndexOf("end < start");
      String string0 = strBuilder0.leftString((-270));
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-1449);
      int int1 = 10;
      char char0 = '{';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((-1449), 10, '{');
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder2 = strBuilder0.replaceAll((StrMatcher) strMatcher_TrimMatcher0, "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      StrBuilder strBuilder3 = strBuilder1.setNullText((String) null);
      StrBuilder strBuilder4 = strBuilder1.replaceFirst("L}\"jxF", "L}\"jxF");
      StrBuilder strBuilder5 = strBuilder0.setNullText("");
      StrBuilder strBuilder6 = strBuilder5.append((Object) "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      StrBuilder strBuilder7 = strBuilder1.minimizeCapacity();
      int int2 = strBuilder7.lastIndexOf((StrMatcher) strMatcher_TrimMatcher0, (-1335));
      // Undeclared exception!
      try { 
        strBuilder2.delete((-2119), 118);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2119
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "";
      StrBuilder strBuilder1 = strBuilder0.append("");
      boolean boolean0 = strBuilder0.startsWith("(rwt9OWavykdL=D");
      StrBuilder strBuilder2 = strBuilder1.replaceAll("(rwt9OWavykdL=D", "");
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      int int0 = strBuilder2.lastIndexOf("");
      StrBuilder strBuilder3 = strBuilder1.reverse();
      StrBuilder strBuilder4 = strBuilder3.setLength(3675);
      // Undeclared exception!
      try { 
        strBuilder3.validateRange((-9), 7);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -9
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-974));
      StrBuilder strBuilder1 = strBuilder0.append(true);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Collection) linkedList0, (String) null);
      // Undeclared exception!
      try { 
        strBuilder1.insert((-974), (-974));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -974
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.capacity();
      StrBuilder strBuilder1 = strBuilder0.append(true);
      StrBuilder strBuilder2 = strBuilder1.deleteFirst('+');
      String string0 = "";
      boolean boolean0 = strBuilder0.contains("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      boolean boolean1 = strBuilder_StrBuilderReader0.ready();
      StrBuilder strBuilder3 = strBuilder0.minimizeCapacity();
      int int1 = 0;
      StrBuilder strBuilder4 = strBuilder1.append(strBuilder0, 0, 0);
      StringBuffer stringBuffer0 = new StringBuffer(0);
      // Undeclared exception!
      try { 
        stringBuffer0.insert((-1), 0.0F);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(115);
      int int0 = 0;
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "~>u===YSSZ1pN]ID");
      StrBuilder strBuilder2 = strBuilder1.append("~>u===YSSZ1pN]ID", 0, 0);
      StrBuilder strBuilder3 = strBuilder0.appendPadding(0, 'v');
      String string0 = "\"\\/&ey";
      StrBuilder strBuilder4 = strBuilder3.deleteAll("\"/&ey");
      StrBuilder strBuilder5 = strBuilder0.append((Object) strBuilder3);
      StrTokenizer strTokenizer0 = strBuilder3.asTokenizer();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder4.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder strBuilder6 = strBuilder5.append(object0);
      StrBuilder strBuilder7 = strBuilder5.trim();
      int int1 = strBuilder3.length();
      StrBuilder strBuilder8 = strBuilder0.trim();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder5.new StrBuilderReader();
      StrBuilder strBuilder9 = strBuilder8.append(0);
      StrBuilder strBuilder10 = strBuilder9.replace(0, 0, "~>u===YSSZ1pN]ID");
      long long0 = strBuilder_StrBuilderReader0.skip((-2676L));
      char[] charArray0 = new char[1];
      charArray0[0] = 'v';
      // Undeclared exception!
      try { 
        strBuilder8.insert(2578, charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2578
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[4];
      charArray0[0] = '4';
      charArray0[1] = 'Q';
      charArray0[2] = '>';
      charArray0[3] = '\\';
      // Undeclared exception!
      try { 
        strBuilder0.getChars((-1), (-1), charArray0, 249);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      char[] charArray0 = new char[9];
      StrBuilder strBuilder2 = strBuilder1.minimizeCapacity();
      StrBuilder strBuilder3 = strBuilder2.replace(1, 1, "Invalid offset: ");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setQuoteMatcher(strMatcher0);
      StrBuilder strBuilder4 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "Invalid offset: ");
      charArray0[0] = 'f';
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("Bq- ZQX]vD_hZ");
      charArray0[2] = '\\';
      charArray0[3] = '}';
      charArray0[4] = '=';
      charArray0[5] = 'b';
      charArray0[6] = ':';
      charArray0[7] = 'E';
      charArray0[8] = '#';
      int int0 = strMatcher0.isMatch(charArray0, 0, 97, (-2707));
      // Undeclared exception!
      try { 
        strBuilder1.insert((-1622), (long) (-1622));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1622
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("lg'} brcsDr$D?n");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('^');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "lg'} brcsDr$D?n");
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charBuffer0);
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.StringCharBuffer", e);
      }
  }
}
