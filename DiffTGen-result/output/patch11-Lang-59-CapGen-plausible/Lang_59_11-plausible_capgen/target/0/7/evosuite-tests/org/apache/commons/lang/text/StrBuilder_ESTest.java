/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 31 14:33:35 GMT 2020
 */

package org.apache.commons.lang.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.Writer;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.NoSuchElementException;
import java.util.function.Consumer;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import org.apache.commons.lang.text.StrBuilder;
import org.apache.commons.lang.text.StrMatcher;
import org.apache.commons.lang.text.StrTokenizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StrBuilder_ESTest extends StrBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      boolean boolean0 = linkedList0.add("");
      Stream<String> stream0 = linkedList0.stream();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "[34N>{upt,pTS~*");
      String string0 = strBuilder1.substring(0);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("");
      boolean boolean1 = strBuilder1.contains(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight((-1569), 102, 'P');
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(114);
      String string0 = strBuilder0.rightString(0);
      StrBuilder strBuilder1 = strBuilder0.appendPadding(114, 'i');
      StrBuilder strBuilder2 = strBuilder1.ensureCapacity(327);
      int int0 = strBuilder0.indexOf("");
      StrBuilder strBuilder3 = strBuilder0.append((Object) "");
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrBuilder strBuilder4 = strBuilder2.replaceAll(strMatcher0, "StrTokenizer[not tokenized yet]");
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(16);
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      StrBuilder strBuilder2 = strBuilder1.append("!");
      StrBuilder strBuilder3 = strBuilder0.deleteAll("Qc");
      StrBuilder strBuilder4 = strBuilder1.deleteAll('s');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrBuilder strBuilder5 = strBuilder4.replaceFirst(strMatcher0, "java.version");
      char char0 = ';';
      StrBuilder strBuilder6 = strBuilder4.replaceAll(';', ';');
      int int0 = strBuilder6.indexOf(strMatcher0);
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = null;
      try {
        strMatcher_StringMatcher0 = new StrMatcher.StringMatcher((String) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrMatcher$StringMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      boolean boolean0 = linkedList0.add("");
      boolean boolean1 = linkedList0.add("R'(e7i23O[");
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("");
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Object[]) null, "");
      StrBuilder strBuilder2 = strBuilder1.appendNewLine();
      StrBuilder strBuilder3 = strBuilder0.appendWithSeparators((Collection) linkedList0, "org.apache.commons.lang.text.StrBuilder");
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((StrBuilder) null);
      StrBuilder strBuilder2 = strBuilder0.append(0L);
      StrBuilder strBuilder3 = strBuilder2.setLength(0);
      StrBuilder strBuilder4 = strBuilder2.deleteFirst('c');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder4.new StrBuilderTokenizer();
      boolean boolean0 = strBuilder0.startsWith("v+wMF_|.+]zuN");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder3.new StrBuilderWriter();
      StrBuilder strBuilder5 = strBuilder4.appendFixedWidthPadLeft((Object) strBuilder3, 1, 'U');
      strBuilder_StrBuilderWriter0.write((char[]) null);
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder");
      int int0 = 0;
      int int1 = 97;
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("");
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "cdTa|m_*~~");
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight(0, 97, '\'');
      int int2 = strBuilder1.capacity();
      strBuilder2.buffer = null;
      // Undeclared exception!
      try { 
        strBuilder2.replaceAll(",", "cdTa|m_*~~");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = (-278);
      StrBuilder strBuilder1 = strBuilder0.append((StringBuffer) null, (-278), (-278));
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight((Object) null, (-278), '^');
      char[] charArray0 = new char[2];
      charArray0[0] = '0';
      charArray0[1] = 'j';
      int int1 = (-2482);
      int int2 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 0, (-74));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: -74
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      boolean boolean0 = linkedList0.add("");
      Stream<String> stream0 = linkedList0.stream();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "[34N>{upt,pTS~*");
      char[] charArray0 = new char[4];
      charArray0[0] = 'W';
      charArray0[1] = 'Q';
      charArray0[2] = '%';
      charArray0[3] = ',';
      strBuilder0.buffer = charArray0;
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("");
      boolean boolean1 = strBuilder1.contains(strMatcher0);
      char char0 = 'P';
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight((-1569), 102, 'P');
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      String string0 = "Invalid startIndex: ";
      StrBuilder strBuilder0 = new StrBuilder("Invalid startIndex: ");
      StrBuilder strBuilder1 = strBuilder0.replace(4, 4, "Invalid length: ");
      StrBuilder strBuilder2 = strBuilder1.replace((StrMatcher) null, "Invalid startIndex: ", 4, 4, 3218);
      StrBuilder strBuilder3 = strBuilder0.clear();
      StrBuilder strBuilder4 = strBuilder0.deleteAll("java.io.tmpdir");
      String string1 = strBuilder0.rightString(32);
      strBuilder0.size = 102;
      // Undeclared exception!
      try { 
        strBuilder0.substring(102, 43);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder();
      char char0 = 'D';
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight((Object) strBuilder1, 45, 'D');
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.indexOf("Linux", 0);
      char char0 = '7';
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('7');
      strBuilder0.buffer = null;
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder1.insert(0, (long) (-1));
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = strBuilder0.leftString(0);
      StrBuilder strBuilder1 = strBuilder0.append(false);
      StrBuilder strBuilder2 = strBuilder1.deleteFirst("J@");
      int int1 = 2694;
      StrBuilder strBuilder3 = strBuilder2.replaceAll("", "org.apache.commons.lang.text.StrBuilder");
      StrBuilder strBuilder4 = strBuilder3.replace(1, 12, "J@");
      // Undeclared exception!
      try { 
        strBuilder2.insert(2694, (String) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2694
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2301));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("startIndex must be valid", 0, 0);
      StrBuilder strBuilder1 = new StrBuilder("length must be valid");
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("JTr+l", (-2301), 2365);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(":ZB|>*uo=");
      StrBuilder strBuilder1 = strBuilder0.deleteAll('4');
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight((Object) ":ZB|>*uo=", 101, 'i');
      char[] charArray0 = strBuilder2.toCharArray(101, 101);
      // Undeclared exception!
      try { 
        strBuilder0.delete(441, 441);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("l1p? V&oc}*+Rg", "l1p? V&oc}*+Rg");
      String string0 = "";
      StrBuilder strBuilder2 = strBuilder1.setNullText("");
      char[] charArray0 = new char[1];
      charArray0[0] = 'X';
      // Undeclared exception!
      try { 
        strBuilder1.insert(0, charArray0, (-399), 3955);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: -399
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.equals(strBuilder0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      strBuilder0.size = 257;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) null, "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(")}{T_");
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      Object[] objectArray0 = new Object[0];
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators(objectArray0, "LINUX");
      int int0 = strBuilder1.indexOf(strMatcher0, 2811);
      StrBuilder strBuilder3 = strBuilder0.append("");
      // Undeclared exception!
      try { 
        strBuilder2.insert(34, (long) (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 34
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(")}{T_");
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      Object[] objectArray0 = new Object[0];
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators(objectArray0, ")}{T_");
      int int0 = strBuilder1.indexOf(strMatcher0, 2811);
      StrBuilder strBuilder3 = strBuilder0.append("");
      // Undeclared exception!
      try { 
        strBuilder2.insert(34, (long) (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 34
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(16);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrBuilder strBuilder1 = strBuilder0.append(':');
      int int0 = strBuilder0.capacity();
      StrBuilder strBuilder2 = strBuilder0.trim();
      strBuilder_StrBuilderReader0.close();
      // Undeclared exception!
      try { 
        strBuilder2.insert(361, (Object) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 361
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      StrBuilder strBuilder1 = strBuilder0.delete(0, 0);
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      char[] charArray0 = new char[5];
      charArray0[0] = '2';
      charArray0[1] = ' ';
      charArray0[2] = '~';
      charArray0[3] = '(';
      charArray0[4] = 'B';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder1.lastIndexOf(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.trim();
      int int1 = strBuilder0.lastIndexOf("d(_%iCJ#PIJx8}d.d.F", (-648));
      boolean boolean0 = strBuilder1.contains('2');
      StrBuilder strBuilder3 = strBuilder0.deleteAll('E');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      String string0 = strBuilder0.leftString(1);
      int int0 = 0;
      char[] charArray0 = new char[2];
      charArray0[0] = '[';
      charArray0[1] = '!';
      // Undeclared exception!
      try { 
        strBuilder0.insert(115, charArray0, 1643, 9);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 115
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      boolean boolean0 = strBuilder_StrBuilderTokenizer0.hasPrevious();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setQuoteMatcher(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, (String) null);
      strBuilder0.size = 0;
      StrBuilder strBuilder2 = strBuilder0.ensureCapacity(39);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[5];
      charArray0[0] = '~';
      charArray0[1] = '!';
      charArray0[2] = 'U';
      charArray0[3] = 'v';
      char[] charArray1 = new char[6];
      charArray1[0] = '~';
      charArray1[1] = '5';
      charArray1[2] = 'U';
      charArray1[3] = 'U';
      charArray1[4] = '?';
      charArray1[5] = '!';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray1, 0, 0);
      int int0 = strBuilder_StrBuilderReader0.read(charBuffer0);
      charArray0[4] = '@';
      int int1 = strBuilder_StrBuilderReader0.read(charArray0, 0, 5);
      StrBuilder strBuilder3 = strBuilder2.appendNewLine();
      StrBuilder strBuilder4 = strBuilder3.append((long) 5);
      StrBuilder strBuilder5 = strBuilder0.replaceFirst((String) null, (String) null);
      String string0 = strBuilder1.rightString(2712);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Yk'_FZVE3B");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer1 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = StrMatcher.charMatcher('?');
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer1.setIgnoredMatcher(strMatcher0);
      StrMatcher strMatcher1 = strBuilder_StrBuilderTokenizer1.getDelimiterMatcher();
      StrTokenizer strTokenizer1 = strBuilder_StrBuilderTokenizer1.setTrimmerMatcher(strMatcher0);
      StrMatcher strMatcher2 = StrMatcher.charMatcher('?');
      StrTokenizer strTokenizer2 = StrTokenizer.getCSVInstance("ZI1wM0]Q!hTy}");
      StrTokenizer strTokenizer3 = StrTokenizer.getCSVInstance((char[]) null);
      int int0 = strBuilder0.lastIndexOf(strMatcher1, 5);
      StrMatcher strMatcher3 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      int int1 = strBuilder0.lastIndexOf(strMatcher3);
      int int2 = strMatcher3.isMatch((char[]) null, 5, (-1), 5);
      boolean boolean0 = strBuilder0.contains("Yk'_FZVE3B");
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray(2, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.insert(0, "");
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(48);
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(48, '7');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 48
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      String string0 = "S\"\\6_0#O5";
      StrBuilder strBuilder0 = new StrBuilder("S\"\u0006_0#O5");
      String string1 = strBuilder0.toString();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("S\"\u0006_0#O5");
      Object[] objectArray0 = new Object[0];
      StringBuffer stringBuffer0 = null;
      try {
        stringBuffer0 = new StringBuffer((String) null);
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      int int0 = 1092;
      StrBuilder strBuilder0 = new StrBuilder(1092);
      int int1 = 1;
      StrBuilder strBuilder1 = strBuilder0.append((StringBuffer) null, 1092, 1);
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder strBuilder2 = strBuilder0.append((StringBuffer) null);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(1);
      // Undeclared exception!
      try { 
        strBuilder1.validateRange(1, (-1475));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StringBuffer stringBuffer0 = new StringBuffer(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[3];
      charArray0[0] = '#';
      charArray0[1] = 'L';
      charArray0[2] = 'f';
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset(charArray0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, (String) null);
      StringBuffer stringBuffer1 = new StringBuffer(stringBuffer0);
      StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) stringBuffer1);
      StrBuilder strBuilder2 = strBuilder0.append(stringBuffer0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder0.lastIndexOf((String) null);
      char[] charArray1 = strBuilder0.toCharArray(0, 0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.insert(0, true);
      StrBuilder strBuilder2 = strBuilder0.replaceAll((String) null, (String) null);
      StrBuilder strBuilder3 = new StrBuilder((String) null);
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadLeft((Object) strBuilder3, 0, 'T');
      StrBuilder strBuilder5 = strBuilder2.insert(0, "");
      int int0 = (-2126);
      StringBuffer stringBuffer0 = null;
      try {
        stringBuffer0 = new StringBuffer((-2126));
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      int int0 = (-459);
      StrBuilder strBuilder0 = new StrBuilder((-459));
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[6];
      charArray0[0] = 'w';
      strBuilder_StrBuilderReader0.mark((-459));
      StrBuilder strBuilder1 = strBuilder0.clear();
      charArray0[1] = 'A';
      charArray0[2] = 'l';
      charArray0[3] = 'J';
      charArray0[4] = 'J';
      charArray0[5] = 'T';
      int int1 = strBuilder_StrBuilderReader0.read(charArray0);
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      // Undeclared exception!
      try { 
        strBuilder0.setLength((-459));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -459
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2586));
      String string0 = strBuilder0.toString();
      boolean boolean0 = strBuilder0.endsWith("java.awt.fonts");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip((-2586));
      boolean boolean1 = strBuilder0.isEmpty();
      int int0 = strBuilder0.lastIndexOf('y', (-2586));
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.length();
      String string0 = strBuilder0.leftString(0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      int int1 = 2726;
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.append((CharSequence) "", 31, 2726);
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      String string0 = ", '";
      StrBuilder strBuilder0 = new StrBuilder(", '");
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder2 = strBuilder0.replaceFirst('u', 'r');
      int int0 = 4291;
      int int1 = 0;
      char[] charArray0 = new char[8];
      charArray0[0] = 'r';
      charArray0[1] = 'u';
      charArray0[2] = 'u';
      charArray0[3] = 'u';
      charArray0[4] = 'u';
      charArray0[5] = 'u';
      strBuilder0.validateIndex(0);
      charArray0[6] = 'r';
      charArray0[7] = '2';
      // Undeclared exception!
      try { 
        strBuilder2.getChars(4291, 0, charArray0, 4291);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((-639L));
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      StrBuilder strBuilder2 = strBuilder1.insert(0, "java.vm.specification.version");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      char[] charArray0 = new char[6];
      charArray0[0] = '6';
      charArray0[1] = '7';
      charArray0[2] = ':';
      charArray0[3] = 'w';
      charArray0[4] = 's';
      charArray0[5] = 'u';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0);
      int int1 = strBuilder_StrBuilderReader0.read();
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.appendPadding(0, 'k');
      StrBuilder strBuilder2 = strBuilder0.appendNull();
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder strBuilder3 = strBuilder2.trim();
      StrBuilder strBuilder4 = strBuilder1.setNullText(";r-(x uge-%");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder4.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('f');
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoredChar('%');
      StrBuilder strBuilder5 = strBuilder4.replaceFirst(strMatcher0, ";r-(x uge-%");
      StrBuilder strBuilder6 = strBuilder5.append(0.0F);
      StrBuilder strBuilder7 = strBuilder2.ensureCapacity(734);
      StrBuilder strBuilder8 = strBuilder1.minimizeCapacity();
      boolean boolean0 = strBuilder3.contains("");
      StrBuilder strBuilder9 = strBuilder0.insert(0, (-1076.9535F));
      int int0 = strBuilder9.indexOf("", 734);
      // Undeclared exception!
      try { 
        strBuilder0.delete(734, 734);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2944));
      char[] charArray0 = new char[1];
      charArray0[0] = 'F';
      int int0 = 0;
      int int1 = 742;
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 0, 742);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 742
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[3];
      charArray0[0] = '^';
      charArray0[1] = 'W';
      charArray0[2] = 'S';
      // Undeclared exception!
      try { 
        strBuilder0.getChars((-1199), 1821, charArray0, 1821);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1199
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      String string0 = "";
      strBuilder_StrBuilderWriter0.write("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      char char0 = '=';
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoredChar('=');
      StrMatcher strMatcher1 = StrMatcher.charMatcher('[');
      char char1 = 'T';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((-73), (-193), 'T');
      int int0 = strBuilder1.lastIndexOf(strMatcher1, 39);
      // Undeclared exception!
      try { 
        strBuilder0.replace(strMatcher0, "", (-73), 1220, (-73));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -73
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(115);
      StrBuilder strBuilder1 = strBuilder0.append('+');
      String string0 = strBuilder1.leftString(115);
      StrBuilder strBuilder2 = strBuilder1.append(0.0);
      int int0 = 108;
      // Undeclared exception!
      try { 
        strBuilder1.insert(115, 150L);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 115
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Object object0 = new Object();
      int int0 = (-155);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      char char0 = 'V';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(object0, (-155), 'V');
      int int1 = (-1152);
      StrBuilder strBuilder2 = strBuilder0.deleteAll('V');
      // Undeclared exception!
      try { 
        strBuilder1.replace((StrMatcher) null, "P&", Integer.MAX_VALUE, 48, 48);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      strBuilder0.validateIndex(0);
      StrBuilder strBuilder1 = strBuilder0.replaceAll("wVKf:PQ[u)#OUBJsD+", "wVKf:PQ[u)#OUBJsD+");
      StrBuilder strBuilder2 = strBuilder1.minimizeCapacity();
      char[] charArray0 = new char[7];
      charArray0[0] = 'N';
      charArray0[1] = 'q';
      StrBuilder strBuilder3 = strBuilder0.append((double) 0);
      charArray0[2] = 'U';
      charArray0[3] = 'K';
      charArray0[4] = 'S';
      String string0 = strBuilder1.substring(0, 0);
      charArray0[5] = 'r';
      charArray0[6] = 'i';
      StrBuilder strBuilder4 = strBuilder2.append(charArray0);
      int int0 = strBuilder0.indexOf('/');
      char[] charArray1 = strBuilder0.getChars(charArray0);
      StrBuilder strBuilder5 = strBuilder0.setNewLineText("Invalid length: ");
      int int1 = strBuilder1.indexOf('7');
      char[] charArray2 = strBuilder4.getChars(charArray0);
      StrBuilder strBuilder6 = strBuilder3.replaceAll("", "org.apache.commons.lang.text.StrBuilder");
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.vm.name");
      String string0 = strBuilder0.substring(0, 2287);
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      StringBuffer stringBuffer0 = new StringBuffer("java.vm.name");
      StrBuilder strBuilder2 = strBuilder1.append(stringBuffer0);
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadLeft((Object) "java.vm.name", (-4266), '');
      String string1 = strBuilder0.leftString(0);
      boolean boolean0 = strBuilder0.startsWith("");
      StrBuilder strBuilder4 = strBuilder0.appendNull();
      StrBuilder strBuilder5 = strBuilder3.append('>');
      StrBuilder strBuilder6 = strBuilder2.append(0);
      StrBuilder strBuilder7 = strBuilder0.append((Object) "");
      StrBuilder strBuilder8 = strBuilder4.clear();
      StrBuilder strBuilder9 = new StrBuilder("java.vm.name");
      boolean boolean1 = strBuilder6.equals((Object) strBuilder9);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder6.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      StrBuilder strBuilder10 = strBuilder8.replace(strMatcher0, "java.vm.name", 0, 1600, 0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder");
      int int0 = 0;
      int int1 = 97;
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("");
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "cdTa|m_*~~");
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight(0, 97, '\'');
      int int2 = strBuilder1.capacity();
      strBuilder2.buffer = null;
      StrBuilder strBuilder3 = strBuilder2.replaceAll("", "cdTa|m_*~~");
      StrBuilder strBuilder4 = strBuilder1.deleteFirst(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder1.appendNewLine();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("'7U;}YOi@+Q");
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "'7U;}YOi@+Q");
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(5);
      String string0 = "";
      StrBuilder strBuilder1 = strBuilder0.replaceAll("", "");
      int int0 = strBuilder0.indexOf("", 5);
      StrBuilder strBuilder2 = strBuilder1.setLength(1791);
      StrBuilder strBuilder3 = strBuilder1.deleteAll(';');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder3.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.append((CharSequence) "", 0, 1791);
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('Y');
      char[] charArray0 = new char[4];
      charArray0[0] = 'Y';
      charArray0[1] = 'Y';
      charArray0[2] = 'Y';
      charArray0[3] = 'Y';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst((StrMatcher) strMatcher_CharMatcher0);
      Reader reader0 = strBuilder0.asReader();
      String string0 = strBuilder0.getNewLineText();
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("5Lknvf>Yo<pH<S &}kB");
      char[] charArray0 = new char[7];
      charArray0[0] = '(';
      charArray0[1] = '7';
      StrBuilder strBuilder1 = strBuilder0.append('7');
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_NoMatcher0, (-650));
      charArray0[2] = 'K';
      charArray0[3] = '';
      charArray0[4] = '0';
      String string0 = strBuilder0.midString((-943), (-265));
      charArray0[5] = 'l';
      StrBuilder strBuilder2 = strBuilder0.append((double) (-265));
      charArray0[6] = ' ';
      StrBuilder strBuilder3 = strBuilder0.append(charArray0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(114);
      char char0 = '\\';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) "ta~nf]", 114, '\\');
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      int int0 = strBuilder0.lastIndexOf(strMatcher0, (-2864));
      StrBuilder strBuilder2 = strBuilder0.replaceAll("ta~nf]", "ta~nf]");
      StrBuilder strBuilder3 = strBuilder0.append((double) 114);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("ta~nf]");
      strBuilder_StrBuilderWriter0.flush();
      StrBuilder strBuilder4 = strBuilder2.replaceFirst("ta~nf]", "ta~nf]");
      char[] charArray0 = new char[7];
      charArray0[0] = '\\';
      charArray0[1] = '\\';
      charArray0[2] = '\\';
      charArray0[3] = '\\';
      charArray0[4] = '\\';
      charArray0[5] = '\\';
      charArray0[6] = '\\';
      // Undeclared exception!
      try { 
        strBuilder4.insert((-1), charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      int int0 = (-1696);
      StrBuilder strBuilder0 = new StrBuilder((-1696));
      StrBuilder strBuilder1 = new StrBuilder((String) null);
      String string0 = strBuilder1.toString();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      String string1 = strBuilder_StrBuilderTokenizer0.getContent();
      boolean boolean0 = strBuilder0.contains("org.apache.commons.lang.text.StrBuilder");
      String string2 = strBuilder0.rightString((-1696));
      char char0 = '|';
      int int1 = strBuilder1.indexOf('|');
      int int2 = (-144);
      // Undeclared exception!
      try { 
        strBuilder0.append("", (-144), (-1696));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      String string0 = strBuilder0.substring(0, 0);
      strBuilder0.buffer = null;
      // Undeclared exception!
      try { 
        strBuilder0.lastIndexOf("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      int int0 = 1554;
      StrBuilder strBuilder0 = new StrBuilder(1554);
      int int1 = 117;
      // Undeclared exception!
      try { 
        strBuilder0.validateRange(1554, 117);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("startIndex must be valid");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      boolean boolean0 = strBuilder0.contains("5.0");
      // Undeclared exception!
      try { 
        strBuilder1.toCharArray((-1), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[0];
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, (-1231), 659);
      StrBuilder strBuilder1 = strBuilder0.setNullText("$@");
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, (-1231), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-802));
      StrBuilder strBuilder1 = strBuilder0.append(strBuilder0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      char[] charArray0 = new char[4];
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, (-802), (-959));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -959
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrBuilder strBuilder2 = strBuilder0.deleteAll(strMatcher0);
      StrBuilder strBuilder3 = strBuilder0.append(0);
      int int0 = strBuilder0.hashCode();
      String string0 = strBuilder1.substring(0, 101);
      Reader reader0 = strBuilder2.asReader();
      StrBuilder strBuilder4 = strBuilder1.append(false);
      StrBuilder strBuilder5 = strBuilder0.clear();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder6 = strBuilder2.appendWithSeparators((Collection) linkedList0, (String) null);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.previous();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[7];
      charArray0[0] = 'g';
      charArray0[1] = 'a';
      charArray0[2] = 'o';
      charArray0[3] = '!';
      charArray0[4] = 'a';
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, (String) null);
      StrBuilder strBuilder2 = strBuilder1.append((String) null, 57, 0);
      charArray0[5] = 'K';
      charArray0[6] = 'M';
      strBuilder_StrBuilderWriter0.write(charArray0);
      StrBuilder strBuilder3 = new StrBuilder((-168));
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadRight((Object) strBuilder3, 0, 'a');
      strBuilder_StrBuilderWriter0.close();
      strBuilder_StrBuilderWriter0.close();
      StrBuilder strBuilder5 = strBuilder0.replaceAll((String) null, (String) null);
      int int0 = strBuilder5.hashCode();
      StrBuilder strBuilder6 = strBuilder0.replaceFirst(strMatcher0, "");
      StrBuilder strBuilder7 = strBuilder3.ensureCapacity(0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Ls-Da9{L]\"QO");
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(3075);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1792));
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex((-514));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -514
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      char[] charArray0 = new char[4];
      charArray0[0] = '4';
      charArray0[1] = 'y';
      charArray0[2] = '1';
      charArray0[3] = 'o';
      StrBuilder strBuilder1 = strBuilder0.insert(0, charArray0);
      StrBuilder strBuilder2 = strBuilder0.deleteAll((String) null);
      String string0 = strBuilder0.midString(1661, 1661);
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      StrBuilder strBuilder3 = strBuilder0.replaceFirst(strMatcher0, "");
      String string1 = null;
      boolean boolean0 = strBuilder0.startsWith((String) null);
      StrBuilder strBuilder4 = strBuilder2.append((float) 1661);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder4.new StrBuilderReader();
      char[] charArray1 = new char[6];
      charArray1[0] = '9';
      charArray1[1] = 'f';
      charArray1[2] = 'j';
      charArray1[3] = '/';
      String string2 = strBuilder4.midString(1661, (-1705));
      charArray1[4] = '@';
      charArray1[5] = ' ';
      int int0 = 0;
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray1, 633, 0);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-629));
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(110, 2, 'I');
      char[] charArray0 = new char[7];
      charArray0[0] = ',';
      charArray0[1] = 'I';
      charArray0[2] = 'I';
      charArray0[3] = 'P';
      charArray0[4] = 'I';
      charArray0[5] = 'I';
      charArray0[6] = '~';
      StrBuilder strBuilder2 = strBuilder0.insert(2, charArray0);
      StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
      StrBuilder strBuilder4 = new StrBuilder(":SZLCzK1uT}Fb{D");
      StrBuilder strBuilder5 = strBuilder0.append(strBuilder4);
      int int0 = strBuilder0.indexOf((StrMatcher) null, (-629));
      StrBuilder strBuilder6 = strBuilder0.appendFixedWidthPadRight(2, 0, 'T');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((char[]) null);
      String string0 = strBuilder6.getNullText();
      strBuilder_StrBuilderWriter0.write(charArray0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(",L42<Iwp@L}yPt)h=<");
      String string0 = strBuilder0.midString(102, (-3048));
      StrBuilder strBuilder1 = strBuilder0.insert(0, (Object) ",L42<Iwp@L}yPt)h=<");
      StrBuilder strBuilder2 = strBuilder1.minimizeCapacity();
      StrBuilder strBuilder3 = strBuilder1.append('0');
      int int0 = strBuilder0.indexOf('y', 2170);
      StrBuilder strBuilder4 = strBuilder3.append('}');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder4.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset();
      StrBuilder strBuilder5 = strBuilder1.appendWithSeparators((Iterator) strTokenizer0, "");
      StrBuilder strBuilder6 = strBuilder5.append(606.97F);
      StrBuilder strBuilder7 = strBuilder1.deleteFirst("org.apache.commons.lang.text.StrMatcher$CharMatcher");
      // Undeclared exception!
      try { 
        strBuilder6.insert((-2810), (long) (-2810));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2810
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("U\"!BLG$hQ");
      boolean boolean0 = strBuilder0.startsWith("vI>*b4G@+)-2");
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("U\"!BLG$hQ");
      StrBuilder strBuilder2 = strBuilder0.append((Object) strBuilder1);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      // Undeclared exception!
      try { 
        strBuilder1.append("", 44, 4984);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = strBuilder0.toCharArray();
      char char0 = 'b';
      StrBuilder strBuilder1 = strBuilder0.insert(0, 'b');
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      int int0 = 32;
      // Undeclared exception!
      try { 
        strBuilder1.toCharArray(32, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setTrimmerMatcher(strMatcher0);
      StrTokenizer strTokenizer1 = strBuilder_StrBuilderTokenizer0.setQuoteMatcher(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer1, "");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      boolean boolean1 = strBuilder1.equalsIgnoreCase(strBuilder0);
      StrBuilder strBuilder2 = strBuilder0.append(0.0);
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder3 = strBuilder0.deleteFirst((StrMatcher) strMatcher_TrimMatcher0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.append((CharSequence) "", 4, 4);
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      Iterator<Object> iterator0 = linkedList0.descendingIterator();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(iterator0, "");
      boolean boolean0 = strBuilder0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(121);
      char[] charArray0 = new char[9];
      charArray0[0] = '{';
      charArray0[1] = 'A';
      charArray0[2] = 'B';
      charArray0[3] = 'o';
      charArray0[4] = '=';
      charArray0[5] = 'f';
      charArray0[6] = 'p';
      charArray0[7] = 'T';
      charArray0[8] = 'L';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      Integer integer0 = new Integer(0);
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((Object) integer0, 1639, 'v');
      StrBuilder strBuilder3 = strBuilder2.insert(1639, (-4528.928230307002));
      StrBuilder strBuilder4 = strBuilder2.minimizeCapacity();
      StrBuilder strBuilder5 = strBuilder4.deleteFirst("gJosARGm#w0r#Gm");
      StrBuilder strBuilder6 = strBuilder2.deleteFirst("}3FK+xGa");
      int int0 = strBuilder2.indexOf('B', 1639);
      StrBuilder strBuilder7 = strBuilder3.append("}3FK+xGa");
      // Undeclared exception!
      try { 
        strBuilder1.insert((-60), 1L);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -60
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      boolean boolean0 = linkedList0.removeAll(linkedList1);
      int int0 = 32;
      Integer integer0 = new Integer(32);
      boolean boolean1 = linkedList0.add(integer0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "java.vm.specification.name");
      char[] charArray0 = strBuilder0.getChars((char[]) null);
      char[] charArray1 = strBuilder0.toCharArray();
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft(32, 32, '_');
      // Undeclared exception!
      try { 
        strBuilder1.insert((-2), (char[]) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = strBuilder0.leftString(0);
      StrBuilder strBuilder1 = strBuilder0.append(false);
      StrBuilder strBuilder2 = strBuilder1.deleteFirst("J@");
      int int1 = 2694;
      StrBuilder strBuilder3 = strBuilder2.replaceAll("", "org.apache.commons.lang.text.StrBuilder");
      // Undeclared exception!
      try { 
        strBuilder2.insert(2694, (String) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2694
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.insert(0, 0);
      char[] charArray0 = new char[8];
      charArray0[0] = '-';
      charArray0[1] = 't';
      charArray0[2] = 'i';
      charArray0[3] = '&';
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      // Undeclared exception!
      try { 
        strBuilder1.replace((StrMatcher) strMatcher_NoMatcher0, "t(i,)", (-1046), (-1247), (-1247));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1046
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('?');
      int int0 = 0;
      char[] charArray0 = new char[0];
      StrBuilder strBuilder1 = strBuilder0.insert(0, charArray0, 0, 0);
      boolean boolean0 = strBuilder0.contains((StrMatcher) strMatcher_CharMatcher0);
      StrBuilder strBuilder2 = strBuilder0.append("");
      StringBuffer stringBuffer0 = null;
      try {
        stringBuffer0 = new StringBuffer((CharSequence) null);
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(101);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0, 101);
      String string0 = strBuilder0.midString(0, 101);
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 1119, (-1362));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("', is neither of type Map.Entry nor an Array");
      int int0 = (-505);
      char[] charArray0 = new char[1];
      char char0 = 'b';
      charArray0[0] = 'b';
      // Undeclared exception!
      try { 
        strBuilder0.insert((-505), charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -505
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.midString(9, 9);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      char[] charArray0 = new char[2];
      charArray0[0] = 'v';
      charArray0[1] = '1';
      // Undeclared exception!
      try { 
        strBuilder1.insert(32, charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = 1310;
      StrBuilder strBuilder1 = strBuilder0.appendPadding(1310, 'Q');
      // Undeclared exception!
      try { 
        strBuilder1.replace(1310, 256, "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.setLength(0);
      StrBuilder strBuilder2 = new StrBuilder(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder strBuilder3 = strBuilder1.appendPadding((-1441), '');
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.contains('e');
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(114);
      Integer integer0 = new Integer(114);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) integer0, (-746), '#');
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      int int0 = 1650;
      // Undeclared exception!
      try { 
        strBuilder0.insert(1650, (char[]) null, 1650, 1650);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1650
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = null;
      StrBuilder strBuilder1 = strBuilder0.replaceAll((StrMatcher) null, (String) null);
      int int0 = (-3253);
      int int1 = strBuilder0.lastIndexOf((StrMatcher) null, (-3253));
      // Undeclared exception!
      try { 
        strBuilder0.insert(3910, (String) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3910
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.replaceAll("", "4rZ)]K");
      StrBuilder strBuilder2 = strBuilder1.minimizeCapacity();
      char[] charArray0 = new char[5];
      charArray0[0] = '9';
      StrBuilder strBuilder3 = strBuilder1.deleteAll('\\');
      charArray0[1] = 'z';
      charArray0[2] = 'L';
      charArray0[3] = '+';
      char char0 = 'x';
      // Undeclared exception!
      try { 
        strBuilder1.deleteCharAt(4);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 4
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('s');
      char[] charArray0 = new char[5];
      charArray0[0] = 's';
      charArray0[1] = 's';
      charArray0[2] = '(';
      charArray0[3] = 's';
      charArray0[4] = 's';
      strBuilder1.buffer = charArray0;
      StrBuilder strBuilder2 = strBuilder1.minimizeCapacity();
      StrTokenizer strTokenizer0 = strBuilder1.asTokenizer();
      char[] charArray1 = new char[5];
      charArray1[0] = 's';
      charArray1[1] = 's';
      charArray1[2] = 's';
      charArray1[3] = 's';
      charArray1[4] = 's';
      char[] charArray2 = strBuilder0.getChars(charArray1);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      int int0 = (-483);
      StrBuilder strBuilder0 = new StrBuilder((-483));
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("");
      // Undeclared exception!
      try { 
        strBuilder1.charAt(5);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 5
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrBuilder strBuilder2 = strBuilder0.append((-1996.5993302));
      StrBuilder strBuilder3 = strBuilder1.setNewLineText("1.6");
      StrBuilder strBuilder4 = strBuilder3.insert(0, 0.0F);
      StrBuilder strBuilder5 = strBuilder0.append("java.version");
      int int0 = strBuilder5.lastIndexOf((StrMatcher) null);
      StrBuilder strBuilder6 = strBuilder5.clear();
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      int int0 = 2575;
      StrBuilder strBuilder2 = strBuilder1.minimizeCapacity();
      int int1 = strBuilder2.indexOf(strMatcher0);
      Writer writer0 = strBuilder1.asWriter();
      // Undeclared exception!
      try { 
        strBuilder1.delete(2575, 2575);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("p'\"_@Tkdh.-p^?^3'jG");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) "p'\"_@Tkdh.-p^?^3'jG", 0, 9);
      char[] charArray0 = new char[2];
      Writer writer1 = strBuilder_StrBuilderWriter0.append((CharSequence) "p'\"_@Tkdh.-p^?^3'jG");
      charArray0[0] = 'D';
      strBuilder_StrBuilderWriter0.write(44);
      charArray0[1] = 'S';
      strBuilder_StrBuilderWriter0.write(charArray0, 0, 0);
      StrBuilder strBuilder1 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      StrBuilder strBuilder2 = strBuilder1.deleteFirst(strMatcher0);
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder3 = strBuilder1.replaceFirst(strMatcher0, "p'\"_@Tkdh.-p^?^3'jG");
      boolean boolean0 = strBuilder0.equals(strBuilder1);
      StrBuilder strBuilder4 = strBuilder1.setLength(0);
      boolean boolean1 = strBuilder0.endsWith("p'\"_@Tkdh.-p^?^3'jG");
      StrBuilder strBuilder5 = strBuilder0.append(strBuilder1, 0, 0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      String string0 = strBuilder0.substring(0, 0);
      int int0 = strBuilder0.lastIndexOf("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      int int1 = strBuilder_StrBuilderTokenizer0.size();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      String string1 = strBuilder_StrBuilderTokenizer0.getContent();
      boolean boolean0 = strBuilder0.endsWith("|X2fQ");
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(")}{T_");
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      int int0 = strBuilder1.indexOf(strMatcher0, 2811);
      StrBuilder strBuilder2 = strBuilder0.append("");
      String string0 = strBuilder0.rightString(39);
      // Undeclared exception!
      try { 
        strBuilder2.deleteCharAt(39);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 39
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("(BPAVV");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      int int0 = 2;
      StrBuilder strBuilder1 = new StrBuilder(2);
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, 2, 2);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-908));
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt((-908));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -908
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder("aY,");
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder3 = new StrBuilder(314);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder3.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      StrBuilder strBuilder4 = strBuilder1.deleteFirst(strMatcher0);
      Iterator<String> iterator0 = linkedList0.descendingIterator();
      StrBuilder strBuilder5 = strBuilder1.appendWithSeparators(iterator0, "aY,");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder3.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      StrBuilder strBuilder6 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder2.append(strBuilder6, 314, 314);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.reverse();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("aPo{.rd~,Y !wA");
      StrBuilder strBuilder2 = strBuilder1.replaceFirst(strMatcher0, "length must be valid");
      // Undeclared exception!
      try { 
        strBuilder1.deleteCharAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      String string0 = "+";
      StrBuilder strBuilder0 = new StrBuilder("+");
      StrBuilder strBuilder1 = new StrBuilder("+");
      StrMatcher strMatcher0 = StrMatcher.charMatcher('A');
      StrBuilder strBuilder2 = strBuilder1.deleteAll(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, (-1396), (-1396));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      boolean boolean0 = strBuilder0.equals(object0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[6];
      charArray0[0] = 'c';
      charArray0[1] = '-';
      charArray0[2] = '%';
      charArray0[3] = 'q';
      charArray0[4] = '}';
      charArray0[5] = '&';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 1164, 0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.setNullText("");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrBuilder strBuilder2 = strBuilder0.replace(0, 57, "");
      StrBuilder strBuilder3 = strBuilder2.deleteFirst("");
      // Undeclared exception!
      try { 
        strBuilder2.substring(57, 1);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("p9>HkvL*]R'`qi|v");
      StrBuilder strBuilder1 = strBuilder0.replaceAll("p9>HkvL*]R'`qi|v", "Invalid length: ");
      StrBuilder strBuilder2 = strBuilder0.append('L');
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      int int0 = strBuilder1.indexOf(strMatcher0);
      boolean boolean0 = strBuilder2.isEmpty();
      StrBuilder strBuilder3 = strBuilder2.deleteAll(strMatcher0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder3.new StrBuilderReader();
      boolean boolean1 = strBuilder_StrBuilderReader0.ready();
      StrBuilder strBuilder4 = strBuilder0.deleteAll("");
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) strBuilder0;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "end < start");
      int int0 = strBuilder0.indexOf('I', (-1797));
      // Undeclared exception!
      try { 
        strBuilder0.replace((StrMatcher) null, "", (-1797), (-1797), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1797
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(Integer.MAX_VALUE, 0, '1');
      int int0 = strBuilder0.size();
      StrBuilder strBuilder2 = strBuilder0.append("0<JK]![RS3,37uB=D/");
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      String string0 = strBuilder0.toString();
      String string1 = strBuilder0.rightString(0);
      StrBuilder strBuilder1 = strBuilder0.deleteAll('k');
      char[] charArray0 = new char[2];
      charArray0[0] = 'k';
      charArray0[1] = 'k';
      char[] charArray1 = strBuilder0.getChars(charArray0);
      // Undeclared exception!
      try { 
        strBuilder1.insert(3937, 2638L);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3937
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      int int0 = 5;
      StrBuilder strBuilder0 = new StrBuilder(5);
      int int1 = 3554;
      String string0 = "SiWn=V<p//xxoVfKjS";
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      int int2 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_NoMatcher0, 3554);
      // Undeclared exception!
      try { 
        strBuilder0.replace(5, 3554, "SiWn=V<p//xxoVfKjS");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("P+T@M_");
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("P+T@M_");
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("P+T@M_");
      int int0 = strBuilder0.lastIndexOf(strMatcher0, (-166));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1970));
      StringBuffer stringBuffer0 = new StringBuffer(57);
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      char[] charArray0 = new char[3];
      charArray0[0] = 'N';
      charArray0[1] = 'O';
      charArray0[2] = 'R';
      // Undeclared exception!
      try { 
        strBuilder0.insert(48, charArray0, 48, 48);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 48
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("bZ<2tW", "");
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Iterator) strTokenizer0, "");
      long long0 = strBuilder_StrBuilderReader0.skip((-1520L));
      StrBuilder strBuilder3 = new StrBuilder(3);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder3.new StrBuilderWriter();
      char[] charArray0 = new char[6];
      charArray0[0] = '(';
      charArray0[1] = 'G';
      charArray0[2] = 'p';
      charArray0[3] = '|';
      charArray0[4] = 'N';
      charArray0[5] = 'M';
      strBuilder_StrBuilderWriter0.write(charArray0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 5;
      String string0 = "Windows NT";
      StrBuilder strBuilder1 = strBuilder0.append(0);
      StrBuilder strBuilder2 = strBuilder0.deleteFirst("Windows NT");
      // Undeclared exception!
      try { 
        strBuilder2.insert(5, 'k');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 5
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3412);
      char[] charArray0 = new char[3];
      charArray0[0] = '1';
      charArray0[1] = 'U';
      charArray0[2] = 'k';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(3412, 687, charArray0, 687);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 687
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("k", "\n4o7");
      StrBuilder strBuilder2 = new StrBuilder();
      boolean boolean0 = strBuilder0.equals(strBuilder2);
      char char0 = 'Z';
      StrBuilder strBuilder3 = strBuilder0.replaceFirst('Z', 'Z');
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      String string0 = strBuilder1.toString();
      int int1 = strBuilder0.indexOf("k");
      int int2 = strBuilder1.indexOf('Z', (-1));
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder4 = strBuilder0.appendWithSeparators((Collection) linkedList0, "k");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher1 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      int int3 = 299;
      int int4 = 2655;
      // Undeclared exception!
      try { 
        strBuilder4.replace(strMatcher1, "HZ2", 299, (-1811), 2655);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-5232));
      int int0 = strBuilder0.indexOf('`', (-5232));
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrBuilder strBuilder2 = strBuilder0.append((char[]) null, 0, 0);
      StrBuilder strBuilder3 = strBuilder2.append((String) null);
      StringBuffer stringBuffer0 = strBuilder3.toStringBuffer();
      StrBuilder strBuilder4 = strBuilder1.replaceFirst('\\', '\\');
      int int0 = strBuilder1.indexOf("", 0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      List list0 = strBuilder_StrBuilderTokenizer0.getTokenList();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer1 = strBuilder4.new StrBuilderTokenizer();
      String[] stringArray0 = strBuilder_StrBuilderTokenizer1.getTokenArray();
      String string0 = strBuilder_StrBuilderTokenizer1.getContent();
      StrBuilder strBuilder5 = strBuilder1.deleteAll('\\');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(0);
      strBuilder_StrBuilderReader0.mark(34);
      strBuilder_StrBuilderReader0.mark(0);
      // Undeclared exception!
      try { 
        strBuilder2.substring((-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoreEmptyTokens(true);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "");
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      String string0 = "', has a length less than 2";
      StrBuilder strBuilder0 = new StrBuilder("', has a length less than 2");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('i');
      // Undeclared exception!
      try { 
        strBuilder1.replace((-1031), 115, ";whS:D9=");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1031
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder((-871));
      boolean boolean0 = strBuilder0.equals(strBuilder1);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      char[] charArray0 = new char[1];
      StrBuilder strBuilder1 = strBuilder0.trim();
      char char0 = 'e';
      charArray0[0] = 'e';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder0.indexOf(strMatcher0);
      String string0 = "";
      boolean boolean0 = strBuilder1.endsWith("");
      String string1 = "Invalid offset: ";
      StrBuilder strBuilder2 = strBuilder0.replaceAll("", "Invalid offset: ");
      StrBuilder strBuilder3 = strBuilder0.deleteFirst(';');
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder4 = strBuilder2.appendWithSeparators((Collection) linkedList0, "\"')-frd-WxW");
      StrBuilder strBuilder5 = strBuilder4.setNewLineText("w:&RQ&><r");
      // Undeclared exception!
      try { 
        strBuilder4.insert((-1), false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.endsWith("u");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("D7>Y");
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("I0{L<$B?6[");
      int int0 = Integer.MAX_VALUE;
      // Undeclared exception!
      try { 
        strBuilder0.insert(Integer.MAX_VALUE, "I0{L<$B?6[");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2147483647
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.toString();
      StrBuilder strBuilder1 = strBuilder0.insert(0, ',');
      char[] charArray0 = new char[6];
      charArray0[0] = ',';
      charArray0[1] = ',';
      charArray0[2] = ',';
      charArray0[3] = ',';
      charArray0[4] = ',';
      charArray0[5] = ',';
      int int0 = 0;
      StrBuilder strBuilder2 = strBuilder1.insert(0, charArray0, 0, 0);
      StrBuilder strBuilder3 = strBuilder2.deleteFirst("");
      StrBuilder strBuilder4 = strBuilder1.setCharAt(0, ',');
      int int1 = strBuilder0.lastIndexOf('}');
      String string1 = strBuilder0.leftString((-1));
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      int int2 = strBuilder4.indexOf(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder4.insert(44, charArray0, 0, (-237));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 44
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append('N');
      // Undeclared exception!
      try { 
        strBuilder0.substring(108, (-3763));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.insert(0, 'r');
      StrBuilder strBuilder2 = strBuilder0.replaceFirst((StrMatcher) null, "yO@qO1g|");
      // Undeclared exception!
      try { 
        strBuilder0.insert(2492, 0L);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2492
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.insert(3975, 'x');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3975
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[1];
      charArray0[0] = 'O';
      StrBuilder strBuilder1 = strBuilder0.insert(0, charArray0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("/Xc.CX/lOq)(wlBL");
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrBuilder strBuilder2 = strBuilder0.setCharAt(4, 'R');
      StrBuilder strBuilder3 = new StrBuilder("V5");
      StrBuilder strBuilder4 = strBuilder0.append(strBuilder3, 0, 0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrBuilder strBuilder5 = strBuilder0.append((Object) "/Xc.CX/lOq)(wlBL");
      long long0 = strBuilder_StrBuilderReader0.skip(282L);
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      StrBuilder strBuilder6 = strBuilder0.replaceFirst('4', 'k');
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      int int0 = 57;
      StrBuilder strBuilder0 = new StrBuilder(57);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('=');
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      int int1 = strBuilder1.indexOf(strMatcher0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Collection) linkedList0, "! =#~I&fFo");
      // Undeclared exception!
      try { 
        strBuilder0.charAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("|.d(i");
      // Undeclared exception!
      try { 
        strBuilder0.charAt((-1312));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1312
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.clear();
      String string0 = "";
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("");
      int int0 = strBuilder1.lastIndexOf(strMatcher0);
      int int1 = strBuilder1.hashCode();
      int int2 = strBuilder0.indexOf(strMatcher0, 0);
      int int3 = strBuilder0.indexOf("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip((-1));
      strBuilder_StrBuilderReader0.mark((-1));
      strBuilder_StrBuilderReader0.reset();
      int int4 = strBuilder0.capacity();
      StrBuilder strBuilder2 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      int int5 = (-407);
      StrBuilder strBuilder3 = strBuilder2.trim();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.append((CharSequence) "", (-407), 1036);
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrBuilder strBuilder1 = strBuilder0.append(':');
      int int0 = strBuilder0.capacity();
      StrBuilder strBuilder2 = strBuilder0.trim();
      strBuilder_StrBuilderReader0.close();
      // Undeclared exception!
      try { 
        strBuilder2.replace((-1624), (-1624), "startIndex must be valid");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1624
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = new StringBuffer("ckbr#FmeL-Z l]k3Hh");
      float float0 = 2116.53F;
      StrBuilder strBuilder1 = strBuilder0.append(2116.53F);
      IntStream intStream0 = stringBuffer0.codePoints();
      // Undeclared exception!
      try { 
        strBuilder1.insert(34, (-1942.185796204));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 34
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      int int0 = (-1804);
      StrBuilder strBuilder0 = new StrBuilder((-1804));
      char char0 = '[';
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.toString();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "StrTokenizer[not tokenized yet]");
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, (-1804), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      String string0 = strBuilder0.rightString((-2002));
      // Undeclared exception!
      try { 
        strBuilder0.insert(1484, (double) 1484);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1484
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.ArrayUtils");
      StrBuilder strBuilder1 = strBuilder0.append(1640);
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('O');
      StrMatcher strMatcher0 = StrMatcher.charMatcher('V');
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("g");
      StrBuilder strBuilder2 = strBuilder0.replaceAll("#Rg&^Jeu|P0>>EF}C<", "g");
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher("g");
      int int0 = strBuilder0.indexOf((StrMatcher) strMatcher_CharMatcher0, 4786);
      char[] charArray0 = strBuilder0.toCharArray();
      int int1 = strBuilder2.length();
      StrBuilder strBuilder3 = strBuilder2.append((char[]) null, 4288, 4786);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("wklIdj*H $");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("XbK/E2?y&");
      int int0 = strBuilder0.indexOf((StrMatcher) strMatcher_StringMatcher0, (-698));
      StrBuilder strBuilder1 = strBuilder0.deleteFirst((StrMatcher) strMatcher_StringMatcher0);
      int int1 = strBuilder1.indexOf('\'');
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(4);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(0L);
      int int0 = strBuilder0.indexOf('S');
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteAll("Invalid length: ");
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      int int0 = (-852);
      StrBuilder strBuilder0 = new StrBuilder((-852));
      String string0 = null;
      StrBuilder strBuilder1 = strBuilder0.setNewLineText((String) null);
      Reader reader0 = strBuilder1.asReader();
      StrBuilder strBuilder2 = strBuilder0.append(0);
      String string1 = "";
      StrBuilder strBuilder3 = strBuilder2.append((Object) "");
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      char[] charArray0 = new char[5];
      charArray0[0] = '$';
      charArray0[1] = 'x';
      charArray0[2] = '}';
      charArray0[3] = 'C';
      charArray0[4] = ']';
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher(charArray0);
      char char0 = 'y';
      // Undeclared exception!
      try { 
        strBuilder1.setCharAt((-852), 'y');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -852
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-911);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-911), (float) (-911));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -911
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      String string0 = "7n}*G'8l";
      StrBuilder strBuilder0 = new StrBuilder("7n}*G'8l");
      StrBuilder strBuilder1 = strBuilder0.append(0.0);
      StrBuilder strBuilder2 = strBuilder0.deleteCharAt(4);
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder2.append(charArray0, 4, (-2531));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -2531
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1662));
      char[] charArray0 = new char[1];
      StrBuilder strBuilder1 = strBuilder0.append((Object) null);
      // Undeclared exception!
      try { 
        strBuilder1.setCharAt((-1662), 'h');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1662
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-4403));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      int int1 = strBuilder_StrBuilderReader0.read();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      int int2 = strBuilder0.indexOf(strMatcher0, (-1));
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      char[] charArray0 = new char[0];
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StrBuilder strBuilder2 = strBuilder1.append((String) null, (-4403), 2);
      // Undeclared exception!
      try { 
        strBuilder1.insert((-4403), false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -4403
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1);
      int int0 = 1227;
      Reader reader0 = strBuilder0.asReader();
      // Undeclared exception!
      try { 
        strBuilder0.insert(1227, "4.1");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1227
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(250);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      int int0 = strBuilder0.hashCode();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("");
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2);
      // Undeclared exception!
      try { 
        strBuilder0.insert(114, (-2954.3435F));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 114
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(254);
      String string0 = "f<tuNB [au ";
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("f<tuNB [au ");
      StrBuilder strBuilder2 = strBuilder0.append(0.0);
      String string1 = strBuilder0.getNullText();
      int int0 = (-2948);
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadLeft((-2948), (-2948), 'K');
      StrBuilder strBuilder4 = strBuilder3.deleteAll("user.name");
      // Undeclared exception!
      try { 
        strBuilder1.toCharArray((-2948), (-2948));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2948
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = strBuilder0.getNullText();
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("3O(Yai%UJKk");
      char[] charArray0 = new char[4];
      charArray0[0] = 'u';
      charArray0[1] = 'h';
      charArray0[2] = 'l';
      charArray0[3] = 'P';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 2015, 2015);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 2015
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("<pJqG5=diLhA{}Hu");
      char[] charArray0 = new char[2];
      charArray0[0] = 'b';
      charArray0[1] = 'F';
      StrBuilder strBuilder1 = strBuilder0.append((double) 0);
      StrBuilder strBuilder2 = strBuilder0.append(charArray0, 0, 0);
      StrBuilder strBuilder3 = strBuilder0.insert(0, (long) 0);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.validateRange(0, 0);
      StrBuilder strBuilder1 = strBuilder0.append('H');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      StrBuilder strBuilder2 = strBuilder1.deleteCharAt(0);
      // Undeclared exception!
      try { 
        strBuilder1.replace(strMatcher0, "k3:", 32, 0, (-272));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt((-2705));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2705
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.append(true);
      StrBuilder strBuilder2 = strBuilder1.setLength(0);
      char[] charArray0 = new char[5];
      char char0 = 'x';
      charArray0[0] = 'x';
      charArray0[1] = 'i';
      charArray0[2] = 'Y';
      charArray0[3] = 'G';
      charArray0[4] = 'Z';
      strBuilder2.buffer = charArray0;
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, (-1928), 443);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Integer integer0 = new Integer(0);
      char char0 = '!';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) integer0, 0, '!');
      String string0 = "]e_JepJ</+sR";
      String string1 = "Windows NT";
      int int0 = 5;
      // Undeclared exception!
      try { 
        strBuilder0.insert(5, 5);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 5
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.trim();
      // Undeclared exception!
      try { 
        strBuilder1.insert(31, true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 31
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      int int0 = (-1190);
      StrBuilder strBuilder0 = new StrBuilder((-1190));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      String string0 = "Caught a SecurityException reading the system property '";
      int int1 = (-2005);
      int int2 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.delete(0, (-2005));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-744));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[3];
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      charArray0[0] = 'c';
      charArray0[1] = '(';
      charArray0[2] = '>';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, (-744), 307);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2301));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("JTr+l", (-2301), 2365);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("'");
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      StrBuilder strBuilder2 = strBuilder1.ensureCapacity((-793));
      StrBuilder strBuilder3 = strBuilder2.append("'");
      StrBuilder strBuilder4 = strBuilder2.appendFixedWidthPadRight((Object) strBuilder1, (-793), 'x');
      char char0 = strBuilder1.charAt(0);
      // Undeclared exception!
      try { 
        strBuilder0.insert((int) '\'', (int) '\'');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 39
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid length: ");
      // Undeclared exception!
      try { 
        strBuilder0.insert(643, (Object) "Invalid length: ");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 643
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(0);
      strBuilder_StrBuilderWriter0.write("1.4");
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("FKvF}7(`8G");
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrBuilder strBuilder2 = strBuilder1.setNewLineText("FKvF}7(`8G");
      StrBuilder strBuilder3 = strBuilder2.append(0L);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip((-2111L));
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadLeft((Object) strBuilder2, 0, '!');
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight((Object) null, (-2622), '?');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      StrBuilder strBuilder3 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder3.setCharAt(0, '?');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-782));
      // Undeclared exception!
      try { 
        strBuilder0.substring((-1536), (-1250));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1536
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(114);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[8];
      charArray0[0] = 'w';
      charArray0[1] = '[';
      charArray0[2] = 'L';
      charArray0[3] = 'l';
      charArray0[4] = 'q';
      charArray0[5] = '%';
      charArray0[6] = 'W';
      charArray0[7] = 'S';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 114, 114);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = strBuilder0.getChars((char[]) null);
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder1 = strBuilder0.append(true);
      StrBuilder strBuilder2 = strBuilder1.append(charArray0);
      StringBuffer stringBuffer1 = stringBuffer0.append((String) null);
      StringBuffer stringBuffer2 = stringBuffer0.insert(0, (long) 0);
      StrBuilder strBuilder3 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder4 = strBuilder3.trim();
      StrBuilder strBuilder5 = strBuilder3.setLength(0);
      // Undeclared exception!
      try { 
        strBuilder5.setCharAt(0, '0');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(132);
      int int0 = strBuilder0.indexOf("fn.KFHt", (-2925));
      StrBuilder strBuilder1 = strBuilder0.append(false);
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight(0, 0, '1');
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((StrBuilder) null);
      StrBuilder strBuilder2 = strBuilder0.append(0L);
      StrBuilder strBuilder3 = strBuilder2.setLength(0);
      StrBuilder strBuilder4 = strBuilder2.deleteFirst('c');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder4.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      int int0 = strBuilder3.indexOf(strMatcher0);
      boolean boolean0 = strBuilder0.startsWith("v+wMF_|.+]zuN");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder3.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((char[]) null);
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setNullText("startIndex must be valid");
      int int0 = 1690;
      // Undeclared exception!
      try { 
        strBuilder1.delete(1690, 1690);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.deleteAll(strMatcher0);
      StrBuilder strBuilder3 = strBuilder0.appendNull();
      boolean boolean0 = strBuilder0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.toString();
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("8+y$cDLu,d]&\b");
      StrMatcher.StringMatcher strMatcher_StringMatcher1 = new StrMatcher.StringMatcher("");
      boolean boolean0 = strBuilder0.contains((StrMatcher) strMatcher_StringMatcher0);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('*');
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("l1p? V&oc}*+Rg", "l1p? V&oc}*+Rg");
      StrBuilder strBuilder2 = strBuilder1.setNullText("");
      StrBuilder strBuilder3 = strBuilder2.replaceAll((StrMatcher) null, "");
      StrBuilder strBuilder4 = strBuilder0.deleteFirst("dy}-xI)U'TOj");
      StrBuilder strBuilder5 = new StrBuilder("");
      StrBuilder strBuilder6 = strBuilder4.append(strBuilder5);
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('{');
      int int0 = strBuilder4.indexOf(strMatcher0);
      int int1 = strBuilder0.indexOf(' ', 0);
      StrBuilder strBuilder7 = strBuilder0.appendFixedWidthPadRight((-1), 1096, '>');
      String string0 = strBuilder7.midString(361, 0);
      StrBuilder strBuilder8 = strBuilder4.clear();
      StrBuilder strBuilder9 = strBuilder8.append(2646.8F);
      StrBuilder strBuilder10 = strBuilder0.deleteAll('<');
      int int2 = strBuilder4.lastIndexOf(strMatcher1);
      StrTokenizer strTokenizer0 = strBuilder7.asTokenizer();
      StringBuffer stringBuffer0 = new StringBuffer("");
      // Undeclared exception!
      try { 
        strBuilder8.append(stringBuffer0, 361, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.append((StringBuffer) null, (-278), (-278));
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight((Object) null, (-278), '^');
      char[] charArray0 = new char[2];
      charArray0[0] = '0';
      charArray0[1] = 'j';
      // Undeclared exception!
      try { 
        strBuilder0.insert((-278), charArray0, (-2482), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -278
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(195);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher((char[]) null);
      StrMatcher strMatcher2 = StrMatcher.charMatcher('8');
      int int0 = strBuilder0.indexOf(strMatcher0);
      int int1 = strBuilder0.lastIndexOf("T6&Hx;q?xNTf");
      int int2 = strBuilder0.indexOf(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.setLength(195);
      char[] charArray0 = strBuilder0.toCharArray();
      boolean boolean0 = strBuilder0.contains(strMatcher2);
      char[] charArray1 = new char[3];
      charArray1[0] = '8';
      charArray1[1] = '8';
      charArray1[2] = '8';
      // Undeclared exception!
      try { 
        strBuilder1.insert(0, charArray1, 3019, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: 3019
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      int int0 = (-802);
      StrBuilder strBuilder0 = new StrBuilder((-802));
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      int int1 = 4;
      char char0 = 'x';
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadLeft((-802), 4, 'x');
      // Undeclared exception!
      try { 
        strBuilder3.append(strBuilder0, 4, 4);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((StrBuilder) null);
      StrBuilder strBuilder2 = strBuilder0.append(0L);
      StrBuilder strBuilder3 = strBuilder2.setLength(0);
      StrBuilder strBuilder4 = strBuilder2.deleteFirst('c');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder4.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      int int0 = strBuilder3.indexOf(strMatcher0);
      boolean boolean0 = strBuilder0.startsWith("v+wMF_|.+]zuN");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder3.new StrBuilderWriter();
      StrBuilder strBuilder5 = strBuilder2.insert(0, (float) (-1));
      strBuilder_StrBuilderWriter0.write((char[]) null);
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.startsWith("org.apache.commons.lang.text.StrTokenizer");
      StrBuilder strBuilder1 = strBuilder0.append((-2715.3232F));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      Consumer<Integer> consumer0 = (Consumer<Integer>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      strBuilder_StrBuilderTokenizer0.forEachRemaining(consumer0);
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      char[] charArray0 = new char[7];
      charArray0[0] = '{';
      charArray0[1] = '7';
      charArray0[2] = 'c';
      charArray0[3] = '|';
      charArray0[4] = '5';
      charArray0[5] = '!';
      charArray0[6] = 'a';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder2 = strBuilder0.replaceAll(strMatcher0, (String) null);
      StrBuilder strBuilder3 = strBuilder1.appendNull();
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) '5';
      objectArray0[1] = (Object) strBuilder2;
      objectArray0[2] = (Object) strBuilder0;
      objectArray0[3] = (Object) strBuilder3;
      objectArray0[4] = (Object) strBuilder1;
      objectArray0[5] = (Object) "org.apache.commons.lang.text.StrTokenizer";
      objectArray0[6] = (Object) strBuilder1;
      StrBuilder strBuilder4 = strBuilder2.appendWithSeparators(objectArray0, "Irix");
      StrBuilder strBuilder5 = strBuilder3.deleteAll('n');
      StrBuilder strBuilder6 = strBuilder5.insert(1, false);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      boolean boolean1 = strBuilder_StrBuilderReader0.ready();
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[2];
      charArray0[0] = '^';
      StrBuilder strBuilder1 = strBuilder0.append((Object) "4:ZFeC/`)\"");
      StrBuilder strBuilder2 = strBuilder1.deleteFirst("4:ZFeC/`)\"");
      strBuilder1.validateIndex(0);
      int int0 = (-413);
      StrBuilder strBuilder3 = strBuilder1.appendFixedWidthPadRight((Object) strBuilder0, (-413), '^');
      String string0 = strBuilder3.leftString((-259));
      charArray0[1] = 'N';
      StrBuilder strBuilder4 = strBuilder0.append(charArray0);
      // Undeclared exception!
      try { 
        strBuilder4.validateIndex((-413));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -413
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("_b!;%-PWR=8");
      StrBuilder strBuilder1 = strBuilder0.deleteAll((StrMatcher) null);
      StrTokenizer strTokenizer0 = strBuilder1.asTokenizer();
      StrBuilder strBuilder2 = strBuilder0.reverse();
      StrBuilder strBuilder3 = strBuilder0.deleteAll("_b!;%-PWR=8");
      int int0 = strBuilder2.size();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      char[] charArray0 = new char[3];
      charArray0[0] = '2';
      charArray0[1] = '9';
      charArray0[2] = 'N';
      int int1 = strBuilder_StrBuilderReader0.read(charArray0, 0, 0);
      strBuilder_StrBuilderReader0.close();
      StrBuilder strBuilder4 = strBuilder2.appendNewLine();
      String string0 = strBuilder4.toString();
      char[] charArray1 = strBuilder2.toCharArray();
      int int2 = strBuilder0.lastIndexOf('6');
  }
}
