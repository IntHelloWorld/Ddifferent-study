/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 31 14:40:11 GMT 2020
 */

package org.apache.commons.lang.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.Writer;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.NoSuchElementException;
import org.apache.commons.lang.text.StrBuilder;
import org.apache.commons.lang.text.StrMatcher;
import org.apache.commons.lang.text.StrTokenizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StrBuilder_ESTest extends StrBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("{L^?-!");
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_StringMatcher0, (-2357));
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read((char[]) null, (-2357), 1791);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('a');
      char[] charArray0 = strBuilder0.toCharArray(0, 0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(charArray0);
      strBuilder_StrBuilderWriter0.flush();
      char[] charArray1 = new char[2];
      charArray1[0] = 'a';
      charArray1[1] = 'a';
      StrBuilder strBuilder2 = strBuilder0.insert(0, charArray1);
      strBuilder2.buffer = charArray0;
      StrBuilder strBuilder3 = strBuilder2.setLength(0);
      StrBuilder strBuilder4 = strBuilder2.append(0);
      StrBuilder strBuilder5 = strBuilder0.deleteAll('H');
      StrBuilder strBuilder6 = strBuilder3.deleteCharAt(0);
      StrBuilder strBuilder7 = strBuilder6.clear();
      StrBuilder strBuilder8 = strBuilder3.append(">s OMuTI!^bV?=J9");
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      char[] charArray2 = new char[2];
      charArray2[0] = '/';
      charArray2[1] = '-';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray2);
      int int0 = strMatcher0.isMatch(charArray1, 0, 0, 0);
      StrBuilder strBuilder9 = strBuilder8.deleteFirst(strMatcher0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder7.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      StrBuilder strBuilder10 = strBuilder4.append((long) 0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("MG4?_%#C!>q,+mQ?V");
      StrBuilder strBuilder1 = strBuilder0.insert(0, 0.0);
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) strBuilder1;
      objectArray0[1] = (Object) "MG4?_%#C!>q,+mQ?V";
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.next();
      objectArray0[2] = (Object) "0.0MG4?_%#C!>q,+mQ?V";
      objectArray0[3] = (Object) strBuilder0;
      objectArray0[4] = (Object) strBuilder1;
      objectArray0[5] = (Object) "MG4?_%#C!>q,+mQ?V";
      Object object1 = strBuilder_StrBuilderTokenizer0.previous();
      objectArray0[6] = (Object) "0.0MG4?_%#C!>q,+mQ?V";
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators(objectArray0, "org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrBuilder strBuilder3 = strBuilder2.append(objectArray0[0]);
      int int0 = strBuilder0.lastIndexOf('e', 1);
      strBuilder3.validateIndex(32);
      Writer writer0 = strBuilder0.asWriter();
      boolean boolean0 = strBuilder3.startsWith("0.0MG4?_%#C!>q,+mQ?V");
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("MG4?_%#C!>q,+mQ?V");
      StrBuilder strBuilder1 = strBuilder0.insert(0, 0.0);
      Object[] objectArray0 = new Object[7];
      StrBuilder strBuilder2 = strBuilder1.deleteAll("MG4?_%#C!>q,+mQ?V");
      objectArray0[0] = (Object) strBuilder1;
      objectArray0[1] = (Object) "MG4?_%#C!>q,+mQ?V";
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.next();
      objectArray0[2] = (Object) "0.0";
      objectArray0[3] = (Object) strBuilder0;
      objectArray0[4] = (Object) strBuilder1;
      objectArray0[5] = (Object) "MG4?_%#C!>q,+mQ?V";
      Object object1 = strBuilder_StrBuilderTokenizer0.previous();
      objectArray0[6] = (Object) "0.0";
      StrBuilder strBuilder3 = strBuilder1.appendWithSeparators(objectArray0, "org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrBuilder strBuilder4 = strBuilder3.append(objectArray0[0]);
      int int0 = strBuilder0.lastIndexOf('e', 1);
      Writer writer0 = strBuilder0.asWriter();
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("-w|saF2U-Y k51");
      StrBuilder strBuilder1 = strBuilder0.deleteAll("\"7i__$X0");
      StrBuilder strBuilder2 = strBuilder0.setNullText("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("-_?]+3~}^$K");
      char[] charArray0 = new char[3];
      charArray0[0] = 'F';
      StrBuilder strBuilder3 = strBuilder2.append(charArray0);
      charArray0[1] = 'U';
      String[] stringArray0 = strBuilder_StrBuilderTokenizer0.getTokenArray();
      charArray0[2] = 'A';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      StrMatcher strMatcher2 = StrMatcher.stringMatcher("I9");
      StrBuilder strBuilder4 = strBuilder0.replaceFirst((StrMatcher) strMatcher_CharSetMatcher0, "");
      int int0 = 32;
      // Undeclared exception!
      try { 
        strBuilder1.replace(strMatcher0, "-w|saF2U-Y k51", (-1938), (-1938), 32);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1938
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("s`(b");
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('5');
      StrBuilder strBuilder1 = strBuilder0.deleteAll((StrMatcher) strMatcher_CharMatcher0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("Q7_z5q");
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoredMatcher(strMatcher_CharMatcher0);
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft(2887, 2887, '5');
      StrTokenizer strTokenizer1 = strBuilder_StrBuilderTokenizer0.setDelimiterString("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      StrBuilder strBuilder3 = strBuilder1.appendWithSeparators((Iterator) strTokenizer1, "");
      Writer writer0 = strBuilder0.asWriter();
      String string0 = strBuilder0.leftString((-2351));
      boolean boolean0 = strBuilder0.isEmpty();
      StrBuilder strBuilder4 = strBuilder0.setNullText("");
      StrBuilder strBuilder5 = strBuilder2.clear();
      StrBuilder strBuilder6 = strBuilder5.replaceFirst("", "");
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("'; the SystemUtils property value will default to null.");
      StrMatcher strMatcher0 = StrMatcher.charMatcher('q');
      int int0 = strBuilder0.indexOf(strMatcher0, (-2304));
      strBuilder0.size = 378;
      // Undeclared exception!
      try { 
        strBuilder0.append((Object) "'; the SystemUtils property value will default to null.");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("='5<CP*r-thn}d");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(32, 32, 'v');
      int int0 = strBuilder0.length();
      StrBuilder strBuilder2 = strBuilder0.reverse();
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators((Collection) null, "='5<CP*r-thn}d");
      String string0 = strBuilder0.toString();
      char[] charArray0 = new char[1];
      charArray0[0] = 'v';
      StrBuilder strBuilder4 = strBuilder3.append(charArray0);
      StrBuilder strBuilder5 = strBuilder4.append(0.0F);
      StrBuilder strBuilder6 = strBuilder5.replaceAll("", "java.version");
      char[] charArray1 = new char[0];
      StrBuilder strBuilder7 = strBuilder3.append(charArray1);
      String string1 = strBuilder7.midString(4, 46);
      int int1 = strBuilder1.lastIndexOf("='5<CP*r-thn}d", 46);
      StrBuilder strBuilder8 = strBuilder4.append((double) 32);
      StrBuilder strBuilder9 = strBuilder3.appendFixedWidthPadRight((-1354), 32, 'v');
      String string2 = strBuilder3.getNewLineText();
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      String string0 = "2\">'y@";
      StrBuilder strBuilder0 = new StrBuilder("2\">'y@");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("f)5 ibL@#^Sne]TJ'^5");
      int int0 = StrBuilder.CAPACITY;
      int int1 = 0;
      StrBuilder strBuilder1 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder1.deleteCharAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("j?");
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrMatcher strMatcher0 = StrMatcher.charMatcher('E');
      StrBuilder strBuilder1 = strBuilder0.append((long) (-2891));
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("j?");
      boolean boolean0 = strBuilder0.contains((StrMatcher) strMatcher_TrimMatcher0);
      StrBuilder strBuilder2 = strBuilder0.ensureCapacity((-2891));
      int int0 = strBuilder2.lastIndexOf("j?");
      StrTokenizer strTokenizer0 = strBuilder2.asTokenizer();
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators((Object[]) null, "j?");
      StrBuilder strBuilder4 = strBuilder0.setLength(220);
      StrBuilder strBuilder5 = strBuilder0.appendNewLine();
      int int1 = strBuilder5.lastIndexOf("j?", 0);
      StrBuilder strBuilder6 = strBuilder1.replaceFirst("T84g|[CLqC", (String) null);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      Writer writer0 = strBuilder1.asWriter();
      StrMatcher strMatcher0 = StrMatcher.charMatcher('`');
      int int0 = strBuilder1.indexOf(strMatcher0);
      strBuilder0.buffer = null;
      StrBuilder strBuilder2 = strBuilder0.deleteAll('B');
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadLeft((-1), (-1639), 'B');
      StrBuilder strBuilder4 = strBuilder0.append((char[]) null);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      // Undeclared exception!
      try { 
        strBuilder0.equalsIgnoreCase((StrBuilder) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(111);
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("os.name");
      int int0 = strBuilder0.indexOf(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.appendNull();
      StrBuilder strBuilder3 = strBuilder0.setLength(2336);
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("os.name");
      int int1 = strBuilder3.lastIndexOf((StrMatcher) strMatcher_NoMatcher0);
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder strBuilder4 = strBuilder0.append(strBuilder3, 0, 0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) "o^KtDa-", 1523, 'i');
      Writer writer0 = strBuilder0.asWriter();
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('i');
      StrBuilder strBuilder2 = strBuilder0.replaceFirst((StrMatcher) strMatcher_CharMatcher0, "o^KtDa-");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[8];
      charArray0[0] = '\\';
      charArray0[1] = 'i';
      charArray0[2] = 'i';
      charArray0[3] = 'v';
      charArray0[4] = 'i';
      charArray0[5] = 'i';
      charArray0[6] = 'i';
      charArray0[7] = 'i';
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.nextToken();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer1 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder strBuilder2 = strBuilder0.insert(0, object0);
      StrBuilder strBuilder3 = strBuilder0.deleteAll(",>iSx3c.Q3z5H");
      Object[] objectArray0 = new Object[10];
      StrBuilder strBuilder4 = strBuilder1.appendWithSeparators(objectArray0, "?=+sRDE");
      StrBuilder strBuilder5 = strBuilder0.replace(0, 4, ",>iSx3c.Q3z5H");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder6 = strBuilder1.appendWithSeparators((Collection) linkedList0, "[nu:,sSRgIi{_IB");
      StrBuilder strBuilder7 = strBuilder0.setCharAt(0, 'z');
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2470);
      StrBuilder strBuilder1 = strBuilder0.append('S');
      Writer writer0 = strBuilder0.asWriter();
      char[] charArray0 = new char[8];
      charArray0[0] = 'S';
      charArray0[1] = 'S';
      charArray0[2] = 'r';
      charArray0[3] = 'S';
      charArray0[4] = 'S';
      charArray0[5] = 'S';
      charArray0[6] = 'S';
      charArray0[7] = 'S';
      StrBuilder strBuilder2 = strBuilder1.append(charArray0);
      int int0 = strBuilder0.indexOf('_');
      int int1 = strBuilder2.length();
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      String string0 = "3<bui";
      StrBuilder strBuilder0 = new StrBuilder("3<bui");
      StrBuilder strBuilder1 = strBuilder0.append(1L);
      char[] charArray0 = new char[5];
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "3<bui");
      StrBuilder strBuilder2 = strBuilder1.append(stringBuffer0);
      charArray0[0] = '*';
      charArray0[1] = 'q';
      charArray0[2] = 'L';
      charArray0[3] = '.';
      charArray0[4] = ':';
      // Undeclared exception!
      try { 
        strBuilder1.getChars((-1848), (-1848), charArray0, (-1848));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1848
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = 39;
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      char[] charArray0 = new char[3];
      charArray0[0] = '=';
      charArray0[1] = '5';
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(3086);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3086
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher1 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      boolean boolean0 = strBuilder0.contains(strMatcher1);
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(64);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 64
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.append((-1.0F));
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder2 = strBuilder0.append("");
      StrTokenizer strTokenizer0 = strBuilder1.asTokenizer();
      String string0 = strBuilder2.rightString(0);
      StrBuilder strBuilder3 = strBuilder2.insert(0, '6');
      char char0 = 'P';
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      String string1 = strBuilder0.midString(0, 0);
      // Undeclared exception!
      try { 
        strBuilder1.delete(3084, 4394);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = new StrBuilder(0);
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight((Object) strBuilder1, 0, 'u');
      Reader reader0 = strBuilder2.asReader();
      String string0 = strBuilder0.substring(0);
      StrBuilder strBuilder3 = strBuilder2.replaceAll("S8W", "");
      StrBuilder strBuilder4 = strBuilder2.append(strBuilder3);
      StrBuilder strBuilder5 = strBuilder4.append('u');
      StrBuilder strBuilder6 = strBuilder5.appendNull();
      StrBuilder strBuilder7 = strBuilder6.appendPadding(0, 's');
      StrBuilder strBuilder8 = strBuilder3.setCharAt(0, 'u');
      StrBuilder strBuilder9 = strBuilder2.appendPadding(0, '/');
      String string1 = strBuilder1.getNullText();
      StrBuilder strBuilder10 = strBuilder3.appendPadding((-833), 'n');
      String string2 = strBuilder2.getNewLineText();
      Reader reader1 = strBuilder9.asReader();
      boolean boolean0 = strBuilder0.startsWith("G]! 4DQM5i&hm^>]EVD");
      StrBuilder strBuilder11 = strBuilder4.appendFixedWidthPadRight(0, (-833), '0');
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      int int0 = (-1478);
      StrBuilder strBuilder0 = new StrBuilder((-1478));
      // Undeclared exception!
      try { 
        strBuilder0.charAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("");
      String string0 = "c~?Av.'SZSYoo'g\\";
      String string1 = null;
      StrBuilder strBuilder2 = strBuilder1.replaceAll("c~?Av.'SZSYoo'g", (String) null);
      StrBuilder strBuilder3 = strBuilder0.appendNewLine();
      char[] charArray0 = new char[0];
      StrBuilder strBuilder4 = strBuilder0.append(charArray0);
      StrBuilder strBuilder5 = strBuilder4.appendPadding(1533, 'D');
      // Undeclared exception!
      try { 
        strBuilder1.insert((-1045), true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1045
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Writer writer0 = strBuilder0.asWriter();
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) strBuilder0;
      objectArray0[3] = (Object) strBuilder0;
      objectArray0[4] = (Object) writer0;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "q(u!$UsD_uy41");
      char[] charArray0 = new char[6];
      charArray0[0] = 'D';
      charArray0[1] = 'V';
      charArray0[2] = 'u';
      charArray0[3] = '*';
      charArray0[4] = 's';
      charArray0[5] = 'k';
      char[] charArray1 = strBuilder1.getChars(charArray0);
      int int0 = strBuilder0.lastIndexOf('u');
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[6];
      charArray0[0] = 't';
      charArray0[1] = 'X';
      charArray0[2] = 'J';
      StrBuilder strBuilder1 = strBuilder0.append(0.0);
      charArray0[3] = ']';
      charArray0[4] = 'L';
      charArray0[5] = 'Z';
      StrBuilder strBuilder2 = strBuilder0.append(charArray0);
      StrBuilder strBuilder3 = strBuilder2.append("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", 0, 0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("user.dir");
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 809, 809);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 809
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      String string0 = "2\">'y@";
      StrBuilder strBuilder0 = new StrBuilder("2\">'y@");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      String string1 = "f)5 ibL@#^Sne]TJ'^5";
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("f)5 ibL@#^Sne]TJ'^5");
      int int0 = strBuilder0.indexOf(strMatcher0);
      char char0 = '4';
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt((-1), '4');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(32);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder strBuilder1 = strBuilder0.deleteAll("HP-UX");
      StrTokenizer strTokenizer0 = strBuilder1.asTokenizer();
      StrBuilder strBuilder2 = strBuilder1.minimizeCapacity();
      StrBuilder strBuilder3 = strBuilder2.append((Object) strTokenizer0);
      // Undeclared exception!
      try { 
        strBuilder1.setCharAt((-2443), 'j');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2443
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.replaceAll((String) null, "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      StrBuilder strBuilder2 = strBuilder1.insert(0, (Object) null);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(0L);
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      String string0 = strBuilder0.leftString(0);
      String string1 = "";
      // Undeclared exception!
      try { 
        strBuilder1.toCharArray(0, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.indexOf('_');
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      String string0 = strBuilder0.midString((-1945), (-549));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(9);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.insert(0, 0L);
      StrBuilder strBuilder2 = strBuilder1.insert(0, true);
      StrBuilder strBuilder3 = strBuilder0.deleteFirst('3');
      StrBuilder strBuilder4 = strBuilder3.append(1938.0);
      StrBuilder strBuilder5 = strBuilder0.append("5i8)S`sKUdO{M| Q");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(0);
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrBuilder strBuilder6 = strBuilder1.replaceFirst(strMatcher0, "5i8)S`sKUdO{M| Q");
      char[] charArray0 = new char[6];
      charArray0[0] = '3';
      charArray0[1] = '3';
      charArray0[2] = '3';
      charArray0[3] = '3';
      charArray0[4] = '3';
      charArray0[5] = 'X';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 0, (-2699));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("78)@x4/h=\"^rNK'W+");
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "78)@x4/h=\"^rNK'W+");
      int int0 = strBuilder0.hashCode();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("78)@x4/h=\"^rNK'W+");
      StrBuilder strBuilder2 = strBuilder0.deleteAll(strMatcher0);
      int int1 = strBuilder0.indexOf('2', 0);
      int int2 = strBuilder0.indexOf(strMatcher0, (-442));
      int int3 = strBuilder1.indexOf(strMatcher0);
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadRight((Object) strBuilder0, 0, '+');
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = null;
      boolean boolean0 = strBuilder0.endsWith((String) null);
      // Undeclared exception!
      try { 
        strBuilder0.insert(5, (long) 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 5
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1748);
      StrBuilder strBuilder1 = strBuilder0.append('Z');
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft(0, 0, '0');
      // Undeclared exception!
      try { 
        strBuilder0.append("", 0, 459);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.insert(0, 'p');
      char[] charArray0 = new char[0];
      strBuilder1.buffer = charArray0;
      // Undeclared exception!
      try { 
        strBuilder1.insert(0, (-1.0F));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("}iq$");
      StrBuilder strBuilder1 = strBuilder0.trim();
      char[] charArray0 = new char[6];
      char char0 = 'W';
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance(charArray0);
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "}iq$");
      StrBuilder strBuilder3 = strBuilder2.deleteAll("[_bk{%");
      charArray0[0] = 'W';
      charArray0[1] = 'w';
      charArray0[2] = '-';
      charArray0[3] = 'v';
      charArray0[4] = 'V';
      charArray0[5] = 'D';
      // Undeclared exception!
      try { 
        strBuilder1.insert(0, charArray0, (-598), 5);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: -598
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) "o^KtDa-", 1523, 'i');
      int int0 = strBuilder0.validateRange(1523, 3224);
      Writer writer0 = strBuilder0.asWriter();
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrBuilder strBuilder2 = strBuilder0.replaceFirst(strMatcher0, "o^KtDa-");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[8];
      charArray0[0] = '\\';
      charArray0[1] = 'i';
      charArray0[2] = 'i';
      charArray0[3] = 'v';
      charArray0[4] = 'i';
      charArray0[5] = 'i';
      charArray0[6] = 'i';
      charArray0[7] = 'i';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 1523, 1523);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      int int0 = 0;
      StrBuilder strBuilder2 = strBuilder1.ensureCapacity(0);
      char char0 = ':';
      // Undeclared exception!
      try { 
        strBuilder0.insert((-3567), ':');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3567
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadLeft((-1871), (-1871), '$');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setQuoteMatcher(strMatcher_NoMatcher0);
      String string0 = "jJ-m~";
      StrBuilder strBuilder4 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "jJ-m~");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      // Undeclared exception!
      try { 
        strBuilder2.validateIndex((-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      String string0 = strBuilder0.substring(0);
      // Undeclared exception!
      try { 
        strBuilder0.charAt((-743));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -743
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0, 1363);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      String string0 = "#XNH";
      StrBuilder strBuilder0 = new StrBuilder("#XNH");
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) "#XNH";
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "#XNH");
      int int0 = (-2325);
      // Undeclared exception!
      try { 
        strBuilder1.insert((-2325), (double) (-2325));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2325
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      String string0 = null;
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      char char0 = 'w';
      StrBuilder strBuilder1 = strBuilder0.appendPadding((-834), 'w');
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = null;
      try {
        strMatcher_StringMatcher0 = new StrMatcher.StringMatcher((String) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrMatcher$StringMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setNullText("0");
      StrBuilder strBuilder2 = strBuilder0.ensureCapacity(117);
      // Undeclared exception!
      try { 
        strBuilder2.insert(292, (Object) strBuilder0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 292
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.deleteAll("");
      char[] charArray0 = new char[1];
      StrBuilder strBuilder2 = strBuilder0.replaceFirst("CLK_LEsWd#n;", "CLK_LEsWd#n;");
      StrBuilder strBuilder3 = strBuilder2.append(0);
      charArray0[0] = 'z';
      StrBuilder strBuilder4 = strBuilder0.append(charArray0);
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("CLK_LEsWd#n;");
      StrBuilder strBuilder5 = strBuilder3.replaceAll((StrMatcher) strMatcher_CharSetMatcher0, "iLLg9{7zR=2v]%ccux");
      Writer writer0 = strBuilder1.asWriter();
      StrBuilder strBuilder6 = strBuilder4.insert(0, (float) 0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.appendPadding(0, '*');
      StrBuilder strBuilder2 = strBuilder1.appendNewLine();
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadRight(0, 0, 'X');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder3.new StrBuilderTokenizer();
      char[] charArray0 = new char[2];
      charArray0[0] = '*';
      charArray0[1] = 'X';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 0, 0);
      char[] charArray1 = new char[2];
      charArray1[0] = '*';
      charArray1[1] = 'X';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray1);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray1);
      StrBuilder strBuilder4 = strBuilder0.replaceAll((StrMatcher) strMatcher_CharSetMatcher0, ".?|y$Gu|");
      boolean boolean0 = strBuilder0.equals(strBuilder3);
      // Undeclared exception!
      try { 
        strBuilder4.append(strBuilder0, 9, (-62));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      int int0 = 451;
      StrBuilder strBuilder0 = new StrBuilder(451);
      char char0 = 'W';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(826, (-2239), 'W');
      StrBuilder strBuilder2 = strBuilder1.deleteFirst('W');
      StrBuilder strBuilder3 = strBuilder1.appendFixedWidthPadLeft(97, 0, 'W');
      String string0 = "";
      char[] charArray0 = new char[0];
      StrBuilder strBuilder4 = strBuilder0.append(charArray0);
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('W');
      StrBuilder strBuilder5 = strBuilder4.deleteAll((StrMatcher) strMatcher_CharMatcher0);
      boolean boolean0 = strBuilder0.contains("");
      // Undeclared exception!
      try { 
        strBuilder0.substring(1014);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-615));
      char[] charArray0 = new char[8];
      charArray0[0] = '3';
      charArray0[1] = 'A';
      charArray0[2] = 'Q';
      charArray0[3] = '8';
      charArray0[4] = '4';
      charArray0[5] = 'G';
      charArray0[6] = '?';
      charArray0[7] = '9';
      // Undeclared exception!
      try { 
        strBuilder0.getChars((-3574), (-3574), charArray0, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3574
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("KyJ");
      StrBuilder strBuilder1 = strBuilder0.append(true);
      StrBuilder strBuilder2 = new StrBuilder("KyJ");
      boolean boolean0 = strBuilder2.contains(">&&O~");
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = 'Q';
      int int0 = strBuilder0.lastIndexOf('Q', 31);
      StringBuffer stringBuffer0 = new StringBuffer(4);
      StringBuffer stringBuffer1 = new StringBuffer(stringBuffer0);
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer1, 1248, 2207);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = "L:|W`hZgg";
      StrBuilder strBuilder1 = strBuilder0.append("L:|W`hZgg", 0, 0);
      String string1 = "java.specification.name";
      StrBuilder strBuilder2 = strBuilder0.replace(0, 0, "java.specification.name");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      int int0 = 5;
      strBuilder_StrBuilderWriter0.write(5);
      StrBuilder strBuilder3 = strBuilder1.append(strBuilder0);
      // Undeclared exception!
      try { 
        strBuilder3.insert(2940, (char[]) null, 2, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2940
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.setLength(0);
      String string0 = strBuilder0.toString();
      StrBuilder strBuilder2 = new StrBuilder(0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      char[] charArray0 = new char[8];
      charArray0[0] = 'i';
      charArray0[1] = 'S';
      charArray0[2] = '5';
      charArray0[3] = 'z';
      charArray0[4] = ',';
      charArray0[5] = 'u';
      charArray0[6] = 's';
      charArray0[7] = 't';
      strBuilder_StrBuilderWriter0.write(charArray0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(108);
      StrBuilder strBuilder1 = strBuilder0.append((Object) "j%1um2M2}pSH*@Z");
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((Object) "j%1um2M2}pSH*@Z", 1201, '/');
      StrBuilder strBuilder3 = strBuilder2.insert(1201, (long) 108);
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      int int0 = strBuilder3.indexOf((StrMatcher) strMatcher_NoMatcher0);
      int int1 = strBuilder0.size();
      char char0 = strBuilder2.charAt(108);
      boolean boolean0 = strBuilder1.endsWith("j%1um2M2}pSH*@Z");
      char[] charArray0 = new char[8];
      charArray0[0] = '/';
      charArray0[1] = '/';
      charArray0[2] = '/';
      charArray0[3] = '/';
      charArray0[4] = '/';
      charArray0[5] = '/';
      charArray0[6] = '/';
      charArray0[7] = '/';
      char[] charArray1 = strBuilder3.getChars(charArray0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(114);
      int int0 = strBuilder0.indexOf("Invalid length: ", 114);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1542);
      StrBuilder strBuilder1 = strBuilder0.append((long) 1542);
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight((Object) strBuilder0, 1542, '`');
      StrBuilder strBuilder3 = strBuilder2.insert(1542, '`');
      String string0 = strBuilder0.toString();
      StrBuilder strBuilder4 = strBuilder1.setCharAt(1066, '5');
      StrBuilder strBuilder5 = strBuilder0.ensureCapacity(0);
      StrBuilder strBuilder6 = strBuilder1.minimizeCapacity();
      StrBuilder strBuilder7 = strBuilder6.trim();
      StrBuilder strBuilder8 = strBuilder5.appendFixedWidthPadRight(2944, 1542, 'C');
      Reader reader0 = strBuilder4.asReader();
      char[] charArray0 = new char[9];
      charArray0[0] = '`';
      charArray0[1] = 'C';
      charArray0[2] = '5';
      charArray0[3] = '`';
      charArray0[4] = '`';
      charArray0[5] = '`';
      charArray0[6] = 'G';
      charArray0[7] = ',';
      charArray0[8] = '`';
      StrBuilder strBuilder9 = strBuilder2.insert(1066, charArray0);
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      int int0 = strBuilder9.lastIndexOf(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder0.delete(1542, (-370));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("ZhS;78 E'");
      StrBuilder strBuilder1 = strBuilder0.trim();
      String string0 = strBuilder0.substring(2);
      StrBuilder strBuilder2 = strBuilder0.replaceFirst("ZhS;78 E'", "S;78 E'");
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadLeft((-790), (-265), 'M');
      String string1 = strBuilder2.leftString(1986);
      String string2 = strBuilder0.midString(57, 2);
      boolean boolean0 = strBuilder3.contains('M');
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      int int0 = 117;
      StrBuilder strBuilder0 = new StrBuilder(117);
      char char0 = '%';
      StrBuilder strBuilder1 = strBuilder0.insert(0, '%');
      char char1 = 'N';
      StrBuilder strBuilder2 = strBuilder0.replaceAll('N', 'N');
      StrBuilder strBuilder3 = strBuilder1.append((Object) strBuilder2);
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrBuilder strBuilder4 = strBuilder1.deleteFirst(strMatcher0);
      StrBuilder strBuilder5 = strBuilder4.appendPadding(117, '%');
      char[] charArray0 = new char[8];
      charArray0[0] = '%';
      charArray0[1] = 'N';
      charArray0[2] = '/';
      charArray0[3] = 'N';
      charArray0[4] = 'N';
      charArray0[5] = '%';
      charArray0[6] = 'N';
      charArray0[7] = 'N';
      // Undeclared exception!
      try { 
        strBuilder4.append(charArray0, 117, 117);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 117
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(117);
      StrBuilder strBuilder1 = strBuilder0.replaceAll('N', 'N');
      StrBuilder strBuilder2 = strBuilder0.append((Object) strBuilder1);
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrBuilder strBuilder3 = strBuilder0.deleteFirst(strMatcher0);
      StrBuilder strBuilder4 = strBuilder3.appendPadding(117, '%');
      char[] charArray0 = new char[8];
      charArray0[0] = '%';
      charArray0[1] = 'N';
      charArray0[2] = '/';
      charArray0[3] = 'N';
      charArray0[4] = 'N';
      charArray0[5] = '%';
      charArray0[7] = 'N';
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('a');
      char[] charArray0 = strBuilder0.toCharArray(0, 0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(charArray0);
      strBuilder_StrBuilderWriter0.flush();
      char[] charArray1 = new char[2];
      charArray1[0] = 'a';
      charArray1[1] = 'a';
      StrBuilder strBuilder2 = strBuilder0.insert(0, charArray1);
      StrBuilder strBuilder3 = strBuilder2.setLength(0);
      StrBuilder strBuilder4 = strBuilder2.append(0);
      StrBuilder strBuilder5 = strBuilder0.deleteAll('H');
      StrBuilder strBuilder6 = strBuilder3.deleteCharAt(0);
      StrBuilder strBuilder7 = strBuilder6.clear();
      StrBuilder strBuilder8 = strBuilder3.append(">s OMuTI!^bV?=J9");
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      char[] charArray2 = new char[2];
      charArray2[0] = '/';
      charArray2[1] = '-';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray2);
      int int0 = strMatcher0.isMatch(charArray1, 0, 0, 0);
      StrBuilder strBuilder9 = strBuilder8.deleteFirst(strMatcher0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder7.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.clear();
      LinkedList<StrBuilder> linkedList0 = new LinkedList<StrBuilder>();
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Collection) linkedList0, "");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) "");
      Writer writer1 = strBuilder_StrBuilderWriter0.append('\'');
      strBuilder_StrBuilderWriter0.write((char[]) null);
      int int0 = strBuilder0.indexOf('W', 0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder(4);
      StrBuilder strBuilder2 = strBuilder1.deleteFirst('u');
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder1);
      boolean boolean0 = strBuilder1.isEmpty();
      String string0 = strBuilder2.substring(0, 4);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("w9:o[6=XRHTi|");
      int int0 = strBuilder0.lastIndexOf((String) null, (-1844));
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(2);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      List list0 = strBuilder_StrBuilderTokenizer0.getTokenList();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      char char0 = 'I';
      // Undeclared exception!
      try { 
        strBuilder1.appendFixedWidthPadRight(object0, 1, 'I');
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-768));
      int int0 = strBuilder0.lastIndexOf((String) null);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = '1';
      int int0 = (-1);
      StrBuilder strBuilder1 = new StrBuilder((-1));
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      StrMatcher strMatcher0 = null;
      StrBuilder strBuilder3 = strBuilder1.replaceFirst((StrMatcher) null, "[H<.]r");
      // Undeclared exception!
      try { 
        strBuilder2.insert(101, 1L);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 101
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(57);
      char[] charArray0 = new char[7];
      charArray0[0] = '{';
      charArray0[1] = '(';
      charArray0[2] = 'y';
      charArray0[3] = 'g';
      charArray0[4] = 'V';
      charArray0[5] = '.';
      charArray0[6] = '+';
      char[] charArray1 = strBuilder0.getChars(charArray0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-477));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      int int0 = strBuilder0.indexOf("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      char[] charArray0 = new char[3];
      charArray0[0] = 'c';
      charArray0[1] = 'y';
      charArray0[2] = 'T';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      // Undeclared exception!
      try { 
        strBuilder0.replace(strMatcher0, "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer", (-4670), (-477), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -4670
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2721);
      // Undeclared exception!
      try { 
        strBuilder0.insert(3550, 'n');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3550
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("startIndex must be valid");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char char0 = '8';
      StrMatcher strMatcher0 = StrMatcher.charMatcher('8');
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("N2Ua52");
      int int0 = strBuilder0.indexOf(strMatcher0, 0);
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoreEmptyTokens(true);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "u|Q:X$uchb1xH");
      // Undeclared exception!
      try { 
        strBuilder0.append("G_VEQfw%G=T]}3e|", 39, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-920));
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('X');
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      int int1 = strBuilder1.capacity();
      boolean boolean0 = strBuilder1.startsWith("user.name");
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft((Object) "user.name", 32, 'l');
      StrBuilder strBuilder3 = new StrBuilder("@B:{I(h&/>pK");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder3.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((-920));
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-768));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder strBuilder1 = strBuilder0.append(object0);
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      StrBuilder strBuilder2 = strBuilder1.deleteFirst(strMatcher0);
      StrBuilder strBuilder3 = strBuilder0.deleteFirst('1');
      Reader reader0 = strBuilder3.asReader();
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Mac OS X");
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "Mac OS X");
      int int0 = 5;
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0, 5, 0);
      StrBuilder strBuilder2 = strBuilder0.clear();
      StrBuilder strBuilder3 = strBuilder0.replaceAll('D', '.');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      String string0 = "C}%Rz%{2s,z\\G@n{x";
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterChar('[');
      StrTokenizer strTokenizer1 = StrTokenizer.getCSVInstance("C}%Rz%{2s,zG@n{x");
      String string1 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder strBuilder4 = strBuilder0.append((Object) stringBuffer0);
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrMatcher strMatcher0 = StrMatcher.charMatcher('D');
      String string2 = " ";
      StrBuilder strBuilder5 = strBuilder1.replaceFirst((StrMatcher) strMatcher_NoMatcher0, " ");
      StrBuilder strBuilder6 = strBuilder5.setLength(32);
      StrBuilder strBuilder7 = strBuilder5.minimizeCapacity();
      StrBuilder strBuilder8 = strBuilder7.append((StrBuilder) null);
      // Undeclared exception!
      try { 
        strBuilder7.appendFixedWidthPadRight((-3974), 5, 'o');
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      String string0 = "1.5";
      StrBuilder strBuilder0 = new StrBuilder("1.5");
      StringBuffer stringBuffer0 = new StringBuffer();
      int int0 = (-3199);
      int int1 = 202;
      StringBuffer stringBuffer1 = stringBuffer0.append(true);
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, (-3199), 202);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[1];
      charArray0[0] = '8';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Collection) null, ")=7x&w");
      String string0 = strBuilder0.midString(4, 2);
      int int0 = strBuilder0.validateRange(0, 0);
      StrBuilder strBuilder3 = strBuilder0.deleteFirst('(');
      strBuilder3.size = 0;
      String string1 = strBuilder0.getNullText();
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      boolean boolean0 = strBuilder0.equals((Object) "");
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrBuilder strBuilder2 = strBuilder0.append('#');
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid startIndex: ");
      int int0 = strBuilder0.capacity();
      StrBuilder strBuilder1 = new StrBuilder();
      boolean boolean0 = strBuilder0.equals(strBuilder1);
      String string0 = strBuilder0.midString((-1077), 1138);
      StrBuilder strBuilder2 = strBuilder0.append((float) 52);
      StrBuilder strBuilder3 = new StrBuilder(52);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder3.new StrBuilderReader();
      boolean boolean1 = strBuilder_StrBuilderReader0.markSupported();
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      String string0 = strBuilder0.leftString(0);
      int int0 = strBuilder0.size();
      String string1 = strBuilder0.leftString(0);
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      char[] charArray0 = new char[3];
      charArray0[0] = 'X';
      charArray0[1] = '?';
      charArray0[2] = 'v';
      // Undeclared exception!
      try { 
        strMatcher0.isMatch(charArray0, 2161, 1098, 0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "ZB5r7pf)<x_tY]b<_,'";
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("ZB5r7pf)<x_tY]b<_,'");
      StrBuilder strBuilder1 = strBuilder0.deleteAll((StrMatcher) strMatcher_StringMatcher0);
      StrBuilder strBuilder2 = strBuilder0.setNewLineText("");
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadLeft((-73), (-73), 'C');
      StrBuilder strBuilder4 = strBuilder1.appendFixedWidthPadRight((Object) "ZB5r7pf)<x_tY]b<_,'", (-3263), '/');
      int int0 = (-758);
      StrBuilder strBuilder5 = strBuilder1.append(false);
      // Undeclared exception!
      try { 
        strBuilder5.delete((-3263), (-3263));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3263
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 1882;
      StrBuilder strBuilder1 = new StrBuilder(1882);
      StrBuilder strBuilder2 = strBuilder1.setLength(1882);
      int int1 = (-1677);
      // Undeclared exception!
      try { 
        strBuilder2.append("", (-1677), 1882);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      int int0 = (-1);
      StrBuilder strBuilder0 = new StrBuilder((-1));
      StrBuilder strBuilder1 = strBuilder0.deleteAll("");
      int int1 = (-489);
      char char0 = 'f';
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft((-489), (-2208), 'f');
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      String string0 = strBuilder0.leftString((-1));
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("NQCx3/A`xZ:1@");
      // Undeclared exception!
      try { 
        strBuilder0.replace((StrMatcher) strMatcher_TrimMatcher0, "", 97, 97, 97);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-413));
      StrBuilder strBuilder1 = strBuilder0.setNullText(";(^2G|=WUx:");
      StrBuilder strBuilder2 = strBuilder0.append(false);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.reverse();
      StrBuilder strBuilder2 = strBuilder1.append(0.0F);
      StrBuilder strBuilder3 = strBuilder2.ensureCapacity(0);
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray(57, 57);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("PJ\"SSs");
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      String string0 = null;
      char[] charArray0 = new char[8];
      charArray0[0] = '>';
      charArray0[1] = '\\';
      charArray0[2] = 'k';
      charArray0[3] = 'a';
      charArray0[4] = '2';
      charArray0[5] = '1';
      charArray0[6] = 'J';
      charArray0[7] = '#';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(955, 4, charArray0, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      int int0 = (-480);
      StrBuilder strBuilder0 = new StrBuilder((-480));
      String string0 = strBuilder0.rightString((-480));
      StrBuilder strBuilder1 = strBuilder0.append((Object) "bc)utw#fRv:r1");
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, (-480), (-480));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -480
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[4];
      charArray0[0] = '!';
      charArray0[1] = '<';
      charArray0[2] = 'd';
      strBuilder_StrBuilderWriter0.write(charArray0);
      charArray0[3] = '-';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, (-2433), (-2433));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -2433
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("45[8yRC36a9ZOw?^");
      char[] charArray0 = new char[5];
      charArray0[0] = '9';
      charArray0[1] = 'U';
      charArray0[2] = 'Z';
      charArray0[3] = '@';
      StrBuilder strBuilder1 = strBuilder0.clear();
      charArray0[4] = 'r';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      StrBuilder strBuilder2 = strBuilder0.replaceAll((StrMatcher) strMatcher_CharSetMatcher0, "45[8yRC36a9ZOw?^");
      int int0 = strBuilder2.indexOf((StrMatcher) strMatcher_CharSetMatcher0);
      // Undeclared exception!
      try { 
        strBuilder0.insert(317, "45[8yRC36a9ZOw?^");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 317
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Object[] objectArray0 = new Object[2];
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      objectArray0[0] = object0;
      objectArray0[1] = (Object) strBuilder0;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, (String) null);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1123));
      int int0 = strBuilder0.lastIndexOf('#');
      char[] charArray0 = new char[7];
      charArray0[0] = 'R';
      charArray0[1] = '#';
      charArray0[2] = '#';
      charArray0[3] = '|';
      charArray0[4] = '#';
      charArray0[5] = '#';
      charArray0[6] = '#';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, (-1030), (-1123));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -1123
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(3165);
      int int0 = 39;
      char char0 = '0';
      StrBuilder strBuilder1 = strBuilder0.appendPadding(39, '0');
      strBuilder1.size = 48;
      strBuilder1.size = (-1740);
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, (-3327), 3165);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "&qQ,A[w&*5<iJ8,`");
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, (-2624), 12);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-3588));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(0);
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = new StrBuilder("u~#lOgdf4I@");
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, 32, 3);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid startIndex: ");
      char[] charArray0 = new char[4];
      charArray0[0] = '#';
      charArray0[1] = 'j';
      charArray0[2] = '3';
      charArray0[3] = 'W';
      char[] charArray1 = strBuilder0.getChars(charArray0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((Object) "java.runtime.name");
      StrBuilder strBuilder2 = strBuilder1.append("<'OADvgw");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) "java.runtime.name");
      int int0 = 9;
      char[] charArray0 = new char[3];
      charArray0[0] = '%';
      charArray0[1] = 'Q';
      charArray0[2] = 'Z';
      strBuilder_StrBuilderWriter0.write(charArray0);
      strBuilder_StrBuilderWriter0.write(0);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("%Ym)[X", 9, (-246));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[2];
      Writer writer0 = strBuilder_StrBuilderWriter0.append('A');
      charArray0[0] = '\\';
      int int0 = 0;
      strBuilder_StrBuilderWriter0.write(charArray0, 0, 0);
      char char0 = 'L';
      charArray0[1] = 'L';
      strBuilder_StrBuilderWriter0.write(charArray0);
      strBuilder_StrBuilderWriter0.close();
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex(31);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 31
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      char[] charArray0 = new char[1];
      charArray0[0] = 'U';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 0);
      StrBuilder strBuilder1 = strBuilder0.insert(0, "AIX");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      LinkedList<StrBuilder> linkedList0 = new LinkedList<StrBuilder>();
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.charMatcher('H');
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      int int0 = 108;
      int int1 = strBuilder0.indexOf('1', 108);
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(')', '.');
      int int2 = 102;
      // Undeclared exception!
      try { 
        strBuilder1.charAt(102);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 102
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("P:Pnkr9+");
      StrBuilder strBuilder1 = strBuilder0.insert(0, (-18.8F));
      String string0 = strBuilder0.rightString((-651));
      int int0 = strBuilder0.indexOf('K', (-651));
      int int1 = strBuilder0.indexOf("{50ib=/LS/PbVPu", (-651));
      // Undeclared exception!
      try { 
        strBuilder1.insert((-2263), (long) 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2263
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      int int0 = (-1988);
      char char0 = 'c';
      StrMatcher strMatcher1 = StrMatcher.charMatcher('c');
      // Undeclared exception!
      try { 
        strBuilder1.insert((-1988), (-1988));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1988
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.insert(0, (float) 0);
      String string0 = strBuilder0.rightString((-651));
      int int0 = strBuilder0.indexOf('K', (-651));
      int int1 = strBuilder0.indexOf("{50ib=/LS/PbVPu", (-651));
      // Undeclared exception!
      try { 
        strBuilder1.insert((-2265), (long) 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2265
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(421);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(0, (-1514), ')');
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      StrBuilder strBuilder2 = strBuilder1.deleteAll(strMatcher0);
      StrBuilder strBuilder3 = strBuilder2.appendPadding(0, 'w');
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      int int0 = strBuilder2.indexOf(')', (-2038));
      // Undeclared exception!
      try { 
        strBuilder1.append("", 0, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("f]U#4w.");
      int int0 = strBuilder0.indexOf(':');
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.insert(0, 0);
      StrBuilder strBuilder2 = strBuilder1.insert(0, (double) 0);
      String string0 = strBuilder2.leftString(0);
      StrBuilder strBuilder3 = strBuilder0.replaceFirst('T', 'N');
      boolean boolean0 = strBuilder3.isEmpty();
      StrBuilder strBuilder4 = strBuilder3.deleteFirst('N');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder4.new StrBuilderWriter();
      Writer writer0 = strBuilder_StrBuilderWriter0.append('s');
      char[] charArray0 = new char[4];
      charArray0[0] = 'T';
      charArray0[1] = 'N';
      charArray0[2] = 'T';
      charArray0[3] = 'N';
      strBuilder_StrBuilderWriter0.write(charArray0);
      StrBuilder strBuilder5 = strBuilder4.setLength(0);
      StrBuilder strBuilder6 = strBuilder1.append((double) 0);
      int int0 = strBuilder3.lastIndexOf("", 1);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      String string0 = strBuilder0.midString((-2270), (-2270));
      StrBuilder strBuilder1 = strBuilder0.insert(0, (Object) "org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrBuilder strBuilder2 = strBuilder1.deleteFirst("");
      boolean boolean0 = strBuilder1.equalsIgnoreCase(strBuilder0);
      int int0 = strBuilder2.lastIndexOf('8');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrBuilder strBuilder3 = strBuilder2.deleteAll(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
      StrBuilder strBuilder1 = strBuilder0.append('j');
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Iterator) null, "sg");
      int int0 = strBuilder1.lastIndexOf(strMatcher0, 0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = 'Q';
      StrBuilder strBuilder1 = strBuilder0.deleteAll('Q');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char char1 = 'C';
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setQuoteChar('C');
      String string0 = null;
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, (String) null);
      // Undeclared exception!
      try { 
        strBuilder2.replace(270, 270, "end < start");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.substring((-1939), (-98));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1939
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      int int0 = 1367;
      StrBuilder strBuilder0 = new StrBuilder(1367);
      StrBuilder strBuilder1 = strBuilder0.append(1L);
      int int1 = 57;
      char[] charArray0 = new char[1];
      charArray0[0] = 'T';
      int int2 = (-694);
      // Undeclared exception!
      try { 
        strBuilder1.substring(57, (-694));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer", 0, 'h');
      StrBuilder strBuilder2 = strBuilder0.replaceFirst(strMatcher0, "");
      String string0 = strBuilder2.midString(101, (-1024));
      StrBuilder strBuilder3 = strBuilder2.setNewLineText("~*]x&Aqwkg?w ");
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      String string0 = null;
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.append('k');
      // Undeclared exception!
      try { 
        strBuilder1.setCharAt(97, ':');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 97
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      char char0 = '4';
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(0, '4');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append("j'e'o1");
      StrBuilder strBuilder2 = strBuilder1.minimizeCapacity();
      char[] charArray0 = new char[3];
      charArray0[0] = 'J';
      charArray0[1] = '(';
      charArray0[2] = '!';
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1), charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(" ");
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      int int0 = (-1);
      // Undeclared exception!
      try { 
        strBuilder0.charAt((-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "1tSM;");
      StrBuilder strBuilder2 = strBuilder0.append((-589.9782899480044));
      char[] charArray0 = new char[9];
      charArray0[0] = '@';
      charArray0[1] = '#';
      charArray0[2] = 'j';
      charArray0[3] = ']';
      charArray0[4] = 'F';
      charArray0[5] = 'L';
      charArray0[6] = 'T';
      charArray0[7] = 'W';
      charArray0[8] = 'x';
      // Undeclared exception!
      try { 
        strBuilder2.getChars(2, 2, charArray0, 1350);
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      // Undeclared exception!
      try { 
        strBuilder0.charAt((-1217));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1217
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("");
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      StrBuilder strBuilder2 = strBuilder1.replaceAll(strMatcher0, "");
      StrBuilder strBuilder3 = strBuilder0.deleteAll("");
      char[] charArray0 = strBuilder0.toCharArray(0, 3380);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("|${%Ffmtt");
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("|${%Ffmtt");
      StrBuilder strBuilder2 = strBuilder0.replaceAll("U$f#EJR%x@b]n]E.", "U$f#EJR%x@b]n]E.");
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder strBuilder1 = strBuilder0.append("&l6wtHsP@$@*lC");
      char[] charArray0 = new char[0];
      StrBuilder strBuilder2 = strBuilder0.insert(0, charArray0);
      Reader reader0 = strBuilder2.asReader();
      StrBuilder strBuilder3 = strBuilder0.replaceAll("{tl5R~P", "{tl5R~P");
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      String string0 = "`";
      StrBuilder strBuilder0 = new StrBuilder("`");
      Writer writer0 = strBuilder0.asWriter();
      boolean boolean0 = strBuilder0.endsWith("`");
      boolean boolean1 = strBuilder0.equals((Object) "`");
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) "`";
      objectArray0[1] = (Object) "`";
      objectArray0[2] = (Object) writer0;
      objectArray0[3] = (Object) "`";
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt((-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(108);
      // Undeclared exception!
      try { 
        strBuilder0.charAt(108);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 108
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrBuilder strBuilder2 = strBuilder1.append((-1.0));
      StrBuilder strBuilder3 = strBuilder0.replaceFirst("Mac", "");
      StrBuilder strBuilder4 = strBuilder0.append(0.0);
      StrBuilder strBuilder5 = strBuilder0.replaceAll((String) null, "^Fr%");
      StrBuilder strBuilder6 = strBuilder2.append("end < start");
      strBuilder1.validateIndex(0);
      int int0 = strBuilder2.size();
      StringBuffer stringBuffer0 = strBuilder4.toStringBuffer();
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(";$");
      boolean boolean0 = strBuilder0.contains('=');
      char[] charArray0 = new char[8];
      charArray0[0] = '=';
      charArray0[1] = '=';
      charArray0[2] = '=';
      charArray0[3] = '=';
      charArray0[4] = '=';
      charArray0[5] = '=';
      charArray0[6] = '=';
      charArray0[7] = '=';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(0, 0, charArray0, (-1268));
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[4];
      charArray0[0] = 'f';
      charArray0[1] = 'P';
      StrBuilder strBuilder1 = strBuilder0.append((-803.0F));
      charArray0[2] = 'm';
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) "");
      Writer writer1 = strBuilder_StrBuilderWriter0.append('m');
      charArray0[3] = 'v';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 0, 115);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 115
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(97, 97, 'd');
      int int0 = 0;
      int int1 = (-3544);
      boolean boolean0 = strBuilder1.contains((StrMatcher) null);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-3544), true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3544
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[4];
      charArray0[0] = 'f';
      charArray0[1] = 'P';
      StrBuilder strBuilder1 = new StrBuilder();
      charArray0[2] = 'P';
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) "");
      Writer writer1 = strBuilder_StrBuilderWriter0.append('P');
      charArray0[3] = 'P';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 0, 115);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 115
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("end < start");
      char[] charArray0 = new char[5];
      charArray0[0] = 'E';
      charArray0[1] = 'D';
      charArray0[2] = ']';
      charArray0[3] = 'G';
      charArray0[4] = 'Z';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0, 0, 0);
      StrBuilder strBuilder2 = strBuilder0.append('S');
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(758);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      String string0 = strBuilder0.rightString(758);
      boolean boolean0 = strBuilder0.contains((StrMatcher) null);
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(758);
      StrBuilder strBuilder2 = strBuilder1.deleteFirst("");
      int int0 = strBuilder0.size();
      // Undeclared exception!
      try { 
        strBuilder0.insert(865, (-410));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 865
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(0, (-1488), '2');
      StrBuilder strBuilder2 = strBuilder1.replaceAll("ll?RM0~&f", "ll?RM0~&f");
      // Undeclared exception!
      try { 
        strBuilder2.validateRange(117, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(5);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.toString();
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) "StrTokenizer[not tokenized yet]");
      strBuilder_StrBuilderWriter0.flush();
      Object object0 = new Object();
      boolean boolean0 = strBuilder0.equals(object0);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[6];
      charArray0[0] = 'U';
      charArray0[1] = 'd';
      charArray0[2] = '3';
      charArray0[3] = 'e';
      charArray0[4] = ',';
      charArray0[5] = 'I';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 34, (-6521));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -6521
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(0);
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight((Object) "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter", (-2196), 'i');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      char[] charArray0 = new char[6];
      charArray0[0] = 'i';
      charArray0[1] = 'i';
      charArray0[2] = 'i';
      charArray0[3] = 'i';
      charArray0[4] = 'i';
      charArray0[5] = 'i';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = strBuilder_StrBuilderReader0.read(charBuffer0);
      int int1 = strBuilder_StrBuilderReader0.read();
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.nextToken();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance();
      Object object1 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder strBuilder2 = strBuilder0.insert(0, object1);
      StrBuilder strBuilder3 = strBuilder0.deleteAll(",>iSx3c.Q3z5H");
      Object[] objectArray0 = new Object[0];
      StrBuilder strBuilder4 = strBuilder1.appendWithSeparators(objectArray0, "?=+sRDE");
      StrBuilder strBuilder5 = strBuilder0.replace(0, 4, ",>iSx3c.Q3z5H");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder6 = strBuilder1.appendWithSeparators((Collection) linkedList0, "[nu:,sSRgIi{_IB");
      StrBuilder strBuilder7 = strBuilder0.setCharAt(0, 'z');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 172;
      int int1 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(0, 'g');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = strBuilder0.midString(0, 34);
      float float0 = 1791.2F;
      StrBuilder strBuilder1 = strBuilder0.insert(0, 1791.2F);
      String string1 = strBuilder1.toString();
      char[] charArray0 = new char[4];
      charArray0[0] = 'f';
      charArray0[1] = ']';
      charArray0[2] = '!';
      charArray0[3] = '+';
      int int1 = (-331);
      // Undeclared exception!
      try { 
        strBuilder1.insert(34, charArray0, (-331), (-331));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 34
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder("");
      String string0 = strBuilder1.midString(5240, 117);
      boolean boolean0 = strBuilder0.equals((Object) strBuilder1);
      boolean boolean1 = strBuilder1.startsWith("");
      // Undeclared exception!
      try { 
        strBuilder1.insert(5240, (-1349L));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 5240
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-596));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0);
      boolean boolean0 = strBuilder0.startsWith((String) null);
      StrBuilder strBuilder1 = strBuilder0.append(701);
      Reader reader0 = strBuilder0.asReader();
      int int1 = strBuilder0.size();
      char[] charArray0 = new char[1];
      charArray0[0] = 'k';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 701, (-2546));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -2546
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      int int1 = strBuilder0.indexOf(strMatcher0);
      String string0 = strBuilder0.getNullText();
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      int int2 = 0;
      int int3 = 0;
      StrBuilder strBuilder2 = strBuilder0.append((String) null, 0, 0);
      StrBuilder strBuilder3 = strBuilder1.append(strBuilder0);
      strBuilder3.size = (-1);
      int int4 = (-997);
      // Undeclared exception!
      try { 
        strBuilder2.setLength((-997));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -997
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      int int0 = 0;
      int int1 = strBuilder0.lastIndexOf("8G`H )UyO", 0);
      // Undeclared exception!
      try { 
        strBuilder0.append("8G`H )UyO", (-1), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      int int0 = strBuilder0.indexOf('e');
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) "O", 0, '~');
      StrBuilder strBuilder2 = strBuilder0.appendNull();
      strBuilder2.validateIndex(0);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      String string0 = strBuilder0.midString((-5591), (-505));
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) "";
      objectArray0[1] = (Object) "";
      objectArray0[2] = (Object) strBuilder1;
      objectArray0[3] = (Object) "";
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators(objectArray0, "Oq_(@/_tl:bGn1&@G\"6");
      StrBuilder strBuilder3 = strBuilder1.appendFixedWidthPadRight((Object) "", (-5591), '`');
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1325));
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      // Undeclared exception!
      try { 
        strBuilder0.setLength((-1325));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1325
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("_Sm");
      char[] charArray0 = strBuilder0.toCharArray();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.setLength(34);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1969);
      String string0 = strBuilder0.getNullText();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst((String) null, (String) null);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.previous();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(953);
      StrBuilder strBuilder1 = strBuilder0.clear();
      String string0 = strBuilder1.toString();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      // Undeclared exception!
      try { 
        strBuilder0.insert(115, object0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 115
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      char char0 = '+';
      StrBuilder strBuilder1 = strBuilder0.delete(0, 0);
      StrMatcher strMatcher0 = StrMatcher.charMatcher('+');
      int int0 = strBuilder0.indexOf(strMatcher0);
      int int1 = (-1376);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1376), (float) (-1376));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1376
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.append((-1.0F));
      Reader reader0 = strBuilder0.asReader();
      StrTokenizer strTokenizer0 = strBuilder1.asTokenizer();
      String string0 = strBuilder0.rightString(0);
      StrBuilder strBuilder2 = strBuilder0.insert(0, '6');
      char char0 = 'P';
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      String string1 = strBuilder0.midString(0, 0);
      // Undeclared exception!
      try { 
        strBuilder1.delete(3084, 4394);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("MG4?_%#C!>q,+mQ?V");
      StrBuilder strBuilder1 = strBuilder0.insert(0, 0.0);
      int int0 = strBuilder0.lastIndexOf('e', 1);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      char[] charArray0 = new char[4];
      charArray0[0] = 'j';
      charArray0[1] = 'I';
      charArray0[2] = 'b';
      charArray0[3] = '*';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 157, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("PO/ZHmS`mE*$");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      int int0 = 1148;
      // Undeclared exception!
      try { 
        strBuilder0.insert(1148, (float) 1148);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1148
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("s");
      StrBuilder strBuilder1 = strBuilder0.append(0L);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.midString(0, 0);
      StrBuilder strBuilder1 = strBuilder0.replaceAll("", "");
      StrBuilder strBuilder2 = strBuilder1.insert(0, (Object) "");
      StrBuilder strBuilder3 = strBuilder1.deleteCharAt(0);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.append('r');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.previous();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("a+0 9FX/xrhfMg5FBpA");
      int int0 = strBuilder0.size();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("a+0 9FX/xrhfMg5FBpA", "org.apache.commons.lang.text.StrBuilder");
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("N.85K'lzV@[DCkiTf0");
      StrBuilder strBuilder1 = strBuilder0.insert(0, 1902L);
      StrBuilder strBuilder2 = strBuilder0.setNullText("");
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('Q');
      int int0 = strBuilder2.lastIndexOf(strMatcher0);
      StrBuilder strBuilder3 = strBuilder2.replaceFirst('i', 'i');
      StrBuilder strBuilder4 = new StrBuilder();
      StrBuilder strBuilder5 = strBuilder3.append((Object) strBuilder4);
      StrBuilder strBuilder6 = strBuilder3.insert(0, "");
      StringBuffer stringBuffer0 = strBuilder2.toStringBuffer();
      StrBuilder strBuilder7 = strBuilder1.append(false);
      StrBuilder strBuilder8 = strBuilder1.deleteAll(strMatcher0);
      char[] charArray0 = new char[2];
      charArray0[0] = 'i';
      charArray0[1] = 'Q';
      // Undeclared exception!
      try { 
        strBuilder4.append(charArray0, 1033, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("o}\"xXyMTSxQ!%xLf>b");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "o}\"xXyMTSxQ!%xLf>b");
      int int0 = 1004;
      // Undeclared exception!
      try { 
        strBuilder0.replace(1004, 4, "1");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("CuO:Ir~S");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("CuO:Ir~S");
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoredMatcher(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "CuO:Ir~S");
      int int0 = strBuilder0.indexOf("CuO:Ir~S");
      StrBuilder strBuilder2 = strBuilder1.replaceAll('P', '!');
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("CuO:Ir~S");
      StrBuilder strBuilder3 = strBuilder1.append((-2871));
      char[] charArray0 = new char[3];
      charArray0[0] = '!';
      charArray0[1] = 'P';
      charArray0[2] = 'P';
      StrBuilder strBuilder4 = new StrBuilder(0);
      StrBuilder strBuilder5 = strBuilder2.appendFixedWidthPadLeft((Object) strBuilder4, (-2871), '!');
      // Undeclared exception!
      try { 
        strBuilder2.append(charArray0, 0, (-2871));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: -2871
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("MG4?_%#C!>q,+mQ?V");
      StrBuilder strBuilder1 = strBuilder0.insert(0, 0.0);
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) strBuilder1;
      objectArray0[1] = (Object) "MG4?_%#C!>q,+mQ?V";
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.next();
      objectArray0[2] = (Object) "0.0MG4?_%#C!>q,+mQ?V";
      objectArray0[3] = (Object) strBuilder0;
      objectArray0[4] = (Object) strBuilder1;
      objectArray0[5] = (Object) "MG4?_%#C!>q,+mQ?V";
      Object object1 = strBuilder_StrBuilderTokenizer0.previous();
      objectArray0[6] = (Object) "0.0MG4?_%#C!>q,+mQ?V";
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators(objectArray0, "org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrBuilder strBuilder3 = strBuilder2.append(objectArray0[0]);
      int int0 = strBuilder0.lastIndexOf('e', 1);
      Writer writer0 = strBuilder0.asWriter();
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      String string1 = ":(?z1m` ,D3^N'Z4";
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(":(?z1m` ,D3^N'Z4");
      boolean boolean0 = strBuilder0.endsWith("");
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      int int0 = (-465);
      int int1 = strBuilder0.indexOf(strMatcher0, (-465));
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadLeft((-941), 1988, '&');
      char char0 = '4';
      boolean boolean1 = strBuilder0.contains('4');
      StrBuilder strBuilder4 = strBuilder1.append(true);
      int int2 = strBuilder0.size();
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex((-465));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -465
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.toString();
      boolean boolean0 = strBuilder0.startsWith("Invalid offset: ");
      StrBuilder strBuilder1 = strBuilder0.replaceAll("", "");
      StrBuilder strBuilder2 = strBuilder1.replaceAll("", "");
      String string1 = strBuilder1.toString();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      char[] charArray0 = new char[5];
      charArray0[0] = 'G';
      charArray0[1] = 'E';
      charArray0[2] = 'p';
      charArray0[3] = 'F';
      charArray0[4] = 'E';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder3 = strBuilder1.replace((StrMatcher) strMatcher_TrimMatcher0, "", 0, 0, 0);
      StrMatcher strMatcher1 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher1, 3442);
      StrBuilder strBuilder4 = strBuilder0.deleteAll('R');
      char[] charArray1 = new char[4];
      charArray1[0] = 'C';
      charArray1[1] = 'R';
      charArray1[2] = 'R';
      charArray1[3] = 'R';
      StrBuilder strBuilder5 = strBuilder4.append(charArray1);
      String string2 = strBuilder_StrBuilderTokenizer0.getContent();
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.isEmpty();
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight((Object) null, 0, 'D');
      Reader reader0 = strBuilder0.asReader();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      char[] charArray0 = new char[2];
      charArray0[0] = 'D';
      charArray0[1] = 'D';
      StrBuilder strBuilder3 = strBuilder2.insert(0, charArray0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      char[] charArray0 = new char[3];
      charArray0[0] = '=';
      charArray0[1] = '5';
      charArray0[2] = '>';
      StrBuilder strBuilder2 = strBuilder1.append(charArray0);
      String string0 = strBuilder0.rightString(39);
      StrBuilder strBuilder3 = strBuilder0.appendPadding(39, '');
      boolean boolean0 = strBuilder3.endsWith("O0");
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.vm.name");
      String string0 = strBuilder0.substring(0, 0);
      StrBuilder strBuilder1 = strBuilder0.insert(0, true);
      StrBuilder strBuilder2 = new StrBuilder(2901);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      Writer writer0 = strBuilder2.asWriter();
      StrBuilder strBuilder3 = strBuilder1.appendFixedWidthPadRight(object0, 1699, '`');
      String string1 = strBuilder3.midString((-1109), 0);
      int int0 = StrBuilder.CAPACITY;
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(380);
      StrBuilder strBuilder4 = strBuilder2.append(')');
      strBuilder_StrBuilderWriter0.flush();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      boolean boolean0 = linkedList0.add("");
      StrBuilder strBuilder5 = strBuilder2.appendWithSeparators((Collection) linkedList0, "");
      int int1 = strBuilder5.lastIndexOf((StrMatcher) null);
      StrBuilder strBuilder6 = strBuilder5.append((float) 1699);
      StrBuilder strBuilder7 = strBuilder0.reverse();
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder8 = strBuilder2.append(stringBuffer0);
      String string2 = strBuilder8.leftString(462);
  }
}
