/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 31 14:43:38 GMT 2020
 */

package org.apache.commons.lang.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.Writer;
import java.nio.CharBuffer;
import java.nio.ReadOnlyBufferException;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.NoSuchElementException;
import java.util.stream.IntStream;
import org.apache.commons.lang.text.StrBuilder;
import org.apache.commons.lang.text.StrMatcher;
import org.apache.commons.lang.text.StrTokenizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StrBuilder_ESTest extends StrBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      String string0 = "Ku[\\> -8Sd7$3R)";
      StrBuilder strBuilder0 = new StrBuilder("Ku[> -8Sd7$3R)");
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "Ku[> -8Sd7$3R)");
      char char0 = '$';
      StrBuilder strBuilder2 = strBuilder0.append('$');
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrBuilder strBuilder3 = strBuilder2.deleteFirst(strMatcher0);
      boolean boolean0 = strBuilder2.endsWith("Ku[> -8Sd7$3R)");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      boolean boolean1 = strBuilder_StrBuilderTokenizer0.hasPrevious();
      int int0 = 48;
      StrMatcher strMatcher1 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrBuilder strBuilder4 = strBuilder0.deleteAll(strMatcher1);
      String string1 = strBuilder2.leftString(48);
      StrBuilder strBuilder5 = strBuilder1.append(object0);
      Writer writer0 = strBuilder2.asWriter();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder6 = strBuilder1.appendWithSeparators((Collection) linkedList0, "Ku[> -8Sd7$3R)$");
      String string2 = "Invalid startIndex: ";
      StrBuilder strBuilder7 = strBuilder2.insert(48, false);
      StrBuilder strBuilder8 = strBuilder7.insert(48, (double) 48);
      // Undeclared exception!
      try { 
        strBuilder8.toCharArray(48, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("cByW BOxeF4");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('B', 'B');
      StrBuilder strBuilder2 = strBuilder1.append('Z');
      String string0 = strBuilder1.midString(39, 0);
      StrTokenizer strTokenizer0 = strBuilder1.asTokenizer();
      int int0 = strBuilder0.lastIndexOf('B', 0);
      StrBuilder strBuilder3 = strBuilder1.trim();
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      char[] charArray0 = new char[5];
      charArray0[0] = 'B';
      charArray0[1] = 'Z';
      charArray0[2] = 'Z';
      charArray0[3] = 'B';
      charArray0[4] = 'B';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      int int1 = strBuilder3.indexOf(strMatcher0, 0);
      StrBuilder strBuilder4 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "cByW BOxeF4");
      int int2 = strBuilder2.lastIndexOf("cByW BOxeF4", 32);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('8');
      StrBuilder strBuilder2 = strBuilder0.append((float) '8');
      int int0 = StrBuilder.CAPACITY;
      String string0 = strBuilder0.getNewLineText();
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrBuilder strBuilder3 = strBuilder1.deleteFirst(strMatcher0);
      StrBuilder strBuilder4 = strBuilder2.ensureCapacity(1777);
      StrBuilder strBuilder5 = strBuilder1.append("([Ip]L");
      StrBuilder strBuilder6 = strBuilder0.append("");
      int int1 = strBuilder1.lastIndexOf('8', 32);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "java.ext.dirs";
      StrBuilder strBuilder1 = strBuilder0.append("java.ext.dirs");
      Writer writer0 = strBuilder0.asWriter();
      int int0 = strBuilder0.size();
      StrBuilder strBuilder2 = strBuilder0.appendNewLine();
      char[] charArray0 = new char[9];
      charArray0[0] = '0';
      charArray0[1] = 'T';
      StrBuilder strBuilder3 = strBuilder2.ensureCapacity(13);
      charArray0[2] = 'Q';
      charArray0[3] = '+';
      char char0 = '\"';
      charArray0[4] = '\"';
      charArray0[5] = 'l';
      charArray0[6] = '2';
      charArray0[7] = 'R';
      charArray0[8] = '}';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder4 = strBuilder2.deleteAll((StrMatcher) strMatcher_CharSetMatcher0);
      StrBuilder strBuilder5 = strBuilder1.trim();
      int int1 = strBuilder0.lastIndexOf("java.ext.dirs", 13);
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("java.ext.dirs");
      // Undeclared exception!
      try { 
        strBuilder2.appendFixedWidthPadRight((Object) strBuilder1, 2, 'Q');
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      char[] charArray0 = new char[3];
      char[] charArray1 = new char[1];
      charArray1[0] = 'o';
      charArray0[0] = 'o';
      charArray0[1] = 'B';
      charArray0[2] = 'M';
      StrBuilder strBuilder1 = strBuilder0.reverse();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.set(strBuilder1);
      } catch(UnsupportedOperationException e) {
         //
         // set() is unsupported
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = new StrBuilder((-1071));
      boolean boolean0 = strBuilder0.equals(strBuilder1);
      String string0 = strBuilder1.getNullText();
      StrBuilder strBuilder2 = strBuilder1.append((double) (-1071));
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Iterator<String> iterator0 = linkedList0.descendingIterator();
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators(iterator0, "java.runtime.version");
      int int0 = strBuilder3.lastIndexOf("org.apache.commons.lang.text.StrBuilder", (-1071));
      StrBuilder strBuilder4 = strBuilder2.deleteCharAt(1);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder4.new StrBuilderReader();
      char[] charArray0 = new char[2];
      charArray0[0] = 'm';
      charArray0[1] = '~';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, (-1071), 673);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "";
      char[] charArray0 = null;
      strBuilder0.buffer = null;
      int int0 = strBuilder0.indexOf("", 5452);
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadLeft((Object) "", 5452, 'b');
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((-1L));
      StrBuilder strBuilder2 = strBuilder1.append((double) (-1L));
      StringBuffer stringBuffer0 = new StringBuffer(0);
      StringBuffer stringBuffer1 = stringBuffer0.appendCodePoint(0);
      StrBuilder strBuilder3 = strBuilder0.append(stringBuffer0, 0, 0);
      // Undeclared exception!
      try { 
        strBuilder1.replace(117, 0, "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "java.vm.vendor");
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder2 = new StrBuilder("java.vm.vendor");
      StrBuilder strBuilder3 = strBuilder0.append((char[]) null);
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder4 = strBuilder2.append(strBuilder0, 0, 0);
      char[] charArray0 = strBuilder4.toCharArray(0, 0);
      StrBuilder strBuilder5 = strBuilder4.trim();
      StrBuilder strBuilder6 = strBuilder5.deleteAll('g');
      StrBuilder strBuilder7 = strBuilder2.appendFixedWidthPadRight(0, 2437, 'g');
      StrBuilder strBuilder8 = strBuilder4.deleteCharAt(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder7.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset("java.vm.vendor");
      StrBuilder strBuilder9 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "z");
      Object object0 = new Object();
      StrBuilder strBuilder10 = strBuilder0.append((Object) strBuilder9);
      StrBuilder strBuilder11 = strBuilder7.appendFixedWidthPadLeft(object0, 0, 'f');
      boolean boolean0 = strBuilder9.isEmpty();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder9.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "java.vm.vendor";
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "java.vm.vendor");
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder2 = strBuilder0.deleteAll("java.vm.vendor");
      StrBuilder strBuilder3 = strBuilder0.append((char[]) null);
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder4 = strBuilder2.append(strBuilder0, 0, 0);
      char[] charArray0 = strBuilder4.toCharArray(0, 0);
      StrBuilder strBuilder5 = strBuilder4.trim();
      StrBuilder strBuilder6 = strBuilder5.deleteAll('g');
      StrBuilder strBuilder7 = strBuilder2.appendFixedWidthPadRight(0, 0, 'g');
      // Undeclared exception!
      try { 
        strBuilder4.deleteCharAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.lastIndexOf("user.timezone", 31);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[3];
      char[] charArray1 = new char[1];
      charArray1[0] = 'o';
      strBuilder_StrBuilderWriter0.write(charArray1);
      strBuilder_StrBuilderWriter0.write("#wd4n=");
      charArray0[0] = 'o';
      charArray0[1] = 'B';
      strBuilder_StrBuilderWriter0.write("#wd4n=");
      charArray0[2] = 'M';
      StrBuilder strBuilder1 = strBuilder0.reverse();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray2 = new char[1];
      charArray2[0] = 'M';
      boolean boolean0 = strBuilder1.contains("");
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset(charArray2);
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrBuilder strBuilder2 = strBuilder0.deleteFirst(strMatcher0);
      String string0 = strBuilder1.getNullText();
      boolean boolean1 = strBuilder1.contains('S');
      // Undeclared exception!
      try { 
        strBuilder0.insert(0, charArray1, 31, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: 31
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("cByW BOxeF4");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('B', 'B');
      StrBuilder strBuilder2 = strBuilder1.append('Z');
      String string0 = strBuilder1.midString(39, 0);
      StrTokenizer strTokenizer0 = strBuilder1.asTokenizer();
      int int0 = strBuilder0.lastIndexOf('B', 0);
      StrBuilder strBuilder3 = strBuilder1.trim();
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      int int1 = strBuilder3.indexOf(strMatcher0, 0);
      StrBuilder strBuilder4 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "cByW BOxeF4");
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder2 = strBuilder0.appendPadding((-3887), 'b');
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrBuilder strBuilder1 = strBuilder0.append(false);
      String string0 = "";
      // Undeclared exception!
      try { 
        strBuilder1.append("", 0, 1);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      int int0 = strBuilder0.hashCode();
      StrBuilder strBuilder2 = strBuilder1.delete(0, 0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("cByW BOxeF4");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('B', 'B');
      StrBuilder strBuilder2 = strBuilder1.append('Z');
      String string0 = strBuilder1.midString(39, 0);
      StrTokenizer strTokenizer0 = strBuilder1.asTokenizer();
      char[] charArray0 = new char[3];
      charArray0[0] = 'Z';
      charArray0[1] = 'Z';
      charArray0[2] = 'B';
      StrTokenizer strTokenizer1 = strTokenizer0.reset(charArray0);
      int int0 = strBuilder0.lastIndexOf('B', 0);
      StrBuilder strBuilder3 = strBuilder1.trim();
      StrBuilder strBuilder4 = strBuilder3.append(false);
      StrBuilder strBuilder5 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "cByW BOxeF4");
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      // Undeclared exception!
      try { 
        strBuilder5.replaceAll(strMatcher0, "mbG,?cZy");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 45
         //
         verifyException("org.apache.commons.lang.text.StrMatcher$TrimMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "java.vm.vendor");
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder2 = strBuilder0.deleteAll("java.vm.vendor");
      StrBuilder strBuilder3 = strBuilder0.append((char[]) null);
      Reader reader0 = strBuilder0.asReader();
      char[] charArray0 = strBuilder3.toCharArray(0, 0);
      StrBuilder strBuilder4 = strBuilder3.trim();
      // Undeclared exception!
      try { 
        strBuilder3.deleteCharAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("SunOS");
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0, 2396);
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrBuilder strBuilder2 = strBuilder0.replaceFirst('.', '.');
      StringBuffer stringBuffer0 = new StringBuffer("SunOS");
      StrBuilder strBuilder3 = strBuilder2.append(stringBuffer0);
      StrBuilder strBuilder4 = strBuilder0.minimizeCapacity();
      boolean boolean0 = strBuilder2.equalsIgnoreCase(strBuilder0);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1676), '.');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1676
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(1984);
      strBuilder0.size = 1022;
      StrBuilder strBuilder2 = strBuilder0.replaceAll('a', 'a');
      StrBuilder strBuilder3 = strBuilder2.trim();
      // Undeclared exception!
      try { 
        strBuilder2.append(strBuilder1, 0, 1984);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      int int0 = (-2481);
      int int1 = strBuilder0.indexOf((StrMatcher) strMatcher_NoMatcher0, (-2481));
      StrBuilder strBuilder1 = strBuilder0.append("Invalid offset: ");
      String string0 = strBuilder0.leftString((-1));
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("");
      StrBuilder strBuilder2 = strBuilder1.append("Invalid offset: ");
      StrBuilder strBuilder3 = strBuilder1.trim();
      StrBuilder strBuilder4 = strBuilder3.appendNewLine();
      // Undeclared exception!
      try { 
        strBuilder1.deleteCharAt((-274));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -274
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "java.vm.vendor");
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder2 = strBuilder0.deleteAll("java.vm.vendor");
      StrBuilder strBuilder3 = strBuilder0.append((char[]) null);
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder4 = strBuilder2.append(strBuilder0, 0, 0);
      char[] charArray0 = strBuilder4.toCharArray(0, 0);
      StrBuilder strBuilder5 = strBuilder4.trim();
      StrBuilder strBuilder6 = strBuilder5.deleteAll('g');
      StrBuilder strBuilder7 = strBuilder2.appendFixedWidthPadRight(0, 2437, 'g');
      StrBuilder strBuilder8 = strBuilder4.deleteCharAt(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder7.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset("java.vm.vendor");
      StrBuilder strBuilder9 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "z");
      Object object0 = new Object();
      StrBuilder strBuilder10 = strBuilder0.append((Object) strBuilder9);
      StrBuilder strBuilder11 = strBuilder7.appendFixedWidthPadLeft(object0, 0, 'f');
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrBuilder strBuilder12 = strBuilder9.replaceFirst(strMatcher0, "java.vm.vendor");
      boolean boolean0 = strBuilder9.isEmpty();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder9.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(0);
      Object[] objectArray0 = new Object[0];
      StrBuilder strBuilder13 = strBuilder1.appendWithSeparators(objectArray0, "z");
      int int0 = strBuilder6.indexOf('D');
      int int1 = strBuilder7.indexOf(strMatcher0, (-1));
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      String string0 = "xovPiS";
      StrBuilder strBuilder0 = new StrBuilder("xovPiS");
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      int int0 = 5;
      StrBuilder strBuilder2 = strBuilder0.insert(5, (long) 5);
      char char0 = 'u';
      StrBuilder strBuilder3 = strBuilder0.deleteFirst('u');
      StrBuilder strBuilder4 = strBuilder0.appendNewLine();
      int int1 = (-1);
      String string1 = "xutWoH^pzNy ";
      StringBuffer stringBuffer0 = new StringBuffer("xutWoH^pzNy ");
      // Undeclared exception!
      try { 
        strBuilder4.append(stringBuffer0, 5, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(5745);
      StrBuilder strBuilder1 = strBuilder0.append((-3843.9705F));
      char[] charArray0 = new char[1];
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("");
      StrBuilder strBuilder2 = strBuilder1.setLength(5745);
      int int0 = 1995;
      StrBuilder strBuilder3 = strBuilder2.insert(1995, charArray0);
      boolean boolean0 = strBuilder1.equals(strBuilder0);
      // Undeclared exception!
      try { 
        strBuilder0.append("", 5745, (-4529));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.util.prefs.PreferencesFactory");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[9];
      charArray0[0] = 'T';
      char char0 = '+';
      charArray0[1] = '+';
      charArray0[2] = ']';
      charArray0[3] = 't';
      int int0 = strBuilder_StrBuilderReader0.read();
      charArray0[4] = 'V';
      char char1 = '/';
      charArray0[5] = '/';
      String string0 = strBuilder0.leftString(57);
      charArray0[6] = 'x';
      charArray0[7] = 'f';
      charArray0[8] = 'M';
      int int1 = (-1122);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, (-746), (-1122));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-984);
      int int1 = strBuilder0.lastIndexOf((StrMatcher) null, (-984));
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      int int2 = strBuilder0.indexOf((StrMatcher) strMatcher_NoMatcher0);
      boolean boolean0 = strBuilder0.startsWith(")");
      int int3 = strBuilder0.indexOf((StrMatcher) strMatcher_NoMatcher0);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('P');
      char[] charArray0 = new char[2];
      charArray0[0] = 'P';
      charArray0[1] = 'P';
      int int4 = 32;
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 0, 32);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1629));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[9];
      charArray0[0] = '$';
      charArray0[1] = '5';
      charArray0[2] = 'e';
      charArray0[3] = '$';
      charArray0[4] = 'y';
      charArray0[5] = '<';
      charArray0[6] = 'x';
      charArray0[7] = '7';
      charArray0[8] = '{';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0);
      int int1 = strBuilder_StrBuilderReader0.read();
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(0L);
      StrBuilder strBuilder2 = strBuilder0.append((String) null);
      StrBuilder strBuilder3 = strBuilder2.append(false);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((String) null, 733, 32);
      strBuilder_StrBuilderWriter0.close();
      strBuilder_StrBuilderWriter0.flush();
      StrBuilder strBuilder4 = strBuilder0.ensureCapacity(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      char[] charArray0 = new char[0];
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 0, (-2180));
      String string0 = strBuilder0.getNullText();
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder2.indexOf(strMatcher0);
      String string1 = strBuilder1.rightString(5);
      StrBuilder strBuilder5 = strBuilder2.replaceAll('r', ' ');
      StringBuffer stringBuffer0 = strBuilder5.toStringBuffer();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder5.new StrBuilderReader();
      int int1 = 442;
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 1406, 442);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      StrBuilder strBuilder1 = strBuilder0.append((StringBuffer) null, 0, 0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      StrBuilder strBuilder2 = strBuilder1.appendNewLine();
      StrBuilder strBuilder3 = strBuilder2.append(0);
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrBuilder strBuilder4 = strBuilder1.deleteFirst(strMatcher0);
      StrBuilder strBuilder5 = strBuilder1.append(2706.659548733022);
      StrBuilder strBuilder6 = strBuilder5.ensureCapacity(0);
      char[] charArray0 = new char[6];
      charArray0[0] = 'F';
      charArray0[1] = '8';
      charArray0[2] = 'v';
      charArray0[3] = 'J';
      charArray0[4] = '+';
      charArray0[5] = '4';
      StrBuilder strBuilder7 = strBuilder6.append(charArray0);
      long long0 = strBuilder_StrBuilderReader0.skip((-2399L));
      StrBuilder strBuilder8 = strBuilder1.append((StringBuffer) null);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("{UugyMh~Iwt0;:di", "{UugyMh~Iwt0;:di");
      StrBuilder strBuilder2 = strBuilder0.deleteAll('d');
      int int0 = strBuilder0.indexOf(':', (-1228));
      char[] charArray0 = new char[9];
      charArray0[0] = ':';
      charArray0[1] = ':';
      charArray0[2] = ':';
      charArray0[3] = ':';
      charArray0[4] = ':';
      charArray0[5] = 'u';
      charArray0[6] = ':';
      charArray0[7] = '=';
      charArray0[8] = ':';
      // Undeclared exception!
      try { 
        strBuilder1.getChars((-1), (-1), charArray0, (-1228));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      String string0 = "p";
      StrBuilder strBuilder0 = new StrBuilder("p");
      int int0 = 0;
      StringBuffer stringBuffer0 = new StringBuffer(0);
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      char[] charArray0 = new char[0];
      StrBuilder strBuilder2 = strBuilder0.append(charArray0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      StrBuilder strBuilder3 = strBuilder0.insert(0, '/');
      StrBuilder strBuilder4 = strBuilder3.setLength(0);
      int int1 = (-556);
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt((-556));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -556
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char char0 = '<';
      LinkedList<StrBuilder> linkedList0 = new LinkedList<StrBuilder>();
      boolean boolean0 = linkedList0.add(strBuilder0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, ">&;=8Z");
      int int0 = strBuilder0.lastIndexOf('<', (-1457));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark((-2784));
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1358), true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1358
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.ArrayUtils");
      StrBuilder strBuilder1 = strBuilder0.setCharAt(0, 'c');
      // Undeclared exception!
      try { 
        strBuilder1.toCharArray(112, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.insert(0, (-1.0F));
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("6V#||0Th");
      StrBuilder strBuilder2 = strBuilder1.replaceAll((StrMatcher) strMatcher_NoMatcher0, "java.vm.info");
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder3 = strBuilder2.append(1L);
      char[] charArray0 = new char[1];
      StrBuilder strBuilder4 = strBuilder3.deleteFirst('u');
      charArray0[0] = 'q';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      String string0 = strBuilder1.midString(1335, 3821);
      int int0 = strBuilder1.indexOf('5', 2599);
      Reader reader0 = strBuilder3.asReader();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder2.insert(3821, (float) 3821);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3821
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(521);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("user.dir");
      char[] charArray0 = new char[8];
      charArray0[0] = 'd';
      charArray0[1] = 'b';
      charArray0[2] = '1';
      charArray0[3] = '#';
      charArray0[4] = '5';
      charArray0[5] = '.';
      charArray0[6] = '/';
      charArray0[7] = 'q';
      // Undeclared exception!
      try { 
        strBuilder1.append(charArray0, 1451, (-205));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -205
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      char[] charArray0 = new char[3];
      charArray0[0] = '[';
      charArray0[1] = 'G';
      charArray0[2] = 'y';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0, 0, 0);
      StrBuilder strBuilder2 = strBuilder1.setLength(0);
      StringBuffer stringBuffer0 = strBuilder2.toStringBuffer();
      StrBuilder strBuilder3 = strBuilder0.deleteFirst('M');
      StrBuilder strBuilder4 = strBuilder2.append(false);
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      int int0 = strBuilder2.indexOf((StrMatcher) strMatcher_StringMatcher0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      int int0 = strBuilder0.size();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("", "YA4IHbP`e39#(}<");
      boolean boolean1 = strBuilder0.isEmpty();
      boolean boolean2 = strBuilder0.endsWith("Invalid startIndex: ");
      // Undeclared exception!
      try { 
        strBuilder0.insert(7, (-950L));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 7
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("KIq-hnWfjDElk=4");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("69!&#*UZb)tn_R\"jya");
      StrBuilder strBuilder2 = strBuilder1.appendNewLine();
      int int0 = strBuilder2.lastIndexOf(strMatcher0, 0);
      StrBuilder strBuilder3 = strBuilder2.append((double) (-1));
      int int1 = 9;
      char char0 = strBuilder0.charAt(9);
      char[] charArray0 = strBuilder0.toCharArray();
      int int2 = strBuilder0.length();
      StrBuilder strBuilder4 = strBuilder0.deleteAll('D');
      StrBuilder strBuilder5 = strBuilder0.trim();
      // Undeclared exception!
      try { 
        strBuilder4.append(strBuilder0, 20, 9);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      boolean boolean0 = strBuilder0.startsWith("");
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("WHi}6S3)a\"j1D&");
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("hDI!.`");
      StrBuilder strBuilder2 = strBuilder1.deleteAll(strMatcher0);
      Object object0 = new Object();
      StrBuilder strBuilder3 = strBuilder0.append(object0);
      char char0 = '';
      StrBuilder strBuilder4 = strBuilder0.append('');
      int int0 = 3452;
      char char1 = 'I';
      // Undeclared exception!
      try { 
        strBuilder4.insert(3452, 'I');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3452
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      String string0 = "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter";
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      Integer integer0 = new Integer(115);
      StrBuilder strBuilder1 = strBuilder0.insert(0, (Object) integer0);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      String string1 = "Invalid offset: ";
      StrBuilder strBuilder2 = strBuilder1.setNewLineText("Invalid offset: ");
      Object[] objectArray0 = new Object[2];
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.previous();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.capacity();
      int int1 = strBuilder0.hashCode();
      StrBuilder strBuilder1 = strBuilder0.append('m');
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight(32, 32, '_');
      StrBuilder strBuilder3 = strBuilder2.clear();
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      StrBuilder strBuilder4 = strBuilder3.replaceFirst(strMatcher0, "");
      StrBuilder strBuilder5 = strBuilder4.setNewLineText("");
      StrBuilder strBuilder6 = strBuilder2.appendFixedWidthPadRight(32, 2668, '');
      char[] charArray0 = new char[5];
      charArray0[0] = 'm';
      charArray0[1] = 'm';
      charArray0[2] = '_';
      charArray0[3] = '_';
      charArray0[4] = 'm';
      // Undeclared exception!
      try { 
        strBuilder4.insert(2668, charArray0, 0, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[6];
      charArray0[0] = 'a';
      charArray0[1] = '`';
      charArray0[2] = '[';
      charArray0[3] = 'b';
      charArray0[4] = 'X';
      charArray0[5] = 'x';
      // Undeclared exception!
      try { 
        strBuilder0.insert(0, charArray0, 1303, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: 1303
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterString("");
      String string0 = null;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strBuilder_StrBuilderTokenizer0, (String) null);
      StringBuffer stringBuffer0 = null;
      StrBuilder strBuilder2 = strBuilder1.append((StringBuffer) null);
      String string1 = strBuilder2.toString();
      int int0 = 2;
      // Undeclared exception!
      try { 
        strBuilder1.insert(2, true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.util.prefs.PreferencesFactory");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[9];
      charArray0[0] = 'T';
      charArray0[1] = '+';
      charArray0[2] = ']';
      charArray0[3] = 't';
      charArray0[4] = 'V';
      charArray0[5] = '/';
      charArray0[6] = 'x';
      charArray0[7] = 'f';
      charArray0[8] = 'M';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, (-746), (-1122));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 1;
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      char[] charArray0 = new char[7];
      charArray0[0] = '/';
      charArray0[1] = 'Q';
      StrTokenizer strTokenizer0 = strBuilder1.asTokenizer();
      charArray0[2] = '%';
      charArray0[3] = 'w';
      charArray0[4] = 'l';
      charArray0[5] = 'A';
      charArray0[6] = 'w';
      // Undeclared exception!
      try { 
        strBuilder1.getChars(138, (-1129), charArray0, (-1129));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1129
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.trim();
      String string0 = strBuilder1.toString();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      char[] charArray0 = new char[6];
      charArray0[0] = 'C';
      charArray0[1] = '`';
      charArray0[2] = 'C';
      charArray0[3] = 'C';
      charArray0[4] = 'C';
      charArray0[5] = 'C';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, (-1939), 2303);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      String string0 = null;
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.append((Object) null);
      int int0 = Integer.MAX_VALUE;
      String string1 = strBuilder0.rightString(Integer.MAX_VALUE);
      String string2 = strBuilder0.getNewLineText();
      StrBuilder strBuilder2 = strBuilder0.deleteAll('Y');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setQuoteMatcher(strMatcher0);
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators((Iterator) strTokenizer0, (String) null);
      StrBuilder strBuilder4 = strBuilder3.append((String) null);
      StrBuilder strBuilder5 = strBuilder4.append('D');
      char char0 = ':';
      char[] charArray0 = new char[4];
      charArray0[0] = ':';
      charArray0[1] = ':';
      charArray0[2] = ':';
      charArray0[3] = ':';
      // Undeclared exception!
      try { 
        strBuilder1.insert(Integer.MAX_VALUE, charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2147483647
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = new StringBuffer(" AR");
      char[] charArray0 = new char[5];
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) " AR", (-1024), 'x');
      charArray0[0] = 'H';
      IntStream intStream0 = stringBuffer0.chars();
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((-3171), (-1024), 'H');
      StrBuilder strBuilder3 = strBuilder2.append('x');
      charArray0[1] = '6';
      charArray0[2] = '^';
      charArray0[3] = 'P';
      charArray0[4] = 'o';
      StringBuffer stringBuffer1 = stringBuffer0.append(charArray0);
      StrBuilder strBuilder4 = strBuilder0.append(stringBuffer0);
      String string0 = strBuilder4.getNewLineText();
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      boolean boolean0 = strBuilder4.contains((StrMatcher) strMatcher_CharSetMatcher0);
      String string1 = strBuilder0.rightString(0);
      String string2 = strBuilder4.getNewLineText();
      // Undeclared exception!
      try { 
        strBuilder1.insert((-1024), (float) (-1024));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1024
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      int int0 = 114;
      StrBuilder strBuilder0 = new StrBuilder(114);
      StrBuilder strBuilder1 = strBuilder0.setNullText("Invalid offset: ");
      char[] charArray0 = new char[3];
      charArray0[0] = 'e';
      charArray0[1] = 'H';
      charArray0[2] = '~';
      StrBuilder strBuilder2 = strBuilder1.append(charArray0);
      StringBuffer stringBuffer0 = new StringBuffer("Invalid offset: ");
      // Undeclared exception!
      try { 
        strBuilder2.insert((-479), (-2123));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -479
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-41));
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder1.append((-41));
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('2');
      char[] charArray0 = new char[7];
      charArray0[2] = '2';
      charArray0[3] = '2';
      charArray0[4] = '2';
      charArray0[5] = 'd';
      StrBuilder strBuilder3 = strBuilder0.replaceAll("YL", "YL");
      charArray0[6] = '2';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrMatcher strMatcher1 = StrMatcher.stringMatcher((String) null);
      StrBuilder strBuilder4 = strBuilder1.replaceFirst((StrMatcher) strMatcher_CharMatcher0, "?W[c;g~<&;4@[R`");
      StrBuilder strBuilder5 = strBuilder0.setNullText("09vjg;%x[5nQQ$");
      int int0 = strBuilder0.indexOf('2', (-41));
      String string0 = strBuilder4.toString();
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, (String) null);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Collection) linkedList0, (String) null);
      StrBuilder strBuilder3 = strBuilder0.replaceFirst((String) null, (String) null);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder3.new StrBuilderWriter();
      char[] charArray0 = new char[7];
      charArray0[0] = '/';
      charArray0[1] = 't';
      charArray0[2] = 'x';
      charArray0[3] = ';';
      charArray0[4] = 'W';
      charArray0[5] = 'X';
      charArray0[6] = 'G';
      strBuilder_StrBuilderWriter0.write(charArray0);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("odM27", (-1562), (-1562));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      int int0 = 1693;
      StrBuilder strBuilder0 = new StrBuilder(1693);
      int int1 = 273;
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder2 = strBuilder0.setLength(273);
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrBuilder strBuilder3 = strBuilder2.deleteFirst(strMatcher0);
      boolean boolean0 = strBuilder2.equals((Object) strBuilder0);
      String string0 = null;
      StringBuffer stringBuffer0 = null;
      try {
        stringBuffer0 = new StringBuffer((CharSequence) null);
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(true);
      String string0 = "$Q$z!_E:5T2;|0baH'";
      StrBuilder strBuilder2 = strBuilder1.deleteFirst("$Q$z!_E:5T2;|0baH'");
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrBuilder strBuilder3 = strBuilder0.trim();
      int int0 = strBuilder2.indexOf(strMatcher0, 117);
      int int1 = 0;
      // Undeclared exception!
      try { 
        strBuilder3.substring(1729, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.append(0.0);
      String string0 = "";
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("");
      StrMatcher strMatcher0 = StrMatcher.charMatcher('7');
      int int1 = strBuilder0.indexOf((StrMatcher) strMatcher_StringMatcher0);
      boolean boolean0 = strBuilder0.isEmpty();
      StrBuilder strBuilder2 = strBuilder0.appendNull();
      int int2 = (-962);
      char[] charArray0 = new char[8];
      charArray0[0] = '7';
      charArray0[1] = '7';
      charArray0[2] = '7';
      charArray0[3] = '7';
      charArray0[4] = '7';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      charArray0[5] = 'q';
      charArray0[6] = '7';
      charArray0[7] = '7';
      StrBuilder strBuilder3 = strBuilder0.append(charArray0);
      // Undeclared exception!
      try { 
        strBuilder0.setLength((-962));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -962
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder2 = strBuilder1.deleteFirst(">c_?{)'YhYLZQ@(");
      StrBuilder strBuilder3 = new StrBuilder((-4153));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder3.new StrBuilderTokenizer();
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrBuilder strBuilder4 = strBuilder3.replaceAll((StrMatcher) strMatcher_NoMatcher0, ">c_?{)'YhYLZQ@(");
      String string0 = strBuilder4.rightString(4457);
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      int int0 = strBuilder2.lastIndexOf(strMatcher0);
      int int1 = strBuilder0.hashCode();
      StrBuilder strBuilder5 = strBuilder0.appendFixedWidthPadLeft((-1), (-1523), 'w');
      char[] charArray0 = new char[9];
      charArray0[0] = 'w';
      charArray0[1] = 'w';
      charArray0[2] = 'w';
      charArray0[3] = 'w';
      charArray0[4] = 'w';
      charArray0[5] = 'K';
      charArray0[6] = 'w';
      charArray0[7] = 'w';
      charArray0[8] = 'w';
      StrBuilder strBuilder6 = strBuilder0.append(charArray0);
      int int2 = strBuilder3.indexOf((StrMatcher) strMatcher_NoMatcher0, (-4153));
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("\"jd");
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_TrimMatcher0);
      StrBuilder strBuilder1 = strBuilder0.append('z');
      Reader reader0 = strBuilder1.asReader();
      StrBuilder strBuilder2 = strBuilder0.append((-1));
      Reader reader1 = strBuilder0.asReader();
      StrBuilder strBuilder3 = strBuilder2.replaceFirst((StrMatcher) strMatcher_TrimMatcher0, ";Qkso,6Zi!");
      String string0 = strBuilder1.toString();
      int int1 = strBuilder2.capacity();
      int int2 = strBuilder3.indexOf("\"jdz-1");
      StrBuilder strBuilder4 = strBuilder3.replaceFirst((StrMatcher) strMatcher_TrimMatcher0, ";Qkso,6Zi!");
      strBuilder3.size = 35;
      int int3 = strBuilder3.lastIndexOf("", (-1));
      int int4 = strBuilder1.lastIndexOf((StrMatcher) strMatcher_TrimMatcher0);
      StrBuilder strBuilder5 = strBuilder0.deleteFirst('p');
      // Undeclared exception!
      try { 
        strBuilder3.validateRange(108, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) "P", 32, 'A');
      StringBuffer stringBuffer0 = new StringBuffer("");
      StringBuffer stringBuffer1 = stringBuffer0.insert(0, 115);
      StringBuffer stringBuffer2 = new StringBuffer(stringBuffer0);
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer2, 1941, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = "o_@Ot";
      StrBuilder strBuilder1 = strBuilder0.append("o_@Ot");
      int int1 = strBuilder0.indexOf('R', 406);
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft(0, 0, 'L');
      StrBuilder strBuilder3 = strBuilder1.append((float) 406);
      String string1 = "krh}D>Sf:ar{hKrF";
      String string2 = strBuilder0.midString(0, 0);
      StrBuilder strBuilder4 = strBuilder3.replaceAll("SunOS", "krh}D>Sf:ar{hKrF");
      StrBuilder strBuilder5 = strBuilder0.insert(3, (float) 406);
      StrBuilder strBuilder6 = strBuilder4.appendNewLine();
      StrBuilder strBuilder7 = strBuilder4.appendFixedWidthPadRight((Object) "o_@Ot", 0, 'R');
      // Undeclared exception!
      try { 
        strBuilder7.append(strBuilder5, (-1368), (-109));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      String string0 = "Mac OS X";
      StrBuilder strBuilder0 = new StrBuilder("Mac OS X");
      StrBuilder strBuilder1 = strBuilder0.append("Mac OS X");
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight((Object) strBuilder0, (-1), 'r');
      // Undeclared exception!
      try { 
        strBuilder2.append(strBuilder1, (-1), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[5];
      charArray0[0] = 'R';
      charArray0[1] = '}';
      charArray0[2] = 'Q';
      charArray0[3] = 'D';
      charArray0[4] = 'q';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 0, 481);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = strBuilder0.indexOf('h', 2500);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("dmWpETHA.0zY!4");
      int int0 = strBuilder0.hashCode();
      int int1 = 1501;
      Integer integer0 = new Integer(1501);
      StrBuilder strBuilder1 = strBuilder0.append((Object) integer0);
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray(1501, 1501);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.append(true);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      boolean boolean0 = strBuilder1.contains('?');
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.append(0);
      char[] charArray0 = new char[6];
      charArray0[0] = 'v';
      strBuilder0.getChars(0, 0, charArray0, 0);
      charArray0[1] = ']';
      charArray0[2] = ')';
      charArray0[3] = 'e';
      charArray0[4] = '>';
      charArray0[5] = 'a';
      StrBuilder strBuilder2 = strBuilder1.append(charArray0, 0, 0);
      char[] charArray1 = new char[0];
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) ']';
      objectArray0[1] = (Object) strBuilder1;
      objectArray0[2] = (Object) '>';
      objectArray0[3] = (Object) 'e';
      objectArray0[4] = (Object) ')';
      objectArray0[5] = (Object) 'v';
      objectArray0[6] = (Object) 'e';
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.next();
      objectArray0[7] = (Object) "0";
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators(objectArray0, "h'.&");
      // Undeclared exception!
      try { 
        strBuilder0.insert(1085, charArray1, (-5616), (-5616));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1085
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(101);
      StrBuilder strBuilder1 = strBuilder0.clear();
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, (-964), (-547));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      int int0 = 695;
      StrBuilder strBuilder0 = new StrBuilder(695);
      StrBuilder strBuilder1 = strBuilder0.replaceAll("", "");
      int int1 = (-120);
      char char0 = 'Z';
      // Undeclared exception!
      try { 
        strBuilder0.charAt((-120));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -120
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      String string0 = "Mac OS X";
      StrBuilder strBuilder0 = new StrBuilder("Mac OS X");
      StrBuilder strBuilder1 = strBuilder0.append("Mac OS X");
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "Mac OS X");
      // Undeclared exception!
      try { 
        strBuilder1.append(stringBuffer0, (-3898), (-3898));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "y5L.r`RtP:`U<5");
      StrBuilder strBuilder2 = new StrBuilder();
      StrBuilder strBuilder3 = strBuilder2.replaceAll("", "");
      StrBuilder strBuilder4 = new StrBuilder();
      StrBuilder strBuilder5 = strBuilder4.append("");
      // Undeclared exception!
      try { 
        strBuilder2.deleteCharAt(1984);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1984
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[2];
      charArray0[0] = '3';
      charArray0[1] = '\"';
      int int0 = 784;
      StrBuilder strBuilder1 = strBuilder0.appendPadding(0, 'z');
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 784, 784);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 784
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      String string0 = "ae;p\\F5\"Enu<";
      StrBuilder strBuilder0 = new StrBuilder("ae;pF5\"Enu<");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrBuilder strBuilder1 = strBuilder0.append(0.0);
      strBuilder_StrBuilderReader0.mark(0);
      StrBuilder strBuilder2 = strBuilder0.append("ae;pF5\"Enu<");
      StrBuilder strBuilder3 = strBuilder2.ensureCapacity(0);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-2321), 1594.3994F);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2321
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("", "");
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("|E");
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("|E");
      StrBuilder strBuilder2 = strBuilder0.deleteFirst("|E");
      // Undeclared exception!
      try { 
        strBuilder0.insert(5, 702.0F);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 5
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrTokenizer");
      int int0 = (-2580);
      char char0 = '{';
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight(Integer.MAX_VALUE, Integer.MAX_VALUE, '{');
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      int int0 = 2233;
      String string0 = strBuilder0.midString(2233, 2233);
      boolean boolean0 = strBuilder0.contains("java.home");
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder1 = strBuilder0.append('W');
      char[] charArray0 = new char[0];
      int int1 = 44;
      // Undeclared exception!
      try { 
        strBuilder0.insert(48, charArray0, 44, (-554));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 48
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      char[] charArray0 = new char[4];
      charArray0[0] = '=';
      charArray0[1] = '7';
      charArray0[2] = 'X';
      charArray0[3] = '7';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.setNullText("");
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 34);
      StrBuilder strBuilder2 = strBuilder0.trim();
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.vm.version");
      StrBuilder strBuilder1 = strBuilder0.replaceAll('8', '/');
      StrBuilder strBuilder2 = strBuilder0.setNullText((String) null);
      StrBuilder strBuilder3 = strBuilder2.appendNull();
      boolean boolean0 = strBuilder0.startsWith("]3Uq18CQ41:vRVf1X");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("Pzu(~");
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      String string0 = "\"u3/W37Q0)j@#JYIo";
      StrBuilder strBuilder0 = new StrBuilder("\"u3/W37Q0)j@#JYIo");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      int int0 = 116;
      StrBuilder strBuilder2 = strBuilder0.replace(0, 116, "\"u3/W37Q0)j@#JYIo");
      StrBuilder strBuilder3 = strBuilder0.append(0L);
      String string1 = "{}";
      StrBuilder strBuilder4 = strBuilder0.deleteAll("{}");
      String string2 = "Index: ";
      StringBuffer stringBuffer0 = new StringBuffer("\"u3/W37Q0)j@#JYIo");
      // Undeclared exception!
      try { 
        strBuilder1.append(stringBuffer0, 0, 116);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = new StringBuffer(0);
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder2 = strBuilder1.append(stringBuffer0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder3 = strBuilder0.appendWithSeparators((Collection) linkedList0, "qv!Tx$I2Ia`FzLW");
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) stringBuffer0;
      objectArray0[2] = (Object) strBuilder0;
      String string0 = "java.awt.fonts";
      StrBuilder strBuilder4 = strBuilder0.appendWithSeparators(objectArray0, "java.awt.fonts");
      boolean boolean0 = strBuilder0.contains((StrMatcher) null);
      // Undeclared exception!
      try { 
        strBuilder3.replace((-2306), 0, "{}");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2306
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = strBuilder0.indexOf((StrMatcher) null, 0);
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) strBuilder0;
      objectArray0[3] = (Object) strBuilder0;
      objectArray0[4] = (Object) strBuilder0;
      StrBuilder strBuilder1 = strBuilder0.append((-1L));
      objectArray0[5] = (Object) "";
      objectArray0[6] = (Object) "";
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators(objectArray0, "hgH");
      StrBuilder strBuilder3 = strBuilder2.trim();
      int int1 = strBuilder0.lastIndexOf("C7gtb4");
      int int2 = strBuilder0.lastIndexOf("sj&9Fk", 0);
      StrBuilder strBuilder4 = strBuilder2.appendWithSeparators(objectArray0, "C7gtb4");
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      boolean boolean1 = strBuilder0.contains('d');
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      StrBuilder strBuilder2 = strBuilder1.setCharAt(0, 'd');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      String string0 = "Qt4rcO";
      StrBuilder strBuilder0 = new StrBuilder("Qt4rcO");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "Qt4rcO");
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charBuffer0);
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.StringCharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(44);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[3];
      charArray0[0] = 'P';
      charArray0[1] = 'y';
      charArray0[2] = 'Y';
      strBuilder_StrBuilderWriter0.write(charArray0, 0, 1);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      strBuilder_StrBuilderWriter0.write(0);
      strBuilder_StrBuilderWriter0.close();
      char[] charArray1 = new char[3];
      char char0 = 'G';
      StrBuilder strBuilder1 = strBuilder0.append("p9fbR1.n V`");
      charArray1[0] = 'G';
      StrBuilder strBuilder2 = strBuilder1.append(stringBuffer0);
      charArray1[1] = 'Z';
      charArray1[2] = 'B';
      StrBuilder strBuilder3 = strBuilder0.append(charArray1);
      StringBuffer stringBuffer1 = new StringBuffer(1257);
      int int0 = 44;
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer1, 44, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      String string0 = strBuilder0.getNewLineText();
      StrBuilder strBuilder1 = strBuilder0.append(1);
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrBuilder strBuilder2 = strBuilder1.deleteAll("");
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("tZ6_6mK/wff4[");
      StrBuilder strBuilder3 = strBuilder1.append((float) 1);
      StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher0, "");
      StrBuilder strBuilder5 = strBuilder2.append(0);
      StrBuilder strBuilder6 = strBuilder5.reverse();
      char[] charArray0 = new char[5];
      StrBuilder strBuilder7 = strBuilder2.insert(0, 1.5);
      charArray0[0] = 'k';
      charArray0[1] = 'q';
      charArray0[2] = 'w';
      charArray0[3] = 'a';
      charArray0[4] = '+';
      StrBuilder strBuilder8 = strBuilder6.append(charArray0, 3, 1);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 1805;
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(1805);
      Writer writer0 = strBuilder0.asWriter();
      char char0 = 's';
      StrBuilder strBuilder2 = strBuilder0.deleteFirst('s');
      int int1 = 0;
      int int2 = 2916;
      // Undeclared exception!
      try { 
        strBuilder2.append(strBuilder1, 0, 2916);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(115);
      boolean boolean0 = strBuilder0.contains("");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) "", 115, 'b');
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      int int0 = strBuilder0.indexOf((StrMatcher) strMatcher_NoMatcher0);
      String string0 = strBuilder0.leftString(115);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[0];
      int int1 = 563;
      int int2 = strBuilder_StrBuilderReader0.read();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 563, (-1));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('8');
      StrBuilder strBuilder2 = strBuilder0.append((float) '8');
      int int0 = StrBuilder.CAPACITY;
      String string0 = strBuilder0.getNewLineText();
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrBuilder strBuilder3 = strBuilder1.deleteFirst(strMatcher0);
      StrBuilder strBuilder4 = strBuilder2.ensureCapacity(1777);
      StrBuilder strBuilder5 = strBuilder1.append((char[]) null);
      StrBuilder strBuilder6 = strBuilder5.appendFixedWidthPadRight(3, (int) '8', '=');
      StrBuilder strBuilder7 = strBuilder1.append("([Ip]L");
      StrBuilder strBuilder8 = strBuilder0.append("");
      StrBuilder strBuilder9 = strBuilder5.append((Object) strBuilder2);
      int int1 = strBuilder1.lastIndexOf('8', 32);
      StringBuffer stringBuffer0 = strBuilder5.toStringBuffer();
      int int2 = strBuilder5.lastIndexOf('s');
      StrBuilder strBuilder10 = strBuilder5.deleteAll('B');
      String string1 = strBuilder2.leftString(83);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder1;
      objectArray0[2] = (Object) strBuilder1;
      objectArray0[3] = (Object) strBuilder1;
      objectArray0[4] = (Object) strBuilder1;
      objectArray0[5] = (Object) strBuilder1;
      objectArray0[6] = (Object) strBuilder1;
      objectArray0[7] = (Object) strBuilder0;
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators(objectArray0, "PMQYAL+V$*");
      String string0 = strBuilder0.leftString((-937));
      boolean boolean0 = strBuilder0.equals((Object) "");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(1L);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 9;
      StrBuilder strBuilder1 = strBuilder0.deleteAll("O:QJeKVswHgMdQ.f");
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrBuilder strBuilder2 = strBuilder1.replace(strMatcher0, (String) null, 0, 0, 0);
      String string0 = strBuilder0.substring(0, 9);
      String string1 = strBuilder2.toString();
      boolean boolean0 = strBuilder0.contains("AAI\"8[QxYOSZmq");
      char[] charArray0 = strBuilder0.toCharArray();
      StrBuilder strBuilder3 = strBuilder2.deleteAll('C');
      StrMatcher strMatcher1 = StrMatcher.charMatcher('?');
      boolean boolean1 = strBuilder2.endsWith("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 0, 9);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 9
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[9];
      charArray0[0] = 'L';
      charArray0[1] = 'F';
      charArray0[2] = 'S';
      charArray0[3] = 't';
      charArray0[4] = 'A';
      charArray0[5] = 'o';
      charArray0[6] = '>';
      charArray0[7] = ')';
      charArray0[8] = '[';
      strBuilder0.buffer = charArray0;
      char[] charArray1 = strBuilder0.toCharArray();
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("?rKQ6KSJR");
      StrBuilder strBuilder2 = strBuilder1.append(false);
      boolean boolean0 = strBuilder0.equals((Object) "(2D3 :1BtJ2Y9%");
      char[] charArray0 = strBuilder1.toCharArray();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder3 = strBuilder1.appendWithSeparators((Collection) linkedList0, "?rKQ6KSJR");
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("@cdKDlV");
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("@cdKDlV");
      StrBuilder strBuilder2 = strBuilder0.appendPadding((-744), '9');
      StrBuilder strBuilder3 = strBuilder2.trim();
      StrBuilder strBuilder4 = strBuilder3.appendFixedWidthPadRight((Object) "@cdKDlV", (-294), 'y');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterMatcher(strMatcher0);
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        stringBuffer0.insert((-1062), (float) (-1062));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1062
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("QT:~OVT(Ao~49@UIG");
      StrBuilder strBuilder1 = strBuilder0.replaceAll("QT:~OVT(Ao~49@UIG", ":r+U");
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder2 = strBuilder0.append((Object) "QT:~OVT(Ao~49@UIG");
      char char0 = 'a';
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadLeft((Object) reader0, 4, 'a');
      StrBuilder strBuilder4 = strBuilder2.appendNull();
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("3,@I0<Ki>,`t9\"T2");
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("K!");
      int int0 = strBuilder4.lastIndexOf(strMatcher0, 4);
      boolean boolean0 = strBuilder3.equals((Object) ":r+U");
      StrBuilder strBuilder5 = strBuilder3.setLength(4);
      int int1 = 2004;
      int int2 = 2275;
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder2, 2004, 2275);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrMatcher$CharSetMatcher");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[6];
      charArray0[0] = ']';
      charArray0[1] = 'N';
      charArray0[2] = '\\';
      charArray0[3] = '{';
      charArray0[4] = '?';
      charArray0[5] = '2';
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset(charArray0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "org.apache.commons.lang.text.StrMatcher$CharSetMatcher");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrBuilder strBuilder2 = strBuilder0.replaceFirst("org.apache.commons.lang.text.StrMatcher$CharSetMatcher", "");
      long long0 = strBuilder_StrBuilderReader0.skip(2683L);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[7];
      charArray0[0] = 'g';
      charArray0[1] = 'P';
      charArray0[2] = 'I';
      charArray0[3] = ';';
      charArray0[4] = 'D';
      charArray0[5] = '`';
      charArray0[6] = 'f';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0, 0, 0);
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(object0, 32, '*');
      strBuilder_StrBuilderReader0.reset();
      String string0 = strBuilder0.rightString(4979);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      LinkedList<StrBuilder> linkedList0 = new LinkedList<StrBuilder>();
      int int0 = (-3162);
      StrBuilder strBuilder1 = strBuilder0.append((-3162));
      String string0 = strBuilder1.rightString((-3162));
      // Undeclared exception!
      try { 
        strBuilder1.replace((-3162), (-3162), "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3162
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "");
      String string0 = "length must be valid";
      String string1 = strBuilder0.rightString(0);
      // Undeclared exception!
      try { 
        strBuilder0.insert(1, false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceAll('[', '[');
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("yv@-$eHD#Rs5&kqM3");
      int int0 = 1934;
      strBuilder0.validateIndex(0);
      StrBuilder strBuilder1 = strBuilder0.insert(0, "");
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight(1934, 1934, 'H');
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      int int1 = strBuilder2.indexOf(strMatcher0);
      String string0 = strBuilder0.substring(0, 0);
      // Undeclared exception!
      try { 
        strBuilder2.charAt(Integer.MAX_VALUE);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2147483647
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      int int0 = 1507;
      StrBuilder strBuilder0 = new StrBuilder(1507);
      String string0 = "Rtc*`";
      StrBuilder strBuilder1 = strBuilder0.append("Rtc*`");
      StrBuilder strBuilder2 = new StrBuilder("Rtc*`");
      char[] charArray0 = new char[1];
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      int int1 = strBuilder1.lastIndexOf(strMatcher0);
      StrBuilder strBuilder3 = strBuilder2.replaceFirst("Rtc*`", "Rtc*`");
      char char0 = '3';
      charArray0[0] = '3';
      StrBuilder strBuilder4 = strBuilder2.append(charArray0);
      // Undeclared exception!
      try { 
        strBuilder4.append("Rtc*`", (-1), 1507);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = null;
      StrBuilder strBuilder1 = strBuilder0.append(0.0F);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher((char[]) null);
      StrBuilder strBuilder2 = strBuilder1.replaceFirst(strMatcher0, "startIndex must be valid");
      StrBuilder strBuilder3 = strBuilder2.append((char[]) null, 34, 34);
      StrBuilder strBuilder4 = strBuilder3.appendPadding(34, '<');
      StrBuilder strBuilder5 = strBuilder0.append((char[]) null);
      int int0 = (-189);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-189), (long) (-189));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -189
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("v");
      StrBuilder strBuilder1 = strBuilder0.deleteAll('5');
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("v");
      char[] charArray0 = new char[5];
      charArray0[0] = '5';
      charArray0[1] = '5';
      charArray0[2] = '5';
      charArray0[3] = '5';
      charArray0[4] = '5';
      StrBuilder strBuilder2 = strBuilder0.append(charArray0, 0, 0);
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher("v");
      int int0 = strBuilder1.indexOf(strMatcher0, 1790);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid length: ");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("Invalid length: ", "Invalid length: ");
      int int0 = (-1234);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1234), (long) (-1234));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1234
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-635));
      char[] charArray0 = new char[7];
      charArray0[0] = ',';
      charArray0[1] = 'I';
      charArray0[2] = '#';
      charArray0[3] = '<';
      charArray0[4] = 'p';
      charArray0[5] = 'j';
      charArray0[6] = 'R';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      String string0 = strBuilder0.midString(0, 32);
      // Undeclared exception!
      try { 
        strBuilder0.insert(32, (-1028L));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.clear();
      String string0 = strBuilder1.midString(117, 117);
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight(1249, 1249, '-');
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder3 = strBuilder1.appendWithSeparators((Collection) linkedList0, "");
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.insert(0, (double) 0);
      StrBuilder strBuilder2 = strBuilder1.delete(0, 0);
      StrBuilder strBuilder3 = strBuilder1.append(strBuilder0);
      StrBuilder strBuilder4 = new StrBuilder("bYh[T_<wMs");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder4.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.nextToken();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "bYh[T_<wMs");
      StrBuilder strBuilder5 = strBuilder3.append(stringBuffer0);
      StrBuilder strBuilder6 = strBuilder3.appendNewLine();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      StrBuilder strBuilder7 = strBuilder0.replaceFirst((StrMatcher) null, "Index: ");
      strBuilder_StrBuilderWriter0.write("lMF>U1`SNNa_?g");
      StrBuilder strBuilder8 = strBuilder7.clear();
      StrBuilder strBuilder9 = strBuilder0.replaceAll("lMF>U1`SNNa_?g", "Index: ");
      StringBuffer stringBuffer1 = new StringBuffer();
      StrBuilder strBuilder10 = strBuilder4.appendFixedWidthPadLeft(0, 0, 'N');
      StrBuilder strBuilder11 = strBuilder7.append(stringBuffer1, 0, 0);
      StrBuilder strBuilder12 = strBuilder11.replace((StrMatcher) null, "Dq&X5j-w%Z1*lET0O15", 0, 0, 0);
      String string1 = strBuilder5.substring(0, 0);
      StrBuilder strBuilder13 = strBuilder12.replaceFirst((StrMatcher) null, ")2vH>O.9b'GeRQ");
      StrBuilder strBuilder14 = strBuilder13.replaceFirst((StrMatcher) null, "Index: ");
      StrBuilder strBuilder15 = strBuilder8.replaceFirst((StrMatcher) null, "bYh[T_<wMs");
      int int0 = strBuilder5.lastIndexOf(")2vH>O.9b'GeRQ", (-18));
      Reader reader0 = strBuilder15.asReader();
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      String string0 = "java.vm.specification.version";
      StrBuilder strBuilder0 = new StrBuilder("java.vm.specification.version");
      int int0 = (-4059);
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("java.vm.specification.version");
      char[] charArray0 = new char[4];
      charArray0[0] = 'O';
      charArray0[1] = 'O';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("java.vm.specification.version");
      charArray0[2] = 'O';
      charArray0[3] = 'O';
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher(charArray0);
      int int1 = strBuilder0.lastIndexOf(strMatcher0, (-416));
      StrBuilder strBuilder1 = strBuilder0.appendPadding((-4059), 'O');
      StringBuffer stringBuffer0 = new StringBuffer(32);
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft((-4059), 1660, 'O');
      StrBuilder strBuilder3 = new StrBuilder("-id_");
      StrBuilder strBuilder4 = strBuilder2.appendFixedWidthPadLeft((Object) strBuilder3, 1660, 'i');
      StrBuilder strBuilder5 = strBuilder0.append(stringBuffer0);
      // Undeclared exception!
      try { 
        strBuilder1.append(stringBuffer0, 73, (-4059));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1154);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst((StrMatcher) null);
      StrBuilder strBuilder2 = strBuilder0.ensureCapacity(1154);
      int int0 = strBuilder2.lastIndexOf((StrMatcher) null);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("H");
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrBuilder strBuilder2 = strBuilder1.minimizeCapacity();
      StrBuilder strBuilder3 = strBuilder1.minimizeCapacity();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder3.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      StrBuilder strBuilder4 = strBuilder3.append((-219.2591254430442));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      char[] charArray0 = new char[5];
      charArray0[0] = 'P';
      charArray0[1] = '8';
      charArray0[2] = 'n';
      charArray0[3] = '#';
      charArray0[4] = '7';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 2641, 3427);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder1 = strBuilder0.append(true);
      StringBuffer stringBuffer1 = stringBuffer0.append((Object) "Invalid startIndex: ");
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 3301, 4515);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[2];
      charArray0[0] = 'g';
      char char0 = ' ';
      charArray0[1] = ' ';
      char[] charArray1 = strBuilder0.getChars(charArray0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      String string0 = "user.region";
      StrMatcher strMatcher2 = StrMatcher.stringMatcher("user.region");
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset("user.region");
      StrMatcher strMatcher3 = StrMatcher.charSetMatcher("))y*gu3");
      String[] stringArray0 = strBuilder_StrBuilderTokenizer0.getTokenArray();
      StrMatcher strMatcher4 = StrMatcher.stringMatcher("))y*gu3");
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      String string1 = "";
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Iterator) strBuilder_StrBuilderTokenizer0, "");
      // Undeclared exception!
      try { 
        strBuilder1.setCharAt((-472), ' ');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -472
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.lastIndexOf("&^#A`[!", (-1981));
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("U#d7[Vn:]eGr%");
      int int0 = strBuilder0.lastIndexOf("U#d7[Vn:]eGr%");
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      String string0 = strBuilder0.toString();
      char char0 = '&';
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('&', '{');
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder2 = strBuilder0.delete(0, 3324);
      // Undeclared exception!
      try { 
        strBuilder2.setCharAt(3324, '&');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3324
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "java.vm.vendor");
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder2 = strBuilder0.deleteAll("java.vm.vendor");
      StrBuilder strBuilder3 = strBuilder0.append((char[]) null);
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder4 = strBuilder2.append(strBuilder0, 0, 0);
      char[] charArray0 = strBuilder4.toCharArray(0, 0);
      StrBuilder strBuilder5 = strBuilder4.trim();
      StrBuilder strBuilder6 = strBuilder5.deleteAll('g');
      StrBuilder strBuilder7 = strBuilder2.appendFixedWidthPadRight(0, 2437, 'g');
      StrBuilder strBuilder8 = strBuilder4.deleteCharAt(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder7.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset("java.vm.vendor");
      StrBuilder strBuilder9 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "z");
      Object object0 = new Object();
      StrBuilder strBuilder10 = strBuilder0.append((Object) strBuilder9);
      StrBuilder strBuilder11 = strBuilder7.appendFixedWidthPadLeft(object0, 0, 'f');
      boolean boolean0 = strBuilder9.isEmpty();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder9.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      int int0 = (-3305);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-3305), (String) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3305
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      String string0 = "d(4~l/yP/z~6";
      StrBuilder strBuilder0 = new StrBuilder("d(4~l/yP/z~6");
      StrBuilder strBuilder1 = new StrBuilder(0);
      // Undeclared exception!
      try { 
        strBuilder1.charAt((-1463));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1463
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 5;
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(5);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 5
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(345);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[3];
      StrBuilder strBuilder1 = strBuilder0.deleteAll("8q-4A%4/Sok6^NI");
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) "8q-4A%4/Sok6^NI");
      charArray0[0] = '5';
      charArray0[1] = '\'';
      charArray0[2] = 'V';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      IntStream intStream0 = charBuffer0.chars();
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0);
      StringBuffer stringBuffer0 = new StringBuffer(charBuffer1);
      Writer writer1 = strBuilder_StrBuilderWriter0.append((CharSequence) stringBuffer0);
      strBuilder_StrBuilderWriter0.write(345);
      strBuilder_StrBuilderWriter0.flush();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(4302L);
      int int0 = strBuilder_StrBuilderReader0.read();
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(846);
      StrBuilder strBuilder1 = strBuilder0.deleteAll("");
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) "", 3203, 'P');
      StrBuilder strBuilder2 = strBuilder0.setLength(44);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      int int0 = 34;
      StrBuilder strBuilder0 = new StrBuilder(34);
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("OS/2");
      // Undeclared exception!
      try { 
        strBuilder0.substring(0, (-1624));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt((-1401));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1401
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[2];
      charArray0[0] = 'E';
      charArray0[1] = '1';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0, 0, 0);
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[1];
      charArray0[0] = 'E';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      int int0 = (-2024);
      StrBuilder strBuilder0 = new StrBuilder((-2024));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(object0, (-2024), '<');
      char char0 = 't';
      int int1 = 0;
      StrBuilder strBuilder2 = strBuilder0.insert(0, (double) (-2024));
      StrBuilder strBuilder3 = strBuilder1.replaceFirst('<', 't');
      int int2 = 0;
      StrBuilder strBuilder4 = strBuilder3.append(strBuilder0);
      // Undeclared exception!
      try { 
        strBuilder0.substring(0, (-2024));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 2;
      // Undeclared exception!
      try { 
        strBuilder0.insert(2, (-1.0));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2212);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0, 1);
      int int1 = strBuilder0.lastIndexOf('a', 39);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      String string0 = "";
      char[] charArray0 = new char[9];
      charArray0[0] = 'c';
      charArray0[1] = 'l';
      charArray0[2] = '{';
      charArray0[3] = 'R';
      charArray0[4] = '#';
      charArray0[5] = '2';
      charArray0[6] = ':';
      charArray0[7] = 'M';
      charArray0[8] = 'I';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      int int0 = 43;
      StrBuilder strBuilder1 = strBuilder0.append((StrBuilder) null, 43, 43);
      // Undeclared exception!
      try { 
        strBuilder1.insert(43, (Object) "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 43
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder strBuilder1 = strBuilder0.append(4);
      // Undeclared exception!
      try { 
        strBuilder1.insert(189, (-2455L));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 189
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      int int0 = (-2736);
      StrBuilder strBuilder0 = new StrBuilder((-2736));
      StrBuilder strBuilder1 = strBuilder0.appendPadding((-2736), 'a');
      int int1 = 1950;
      // Undeclared exception!
      try { 
        strBuilder0.insert((-2736), 1950);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2736
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      int int0 = 44;
      StrBuilder strBuilder0 = new StrBuilder(44);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(44, 0, '$');
      StrBuilder strBuilder2 = strBuilder0.append(true);
      StrBuilder strBuilder3 = new StrBuilder(44);
      // Undeclared exception!
      try { 
        strBuilder2.insert(44, (Object) strBuilder3);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 44
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.trim();
      String string0 = strBuilder0.toString();
      StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
      StrBuilder strBuilder3 = strBuilder0.append((StrBuilder) null, 2081, 116);
      // Undeclared exception!
      try { 
        strBuilder0.substring((-2456));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2456
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity((-2812));
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<String> linkedList1 = new LinkedList<String>(linkedList0);
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Collection) linkedList1, "`dWyb2F/.sozA");
      String string0 = strBuilder0.substring(0, 0);
      StrBuilder strBuilder3 = strBuilder0.deleteFirst((String) null);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      StrBuilder strBuilder4 = strBuilder3.append((-2812));
      StrBuilder strBuilder5 = strBuilder0.appendNewLine();
      char[] charArray0 = new char[4];
      charArray0[0] = '\\';
      charArray0[1] = 'V';
      charArray0[2] = 'h';
      charArray0[3] = 'N';
      // Undeclared exception!
      try { 
        strBuilder4.getChars(3245, 1, charArray0, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(32);
      char[] charArray0 = new char[9];
      charArray0[0] = '&';
      charArray0[1] = '+';
      charArray0[2] = 'd';
      charArray0[3] = 'w';
      charArray0[4] = 'k';
      charArray0[5] = 'b';
      charArray0[6] = '}';
      charArray0[7] = '}';
      charArray0[8] = '\'';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(0, 32, charArray0, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = new StrBuilder("user.home");
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      char char0 = '(';
      StrMatcher strMatcher1 = StrMatcher.charMatcher('(');
      // Undeclared exception!
      try { 
        strBuilder0.replace(strMatcher0, "user.home", 5078, 286, (-336));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1414));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[9];
      charArray0[0] = '.';
      charArray0[1] = 'D';
      charArray0[2] = 'G';
      charArray0[3] = 'Q';
      charArray0[4] = 'y';
      charArray0[5] = '5';
      charArray0[6] = 'W';
      charArray0[7] = '7';
      charArray0[8] = 'b';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 39, 0);
      StrBuilder strBuilder1 = new StrBuilder(535);
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("startIndex must be valid");
      StrBuilder strBuilder1 = strBuilder0.append((-225));
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder0.getChars((-225), (-225), charArray0, (-225));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -225
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1508);
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrTokenizer strTokenizer1 = strBuilder0.asTokenizer();
      String string0 = strBuilder0.leftString((-1061));
      char[] charArray0 = new char[0];
      StrBuilder strBuilder1 = strBuilder0.insert(0, (String) null);
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) strBuilder0;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.previous();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      int int0 = 114;
      char[] charArray0 = new char[5];
      charArray0[0] = '}';
      charArray0[1] = ')';
      charArray0[2] = 'U';
      strBuilder0.size = 101;
      charArray0[3] = '.';
      charArray0[4] = '.';
      // Undeclared exception!
      try { 
        strBuilder0.insert(114, charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 114
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[4];
      charArray0[0] = '#';
      charArray0[1] = 'x';
      charArray0[2] = '>';
      charArray0[3] = 'z';
      // Undeclared exception!
      try { 
        strBuilder0.insert(102, charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 102
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      int int0 = 29;
      StrBuilder strBuilder0 = new StrBuilder(29);
      StrBuilder strBuilder1 = strBuilder0.append(0L);
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('Z');
      StrMatcher strMatcher2 = StrMatcher.charMatcher('Z');
      StrBuilder strBuilder2 = strBuilder0.replaceFirst(strMatcher0, "W|-{VG1*Y,W");
      StrBuilder strBuilder3 = strBuilder2.replaceAll("1.6", "W|-{VG1*Y,W");
      char char0 = 'G';
      StrBuilder strBuilder4 = strBuilder3.appendFixedWidthPadRight((-2991), 0, 'G');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("", 251, 251);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      String string0 = "1.6";
      StrBuilder strBuilder0 = new StrBuilder("1.6");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      // Undeclared exception!
      try { 
        strBuilder0.insert(9, 's');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 9
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = 'I';
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('I');
      int int0 = 2321;
      StrBuilder strBuilder2 = strBuilder0.append((float) 2321);
      // Undeclared exception!
      try { 
        strBuilder0.validateRange(2321, 2321);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid startIndex: ");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      String string0 = "Invalid length: ";
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("Invalid length: ", 108, (-1352));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      Integer integer0 = new Integer(0);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) integer0, 0, '`');
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrBuilder strBuilder1 = new StrBuilder(4);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      int int0 = strBuilder1.lastIndexOf(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, 4, 4);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid length: ");
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder strBuilder1 = strBuilder0.insert(0, ':');
      StrBuilder strBuilder2 = strBuilder1.append('z');
      StrBuilder strBuilder3 = strBuilder0.replace(0, 0, "");
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrBuilder strBuilder2 = strBuilder0.ensureCapacity(0);
      StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
      Writer writer0 = strBuilder0.asWriter();
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('5');
      char[] charArray0 = new char[1];
      StrBuilder strBuilder4 = strBuilder2.replaceAll((StrMatcher) strMatcher_CharMatcher0, "org.apache.commons.lang.text.StrBuilder");
      StrBuilder strBuilder5 = strBuilder4.append(false);
      charArray0[0] = '5';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StringBuffer stringBuffer0 = strBuilder3.toStringBuffer();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      StrBuilder strBuilder6 = strBuilder3.replace((StrMatcher) strMatcher_CharMatcher0, "org.apache.commons.lang.text.StrBuilder", 0, 0, 0);
      int int0 = strBuilder3.indexOf("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter", 0);
      StrBuilder strBuilder7 = strBuilder3.deleteFirst('5');
      int int1 = strBuilder3.indexOf(strMatcher0);
      StrBuilder strBuilder8 = strBuilder1.setLength(590);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("#DOK,MW");
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("~Yj`xTj8w\"");
      char[] charArray0 = new char[0];
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      int int0 = strMatcher0.isMatch(charArray0, 126, 2, 126);
      int int1 = strBuilder0.lastIndexOf(strMatcher0, 0);
      int int2 = strBuilder0.indexOf("#DOK,MW");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(0);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      strBuilder_StrBuilderWriter0.write(0);
      strBuilder_StrBuilderWriter0.write(4357);
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('G');
      StrBuilder strBuilder2 = strBuilder0.deleteFirst((StrMatcher) strMatcher_CharMatcher0);
      String string0 = strBuilder0.leftString((-3536));
      String string1 = strBuilder0.getNewLineText();
      String string2 = strBuilder0.substring(0);
      boolean boolean0 = strBuilder1.endsWith("Invalid startIndex: ");
      StrBuilder strBuilder3 = strBuilder2.append(false);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('/');
      StrBuilder strBuilder2 = strBuilder0.replaceFirst(strMatcher0, (String) null);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.replaceAll("java.util.prefs.PreferencesFactory", "");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("", (-1270), (-1270));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((-1L));
      StringBuffer stringBuffer0 = new StringBuffer(0);
      StrBuilder strBuilder2 = strBuilder0.append(stringBuffer0, 0, 0);
      // Undeclared exception!
      try { 
        strBuilder1.replace(117, 0, "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("0");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('R');
      boolean boolean0 = strBuilder1.contains('g');
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder strBuilder1 = strBuilder0.append(0.0F);
      StrBuilder strBuilder2 = strBuilder0.appendNull();
      StrBuilder strBuilder3 = strBuilder2.append((double) 0.0F);
      int int0 = strBuilder0.size();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      StrBuilder strBuilder4 = strBuilder1.insert(6, 6);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      String string0 = "java.vm.version";
      StrBuilder strBuilder0 = new StrBuilder("java.vm.version");
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex((-2054));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2054
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.midString((-87), 0);
      StrBuilder strBuilder1 = strBuilder0.appendPadding((-87), 'E');
      // Undeclared exception!
      try { 
        strBuilder0.charAt(48);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 48
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      // Undeclared exception!
      try { 
        strBuilder0.delete(5, 5);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1214);
      boolean boolean0 = strBuilder0.contains("T:2pZp1yoF4^gr");
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = strBuilder0.indexOf("", Integer.MAX_VALUE);
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("");
      int int1 = strBuilder0.indexOf((StrMatcher) strMatcher_StringMatcher0);
      StrBuilder strBuilder1 = strBuilder0.append((Object) "");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setEmptyTokenAsNull(true);
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "");
      StrBuilder strBuilder3 = strBuilder0.replaceFirst('I', '9');
      int int2 = strBuilder3.indexOf('m');
      String string0 = strBuilder0.midString((-1), 887);
      StrBuilder strBuilder4 = strBuilder3.trim();
      String string1 = strBuilder2.midString((-1745), (-462));
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.append(0.0);
      StrBuilder strBuilder2 = strBuilder0.appendPadding((-2216), 'O');
      int int0 = strBuilder0.indexOf('$');
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 4;
      // Undeclared exception!
      try { 
        strBuilder0.charAt(4);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 4
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      String string0 = null;
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.append("^b8l!(0~<9ovu!O$-V", 0, 4);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setEmptyTokenAsNull(true);
      Object object0 = strBuilder_StrBuilderTokenizer0.next();
      StrBuilder strBuilder2 = strBuilder1.append((Object) "^b8l");
      int int0 = 116;
      char[] charArray0 = new char[0];
      int int1 = 1696;
      // Undeclared exception!
      try { 
        strBuilder0.insert(116, charArray0, 1696, 1696);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 116
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      int int1 = strBuilder0.hashCode();
      StrBuilder strBuilder2 = strBuilder0.append(false);
      // Undeclared exception!
      try { 
        strBuilder2.append("", 0, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("cByW BOxeF4");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('B', 'B');
      StrBuilder strBuilder2 = strBuilder1.append('Z');
      String string0 = strBuilder1.midString(39, 0);
      StrTokenizer strTokenizer0 = strBuilder1.asTokenizer();
      int int0 = strBuilder0.lastIndexOf('B', 0);
      StrBuilder strBuilder3 = strBuilder1.trim();
      StrBuilder strBuilder4 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "cByW BOxeF4");
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(true);
      StrBuilder strBuilder2 = strBuilder0.minimizeCapacity();
      char char0 = 'X';
      StrBuilder strBuilder3 = strBuilder2.append((Object) null);
      // Undeclared exception!
      try { 
        strBuilder3.toCharArray(687, 34);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight(1249, 1249, '-');
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder3 = strBuilder1.appendWithSeparators((Collection) linkedList0, "");
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1), (-372L));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-50));
      int int0 = strBuilder0.capacity();
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray(1, 1);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      String string0 = "~Jc4@Q5ei";
      StrBuilder strBuilder0 = new StrBuilder("~Jc4@Q5ei");
      // Undeclared exception!
      try { 
        strBuilder0.delete(507, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1);
      Reader reader0 = strBuilder0.asReader();
      String string0 = "";
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      boolean boolean0 = strBuilder_StrBuilderTokenizer0.hasPrevious();
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight(object0, 3, '9');
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(4);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(4, 48, 'A');
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.toString();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      int int0 = strBuilder0.lastIndexOf('', 0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strBuilder_StrBuilderTokenizer0, "");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("", (-1), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(48, 48, '6');
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      Writer writer0 = strBuilder0.asWriter();
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("{");
      StrBuilder strBuilder1 = new StrBuilder("6tK&8Qq7C");
      boolean boolean0 = strBuilder0.equals(strBuilder1);
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder");
      String string0 = strBuilder0.getNewLineText();
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "java.ext.dirs";
      StrBuilder strBuilder1 = strBuilder0.append("java.ext.dirs");
      Writer writer0 = strBuilder0.asWriter();
      int int0 = strBuilder0.size();
      StrBuilder strBuilder2 = strBuilder0.appendNewLine();
      char[] charArray0 = new char[16];
      charArray0[0] = '0';
      charArray0[1] = 'T';
      StrBuilder strBuilder3 = strBuilder2.ensureCapacity(13);
      charArray0[2] = 'Q';
      charArray0[3] = '+';
      char char0 = '\"';
      charArray0[4] = '\"';
      charArray0[5] = 'l';
      charArray0[6] = '2';
      charArray0[7] = 'R';
      charArray0[8] = '}';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder4 = strBuilder2.deleteAll((StrMatcher) strMatcher_CharSetMatcher0);
      StrBuilder strBuilder5 = strBuilder1.trim();
      int int1 = strBuilder0.lastIndexOf("java.ext.dirs", 13);
      // Undeclared exception!
      try { 
        strBuilder2.appendFixedWidthPadRight((Object) strBuilder1, 2, 'Q');
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      String string0 = "Mac OS X";
      StrBuilder strBuilder0 = new StrBuilder("Mac OS X");
      StrBuilder strBuilder1 = strBuilder0.append("Mac OS X");
      StrBuilder strBuilder2 = strBuilder1.append(strBuilder0);
      String string1 = strBuilder0.leftString((-4529));
      // Undeclared exception!
      try { 
        strBuilder0.insert((-4529), true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -4529
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[3];
      char[] charArray1 = new char[1];
      charArray1[0] = 'o';
      strBuilder_StrBuilderWriter0.write(charArray1);
      strBuilder_StrBuilderWriter0.write("");
      charArray0[0] = 'o';
      charArray0[1] = 'B';
      strBuilder_StrBuilderWriter0.write("");
      charArray0[2] = 'M';
      strBuilder_StrBuilderWriter0.write(charArray0);
      StrBuilder strBuilder1 = strBuilder0.reverse();
      String string0 = strBuilder1.getNullText();
      boolean boolean0 = strBuilder1.contains('S');
      // Undeclared exception!
      try { 
        strBuilder0.insert(0, charArray1, 31, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: 31
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("\"u3/W37Q0)j@#JYIo");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.replace(0, 116, "\"u3/W37Q0)j@#JYIo");
      StrBuilder strBuilder3 = strBuilder0.append((-20L));
      String string0 = "{}";
      StrBuilder strBuilder4 = strBuilder1.replaceAll("\"u3/W37Q0)j@#JYIo", "Index: ");
      int int0 = 114;
      // Undeclared exception!
      try { 
        strBuilder3.insert(116, (-1.0));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 116
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StringBuffer stringBuffer0 = new StringBuffer(766);
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StringBuffer stringBuffer1 = new StringBuffer("");
      StrBuilder strBuilder2 = strBuilder1.append(false);
      StringBuffer stringBuffer2 = new StringBuffer(34);
      StringBuffer stringBuffer3 = stringBuffer1.append(stringBuffer2);
      StrBuilder strBuilder3 = strBuilder0.append(stringBuffer1);
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrBuilder strBuilder4 = strBuilder3.replace(strMatcher0, "'\"", 0, 0, 0);
      String string0 = strBuilder0.toString();
      int int0 = strBuilder3.lastIndexOf('[');
      // Undeclared exception!
      try { 
        strBuilder3.insert(766, 97);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 766
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      int int0 = 5745;
      StrBuilder strBuilder0 = new StrBuilder(5745);
      StrBuilder strBuilder1 = strBuilder0.append((-3843.9705F));
      char char0 = '?';
      int int1 = strBuilder0.indexOf('?');
      char[] charArray0 = new char[1];
      charArray0[0] = '?';
      // Undeclared exception!
      try { 
        strBuilder1.getChars(5745, (-1), charArray0, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.trim();
      String string0 = strBuilder1.toString();
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      StrBuilder strBuilder2 = strBuilder1.deleteFirst(strMatcher0);
      int int0 = 2303;
      char char0 = 'C';
      // Undeclared exception!
      try { 
        strBuilder2.setCharAt(2303, 'C');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2303
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("cByW BOxeF4");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('B', 'B');
      StrBuilder strBuilder2 = strBuilder1.append('Z');
      String string0 = strBuilder1.midString(39, 0);
      StrBuilder strBuilder3 = strBuilder1.replace(0, 0, "T");
      StrTokenizer strTokenizer0 = strBuilder1.asTokenizer();
      int int0 = strBuilder0.lastIndexOf('B', 0);
      StrBuilder strBuilder4 = strBuilder1.trim();
      StrBuilder strBuilder5 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "cByW BOxeF4");
  }
}
