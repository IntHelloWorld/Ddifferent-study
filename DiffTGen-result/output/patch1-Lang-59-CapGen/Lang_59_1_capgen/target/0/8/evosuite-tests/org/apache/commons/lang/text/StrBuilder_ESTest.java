/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 29 05:31:35 GMT 2020
 */

package org.apache.commons.lang.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.Writer;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.ListIterator;
import java.util.NoSuchElementException;
import java.util.stream.Stream;
import org.apache.commons.lang.text.StrBuilder;
import org.apache.commons.lang.text.StrMatcher;
import org.apache.commons.lang.text.StrTokenizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StrBuilder_ESTest extends StrBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(495);
      int int0 = (-113);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      char char0 = '\\';
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((-113), (-113), '\\');
      StrBuilder strBuilder3 = strBuilder0.append((long) 495);
      int int1 = 0;
      StrBuilder strBuilder4 = strBuilder3.insert(0, (long) (-113));
      Writer writer0 = strBuilder4.asWriter();
      // Undeclared exception!
      try { 
        strBuilder3.insert(4091, "Xz<");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 4091
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      String string0 = "1.2";
      StrBuilder strBuilder0 = new StrBuilder("1.2");
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      int int0 = 114;
      StrBuilder strBuilder1 = new StrBuilder("1.2");
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      char[] charArray0 = new char[0];
      strBuilder2.buffer = charArray0;
      int int1 = strBuilder0.indexOf(strMatcher0, 114);
      // Undeclared exception!
      try { 
        strBuilder0.contains("1.2");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer";
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      StrBuilder strBuilder2 = strBuilder0.appendNull();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      char[] charArray0 = new char[5];
      charArray0[0] = 'u';
      charArray0[1] = 'H';
      charArray0[2] = 'K';
      charArray0[3] = '$';
      charArray0[4] = 'G';
      strBuilder_StrBuilderWriter0.write(charArray0);
      StrBuilder strBuilder3 = strBuilder0.appendNewLine();
      strBuilder_StrBuilderWriter0.close();
      int int0 = (-203);
      StrBuilder strBuilder4 = new StrBuilder();
      String string1 = strBuilder4.rightString(4);
      StrBuilder strBuilder5 = strBuilder1.deleteFirst(strMatcher0);
      int int1 = 418;
      StrBuilder strBuilder6 = strBuilder5.appendFixedWidthPadLeft((Object) strMatcher0, 418, '$');
      StrBuilder strBuilder7 = strBuilder3.deleteAll('G');
      int int2 = (-159);
      // Undeclared exception!
      try { 
        strBuilder1.append(strBuilder6, (-159), (-203));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Writer writer0 = strBuilder0.asWriter();
      int int0 = 2;
      char char0 = 'F';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(2, 2, 'F');
      int int1 = 2;
      StrBuilder strBuilder2 = strBuilder1.insert(2, 0.0);
      char[] charArray0 = new char[2];
      // Undeclared exception!
      try { 
        strBuilder2.validateRange(979, 2);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.size = (-3794);
      String string0 = strBuilder0.getNewLineText();
      boolean boolean0 = strBuilder0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrBuilder strBuilder2 = strBuilder1.setLength(117);
      int int0 = strBuilder0.size();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
      StrBuilder strBuilder4 = strBuilder0.insert(5, object0);
      int int1 = (-2233);
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt((-2233));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2233
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      int int0 = 114;
      StrBuilder strBuilder0 = new StrBuilder(114);
      StrBuilder strBuilder1 = strBuilder0.append(false);
      StrBuilder strBuilder2 = strBuilder0.append((-1149.57));
      int int1 = strBuilder0.indexOf("");
      StrBuilder strBuilder3 = new StrBuilder("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder3.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setTrimmerMatcher(strMatcher0);
      StringBuffer stringBuffer0 = new StringBuffer(114);
      StrBuilder strBuilder4 = strBuilder3.append(stringBuffer0);
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      int int2 = 36;
      int int3 = strBuilder0.lastIndexOf(strMatcher0, 36);
      StrBuilder strBuilder5 = strBuilder3.appendNull();
      StrBuilder strBuilder6 = strBuilder5.replaceAll("", "");
      StrBuilder strBuilder7 = strBuilder3.appendNewLine();
      // Undeclared exception!
      try { 
        strBuilder2.insert((-1), 0.0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[0];
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      int int0 = 2165;
      // Undeclared exception!
      try { 
        strBuilder1.validateIndex(2165);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2165
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StringBuffer stringBuffer0 = strBuilder1.toStringBuffer();
      int int0 = strBuilder0.lastIndexOf((StrMatcher) null);
      StrBuilder strBuilder2 = strBuilder0.appendNull();
      StrBuilder strBuilder3 = strBuilder1.append((-1.0F));
      StrBuilder strBuilder4 = strBuilder3.appendNewLine();
      StrBuilder strBuilder5 = strBuilder3.ensureCapacity((-1));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      int int1 = strBuilder_StrBuilderReader0.read();
      long long0 = strBuilder_StrBuilderReader0.skip((-1));
      strBuilder_StrBuilderReader0.reset();
      strBuilder_StrBuilderReader0.mark((-391));
      String string0 = strBuilder1.rightString((-2618));
      boolean boolean0 = strBuilder0.endsWith("");
      char[] charArray0 = new char[4];
      charArray0[0] = 'M';
      charArray0[1] = '+';
      charArray0[2] = 'F';
      charArray0[3] = 'D';
      // Undeclared exception!
      try { 
        strBuilder1.insert((-391), charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -391
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.midString(32, 1499);
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray(32, (-2808));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteAll("end < start");
      StrBuilder strBuilder2 = strBuilder0.appendPadding(405, 'O');
      Object object0 = new Object();
      StrBuilder strBuilder3 = strBuilder0.insert(0, object0);
      StrBuilder strBuilder4 = strBuilder3.appendFixedWidthPadRight(0, 0, 'O');
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("end < start");
      StrBuilder strBuilder5 = new StrBuilder();
      char[] charArray0 = new char[0];
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder6 = strBuilder4.appendFixedWidthPadRight((Object) strBuilder5, (int) 'O', 'O');
      StrBuilder strBuilder7 = strBuilder4.append(false);
      StrBuilder strBuilder8 = strBuilder4.minimizeCapacity();
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance("end < start");
      StrBuilder strBuilder9 = strBuilder8.appendWithSeparators((Iterator) strTokenizer0, "f '/FPi");
      int int0 = strBuilder4.lastIndexOf((StrMatcher) strMatcher_StringMatcher0, 0);
      StrBuilder strBuilder10 = strBuilder6.setNewLineText("/s.Ipa]R^RDm,");
      int int1 = strBuilder3.indexOf('h');
      strBuilder7.validateIndex('O');
      int int2 = strBuilder0.hashCode();
      StrBuilder strBuilder11 = strBuilder6.insert(440, (float) 440);
      StrBuilder strBuilder12 = strBuilder7.replace(0, (int) 'O', "end < start");
      Writer writer0 = strBuilder0.asWriter();
      boolean boolean0 = strBuilder7.isEmpty();
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("_;Y");
      int int0 = 0;
      char char0 = 'd';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((-703), 0, 'd');
      StrBuilder strBuilder2 = strBuilder0.append('d');
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "_;Y");
      StringBuffer stringBuffer1 = stringBuffer0.append(0.0);
      StrBuilder strBuilder3 = strBuilder2.append(stringBuffer0, 0, 0);
      // Undeclared exception!
      try { 
        strBuilder2.substring(0, (-703));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('D');
      char[] charArray0 = new char[5];
      charArray0[0] = 'D';
      charArray0[1] = 'D';
      charArray0[2] = 'D';
      charArray0[3] = 'D';
      charArray0[4] = 'D';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StrBuilder strBuilder2 = new StrBuilder("pBw0");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 2, 32);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      StrBuilder strBuilder2 = strBuilder0.appendNull();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      char[] charArray0 = new char[5];
      charArray0[0] = 'u';
      charArray0[1] = 'H';
      charArray0[2] = 'K';
      charArray0[3] = '$';
      charArray0[4] = 'G';
      int int0 = strBuilder2.lastIndexOf(strMatcher0, 513);
      strBuilder_StrBuilderWriter0.write(charArray0);
      StrBuilder strBuilder3 = strBuilder0.appendNewLine();
      strBuilder_StrBuilderWriter0.close();
      StrBuilder strBuilder4 = strBuilder2.appendFixedWidthPadRight((-3126), 6, 'U');
      // Undeclared exception!
      try { 
        strBuilder0.insert((-203), "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -203
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((char[]) null);
      String string0 = strBuilder0.getNewLineText();
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      int int0 = strBuilder1.lastIndexOf(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.deleteFirst((String) null);
      boolean boolean0 = strBuilder0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("1.2");
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrBuilder strBuilder1 = new StrBuilder("1.2");
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators((Collection) null, "");
      int int0 = strBuilder0.indexOf(strMatcher0, 114);
      boolean boolean0 = strBuilder0.contains("1.2");
      StrBuilder strBuilder4 = strBuilder1.append((Object) null);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      char char0 = 't';
      // Undeclared exception!
      try { 
        strBuilder1.getChars(102, 102, (char[]) null, 114);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 102
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("1.2");
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrBuilder strBuilder1 = new StrBuilder("1.2");
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators((Collection) null, "");
      boolean boolean0 = strBuilder0.contains("1.2");
      StrBuilder strBuilder4 = strBuilder1.append((Object) null);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      char char0 = 't';
      // Undeclared exception!
      try { 
        strBuilder1.getChars(102, 102, (char[]) null, 114);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 102
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      int int0 = 498;
      StrBuilder strBuilder0 = new StrBuilder(498);
      StrBuilder strBuilder1 = strBuilder0.setNullText("os.version");
      StrBuilder strBuilder2 = strBuilder0.append(3447L);
      Writer writer0 = strBuilder2.asWriter();
      StrBuilder strBuilder3 = strBuilder2.append((-1L));
      String string0 = null;
      boolean boolean0 = strBuilder0.startsWith((String) null);
      char[] charArray0 = new char[1];
      charArray0[0] = '<';
      StrBuilder strBuilder4 = strBuilder1.append(charArray0);
      // Undeclared exception!
      try { 
        strBuilder3.setLength((-2038));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2038
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("F+");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(6, 6, '[');
      int int0 = strBuilder0.indexOf("F+");
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      StrBuilder strBuilder1 = strBuilder0.append((-5571.48));
      char[] charArray0 = new char[9];
      charArray0[0] = '*';
      charArray0[1] = '$';
      charArray0[2] = ']';
      charArray0[3] = 'M';
      charArray0[4] = 'l';
      charArray0[5] = 'U';
      charArray0[6] = '!';
      charArray0[7] = ',';
      charArray0[8] = 'A';
      StrBuilder strBuilder2 = strBuilder1.append(charArray0);
      StrBuilder strBuilder3 = strBuilder0.deleteAll("length must be valid");
      StrBuilder strBuilder4 = strBuilder3.appendFixedWidthPadRight(253, 253, 'K');
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt((-1), '\\');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3);
      StringBuffer stringBuffer0 = new StringBuffer(3);
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, (-1683), (-1683));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceAll(",sbg9V", ",sbg9V");
      char[] charArray0 = null;
      StrBuilder strBuilder2 = strBuilder1.clear();
      StrBuilder strBuilder3 = new StrBuilder(",sbg9V");
      StrMatcher strMatcher0 = null;
      StrBuilder strBuilder4 = strBuilder1.deleteFirst((StrMatcher) null);
      StrBuilder strBuilder5 = strBuilder0.append(1810.51639248051);
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        strBuilder5.append(stringBuffer0, 0, 2528);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      char[] charArray0 = new char[7];
      charArray0[0] = '8';
      charArray0[1] = '';
      charArray0[2] = '0';
      charArray0[3] = 'a';
      charArray0[4] = 'j';
      charArray0[5] = 'a';
      charArray0[6] = '1';
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((-2867.610462227756));
      int int0 = strBuilder1.lastIndexOf((String) null, 12);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(683);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      strBuilder_StrBuilderReader0.reset();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      boolean boolean1 = strBuilder0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("n-(^K}#/LNd.,2");
      StrBuilder strBuilder1 = strBuilder0.append(false);
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 116);
      char[] charArray0 = new char[2];
      charArray0[0] = 'S';
      charArray0[1] = 'n';
      StrBuilder strBuilder2 = strBuilder1.append(charArray0);
      StrBuilder strBuilder3 = strBuilder1.ensureCapacity(253);
      int int1 = strBuilder3.indexOf('S');
      // Undeclared exception!
      try { 
        strBuilder0.insert(117, 'S');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 117
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[6];
      charArray0[0] = 'H';
      charArray0[1] = 'm';
      charArray0[2] = '`';
      charArray0[3] = 'd';
      charArray0[4] = 'd';
      charArray0[5] = ':';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StringBuffer stringBuffer0 = new StringBuffer(1616);
      StrBuilder strBuilder2 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder3 = strBuilder2.replaceFirst("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", "org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      char[] charArray1 = strBuilder1.getChars(charArray0);
      StrBuilder strBuilder4 = strBuilder2.append(0.0F);
      StrBuilder strBuilder5 = strBuilder3.appendFixedWidthPadRight(1616, 1616, '2');
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = '2';
      int int0 = strBuilder0.lastIndexOf('2');
      int int1 = strBuilder0.capacity();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("1&K%6");
      int int2 = strBuilder0.lastIndexOf(strMatcher0, (-1));
      int int3 = strBuilder0.indexOf("v'CWL", 0);
      int int4 = strBuilder0.indexOf('2', 0);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('2');
      StrBuilder strBuilder2 = strBuilder0.replace(0, 32, "v'CWL");
      int int5 = 44;
      // Undeclared exception!
      try { 
        strBuilder0.append("O<#aGhR?y'&}$", 0, 44);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(false);
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((-2707), (-2707), '9');
      StrBuilder strBuilder3 = strBuilder0.deleteFirst('8');
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) strBuilder2;
      objectArray0[1] = (Object) strBuilder3;
      objectArray0[2] = (Object) strBuilder1;
      Object object0 = new Object();
      objectArray0[3] = object0;
      objectArray0[4] = (Object) strBuilder1;
      objectArray0[5] = (Object) strBuilder0;
      StrBuilder strBuilder4 = strBuilder3.appendWithSeparators(objectArray0, "s9?R'&N4<k(");
      char[] charArray0 = new char[8];
      charArray0[0] = 'T';
      charArray0[1] = '9';
      charArray0[2] = '9';
      charArray0[3] = '8';
      charArray0[4] = '8';
      charArray0[5] = '8';
      charArray0[6] = '9';
      charArray0[7] = '8';
      strBuilder4.buffer = charArray0;
      boolean boolean0 = strBuilder4.equals((Object) strBuilder2);
      // Undeclared exception!
      try { 
        strBuilder2.substring((-2707));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2707
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0, (-1013));
      StrBuilder strBuilder1 = strBuilder0.append((-493L));
      // Undeclared exception!
      try { 
        strBuilder0.substring((-341));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -341
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2);
      StrBuilder strBuilder1 = strBuilder0.append((String) null);
      StrBuilder strBuilder2 = strBuilder1.minimizeCapacity();
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadRight((Object) null, (-61), '[');
      StrBuilder strBuilder4 = strBuilder2.append(true);
      Reader reader0 = strBuilder4.asReader();
      StrBuilder strBuilder5 = strBuilder0.setLength(2);
      StrBuilder strBuilder6 = strBuilder1.minimizeCapacity();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 2);
      // Undeclared exception!
      try { 
        strBuilder6.substring(2, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      char[] charArray0 = new char[9];
      charArray0[0] = 'G';
      charArray0[1] = 'F';
      charArray0[2] = '3';
      charArray0[3] = 'c';
      charArray0[4] = 'L';
      charArray0[5] = 'q';
      charArray0[6] = 'k';
      charArray0[7] = '}';
      charArray0[8] = 'I';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder0.indexOf(strMatcher0, 0);
      StrMatcher strMatcher1 = StrMatcher.commaMatcher();
      char[] charArray1 = new char[1];
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher(charArray1);
      charArray1[0] = 'C';
      StrMatcher strMatcher3 = StrMatcher.charSetMatcher(charArray1);
      boolean boolean0 = strBuilder0.contains(strMatcher1);
      StrBuilder strBuilder1 = strBuilder0.append((StrBuilder) null, (-1394), (-1394));
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      int int1 = strBuilder1.size();
      String string0 = strBuilder1.midString((-1394), (-464));
      int int2 = 0;
      StrBuilder strBuilder2 = strBuilder1.insert(0, ".L");
      StrBuilder strBuilder3 = strBuilder2.deleteFirst("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean1 = strBuilder_StrBuilderReader0.markSupported();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
      // Undeclared exception!
      try { 
        strBuilder0.setLength((-1394));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1394
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(970);
      int int0 = (-1144);
      char[] charArray0 = null;
      int int1 = 39;
      // Undeclared exception!
      try { 
        strBuilder0.getChars(0, (-1144), (char[]) null, 39);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1144
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      boolean boolean0 = strBuilder0.equals((Object) "Da>*7$;oo~xPq]");
      String string0 = strBuilder0.getNewLineText();
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, (String) null);
      StringBuffer stringBuffer0 = new StringBuffer(5523);
      StrBuilder strBuilder2 = strBuilder0.append(stringBuffer0, 0, 0);
      String string1 = strBuilder0.rightString(0);
      int int0 = strBuilder1.lastIndexOf('@', 0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[3];
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("");
      charArray0[0] = '@';
      charArray0[1] = '@';
      charArray0[2] = '@';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 0, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder0;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "java.class.path");
      String string0 = strBuilder0.substring(3, 102);
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      // Undeclared exception!
      try { 
        strBuilder0.replace(strMatcher0, (String) null, 1112, 1112, 1112);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("set() is unsupported");
      char[] charArray0 = new char[3];
      charArray0[0] = 'F';
      charArray0[1] = ',';
      charArray0[2] = '0';
      strBuilder0.getChars(1, 1, charArray0, 0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(349);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) null, "");
      int int0 = strBuilder0.lastIndexOf('-');
      StrBuilder strBuilder2 = strBuilder0.insert(0, (-1));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      int int1 = strBuilder_StrBuilderReader0.read();
      long long0 = strBuilder_StrBuilderReader0.skip((-1L));
      String string0 = strBuilder0.substring(0);
      StrBuilder strBuilder3 = strBuilder0.append('9');
      StrBuilder strBuilder4 = strBuilder3.append(2988.962F);
      StrBuilder strBuilder5 = strBuilder4.append(strBuilder2);
      StrBuilder strBuilder6 = strBuilder3.append(true);
      StrBuilder strBuilder7 = strBuilder0.replaceFirst('9', '@');
      StrBuilder strBuilder8 = strBuilder6.replaceFirst('@', '6');
      char[] charArray0 = new char[8];
      charArray0[0] = 'N';
      charArray0[1] = '6';
      charArray0[2] = '-';
      charArray0[3] = '-';
      charArray0[4] = '6';
      charArray0[5] = '9';
      charArray0[6] = '@';
      charArray0[7] = '@';
      // Undeclared exception!
      try { 
        strBuilder4.insert(349, charArray0, 45, (-853));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 349
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("a!");
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrBuilder strBuilder2 = strBuilder1.appendPadding(1106, '>');
      StrBuilder strBuilder3 = strBuilder1.append("a!");
      StrBuilder strBuilder4 = strBuilder3.insert(1106, (long) 1106);
      StrBuilder strBuilder5 = strBuilder3.replaceAll("a!", "a!");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.toString();
      Object object0 = strBuilder_StrBuilderTokenizer0.next();
      StrBuilder strBuilder6 = strBuilder0.insert(166, object0);
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('>');
      StrMatcher strMatcher2 = StrMatcher.charMatcher('>');
      StrBuilder strBuilder7 = strBuilder3.deleteAll(strMatcher0);
      StrBuilder strBuilder8 = strBuilder1.delete(0, 166);
      StrBuilder strBuilder9 = strBuilder3.reverse();
      StrBuilder strBuilder10 = strBuilder1.append(1106);
      char[] charArray0 = new char[4];
      charArray0[0] = '>';
      charArray0[1] = '>';
      charArray0[2] = '>';
      charArray0[3] = '>';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, (-1947), (-1947));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -1947
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      int int0 = 4432;
      StrBuilder strBuilder0 = new StrBuilder(4432);
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      String string0 = "org.apache.commons.lang.text.StrBuilder";
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("org.apache.commons.lang.text.StrBuilder", "org.apache.commons.lang.text.StrBuilder");
      StrBuilder strBuilder2 = strBuilder1.minimizeCapacity();
      strBuilder2.size = 4432;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      boolean boolean0 = strBuilder1.contains(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder0.append(1.0F);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.append("/7yN@qUjuP.", 1101, (-952));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      char[] charArray0 = new char[3];
      charArray0[0] = 'L';
      charArray0[1] = 'J';
      charArray0[2] = 'p';
      strBuilder0.buffer = charArray0;
      StrMatcher strMatcher0 = StrMatcher.charMatcher('Q');
      // Undeclared exception!
      try { 
        strBuilder0.insert(9, 1.0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) strBuilder_StrBuilderTokenizer0;
      objectArray0[3] = (Object) strBuilder_StrBuilderTokenizer0;
      objectArray0[4] = (Object) strBuilder_StrBuilderTokenizer0;
      objectArray0[5] = (Object) strBuilder_StrBuilderTokenizer0;
      objectArray0[6] = (Object) strMatcher0;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "HIhlvcHAGiu");
      StringBuffer stringBuffer0 = strBuilder1.toStringBuffer();
      StrBuilder strBuilder2 = strBuilder1.deleteAll(strMatcher0);
      boolean boolean0 = strBuilder_StrBuilderTokenizer0.hasPrevious();
      int int0 = strBuilder0.indexOf(strMatcher0, 435);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      char[] charArray0 = new char[3];
      charArray0[0] = 'c';
      charArray0[1] = 'Y';
      charArray0[2] = '-';
      strBuilder_StrBuilderWriter0.write(charArray0);
      StrBuilder strBuilder3 = strBuilder2.append(stringBuffer0);
      strBuilder_StrBuilderWriter0.flush();
      StrBuilder strBuilder4 = strBuilder0.replaceAll(' ', '-');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, (-1), 435);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-196));
      char[] charArray0 = new char[0];
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("t*52P@");
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_CharSetMatcher0, 0);
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex((-196));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -196
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(115);
      StrBuilder strBuilder1 = strBuilder0.append((float) 115);
      StrBuilder strBuilder2 = strBuilder0.appendPadding(0, 'v');
      StrBuilder strBuilder3 = strBuilder0.insert(0, (-234));
      StrBuilder strBuilder4 = strBuilder3.appendNewLine();
      String string0 = null;
      Reader reader0 = strBuilder1.asReader();
      String string1 = strBuilder0.toString();
      StrBuilder strBuilder5 = strBuilder4.setNullText((String) null);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder3.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      int int1 = 2095;
      // Undeclared exception!
      try { 
        strBuilder1.toCharArray(2095, 638);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("", "2~,t|iLSHxP]@=");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      Writer writer0 = strBuilder0.asWriter();
      String string0 = strBuilder0.rightString((-750));
      strBuilder_StrBuilderReader0.mark(0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-3029));
      StrBuilder strBuilder1 = new StrBuilder("g");
      boolean boolean0 = strBuilder0.equals(strBuilder1);
      boolean boolean1 = strBuilder1.startsWith("Invalid length: ");
      StrBuilder strBuilder2 = strBuilder0.setNullText("!&");
      int int0 = strBuilder0.indexOf((String) null, (-3029));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      StrBuilder strBuilder3 = strBuilder2.setLength(1130);
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      String string0 = "";
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      int int1 = strBuilder0.lastIndexOf(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder2.delete((-1), 64);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      String string0 = "java.vendor.url";
      StrBuilder strBuilder0 = new StrBuilder("java.vendor.url");
      int int0 = 0;
      Integer integer0 = new Integer(0);
      StrBuilder strBuilder1 = strBuilder0.append((Object) integer0);
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrBuilder strBuilder2 = strBuilder1.deleteAll(strMatcher0);
      int int1 = 3710;
      // Undeclared exception!
      try { 
        strBuilder2.append(strBuilder0, 0, 3710);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2229));
      StrBuilder strBuilder1 = strBuilder0.insert(0, ':');
      StrBuilder strBuilder2 = strBuilder1.append(true);
      StrBuilder strBuilder3 = strBuilder1.deleteFirst("");
      int int0 = (-181);
      StrBuilder strBuilder4 = strBuilder1.appendFixedWidthPadLeft((Object) strBuilder0, (-181), 'd');
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex(39);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 39
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.append("Invalid length: ", 0, 0);
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("");
      boolean boolean0 = strBuilder1.contains(strMatcher0);
      String string0 = strBuilder0.toString();
      int int1 = strBuilder0.lastIndexOf("");
      int int2 = 0;
      StrBuilder strBuilder2 = strBuilder1.insert(0, (long) 0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder3 = strBuilder1.appendWithSeparators((Collection) linkedList0, "");
      // Undeclared exception!
      try { 
        strBuilder3.setLength((-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Writer writer0 = strBuilder0.asWriter();
      int int0 = (-132);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) writer0, (-132), 'r');
      char[] charArray0 = new char[5];
      charArray0[0] = 'r';
      charArray0[1] = 'r';
      charArray0[2] = 'r';
      charArray0[3] = 'r';
      charArray0[4] = '-';
      // Undeclared exception!
      try { 
        strBuilder1.getChars((-2768), (-132), charArray0, 1517);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2768
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      char[] charArray0 = new char[2];
      charArray0[0] = 'Q';
      charArray0[1] = 'Q';
      StrBuilder strBuilder2 = strBuilder1.append(charArray0);
      int int0 = (-1303);
      // Undeclared exception!
      try { 
        strBuilder0.charAt((-1303));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1303
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Fk");
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      String string0 = strBuilder1.leftString((-1343));
      int int0 = strBuilder0.lastIndexOf((String) null);
      String string1 = strBuilder0.toString();
      boolean boolean0 = strBuilder1.contains((String) null);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrBuilder strBuilder2 = strBuilder1.deleteFirst(strMatcher0);
      char[] charArray0 = new char[4];
      charArray0[0] = 'J';
      charArray0[1] = 'P';
      charArray0[2] = '-';
      charArray0[3] = '9';
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance(charArray0);
      StrBuilder strBuilder3 = strBuilder2.append(0.0);
      StrBuilder strBuilder4 = strBuilder1.trim();
      char[] charArray1 = new char[4];
      charArray1[0] = 'C';
      charArray1[1] = '3';
      charArray1[2] = '3';
      charArray1[3] = '/';
      StrBuilder strBuilder5 = strBuilder1.append(charArray1);
      int int1 = strBuilder5.indexOf(';', (-1343));
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.lastIndexOf("J");
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      int int0 = 39;
      StrBuilder strBuilder0 = new StrBuilder(39);
      char[] charArray0 = new char[5];
      charArray0[0] = '#';
      charArray0[1] = '$';
      charArray0[2] = 'R';
      charArray0[3] = 'O';
      charArray0[4] = ':';
      // Undeclared exception!
      try { 
        strBuilder0.getChars((-2982), 39, charArray0, (-2982));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2982
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      String string0 = "H8f/l@r";
      StrBuilder strBuilder0 = new StrBuilder("H8f/l@r");
      char[] charArray0 = new char[4];
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "Invalid startIndex: ");
      charArray0[0] = 'A';
      strBuilder0.size = (-958);
      charArray0[1] = 'e';
      charArray0[2] = '@';
      charArray0[3] = 'b';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0);
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      int int0 = 116;
      StrBuilder strBuilder0 = new StrBuilder(116);
      // Undeclared exception!
      try { 
        strBuilder0.insert(4, 116);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 4
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.append(0.0);
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrBuilder strBuilder2 = strBuilder1.append(3039);
      StrBuilder strBuilder3 = strBuilder1.replaceFirst(strMatcher0, "");
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      char char0 = 'j';
      char[] charArray0 = new char[6];
      charArray0[0] = 'j';
      charArray0[1] = 'E';
      charArray0[2] = 'j';
      charArray0[3] = 'j';
      charArray0[4] = 'j';
      charArray0[5] = 'j';
      // Undeclared exception!
      try { 
        strMatcher0.isMatch(charArray0, 1386, 4, 4);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("B~\"om?)4");
      char char0 = 'a';
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('a');
      StrBuilder strBuilder2 = strBuilder0.appendNull();
      char char1 = '8';
      StrBuilder strBuilder3 = strBuilder2.deleteAll('8');
      StrBuilder strBuilder4 = strBuilder3.append(0.0);
      StrBuilder strBuilder5 = strBuilder4.replaceFirst("B~\"om?)4", "B~\"om?)4");
      // Undeclared exception!
      try { 
        strBuilder5.charAt(1556);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1556
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("1.2");
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrBuilder strBuilder2 = strBuilder0.deleteAll((StrMatcher) null);
      char[] charArray0 = new char[0];
      StrBuilder strBuilder3 = strBuilder2.insert(0, charArray0, 0, 0);
      StrBuilder strBuilder4 = strBuilder2.append('$');
      String string0 = strBuilder0.leftString(48);
      char[] charArray1 = strBuilder0.toCharArray();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray1);
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("~J)2S1y^Yn");
      StrBuilder strBuilder5 = strBuilder0.replace(strMatcher0, "1.2", 0, 9, 2740);
      StrBuilder strBuilder6 = strBuilder1.replaceFirst('$', '%');
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("^-k2EkpbD^Z");
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      char[] charArray0 = new char[2];
      charArray0[0] = '9';
      charArray0[1] = '/';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(1058, 1058, charArray0, (-52));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1058
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      int int0 = (-313);
      StrBuilder strBuilder0 = new StrBuilder((-313));
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      int int1 = 0;
      int int2 = strBuilder0.indexOf(strMatcher0, 0);
      String string0 = "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter";
      int int3 = 48;
      int int4 = (-636);
      // Undeclared exception!
      try { 
        strBuilder0.append("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter", 48, (-636));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(4248);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.toString();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      StrBuilder strBuilder1 = strBuilder0.insert(0, object0);
      int int0 = strBuilder0.length();
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      String string0 = "sD/K7";
      StrBuilder strBuilder0 = new StrBuilder("sD/K7");
      StrBuilder strBuilder1 = strBuilder0.deleteAll('-');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      int int0 = (-627);
      // Undeclared exception!
      try { 
        strBuilder0.substring((-627));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -627
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      int int1 = strBuilder0.size();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int2 = 32;
      strBuilder_StrBuilderReader0.mark(32);
      long long0 = strBuilder_StrBuilderReader0.skip(0);
      int int3 = strBuilder0.capacity();
      StrBuilder strBuilder1 = strBuilder0.append((long) 0);
      Integer integer0 = new Integer(0);
      char char0 = 'B';
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadLeft((Object) integer0, Integer.MAX_VALUE, 'B');
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('Q');
      boolean boolean0 = strBuilder0.isEmpty();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      char[] charArray0 = new char[8];
      charArray0[0] = 'Q';
      charArray0[1] = 'Q';
      charArray0[2] = 'Q';
      charArray0[3] = '';
      charArray0[5] = 'Q';
      charArray0[6] = 'Q';
      charArray0[7] = 'Q';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 0, 0);
      StrBuilder strBuilder2 = strBuilder0.trim();
      StrBuilder strBuilder3 = strBuilder1.replaceAll('l', 'Q');
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = 0;
      char char0 = 'p';
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("");
      StrBuilder strBuilder2 = strBuilder0.appendPadding(0, 'p');
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(0, '8');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer";
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      StrBuilder strBuilder2 = strBuilder0.appendNull();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      char[] charArray0 = new char[5];
      charArray0[0] = 'u';
      charArray0[1] = 'H';
      charArray0[2] = 'K';
      charArray0[3] = '$';
      charArray0[4] = 'G';
      strBuilder_StrBuilderWriter0.write(charArray0);
      StrBuilder strBuilder3 = strBuilder0.appendNewLine();
      strBuilder_StrBuilderWriter0.close();
      int int0 = (-203);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-203), "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -203
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("n-(^K}#/LNd.,2");
      int int0 = 39;
      char char0 = 'S';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) "n-(^K}#/LNd.,2", 39, 'S');
      String string0 = "7SwJds 5%T%}'";
      // Undeclared exception!
      try { 
        strBuilder1.setLength((-2114));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2114
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      int int0 = strBuilder0.length();
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher(":++1RtAmi*y;q:MepJ-");
      int int1 = strBuilder0.indexOf((StrMatcher) strMatcher_StringMatcher0);
      StrBuilder strBuilder1 = strBuilder0.trim();
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[1];
      charArray0[0] = 'Z';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0);
      int int1 = strBuilder_StrBuilderReader0.read();
      StrBuilder strBuilder1 = strBuilder0.append((Object) strBuilder_StrBuilderReader0);
      char char0 = '3';
      // Undeclared exception!
      try { 
        strBuilder1.setCharAt((-1), '3');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Ox!'@9n[");
      int int0 = (-578);
      char char0 = 'u';
      // Undeclared exception!
      try { 
        strBuilder0.insert(317, 'u');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 317
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      int int0 = (-2305);
      StrBuilder strBuilder0 = new StrBuilder((-2305));
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      String string0 = null;
      boolean boolean0 = linkedList0.add((Object) strTokenizer0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, (String) null);
      StrBuilder strBuilder2 = strBuilder0.clear();
      Integer integer0 = new Integer((-2305));
      boolean boolean1 = linkedList0.offer(integer0);
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("java.ext.dirs");
      StrBuilder strBuilder3 = strBuilder2.deleteAll((StrMatcher) strMatcher_StringMatcher0);
      // Undeclared exception!
      try { 
        strBuilder0.insert(102, (-2045.26748));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 102
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(0.0F);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("");
      StrBuilder strBuilder2 = strBuilder1.deleteAll(strMatcher0);
      StrBuilder strBuilder3 = strBuilder1.clear();
      StrBuilder strBuilder4 = strBuilder0.replaceFirst(strMatcher0, "");
      int int0 = strBuilder0.indexOf('C', 0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder3.new StrBuilderWriter();
      Writer writer0 = strBuilder_StrBuilderWriter0.append('/');
      strBuilder_StrBuilderWriter0.flush();
      String string0 = strBuilder0.rightString(0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      int int0 = 2502;
      StrBuilder strBuilder1 = new StrBuilder(2502);
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
      char char0 = '{';
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(2502, '{');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2502
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(5);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoredMatcher(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, (String) null);
      String string0 = null;
      StrBuilder strBuilder2 = strBuilder0.replaceAll("\rQ>^c#Zt6@b>OB3", (String) null);
      int int0 = strBuilder0.size();
      StrBuilder strBuilder3 = strBuilder0.reverse();
      int int1 = (-1);
      int int2 = 0;
      // Undeclared exception!
      try { 
        strBuilder2.replace(strMatcher0, "f/UMo{we&*2BlW'[i", 5, 116, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      boolean boolean1 = strBuilder0.contains(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher1);
      StrBuilder strBuilder2 = strBuilder0.appendPadding((-2403), 'V');
      String string0 = strBuilder2.leftString((-2403));
      int int0 = 0;
      StrBuilder strBuilder3 = strBuilder0.insert(0, (-1091L));
      StrBuilder strBuilder4 = strBuilder2.insert(0, (-2403));
      char[] charArray0 = new char[5];
      charArray0[0] = 'X';
      charArray0[1] = 'V';
      charArray0[2] = 'V';
      charArray0[3] = 'V';
      charArray0[4] = 'V';
      int int1 = (-102);
      // Undeclared exception!
      try { 
        strBuilder1.insert(0, charArray0, 0, (-102));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: -102
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      char[] charArray0 = new char[3];
      charArray0[0] = '<';
      charArray0[1] = 'L';
      charArray0[2] = 'M';
      StrBuilder strBuilder1 = strBuilder0.insert(0, charArray0, 0, 0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("");
      boolean boolean0 = strBuilder1.contains('\\');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      char[] charArray0 = new char[7];
      charArray0[0] = '\\';
      charArray0[1] = '\\';
      charArray0[2] = '\\';
      charArray0[3] = '\\';
      charArray0[4] = '\\';
      charArray0[5] = '\\';
      charArray0[6] = '\\';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 39, 39);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      int int0 = strBuilder0.indexOf((StrMatcher) null, 0);
      Integer integer0 = new Integer(0);
      char char0 = 'b';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) integer0, (-91), 'b');
      StrBuilder strBuilder2 = strBuilder1.setNullText("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      // Undeclared exception!
      try { 
        strBuilder0.substring(845);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.setNullText("");
      String string0 = strBuilder1.substring(0);
      StrBuilder strBuilder2 = strBuilder1.append((Object) "");
      int int0 = strBuilder0.validateRange(0, 9);
      char[] charArray0 = strBuilder0.toCharArray();
      char[] charArray1 = new char[0];
      StrBuilder strBuilder3 = strBuilder2.insert(9, 0);
      StrBuilder strBuilder4 = strBuilder2.insert(9, (long) 9);
      // Undeclared exception!
      try { 
        strBuilder2.insert(0, charArray1, (-640), 9);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: -640
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[4];
      charArray0[0] = '>';
      charArray0[1] = 'R';
      charArray0[2] = 'Y';
      charArray0[3] = 'J';
      char[] charArray1 = strBuilder0.getChars(charArray0);
      StringBuffer stringBuffer0 = new StringBuffer();
      int int0 = (-1470);
      StrBuilder strBuilder1 = new StrBuilder();
      StringBuffer stringBuffer1 = stringBuffer0.insert(0, (float) 0);
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, 114, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("1.3");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
      char[] charArray0 = strBuilder0.getChars((char[]) null);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder2 = strBuilder1.appendNewLine();
      StringBuffer stringBuffer0 = strBuilder1.toStringBuffer();
      int int0 = strBuilder2.lastIndexOf((StrMatcher) null);
      StrBuilder strBuilder3 = strBuilder0.appendNull();
      StrBuilder strBuilder4 = strBuilder2.append((-1.0F));
      StrBuilder strBuilder5 = strBuilder4.appendNewLine();
      StrBuilder strBuilder6 = strBuilder4.ensureCapacity((-1));
      // Undeclared exception!
      try { 
        strBuilder6.insert((-1), (-4163.57F));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      char[] charArray0 = new char[3];
      charArray0[0] = '5';
      charArray0[1] = 's';
      charArray0[2] = ',';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((-1620), 0, 'W');
      StrBuilder strBuilder2 = strBuilder1.append(strBuilder0);
      String string0 = strBuilder1.getNullText();
      StrBuilder strBuilder3 = strBuilder1.setNullText((String) null);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) "Array element ", (-1399), 'x');
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "");
      char[] charArray0 = new char[9];
      charArray0[0] = 'l';
      charArray0[1] = '/';
      charArray0[2] = 'k';
      charArray0[3] = 'M';
      Writer writer0 = strBuilder0.asWriter();
      charArray0[4] = '/';
      charArray0[5] = 'b';
      charArray0[6] = 'c';
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setQuoteChar('b');
      charArray0[7] = '[';
      charArray0[8] = '%';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 44, 44);
      // Undeclared exception!
      try { 
        strBuilder0.insert(5, 1673L);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 5
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 1329;
      // Undeclared exception!
      try { 
        strBuilder0.insert(1329, 480.747115046);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1329
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-160);
      StrBuilder strBuilder1 = new StrBuilder((-160));
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt((-160));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -160
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(3036.6143F);
      // Undeclared exception!
      try { 
        strBuilder0.insert(1285, (double) 3036.6143F);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1285
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      String string0 = "}e\"!A2Q$ ~89%}Zo;e>";
      char[] charArray0 = new char[1];
      charArray0[0] = 'x';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, (-1859), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = null;
      StrBuilder strBuilder1 = new StrBuilder((String) null);
      int int1 = 0;
      String string1 = strBuilder1.midString(0, 0);
      boolean boolean0 = strBuilder0.equals(strBuilder1);
      boolean boolean1 = strBuilder1.equals(strBuilder0);
      char[] charArray0 = new char[1];
      charArray0[0] = '!';
      StrBuilder strBuilder2 = strBuilder0.insert(0, charArray0);
      StrBuilder strBuilder3 = strBuilder0.append(charArray0);
      // Undeclared exception!
      try { 
        strBuilder3.substring(34, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.contains('=');
      boolean boolean1 = strBuilder0.isEmpty();
      // Undeclared exception!
      try { 
        strBuilder0.insert(48, true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 48
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(108);
      // Undeclared exception!
      try { 
        strBuilder0.charAt(908);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 908
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.SystemUtils");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("org.apache.commons.lang.SystemUtils");
      String string0 = strBuilder0.getNewLineText();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.add("org.apache.commons.lang.SystemUtils");
      } catch(UnsupportedOperationException e) {
         //
         // add() is unsupported
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Zna/0 TeX&,B$");
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.deleteCharAt(0);
      StrBuilder strBuilder2 = strBuilder0.append((Object) null);
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      StrBuilder strBuilder3 = strBuilder0.replaceFirst(strMatcher0, "");
      int int1 = 1180;
      // Undeclared exception!
      try { 
        strBuilder0.insert(1180, 1180);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1180
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      String string0 = strBuilder0.rightString(0);
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      int int1 = strBuilder0.indexOf(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.append("");
      char char0 = ',';
      char[] charArray0 = new char[8];
      charArray0[0] = ',';
      charArray0[1] = ',';
      charArray0[2] = ',';
      charArray0[3] = ',';
      charArray0[4] = ',';
      charArray0[5] = ',';
      charArray0[6] = ',';
      charArray0[7] = ',';
      int int2 = 32;
      // Undeclared exception!
      try { 
        strBuilder1.append(charArray0, 0, 32);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("vrhX)Z;'R:z{t");
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(object0, 0, '+');
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrBuilder strBuilder2 = strBuilder0.replaceAll(strMatcher0, "m2~fIR=fJ{ ");
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((-2120.089225608));
      StrBuilder strBuilder2 = strBuilder0.replaceAll("org.apache.commons.lang.text.StrBuilder", "org.apache.commons.lang.text.StrBuilder");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("end < start");
      int int1 = strBuilder2.indexOf(strMatcher0);
      int int2 = strBuilder_StrBuilderReader0.read();
      String string0 = strBuilder2.leftString((-2423));
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      String string0 = "9Aw74{/gvC";
      StrBuilder strBuilder0 = new StrBuilder("9Aw74{/gvC");
      int int0 = 116;
      StrBuilder strBuilder1 = strBuilder0.append((long) 116);
      int int1 = strBuilder0.lastIndexOf('m', 116);
      StrBuilder strBuilder2 = strBuilder0.insert(0, 1199L);
      // Undeclared exception!
      try { 
        strBuilder2.append("J_NMWGXg", 1, 116);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(0);
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder strBuilder1 = strBuilder0.replaceAll("1I^J[W", "1I^J[W");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(0);
      strBuilder_StrBuilderWriter0.write("p_rgi(&Y", 1, 0);
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft(0, 0, 'z');
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "";
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("", "%0p");
      int int0 = 1230;
      char[] charArray0 = new char[2];
      charArray0[0] = 'G';
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer0 = new Integer(0);
      boolean boolean0 = linkedList0.offerFirst(integer0);
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Collection) linkedList0, "");
      boolean boolean1 = linkedList0.add(integer0);
      charArray0[1] = 'L';
      Stream<Integer> stream0 = linkedList0.stream();
      // Undeclared exception!
      try { 
        strBuilder1.insert(1230, charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1230
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      char[] charArray0 = new char[1];
      charArray0[0] = '`';
      // Undeclared exception!
      try { 
        strBuilder0.insert(32, charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "n";
      boolean boolean0 = strBuilder0.endsWith("n");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      // Undeclared exception!
      try { 
        strBuilder0.replace(strMatcher0, "n", 1626, 1626, 1626);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1579);
      int int0 = strBuilder0.lastIndexOf("v-/iZ;-<fG!sg4m", (-2955));
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity((-1));
      StrBuilder strBuilder2 = strBuilder1.append((-657.01965F));
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder1);
      boolean boolean0 = strBuilder0.endsWith("v-/iZ;-<fG!sg4m");
      StrBuilder strBuilder4 = strBuilder1.replaceAll('c', 'c');
      String string0 = strBuilder0.rightString(1579);
      char[] charArray0 = new char[4];
      charArray0[0] = 'h';
      charArray0[1] = 'c';
      charArray0[2] = 'c';
      charArray0[3] = 'c';
      StrBuilder strBuilder5 = strBuilder4.append(charArray0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.next();
      StrBuilder strBuilder6 = strBuilder2.appendFixedWidthPadLeft((Object) "-657.01965-657.01965hccc", 1579, '{');
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1479);
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "x\"w9,1~");
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('.');
      boolean boolean0 = strBuilder0.contains((StrMatcher) strMatcher_CharMatcher0);
      StrBuilder strBuilder2 = strBuilder0.clear();
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = null;
      int int0 = 102;
      StrBuilder strBuilder1 = strBuilder0.append((StringBuffer) null, 102, 102);
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      int int1 = strBuilder0.lastIndexOf(strMatcher0);
      int int2 = (-893);
      int int3 = strBuilder0.lastIndexOf("", (-893));
      String string0 = strBuilder0.getNullText();
      StrBuilder strBuilder2 = new StrBuilder((-388));
      StrTokenizer strTokenizer0 = strBuilder2.asTokenizer();
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder2, 74, (-388));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[1];
      charArray0[0] = 'Z';
      // Undeclared exception!
      try { 
        strBuilder0.insert(2613, charArray0, 2613, 2613);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2613
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = "g+/2UFu_o)";
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("g+/2UFu_o)");
      StringBuffer stringBuffer0 = strBuilder1.toStringBuffer();
      StrBuilder strBuilder2 = strBuilder0.deleteFirst("0~[[(fQ");
      StringBuffer stringBuffer1 = stringBuffer0.append(112.774635F);
      int int0 = 0;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterMatcher(strMatcher0);
      StrBuilder strBuilder3 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "g+/2UFu_o)");
      StrBuilder strBuilder4 = strBuilder1.append(stringBuffer0);
      // Undeclared exception!
      try { 
        strBuilder2.insert(108, false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 108
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(2420L);
      StrBuilder strBuilder2 = strBuilder1.replaceAll("_)sSDu!,q", "_)sSDu!,q");
      char char0 = 'f';
      int int0 = strBuilder0.lastIndexOf('f');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = null;
      int int1 = (-2389);
      strBuilder_StrBuilderWriter0.write((-2389));
      int int2 = (-1317);
      char[] charArray1 = new char[4];
      strBuilder_StrBuilderWriter0.write(charArray1);
      charArray1[0] = 'J';
      charArray1[1] = 'f';
      charArray1[2] = 'f';
      charArray1[3] = 'f';
      strBuilder_StrBuilderWriter0.write(charArray1);
      // Undeclared exception!
      try { 
        strBuilder0.validateRange(4, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      StrBuilder strBuilder2 = strBuilder0.append(1.0F);
      // Undeclared exception!
      try { 
        strBuilder2.insert((-2), (char[]) null, (-2), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "2^FH+H8#|]RlR";
      StrBuilder strBuilder1 = new StrBuilder("2^FH+H8#|]RlR");
      StringBuffer stringBuffer0 = new StringBuffer("2^FH+H8#|]RlR");
      StrBuilder strBuilder2 = strBuilder0.append(stringBuffer0);
      // Undeclared exception!
      try { 
        strBuilder2.substring((-817));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -817
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      strBuilder_StrBuilderReader0.close();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((-98), 1484, 'A');
      int int1 = strBuilder1.validateRange(48, 1484);
      int int2 = strBuilder1.indexOf('A');
      StrBuilder strBuilder2 = new StrBuilder(2);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      StrBuilder strBuilder3 = strBuilder1.replaceFirst(strMatcher0, "7E*l");
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[2];
      charArray0[0] = 'v';
      charArray0[1] = 'n';
      strBuilder_StrBuilderWriter0.write(charArray0);
      strBuilder_StrBuilderWriter0.write("user.dir");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(69, 0, 'Z');
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      strBuilder_StrBuilderWriter0.write(0);
      int int0 = strBuilder0.indexOf("hE@&", 830);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Integer integer0 = new Integer(0);
      StrBuilder strBuilder1 = strBuilder0.append((Object) integer0);
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      int int0 = strBuilder1.indexOf((StrMatcher) strMatcher_TrimMatcher0);
      StrBuilder strBuilder2 = strBuilder0.deleteAll((String) null);
      StrBuilder strBuilder3 = strBuilder1.append((Object) strBuilder0);
      StrBuilder strBuilder4 = strBuilder2.insert(5, false);
      int int1 = strBuilder2.lastIndexOf('}', 1212);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceAll("@w", "Z|-EJ");
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      StrBuilder strBuilder2 = strBuilder1.deleteFirst(strMatcher0);
      Writer writer0 = strBuilder0.asWriter();
      int int0 = strBuilder0.capacity();
      // Undeclared exception!
      try { 
        strBuilder1.replace(strMatcher0, "Z|-EJ", 1694, (-1517), (-2963));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("POP4c9kMa~O~#Zx");
      char char0 = '<';
      StrMatcher strMatcher0 = StrMatcher.charMatcher('<');
      int int0 = strBuilder0.lastIndexOf(strMatcher0, (-87));
      String string0 = strBuilder0.substring(0);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((-87), 556, '<');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[3];
      charArray0[0] = '<';
      charArray0[1] = '<';
      int int1 = 1403;
      String string1 = "#os27m ";
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("#os27m ", (-965), 1403);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      Writer writer0 = strBuilder0.asWriter();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      Iterator<Object> iterator0 = linkedList0.descendingIterator();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(iterator0, "");
      StrBuilder strBuilder2 = strBuilder0.append(false);
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators(iterator0, "");
      StrBuilder strBuilder4 = strBuilder2.replaceFirst("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer", "");
      // Undeclared exception!
      try { 
        strBuilder2.validateIndex(503);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 503
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("1.2");
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      int int0 = 114;
      StrBuilder strBuilder1 = new StrBuilder("1.2");
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      int int1 = strBuilder0.indexOf(strMatcher0, 114);
      boolean boolean0 = strBuilder0.contains("1.2");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder strBuilder3 = strBuilder0.replaceFirst("1.2", "1.2");
      char char0 = 't';
      int int2 = strBuilder3.length();
      // Undeclared exception!
      try { 
        strBuilder1.append("", (-1), (-1226));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceAll("", "");
      StrBuilder strBuilder2 = strBuilder1.append((-2121));
      strBuilder1.size = 102;
      StrBuilder strBuilder3 = strBuilder0.setLength(0);
      StrBuilder strBuilder4 = strBuilder3.appendPadding((-730), 'A');
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      int int0 = strBuilder0.lastIndexOf("", 0);
      StrBuilder strBuilder5 = strBuilder3.replaceFirst("", "");
      StrBuilder strBuilder6 = strBuilder5.deleteFirst("");
      StrBuilder strBuilder7 = strBuilder0.deleteFirst((StrMatcher) null);
      int int1 = strBuilder1.indexOf((StrMatcher) null, 0);
      int int2 = strBuilder3.lastIndexOf('M');
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      String string0 = "I^s{'w";
      StrBuilder strBuilder2 = strBuilder1.deleteFirst('<');
      int int0 = strBuilder0.indexOf("I^s{'w", 0);
      boolean boolean0 = strBuilder1.contains("I^s{'w");
      char[] charArray0 = strBuilder0.toCharArray(0, 0);
      int int1 = strBuilder0.lastIndexOf((StrMatcher) null);
      StrBuilder strBuilder3 = strBuilder0.append('#');
      StrBuilder strBuilder4 = strBuilder3.replaceAll((StrMatcher) null, "I^s{'w");
      StrBuilder strBuilder5 = strBuilder2.replaceAll('<', '<');
      // Undeclared exception!
      try { 
        strBuilder2.delete(0, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "Kx;[RG8vT");
      String string0 = strBuilder1.leftString(39);
      boolean boolean0 = strBuilder0.contains("0");
      Integer integer0 = new Integer((-357));
      char char0 = '5';
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight((Object) integer0, (-1384), '5');
      Reader reader0 = strBuilder0.asReader();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      char[] charArray0 = new char[6];
      charArray0[0] = '5';
      charArray0[1] = '5';
      charArray0[2] = '5';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.append((CharSequence) "Kx;[RG8vT", (-357), 3339);
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrBuilder strBuilder2 = strBuilder1.replace((StrMatcher) null, "", 0, 2054, 0);
      StrBuilder strBuilder3 = strBuilder0.append(")=\"Wk9Emnjc");
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setLength(0);
      StrBuilder strBuilder2 = strBuilder0.setLength(102);
      StrBuilder strBuilder3 = strBuilder1.replaceFirst("}P?", "}P?");
      StrBuilder strBuilder4 = strBuilder0.appendNull();
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) strBuilder4;
      objectArray0[1] = (Object) strBuilder4;
      StrBuilder strBuilder5 = strBuilder4.appendWithSeparators(objectArray0, (String) null);
      StrBuilder strBuilder6 = strBuilder1.append((float) 102);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2908);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(97, 39, 'I');
      // Undeclared exception!
      try { 
        strBuilder1.setLength((-1981));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1981
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("1.2");
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrBuilder strBuilder1 = new StrBuilder("1.2");
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      int int0 = strBuilder0.indexOf(strMatcher0, 114);
      boolean boolean0 = strBuilder0.contains("1.2");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      char char0 = 't';
      // Undeclared exception!
      try { 
        strBuilder1.getChars(102, 102, (char[]) null, 114);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 102
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.append('t');
      StrBuilder strBuilder2 = strBuilder0.trim();
      StrBuilder strBuilder3 = strBuilder2.replaceAll('z', 'k');
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("\"Yeyn1JqX=M");
      StrBuilder strBuilder1 = strBuilder0.delete(0, 0);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.validateRange(0, 0);
      int int1 = 2;
      String string0 = strBuilder0.substring(0, 2);
      char[] charArray0 = strBuilder0.toCharArray(0, 0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int2 = strBuilder_StrBuilderReader0.read(charBuffer0);
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      int int3 = strBuilder0.indexOf(strMatcher0, 0);
      int int4 = 116;
      strBuilder_StrBuilderReader0.mark(116);
      int int5 = 0;
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, (-2652), 0);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteAll("<=[uV9;+^WcWu3u8");
      StrBuilder strBuilder2 = strBuilder1.append(true);
      StrBuilder strBuilder3 = strBuilder2.append((-1.0F));
      // Undeclared exception!
      try { 
        strBuilder2.replace((-45), 57, "<=[uV9;+^WcWu3u8");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -45
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("PD!#J)S,");
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, (String) null);
      // Undeclared exception!
      try { 
        strBuilder0.substring(34, 34);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("_oY@>uFJ3wN6W@Wk");
      Reader reader0 = strBuilder0.asReader();
      // Undeclared exception!
      try { 
        strBuilder0.substring((-1160), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1160
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      // Undeclared exception!
      try { 
        strBuilder0.replace(2442, 2442, (String) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      char char0 = ')';
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher(')');
      int int0 = strBuilder0.indexOf((StrMatcher) strMatcher_CharMatcher0, 0);
      StrBuilder strBuilder1 = strBuilder0.append(true);
      char[] charArray0 = new char[5];
      // Undeclared exception!
      try { 
        strBuilder1.insert((-1), ')');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2589);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(2589);
      int int0 = strBuilder_StrBuilderReader0.read();
      StrBuilder strBuilder1 = strBuilder0.deleteAll('r');
      // Undeclared exception!
      try { 
        strBuilder1.deleteCharAt(2589);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2589
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      String string0 = "u(lU>'N.|J7mWAK#";
      StrBuilder strBuilder0 = new StrBuilder("u(lU>'N.|J7mWAK#");
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "EN%M*Ak* !m,4qd9");
      int int0 = 115;
      int int1 = (-2511);
      int int2 = 0;
      char char0 = 'h';
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        strBuilder0.insert(32, object0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 2279;
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(2279);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2279
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "end < start";
      StrBuilder strBuilder1 = strBuilder0.deleteAll("end < start");
      StrBuilder strBuilder2 = strBuilder1.deleteFirst("end < start");
      StrBuilder strBuilder3 = strBuilder0.appendPadding(405, 'O');
      Object object0 = new Object();
      StrBuilder strBuilder4 = strBuilder0.insert(0, object0);
      int int0 = 0;
      StrBuilder strBuilder5 = strBuilder4.appendFixedWidthPadRight(0, 0, 'O');
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("end < start");
      StrBuilder strBuilder6 = new StrBuilder();
      char[] charArray0 = new char[0];
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      int int1 = 0;
      StrBuilder strBuilder7 = strBuilder5.appendFixedWidthPadRight((Object) strBuilder6, 0, 'O');
      StrBuilder strBuilder8 = strBuilder5.append(false);
      StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance("end < start");
      StrBuilder strBuilder10 = strBuilder9.appendWithSeparators((Iterator) strTokenizer0, "f '/FPi");
      int int2 = strBuilder5.lastIndexOf((StrMatcher) strMatcher_StringMatcher0, 260);
      StrBuilder strBuilder11 = strBuilder7.setNewLineText("/s.Ipa]R^RDm,");
      int int3 = strBuilder4.indexOf('h');
      strBuilder8.validateIndex(0);
      int int4 = strBuilder0.hashCode();
      // Undeclared exception!
      try { 
        strBuilder7.insert((-1), (float) (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[7];
      charArray0[0] = 'k';
      charArray0[1] = 'D';
      charArray0[2] = '`';
      charArray0[3] = '2';
      charArray0[4] = ' ';
      charArray0[5] = '*';
      charArray0[6] = 'h';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 0, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(31);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[4];
      charArray0[0] = 'y';
      charArray0[1] = '+';
      charArray0[2] = 'W';
      charArray0[3] = '<';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 31, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Reader reader0 = strBuilder0.asReader();
      Reader reader1 = strBuilder0.asReader();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset("XT%.7rhZn#mA)n~w");
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.previous();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      char[] charArray0 = new char[7];
      charArray0[0] = '[';
      charArray0[1] = 'E';
      charArray0[2] = 'K';
      charArray0[3] = '^';
      charArray0[4] = 'Q';
      charArray0[5] = '+';
      charArray0[6] = '=';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, (-1986), 1321);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      String string0 = strBuilder0.toString();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      StrBuilder strBuilder1 = new StrBuilder(0);
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, (-2915), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('7');
      Object[] objectArray0 = null;
      String string0 = "";
      char[] charArray0 = new char[4];
      charArray0[0] = '7';
      charArray0[1] = '7';
      charArray0[2] = '7';
      charArray0[3] = '7';
      // Undeclared exception!
      try { 
        strBuilder0.insert(44, charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 44
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_TrimMatcher0, (-2783));
      StrBuilder strBuilder1 = strBuilder0.replaceFirst((StrMatcher) strMatcher_TrimMatcher0, "");
      StrBuilder strBuilder2 = strBuilder1.append('i');
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators((Iterator) null, (String) null);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.append((CharSequence) null, 2608, (-1480));
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      char[] charArray0 = new char[7];
      charArray0[0] = 'x';
      charArray0[1] = 'y';
      charArray0[2] = 'y';
      charArray0[3] = '5';
      charArray0[4] = 'S';
      charArray0[5] = 'X';
      charArray0[6] = '1';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      // Undeclared exception!
      try { 
        strBuilder0.insert(3, 0.0F);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      int int0 = 1657;
      StrBuilder strBuilder0 = new StrBuilder(1657);
      int int1 = 5;
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray(5, 1657);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-3675));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[3];
      charArray0[0] = '1';
      charArray0[1] = 'n';
      charArray0[2] = ' ';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 3930, (-354));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      StrBuilder strBuilder2 = strBuilder0.deleteFirst('/');
      // Undeclared exception!
      try { 
        strBuilder2.append(strBuilder1, 3327, 3327);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder("=`0>GusYP7w@+9");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      StrBuilder strBuilder2 = strBuilder0.deleteAll(strMatcher0);
      StrBuilder strBuilder3 = strBuilder0.setNewLineText("s:<Su=9]W OZLY$'7");
      Writer writer0 = strBuilder0.asWriter();
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(5);
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.append((-1352L));
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.append((double) 0);
      StrBuilder strBuilder2 = strBuilder0.append(0);
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      StrBuilder strBuilder3 = strBuilder2.deleteAll(strMatcher0);
      StrMatcher strMatcher1 = StrMatcher.tabMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher1);
      StrBuilder strBuilder4 = strBuilder0.trim();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.setNullText("C");
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrBuilder strBuilder2 = strBuilder1.deleteFirst(strMatcher0);
      StrBuilder strBuilder3 = strBuilder2.deleteFirst(strMatcher0);
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('k');
      StrBuilder strBuilder4 = strBuilder0.replaceFirst((StrMatcher) strMatcher_CharMatcher0, "The Array must not be null");
      String string0 = strBuilder1.substring(0);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Xz^/e~!");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[2];
      charArray0[0] = 'Q';
      charArray0[1] = 'O';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, (-1113), (-1113));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("w'");
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray(379, 1);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(0, 'v');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("SE=eQ/)w9*C=");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((-3683), (-3683), ',');
      StrBuilder strBuilder2 = strBuilder0.deleteAll('y');
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid startIndex: ");
      String string0 = strBuilder0.getNewLineText();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "Invalid startIndex: ");
      ListIterator<String> listIterator0 = linkedList0.listIterator();
      String string1 = strBuilder0.getNewLineText();
      int int0 = 4398;
      StrBuilder strBuilder2 = strBuilder1.append((String) null, 4398, 4398);
      char char0 = ':';
      boolean boolean0 = strBuilder0.contains(':');
      int int1 = 5047;
      // Undeclared exception!
      try { 
        strBuilder1.substring(5047, 5047);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("+MF");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("+MF", 914, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1629));
      int int0 = strBuilder0.size();
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      // Undeclared exception!
      try { 
        strBuilder1.validateIndex(9);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 9
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("`3,%<eS.MQf");
      String string0 = strBuilder0.midString((-2764), (-2764));
      String string1 = strBuilder0.getNewLineText();
      StrBuilder strBuilder1 = strBuilder0.deleteAll("java.vm.specification.version");
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer";
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      StrBuilder strBuilder2 = strBuilder0.appendNull();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      char[] charArray0 = new char[5];
      charArray0[0] = 'u';
      charArray0[1] = 'H';
      charArray0[2] = 'K';
      charArray0[3] = '$';
      charArray0[4] = 'G';
      strBuilder_StrBuilderWriter0.write(charArray0);
      StrBuilder strBuilder3 = strBuilder0.appendNewLine();
      strBuilder_StrBuilderWriter0.close();
      int int0 = (-203);
      StrBuilder strBuilder4 = new StrBuilder();
      String string1 = strBuilder4.rightString(4);
      StrBuilder strBuilder5 = strBuilder1.deleteFirst(strMatcher0);
      int int1 = 418;
      StrBuilder strBuilder6 = strBuilder5.appendFixedWidthPadLeft((Object) strMatcher0, 418, '$');
      StrBuilder strBuilder7 = strBuilder3.deleteAll('X');
      int int2 = (-159);
      // Undeclared exception!
      try { 
        strBuilder1.append(strBuilder6, (-159), (-203));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[4];
      charArray0[0] = '>';
      charArray0[1] = 'R';
      charArray0[2] = 'Y';
      charArray0[3] = 'J';
      char[] charArray1 = strBuilder0.getChars(charArray0);
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder0, 114, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteAll("end < start");
      StrBuilder strBuilder2 = strBuilder1.deleteFirst("end < start");
      StrBuilder strBuilder3 = strBuilder0.appendPadding(405, 'O');
      Object object0 = new Object();
      StrBuilder strBuilder4 = strBuilder0.insert(0, object0);
      StrBuilder strBuilder5 = strBuilder4.appendFixedWidthPadRight(0, 0, 'O');
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("end < start");
      StrBuilder strBuilder6 = new StrBuilder();
      char[] charArray0 = new char[0];
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder7 = strBuilder5.appendFixedWidthPadRight((Object) strBuilder6, 0, 'O');
      StrBuilder strBuilder8 = strBuilder5.append(false);
      StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance("end < start");
      StrBuilder strBuilder10 = strBuilder9.appendWithSeparators((Iterator) strTokenizer0, "f '/FPi");
      int int0 = strBuilder5.lastIndexOf((StrMatcher) strMatcher_StringMatcher0, 260);
      StrBuilder strBuilder11 = strBuilder7.setNewLineText("/s.Ipa]R^RDm,");
      int int1 = strBuilder4.indexOf('h');
      int int2 = strBuilder0.hashCode();
      StrBuilder strBuilder12 = strBuilder8.replace(0, 0, "end < start");
      Writer writer0 = strBuilder2.asWriter();
      boolean boolean0 = strBuilder8.isEmpty();
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-870));
      char[] charArray0 = new char[2];
      charArray0[0] = '';
      charArray0[1] = ',';
      strBuilder0.buffer = charArray0;
      Reader reader0 = strBuilder0.asReader();
      char[] charArray1 = new char[1];
      charArray1[0] = ',';
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('');
      StrBuilder strBuilder1 = strBuilder0.replaceAll((StrMatcher) strMatcher_CharMatcher0, "org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrBuilder strBuilder2 = strBuilder0.append(charArray1);
      StrBuilder strBuilder3 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder4 = strBuilder3.appendWithSeparators((Collection) linkedList0, "user.dir");
      StrBuilder strBuilder5 = strBuilder4.append(0.0F);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder3.new StrBuilderReader();
      int int0 = reader0.read(charArray0);
      strBuilder_StrBuilderReader0.mark((-870));
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) reader0;
      objectArray0[1] = (Object) reader0;
      objectArray0[2] = (Object) ',';
      objectArray0[3] = (Object) strBuilder4;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      objectArray0[4] = object0;
      StrBuilder strBuilder6 = strBuilder3.appendWithSeparators(objectArray0, "org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrBuilder strBuilder7 = strBuilder2.appendFixedWidthPadRight(0, 0, 'A');
      String string0 = strBuilder2.getNullText();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder4.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-870));
      char[] charArray0 = new char[2];
      charArray0[0] = '';
      charArray0[1] = ',';
      strBuilder0.buffer = charArray0;
      Reader reader0 = strBuilder0.asReader();
      char[] charArray1 = new char[1];
      charArray1[0] = ',';
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('');
      StrBuilder strBuilder1 = strBuilder0.replaceAll((StrMatcher) strMatcher_CharMatcher0, "org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrBuilder strBuilder2 = strBuilder0.append(charArray1);
      StrBuilder strBuilder3 = strBuilder0.deleteAll("Tk3^>pQT}0");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder4 = strBuilder3.appendWithSeparators((Collection) linkedList0, "user.dir");
      StrBuilder strBuilder5 = strBuilder4.append(0.0F);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder3.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark((-870));
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) reader0;
      objectArray0[1] = (Object) reader0;
      objectArray0[2] = (Object) ',';
      objectArray0[3] = (Object) strBuilder4;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      objectArray0[4] = object0;
      StrBuilder strBuilder6 = strBuilder3.appendWithSeparators(objectArray0, "org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrBuilder strBuilder7 = strBuilder2.appendFixedWidthPadRight(0, 0, 'A');
      String string0 = strBuilder2.getNullText();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder4.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt((-2233));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2233
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("_;Y");
      int int0 = (-703);
      int int1 = 0;
      char char0 = 'd';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((-703), 0, 'd');
      StrBuilder strBuilder2 = strBuilder0.append('d');
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "_;Y");
      StringBuffer stringBuffer1 = stringBuffer0.append(0.0);
      // Undeclared exception!
      try { 
        strBuilder2.append(stringBuffer0, 2219, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.lastIndexOf(',');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoreEmptyTokens(true);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, ";NQF");
      StrBuilder strBuilder2 = strBuilder0.insert(0, (float) (-1));
      StrBuilder strBuilder3 = strBuilder2.append((long) 0);
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrTokenizer strTokenizer1 = strTokenizer0.setIgnoredMatcher(strMatcher0);
      StrBuilder strBuilder4 = strBuilder3.insert(0, true);
      StrBuilder strBuilder5 = strBuilder0.appendFixedWidthPadRight((-1393), 1569, 'r');
      StrBuilder strBuilder6 = strBuilder1.insert(0, true);
      StrBuilder strBuilder7 = strBuilder6.deleteFirst(";NQF");
      StrBuilder strBuilder8 = strBuilder1.appendNewLine();
      StrBuilder strBuilder9 = strBuilder8.append(strBuilder7);
      StrBuilder strBuilder10 = strBuilder6.append(";NQF");
      StrBuilder strBuilder11 = strBuilder4.append((Object) strBuilder6);
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      int int1 = strBuilder8.lastIndexOf((StrMatcher) strMatcher_NoMatcher0);
  }
}
