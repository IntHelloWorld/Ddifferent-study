/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 29 05:28:15 GMT 2020
 */

package org.apache.commons.lang.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.Writer;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.NoSuchElementException;
import org.apache.commons.lang.text.StrBuilder;
import org.apache.commons.lang.text.StrMatcher;
import org.apache.commons.lang.text.StrTokenizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StrBuilder_ESTest extends StrBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("xMjEV*3LM#A");
      Object object0 = new Object();
      StrBuilder strBuilder1 = strBuilder0.append(object0);
      Reader reader0 = strBuilder0.asReader();
      boolean boolean0 = strBuilder0.endsWith("|y)Jz$j#\"teZg1");
      StrBuilder strBuilder2 = strBuilder0.append('w');
      int int0 = strBuilder0.indexOf("Vzf~8P|K9{Wf.iuD/r");
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("java.version");
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.leftString((-1840));
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrBuilder strBuilder2 = strBuilder1.append(74);
      String string1 = strBuilder1.rightString((-1840));
      StrBuilder strBuilder3 = strBuilder1.deleteAll("");
      int int0 = strBuilder0.lastIndexOf('E');
      int int1 = strBuilder1.lastIndexOf("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      String string2 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder strBuilder4 = strBuilder2.reverse();
      // Undeclared exception!
      try { 
        strBuilder1.insert((-1), (Object) "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrBuilder strBuilder2 = strBuilder0.append(1656.81);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      char[] charArray0 = new char[5];
      charArray0[0] = 'P';
      charArray0[1] = 'J';
      charArray0[2] = 'y';
      charArray0[3] = 'E';
      charArray0[4] = 'c';
      strBuilder_StrBuilderWriter0.write(charArray0);
      int int0 = strBuilder0.length();
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-970));
      StrBuilder strBuilder1 = strBuilder0.clear();
      int int0 = strBuilder0.indexOf("(0u%y5w)s&");
      char[] charArray0 = new char[9];
      charArray0[0] = 'n';
      charArray0[1] = 'Y';
      char char0 = 'K';
      StringBuffer stringBuffer0 = new StringBuffer("(0u%y5w)s&");
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, (-2628), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      String string0 = "BA#l]\"";
      StrBuilder strBuilder0 = new StrBuilder("BA#l]\"");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark((-2962));
      strBuilder_StrBuilderReader0.reset();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      strBuilder_StrBuilderWriter0.flush();
      boolean boolean0 = strBuilder0.contains('-');
      boolean boolean1 = strBuilder0.endsWith("BA#l]\"");
      StrBuilder strBuilder2 = strBuilder0.trim();
      Reader reader0 = strBuilder2.asReader();
      StrBuilder strBuilder3 = strBuilder2.append((long) (-2962));
      StrBuilder strBuilder4 = strBuilder0.append(strBuilder2);
      StringBuffer stringBuffer0 = null;
      StrBuilder strBuilder5 = strBuilder0.append((StringBuffer) null, (-2962), (-1934));
      // Undeclared exception!
      try { 
        strBuilder2.delete(1879, 1879);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((-466));
      String string0 = strBuilder0.substring(1, 2);
      // Undeclared exception!
      try { 
        strBuilder0.replace(1023, 104, "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      StrBuilder strBuilder0 = new StrBuilder(2);
      StringBuffer stringBuffer0 = new StringBuffer("\":Ca}[F?EL()AA,HA^");
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 2, 44);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("ncSb!+G7y");
      char[] charArray0 = new char[1];
      charArray0[0] = 'A';
      strBuilder0.buffer = charArray0;
      // Undeclared exception!
      try { 
        strBuilder0.append(1.0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("6Y");
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) "6Y";
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "6Y");
      StrBuilder strBuilder2 = strBuilder0.insert(34, (double) 34);
      StrBuilder strBuilder3 = strBuilder2.trim();
      StrBuilder strBuilder4 = strBuilder1.delete(34, 1334);
      Writer writer0 = strBuilder2.asWriter();
      // Undeclared exception!
      try { 
        strBuilder3.append(strBuilder1, 34, 34);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(108);
      String string0 = null;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) null, (String) null);
      StrBuilder strBuilder2 = strBuilder1.append((long) 108);
      // Undeclared exception!
      try { 
        strBuilder0.substring(108, 108);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("#x;Atp1s5~wn$l?.\"");
      StrBuilder strBuilder1 = strBuilder0.append(0.0);
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) strTokenizer0;
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators(objectArray0, "#x;Atp1s5~wn$l?.\"");
      StrBuilder strBuilder3 = strBuilder0.deleteFirst("#x;Atp1s5~wn$l?.\"");
      int int0 = strBuilder0.indexOf('b', 45);
      StrBuilder strBuilder4 = strBuilder1.replaceFirst("#x;Atp1s5~wn$l?.\"", "#x;Atp1s5~wn$l?.\"");
      StrBuilder strBuilder5 = strBuilder4.appendWithSeparators((Collection) null, "#x;Atp1s5~wn$l?.\"");
      int int1 = strBuilder0.capacity();
      StrBuilder strBuilder6 = strBuilder2.setNullText("#x;Atp1s5~wn$l?.\"");
      StrBuilder strBuilder7 = strBuilder6.append('b');
      String string0 = "";
      // Undeclared exception!
      try { 
        strBuilder1.append("", 32, 90);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.leftString(0);
      StrBuilder strBuilder1 = strBuilder0.deleteAll('I');
      char char0 = ';';
      int int0 = strBuilder0.indexOf(';', 0);
      String string1 = strBuilder0.midString((-1), 0);
      int int1 = strBuilder1.indexOf("", (-1));
      StrBuilder strBuilder2 = strBuilder0.append(0L);
      boolean boolean0 = strBuilder0.contains("7=IQD`G9kcbhE");
      StrBuilder strBuilder3 = strBuilder1.ensureCapacity(1010);
      StrBuilder strBuilder4 = strBuilder3.replaceFirst((StrMatcher) null, "7=IQD`G9kcbhE");
      StrBuilder strBuilder5 = strBuilder3.appendPadding(0, 'I');
      String string2 = strBuilder5.toString();
      // Undeclared exception!
      try { 
        strBuilder3.charAt((-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      String string0 = "user.timezone";
      StrBuilder strBuilder0 = new StrBuilder("user.timezone");
      StrBuilder strBuilder1 = strBuilder0.append((Object) "user.timezone");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      int int0 = 61;
      Integer integer0 = new Integer(61);
      boolean boolean0 = linkedList0.add((Object) integer0);
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Collection) linkedList0, "user.timezone");
      strBuilder2.buffer = null;
      int int1 = strBuilder1.validateRange(48, 48);
      // Undeclared exception!
      try { 
        strBuilder1.append(strBuilder2);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      int int0 = (-223);
      StrBuilder strBuilder0 = new StrBuilder((-223));
      Object object0 = new Object();
      StrBuilder strBuilder1 = strBuilder0.append(object0);
      StrBuilder strBuilder2 = strBuilder0.appendNull();
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadLeft((-223), (-223), 'm');
      String string0 = "VzcU X)#v\">K=";
      int int1 = strBuilder3.indexOf("VzcU X)#v\">K=", (-223));
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("VzcU X)#v\">K=");
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder3.new StrBuilderReader();
      int int2 = (-328);
      char[] charArray0 = new char[6];
      charArray0[0] = 'm';
      charArray0[1] = 'm';
      charArray0[2] = 'm';
      charArray0[3] = 'm';
      charArray0[4] = 'm';
      charArray0[5] = '0';
      int int3 = 0;
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, (-328), 0);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-4170));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterChar('i');
      StrTokenizer strTokenizer1 = strBuilder_StrBuilderTokenizer0.setDelimiterString("K0Ym~KMF^o`A ~4]f");
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(object0, 101, '=');
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft((Object) strBuilder0, (-4170), 'i');
      char[] charArray0 = new char[9];
      charArray0[0] = '=';
      charArray0[1] = 'i';
      charArray0[2] = 'i';
      charArray0[3] = '4';
      charArray0[4] = 'i';
      charArray0[5] = '=';
      charArray0[6] = 'i';
      charArray0[7] = '=';
      charArray0[8] = 'i';
      strBuilder0.buffer = charArray0;
      // Undeclared exception!
      try { 
        strBuilder0.toStringBuffer();
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0, 0, 0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterMatcher(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Iterator) strTokenizer0, "lx@XqZk9<2,dZ5");
      String string0 = strBuilder0.substring(0, Integer.MAX_VALUE);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(47);
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder2 = strBuilder1.ensureCapacity(0);
      StrBuilder strBuilder3 = strBuilder0.appendNull();
      String string0 = strBuilder0.substring(0);
      StrBuilder strBuilder4 = strBuilder3.deleteFirst('3');
      StrBuilder strBuilder5 = strBuilder0.ensureCapacity(0);
      Writer writer0 = strBuilder3.asWriter();
      StrBuilder strBuilder6 = strBuilder1.appendPadding(0, '3');
      int int0 = strBuilder0.indexOf((String) null, 47);
      StrBuilder strBuilder7 = strBuilder3.ensureCapacity(47);
      int int1 = 754;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder5.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      char char0 = 'Q';
      char[] charArray0 = new char[9];
      charArray0[0] = 'Q';
      charArray0[1] = '3';
      charArray0[2] = 'Q';
      charArray0[3] = 'Q';
      charArray0[4] = 'Q';
      charArray0[5] = 'Q';
      charArray0[6] = 'Q';
      charArray0[7] = '3';
      charArray0[8] = 'Q';
      // Undeclared exception!
      try { 
        strBuilder3.getChars(0, 44, charArray0, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 44
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      int int0 = (-3388);
      StrBuilder strBuilder0 = new StrBuilder((-3388));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[8];
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("startIndex must be valid");
      charArray0[0] = 's';
      charArray0[1] = ':';
      charArray0[2] = '=';
      charArray0[3] = 'q';
      charArray0[4] = 'Y';
      charArray0[5] = ')';
      charArray0[6] = '0';
      char char0 = 'V';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, (-3388), (-3388));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      char char0 = '8';
      StrBuilder strBuilder1 = strBuilder0.replaceAll('8', 't');
      String string1 = "HP-UX";
      StrBuilder strBuilder2 = strBuilder0.replaceFirst("", "HP-UX");
      char char1 = '[';
      // Undeclared exception!
      try { 
        strBuilder0.insert(44, '[');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 44
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      String string0 = null;
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, (-3146), (-3146));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-3279));
      String string0 = strBuilder0.rightString((-3896));
      char[] charArray0 = new char[2];
      charArray0[0] = '4';
      charArray0[1] = '`';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder0.indexOf(strMatcher0, (-3279));
      int int1 = strBuilder0.hashCode();
      int int2 = strBuilder0.lastIndexOf('A', 664);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      Writer writer0 = strBuilder_StrBuilderWriter0.append('`');
      strBuilder_StrBuilderWriter0.write(charArray0);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) strMatcher0, (-1), 'A');
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, (-1), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("sQ0/`>^XH6");
      int int0 = strBuilder0.hashCode();
      // Undeclared exception!
      try { 
        strBuilder0.replace(115, 1121, "j2l\"pK>hs");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder strBuilder1 = strBuilder0.append(0.0F);
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrBuilder strBuilder2 = strBuilder1.append(true);
      StrBuilder strBuilder3 = strBuilder2.append(137);
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      StrBuilder strBuilder4 = strBuilder1.replaceFirst('}', ',');
      StrBuilder strBuilder5 = strBuilder4.reverse();
      String string0 = ".O;wmlg_HGWNR;&";
      // Undeclared exception!
      try { 
        strBuilder4.insert(2741, ':');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2741
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('@');
      StrBuilder strBuilder1 = strBuilder0.append("Solaris");
      StrBuilder strBuilder2 = strBuilder1.append(0);
      StrBuilder strBuilder3 = strBuilder0.replaceAll(strMatcher0, "");
      StrBuilder strBuilder4 = strBuilder3.deleteAll("");
      StrBuilder strBuilder5 = strBuilder3.append((-518.515));
      StrMatcher strMatcher2 = StrMatcher.charMatcher('@');
      StrBuilder strBuilder6 = strBuilder3.append("");
      StrBuilder strBuilder7 = strBuilder0.reverse();
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      String string0 = "Tm[";
      int int0 = (-3201);
      char[] charArray0 = new char[5];
      charArray0[0] = 'R';
      charArray0[1] = '|';
      charArray0[2] = '';
      charArray0[3] = 'H';
      charArray0[4] = 'g';
      // Undeclared exception!
      try { 
        strBuilder0.insert(0, charArray0, (-3201), (-3201));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: -3201
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      String string0 = strBuilder0.toString();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(0L);
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("vdh|'??4Z\"", "vdh|'??4Z\"");
      StrBuilder strBuilder2 = strBuilder1.deleteFirst("%@FN%|P");
      char[] charArray0 = new char[8];
      charArray0[0] = '?';
      charArray0[1] = '?';
      charArray0[2] = '?';
      charArray0[3] = '?';
      charArray0[4] = '?';
      charArray0[5] = '?';
      charArray0[6] = '?';
      charArray0[7] = '';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0);
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadRight((Object) "length must be valid", 101, '?');
      StrBuilder strBuilder4 = strBuilder3.replaceAll(", Length: 0", "length must be valid");
      long long1 = strBuilder_StrBuilderReader0.skip(1888L);
      StrBuilder strBuilder5 = strBuilder4.setNewLineText("length must be valid");
      String string1 = strBuilder5.midString(8, 8);
      StrBuilder strBuilder6 = strBuilder3.insert(101, (Object) "length must be valid");
      StrBuilder strBuilder7 = strBuilder0.append((float) 0L);
      StrBuilder strBuilder8 = strBuilder6.insert(33, "");
      StrBuilder strBuilder9 = strBuilder3.insert(8, 1695.7669431473846);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.deleteAll((String) null);
      StrBuilder strBuilder2 = strBuilder1.clear();
      StrBuilder strBuilder3 = strBuilder0.append('5');
      StrBuilder strBuilder4 = strBuilder3.appendNull();
      StrBuilder strBuilder5 = strBuilder3.insert(0, 0.0F);
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('5');
      int int0 = strBuilder4.indexOf(strMatcher0);
      StrBuilder strBuilder6 = strBuilder4.deleteCharAt(0);
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance("");
      StrBuilder strBuilder7 = strBuilder6.appendWithSeparators((Iterator) strTokenizer0, "^:f5Br0;2qtLC");
      StrBuilder strBuilder8 = strBuilder7.trim();
      StrBuilder strBuilder9 = strBuilder0.append(0);
      boolean boolean0 = strBuilder3.contains("<`'X\"\"9,S(K`E-KA");
      String string0 = strBuilder1.getNullText();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder3.new StrBuilderTokenizer();
      String string1 = strBuilder_StrBuilderTokenizer0.getContent();
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("-tb");
      String string0 = strBuilder0.rightString(4077);
      StrBuilder strBuilder1 = strBuilder0.trim();
      int int0 = strBuilder0.indexOf("um6?EatA=HD*f@", 1);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[4];
      charArray0[0] = '=';
      long long0 = strBuilder_StrBuilderReader0.skip((-809L));
      charArray0[1] = 'W';
      charArray0[2] = 'U';
      charArray0[3] = '/';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("yP+(M)c2gIs,:");
      char[] charArray0 = new char[3];
      charArray0[0] = '^';
      charArray0[1] = '1';
      charArray0[2] = '1';
      StrBuilder strBuilder1 = strBuilder0.insert(0, charArray0);
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight(0, 0, '!');
      StrBuilder strBuilder3 = strBuilder1.appendNull();
      StrBuilder strBuilder4 = strBuilder1.append((float) 0);
      StrBuilder strBuilder5 = strBuilder1.replaceAll("9|=-46gp'CLC3mS", "yP+(M)c2gIs,:");
      String string0 = strBuilder5.leftString(0);
      StrBuilder strBuilder6 = strBuilder0.appendNewLine();
      StrBuilder strBuilder7 = strBuilder6.append(charArray0, 0, 0);
      StrBuilder strBuilder8 = strBuilder0.setCharAt(0, '1');
      String string1 = strBuilder5.getNewLineText();
      int int0 = strBuilder8.indexOf('z');
      StrBuilder strBuilder9 = strBuilder3.appendFixedWidthPadLeft((-1), 82, '|');
      StrBuilder strBuilder10 = strBuilder8.append(0);
      StrBuilder strBuilder11 = strBuilder8.appendNewLine();
      String string2 = null;
      // Undeclared exception!
      try { 
        strBuilder11.insert((-1), true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      String string0 = strBuilder0.midString(0, 44);
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.insert(0, 0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      char[] charArray0 = new char[0];
      StrBuilder strBuilder2 = strBuilder1.insert(0, charArray0);
      StrMatcher strMatcher1 = StrMatcher.charMatcher('M');
      int int1 = strBuilder1.lastIndexOf(strMatcher0, 0);
      int int2 = strBuilder0.lastIndexOf("", 44);
      StrBuilder strBuilder3 = strBuilder0.insert(0, 1121);
      StrBuilder strBuilder4 = strBuilder3.append(false);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder4.new StrBuilderReader();
      char[] charArray1 = new char[1];
      charArray1[0] = '[';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray1, 39, 405);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(".t");
      int int0 = strBuilder0.lastIndexOf(".t", (-1409));
      int int1 = strBuilder0.lastIndexOf('0');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) ".t", 108, 'D');
      strBuilder_StrBuilderWriter0.write((-1));
      StrBuilder strBuilder2 = new StrBuilder();
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) ".t");
      StrBuilder strBuilder3 = strBuilder1.append(strBuilder2);
      strBuilder_StrBuilderWriter0.write((-1));
      StrBuilder strBuilder4 = strBuilder0.insert(1, true);
      Writer writer1 = strBuilder4.asWriter();
      char[] charArray0 = strBuilder0.toCharArray();
      StrBuilder strBuilder5 = new StrBuilder(102);
      boolean boolean0 = strBuilder1.equalsIgnoreCase(strBuilder5);
      StringBuffer stringBuffer0 = strBuilder4.toStringBuffer();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder3.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip((-1409));
      StrBuilder strBuilder6 = strBuilder3.appendFixedWidthPadRight(0, (-5196), '0');
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher((char[]) null);
      char[] charArray0 = new char[2];
      charArray0[0] = '\\';
      charArray0[1] = '_';
      boolean boolean0 = strBuilder_StrBuilderTokenizer0.hasNext();
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance();
      List list0 = strBuilder_StrBuilderTokenizer0.getTokenList();
      int int0 = strBuilder1.indexOf('\\', 0);
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft(1, 1, 'K');
      boolean boolean1 = strBuilder1.contains(strMatcher0);
      strBuilder2.size = 0;
      StrBuilder strBuilder3 = strBuilder2.deleteFirst("[S5wsw{(O*GwlvJu7ro");
      StrBuilder strBuilder4 = strBuilder2.deleteFirst(strMatcher0);
      StrBuilder strBuilder5 = strBuilder1.deleteFirst("[S5wsw{(O*GwlvJu7ro");
      String string0 = strBuilder2.toString();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(0);
      StrBuilder strBuilder6 = strBuilder3.append(charArray0, 2, 0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(charArray0, 0, 0);
      StrBuilder strBuilder7 = strBuilder0.replaceAll(" p7>Ay~DmD2)", "[S5wsw{(O*GwlvJu7ro");
      strBuilder_StrBuilderWriter0.close();
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("8w_K_<<");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("8w_K_<<");
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      char[] charArray0 = new char[0];
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrMatcher strMatcher2 = StrMatcher.charMatcher('^');
      StrBuilder strBuilder2 = strBuilder1.deleteFirst("8w_K_<<");
      // Undeclared exception!
      try { 
        strBuilder1.replace(strMatcher0, "Windows", (-1009), (-1009), (-1009));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1009
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.leftString((-2667));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setTrimmerMatcher((StrMatcher) null);
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("");
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "");
      StrBuilder strBuilder3 = strBuilder2.append(true);
      Writer writer0 = strBuilder0.asWriter();
      int int0 = strBuilder0.indexOf("");
      char[] charArray0 = new char[2];
      charArray0[0] = 'K';
      charArray0[1] = '{';
      StrBuilder strBuilder4 = strBuilder0.insert(0, charArray0);
      StrBuilder strBuilder5 = strBuilder0.deleteCharAt(0);
      int int1 = strBuilder0.lastIndexOf("");
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append("GH");
      StrBuilder strBuilder2 = strBuilder0.replaceFirst(" ea*", "|'1*V@(a,> >r3.S= x");
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-328));
      String string0 = strBuilder0.midString(0, 561);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      strBuilder_StrBuilderReader0.mark(0);
      int int1 = strBuilder_StrBuilderReader0.read();
      int int2 = strBuilder0.lastIndexOf("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      char[] charArray0 = new char[1];
      int int3 = strBuilder0.lastIndexOf(strMatcher0);
      charArray0[0] = 'p';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 561, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      int int0 = (-913);
      StrBuilder strBuilder0 = new StrBuilder((-913));
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      StrBuilder strBuilder2 = strBuilder0.reverse();
      StrBuilder strBuilder3 = strBuilder2.append(strBuilder0);
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      char[] charArray0 = new char[0];
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder4 = strBuilder1.appendPadding((-913), 'R');
      StrMatcher strMatcher2 = StrMatcher.stringMatcher("");
      // Undeclared exception!
      try { 
        strMatcher0.isMatch(charArray0, (-913), (-913), (-913));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.insert(0, (float) 0);
      // Undeclared exception!
      try { 
        strBuilder0.insert(785, (Object) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 785
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(0, 0, 's');
      StrBuilder strBuilder2 = strBuilder0.reverse();
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid startIndex: ");
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("");
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Iterator) null, "");
      StrBuilder strBuilder3 = strBuilder0.appendWithSeparators((Iterator) null, "Invalid startIndex: ");
      StrBuilder strBuilder4 = strBuilder0.appendPadding(0, '>');
      // Undeclared exception!
      try { 
        strBuilder3.delete((-1145), (-1145));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1145
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid startIndex: ");
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("");
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Iterator) null, "");
      StrBuilder strBuilder3 = strBuilder0.appendPadding(0, '>');
      // Undeclared exception!
      try { 
        strBuilder0.delete((-1145), (-1145));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1145
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      int int0 = 312;
      StrBuilder strBuilder0 = new StrBuilder(312);
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(1);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("I");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) "I", 693, '7');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) "I");
      LinkedList<StrBuilder> linkedList0 = new LinkedList<StrBuilder>();
      strBuilder0.validateIndex(693);
      strBuilder_StrBuilderWriter0.close();
      StrMatcher strMatcher0 = StrMatcher.charMatcher('7');
      String string0 = strBuilder1.toString();
      String string1 = strBuilder1.toString();
      StrBuilder strBuilder2 = strBuilder1.deleteCharAt(693);
      StrBuilder strBuilder3 = strBuilder1.replaceAlljava.lang.String@0000000002I", "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("8yaYlH}OEqSQt=B");
      StrBuilder strBuilder1 = strBuilder0.append("8yaYlH}OEqSQt=B");
      char[] charArray0 = strBuilder1.toCharArray(0, 0);
      StrBuilder strBuilder2 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder3 = strBuilder2.appendNull();
      boolean boolean0 = strBuilder1.endsWith("8yaYlH}OEqSQt=B");
      StrBuilder strBuilder4 = strBuilder3.deleteFirst('y');
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "8yaYlH}OEqSQt=B");
      StrBuilder strBuilder5 = strBuilder2.append(stringBuffer0);
      char char0 = 'K';
      StrBuilder strBuilder6 = strBuilder4.appendFixedWidthPadRight(0, 0, 'K');
      StrTokenizer strTokenizer0 = strBuilder6.asTokenizer();
      String string0 = strBuilder4.toString();
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      int int0 = 0;
      // Undeclared exception!
      try { 
        strMatcher0.isMatch(charArray0, 677, 0, 2927);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 677
         //
         verifyException("org.apache.commons.lang.text.StrMatcher$CharMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = 'q';
      StrBuilder strBuilder1 = strBuilder0.insert(0, 'q');
      int int0 = 0;
      String string0 = strBuilder0.substring(0, 0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("", (-3735), (-3735));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Writer writer0 = strBuilder0.asWriter();
      boolean boolean0 = strBuilder0.startsWith((String) null);
      int int0 = (-569);
      Object object0 = new Object();
      int int1 = 102;
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(object0, 102, '[');
      StringBuffer stringBuffer0 = new StringBuffer();
      char[] charArray0 = new char[3];
      charArray0[0] = 'g';
      charArray0[1] = '[';
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterString((String) null);
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Iterator) strTokenizer0, (String) null);
      charArray0[2] = '[';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      StrBuilder strBuilder3 = strBuilder0.deleteFirst((StrMatcher) strMatcher_CharSetMatcher0);
      StrBuilder strBuilder4 = strBuilder1.append(stringBuffer0);
      // Undeclared exception!
      try { 
        strBuilder0.substring((-569), (-569));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -569
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      int int0 = (-3320);
      StrBuilder strBuilder0 = new StrBuilder((-3320));
      StrBuilder strBuilder1 = strBuilder0.append((-3320));
      char[] charArray0 = new char[5];
      charArray0[0] = 'M';
      charArray0[1] = '@';
      charArray0[2] = '{';
      charArray0[3] = ':';
      charArray0[4] = '3';
      // Undeclared exception!
      try { 
        strBuilder0.insert(0, charArray0, 0, (-3320));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: -3320
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(0);
      Writer writer0 = strBuilder_StrBuilderWriter0.append('<');
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("s,;_6}f=:Q");
      strBuilder_StrBuilderWriter0.write(0);
      String string0 = strBuilder0.leftString(0);
      int int1 = strBuilder0.lastIndexOf('\"', 0);
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex((-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = 'm';
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('m');
      String string0 = "Invalid offset: ";
      int int0 = 5;
      // Undeclared exception!
      try { 
        strBuilder0.replace((StrMatcher) strMatcher_CharMatcher0, "Invalid offset: ", 5, 5, 5);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.vm.name");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      strBuilder_StrBuilderReader0.close();
      char[] charArray0 = new char[7];
      charArray0[0] = 'p';
      charArray0[1] = '8';
      charArray0[2] = 'F';
      charArray0[3] = '9';
      charArray0[4] = '9';
      charArray0[5] = 'q';
      charArray0[6] = '&';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder0.indexOf(strMatcher0, 4);
      boolean boolean0 = strBuilder0.endsWith("");
      boolean boolean1 = strBuilder0.startsWith("");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('C');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset("");
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Iterator) strTokenizer0, "Kby2ANOPnC+yM<");
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      String string0 = "";
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.replace(strMatcher0, "", 0, 0, 0);
      StrBuilder strBuilder2 = strBuilder1.trim();
      int int1 = (-184);
      // Undeclared exception!
      try { 
        strBuilder1.insert((-184), 0.0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -184
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      int int0 = 3823;
      StrBuilder strBuilder0 = new StrBuilder(3823);
      char[] charArray0 = new char[0];
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      boolean boolean0 = strBuilder1.contains((StrMatcher) strMatcher_TrimMatcher0);
      int int1 = 0;
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight((Object) strBuilder1, 0, '5');
      StringBuffer stringBuffer0 = new StringBuffer(0);
      StrBuilder strBuilder3 = strBuilder2.append(stringBuffer0);
      StrBuilder strBuilder4 = strBuilder3.append(charArray0);
      int int2 = strBuilder1.indexOf('5');
      StrBuilder strBuilder5 = strBuilder1.append((double) (-1));
      // Undeclared exception!
      try { 
        strBuilder3.setCharAt((-1), '(');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(0L);
      // Undeclared exception!
      try { 
        strBuilder1.setLength((-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.indexOf('1');
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Object[]) null, "");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      int int1 = strBuilder0.lastIndexOf(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.charAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceAll((String) null, "/LwBa]T@D8lcE");
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      char[] charArray0 = new char[2];
      charArray0[0] = ';';
      charArray0[1] = 'X';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      int int0 = 0;
      int int1 = strMatcher0.isMatch(charArray0, 0, 0, 0);
      int int2 = strBuilder0.lastIndexOf(strMatcher0, 0);
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int3 = strBuilder_StrBuilderReader0.read(charArray0);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 1, (-2026));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "*J=v*lA6NI\\vp";
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[3];
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("mJkf%^ZJqzKox+lS9(");
      int int0 = strBuilder0.indexOf(strMatcher0, (-1660));
      charArray0[0] = 'h';
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance("RQO~");
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "%2Zy*k{XAWRULo");
      charArray0[1] = 'g';
      charArray0[2] = 'x';
      StrBuilder strBuilder2 = strBuilder0.append('+');
      char[] charArray1 = strBuilder0.getChars(charArray0);
      int int1 = strBuilder0.capacity();
      StrBuilder strBuilder3 = strBuilder0.insert(0, (float) 0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      String string0 = strBuilder_StrBuilderTokenizer0.previousToken();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('R');
      int int0 = strBuilder1.indexOf(strMatcher0, 795);
      String string1 = strBuilder1.toString();
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer1 = strBuilder2.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer1.clone();
      StrBuilder strBuilder3 = strBuilder2.append(object0);
      int int1 = strBuilder2.lastIndexOf(strMatcher0);
      char[] charArray0 = new char[8];
      charArray0[0] = 'R';
      charArray0[1] = 'R';
      charArray0[2] = 'R';
      charArray0[3] = 'R';
      charArray0[4] = 'R';
      charArray0[5] = 'R';
      charArray0[6] = 'R';
      charArray0[7] = 'R';
      // Undeclared exception!
      try { 
        strBuilder2.append(charArray0, 2195, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("");
      Object[] objectArray0 = new Object[6];
      Object object0 = new Object();
      objectArray0[0] = object0;
      objectArray0[1] = (Object) strMatcher_StringMatcher0;
      objectArray0[2] = (Object) strMatcher_StringMatcher0;
      objectArray0[3] = (Object) strBuilder0;
      objectArray0[4] = (Object) strMatcher_StringMatcher0;
      objectArray0[5] = (Object) strMatcher_StringMatcher0;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, (String) null);
      StrMatcher strMatcher0 = StrMatcher.charMatcher('}');
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("s[,t7ZO/o\"l@b1q");
      int int0 = strBuilder0.indexOf((StrMatcher) strMatcher_StringMatcher0);
      StrBuilder strBuilder2 = new StrBuilder(0);
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder2);
      String string0 = strBuilder0.toString();
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      char[] charArray0 = strBuilder0.toCharArray();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read(charArray0, 0, 0);
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("", "ED`%z._y`KJab&h");
      StringBuffer stringBuffer0 = strBuilder1.toStringBuffer();
      StrBuilder strBuilder2 = strBuilder1.insert(0, (long) 0);
      String string0 = null;
      int int1 = strBuilder2.indexOf((String) null);
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      int int2 = (-2567);
      int int3 = (-1615);
      // Undeclared exception!
      try { 
        strBuilder1.delete((-1615), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1615
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.append(true);
      StrBuilder strBuilder2 = strBuilder1.deleteAll(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1), "Invalid offset: ");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.clear();
      int int0 = 1128;
      // Undeclared exception!
      try { 
        strBuilder0.insert(1128, true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1128
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1673), (long) (-1673));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1673
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Mac");
      StrBuilder strBuilder1 = strBuilder0.replaceAll('T', 'T');
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.append(false);
      StrBuilder strBuilder3 = strBuilder0.ensureCapacity(0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.trim();
      // Undeclared exception!
      try { 
        strBuilder1.insert(1748, (long) 1748);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1748
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((-2735), (-2735), 'Q');
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight(915, (-943), 'Q');
      StrBuilder strBuilder3 = strBuilder2.append((float) (-943));
      boolean boolean0 = strBuilder0.equals((Object) strBuilder2);
      char[] charArray0 = new char[4];
      charArray0[0] = 'Q';
      charArray0[1] = 'Q';
      charArray0[2] = 'Z';
      charArray0[3] = 'Q';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder1.indexOf(strMatcher0, 147);
      String string0 = strBuilder1.leftString(44);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "org.apache.commons.lang.text.StrBuilder$StrBuilderReader";
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      int int0 = (-2858);
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, 0, (-1899));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.equals((Object) null);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      int int0 = (-1203);
      StrBuilder strBuilder0 = new StrBuilder((-1203));
      int int1 = 0;
      StrBuilder strBuilder1 = strBuilder0.insert(0, (long) (-1203));
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      boolean boolean0 = strBuilder1.equalsIgnoreCase(strBuilder0);
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      int int2 = strBuilder1.lastIndexOf(strMatcher0, 0);
      // Undeclared exception!
      try { 
        strBuilder0.charAt((-1203));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1203
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 2747;
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray(2747, 2747);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      char[] charArray0 = strBuilder0.getChars((char[]) null);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(97);
      StrBuilder strBuilder1 = strBuilder0.deleteAll("z/KR)8@");
      Writer writer0 = strBuilder0.asWriter();
      int int0 = strBuilder0.lastIndexOf("");
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.previous();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid length: ");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      strBuilder_StrBuilderWriter0.write((-265));
      String string0 = strBuilder0.toString();
      StrBuilder strBuilder1 = strBuilder0.insert(0, false);
      StrBuilder strBuilder2 = strBuilder1.append((-905.90591169));
      int int0 = strBuilder0.indexOf('X');
      boolean boolean0 = strBuilder1.equalsIgnoreCase(strBuilder0);
      strBuilder_StrBuilderWriter0.flush();
      StrBuilder strBuilder3 = strBuilder1.setCharAt(0, '9');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean1 = strBuilder_StrBuilderReader0.ready();
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      char char0 = 'D';
      StrBuilder strBuilder1 = strBuilder0.appendPadding(0, 'D');
      StrBuilder strBuilder2 = strBuilder1.trim();
      Reader reader0 = strBuilder0.asReader();
      long long0 = (-1L);
      StrBuilder strBuilder3 = strBuilder0.append((-1L));
      String string0 = "startIndex must be valid";
      int int1 = (-376);
      // Undeclared exception!
      try { 
        strBuilder3.append("startIndex must be valid", 0, (-376));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      int int0 = 1;
      StrBuilder strBuilder0 = new StrBuilder(1);
      String string0 = "UKiwv961Lplr@5kf7h";
      StrBuilder strBuilder1 = strBuilder0.append("UKiwv961Lplr@5kf7h");
      StrBuilder strBuilder2 = strBuilder0.append("UKiwv961Lplr@5kf7h", 0, 0);
      Writer writer0 = strBuilder0.asWriter();
      char char0 = 'T';
      // Undeclared exception!
      try { 
        strBuilder0.insert((-52), 'T');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -52
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Object object0 = new Object();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(object0, 117, 'M');
      Integer integer0 = new Integer(3187);
      StrBuilder strBuilder2 = strBuilder0.insert(117, (Object) integer0);
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      StrBuilder strBuilder3 = strBuilder2.deleteFirst(strMatcher0);
      int int0 = 1666;
      StrBuilder strBuilder4 = strBuilder2.delete(97, 1666);
      StrMatcher strMatcher1 = StrMatcher.noneMatcher();
      String string0 = "java.class.path";
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher("java.class.path");
      StrBuilder strBuilder5 = strBuilder0.deleteFirst(strMatcher1);
      boolean boolean0 = strBuilder5.contains(strMatcher2);
      StrBuilder strBuilder6 = strBuilder5.clear();
      // Undeclared exception!
      try { 
        strBuilder5.setCharAt(97, 'r');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 97
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      String string0 = ", '";
      StrBuilder strBuilder0 = new StrBuilder(", '");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[3];
      charArray0[0] = '>';
      charArray0[1] = 'm';
      char char0 = '^';
      int int0 = 0;
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 0, 2854);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 2854
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("WXoXrdwW*y28(");
      boolean boolean0 = strBuilder0.contains("WXoXrdwW*y28(");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[4];
      charArray0[0] = 'c';
      charArray0[1] = 'r';
      charArray0[2] = 'k';
      charArray0[3] = ',';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, (-1716), 39);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 39
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrBuilder strBuilder1 = strBuilder0.setNullText("");
      char[] charArray0 = new char[3];
      char char0 = '\'';
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      boolean boolean0 = strBuilder0.contains((StrMatcher) strMatcher_NoMatcher0);
      int int0 = (-606);
      StrBuilder strBuilder2 = strBuilder0.replaceAll((StrMatcher) strMatcher_NoMatcher0, "r|s");
      char[] charArray1 = new char[1];
      charArray1[0] = '\'';
      // Undeclared exception!
      try { 
        strBuilder0.insert((-606), charArray1, (-606), (-606));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -606
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = null;
      String string1 = "org.apache.commons.lang.text.StrBuilder$StrBuilderReader";
      int int0 = 117;
      String string2 = strBuilder0.midString(0, 117);
      StrBuilder strBuilder1 = strBuilder0.replaceAll("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", (String) null);
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      int int1 = strBuilder0.indexOf(strMatcher0);
      char[] charArray0 = new char[1];
      charArray0[0] = 'l';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 0, (-2432));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: -2432
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[3];
      charArray0[0] = 'T';
      charArray0[1] = 'q';
      charArray0[2] = ' ';
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance(charArray0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "");
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("AIX");
      StrBuilder strBuilder1 = strBuilder0.deleteAll("AIX");
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      char[] charArray0 = new char[9];
      charArray0[0] = '|';
      charArray0[1] = 'd';
      charArray0[2] = ',';
      charArray0[3] = 'Y';
      charArray0[4] = 'i';
      charArray0[5] = '5';
      charArray0[6] = 'g';
      charArray0[7] = 'S';
      charArray0[8] = '4';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder1.lastIndexOf(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.capacity();
      boolean boolean0 = strBuilder0.contains("");
      StrBuilder strBuilder1 = strBuilder0.append(0.0F);
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher((String) null);
      int int1 = strBuilder0.indexOf(strMatcher0, 32);
      // Undeclared exception!
      try { 
        strBuilder1.replace(32, 32, "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(4);
      StrBuilder strBuilder1 = strBuilder0.appendNull();
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("?nK9,*M8aC}M");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(0);
      int int0 = strBuilder0.size();
      char[] charArray0 = new char[9];
      charArray0[0] = 'n';
      charArray0[1] = 'r';
      charArray0[2] = '\'';
      charArray0[3] = 'J';
      charArray0[4] = 'd';
      charArray0[5] = 'd';
      charArray0[6] = 'C';
      charArray0[7] = '(';
      charArray0[8] = '(';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 1309, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      int int0 = 958;
      StrBuilder strBuilder0 = new StrBuilder(958);
      int int1 = (-1217);
      // Undeclared exception!
      try { 
        strBuilder0.replace((-1217), (-1656), "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1217
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.deleteAll("");
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      int int0 = strBuilder0.lastIndexOf('z', (-2854));
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[1];
      charArray0[0] = 'o';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, (-3056), (-3056));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -3056
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = '-';
      StrBuilder strBuilder1 = strBuilder0.appendPadding(0, '-');
      String string0 = strBuilder1.midString(0, 115);
      int int0 = (-3876);
      // Undeclared exception!
      try { 
        strBuilder0.substring(115);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      Integer integer0 = new Integer(0);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) integer0, 0, ':');
      char[] charArray0 = new char[2];
      charArray0[0] = ':';
      charArray0[1] = ':';
      StrBuilder strBuilder2 = strBuilder1.insert(0, charArray0);
      boolean boolean0 = strBuilder0.endsWith("b`@ 6$$");
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      String string0 = "vd";
      int int0 = 3250;
      StringBuffer stringBuffer0 = new StringBuffer(117);
      // Undeclared exception!
      try { 
        strBuilder2.append(stringBuffer0, 117, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("{YQ]Y2]x");
      StrBuilder strBuilder1 = strBuilder0.clear();
      Reader reader0 = strBuilder1.asReader();
      StrBuilder strBuilder2 = strBuilder0.replaceFirst("{YQ]Y2]x", "{YQ]Y2]x");
      // Undeclared exception!
      try { 
        strBuilder2.getChars((-855), (-855), (char[]) null, (-855));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -855
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder("0C]z'6<Vz&;]ZJ");
      StrBuilder strBuilder2 = strBuilder0.append((Object) strBuilder1);
      // Undeclared exception!
      try { 
        strBuilder0.delete((-1934), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1934
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer0 = new Integer(2250);
      boolean boolean0 = linkedList0.add(integer0);
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "");
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
      int int0 = strBuilder2.lastIndexOf(strMatcher0);
      boolean boolean1 = strBuilder0.contains(strMatcher0);
      StrBuilder strBuilder3 = strBuilder0.appendNull();
      int int1 = strBuilder0.indexOf('p');
      int int2 = strBuilder0.indexOf("", 0);
      StrBuilder strBuilder4 = strBuilder3.append((Object) integer0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("v[E1Fw!:t6}JY1c", 0, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      char[] charArray0 = new char[1];
      charArray0[0] = '';
      int int0 = strMatcher0.isMatch(charArray0, (-1091), (-1091), 2983);
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      int int1 = strBuilder0.lastIndexOf(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.insert(0, 0.0F);
      // Undeclared exception!
      try { 
        strBuilder1.setCharAt(32, ')');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1));
      char[] charArray0 = new char[4];
      charArray0[0] = 'X';
      charArray0[1] = ')';
      charArray0[2] = 'K';
      charArray0[3] = 'K';
      strBuilder0.buffer = charArray0;
      StrBuilder strBuilder1 = strBuilder0.replaceAll("", "");
      StrBuilder strBuilder2 = strBuilder1.append((-1));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance();
      StrTokenizer strTokenizer1 = strBuilder_StrBuilderTokenizer0.setIgnoredChar(')');
      StrBuilder strBuilder3 = strBuilder1.appendWithSeparators((Iterator) strTokenizer1, "user.country");
      Writer writer0 = strBuilder1.asWriter();
      StrBuilder strBuilder4 = strBuilder0.append((long) (-1));
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0, (-1));
      int int1 = strBuilder0.lastIndexOf('-', (-1));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer1 = strBuilder3.new StrBuilderTokenizer();
      StrMatcher strMatcher1 = strBuilder_StrBuilderTokenizer1.getIgnoredMatcher();
      StrBuilder strBuilder5 = strBuilder0.deleteAll(strMatcher1);
      StrBuilder strBuilder6 = strBuilder1.appendFixedWidthPadRight((Object) strMatcher1, 0, 'K');
      StrBuilder strBuilder7 = strBuilder6.deleteAll('r');
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(" ,/m{l~~?((f.Sib");
      StrBuilder strBuilder1 = strBuilder0.insert(0, (-1495));
      StrBuilder strBuilder2 = strBuilder0.append(' ');
      int int0 = strBuilder0.indexOf('J');
      int int1 = strBuilder2.capacity();
      // Undeclared exception!
      try { 
        strBuilder0.insert(115, (-1.0));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 115
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("", "");
      int int0 = strBuilder0.capacity();
      StringBuffer stringBuffer0 = new StringBuffer(2980);
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 2980, 2980);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer0 = new Integer(2250);
      boolean boolean0 = linkedList0.add(integer0);
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "");
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
      int int0 = strBuilder2.lastIndexOf(strMatcher0);
      boolean boolean1 = strBuilder0.contains(strMatcher0);
      StrBuilder strBuilder3 = strBuilder0.appendNull();
      int int1 = strBuilder0.indexOf("", 0);
      StrBuilder strBuilder4 = strBuilder3.append((Object) integer0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("v[E1Fw!:t6}JY1c", 0, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1211));
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity((-3571));
      String string0 = "";
      int int0 = 0;
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight((-1914), 0, 'b');
      // Undeclared exception!
      try { 
        strBuilder0.append("", 0, 57);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setQuoteChar('#');
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "5.1");
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      String string0 = "g;fkLrFBc*Op4&0.";
      StrBuilder strBuilder0 = new StrBuilder("g;fkLrFBc*Op4&0.");
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("g;fkLrFBc*Op4&0.");
      StrBuilder strBuilder2 = strBuilder0.append("g;fkLrFBc*Op4&0.");
      StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
      StrBuilder strBuilder4 = strBuilder3.append((Object) "_x:6$X");
      Reader reader0 = strBuilder0.asReader();
      char char0 = 'O';
      StrBuilder strBuilder5 = strBuilder2.deleteAll('O');
      String string1 = "Invalid startIndex: ";
      // Undeclared exception!
      try { 
        strBuilder0.insert((-821), (float) (-821));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -821
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
      String string0 = strBuilder0.substring(0);
      int int0 = strBuilder0.length();
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("");
      Writer writer0 = strBuilder0.asWriter();
      int int0 = strBuilder0.capacity();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      char[] charArray0 = new char[8];
      charArray0[0] = 'n';
      charArray0[1] = 'J';
      charArray0[2] = 'd';
      charArray0[3] = '1';
      charArray0[4] = 'J';
      charArray0[5] = '.';
      charArray0[6] = '$';
      charArray0[7] = 'C';
      strBuilder_StrBuilderWriter0.write(charArray0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3);
      int int0 = strBuilder0.indexOf("java.ext.dirs", 48);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      int int1 = strBuilder0.indexOf(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.replaceAll("yXf7_THHU1w )", "java.ext.dirs");
      StrBuilder strBuilder2 = strBuilder0.replaceAll("yXf7_THHU1w )", "yXf7_THHU1w )");
      StrBuilder strBuilder3 = strBuilder0.append(0.0);
      boolean boolean0 = strBuilder1.contains('e');
      char[] charArray0 = new char[2];
      charArray0[0] = 'e';
      charArray0[1] = 'e';
      // Undeclared exception!
      try { 
        strBuilder3.getChars((-1), 9, charArray0, (-421));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("-tb");
      String string0 = strBuilder0.rightString(4077);
      int int0 = strBuilder0.indexOf("um6?EatA=HD*f@", 1);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = null;
      strBuilder_StrBuilderWriter0.write((char[]) null);
      strBuilder_StrBuilderWriter0.close();
      String string0 = "";
      int int0 = 3379;
      // Undeclared exception!
      try { 
        strBuilder0.append("", 3379, 3379);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.append("", 1, (-3406));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      int int0 = strBuilder0.capacity();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "");
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceAll("org.apache.commons.lang.text.StrBuilder", "org.apache.commons.lang.text.StrBuilder");
      StrBuilder strBuilder2 = strBuilder0.minimizeCapacity();
      int int0 = 64;
      String string0 = strBuilder1.leftString(64);
      int int1 = strBuilder0.lastIndexOf('r');
      // Undeclared exception!
      try { 
        strBuilder0.charAt(3164);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3164
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("g,<>Z(vwWE9");
      char[] charArray0 = new char[5];
      charArray0[0] = '!';
      charArray0[1] = 'w';
      charArray0[2] = '`';
      charArray0[3] = '{';
      charArray0[4] = '>';
      // Undeclared exception!
      try { 
        strBuilder0.getChars((-152), (-152), charArray0, 3);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -152
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      int int0 = 1;
      StrBuilder strBuilder0 = new StrBuilder(1);
      String string0 = null;
      char char0 = '0';
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadLeft((Object) null, 1, '0');
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4~udirIlG");
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.setLength(0);
      String string0 = strBuilder0.substring(0, 0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip((-693L));
      long long1 = strBuilder_StrBuilderReader0.skip(4074L);
      strBuilder_StrBuilderReader0.mark(0);
      strBuilder_StrBuilderReader0.mark(0);
      long long2 = strBuilder_StrBuilderReader0.skip(0L);
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) "";
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators(objectArray0, "4~udirIlG");
      // Undeclared exception!
      try { 
        strBuilder1.validateRange(3705, 2141);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder2 = strBuilder1.append(525L);
      char[] charArray0 = new char[0];
      StrBuilder strBuilder3 = strBuilder0.insert(0, charArray0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2300);
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder0;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, ")!/o;)P`NKq&_F");
      StrBuilder strBuilder2 = strBuilder1.appendPadding(0, ':');
      boolean boolean0 = strBuilder0.contains('%');
      StrBuilder strBuilder3 = strBuilder0.insert(32, '4');
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[6];
      StrBuilder strBuilder1 = strBuilder0.replaceAll("", "");
      charArray0[0] = 'M';
      charArray0[1] = '5';
      charArray0[2] = ':';
      char[] charArray1 = new char[2];
      charArray1[0] = ':';
      charArray1[1] = 'D';
      StrBuilder strBuilder2 = strBuilder0.insert(0, charArray1);
      StrBuilder strBuilder3 = strBuilder2.setLength(0);
      charArray0[3] = 'D';
      charArray0[4] = '*';
      charArray0[5] = 'o';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(48, 48, charArray0, 48);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 48
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      int int0 = strBuilder0.size();
      StrBuilder strBuilder1 = strBuilder0.deleteAll('Q');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[1];
      charArray0[0] = 'Q';
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance(charArray0);
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Iterator) strTokenizer0, "W%~U");
      long long0 = strBuilder_StrBuilderReader0.skip(0);
      int int1 = strBuilder_StrBuilderReader0.read();
      long long1 = strBuilder_StrBuilderReader0.skip(0);
      char[] charArray1 = new char[5];
      charArray1[0] = 'Q';
      StrBuilder strBuilder3 = strBuilder0.clear();
      charArray1[1] = 'Q';
      charArray1[2] = 'Q';
      charArray1[3] = 'Q';
      charArray1[4] = 'Q';
      // Undeclared exception!
      try { 
        strBuilder1.insert((-1708), charArray1);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1708
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      int int0 = (-2256);
      StrBuilder strBuilder0 = new StrBuilder((-2256));
      // Undeclared exception!
      try { 
        strBuilder0.insert((-2256), 1975.1F);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2256
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid startIndex: ");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      int int0 = 39;
      int int1 = strBuilder0.indexOf(strMatcher0);
      char char0 = 'A';
      char[] charArray0 = new char[6];
      charArray0[0] = 'A';
      int int2 = 0;
      int int3 = strMatcher0.isMatch(charArray0, 0, 1356, 32);
      charArray0[1] = 'A';
      charArray0[2] = 'A';
      charArray0[3] = 'A';
      charArray0[4] = 'A';
      charArray0[5] = 'A';
      int int4 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.insert(48, charArray0, 48, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 48
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[8];
      charArray0[0] = 'b';
      charArray0[1] = '&';
      charArray0[2] = '8';
      charArray0[3] = '+';
      charArray0[4] = 'E';
      charArray0[5] = 'c';
      charArray0[6] = 'O';
      charArray0[7] = 'c';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(1481, 1, charArray0, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Yr,9&");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip((-1L));
      strBuilder_StrBuilderReader0.reset();
      String string0 = strBuilder0.rightString(0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("Yr,9&", 0, 0);
      strBuilder_StrBuilderWriter0.flush();
      // Undeclared exception!
      try { 
        strBuilder0.insert(9, (-1.0F));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 9
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("1.4");
      StrBuilder strBuilder1 = strBuilder0.append(1.0);
      // Undeclared exception!
      try { 
        strBuilder0.charAt((-662));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -662
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(114, 114, 'l');
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft(0, 114, 'l');
      char[] charArray0 = new char[5];
      charArray0[0] = 'l';
      charArray0[1] = 'l';
      charArray0[2] = 'l';
      charArray0[3] = 'l';
      charArray0[4] = 'l';
      // Undeclared exception!
      try { 
        strBuilder0.insert(5, charArray0, 1040, 2767);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: 1040
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      String string0 = "$>,{FAU,";
      StrBuilder strBuilder0 = new StrBuilder("$>,{FAU,");
      boolean boolean0 = strBuilder0.endsWith("$>,{FAU,");
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      int int0 = strBuilder0.lastIndexOf('6');
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((-1), (-1), '6');
      int int1 = 97;
      StrBuilder strBuilder2 = strBuilder0.setNewLineText("");
      StrBuilder strBuilder3 = strBuilder2.append(stringBuffer0);
      StrBuilder strBuilder4 = strBuilder2.replaceAll("", "$>,{FAU,");
      char[] charArray0 = new char[5];
      charArray0[0] = '6';
      charArray0[1] = '6';
      charArray0[2] = '6';
      charArray0[3] = '6';
      charArray0[4] = '6';
      // Undeclared exception!
      try { 
        strBuilder4.getChars(0, (-1), charArray0, 117);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      char[] charArray0 = new char[6];
      charArray0[0] = 'G';
      charArray0[1] = 'R';
      charArray0[2] = 'v';
      charArray0[3] = 'k';
      charArray0[4] = '[';
      charArray0[5] = 'w';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder2 = strBuilder0.append('3');
      StrBuilder strBuilder3 = strBuilder0.deleteFirst("$L!G+`&m6f*5q");
      String string0 = strBuilder2.substring(0);
      StrBuilder strBuilder4 = strBuilder2.append((StringBuffer) null);
      StrBuilder strBuilder5 = strBuilder4.replaceFirst(strMatcher0, "X7&D?~h<//{");
      StrBuilder strBuilder6 = strBuilder1.replaceFirst('3', 'A');
      String string1 = strBuilder4.toString();
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1042);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('1', '1');
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3746);
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder strBuilder1 = strBuilder0.insert(0, true);
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft(0, 0, '!');
      StrBuilder strBuilder3 = strBuilder2.setNewLineText("k:'");
      boolean boolean0 = strBuilder0.isEmpty();
      StrBuilder strBuilder4 = strBuilder3.append((StringBuffer) null);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("5F=");
      StrBuilder strBuilder1 = strBuilder0.insert(0, "(13");
      StrBuilder strBuilder2 = strBuilder0.appendPadding(0, '8');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      int int0 = (-1544);
      StrBuilder strBuilder0 = new StrBuilder((-1544));
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt((-582));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -582
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      String string0 = "org.apache.commons.lang.text.StrTokenizer";
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("org.apache.commons.lang.text.StrTokenizer");
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      String string1 = strBuilder1.leftString((-3638));
      StrBuilder strBuilder2 = strBuilder1.delete(0, 443);
      char char0 = '\"';
      StrMatcher strMatcher2 = StrMatcher.charMatcher('\"');
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder3 = strBuilder0.insert(0, 0);
      StrBuilder strBuilder4 = strBuilder2.append(strBuilder3);
      // Undeclared exception!
      try { 
        strBuilder2.append(strBuilder4, 443, 151);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-73);
      char char0 = '{';
      // Undeclared exception!
      try { 
        strBuilder0.insert((-73), '{');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -73
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.delete(0, 0);
      int int0 = 1199;
      // Undeclared exception!
      try { 
        strBuilder0.validateRange(1199, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1963);
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      char[] charArray0 = new char[9];
      charArray0[0] = 'L';
      charArray0[1] = '$';
      charArray0[2] = '1';
      charArray0[3] = 'M';
      charArray0[4] = '!';
      charArray0[5] = 'n';
      charArray0[6] = '\\';
      charArray0[7] = '\\';
      charArray0[8] = 'n';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 1963, 1963);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("os.name");
      int int0 = (-1708);
      char[] charArray0 = new char[6];
      charArray0[0] = '-';
      charArray0[1] = 'B';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) "os.name", (-1708), '-');
      charArray0[2] = '`';
      charArray0[3] = 'H';
      char char0 = '8';
      StrBuilder strBuilder2 = strBuilder0.deleteFirst("java.lang.Object");
      StrBuilder strBuilder3 = strBuilder2.setNullText("os.name");
      // Undeclared exception!
      try { 
        strBuilder2.insert((-1708), (-1708));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1708
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Object[]) null, "8cjm^!Pc Hw$5");
      StrBuilder strBuilder2 = strBuilder0.append(true);
      StrBuilder strBuilder3 = strBuilder0.deleteFirst("");
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      // Undeclared exception!
      try { 
        strBuilder0.replace(44, 44, (String) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      int int0 = (-999);
      StrBuilder strBuilder0 = new StrBuilder((-999));
      String string0 = strBuilder0.leftString((-999));
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt((-999), 'R');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -999
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      String string0 = ",mW?]j]jyn`";
      StrBuilder strBuilder0 = new StrBuilder(",mW?]j]jyn`");
      // Undeclared exception!
      try { 
        strBuilder0.insert((-933), (-933));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -933
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1604);
      StrBuilder strBuilder1 = new StrBuilder(0);
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, 1464, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[4];
      charArray0[0] = '=';
      long long0 = strBuilder_StrBuilderReader0.skip((-809L));
      charArray0[1] = 'W';
      charArray0[2] = 'U';
      charArray0[3] = '/';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 0, (-3));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2191);
      StringBuffer stringBuffer0 = new StringBuffer(2191);
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder2 = strBuilder0.replaceAll("", "end < start");
      LinkedList<StrBuilder> linkedList0 = new LinkedList<StrBuilder>();
      StrBuilder strBuilder3 = strBuilder0.appendWithSeparators((Collection) linkedList0, "cD?|WS.}}");
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrMatcher$StringMatcher");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((-2653), (-2653), 'V');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('V');
      boolean boolean0 = strBuilder1.contains(strMatcher0);
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder2 = new StrBuilder((String) null);
      boolean boolean1 = strBuilder0.equals(strBuilder2);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      int int0 = strBuilder0.indexOf("");
      Reader reader0 = strBuilder2.asReader();
      String string0 = strBuilder0.toString();
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder("");
      boolean boolean0 = strBuilder0.equals(strBuilder1);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((Object) "org.apache.commons.lang.text.StrBuilder");
      int int0 = 0;
      StrBuilder strBuilder2 = strBuilder1.ensureCapacity(0);
      StrBuilder strBuilder3 = strBuilder2.setCharAt(0, 'N');
      StrBuilder strBuilder4 = strBuilder1.minimizeCapacity();
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      boolean boolean0 = strBuilder3.contains(strMatcher0);
      StrBuilder strBuilder5 = strBuilder2.ensureCapacity(0);
      boolean boolean1 = strBuilder0.endsWith("org.apache.commons.lang.text.StrBuilder");
      String string0 = strBuilder0.leftString(2219);
      String string1 = "\".ZZ&kkl.1";
      StrBuilder strBuilder6 = strBuilder0.replaceFirst("Nava.lang.String@0000000002", "\".ZZ&kkl.1");
      String string2 = strBuilder6.rightString(3);
      int int1 = 1372;
      // Undeclared exception!
      try { 
        strBuilder2.delete(0, (-2948));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Solaris");
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder strBuilder2 = strBuilder1.append(1547);
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("Solaris");
      StrBuilder strBuilder3 = strBuilder0.replace(strMatcher1, "uXA%JV:[1:", 0, 0, 0);
      StrBuilder strBuilder4 = strBuilder3.replaceFirst(strMatcher1, "");
      StrBuilder strBuilder5 = strBuilder1.deleteAll(strMatcher1);
      int int0 = strBuilder1.indexOf('v');
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("DfZhkx% I_zFeG");
      StrBuilder strBuilder1 = strBuilder0.append((Object) "DfZhkx% I_zFeG");
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.append((float) 0);
      strBuilder0.validateIndex(0);
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('d');
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_CharMatcher0);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      String string0 = strBuilder0.midString(0, 9);
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(0, 'N');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      int int0 = 4;
      StrBuilder strBuilder0 = new StrBuilder(4);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[5];
      int int1 = 114;
      strBuilder_StrBuilderWriter0.write(114);
      charArray0[0] = 'Z';
      charArray0[1] = '|';
      charArray0[2] = ']';
      char char0 = 'Z';
      CharBuffer charBuffer0 = CharBuffer.allocate(4);
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) charBuffer0, 4, 4);
      charArray0[3] = 'Z';
      char char1 = 'i';
      charArray0[4] = 'i';
      strBuilder_StrBuilderWriter0.write(charArray0);
      // Undeclared exception!
      try { 
        strBuilder0.getChars(2565, 4, charArray0, 2565);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll((StrMatcher) strMatcher_TrimMatcher0);
      int int0 = 0;
      StrBuilder strBuilder2 = strBuilder1.deleteAll('y');
      StrBuilder strBuilder3 = strBuilder0.deleteAll('#');
      StrBuilder strBuilder4 = strBuilder0.insert(0, (Object) "FVq3)IRe^o_WLi-@e");
      int int1 = 897;
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex(897);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 897
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      int int0 = (-1339);
      StrBuilder strBuilder0 = new StrBuilder((-1339));
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      int int1 = 0;
      char[] charArray0 = strBuilder1.toCharArray(0, 0);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1339), (char[]) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1339
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1));
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[1];
      charArray0[0] = '';
      strBuilder_StrBuilderWriter0.write(charArray0);
      int int0 = strBuilder0.lastIndexOf("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(")Gdm3q<.d|^l'");
      int int0 = 0;
      String string0 = strBuilder0.substring(0);
      char[] charArray0 = new char[7];
      charArray0[0] = 'Y';
      charArray0[1] = 'L';
      charArray0[2] = 'c';
      charArray0[3] = '&';
      charArray0[4] = '@';
      charArray0[5] = 'B';
      charArray0[6] = 'C';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(1753, 0, charArray0, 1482);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.runtime.name");
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.replaceAll(strMatcher0, "3.`4y|[w|O=J=E)yz:");
      boolean boolean0 = strBuilder0.startsWith("java.runtime.name");
      StrBuilder strBuilder3 = strBuilder2.setCharAt(0, 'e');
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Integer integer0 = new Integer((-780));
      // Undeclared exception!
      try { 
        strBuilder0.insert((-780), (Object) integer0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -780
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = strBuilder0.indexOf((String) null, 0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrMatcher strMatcher0 = StrMatcher.charMatcher('q');
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "");
      strBuilder_StrBuilderWriter0.write((String) null);
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrBuilder strBuilder1 = strBuilder0.appendPadding(117, '_');
      int int0 = 187;
      strBuilder_StrBuilderWriter0.write(187);
      // Undeclared exception!
      try { 
        strBuilder0.delete((-1), 187);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[1];
      charArray0[0] = '1';
      // Undeclared exception!
      try { 
        strBuilder0.insert(5, charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 5
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      int int0 = strBuilder0.lastIndexOf('t', 0);
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "");
      char[] charArray0 = new char[7];
      charArray0[0] = ']';
      charArray0[1] = 't';
      charArray0[2] = 'a';
      charArray0[3] = 'N';
      charArray0[4] = '!';
      charArray0[5] = 'd';
      charArray0[6] = ';';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      int int0 = strBuilder0.indexOf((StrMatcher) strMatcher_CharSetMatcher0);
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight(2528, 1369, 'l');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      int int1 = strBuilder_StrBuilderReader0.read(charArray0);
      long long0 = strBuilder_StrBuilderReader0.skip(1812L);
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("iHS#^Y");
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('j');
      StrMatcher strMatcher2 = StrMatcher.charMatcher('[');
      StrMatcher strMatcher3 = StrMatcher.charSetMatcher("");
      int int0 = strBuilder0.indexOf(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.append(518);
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      char[] charArray0 = new char[0];
      StrBuilder strBuilder1 = strBuilder0.append(0L);
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 32, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[2];
      charArray0[0] = 'r';
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      charArray0[1] = '8';
      char[] charArray1 = strBuilder0.getChars(charArray0);
      StrBuilder strBuilder2 = strBuilder1.trim();
      int int0 = strBuilder0.lastIndexOf((StrMatcher) null);
      int int1 = 970;
      int int2 = strBuilder2.lastIndexOf((StrMatcher) null);
      // Undeclared exception!
      try { 
        strBuilder1.delete(970, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.insert(1748, (long) 1748);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1748
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      String string0 = "length must be valid";
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrBuilder strBuilder1 = strBuilder0.append(0.0F);
      String string1 = "\\nwcR5&N\"\"jdw}T.r";
      char[] charArray0 = new char[0];
      StrBuilder strBuilder2 = strBuilder1.append("\nwcR5&N\"\"jdw}T.r");
      StrBuilder strBuilder3 = strBuilder0.appendPadding(0, 'Y');
      StrBuilder strBuilder4 = strBuilder3.append(strBuilder0);
      int int0 = 0;
      StrBuilder strBuilder5 = strBuilder0.replace(strMatcher0, "\nwcR5&N\"\"jdw}T.r", 0, 0, 0);
      int int1 = (-651);
      // Undeclared exception!
      try { 
        strBuilder5.append(charArray0, (-651), 4913);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 4913
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(5);
      char[] charArray0 = new char[1];
      charArray0[0] = '';
      StrBuilder strBuilder1 = new StrBuilder("java.endorsed.dirs");
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1, 5, 5);
      StrBuilder strBuilder3 = strBuilder0.append(charArray0);
      StrBuilder strBuilder4 = strBuilder0.append('D');
      StrBuilder strBuilder5 = strBuilder2.setNullText("java.endorsed.dirs");
      StrBuilder strBuilder6 = strBuilder4.append((float) 5);
      StrBuilder strBuilder7 = strBuilder6.appendFixedWidthPadRight((-1663), 5, '');
      boolean boolean0 = strBuilder2.startsWith("java.endorsed.dirs");
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      int int0 = strBuilder1.indexOf(strMatcher0, (-1663));
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("8yaYlH}OEqSQt=B");
      StrBuilder strBuilder1 = strBuilder0.append("8yaYlH}OEqSQt=B");
      char[] charArray0 = strBuilder1.toCharArray(0, 0);
      StrBuilder strBuilder2 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder3 = strBuilder2.appendNull();
      boolean boolean0 = strBuilder1.endsWith("8yaYlH}OEqSQt=B");
      StrBuilder strBuilder4 = strBuilder3.deleteFirst('y');
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "8yaYlH}OEqSQt=B");
      StrBuilder strBuilder5 = strBuilder2.append(stringBuffer0);
      char char0 = 'K';
      StrBuilder strBuilder6 = strBuilder4.appendFixedWidthPadRight(0, 0, 'K');
      StrBuilder strBuilder7 = strBuilder6.appendPadding(0, 'Y');
      StrTokenizer strTokenizer0 = strBuilder6.asTokenizer();
      String string0 = strBuilder4.toString();
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      int int0 = 0;
      // Undeclared exception!
      try { 
        strMatcher0.isMatch(charArray0, 677, 0, 2927);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 677
         //
         verifyException("org.apache.commons.lang.text.StrMatcher$CharMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setLength(1442);
      char[] charArray0 = new char[0];
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight(1442, 108, 'P');
      StrBuilder strBuilder3 = strBuilder0.replaceAll(strMatcher0, (String) null);
      // Undeclared exception!
      try { 
        strBuilder0.delete((-1545), (-1545));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1545
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char char0 = '/';
      StrBuilder strBuilder1 = strBuilder0.insert(0, '/');
      String string0 = strBuilder1.rightString(0);
      Reader reader0 = strBuilder1.asReader();
      StrBuilder strBuilder2 = strBuilder0.deleteAll("5b1PD[-~2fF");
      char[] charArray0 = new char[4];
      StrBuilder strBuilder3 = strBuilder2.deleteAll('i');
      // Undeclared exception!
      try { 
        strBuilder3.substring((-4098));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -4098
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(0);
      StrBuilder strBuilder2 = strBuilder1.deleteFirst('.');
      StrTokenizer strTokenizer0 = strBuilder2.asTokenizer();
      StrBuilder strBuilder3 = strBuilder0.reverse();
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("C*>GPwE?j9iPb)i");
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 0);
      Reader reader0 = strBuilder0.asReader();
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char char0 = '8';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(0, 0, '8');
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight(0, 0, '8');
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      int int0 = strBuilder2.lastIndexOf(strMatcher0, 4);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder strBuilder3 = strBuilder0.insert(0, (double) 0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[0];
      int int1 = strBuilder_StrBuilderReader0.read(charArray0);
      long long0 = strBuilder_StrBuilderReader0.skip(0);
      strBuilder_StrBuilderReader0.reset();
      int int2 = strBuilder3.lastIndexOf('s');
      char[] charArray1 = strBuilder3.toCharArray(0, 0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      String string0 = null;
      boolean boolean0 = linkedList0.add((String) null);
      StrBuilder strBuilder4 = strBuilder1.appendWithSeparators((Collection) linkedList0, "java.runtime.version");
      StrBuilder strBuilder5 = strBuilder4.append(false);
      long long1 = strBuilder_StrBuilderReader0.skip(0L);
      StrBuilder strBuilder6 = strBuilder0.insert(0, true);
      // Undeclared exception!
      try { 
        strBuilder6.deleteCharAt((-545));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -545
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }
}
