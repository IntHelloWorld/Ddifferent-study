/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 29 10:42:33 GMT 2020
 */

package org.apache.commons.math.analysis.solvers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.analysis.UnivariateRealFunction;
import org.apache.commons.math.analysis.function.Asin;
import org.apache.commons.math.analysis.function.Atanh;
import org.apache.commons.math.analysis.function.Ceil;
import org.apache.commons.math.analysis.function.Cosh;
import org.apache.commons.math.analysis.function.Expm1;
import org.apache.commons.math.analysis.function.Inverse;
import org.apache.commons.math.analysis.function.Logit;
import org.apache.commons.math.analysis.function.Power;
import org.apache.commons.math.analysis.function.Rint;
import org.apache.commons.math.analysis.function.Sigmoid;
import org.apache.commons.math.analysis.function.Sin;
import org.apache.commons.math.analysis.function.Sinc;
import org.apache.commons.math.analysis.function.Tanh;
import org.apache.commons.math.analysis.solvers.AllowedSolution;
import org.apache.commons.math.analysis.solvers.IllinoisSolver;
import org.apache.commons.math.analysis.solvers.PegasusSolver;
import org.apache.commons.math.analysis.solvers.RegulaFalsiSolver;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BaseSecantSolver_ESTest extends BaseSecantSolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver((-0.16624882440418567), (-0.16624882440418567));
      Logit logit0 = new Logit((-0.16624882440418567), (-0.16624882440418567));
      UnivariateRealFunction univariateRealFunction0 = logit0.derivative();
      AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
      double double0 = regulaFalsiSolver0.solve(20, univariateRealFunction0, 0.15, (-0.16624882440418567), allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PegasusSolver pegasusSolver0 = new PegasusSolver(0.0, 0.0);
      Sin sin0 = new Sin();
      double double0 = pegasusSolver0.solve(551, (UnivariateRealFunction) sin0, 0.0, 0.0, (double) 551);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Rint rint0 = new Rint();
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(4.177741009851521E-19, 640.421460633018);
      double double0 = illinoisSolver0.solve(1938, (UnivariateRealFunction) rint0, (-2696.790084), 4.177741009851521E-19, 2920.5);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver((-2891.7221777), (-2891.7221777), (-2891.7221777));
      Power power0 = new Power(348);
      AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
      double double0 = illinoisSolver0.solve(348, (UnivariateRealFunction) power0, 0.0, 0.0, 0.0, allowedSolution0);
      double double1 = illinoisSolver0.doSolve();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver((-1500.05489572), (-1500.05489572), 0.167);
      Sigmoid sigmoid0 = new Sigmoid();
      double double0 = regulaFalsiSolver0.solve(14, (UnivariateRealFunction) sigmoid0, (double) 14, (-1500.05489572), (double) 14);
      double double1 = regulaFalsiSolver0.doSolve();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver();
      Ceil ceil0 = new Ceil();
      AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
      // Undeclared exception!
      try { 
        illinoisSolver0.solve((-2910), (UnivariateRealFunction) ceil0, (double) (-2910), (double) (-2910), allowedSolution0);
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (-2,910) exceeded: evaluations
         //
         verifyException("org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
      Atanh atanh0 = new Atanh();
      AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
      // Undeclared exception!
      try { 
        regulaFalsiSolver0.solve(276, (UnivariateRealFunction) atanh0, (double) 276, (double) 276, allowedSolution0);
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [276, 276]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PegasusSolver pegasusSolver0 = new PegasusSolver((-1468.7331164692657));
      Tanh tanh0 = new Tanh();
      // Undeclared exception!
      try { 
        pegasusSolver0.solve(91, (UnivariateRealFunction) tanh0, (-1.0), (double) 91, (AllowedSolution) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.analysis.solvers.BaseSecantSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PegasusSolver pegasusSolver0 = new PegasusSolver();
      Sigmoid sigmoid0 = new Sigmoid((-2311), (-1419.5778182766142));
      AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
      // Undeclared exception!
      try { 
        pegasusSolver0.solve((-2311), (UnivariateRealFunction) sigmoid0, 1.0E-6, (-2818.20057), 0.0, allowedSolution0);
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (-2,311) exceeded: evaluations
         //
         verifyException("org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PegasusSolver pegasusSolver0 = new PegasusSolver(0.5, 0.5, (-2418.2369163718));
      Expm1 expm1_0 = new Expm1();
      AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
      // Undeclared exception!
      try { 
        pegasusSolver0.solve(626, (UnivariateRealFunction) expm1_0, 2651.133931849, 0.5, 725.826, allowedSolution0);
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [2,651.134, 0.5]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PegasusSolver pegasusSolver0 = new PegasusSolver(0.0, (-1169.26));
      AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
      Cosh cosh0 = new Cosh();
      // Undeclared exception!
      try { 
        pegasusSolver0.solve(3, (UnivariateRealFunction) cosh0, (-3.141592653589793), 1640.9581702662038, 7.549789948768648E-8, allowedSolution0);
      } catch(IllegalArgumentException e) {
         //
         // function values at endpoints do not have different signs, endpoints: [-3.142, 1,640.958], values: [11.592, \u221E]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver((-2891.7221777), (-2891.7221777), (-2891.7221777));
      Power power0 = new Power(348);
      // Undeclared exception!
      try { 
        illinoisSolver0.solve((-1), (UnivariateRealFunction) power0, 0.5, 0.0, (-2891.7221777));
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (-1) exceeded: evaluations
         //
         verifyException("org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
      // Undeclared exception!
      try { 
        regulaFalsiSolver0.doSolve();
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (0) exceeded: evaluations
         //
         verifyException("org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
      Logit logit0 = new Logit(10.969057604458431, 10.969057604458431);
      regulaFalsiSolver0.setup(1718, logit0, (-1.3819715856799118E-12), (-1.3819715856799118E-12), 1.633123935319537E16);
      // Undeclared exception!
      try { 
        regulaFalsiSolver0.doSolve();
      } catch(IllegalArgumentException e) {
         //
         // -0 out of [10.969, 10.969] range
         //
         verifyException("org.apache.commons.math.analysis.function.Logit", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PegasusSolver pegasusSolver0 = new PegasusSolver((-1468.7331164692657));
      Tanh tanh0 = new Tanh();
      pegasusSolver0.setup(403380, tanh0, 132.38725608169895, 1228.108813263, (-616.8));
      // Undeclared exception!
      try { 
        pegasusSolver0.doSolve();
      } catch(IllegalArgumentException e) {
         //
         // function values at endpoints do not have different signs, endpoints: [132.387, 1,228.109], values: [1, 1]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PegasusSolver pegasusSolver0 = new PegasusSolver((-1468.7331164692657));
      Tanh tanh0 = new Tanh();
      AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
      double double0 = pegasusSolver0.solve(91, (UnivariateRealFunction) tanh0, (-1.0), (double) 91, allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PegasusSolver pegasusSolver0 = new PegasusSolver((-1468.7331164692657));
      Tanh tanh0 = new Tanh();
      AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
      double double0 = pegasusSolver0.solve(91, (UnivariateRealFunction) tanh0, (-1.0), (double) 91, allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PegasusSolver pegasusSolver0 = new PegasusSolver((-1445.1003197147845), (-1445.1003197147845));
      Tanh tanh0 = new Tanh();
      AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
      double double0 = pegasusSolver0.solve(91, (UnivariateRealFunction) tanh0, (-1.0), (double) 91, allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PegasusSolver pegasusSolver0 = new PegasusSolver((-1468.7331164692657));
      Tanh tanh0 = new Tanh();
      AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
      double double0 = pegasusSolver0.solve(91, (UnivariateRealFunction) tanh0, (-0.8201566897440877), (double) 91, allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver((-252.0), (-252.0));
      Sinc sinc0 = new Sinc();
      AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
      double double0 = regulaFalsiSolver0.solve(2147483631, (UnivariateRealFunction) sinc0, 0.7937005259840998, 224.8690681256051, (-75.39822368615505), allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver((-252.0), (-252.0));
      Sinc sinc0 = new Sinc();
      double double0 = regulaFalsiSolver0.solve(3341, (UnivariateRealFunction) sinc0, (-252.0), 224.8690681256051, (double) 3341);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver();
      Inverse inverse0 = new Inverse();
      AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
      double double0 = illinoisSolver0.solve(542, (UnivariateRealFunction) inverse0, (-1801.605219), 1516.394301645, (-1801.605219), allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      PegasusSolver pegasusSolver0 = new PegasusSolver((-1468.7331164692657));
      Tanh tanh0 = new Tanh();
      AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
      double double0 = pegasusSolver0.solve(91, (UnivariateRealFunction) tanh0, (-1768.99635173906), 1223.5192895460136, (-1468.7331164692657), allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PegasusSolver pegasusSolver0 = new PegasusSolver((-1468.7331164692657));
      Tanh tanh0 = new Tanh();
      AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
      double double0 = pegasusSolver0.solve(91, (UnivariateRealFunction) tanh0, (-1768.99635173906), 1218.0752275264938, (-1468.7331164692657), allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PegasusSolver pegasusSolver0 = new PegasusSolver((-1468.7331164692657));
      Sigmoid sigmoid0 = new Sigmoid(1.3317530664702993E76, 2.848311452110353E-77);
      double double0 = pegasusSolver0.solve(91, (UnivariateRealFunction) sigmoid0, 2.848311452110353E-77, 2044.3117);
      double double1 = pegasusSolver0.doSolve();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(0.0);
      Asin asin0 = new Asin();
      // Undeclared exception!
      try { 
        illinoisSolver0.solve(3703, (UnivariateRealFunction) asin0, 0.058823529411764705, (-1652.72), 0.0);
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [0.059, -1,652.72]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver((-289.0), (-289.0));
      AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
      // Undeclared exception!
      try { 
        illinoisSolver0.solve(31, (UnivariateRealFunction) null, (-289.0), (-3706.3037701), allowedSolution0);
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      PegasusSolver pegasusSolver0 = new PegasusSolver();
      Inverse inverse0 = new Inverse();
      // Undeclared exception!
      try { 
        pegasusSolver0.solve(5, (UnivariateRealFunction) inverse0, 0.0, 2341.87, (-1.0));
      } catch(IllegalArgumentException e) {
         //
         // function values at endpoints do not have different signs, endpoints: [0, 2,341.87], values: [\u221E, 0]
         //
         verifyException("org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils", e);
      }
  }
}
