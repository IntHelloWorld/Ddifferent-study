/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 29 07:10:46 GMT 2020
 */

package org.apache.commons.lang.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.Writer;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.NoSuchElementException;
import java.util.stream.IntStream;
import org.apache.commons.lang.text.StrBuilder;
import org.apache.commons.lang.text.StrMatcher;
import org.apache.commons.lang.text.StrTokenizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StrBuilder_ESTest extends StrBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(5306);
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrMatcher strMatcher0 = StrMatcher.charMatcher('g');
      StrBuilder strBuilder2 = strBuilder1.deleteAll(strMatcher0);
      StrBuilder strBuilder3 = strBuilder2.setLength(1641);
      StrBuilder strBuilder4 = strBuilder3.replaceAll("org.apache.commons.lang.text.StrMatcher", (String) null);
      boolean boolean0 = strBuilder0.endsWith("X`2?");
      StrBuilder strBuilder5 = strBuilder0.clear();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      StrBuilder strBuilder6 = strBuilder0.insert(0, 3259L);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("X`2?", 5306, 5306);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      int int0 = 3061;
      StrBuilder strBuilder0 = new StrBuilder(3061);
      int int1 = 0;
      StrBuilder strBuilder1 = strBuilder0.setLength(0);
      StrBuilder strBuilder2 = strBuilder0.append((long) 3061);
      char char0 = '@';
      StrBuilder strBuilder3 = strBuilder0.replaceAll('@', '@');
      StrBuilder strBuilder4 = strBuilder3.replaceFirst("F>Mr,I{Cd3]w p", "F>Mr,I{Cd3]w p");
      StrBuilder strBuilder5 = strBuilder0.append(true);
      int int2 = 2;
      char[] charArray0 = null;
      // Undeclared exception!
      try { 
        strBuilder2.getChars(2, 2, (char[]) null, 2);
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      int int0 = 5306;
      StrBuilder strBuilder0 = new StrBuilder(5306);
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrMatcher strMatcher0 = StrMatcher.charMatcher('J');
      StrBuilder strBuilder2 = strBuilder1.deleteAll(strMatcher0);
      StrBuilder strBuilder3 = strBuilder2.setLength(1641);
      String string0 = "X`2?";
      StrBuilder strBuilder4 = strBuilder0.clear();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrBuilder strBuilder5 = strBuilder0.append((StrBuilder) null, 5306, (-4340));
      strBuilder_StrBuilderWriter0.close();
      StrBuilder strBuilder6 = strBuilder0.insert(0, 3259L);
      // Undeclared exception!
      try { 
        strBuilder1.insert(1641, 1641);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1641
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(404, 0, '`');
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("");
      StrBuilder strBuilder2 = strBuilder0.replaceAll((StrMatcher) strMatcher_StringMatcher0, "");
      StrBuilder strBuilder3 = strBuilder0.append(true);
      StrBuilder strBuilder4 = strBuilder0.reverse();
      StrBuilder strBuilder5 = strBuilder4.insert(0, '`');
      StrBuilder strBuilder6 = strBuilder3.appendNull();
      Writer writer0 = strBuilder3.asWriter();
      StrBuilder strBuilder7 = strBuilder6.minimizeCapacity();
      StrBuilder strBuilder8 = strBuilder6.replaceAll((StrMatcher) strMatcher_StringMatcher0, (String) null);
      StrBuilder strBuilder9 = strBuilder8.ensureCapacity(404);
      strBuilder7.size = 0;
      StrBuilder strBuilder10 = strBuilder7.setLength(404);
      StrBuilder strBuilder11 = strBuilder3.insert(0, 0L);
      StrBuilder strBuilder12 = strBuilder6.trim();
      StrBuilder strBuilder13 = strBuilder10.insert(0, 0.0);
      char[] charArray0 = new char[6];
      charArray0[0] = '`';
      charArray0[1] = 'A';
      charArray0[2] = '`';
      charArray0[3] = '`';
      charArray0[4] = '`';
      charArray0[5] = '`';
      char[] charArray1 = strBuilder1.getChars(charArray0);
      StrBuilder strBuilder14 = strBuilder12.trim();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder10.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
      StrBuilder strBuilder15 = strBuilder9.reverse();
      StrMatcher strMatcher0 = StrMatcher.stringMatcher(";|#a");
      boolean boolean0 = strBuilder0.contains(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Xwf(z[=$zfLQw/pq#<");
      StrBuilder strBuilder1 = new StrBuilder("Xwf(z[=$zfLQw/pq#<");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      char[] charArray0 = new char[0];
      StrBuilder strBuilder2 = strBuilder1.setNullText("Xwf(z[=$zfLQw/pq#<");
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrMatcher strMatcher2 = StrMatcher.stringMatcher("Xwf(z[=$zfLQw/pq#<");
      StrBuilder strBuilder3 = strBuilder0.replaceAll(strMatcher0, "java.awt.graphicsenv");
      strBuilder_StrBuilderWriter0.write("");
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("");
      StrMatcher strMatcher3 = StrMatcher.charSetMatcher(charArray0);
      StrMatcher strMatcher4 = StrMatcher.charMatcher(';');
      StrMatcher strMatcher5 = StrMatcher.charMatcher(';');
      int int0 = strBuilder3.lastIndexOf((StrMatcher) strMatcher_StringMatcher0);
      int int1 = strBuilder3.lastIndexOf("java.awt.graphicsenv", 0);
      String string0 = strBuilder1.getNewLineText();
      int int2 = strBuilder3.lastIndexOf("java.awt.graphicsenv");
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(0, 0, '=');
      String string0 = strBuilder0.midString((-1154), (-1154));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      StrBuilder strBuilder2 = strBuilder1.append((long) 0);
      StrBuilder strBuilder3 = new StrBuilder((-1154));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder3.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterString("");
      StrBuilder strBuilder4 = strBuilder2.appendWithSeparators((Iterator) strTokenizer0, (String) null);
      StrBuilder strBuilder5 = strBuilder3.append("");
      StrMatcher strMatcher0 = strTokenizer0.getIgnoredMatcher();
      int int0 = strBuilder2.indexOf(strMatcher0);
      boolean boolean0 = strBuilder5.equals(strBuilder4);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Xwf(z[=$zfLQw/pq#<");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("Xwf(z[=$zfLQw/pq#<");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      char[] charArray0 = new char[0];
      StrBuilder strBuilder2 = new StrBuilder("Xwf(z[=$zfLQw/pq#<");
      StrBuilder strBuilder3 = strBuilder2.insert(2, 323.7F);
      StrBuilder strBuilder4 = strBuilder1.appendFixedWidthPadLeft(2, 50, 'T');
      StrBuilder strBuilder5 = strBuilder3.append(false);
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrMatcher strMatcher2 = StrMatcher.stringMatcher("Xwf(z[=$zfLQw/pq#<");
      StrBuilder strBuilder6 = strBuilder0.replaceAll(strMatcher0, "java.awt.graphicsenv");
      strBuilder_StrBuilderWriter0.write("");
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("");
      StrBuilder strBuilder7 = strBuilder1.setCharAt(2, ';');
      StrMatcher strMatcher3 = StrMatcher.charSetMatcher(charArray0);
      StrMatcher strMatcher4 = StrMatcher.charMatcher(';');
      StrMatcher strMatcher5 = StrMatcher.charMatcher(';');
      int int0 = strBuilder6.lastIndexOf((StrMatcher) strMatcher_StringMatcher0);
      int int1 = strBuilder6.lastIndexOf("java.awt.graphicsenv", 0);
      String string0 = strBuilder1.getNewLineText();
      int int2 = strBuilder6.lastIndexOf("java.awt.graphicsenv");
      StrBuilder strBuilder8 = strBuilder3.insert(0, (double) 323.7F);
      StrBuilder strBuilder9 = strBuilder7.insert(31, (-1235.0F));
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("CIUg@s_8<");
      StrBuilder strBuilder1 = new StrBuilder("CIUg@s_8<");
      StrBuilder strBuilder2 = strBuilder1.deleteFirst('k');
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder3 = strBuilder0.appendWithSeparators((Collection) linkedList0, "oKA");
      int int0 = strBuilder0.lastIndexOf("L,3$l@mi-M!}@:?");
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[1];
      charArray0[0] = 'n';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('n');
      int int0 = strBuilder1.lastIndexOf((StrMatcher) strMatcher_CharMatcher0, 467);
      String string0 = strBuilder0.midString(0, 467);
      StrBuilder strBuilder2 = strBuilder1.appendNull();
      StrBuilder strBuilder3 = strBuilder0.ensureCapacity(467);
      StrBuilder strBuilder4 = strBuilder0.append((double) 467);
      // Undeclared exception!
      try { 
        strBuilder3.replace(102, 467, "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.substring(0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[4];
      charArray0[0] = '';
      charArray0[1] = '@';
      charArray0[2] = '(';
      charArray0[3] = '@';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0);
      int int1 = strBuilder_StrBuilderReader0.read(charArray0);
      long long0 = strBuilder_StrBuilderReader0.skip(0);
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Collection) linkedList0, "> jUK1hqpA|&;G.^");
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      int int2 = strMatcher0.isMatch(charArray0, 0, (-1), (-3918));
      int int3 = strBuilder1.indexOf(strMatcher0);
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('(');
      char[] charArray1 = new char[0];
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray1);
      StrBuilder strBuilder3 = strBuilder1.deleteAll((StrMatcher) strMatcher_CharMatcher0);
      // Undeclared exception!
      try { 
        strBuilder3.insert((-867), 0.0F);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -867
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      int int0 = (-1000);
      StrBuilder strBuilder0 = new StrBuilder((-1000));
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder strBuilder1 = new StrBuilder("AIX");
      StrBuilder strBuilder2 = new StrBuilder();
      char[] charArray0 = new char[6];
      charArray0[0] = 'z';
      charArray0[1] = '`';
      charArray0[2] = '0';
      charArray0[3] = '[';
      StrBuilder strBuilder3 = strBuilder0.appendPadding(0, 'm');
      charArray0[4] = '8';
      StrBuilder strBuilder4 = strBuilder1.deleteFirst('|');
      charArray0[5] = '<';
      // Undeclared exception!
      try { 
        strBuilder2.insert((-1193), charArray0, 2122, (-1000));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1193
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.endsWith("hx-NU5");
      int int0 = 1435;
      StrBuilder strBuilder1 = new StrBuilder("hx-NU5");
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("hx-NU5");
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("The Array must not be null");
      int int1 = strBuilder1.indexOf(strMatcher0);
      StrMatcher strMatcher2 = StrMatcher.stringMatcher("28[B");
      // Undeclared exception!
      try { 
        strBuilder1.replace((-1474), (-1039), "{}");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1474
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[9];
      charArray0[0] = 'p';
      charArray0[1] = '<';
      charArray0[2] = 'V';
      charArray0[3] = 'I';
      charArray0[4] = '>';
      charArray0[5] = 'w';
      charArray0[6] = 'o';
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0, 65);
      charArray0[7] = '\'';
      charArray0[8] = ')';
      int int1 = 5;
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 5, 5);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 5
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      String string0 = strBuilder0.midString(0, 467);
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(467);
      // Undeclared exception!
      try { 
        strBuilder1.replace(102, 467, "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(404, 0, '`');
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("");
      StrBuilder strBuilder2 = strBuilder0.replaceAll((StrMatcher) strMatcher_StringMatcher0, "");
      StrBuilder strBuilder3 = strBuilder0.append(true);
      StrBuilder strBuilder4 = strBuilder0.reverse();
      StrBuilder strBuilder5 = strBuilder4.insert(0, '`');
      StrBuilder strBuilder6 = strBuilder3.appendNull();
      Writer writer0 = strBuilder3.asWriter();
      StrBuilder strBuilder7 = strBuilder6.minimizeCapacity();
      StrBuilder strBuilder8 = strBuilder6.replaceAll((StrMatcher) strMatcher_StringMatcher0, (String) null);
      StrBuilder strBuilder9 = strBuilder8.ensureCapacity(404);
      strBuilder7.size = 0;
      StrBuilder strBuilder10 = strBuilder7.setLength(404);
      StrBuilder strBuilder11 = strBuilder6.trim();
      StrBuilder strBuilder12 = strBuilder10.insert(0, 0.0);
      char[] charArray0 = new char[6];
      charArray0[0] = '`';
      charArray0[1] = 'A';
      charArray0[2] = '`';
      charArray0[3] = '`';
      charArray0[4] = '`';
      charArray0[5] = '`';
      char[] charArray1 = strBuilder1.getChars(charArray0);
      StrBuilder strBuilder13 = strBuilder11.trim();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder10.new StrBuilderWriter();
      Writer writer1 = strBuilder_StrBuilderWriter0.append('<');
      strBuilder_StrBuilderWriter0.flush();
      StrBuilder strBuilder14 = strBuilder9.reverse();
      StrBuilder strBuilder15 = strBuilder8.replaceFirst('&', '{');
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      String string0 = strBuilder1.midString(1, 1635);
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft((Object) strBuilder0, 1635, '%');
      Object[] objectArray0 = new Object[5];
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.append((-898));
      StrBuilder strBuilder2 = strBuilder0.append("");
      char char0 = '}';
      int int0 = strBuilder0.lastIndexOf('}', (-4430));
      int int1 = strBuilder2.indexOf("");
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder3 = strBuilder0.deleteFirst((StrMatcher) strMatcher_TrimMatcher0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("", (-898), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.replace(0, 1173, "");
      int int1 = (-614);
      int int2 = 31;
      // Undeclared exception!
      try { 
        strBuilder0.validateRange((-614), 31);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -614
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      String string0 = "org.apache.commons.lang.text.StrMatcher$CharSetMatcher";
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrMatcher$CharSetMatcher");
      StrBuilder strBuilder1 = strBuilder0.replaceAll("org.apache.commons.lang.text.StrMatcher$CharSetMatcher", "org.apache.commons.lang.text.StrMatcher$CharSetMatcher");
      Reader reader0 = strBuilder0.asReader();
      int int0 = 5286;
      StrBuilder strBuilder2 = new StrBuilder(5286);
      StringBuffer stringBuffer0 = new StringBuffer(5286);
      int int1 = 923;
      String string1 = strBuilder1.midString(4, 923);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      int int2 = strBuilder0.lastIndexOf(strMatcher0, 4);
      StrMatcher strMatcher1 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrBuilder strBuilder3 = strBuilder2.deleteFirst(strMatcher0);
      // Undeclared exception!
      try { 
        stringBuffer0.insert(4, 1204);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 4
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2542));
      int int0 = 0;
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('W');
      char[] charArray0 = new char[3];
      charArray0[0] = '5';
      charArray0[1] = 'W';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      boolean boolean0 = strBuilder0.contains((StrMatcher) strMatcher_CharMatcher0);
      StringBuffer stringBuffer0 = new StringBuffer(0);
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0, 0, 0);
      IntStream intStream0 = stringBuffer0.codePoints();
      String string0 = strBuilder1.substring(0);
      char[] charArray1 = new char[6];
      charArray1[1] = 'W';
      StrBuilder strBuilder2 = strBuilder0.append(charArray1);
      int int1 = strBuilder1.indexOf('W');
      StrBuilder strBuilder3 = strBuilder1.deleteFirst("");
      boolean boolean1 = strBuilder0.startsWith("Wu");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.append((CharSequence) stringBuffer0, 1, 1);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1320));
      StrBuilder strBuilder1 = new StrBuilder((-1320));
      int int0 = strBuilder0.size();
      StrBuilder strBuilder2 = strBuilder0.append(1.0F);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("java.awt.graphicsenv");
      int int1 = strBuilder2.indexOf(strMatcher0, 0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("ikRSC");
      StrBuilder strBuilder1 = strBuilder0.deleteAll("ikRSC");
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("t5k\"6uwVsg*pUkG&");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      StrBuilder strBuilder1 = strBuilder0.append((StringBuffer) null);
      char[] charArray0 = new char[3];
      charArray0[0] = '%';
      charArray0[2] = '|';
      char[] charArray1 = new char[4];
      boolean boolean0 = strBuilder1.endsWith("t5k\"6uwVsg*pUkG&");
      int int1 = strBuilder_StrBuilderReader0.read();
      charArray1[0] = '\"';
      charArray1[1] = '/';
      charArray1[2] = '!';
      charArray1[3] = '=';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(0, 116, charArray1, (-2549));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 116
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.setNullText((String) null);
      int int0 = 11;
      // Undeclared exception!
      try { 
        strBuilder1.insert(11, false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 11
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3913);
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("java.runtime.name");
      StrBuilder strBuilder2 = strBuilder0.append(false);
      String string0 = strBuilder2.rightString(0);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      char[] charArray0 = new char[3];
      charArray0[0] = ' ';
      charArray0[1] = 'U';
      charArray0[2] = 'B';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0, 0, 0);
      String string1 = strBuilder2.rightString(3913);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      String string0 = "<G[J[\\";
      StrBuilder strBuilder0 = new StrBuilder("<G[J[");
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) null, "d6Y=5");
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex((-1730));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1730
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      int int0 = 1041;
      StrBuilder strBuilder0 = new StrBuilder(1041);
      StrBuilder strBuilder1 = strBuilder0.append((double) 1041);
      StringBuffer stringBuffer0 = new StringBuffer("qjMVzMNs$SK");
      char[] charArray0 = new char[0];
      StringBuffer stringBuffer1 = stringBuffer0.append(charArray0);
      int int1 = 2;
      char[] charArray1 = new char[5];
      charArray1[0] = 'Q';
      charArray1[1] = 'J';
      charArray1[2] = 'l';
      charArray1[3] = 'v';
      charArray1[4] = ';';
      StringBuffer stringBuffer2 = strBuilder0.toStringBuffer();
      // Undeclared exception!
      try { 
        strBuilder0.getChars(0, 2, charArray1, (-271));
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[7];
      charArray0[0] = 'C';
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("^*K:Q<0L~|=<S>VAn4T", "hu`");
      charArray0[1] = 'C';
      charArray0[2] = '7';
      charArray0[3] = '.';
      charArray0[4] = 'L';
      charArray0[5] = '';
      charArray0[6] = 'p';
      StrBuilder strBuilder2 = strBuilder0.append(charArray0);
      StrTokenizer strTokenizer0 = strBuilder2.asTokenizer();
      int int0 = strBuilder2.capacity();
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      int int1 = strBuilder1.lastIndexOf((StrMatcher) strMatcher_CharSetMatcher0, (-1222));
      StrBuilder strBuilder3 = strBuilder0.ensureCapacity((-1));
      StrBuilder strBuilder4 = strBuilder1.replaceAll((StrMatcher) strMatcher_CharSetMatcher0, "");
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      int int2 = (-145);
      // Undeclared exception!
      try { 
        strBuilder2.appendFixedWidthPadRight((Object) null, 3555, '.');
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Dr'Qa@>-ux");
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('-');
      StrBuilder strBuilder1 = strBuilder0.deleteAll((StrMatcher) strMatcher_CharMatcher0);
      StrBuilder strBuilder2 = new StrBuilder("MY>}PW_9W\" 6");
      StrBuilder strBuilder3 = strBuilder1.appendFixedWidthPadRight((Object) strBuilder2, 5, '-');
      StrBuilder strBuilder4 = strBuilder3.setLength(5);
      String string0 = strBuilder1.substring(0);
      int int0 = strBuilder0.lastIndexOf((String) null, 0);
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrBuilder strBuilder5 = strBuilder0.deleteAll((StrMatcher) strMatcher_NoMatcher0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder5.new StrBuilderWriter();
      StrBuilder strBuilder6 = strBuilder0.append(602L);
      int int1 = strBuilder5.lastIndexOf((StrMatcher) strMatcher_NoMatcher0);
      int int2 = strBuilder5.indexOf("MY>}PW_9W\" 6", 1);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("Dr'Qa@>-ux", (-1), 1);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[4];
      charArray0[0] = 'z';
      charArray0[1] = '.';
      charArray0[2] = '';
      charArray0[3] = 'h';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, (-1680), 44);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      String string0 = null;
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrMatcher strMatcher0 = null;
      int int0 = strBuilder0.lastIndexOf((StrMatcher) null, 0);
      int int1 = 0;
      int int2 = 670;
      // Undeclared exception!
      try { 
        strBuilder0.insert(670, (long) 670);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 670
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      int int0 = (-915);
      StrBuilder strBuilder0 = new StrBuilder((-915));
      StrBuilder strBuilder1 = strBuilder0.append((-915));
      LinkedList<StrBuilder> linkedList0 = new LinkedList<StrBuilder>();
      linkedList0.push(strBuilder0);
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Collection) linkedList0, "$_I|{Y");
      StrBuilder strBuilder3 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder4 = linkedList0.remove();
      // Undeclared exception!
      try { 
        strBuilder3.setLength((-915));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -915
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Dr'Qa@>-ux");
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('-');
      StrBuilder strBuilder1 = strBuilder0.deleteAll((StrMatcher) strMatcher_CharMatcher0);
      StrBuilder strBuilder2 = new StrBuilder("MY>}PW_9W\" 6");
      StrBuilder strBuilder3 = strBuilder1.appendFixedWidthPadRight((Object) strBuilder2, 5, '-');
      String string0 = strBuilder1.substring(0);
      int int0 = strBuilder0.lastIndexOf((String) null, 0);
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrBuilder strBuilder4 = strBuilder0.deleteAll((StrMatcher) strMatcher_NoMatcher0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder4.new StrBuilderWriter();
      StrBuilder strBuilder5 = strBuilder0.append(602L);
      int int1 = strBuilder4.lastIndexOf((StrMatcher) strMatcher_NoMatcher0);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("Dr'Qa@>-ux", (-1), 1);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      String string0 = "org.apache.commons.lang.text.StrMatcher$CharSetMatcher";
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrMatcher$CharSetMatcher");
      StrBuilder strBuilder1 = strBuilder0.replaceAll("org.apache.commons.lang.text.StrMatcher$CharSetMatcher", "org.apache.commons.lang.text.StrMatcher$CharSetMatcher");
      Reader reader0 = strBuilder0.asReader();
      int int0 = 5286;
      // Undeclared exception!
      try { 
        strBuilder0.delete(5286, 5286);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder2 = strBuilder1.append((-715.3631298818558));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      char[] charArray0 = new char[6];
      charArray0[0] = '\\';
      charArray0[1] = ',';
      charArray0[2] = 'K';
      charArray0[3] = '3';
      charArray0[4] = '~';
      charArray0[5] = 'K';
      int int0 = strMatcher0.isMatch(charArray0, 9, 101, 0);
      StrBuilder strBuilder3 = strBuilder0.replace(0, 0, "n-2DF?$:6v0");
      StrBuilder strBuilder4 = strBuilder2.replace(strMatcher0, "n-2DF?$:6v0", 0, 0, 0);
      StrBuilder strBuilder5 = strBuilder1.append("n-2DF?$:6v0");
      StrBuilder strBuilder6 = strBuilder1.insert(0, false);
      String string0 = strBuilder2.midString((-845), (-845));
      StrBuilder strBuilder7 = strBuilder0.trim();
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("\"@+&c80_K&WD8HRRe]i");
      StrBuilder strBuilder1 = strBuilder0.deleteCharAt(0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid length: ");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("Invalid length: ", "Invalid length: ");
      StrBuilder strBuilder2 = strBuilder0.setCharAt(9, '_');
      char char0 = 'h';
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadLeft((Object) "Invalid length: ", (-1544), 'h');
      // Undeclared exception!
      try { 
        strBuilder0.substring((-1544), (-1544));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1544
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append("J5cF|70");
      StrBuilder strBuilder2 = strBuilder0.appendNewLine();
      char[] charArray0 = new char[0];
      strBuilder2.buffer = charArray0;
      StrBuilder strBuilder3 = strBuilder2.clear();
      // Undeclared exception!
      try { 
        strBuilder0.insert(3313, (-1872.0513F));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3313
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrMatcher$NoMatcher");
      StrBuilder strBuilder1 = strBuilder0.append(0);
      boolean boolean0 = strBuilder0.contains(';');
      StrBuilder strBuilder2 = strBuilder1.append((float) 0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      String string0 = "Vv~;`mg'63)S";
      StrBuilder strBuilder0 = new StrBuilder("Vv~;`mg'63)S");
      int int0 = 0;
      StringBuffer stringBuffer0 = new StringBuffer(0);
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 1658, 1658);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(32);
      StringBuffer stringBuffer0 = new StringBuffer(32);
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 32, 2);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      StrBuilder strBuilder2 = strBuilder0.append('&');
      char[] charArray0 = new char[8];
      charArray0[0] = '&';
      charArray0[1] = '{';
      charArray0[2] = '&';
      charArray0[3] = '&';
      charArray0[4] = '~';
      charArray0[5] = '&';
      charArray0[6] = '&';
      charArray0[7] = '&';
      // Undeclared exception!
      try { 
        strBuilder2.insert(0, charArray0, 39, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: 39
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrBuilder strBuilder2 = strBuilder0.insert(0, true);
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) "";
      objectArray0[1] = (Object) "";
      objectArray0[2] = (Object) strBuilder0;
      objectArray0[3] = (Object) "";
      StrBuilder strBuilder3 = strBuilder1.append(false);
      objectArray0[4] = (Object) "";
      StrBuilder strBuilder4 = strBuilder1.appendWithSeparators(objectArray0, "");
      String string0 = strBuilder1.leftString(0);
      boolean boolean0 = strBuilder0.isEmpty();
      StrBuilder strBuilder5 = strBuilder0.setNullText("");
      StrBuilder strBuilder6 = strBuilder5.appendNewLine();
      StrBuilder strBuilder7 = strBuilder1.insert(114, (-1902.829643));
      StrBuilder strBuilder8 = strBuilder1.append(4);
      char char0 = '@';
      StrBuilder strBuilder9 = strBuilder8.deleteAll('@');
      int int0 = strBuilder8.indexOf("K Av.uT5/8_G&|", 0);
      StringBuffer stringBuffer0 = strBuilder7.toStringBuffer();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder7.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer", 114, 4);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(39);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrBuilder strBuilder1 = strBuilder0.append("");
      strBuilder_StrBuilderReader0.mark(39);
      long long0 = strBuilder_StrBuilderReader0.skip(39);
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      StrMatcher strMatcher0 = null;
      int int0 = strBuilder0.lastIndexOf((StrMatcher) null);
      StrBuilder strBuilder2 = strBuilder1.replaceAll("", (String) null);
      int int1 = (-116);
      // Undeclared exception!
      try { 
        strBuilder2.setCharAt((-116), '{');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -116
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("QmV\"LCu>m>[iC");
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      int int1 = strBuilder1.lastIndexOf((StrMatcher) strMatcher_TrimMatcher0, (-1));
      // Undeclared exception!
      try { 
        strBuilder0.insert((-2608), (-2608));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2608
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      String string0 = "8";
      StrBuilder strBuilder0 = new StrBuilder("8");
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.insert(0, (long) 0);
      StrBuilder strBuilder2 = strBuilder1.insert(0, (float) 0);
      StrBuilder strBuilder3 = strBuilder0.reverse();
      int int1 = (-1311);
      // Undeclared exception!
      try { 
        strBuilder2.append("UK&X_", 0, (-1311));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      // Undeclared exception!
      try { 
        strBuilder0.validateRange(Integer.MAX_VALUE, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("7h|}(N2Nf(c_)dIs");
      StrBuilder strBuilder1 = strBuilder0.append(0);
      StrBuilder strBuilder2 = strBuilder1.append((String) null, 2378, 0);
      int int0 = strBuilder0.size();
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("vo^[@");
      int int1 = strBuilder1.lastIndexOf(strMatcher0);
      StrBuilder strBuilder3 = strBuilder0.append('M');
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      int int0 = 385;
      StrBuilder strBuilder0 = new StrBuilder(385);
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance();
      String string0 = "";
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      char[] charArray0 = new char[5];
      charArray0[0] = '+';
      charArray0[1] = 'v';
      charArray0[2] = '_';
      charArray0[3] = 'b';
      charArray0[4] = ']';
      strBuilder1.buffer = charArray0;
      char[] charArray1 = new char[2];
      charArray1[0] = '+';
      charArray1[1] = '^';
      int int1 = (-85);
      int int2 = 1431;
      strBuilder1.size = 1431;
      // Undeclared exception!
      try { 
        strBuilder1.append(175.04386642);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("O9s,>");
      StrBuilder strBuilder2 = strBuilder1.replaceAll("_9^^;C._!&[", "_9^^;C._!&[");
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      char[] charArray0 = new char[6];
      charArray0[0] = 'j';
      charArray0[1] = ';';
      charArray0[2] = '{';
      charArray0[3] = '\'';
      charArray0[4] = 'r';
      charArray0[5] = '>';
      int int0 = strMatcher0.isMatch(charArray0, 0, 0, 0);
      int int1 = strBuilder2.indexOf(strMatcher0, 0);
      StrBuilder strBuilder3 = strBuilder1.setNullText("O9s,>");
      StrBuilder strBuilder4 = strBuilder3.appendNull();
      StrBuilder strBuilder5 = strBuilder0.append((double) 0);
      strBuilder1.validateIndex(0);
      char[] charArray1 = new char[4];
      charArray1[0] = 'O';
      charArray1[1] = 'Y';
      charArray1[2] = 'J';
      charArray1[3] = 'h';
      StrBuilder strBuilder6 = strBuilder1.insert(0, 'h');
      strBuilder3.buffer = charArray1;
      StrBuilder strBuilder7 = strBuilder3.deleteFirst("");
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.substring(0, 0);
      char char0 = 'H';
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('H');
      int int0 = 0;
      StrBuilder strBuilder2 = new StrBuilder(0);
      char[] charArray0 = new char[1];
      charArray0[0] = 'H';
      int int1 = strBuilder2.validateRange(0, 2276);
      // Undeclared exception!
      try { 
        strBuilder2.getChars(1239, (-2585), charArray0, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2585
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      String string0 = strBuilder0.toString();
      StringBuffer stringBuffer0 = new StringBuffer();
      char[] charArray0 = new char[9];
      charArray0[0] = 'v';
      charArray0[1] = '{';
      charArray0[2] = 'N';
      charArray0[3] = '7';
      charArray0[4] = 'N';
      charArray0[5] = 'W';
      charArray0[6] = 'x';
      charArray0[7] = 'Z';
      charArray0[8] = '?';
      // Undeclared exception!
      try { 
        stringBuffer0.insert(101, charArray0, 101, 101);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 101
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(false);
      int int0 = 0;
      StrBuilder strBuilder2 = strBuilder1.insert(0, (char[]) null);
      StrTokenizer strTokenizer0 = strBuilder2.asTokenizer();
      StrBuilder strBuilder3 = strBuilder1.appendWithSeparators((Object[]) null, (String) null);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      int int1 = 983;
      // Undeclared exception!
      try { 
        strBuilder0.insert(983, (Object) strBuilder_StrBuilderWriter0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 983
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder((String) null);
      StrBuilder strBuilder2 = strBuilder1.append(641L);
      char[] charArray0 = new char[7];
      charArray0[0] = '-';
      String string0 = strBuilder2.leftString(2123);
      charArray0[1] = 'c';
      charArray0[2] = 'q';
      charArray0[3] = 'G';
      charArray0[4] = 'w';
      charArray0[5] = '\'';
      charArray0[6] = '\'';
      strBuilder2.getChars(0, 0, charArray0, 0);
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      char[] charArray1 = strBuilder0.toCharArray();
      StrBuilder strBuilder3 = strBuilder1.trim();
      boolean boolean1 = strBuilder3.endsWith((String) null);
      StrBuilder strBuilder4 = strBuilder0.insert(0, (String) null);
      StrBuilder strBuilder5 = strBuilder1.trim();
      // Undeclared exception!
      try { 
        strBuilder5.delete((-40), (-1459));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -40
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      int int0 = (-593);
      StrBuilder strBuilder0 = new StrBuilder((-593));
      String string0 = strBuilder0.getNewLineText();
      int int1 = 2769;
      StrBuilder strBuilder1 = new StrBuilder(2769);
      int int2 = (-901);
      // Undeclared exception!
      try { 
        strBuilder1.insert((-901), (-593));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -901
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(44);
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      char char0 = 'f';
      StrBuilder strBuilder1 = strBuilder0.deleteAll('f');
      StrBuilder strBuilder2 = strBuilder1.appendNewLine();
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      StrBuilder strBuilder3 = strBuilder2.replaceAll(strMatcher0, "");
      StrBuilder strBuilder4 = strBuilder1.setLength(44);
      String string0 = strBuilder4.leftString(0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder4.new StrBuilderWriter();
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) "");
      strBuilder_StrBuilderWriter0.write((char[]) null);
      StrBuilder strBuilder5 = strBuilder4.appendNull();
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) strBuilder_StrBuilderWriter0;
      objectArray0[1] = (Object) strBuilder3;
      StrBuilder strBuilder6 = strBuilder5.appendWithSeparators(objectArray0, "");
      boolean boolean0 = strBuilder5.isEmpty();
      // Undeclared exception!
      try { 
        strBuilder0.append("", (-2846), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.append((-898));
      StrBuilder strBuilder2 = strBuilder0.append((String) null);
      int int0 = strBuilder0.lastIndexOf('}', (-4430));
      int int1 = strBuilder2.indexOf("k#vu");
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder3 = strBuilder0.deleteFirst((StrMatcher) strMatcher_TrimMatcher0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("", (-898), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.replaceAll((String) null, (String) null);
      StrBuilder strBuilder2 = strBuilder1.append(false);
      int int0 = strBuilder0.size();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int1 = strBuilder_StrBuilderReader0.read();
      char[] charArray0 = new char[1];
      int int2 = strBuilder_StrBuilderReader0.read();
      charArray0[0] = 'O';
      int int3 = strBuilder_StrBuilderReader0.read();
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(108);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 108
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("W>?6qeTt|^V/&_'h");
      StrBuilder strBuilder1 = strBuilder0.replaceAll("", "");
      StrBuilder strBuilder2 = strBuilder1.append("Invalid startIndex: ");
      // Undeclared exception!
      try { 
        strBuilder2.substring(385);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(4);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance("startIndex must be valid");
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      char[] charArray0 = new char[2];
      charArray0[0] = '3';
      charArray0[1] = ')';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, (-833), (-833));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -833
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("-LId%nwB6J>s_");
      StrBuilder strBuilder1 = strBuilder0.replace(9, 9, "-LId%nwB6J>s_");
      Reader reader0 = strBuilder1.asReader();
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) strBuilder0;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      objectArray0[1] = object0;
      objectArray0[2] = (Object) "-LId%nwB6J>s_";
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators(objectArray0, "-LId%nwB6J>s_");
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('X');
      StrBuilder strBuilder3 = strBuilder2.replaceFirst((StrMatcher) strMatcher_CharMatcher0, "-LId%nwB6J>s_");
      String string0 = strBuilder2.toString();
      Writer writer0 = strBuilder2.asWriter();
      char[] charArray0 = new char[7];
      charArray0[0] = 'X';
      charArray0[1] = 'X';
      charArray0[2] = 'X';
      charArray0[3] = 'X';
      charArray0[4] = 'X';
      charArray0[5] = 'X';
      charArray0[6] = 'X';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder4 = strBuilder0.setNewLineText("-LId%nwB6J>s_");
      String string1 = strBuilder0.substring(9);
      char[] charArray1 = strBuilder4.toCharArray();
      StrBuilder strBuilder5 = strBuilder2.deleteFirst('X');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder3.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrMatcher$CharSetMatcher");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "org.apache.commons.lang.text.StrMatcher$CharSetMatcher");
      boolean boolean0 = linkedList0.add((Object) "org.apache.commons.lang.text.StrMatcher$CharSetMatcher");
      StrBuilder strBuilder2 = strBuilder1.appendNewLine();
      StringBuffer stringBuffer0 = strBuilder1.toStringBuffer();
      StrBuilder strBuilder3 = strBuilder0.clear();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder3.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("[m94e+Q0 >w");
      StrBuilder strBuilder4 = strBuilder3.append(114);
      strBuilder_StrBuilderWriter0.write(0);
      strBuilder_StrBuilderWriter0.write(1);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(0L);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.trim();
      String string0 = strBuilder1.rightString((-2392));
      String string1 = "org.apache.commons.lang.text.StrBuilder";
      StrBuilder strBuilder2 = strBuilder0.append("org.apache.commons.lang.text.StrBuilder");
      StrBuilder strBuilder3 = strBuilder2.append((-1.0F));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = (-1762);
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex((-1431));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1431
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.append("", 0, 0);
      String string0 = strBuilder0.rightString(34);
      int int0 = strBuilder0.capacity();
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) "";
      objectArray0[1] = (Object) strBuilder1;
      objectArray0[2] = (Object) strBuilder1;
      objectArray0[3] = (Object) "";
      objectArray0[4] = (Object) strBuilder1;
      objectArray0[5] = (Object) strBuilder0;
      objectArray0[6] = (Object) "";
      char[] charArray0 = new char[8];
      charArray0[0] = 'x';
      charArray0[1] = 'q';
      charArray0[2] = 'y';
      charArray0[3] = '!';
      charArray0[4] = '=';
      charArray0[5] = '>';
      charArray0[6] = ')';
      charArray0[7] = 'a';
      StrBuilder strBuilder2 = strBuilder0.append(charArray0);
      objectArray0[7] = (Object) strBuilder0;
      StrBuilder strBuilder3 = strBuilder1.appendWithSeparators(objectArray0, (String) null);
      int int1 = strBuilder3.hashCode();
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(2031);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("", (-1), 102);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.class.path");
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      StrBuilder strBuilder2 = strBuilder0.replaceFirst(strMatcher0, "java.class.path");
      StrMatcher strMatcher1 = StrMatcher.quoteMatcher();
      StrBuilder strBuilder3 = strBuilder0.replaceAll(strMatcher1, "java.class.path");
      StrBuilder strBuilder4 = strBuilder0.append((-1));
      char[] charArray0 = new char[3];
      charArray0[0] = '(';
      charArray0[1] = 'h';
      charArray0[2] = 'i';
      // Undeclared exception!
      try { 
        strMatcher1.isMatch(charArray0, (-1), (-3007), (-1));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.apache.commons.lang.text.StrMatcher$CharSetMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("os.version");
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher("$dU+c~%`a1.3Npr|6R");
      String string0 = "";
      StrMatcher strMatcher3 = StrMatcher.stringMatcher("");
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      char[] charArray0 = new char[8];
      charArray0[0] = 'D';
      charArray0[1] = '@';
      charArray0[2] = 'L';
      charArray0[3] = '*';
      charArray0[4] = '?';
      charArray0[5] = 'o';
      charArray0[6] = 'u';
      charArray0[7] = 'w';
      int int0 = strMatcher3.isMatch(charArray0, 2058, 2058, 2058);
      boolean boolean0 = strBuilder1.contains((String) null);
      StrBuilder strBuilder2 = strBuilder1.append((-1001.0F));
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) "$dU+c~%`a1.3Npr|6R";
      objectArray0[1] = (Object) "$dU+c~%`a1.3Npr|6R";
      objectArray0[2] = (Object) "$dU+c~%`a1.3Npr|6R";
      objectArray0[3] = (Object) strBuilder1;
      objectArray0[4] = (Object) strMatcher3;
      objectArray0[5] = (Object) strMatcher3;
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators(objectArray0, "$dU+c~%`a1.3Npr|6R");
      int int1 = (-195);
      // Undeclared exception!
      try { 
        strBuilder1.insert((-195), false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -195
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      int int0 = 897;
      StrBuilder strBuilder0 = new StrBuilder(897);
      boolean boolean0 = strBuilder0.contains((String) null);
      StringBuffer stringBuffer0 = new StringBuffer("H05>'$qxkVr~y-Ky");
      StringBuffer stringBuffer1 = stringBuffer0.append("P`}kU\"%10pz)$");
      // Undeclared exception!
      try { 
        stringBuffer0.insert(897, (double) 897);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 897
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("");
      StrBuilder strBuilder1 = strBuilder0.replaceAll((StrMatcher) strMatcher_StringMatcher0, "");
      boolean boolean0 = strBuilder0.endsWith("S");
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrBuilder strBuilder2 = strBuilder0.replaceFirst(strMatcher0, ">S");
      StringBuffer stringBuffer0 = new StringBuffer("*{[|wS#U1");
      StrBuilder strBuilder3 = strBuilder2.append(stringBuffer0);
      int int0 = 0;
      char[] charArray0 = strBuilder0.toCharArray(0, 0);
      int int1 = (-3791);
      StrMatcher strMatcher1 = StrMatcher.charMatcher('3');
      // Undeclared exception!
      try { 
        strBuilder1.insert((-3791), true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3791
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "cv0JD$3bu");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Collection) linkedList0, "H.o");
      int int0 = 0;
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("H.o");
      // Undeclared exception!
      try { 
        strBuilder0.delete(389, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "ig'Qty?\"";
      StrBuilder strBuilder1 = strBuilder0.insert(0, "ig'Qty?\"");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder2 = strBuilder1.insert(0, (long) 0);
      StrBuilder strBuilder3 = strBuilder1.appendWithSeparators((Collection) linkedList0, "ig'Qty?\"");
      StrBuilder strBuilder4 = strBuilder0.setNullText("ig'Qty?\"");
      // Undeclared exception!
      try { 
        strBuilder4.deleteCharAt((-282));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -282
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = 'o';
      StrBuilder strBuilder1 = strBuilder0.appendPadding(5, 'o');
      char char1 = strBuilder0.charAt(0);
      StrBuilder strBuilder2 = strBuilder0.replace(0, 0, "length must be valid");
      StrBuilder strBuilder3 = strBuilder0.append((long) 0);
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt((-2489));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2489
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("/BHWOGXw");
      int int0 = (-2170);
      strBuilder0.size = (-2170);
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity((-1847));
      // Undeclared exception!
      try { 
        strBuilder0.append(0L);
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      int int0 = 5306;
      StrBuilder strBuilder0 = new StrBuilder(5306);
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrMatcher strMatcher0 = StrMatcher.charMatcher('J');
      StrBuilder strBuilder2 = strBuilder1.deleteAll(strMatcher0);
      StrBuilder strBuilder3 = strBuilder2.setLength(1641);
      Writer writer0 = strBuilder3.asWriter();
      String string0 = "X`2?";
      boolean boolean0 = strBuilder0.endsWith("X`2?");
      StrBuilder strBuilder4 = strBuilder0.clear();
      // Undeclared exception!
      try { 
        strBuilder4.deleteCharAt((-3171));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3171
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.insert(0, (long) 0);
      StrBuilder strBuilder2 = strBuilder0.setNewLineText((String) null);
      char[] charArray0 = new char[5];
      charArray0[0] = 'n';
      charArray0[1] = '&';
      charArray0[2] = 'Z';
      charArray0[3] = 'z';
      charArray0[4] = 'k';
      StrBuilder strBuilder3 = strBuilder1.append(charArray0);
      Reader reader0 = strBuilder0.asReader();
      char[] charArray1 = strBuilder2.getChars(charArray0);
      StrBuilder strBuilder4 = strBuilder0.reverse();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("OS/2", 0, 0);
      strBuilder_StrBuilderWriter0.write(charArray1, 0, 0);
      int int0 = strBuilder4.length();
      StrBuilder strBuilder5 = strBuilder0.minimizeCapacity();
      String string0 = strBuilder1.midString(0, 108);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(1.0F);
      StrBuilder strBuilder2 = strBuilder1.setNullText("");
      int int0 = 2309;
      int int1 = 0;
      char[] charArray0 = new char[9];
      charArray0[0] = 'z';
      charArray0[1] = 'J';
      charArray0[2] = '_';
      charArray0[3] = '';
      charArray0[4] = 'm';
      charArray0[5] = '~';
      StrBuilder strBuilder3 = new StrBuilder((-262));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder3.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterString("");
      StrBuilder strBuilder4 = strBuilder1.appendWithSeparators((Iterator) strTokenizer0, "Mac OS X");
      StrBuilder strBuilder5 = strBuilder0.append((Object) strBuilder2);
      charArray0[6] = '[';
      charArray0[7] = '{';
      charArray0[8] = 'h';
      // Undeclared exception!
      try { 
        strBuilder2.getChars(2309, 0, charArray0, 2309);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[5];
      charArray0[0] = 'T';
      charArray0[1] = 'C';
      charArray0[2] = 'n';
      charArray0[3] = 'r';
      charArray0[4] = 'l';
      StrBuilder strBuilder1 = strBuilder0.insert(0, charArray0, 0, 0);
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft(0, 0, '~');
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = strBuilder0.indexOf('7');
      char[] charArray0 = new char[9];
      charArray0[0] = '7';
      charArray0[1] = '7';
      charArray0[2] = '7';
      charArray0[3] = '7';
      charArray0[4] = '7';
      charArray0[5] = '7';
      charArray0[6] = '7';
      charArray0[8] = '7';
      StrBuilder strBuilder1 = strBuilder0.insert(0, charArray0);
      StrBuilder strBuilder2 = strBuilder1.appendNull();
      StrBuilder strBuilder3 = strBuilder2.append((StringBuffer) null);
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder4 = strBuilder3.append(strBuilder0);
      // Undeclared exception!
      try { 
        strBuilder3.append(strBuilder4, 0, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder((-1685));
      int int0 = 0;
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight((Object) strBuilder1, 0, 'W');
      StringBuffer stringBuffer0 = new StringBuffer(0);
      StringBuffer stringBuffer1 = new StringBuffer(stringBuffer0);
      StrBuilder strBuilder3 = strBuilder0.append(stringBuffer1);
      char[] charArray0 = new char[1];
      charArray0[0] = '9';
      int int1 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.getChars((-1685), (-1685), charArray0, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1685
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(44);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 1865);
      char[] charArray0 = new char[1];
      charArray0[0] = 'J';
      // Undeclared exception!
      try { 
        strBuilder0.getChars((-1), 1865, charArray0, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      char[] charArray0 = new char[3];
      String string0 = strBuilder0.midString(0, 0);
      StrBuilder strBuilder1 = strBuilder0.append((Object) "");
      charArray0[0] = 'P';
      charArray0[1] = '^';
      charArray0[2] = 'Z';
      strBuilder0.buffer = charArray0;
      char[] charArray1 = new char[2];
      charArray1[0] = 'B';
      charArray1[1] = '_';
      StrBuilder strBuilder2 = strBuilder0.insert(0, charArray1, 0, 0);
      // Undeclared exception!
      try { 
        strBuilder2.validateIndex((-2264));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2264
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(1414);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1414
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      String string0 = "'/Bak$e";
      StrBuilder strBuilder0 = new StrBuilder("'/Bak$e");
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "'/Bak$e");
      char[] charArray0 = new char[0];
      StringBuffer stringBuffer1 = stringBuffer0.append(charArray0);
      StringBuffer stringBuffer2 = stringBuffer0.appendCodePoint(1727);
      StrBuilder strBuilder2 = strBuilder0.append(stringBuffer0);
      int int0 = strBuilder0.hashCode();
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      StrBuilder strBuilder3 = strBuilder0.append(false);
      StrTokenizer strTokenizer0 = strBuilder1.asTokenizer();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      boolean boolean1 = strBuilder_StrBuilderReader0.ready();
      int int1 = 0;
      int int2 = (-1928);
      // Undeclared exception!
      try { 
        strBuilder2.append(charArray0, 0, (-1928));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: -1928
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-724));
      StrBuilder strBuilder1 = strBuilder0.append('\'');
      StrBuilder strBuilder2 = strBuilder1.replaceFirst("", "");
      Object[] objectArray0 = new Object[0];
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators(objectArray0, (String) null);
      int int0 = strBuilder0.indexOf('\\', (-724));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      char[] charArray0 = new char[4];
      charArray0[0] = '\\';
      charArray0[1] = '~';
      charArray0[2] = '\\';
      char char0 = 'f';
      charArray0[3] = 'f';
      int int1 = (-193);
      // Undeclared exception!
      try { 
        strMatcher0.isMatch(charArray0, 1471, (-724), (-193));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1471
         //
         verifyException("org.apache.commons.lang.text.StrMatcher$CharSetMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.insert(0, (double) 0);
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.deleteAll('P');
      StrBuilder strBuilder3 = strBuilder2.insert(0, 'P');
      StrBuilder strBuilder4 = strBuilder0.replaceAll((StrMatcher) null, "");
      int int1 = strBuilder4.indexOf(strMatcher0);
      char[] charArray0 = new char[2];
      charArray0[0] = 'P';
      charArray0[1] = 'P';
      StrBuilder strBuilder5 = new StrBuilder("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder3.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      strBuilder_StrBuilderReader0.close();
      int int2 = strBuilder1.indexOf('C', (-1212));
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-457));
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      char[] charArray0 = new char[9];
      charArray0[0] = ']';
      charArray0[1] = 'U';
      charArray0[2] = 'q';
      charArray0[3] = 'B';
      charArray0[4] = '\"';
      charArray0[5] = ' ';
      charArray0[6] = 'v';
      charArray0[7] = '_';
      charArray0[8] = 'K';
      int int0 = strMatcher0.isMatch(charArray0, 0, 1428, 1428);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      int int1 = strBuilder1.indexOf(strMatcher0);
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder2 = strBuilder0.reverse();
      StrBuilder strBuilder3 = strBuilder2.replaceFirst("", "");
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Object[]) null, "org.apache.commons.lang.SystemUtils");
      StrBuilder strBuilder2 = strBuilder1.append(1.0);
      char[] charArray0 = new char[0];
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrMatcher strMatcher0 = StrMatcher.charMatcher('y');
      StrMatcher strMatcher1 = StrMatcher.charMatcher('G');
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = strBuilder0.indexOf((StrMatcher) strMatcher_NoMatcher0);
      StrBuilder strBuilder3 = strBuilder0.append(charArray0);
      StrBuilder strBuilder4 = strBuilder3.trim();
      StrBuilder strBuilder5 = new StrBuilder("org.apache.commons.lang.SystemUtils");
      StrBuilder strBuilder6 = strBuilder4.insert(0, (Object) strBuilder5);
      StrBuilder strBuilder7 = strBuilder2.appendWithSeparators((Object[]) null, "org.apache.commons.lang.SystemUtils");
      int int1 = strBuilder0.indexOf('G');
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = strBuilder0.length();
      StrBuilder strBuilder1 = strBuilder0.insert(0, (float) 0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      String string0 = strBuilder0.midString(0, 0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[8];
      charArray0[0] = 'o';
      StrBuilder strBuilder2 = strBuilder0.ensureCapacity(1314);
      charArray0[1] = 'r';
      charArray0[2] = '~';
      charArray0[3] = '^';
      charArray0[4] = 'z';
      charArray0[5] = 'g';
      int int1 = strBuilder_StrBuilderReader0.read(charArray0);
      charArray0[6] = '{';
      charArray0[7] = 'S';
      int int2 = strBuilder_StrBuilderReader0.read(charArray0, 0, 0);
      StrBuilder strBuilder3 = strBuilder0.delete(0, 9);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      CharBuffer charBuffer0 = CharBuffer.allocate(1292);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0);
      int int0 = strBuilder_StrBuilderReader0.read(charBuffer1);
      int int1 = strBuilder_StrBuilderReader0.read();
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      // Undeclared exception!
      try { 
        strBuilder0.insert(1292, "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1292
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("x}c!CBH`(sR5L#fg O");
      int int0 = 1;
      StrBuilder strBuilder1 = strBuilder0.insert(1, true);
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((Object) "x}c!CBH`(sR5L#fg O", 2, 'P');
      String string0 = strBuilder2.leftString(1);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      char[] charArray0 = new char[1];
      charArray0[0] = 'm';
      strBuilder_StrBuilderReader0.mark(986);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 102, (-2662));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.contains("");
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) "";
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) strBuilder0;
      objectArray0[3] = (Object) strBuilder0;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      objectArray0[4] = object0;
      objectArray0[5] = (Object) strBuilder0;
      objectArray0[6] = (Object) strBuilder0;
      objectArray0[7] = (Object) strBuilder0;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "");
      String string0 = strBuilder1.toString();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
      String string1 = strBuilder_StrBuilderTokenizer0.getContent();
      Object object1 = strBuilder_StrBuilderTokenizer0.next();
      char[] charArray0 = new char[1];
      charArray0[0] = 'w';
      // Undeclared exception!
      try { 
        strBuilder1.insert((-4285), charArray0, (-4285), (-384));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -4285
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.delete(0, 0);
      StrBuilder strBuilder2 = strBuilder0.append(48);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      int int0 = (-556);
      StrBuilder strBuilder0 = new StrBuilder((-556));
      String string0 = "fT0R:FxF";
      StrBuilder strBuilder1 = strBuilder0.deleteAll("fT0R:FxF");
      int int1 = 0;
      String string1 = strBuilder1.midString((-556), 0);
      StrBuilder strBuilder2 = strBuilder1.append(strBuilder0);
      char char0 = 'V';
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance("fT0R:FxF");
      Object[] objectArray0 = new Object[0];
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators(objectArray0, "fT0R:FxF");
      StrBuilder strBuilder4 = strBuilder1.appendWithSeparators((Iterator) strTokenizer0, "K_(B}'6;Z");
      // Undeclared exception!
      try { 
        strBuilder4.toCharArray((-556), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -556
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder(1);
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(1);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('(', '(');
      StrBuilder strBuilder2 = strBuilder0.append(34);
      StrBuilder strBuilder3 = strBuilder2.deleteAll("java.awt.fonts");
      strBuilder1.size = 34;
      // Undeclared exception!
      try { 
        strBuilder1.endsWith("j");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 33
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      String string0 = "Fv";
      StrBuilder strBuilder0 = new StrBuilder("Fv");
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance("Fv");
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "Fv");
      // Undeclared exception!
      try { 
        strBuilder1.delete(812, (-2236));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = null;
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher((String) null);
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.append((-713.5742F));
      StrBuilder strBuilder3 = strBuilder2.append(strBuilder0);
      int int0 = 1224;
      // Undeclared exception!
      try { 
        strBuilder3.getChars(1224, (-3931), (char[]) null, (-3931));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3931
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(44);
      int int0 = strBuilder0.validateRange(0, 0);
      StrBuilder strBuilder1 = new StrBuilder("");
      boolean boolean0 = strBuilder0.equals((Object) strBuilder1);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      char[] charArray0 = new char[5];
      charArray0[0] = '8';
      charArray0[1] = 'j';
      charArray0[2] = '@';
      StrBuilder strBuilder2 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      charArray0[3] = 'U';
      charArray0[4] = 'R';
      strBuilder_StrBuilderWriter0.write(charArray0);
      boolean boolean1 = strBuilder2.endsWith("g&0B}");
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      char[] charArray0 = new char[6];
      charArray0[0] = 'e';
      charArray0[1] = 'a';
      charArray0[2] = 'r';
      charArray0[3] = '=';
      charArray0[4] = 'x';
      charArray0[5] = '\'';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0, 0, 0);
      strBuilder_StrBuilderReader0.reset();
      strBuilder_StrBuilderReader0.reset();
      strBuilder_StrBuilderReader0.mark(0);
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      StrBuilder strBuilder1 = strBuilder0.insert(0, ' ');
      StrBuilder strBuilder2 = strBuilder0.replaceAll('x', 'r');
      boolean boolean1 = strBuilder0.equals((Object) null);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      int int0 = (-3794);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-3794), (-3794));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3794
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      char[] charArray0 = new char[0];
      char[] charArray1 = strBuilder0.getChars(charArray0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-2301);
      String string0 = "b==CT}zhqQR'";
      // Undeclared exception!
      try { 
        strBuilder0.replace((-2301), (-2301), "b==CT}zhqQR'");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2301
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 380;
      // Undeclared exception!
      try { 
        strBuilder0.insert(380, (-2676.273955));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 380
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(102);
      int int0 = strBuilder0.size();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[6];
      charArray0[0] = 'f';
      charArray0[1] = '?';
      charArray0[2] = 'O';
      charArray0[3] = '_';
      charArray0[4] = '!';
      charArray0[5] = '1';
      int int1 = 0;
      strBuilder_StrBuilderWriter0.write(charArray0, 0, 0);
      strBuilder_StrBuilderWriter0.write(0);
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder1 = strBuilder0.replaceAll('k', '+');
      StrBuilder strBuilder2 = strBuilder1.insert(0, 0);
      StrBuilder strBuilder3 = strBuilder1.appendFixedWidthPadLeft((Object) "t3]oe", (-1023), '+');
      Reader reader0 = strBuilder1.asReader();
      // Undeclared exception!
      try { 
        strBuilder3.charAt(102);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 102
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-6));
      StrBuilder strBuilder1 = strBuilder0.append((double) (-6));
      StrBuilder strBuilder2 = strBuilder0.deleteFirst('r');
      // Undeclared exception!
      try { 
        strBuilder2.setCharAt((-6), ' ');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -6
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) strBuilder0, 0, 'W');
      StringBuffer stringBuffer0 = new StringBuffer(0);
      StringBuffer stringBuffer1 = new StringBuffer(stringBuffer0);
      StrBuilder strBuilder2 = strBuilder0.append(stringBuffer1);
      StrBuilder strBuilder3 = strBuilder0.appendNewLine();
      StrBuilder strBuilder4 = strBuilder1.replace(0, 2369, "");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrBuilder strBuilder5 = strBuilder3.replaceAll(strMatcher0, "");
      StrBuilder strBuilder6 = strBuilder3.append((StrBuilder) null);
      // Undeclared exception!
      try { 
        strBuilder3.charAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      int int0 = (-1128);
      StrBuilder strBuilder0 = new StrBuilder((-1128));
      StrBuilder strBuilder1 = strBuilder0.append('N');
      char[] charArray0 = new char[3];
      charArray0[0] = 'N';
      charArray0[1] = 'N';
      charArray0[2] = 'N';
      int int1 = 0;
      int int2 = 34;
      StrBuilder strBuilder2 = strBuilder1.replaceAll('3', 'N');
      // Undeclared exception!
      try { 
        strBuilder1.getChars(2107, (-1128), charArray0, 1);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1128
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      int int0 = (-1158);
      StrBuilder strBuilder0 = new StrBuilder((-1158));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      boolean boolean0 = strBuilder_StrBuilderTokenizer0.hasNext();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setEmptyTokenAsNull(true);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "i&h[");
      // Undeclared exception!
      try { 
        strBuilder1.charAt((-1158));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1158
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("1.3");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark((-2512));
      strBuilder_StrBuilderReader0.reset();
      int int0 = strBuilder_StrBuilderReader0.read();
      // Undeclared exception!
      try { 
        strBuilder0.insert(1785, "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1785
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      StrBuilder strBuilder2 = strBuilder0.replaceAll((StrMatcher) null, "fX");
      boolean boolean0 = strBuilder0.contains((StrMatcher) null);
      StrBuilder strBuilder3 = strBuilder2.append((Object) null);
      Writer writer0 = strBuilder3.asWriter();
      StringBuffer stringBuffer0 = new StringBuffer(0);
      char[] charArray0 = new char[7];
      charArray0[0] = 'V';
      charArray0[1] = 'b';
      charArray0[2] = 'a';
      charArray0[3] = '%';
      charArray0[4] = 'b';
      charArray0[5] = '?';
      charArray0[6] = '6';
      StringBuffer stringBuffer1 = stringBuffer0.append(charArray0);
      StrBuilder strBuilder4 = strBuilder0.append(stringBuffer0);
      String string0 = strBuilder4.midString(0, 0);
      // Undeclared exception!
      try { 
        strBuilder3.getChars(0, 4301, (char[]) null, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 4301
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(962);
      int int0 = (-1644);
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray((-1644), 962);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1644
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      String string0 = "6_X!fGCM6I.i";
      StrBuilder strBuilder0 = new StrBuilder("6_X!fGCM6I.i");
      String string1 = strBuilder0.midString((-1517), (-1517));
      String string2 = "LKk[cd2z._gYp;{";
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      int int0 = 4460;
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("6_X!fGCM6I.i");
      // Undeclared exception!
      try { 
        strBuilder0.replace(strMatcher0, "", 4460, 4460, 5);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(765);
      int int0 = 117;
      char[] charArray0 = new char[7];
      charArray0[0] = 't';
      charArray0[1] = '9';
      charArray0[2] = 'U';
      charArray0[3] = '0';
      charArray0[4] = '>';
      charArray0[5] = 'H';
      charArray0[6] = '3';
      // Undeclared exception!
      try { 
        strBuilder0.insert(1032, charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1032
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(434);
      int int0 = strBuilder0.indexOf((StrMatcher) null, 434);
      // Undeclared exception!
      try { 
        strBuilder0.replace(434, 434, "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = null;
      StrBuilder strBuilder1 = strBuilder0.deleteAll((String) null);
      boolean boolean0 = strBuilder0.contains('Y');
      Writer writer0 = strBuilder0.asWriter();
      int int0 = 730;
      // Undeclared exception!
      try { 
        strBuilder1.toCharArray(730, 730);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      char[] charArray0 = new char[3];
      charArray0[0] = 'v';
      charArray0[1] = 'V';
      Object object0 = new Object();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(object0, (-2913), '1');
      charArray0[2] = '\\';
      int int0 = strMatcher0.isMatch(charArray0, 245, 4, 1864);
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.append('z');
      int int1 = strBuilder2.hashCode();
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(1518);
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      char[] charArray0 = new char[6];
      charArray0[0] = 'i';
      charArray0[1] = '5';
      charArray0[2] = '4';
      charArray0[3] = '~';
      charArray0[4] = ':';
      charArray0[5] = 'F';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      boolean boolean0 = strBuilder0.contains(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[9];
      charArray0[0] = '6';
      charArray0[1] = '!';
      charArray0[2] = 'a';
      charArray0[3] = 'm';
      charArray0[4] = '4';
      charArray0[5] = 'N';
      charArray0[6] = 'H';
      charArray0[7] = 'w';
      charArray0[8] = '.';
      StrBuilder strBuilder1 = strBuilder0.insert(0, charArray0);
      StrBuilder strBuilder2 = strBuilder0.deleteFirst('D');
      boolean boolean0 = strBuilder2.equals(strBuilder0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      int int0 = (-1001);
      StrBuilder strBuilder0 = new StrBuilder((-1001));
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder strBuilder1 = new StrBuilder("AIX");
      int int1 = 2122;
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, 2122, 70);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      int int0 = 1036;
      StrBuilder strBuilder0 = new StrBuilder(1036);
      StrBuilder strBuilder1 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder1.delete(1036, 1036);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      int int0 = 1041;
      StrBuilder strBuilder0 = new StrBuilder(1041);
      StringBuffer stringBuffer0 = new StringBuffer("qjMVzMNs$SK");
      char[] charArray0 = new char[0];
      StringBuffer stringBuffer1 = stringBuffer0.append(charArray0);
      int int1 = 2;
      char[] charArray1 = new char[5];
      charArray1[0] = 'Q';
      charArray1[1] = 'J';
      charArray1[2] = 'l';
      charArray1[3] = 'v';
      charArray1[4] = ';';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(0, 2, charArray1, (-271));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      boolean boolean0 = strBuilder0.contains("java.class.path");
      StrBuilder strBuilder1 = new StrBuilder(4505);
      boolean boolean1 = strBuilder0.equals(strBuilder1);
      int int0 = 868;
      char[] charArray0 = new char[4];
      charArray0[0] = 'l';
      charArray0[1] = 'K';
      charArray0[2] = '_';
      charArray0[3] = 'B';
      strBuilder1.buffer = charArray0;
      // Undeclared exception!
      try { 
        strBuilder1.append(strBuilder0, 1679, 868);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-794));
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder2 = new StrBuilder("Invalid length: ");
      // Undeclared exception!
      try { 
        strBuilder1.append(strBuilder2, 0, (-1797));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-519));
      StrBuilder strBuilder1 = strBuilder0.append((double) (-519));
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft(0, 1093, 'E');
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadRight((-519), 822, '<');
      StrBuilder strBuilder4 = strBuilder3.insert(1093, 'R');
      StrBuilder strBuilder5 = strBuilder4.appendNull();
      StrBuilder strBuilder6 = strBuilder3.append(true);
      StrBuilder strBuilder7 = strBuilder6.insert(1093, "");
      // Undeclared exception!
      try { 
        strBuilder2.substring(1093, 822);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("NfmLU");
      char[] charArray0 = new char[2];
      StrBuilder strBuilder1 = strBuilder0.appendPadding(32, '6');
      StrBuilder strBuilder2 = strBuilder1.setLength(0);
      StrBuilder strBuilder3 = strBuilder2.append((float) 9);
      charArray0[0] = 'p';
      Reader reader0 = strBuilder1.asReader();
      charArray0[1] = '';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(0, 9, charArray0, 9);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 9
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      int int0 = 32;
      StrBuilder strBuilder1 = strBuilder0.replace(strMatcher0, (String) null, 0, 32, 0);
      // Undeclared exception!
      try { 
        strBuilder1.append(strBuilder0, (-1015), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Zx;Z0*9OL");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) "Zx;Z0*9OL", 1937, 'C');
      StrBuilder strBuilder2 = strBuilder1.append(true);
      int int0 = 0;
      // Undeclared exception!
      try { 
        strBuilder1.replace(1937, 0, "PfCJP<X~J");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      boolean boolean0 = strBuilder0.isEmpty();
      strBuilder0.size = (-3207);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
      // Undeclared exception!
      try { 
        strBuilder1.appendFixedWidthPadRight((Object) strBuilder_StrBuilderWriter0, 48, '@');
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(108);
      boolean boolean0 = strBuilder0.contains('/');
      int int0 = strBuilder0.lastIndexOf(';');
      StrBuilder strBuilder1 = strBuilder0.append(false);
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("C$Gy,4suRK");
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft(0, 34, '&');
      StrBuilder strBuilder3 = strBuilder0.replace(strMatcher0, ":aGa_w=vO<q", 0, 108, 581);
      StrBuilder strBuilder4 = strBuilder3.append(1392.5F);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1320));
      StrBuilder strBuilder1 = strBuilder0.append(993.7F);
      int int0 = strBuilder0.size();
      StrBuilder strBuilder2 = strBuilder0.append(1.0F);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("java.awt.graphicsenv");
      int int1 = strBuilder2.indexOf(strMatcher0, 0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      int int0 = 97;
      StrBuilder strBuilder0 = new StrBuilder(97);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoredMatcher(strMatcher0);
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("mV,sPXr`T$AX|");
      boolean boolean0 = strBuilder_StrBuilderTokenizer0.hasNext();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "mV,sPXr`T$AX|");
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 0, 1147);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-3617));
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("a");
      StrBuilder strBuilder2 = strBuilder1.deleteFirst('^');
      String string0 = strBuilder0.rightString(2);
      String string1 = strBuilder0.rightString(0);
      int int0 = strBuilder0.indexOf('^');
      StrBuilder strBuilder3 = strBuilder2.deleteFirst('Z');
      char[] charArray0 = new char[3];
      charArray0[0] = '(';
      charArray0[1] = 'Z';
      charArray0[2] = 'Z';
      // Undeclared exception!
      try { 
        strBuilder2.insert((-64), charArray0, 0, (-64));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -64
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1390);
      int int0 = strBuilder0.lastIndexOf("user.language", 1390);
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("eP[`eS");
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder2 = strBuilder0.append(stringBuffer0, 0, 0);
      StrBuilder strBuilder3 = strBuilder0.appendPadding((-730), '1');
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      StrBuilder strBuilder4 = strBuilder2.deleteAll(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-805), (char[]) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -805
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder("TNw");
      StrBuilder strBuilder2 = strBuilder1.deleteAll("");
      StrBuilder strBuilder3 = strBuilder2.insert(0, 0.0F);
      StrBuilder strBuilder4 = strBuilder1.deleteAll('b');
      StrBuilder strBuilder5 = strBuilder0.insert(0, (Object) strBuilder1);
      boolean boolean0 = strBuilder0.startsWith("TNw");
      StrBuilder strBuilder6 = strBuilder1.setNullText("TNw");
      char[] charArray0 = new char[9];
      charArray0[0] = '5';
      charArray0[1] = 'b';
      charArray0[2] = 'b';
      charArray0[3] = 'b';
      charArray0[4] = 'b';
      charArray0[5] = 'b';
      charArray0[6] = 'b';
      charArray0[7] = 'b';
      charArray0[8] = 'b';
      StrBuilder strBuilder7 = strBuilder2.insert(0, charArray0);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.insert(0, (double) 0);
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.deleteAll('P');
      StrBuilder strBuilder3 = strBuilder2.insert(0, 'P');
      StrBuilder strBuilder4 = strBuilder0.replaceAll((StrMatcher) null, "");
      int int1 = strBuilder4.indexOf(strMatcher0);
      char[] charArray0 = new char[2];
      charArray0[0] = 'P';
      charArray0[1] = 'P';
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1), charArray0, 0, (-768));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 534;
      StrBuilder strBuilder1 = strBuilder0.append(534);
      // Undeclared exception!
      try { 
        strBuilder1.append("ytr`K3]g|O{EY&q]~+", 534, (-1177));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("tQd T9\"&EU*w");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.deleteAll('!');
      StrBuilder strBuilder3 = strBuilder2.deleteFirst(strMatcher0);
      StrBuilder strBuilder4 = strBuilder1.append("");
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('f', 'D');
      int int0 = 1958;
      String string0 = strBuilder1.rightString(1958);
      int int1 = strBuilder0.capacity();
      int int2 = strBuilder0.indexOf("");
      StrBuilder strBuilder2 = strBuilder1.append((long) (-1));
      // Undeclared exception!
      try { 
        strBuilder0.insert(32, (Object) "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      int int0 = 947;
      StrBuilder strBuilder0 = new StrBuilder(947);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(947);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read((char[]) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-47));
      StrBuilder strBuilder1 = strBuilder0.deleteFirst((String) null);
      StrBuilder strBuilder2 = strBuilder0.replaceAll('4', 'A');
      boolean boolean0 = strBuilder0.contains('D');
      int int0 = strBuilder1.lastIndexOf('D');
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceAll('a', 'S');
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) null;
      objectArray0[1] = (Object) null;
      objectArray0[2] = (Object) null;
      objectArray0[3] = (Object) null;
      objectArray0[4] = (Object) null;
      objectArray0[5] = (Object) null;
      objectArray0[6] = (Object) null;
      objectArray0[7] = (Object) null;
      objectArray0[8] = (Object) strBuilder0;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, (String) null);
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher((String) null);
      char[] charArray0 = new char[0];
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight((Object) null, (-1107), '#');
      StrMatcher strMatcher3 = StrMatcher.charSetMatcher("org.apache.commons.lang.text.StrMatcher$CharSetMatcher");
      int int0 = strBuilder0.indexOf(strMatcher0, (-1746));
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder strBuilder3 = strBuilder2.replaceFirst("org.apache.commons.lang.text.StrMatcher$CharSetMatcher", "org.apache.commons.lang.text.StrMatcher$CharSetMatcher");
      StrBuilder strBuilder4 = strBuilder0.append(0);
      StrBuilder strBuilder5 = strBuilder3.appendFixedWidthPadRight((-1746), 0, '%');
      // Undeclared exception!
      try { 
        strBuilder3.setLength((-1746));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1746
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("%Gl");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(0, 0, '9');
      StrBuilder strBuilder2 = strBuilder1.append((long) 0);
      StrBuilder strBuilder3 = strBuilder0.append((double) 0);
      StrMatcher strMatcher0 = StrMatcher.stringMatcher((String) null);
      int int0 = strBuilder0.indexOf(strMatcher0);
      boolean boolean0 = strBuilder0.contains('n');
      StrBuilder strBuilder4 = strBuilder2.insert(0, 'n');
      StrBuilder strBuilder5 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder5.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((char[]) null);
      StrBuilder strBuilder6 = strBuilder3.appendFixedWidthPadLeft(0, 0, 'c');
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = strBuilder0.indexOf("ah7|ZjaV", 0);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      String string0 = "d{~}xaRr@{'2tgo/";
      StrBuilder strBuilder0 = new StrBuilder("d{~}xaRr@{'2tgo/");
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrBuilder strBuilder2 = strBuilder0.append(203.52F);
      StrBuilder strBuilder3 = strBuilder2.append(true);
      int int0 = 0;
      StrBuilder strBuilder4 = strBuilder2.insert(0, 203.52F);
      int int1 = 2599;
      StrBuilder strBuilder5 = strBuilder0.append((-1666));
      // Undeclared exception!
      try { 
        strBuilder0.insert(2599, 0L);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2599
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      int int0 = 0;
      char char0 = 'Q';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(object0, 0, 'Q');
      StrBuilder strBuilder2 = strBuilder1.setLength(0);
      char char1 = 'Y';
      StrBuilder strBuilder3 = strBuilder2.deleteAll('Y');
      StrBuilder strBuilder4 = strBuilder0.trim();
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex(254);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 254
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      char char0 = 'i';
      StrBuilder strBuilder2 = strBuilder0.insert(0, 'i');
      StrBuilder strBuilder3 = strBuilder0.append((-1347L));
      String string0 = strBuilder3.leftString(0);
      StrBuilder strBuilder4 = strBuilder3.append(0);
      int int0 = strBuilder0.indexOf((StrMatcher) strMatcher_NoMatcher0, 0);
      StrBuilder strBuilder5 = strBuilder0.clear();
      StrTokenizer strTokenizer0 = strBuilder1.asTokenizer();
      StringBuffer stringBuffer0 = strBuilder1.toStringBuffer();
      int int1 = strBuilder1.size();
      StrBuilder strBuilder6 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder6.new StrBuilderTokenizer();
      StrBuilder strBuilder7 = strBuilder6.delete(0, 102);
      StrTokenizer strTokenizer1 = StrTokenizer.getTSVInstance("7tUO-O0");
      String string1 = strBuilder_StrBuilderTokenizer0.getContent();
      int int2 = strBuilder1.indexOf((StrMatcher) strMatcher_NoMatcher0);
      boolean boolean0 = strBuilder1.endsWith("");
      int int3 = strBuilder1.indexOf((StrMatcher) strMatcher_NoMatcher0);
      StrBuilder strBuilder8 = strBuilder3.appendNull();
      // Undeclared exception!
      try { 
        strBuilder5.substring(4249, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "hx-NU5";
      boolean boolean0 = strBuilder0.endsWith("hx-NU5");
      int int0 = 1435;
      // Undeclared exception!
      try { 
        strBuilder0.insert(1435, '+');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1435
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1);
      StrBuilder strBuilder1 = strBuilder0.append(156.38966F);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder");
      StrBuilder strBuilder1 = strBuilder0.append(0L);
      boolean boolean0 = strBuilder0.startsWith("s`fFt");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[5];
      charArray0[0] = 'L';
      charArray0[1] = 'E';
      charArray0[2] = '?';
      charArray0[3] = 'p';
      charArray0[4] = 'd';
      strBuilder_StrBuilderWriter0.write(charArray0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(32);
      boolean boolean0 = strBuilder0.startsWith((String) null);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-202));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[4];
      charArray0[0] = 'F';
      charArray0[1] = 'G';
      charArray0[2] = 'u';
      StrBuilder strBuilder1 = strBuilder0.append('u');
      charArray0[3] = 'A';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, (-202), (-202));
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      Writer writer0 = strBuilder0.asWriter();
      strBuilder_StrBuilderWriter0.write(charArray0);
      strBuilder_StrBuilderWriter0.write(charArray0);
      strBuilder_StrBuilderWriter0.close();
      StrBuilder strBuilder2 = strBuilder0.insert(1, (double) 1);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.toString();
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder2 = strBuilder1.appendNull();
      boolean boolean0 = strBuilder0.contains("");
      int int0 = (-1438);
      char char0 = 'U';
      // Undeclared exception!
      try { 
        strBuilder2.insert((-1438), 'U');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1438
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-4865));
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("TLjvWH4e(|Qo");
      StrBuilder strBuilder1 = strBuilder0.deleteAll("");
      StrBuilder strBuilder2 = strBuilder1.append((-120.75031));
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      int int0 = strBuilder0.indexOf((StrMatcher) strMatcher_NoMatcher0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip((-4016L));
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      String string0 = ">g<\"h*b~$;q[";
      String string1 = strBuilder0.leftString((-1702));
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(">g<\"h*b~$;q[", (-2441), (-2441));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1025);
      StrBuilder strBuilder1 = strBuilder0.trim();
      String string0 = strBuilder0.leftString(1025);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[2];
      charArray0[0] = 'S';
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder0.append((Object) strBuilder1);
      StrBuilder strBuilder3 = strBuilder2.trim();
      charArray0[1] = 'q';
      StrBuilder strBuilder4 = strBuilder0.append(charArray0, 0, 0);
      StrBuilder strBuilder5 = strBuilder4.deleteFirst(".dOqI<H?tP");
      StrBuilder strBuilder6 = strBuilder1.deleteAll('h');
      boolean boolean0 = strBuilder4.endsWith("");
      StrBuilder strBuilder7 = strBuilder1.minimizeCapacity();
      StrBuilder strBuilder8 = strBuilder3.append(charArray0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder3.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(".dOqI<H?tP", 0, 0);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendPadding((-1644), '(');
      StrBuilder strBuilder2 = strBuilder1.replaceFirst("T)kqTQF", "");
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) strBuilder1;
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) strBuilder0;
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators(objectArray0, "");
      StrBuilder strBuilder4 = strBuilder0.delete(0, 0);
      StrBuilder strBuilder5 = strBuilder4.appendFixedWidthPadRight((Object) null, 0, '(');
      StrBuilder strBuilder6 = strBuilder5.insert(0, (float) 0);
      StrBuilder strBuilder7 = strBuilder6.append("&CqEfI");
      int int0 = strBuilder4.lastIndexOf("eX6W;%3}E!U3}");
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(0);
      StrBuilder strBuilder2 = strBuilder1.replaceAll("vIq99fjhB-}|jz", "vIq99fjhB-}|jz");
      char[] charArray0 = new char[9];
      charArray0[0] = '@';
      charArray0[1] = '[';
      charArray0[2] = '4';
      charArray0[3] = '[';
      charArray0[4] = 'B';
      charArray0[5] = '6';
      charArray0[6] = '~';
      charArray0[7] = ':';
      charArray0[8] = '|';
      StrBuilder strBuilder3 = strBuilder2.insert(0, charArray0);
      String string0 = strBuilder0.substring(0);
      Writer writer0 = strBuilder0.asWriter();
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1145);
      char[] charArray0 = new char[2];
      charArray0[0] = 'i';
      charArray0[1] = '(';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      String string0 = strBuilder0.midString((-929), 0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(726);
      char[] charArray0 = new char[3];
      charArray0[0] = 't';
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) strBuilder0;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      objectArray0[1] = object0;
      Object object1 = strBuilder_StrBuilderTokenizer0.clone();
      objectArray0[2] = object1;
      objectArray0[3] = (Object) 't';
      objectArray0[4] = (Object) 't';
      objectArray0[5] = (Object) 't';
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "=5m,z!1!");
      charArray0[1] = 'S';
      charArray0[2] = '\'';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 726, 726);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 726
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1790);
      // Undeclared exception!
      try { 
        strBuilder0.insert(1577, (float) 1790);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1577
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("<&m.&O,16cz!BD");
      Writer writer0 = strBuilder0.asWriter();
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(114, '8');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 114
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.indexOf("", (-2661));
      char[] charArray0 = new char[9];
      charArray0[0] = 'F';
      charArray0[1] = 'e';
      charArray0[2] = 'N';
      charArray0[3] = 'q';
      charArray0[4] = 'r';
      charArray0[5] = ':';
      charArray0[6] = '+';
      charArray0[7] = 'v';
      charArray0[8] = 'p';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      int int1 = strBuilder0.indexOf((StrMatcher) strMatcher_CharSetMatcher0);
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.append(true);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((String) null, 2386, 5);
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("XUF}34QFTn+UaFZ}");
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) "XUF}34QFTn+UaFZ}";
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.next();
      objectArray0[1] = (Object) "XUF}34QFTn+UaFZ}";
      Object object1 = new Object();
      objectArray0[2] = object1;
      objectArray0[3] = (Object) "XUF}34QFTn+UaFZ}";
      objectArray0[4] = (Object) "XUF}34QFTn+UaFZ}";
      objectArray0[5] = (Object) "XUF}34QFTn+UaFZ}";
      objectArray0[6] = (Object) "XUF}34QFTn+UaFZ}";
      objectArray0[7] = (Object) "XUF}34QFTn+UaFZ}";
      objectArray0[8] = (Object) "XUF}34QFTn+UaFZ}";
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators(objectArray0, "XUF}34QFTn+UaFZ}");
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[3];
      charArray0[0] = 'n';
      charArray0[1] = 'x';
      charArray0[2] = '{';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(9);
      StrBuilder strBuilder1 = strBuilder0.append((char[]) null, (-638), (-3267));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("v-~Ab:T&ufDxjqdDjQ", 9, 0);
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.setNullText("");
      char char0 = '9';
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight((Object) "", 0, '9');
      char[] charArray0 = new char[4];
      charArray0[0] = '9';
      charArray0[1] = 'B';
      charArray0[2] = '9';
      charArray0[3] = '9';
      strBuilder2.getChars(0, 0, charArray0, 0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.next();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((-1380));
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1380), "bq11\"Ww\"Z;u");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1380
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("QH{v[|Ba-u!wf;?$");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) "QH{v[|Ba-u!wf;?$", (-2659), 's');
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, (-2659), (-221));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(3533, '1');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3533
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceAll(">2Z;fLxX)B%TMq", ">2Z;fLxX)B%TMq");
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('E');
      // Undeclared exception!
      try { 
        strBuilder0.substring((-645));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -645
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(5);
      StringBuffer stringBuffer0 = new StringBuffer("");
      StringBuffer stringBuffer1 = new StringBuffer(stringBuffer0);
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("");
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("VR)a}B}F-F-sqPqXy?0");
      int int0 = strBuilder0.indexOf(strMatcher0);
      stringBuffer0.ensureCapacity(5);
      stringBuffer1.setLength(5);
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer1);
      StrBuilder strBuilder2 = strBuilder1.deleteFirst('F');
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Dr'Qa@>-ux");
      char char0 = '-';
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('-');
      StrBuilder strBuilder1 = strBuilder0.deleteAll((StrMatcher) strMatcher_CharMatcher0);
      StrBuilder strBuilder2 = new StrBuilder("MY>}PW_9W\" 6");
      StrBuilder strBuilder3 = strBuilder1.appendFixedWidthPadRight((Object) strBuilder2, 5, '-');
      String string0 = strBuilder1.substring(0);
      int int0 = strBuilder0.lastIndexOf((String) null, 0);
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrBuilder strBuilder4 = strBuilder0.deleteAll((StrMatcher) strMatcher_NoMatcher0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder4.new StrBuilderWriter();
      StrBuilder strBuilder5 = strBuilder0.append(602L);
      int int1 = strBuilder4.lastIndexOf((StrMatcher) strMatcher_NoMatcher0);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("Dr'Qa@>-ux", (-1), 1);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrBuilder strBuilder2 = strBuilder0.insert(0, 'i');
      StrBuilder strBuilder3 = strBuilder2.trim();
      StrBuilder strBuilder4 = strBuilder0.append((-1347L));
      String string0 = strBuilder4.leftString(0);
      StrBuilder strBuilder5 = strBuilder4.append(0);
      int int0 = strBuilder0.indexOf((StrMatcher) strMatcher_NoMatcher0, 0);
      int int1 = strBuilder0.indexOf((StrMatcher) strMatcher_NoMatcher0, (-3564));
      StrTokenizer strTokenizer0 = strBuilder1.asTokenizer();
      StringBuffer stringBuffer0 = strBuilder1.toStringBuffer();
      int int2 = strBuilder1.size();
      StrBuilder strBuilder6 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder6.new StrBuilderTokenizer();
      StrBuilder strBuilder7 = strBuilder6.delete(0, 102);
      StrTokenizer strTokenizer1 = StrTokenizer.getTSVInstance("7tUO-O0");
      String string1 = strBuilder_StrBuilderTokenizer0.getContent();
      int int3 = strBuilder1.indexOf((StrMatcher) strMatcher_NoMatcher0);
      boolean boolean0 = strBuilder1.endsWith("");
      StrBuilder strBuilder8 = strBuilder4.appendNull();
      // Undeclared exception!
      try { 
        strBuilder5.substring(4249, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher(';');
      StrBuilder strBuilder2 = strBuilder1.deleteFirst((StrMatcher) strMatcher_CharMatcher0);
      String string0 = strBuilder0.leftString(0);
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("org.apache.commons.lang.text.StrBuilder");
      StrBuilder strBuilder3 = strBuilder0.replaceFirst((StrMatcher) strMatcher_StringMatcher0, "");
      String string1 = strBuilder0.toString();
      StrBuilder strBuilder4 = strBuilder0.insert(0, false);
      StrBuilder strBuilder5 = strBuilder3.append("WOF", 0, 0);
      char[] charArray0 = new char[8];
      charArray0[0] = ';';
      charArray0[1] = ';';
      charArray0[2] = 'e';
      charArray0[3] = ';';
      charArray0[4] = ';';
      charArray0[5] = ';';
      charArray0[6] = ';';
      charArray0[7] = ';';
      StrBuilder strBuilder6 = strBuilder5.append(charArray0, 0, 0);
      int int0 = 112;
      // Undeclared exception!
      try { 
        strBuilder0.insert(112, false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 112
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(32);
      StringBuffer stringBuffer0 = new StringBuffer(16);
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, (-966), 2);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      String string0 = "Xwf(z[=$zfLQw/pq#<";
      StrBuilder strBuilder0 = new StrBuilder("Xwf(z[=$zfLQw/pq#<");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("Xwf(z[=$zfLQw/pq#<");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      char[] charArray0 = new char[0];
      StrBuilder strBuilder2 = strBuilder1.setNullText("Xwf(z[=$zfLQw/pq#<");
      int int0 = 2;
      float float0 = 323.7F;
      // Undeclared exception!
      try { 
        strBuilder2.insert(2, 323.7F);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-1685);
      StrBuilder strBuilder1 = new StrBuilder((-1685));
      int int1 = 0;
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      // Undeclared exception!
      try { 
        strBuilder0.replace(strMatcher0, "", 14, 397, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      char[] charArray0 = new char[1];
      charArray0[0] = 'n';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      int int0 = strBuilder1.lastIndexOf(strMatcher0, 467);
      String string0 = strBuilder0.midString(0, 467);
      StrBuilder strBuilder2 = strBuilder1.appendNull();
      StrBuilder strBuilder3 = strBuilder0.ensureCapacity(467);
      StrBuilder strBuilder4 = strBuilder0.append((double) 467);
      // Undeclared exception!
      try { 
        strBuilder3.replace(102, 467, "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("CIUg@s_8<");
      StrBuilder strBuilder1 = strBuilder0.insert(0, (-2711));
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Collection) linkedList0, "oKA");
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(404, 0, '`');
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("");
      StrBuilder strBuilder2 = strBuilder0.replaceAll((StrMatcher) strMatcher_StringMatcher0, "");
      StrBuilder strBuilder3 = strBuilder0.append(true);
      StrBuilder strBuilder4 = strBuilder0.reverse();
      StrBuilder strBuilder5 = strBuilder4.insert(0, '`');
      StrBuilder strBuilder6 = strBuilder3.appendNull();
      Writer writer0 = strBuilder3.asWriter();
      StrBuilder strBuilder7 = strBuilder6.minimizeCapacity();
      StrBuilder strBuilder8 = strBuilder6.replaceAll((StrMatcher) strMatcher_StringMatcher0, (String) null);
      StrBuilder strBuilder9 = strBuilder8.ensureCapacity(404);
      strBuilder7.size = 0;
      StrBuilder strBuilder10 = strBuilder7.setLength(404);
      StrBuilder strBuilder11 = strBuilder6.trim();
      StrBuilder strBuilder12 = strBuilder10.insert(0, 0.0);
      char[] charArray0 = new char[6];
      charArray0[0] = '`';
      charArray0[1] = 'A';
      charArray0[2] = '`';
      charArray0[3] = '`';
      charArray0[4] = '`';
      charArray0[5] = '`';
      char[] charArray1 = strBuilder1.getChars(charArray0);
      StrBuilder strBuilder13 = strBuilder11.trim();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder10.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
      StrBuilder strBuilder14 = strBuilder9.reverse();
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(1);
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(1);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      int int0 = 3061;
      StrBuilder strBuilder0 = new StrBuilder(3061);
      int int1 = 0;
      StrBuilder strBuilder1 = strBuilder0.setLength(0);
      StrBuilder strBuilder2 = strBuilder0.append((long) 3061);
      StrBuilder strBuilder3 = strBuilder0.replaceAll('@', '@');
      StrBuilder strBuilder4 = strBuilder3.replaceFirst("F>Mr,I{Cd3]w p", "F>Mr,I{Cd3]w p");
      StrBuilder strBuilder5 = strBuilder0.append(true);
      int int2 = 2;
      int int3 = (-1481);
      char[] charArray0 = null;
      // Undeclared exception!
      try { 
        strBuilder2.getChars(2, (-1481), (char[]) null, 2);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1481
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(5306);
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrMatcher strMatcher0 = StrMatcher.charMatcher('J');
      StrBuilder strBuilder2 = strBuilder1.deleteAll(strMatcher0);
      StrBuilder strBuilder3 = strBuilder2.setLength(1641);
      boolean boolean0 = strBuilder0.endsWith("X`2?");
      StrBuilder strBuilder4 = strBuilder0.clear();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      StrBuilder strBuilder5 = strBuilder0.insert(0, 3259L);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("X`2?", 5306, 5306);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }
}
