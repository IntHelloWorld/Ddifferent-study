/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 29 07:10:51 GMT 2020
 */

package org.apache.commons.lang.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.Writer;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.NoSuchElementException;
import org.apache.commons.lang.text.StrBuilder;
import org.apache.commons.lang.text.StrMatcher;
import org.apache.commons.lang.text.StrTokenizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StrBuilder_ESTest extends StrBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("end < start");
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.append((char[]) null, 39, 39);
      StrBuilder strBuilder2 = strBuilder0.deleteAll('`');
      String string0 = strBuilder2.midString((-1), 5);
      StrBuilder strBuilder3 = strBuilder2.clear();
      StrBuilder strBuilder4 = strBuilder0.deleteFirst('v');
      StrMatcher strMatcher1 = StrMatcher.splitMatcher();
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher((char[]) null);
      boolean boolean0 = strBuilder1.contains(strMatcher1);
      StrBuilder strBuilder5 = strBuilder1.clear();
      StrBuilder strBuilder6 = strBuilder5.deleteFirst("end < start");
      StrBuilder strBuilder7 = strBuilder4.replaceFirst(strMatcher0, "end < start");
      char[] charArray0 = strBuilder0.toCharArray();
      StrBuilder strBuilder8 = strBuilder7.replaceAll(',', ',');
      StrBuilder strBuilder9 = strBuilder0.append(charArray0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      Object[] objectArray0 = new Object[8];
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[1] = (Object) "";
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      objectArray0[2] = object0;
      objectArray0[3] = (Object) "";
      objectArray0[4] = (Object) "";
      objectArray0[5] = (Object) strBuilder0;
      objectArray0[6] = (Object) strBuilder0;
      objectArray0[7] = (Object) strBuilder0;
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "");
      char char0 = strBuilder1.charAt(0);
      char char1 = strBuilder0.charAt(34);
      StrBuilder strBuilder2 = strBuilder0.insert(34, false);
      int int0 = strBuilder0.indexOf('~', (int) 'c');
      StrBuilder strBuilder3 = strBuilder0.reverse();
      boolean boolean0 = strBuilder3.equals(strBuilder2);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(117, 117, '\'');
      StrBuilder strBuilder2 = strBuilder0.replaceAll((String) null, (String) null);
      char char0 = '7';
      char char1 = 'l';
      // Undeclared exception!
      try { 
        strBuilder2.setCharAt((-597), 'l');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -597
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      boolean boolean0 = strBuilder0.contains("o/M\"xP?3\"v:@[]hD");
      StrBuilder strBuilder2 = strBuilder1.replaceFirst("o/M\"xP?3\"v:@[]hD", "o/M\"xP?3\"v:@[]hD");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("user.home", 0, 0);
      strBuilder_StrBuilderWriter0.write(13);
      StrBuilder strBuilder3 = strBuilder0.deleteFirst("}/E");
      StrBuilder strBuilder4 = strBuilder1.insert(0, 34);
      StrBuilder strBuilder5 = strBuilder3.appendFixedWidthPadRight(26, 26, '\u008D');
      int int1 = 19;
      // Undeclared exception!
      try { 
        strBuilder0.replace(19, 0, "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      StrBuilder strBuilder1 = strBuilder0.append(0.0);
      char[] charArray0 = new char[5];
      charArray0[0] = 'p';
      charArray0[1] = '&';
      charArray0[2] = ' ';
      charArray0[3] = 'l';
      charArray0[4] = 't';
      strBuilder1.buffer = charArray0;
      // Undeclared exception!
      try { 
        strBuilder0.append(0.0F);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(9);
      StrBuilder strBuilder2 = strBuilder0.trim();
      StrBuilder strBuilder3 = strBuilder0.append(0.0);
      StrBuilder strBuilder4 = strBuilder0.append("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      StrBuilder strBuilder5 = strBuilder0.appendNewLine();
      boolean boolean0 = strBuilder2.startsWith("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      StrBuilder strBuilder6 = strBuilder5.replaceAll('D', 'f');
      boolean boolean1 = strBuilder4.contains("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("2");
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) "2";
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      objectArray0[2] = object0;
      objectArray0[3] = (Object) "2";
      objectArray0[4] = (Object) "2";
      objectArray0[5] = (Object) strBuilder0;
      objectArray0[6] = (Object) strBuilder0;
      objectArray0[7] = (Object) strBuilder0;
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "2");
      char char0 = strBuilder1.charAt(0);
      char char1 = strBuilder0.charAt(34);
      StrBuilder strBuilder2 = strBuilder0.insert(34, false);
      int int0 = StrBuilder.CAPACITY;
      StrBuilder strBuilder3 = strBuilder0.reverse();
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrMatcher$CharSetMatcher");
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("/*yTu*gW(x");
      int int0 = strBuilder0.indexOf((StrMatcher) strMatcher_StringMatcher0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int1 = strBuilder_StrBuilderReader0.read();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      StrBuilder strBuilder1 = strBuilder0.replaceAll((StrMatcher) strMatcher_StringMatcher0, "");
      StrBuilder strBuilder2 = strBuilder1.deleteFirst(',');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[8];
      charArray0[0] = 'E';
      charArray0[1] = '~';
      charArray0[2] = 'h';
      charArray0[3] = 'a';
      charArray0[4] = 'n';
      charArray0[5] = '#';
      charArray0[6] = '#';
      charArray0[7] = 'v';
      StrBuilder strBuilder3 = strBuilder2.appendNewLine();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 111, 111);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 111
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-859));
      StrBuilder strBuilder1 = strBuilder0.append(3503);
      StrBuilder strBuilder2 = strBuilder0.setNewLineText("!vs\"seG-?");
      String string0 = strBuilder0.rightString((-832));
      StrBuilder strBuilder3 = strBuilder2.setLength(1036);
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadLeft((Object) "java.awt.graphicsenv", 16, '&');
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder2, 171, (-1960));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      char[] charArray0 = new char[0];
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      boolean boolean0 = strBuilder0.contains((String) null);
      StrBuilder strBuilder1 = strBuilder0.append((StrBuilder) null);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      String string0 = "St46}Ob8T`hSG";
      StrBuilder strBuilder0 = new StrBuilder("St46}Ob8T`hSG");
      int int0 = strBuilder0.lastIndexOf("St46}Ob8T`hSG");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) "St46}Ob8T`hSG", 0, 'E');
      // Undeclared exception!
      try { 
        strBuilder1.insert(2012, "St46}Ob8T`hSG");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2012
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = strBuilder0.rightString(0);
      StrBuilder strBuilder1 = strBuilder0.deleteAll("");
      strBuilder0.validateIndex(0);
      char char0 = '!';
      char[] charArray0 = new char[6];
      charArray0[0] = '!';
      charArray0[1] = '!';
      charArray0[2] = '!';
      charArray0[3] = '!';
      charArray0[4] = '!';
      charArray0[5] = '!';
      // Undeclared exception!
      try { 
        strBuilder1.insert(0, charArray0, 2004, 2004);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: 2004
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-859));
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("!vs\"seG-?");
      String string0 = strBuilder0.rightString((-832));
      StrBuilder strBuilder2 = strBuilder1.setLength(1036);
      Writer writer0 = strBuilder0.asWriter();
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) strBuilder1;
      objectArray0[1] = (Object) "!vs\"seG-?";
      objectArray0[2] = (Object) strBuilder2;
      objectArray0[3] = (Object) "";
      objectArray0[4] = (Object) "";
      objectArray0[5] = (Object) "";
      objectArray0[6] = (Object) strBuilder0;
      Object object0 = new Object();
      objectArray0[7] = object0;
      StrBuilder strBuilder3 = strBuilder0.appendWithSeparators(objectArray0, "Invalid startIndex: ");
      int int0 = strBuilder3.indexOf("");
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("s?11S?");
      StrBuilder strBuilder1 = new StrBuilder();
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) "s?11S?";
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      objectArray0[1] = object0;
      objectArray0[2] = (Object) "s?11S?";
      Object object1 = strBuilder_StrBuilderTokenizer0.clone();
      objectArray0[3] = object1;
      objectArray0[4] = (Object) strBuilder0;
      objectArray0[5] = (Object) "s?11S?";
      objectArray0[6] = (Object) "s?11S?";
      objectArray0[7] = (Object) "s?11S?";
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators(objectArray0, "s?11S?");
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.clear();
      char[] charArray0 = new char[2];
      charArray0[0] = 'k';
      charArray0[1] = 'M';
      strBuilder0.buffer = charArray0;
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      int int0 = strBuilder1.lastIndexOf(strMatcher0, 2243);
      char[] charArray1 = new char[3];
      StrBuilder strBuilder2 = strBuilder0.insert(0, charArray1);
      charArray1[0] = '/';
      charArray1[1] = ';';
      charArray1[2] = '2';
      char[] charArray2 = strBuilder0.getChars(charArray1);
      StrBuilder strBuilder3 = strBuilder0.append(1.0F);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.insert(0, '#');
      StrBuilder strBuilder2 = strBuilder1.clear();
      StrBuilder strBuilder3 = strBuilder0.clear();
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrBuilder strBuilder4 = strBuilder3.replace(strMatcher0, "'vz}+b+sRo6", 0, 0, 2355);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      String string0 = "startIndex must be valid";
      StrBuilder strBuilder0 = new StrBuilder("startIndex must be valid");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) "startIndex must be valid", 2384, 'Z');
      int int0 = 1731;
      StrBuilder strBuilder2 = strBuilder0.delete(1731, 1731);
      char[] charArray0 = new char[0];
      StringBuffer stringBuffer0 = new StringBuffer(1731);
      // Undeclared exception!
      try { 
        stringBuffer0.insert(1731, (Object) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1731
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      boolean boolean0 = strBuilder0.contains("o/M\"xP?3\"v:@[]hD");
      StrBuilder strBuilder2 = strBuilder0.replaceFirst((String) null, "o/M\"xP?3\"v:@[]hD");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("user.home", 0, 0);
      strBuilder_StrBuilderWriter0.write(1278);
      StrBuilder strBuilder3 = strBuilder0.deleteFirst("}/E");
      StrBuilder strBuilder4 = strBuilder1.insert(0, 34);
      StrBuilder strBuilder5 = strBuilder3.appendFixedWidthPadRight(0, 0, '\u0084');
      int int1 = 1;
      // Undeclared exception!
      try { 
        strBuilder0.replace(1, 0, "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = new StrBuilder(650);
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder1;
      objectArray0[2] = (Object) "";
      objectArray0[3] = (Object) strBuilder1;
      objectArray0[4] = (Object) strBuilder0;
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators(objectArray0, "");
      boolean boolean0 = strBuilder0.equals(strBuilder1);
      boolean boolean1 = strBuilder0.contains("Invalid startIndex: ");
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      char[] charArray0 = new char[1];
      charArray0[0] = '|';
      StrBuilder strBuilder1 = strBuilder0.insert(0, charArray0, 0, 0);
      StrMatcher strMatcher0 = null;
      int int0 = 1113;
      // Undeclared exception!
      try { 
        strBuilder1.insert(1113, (double) 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1113
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-22);
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      char[] charArray0 = new char[2];
      charArray0[0] = 'f';
      char char0 = 'P';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((-22), (-22), '[');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 117, (-22));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.rightString(31);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrBuilder strBuilder2 = strBuilder1.deleteFirst("");
      StrMatcher strMatcher1 = StrMatcher.splitMatcher();
      StrBuilder strBuilder3 = strBuilder0.clear();
      // Undeclared exception!
      try { 
        strBuilder2.equals((StrBuilder) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("user.region");
      int int0 = StrBuilder.CAPACITY;
      StrBuilder strBuilder1 = new StrBuilder();
      boolean boolean0 = strBuilder0.equals(strBuilder1);
      Object[] objectArray0 = new Object[0];
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators(objectArray0, "Invalid offset: ");
      String string0 = strBuilder0.midString(0, 115);
      StrBuilder strBuilder3 = strBuilder1.appendWithSeparators(objectArray0, "user.region");
      StrBuilder strBuilder4 = strBuilder2.append('5');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      StrBuilder strBuilder5 = strBuilder1.appendFixedWidthPadLeft(object0, 2, 'Z');
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("D0~H~'%GKV<1+*})");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      char[] charArray0 = strBuilder0.toCharArray();
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2174);
      int int0 = 44;
      int int1 = (-367);
      String string0 = strBuilder0.midString((-367), 44);
      String string1 = null;
      int int2 = 2188;
      StrBuilder strBuilder1 = new StrBuilder(2188);
      int int3 = 2169;
      StrBuilder strBuilder2 = strBuilder1.append(0.0);
      // Undeclared exception!
      try { 
        strBuilder1.insert(2169, 2175);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2169
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.endsWith("length must be valid");
      int int0 = 9;
      StringBuffer stringBuffer0 = new StringBuffer(9);
      int int1 = 332;
      String string0 = "', is neither of type Map.Entry nor an Array";
      // Undeclared exception!
      try { 
        stringBuffer0.insert(332, "', is neither of type Map.Entry nor an Array");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 332
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[4];
      charArray0[0] = '(';
      charArray0[1] = '`';
      charArray0[2] = '^';
      charArray0[3] = '2';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      char[] charArray1 = new char[0];
      StrBuilder strBuilder1 = strBuilder0.append(charArray1);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.replaceAll('<', 'S');
      boolean boolean0 = true;
      StrBuilder strBuilder2 = strBuilder1.append(true);
      StrBuilder strBuilder3 = strBuilder0.append("l`1,VVX]gZ.ka5@'");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder3.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder4 = strBuilder3.insert(0, "l`1,VVX]gZ.ka5@'");
      StrBuilder strBuilder5 = strBuilder3.append(stringBuffer0);
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      StrBuilder strBuilder6 = strBuilder5.deleteAll(strMatcher0);
      StrBuilder strBuilder7 = strBuilder5.setNewLineText("l`1,VVX]gZ.ka5@'");
      String string0 = strBuilder2.substring(0, 0);
      int int0 = strBuilder2.indexOf("|", 903);
      boolean boolean1 = strBuilder2.startsWith("|");
      int int1 = strBuilder2.lastIndexOf("");
      String string1 = strBuilder6.substring(33);
      boolean boolean2 = strBuilder3.isEmpty();
      boolean boolean3 = strBuilder4.contains('S');
      strBuilder0.validateIndex(0);
      // Undeclared exception!
      try { 
        strBuilder7.setCharAt((-1), 'n');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.charAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrBuilder strBuilder2 = strBuilder1.setNewLineText("");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      StrBuilder strBuilder3 = strBuilder0.appendNewLine();
      StrBuilder strBuilder4 = strBuilder2.appendWithSeparators((Collection) linkedList0, "");
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("");
      char[] charArray0 = new char[9];
      charArray0[0] = 'z';
      charArray0[1] = '5';
      charArray0[2] = '*';
      charArray0[3] = 'H';
      charArray0[4] = 'i';
      charArray0[5] = 'L';
      charArray0[6] = 'Z';
      charArray0[7] = 'o';
      charArray0[8] = 'l';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      boolean boolean0 = strBuilder4.contains((StrMatcher) strMatcher_StringMatcher0);
      StrBuilder strBuilder5 = strBuilder0.ensureCapacity(99);
      StrBuilder strBuilder6 = strBuilder5.replaceAll('B', 'B');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder6.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder strBuilder7 = strBuilder5.reverse();
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1));
      char[] charArray0 = new char[6];
      charArray0[0] = 'Z';
      charArray0[1] = 'W';
      charArray0[2] = 'M';
      charArray0[3] = '(';
      charArray0[4] = '-';
      charArray0[5] = 'e';
      strBuilder0.buffer = charArray0;
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight(0, 824, '<');
      int int0 = strBuilder0.lastIndexOf("Invalid offset: ", 5577);
      StrBuilder strBuilder3 = strBuilder0.appendNewLine();
      StrBuilder strBuilder4 = strBuilder3.clear();
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-557));
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("]b7");
      StrMatcher strMatcher2 = StrMatcher.stringMatcher("length must be valid");
      StrMatcher strMatcher3 = StrMatcher.charMatcher(']');
      char[] charArray0 = new char[6];
      charArray0[0] = ']';
      charArray0[1] = ']';
      charArray0[2] = ']';
      charArray0[3] = ']';
      charArray0[4] = ']';
      charArray0[5] = ']';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StrMatcher strMatcher4 = StrMatcher.stringMatcher("");
      int int0 = strBuilder0.indexOf(strMatcher0, (-1829));
      StrBuilder strBuilder2 = strBuilder0.insert(5, false);
      StrBuilder strBuilder3 = strBuilder2.deleteFirst("wRL^<4");
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 97;
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(97);
      StrBuilder strBuilder2 = strBuilder1.append(false);
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrBuilder strBuilder3 = strBuilder2.replace(strMatcher0, (String) null, 0, 97, 0);
      StrBuilder strBuilder4 = strBuilder1.deleteAll("Windows");
      char[] charArray0 = new char[1];
      charArray0[0] = 'P';
      strBuilder0.buffer = charArray0;
      Reader reader0 = strBuilder0.asReader();
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(97);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 97
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(5);
      int int0 = strBuilder0.lastIndexOf("Invalid offset: ", 5);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      String string0 = "Invalid offset: ";
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      int int0 = (-2093);
      strBuilder0.size = (-2093);
      int int1 = 0;
      char char0 = 'c';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((-2093), 0, 'c');
      int int2 = 291;
      // Undeclared exception!
      try { 
        strBuilder0.rightString(291);
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(116, 116, ';');
      StrBuilder strBuilder2 = strBuilder1.setNewLineText("Ap&&ApMom9m2");
      StrBuilder strBuilder3 = strBuilder2.replaceFirst("Ap&&ApMom9m2", "cniL|WhE89/~>- ");
      StrBuilder strBuilder4 = strBuilder3.insert(116, (long) 116);
      String string0 = null;
      int int0 = strBuilder0.indexOf((String) null, 2846);
      Object[] objectArray0 = new Object[2];
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.previous();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      Object[] objectArray0 = new Object[0];
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      String string0 = "[";
      char char0 = 'X';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) "[", 0, 'X');
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight(0, 0, 'X');
      StrBuilder strBuilder3 = strBuilder1.insert(0, false);
      // Undeclared exception!
      try { 
        strBuilder1.setLength((-1534));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1534
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setNullText("java.endorsed.dirs");
      int int0 = 5;
      StrBuilder strBuilder2 = strBuilder0.append((StrBuilder) null, 5, 5);
      int int1 = (-1);
      StrBuilder strBuilder3 = strBuilder0.setNewLineText("bWrzj;SxbErsVj*+r6r");
      // Undeclared exception!
      try { 
        strBuilder2.setLength((-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("7w+_sNjhnuNW$yHt`");
      char[] charArray0 = new char[9];
      charArray0[0] = 'X';
      charArray0[1] = '?';
      charArray0[2] = '8';
      charArray0[3] = '#';
      charArray0[4] = 'V';
      charArray0[5] = '>';
      charArray0[6] = ' ';
      StrBuilder strBuilder1 = strBuilder0.append(0L);
      charArray0[7] = 'e';
      charArray0[8] = 'T';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(0, 0, charArray0, 1411);
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder("5I+89Gm");
      int int0 = 0;
      char char0 = ':';
      StrBuilder strBuilder2 = strBuilder1.setCharAt(0, ':');
      int int1 = 31;
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, 31, (-1024));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      int int0 = (-598);
      StrBuilder strBuilder0 = new StrBuilder((-598));
      int int1 = strBuilder0.lastIndexOf('f', (-598));
      String string0 = "3*oIXiND-c6P`";
      StrBuilder strBuilder1 = new StrBuilder("3*oIXiND-c6P`");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      StrMatcher strMatcher0 = StrMatcher.charMatcher('f');
      StrBuilder strBuilder2 = strBuilder1.append((char[]) null);
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("3*oIXiND-c6P`");
      int int2 = strBuilder0.lastIndexOf(strMatcher0);
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('f');
      String string1 = "S){0n(+*I_qVI";
      StrMatcher strMatcher2 = StrMatcher.stringMatcher("S){0n(+*I_qVI");
      int int3 = (-816);
      // Undeclared exception!
      try { 
        strBuilder2.insert((-816), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -816
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("@8wE\"K}+{Po");
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('B');
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("@8wE\"K}+{Po");
      int int0 = strBuilder0.indexOf((StrMatcher) strMatcher_CharMatcher0);
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("@8wE\"K}+{Po", "end < start");
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("");
      int int0 = 0;
      String string1 = strBuilder0.midString(0, (-2991));
      StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
      StrBuilder strBuilder3 = strBuilder2.trim();
      StrBuilder strBuilder4 = strBuilder2.append(1126.0F);
      // Undeclared exception!
      try { 
        strBuilder1.substring(115);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("8vGfE");
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst((StrMatcher) strMatcher_StringMatcher0);
      int int0 = (-1023);
      char char0 = '>';
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((-1023), (-1023), '>');
      StrBuilder strBuilder3 = strBuilder1.replaceFirst((StrMatcher) strMatcher_StringMatcher0, "");
      StrBuilder strBuilder4 = strBuilder1.deleteFirst("8vGfE");
      int int1 = 44;
      int int2 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_StringMatcher0, 44);
      StrBuilder strBuilder5 = strBuilder2.append((Object) null);
      char[] charArray0 = new char[5];
      charArray0[0] = '>';
      StrMatcher strMatcher0 = StrMatcher.charMatcher('>');
      charArray0[1] = '>';
      charArray0[2] = '>';
      charArray0[3] = '>';
      charArray0[4] = '>';
      // Undeclared exception!
      try { 
        strBuilder3.getChars((-1023), (-1023), charArray0, (-430));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1023
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(32);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[1];
      char char0 = 'E';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("1.4", 0, 32);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      int int0 = 382;
      StrBuilder strBuilder0 = new StrBuilder(382);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      String string0 = "Index: ";
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) null, "Index: ");
      StrBuilder strBuilder2 = strBuilder1.minimizeCapacity();
      StrBuilder strBuilder3 = strBuilder2.setNewLineText("}iNwP&6~J?H8n(K3Z");
      StrBuilder strBuilder4 = strBuilder2.append("Index: ");
      int int1 = (-1755);
      // Undeclared exception!
      try { 
        strBuilder1.insert(2221, (-1755));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2221
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      int int0 = (-1451);
      StrBuilder strBuilder0 = new StrBuilder((-1451));
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("[+n hz");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      int int1 = strBuilder0.lastIndexOf(strMatcher0);
      StringBuffer stringBuffer0 = strBuilder1.toStringBuffer();
      // Undeclared exception!
      try { 
        strBuilder0.validateRange(0, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(595.0F);
      int int0 = 4;
      StrBuilder strBuilder2 = strBuilder1.deleteCharAt(4);
      String string0 = "";
      int int1 = 0;
      char char0 = 'p';
      char[] charArray0 = new char[5];
      charArray0[0] = 'p';
      charArray0[1] = 'p';
      charArray0[2] = 'p';
      charArray0[3] = 'p';
      charArray0[4] = 'p';
      // Undeclared exception!
      try { 
        strBuilder1.append(charArray0, 4, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      int int0 = strBuilder0.lastIndexOf('S');
      char[] charArray0 = new char[9];
      charArray0[0] = 'S';
      charArray0[1] = 'S';
      charArray0[2] = 'S';
      charArray0[3] = 'S';
      charArray0[4] = 'S';
      charArray0[5] = 'S';
      charArray0[6] = 'S';
      charArray0[7] = 'S';
      charArray0[8] = 'S';
      strBuilder0.buffer = charArray0;
      Reader reader0 = strBuilder0.asReader();
      String string0 = strBuilder0.substring(0);
      Writer writer0 = strBuilder0.asWriter();
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("L#b@hke,");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "L#b@hke,");
      StrMatcher strMatcher1 = StrMatcher.quoteMatcher();
      char[] charArray0 = new char[2];
      charArray0[0] = 'L';
      charArray0[1] = '~';
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder0.lastIndexOf(strMatcher1);
      // Undeclared exception!
      try { 
        strBuilder0.insert(116, 'L');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 116
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = strBuilder0.lastIndexOf("", 0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Reader reader0 = strBuilder0.asReader();
      int int0 = (-2638);
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt((-2638));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2638
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = 75;
      StrBuilder strBuilder1 = strBuilder0.appendPadding(75, ',');
      long long0 = strBuilder_StrBuilderReader0.skip(75);
      int int1 = Integer.MAX_VALUE;
      strBuilder_StrBuilderReader0.mark(Integer.MAX_VALUE);
      int int2 = 108;
      // Undeclared exception!
      try { 
        strBuilder1.toCharArray(108, 1729);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char char0 = '+';
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('+');
      strBuilder0.validateIndex(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('N');
      StrBuilder strBuilder2 = strBuilder1.deleteAll(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder2.setCharAt(0, 'J');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.vm.name");
      StrBuilder strBuilder1 = new StrBuilder("file.encoding");
      StrBuilder strBuilder2 = strBuilder0.append((Object) strBuilder1);
      int int0 = (-1345);
      double double0 = 0.0;
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, (-1345), (-1345));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[6];
      charArray0[0] = 'j';
      charArray0[1] = 'Y';
      charArray0[2] = '';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(116, 116, 'Y');
      int int0 = 2201;
      StrBuilder strBuilder2 = strBuilder0.appendPadding(2201, 'E');
      strBuilder2.buffer = charArray0;
      charArray0[3] = 'Q';
      charArray0[4] = 'w';
      char char0 = '#';
      // Undeclared exception!
      try { 
        strBuilder0.midString(116, 116);
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      char[] charArray0 = new char[5];
      charArray0[0] = 'b';
      charArray0[1] = '2';
      charArray0[2] = '\'';
      charArray0[3] = 'G';
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      charArray0[4] = '9';
      char[] charArray1 = strBuilder0.getChars(charArray0);
      strBuilder0.buffer = charArray0;
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) 'G';
      objectArray0[1] = (Object) '2';
      objectArray0[2] = (Object) null;
      objectArray0[3] = (Object) strBuilder0;
      objectArray0[4] = (Object) '9';
      objectArray0[5] = (Object) 'b';
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "=ff|");
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1685), (-1685));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1685
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(426);
      String string0 = strBuilder0.toString();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      Writer writer0 = strBuilder_StrBuilderWriter0.append('#');
      Writer writer1 = strBuilder_StrBuilderWriter0.append((CharSequence) "");
      strBuilder_StrBuilderWriter0.flush();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(426, 426, '.');
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("");
      StrBuilder strBuilder2 = strBuilder1.replace(strMatcher0, "", 426, 426, 426);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher("");
      strBuilder_StrBuilderReader0.mark(426);
      StrBuilder strBuilder3 = strBuilder2.deleteAll("");
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = strBuilder0.indexOf((StrMatcher) null, 57);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[1];
      charArray0[0] = 'q';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0, 1, 0);
      StrBuilder strBuilder2 = strBuilder0.deleteFirst(']');
      String string0 = "', has a length less than 2";
      // Undeclared exception!
      try { 
        strBuilder1.insert(2, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("L@i7e*Xmgr");
      char[] charArray0 = new char[1];
      charArray0[0] = '~';
      StrBuilder strBuilder1 = strBuilder0.append(true);
      int int0 = 1103;
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 1103, 1103);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 1103
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-628));
      int int0 = strBuilder0.hashCode();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[0];
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance("");
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, (-628), (-3527));
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = '(';
      int int0 = (-2156);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) "java.home", (-2156), 's');
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("");
      int int1 = strBuilder1.indexOf((StrMatcher) strMatcher_StringMatcher0, 1458);
      int int2 = strBuilder0.lastIndexOf('(', (-2156));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[8];
      charArray0[0] = '(';
      charArray0[1] = '(';
      strBuilder0.buffer = charArray0;
      strBuilder_StrBuilderReader0.reset();
      charArray0[2] = '(';
      strBuilder_StrBuilderReader0.reset();
      charArray0[3] = '(';
      charArray0[4] = '(';
      charArray0[5] = '(';
      strBuilder_StrBuilderReader0.mark(1458);
      charArray0[6] = '(';
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt((-1), '_');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("qEYJ]");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("qEYJ]");
      char[] charArray0 = new char[5];
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setQuoteChar('D');
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "qEYJ]");
      charArray0[0] = 'D';
      charArray0[1] = '-';
      charArray0[2] = '}';
      charArray0[3] = 'b';
      charArray0[4] = '{';
      // Undeclared exception!
      try { 
        strBuilder1.append(charArray0, (-292), (-292));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -292
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt((-787), 'D');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -787
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[8];
      charArray0[0] = 'r';
      charArray0[1] = '>';
      charArray0[2] = '0';
      charArray0[3] = '$';
      charArray0[4] = '!';
      charArray0[5] = '#';
      charArray0[6] = '%';
      charArray0[7] = '&';
      strBuilder0.getChars(0, 0, charArray0, 0);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.next();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(1363L);
      // Undeclared exception!
      try { 
        strBuilder0.append("", 97, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.clear();
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      StrBuilder strBuilder1 = strBuilder0.insert(0, '\'');
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = '3';
      StringBuffer stringBuffer0 = new StringBuffer("path.separator");
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0, 0, 0);
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft(0, 0, '3');
      int int0 = (-4512);
      char[] charArray0 = new char[8];
      charArray0[0] = '3';
      charArray0[1] = '3';
      charArray0[2] = 'v';
      charArray0[3] = '3';
      charArray0[4] = '3';
      charArray0[5] = '3';
      charArray0[6] = '3';
      charArray0[7] = '3';
      // Undeclared exception!
      try { 
        strBuilder0.insert((-4512), charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -4512
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = '9';
      StringBuffer stringBuffer0 = new StringBuffer("path.separator");
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0, 0, 0);
      StrBuilder strBuilder2 = new StrBuilder();
      char[] charArray0 = new char[24];
      charArray0[0] = '9';
      charArray0[1] = '9';
      charArray0[2] = 'v';
      charArray0[3] = '9';
      charArray0[4] = '9';
      charArray0[11] = '9';
      charArray0[6] = '9';
      charArray0[7] = '9';
      // Undeclared exception!
      try { 
        strBuilder0.validateRange((-4512), (-4512));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -4512
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.size();
      char[] charArray0 = new char[7];
      charArray0[0] = '7';
      charArray0[1] = '2';
      charArray0[2] = '0';
      charArray0[3] = 'O';
      charArray0[4] = 'B';
      charArray0[5] = '/';
      charArray0[6] = 'M';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0, 0, 4);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[8];
      charArray0[0] = ' ';
      charArray0[1] = 'F';
      charArray0[2] = 'V';
      charArray0[3] = '3';
      charArray0[4] = '2';
      charArray0[5] = 'a';
      charArray0[6] = '1';
      charArray0[7] = 'L';
      // Undeclared exception!
      try { 
        strBuilder0.getChars((-114), (-114), charArray0, (-114));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -114
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      int int0 = 2;
      StrBuilder strBuilder0 = new StrBuilder(2);
      int int1 = 5;
      // Undeclared exception!
      try { 
        strBuilder0.insert(2, (long) 2);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      StrBuilder strBuilder1 = strBuilder0.insert(0, object0);
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      char[] charArray0 = new char[2];
      char char0 = 'f';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.set(strMatcher0);
      } catch(UnsupportedOperationException e) {
         //
         // set() is unsupported
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("1.4");
      int int0 = 169;
      StrBuilder strBuilder2 = strBuilder1.ensureCapacity(169);
      StringBuffer stringBuffer0 = new StringBuffer("'~x@ ");
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators((Collection) null, "java.specification.vendor");
      // Undeclared exception!
      try { 
        strBuilder3.deleteCharAt(169);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 169
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1246);
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      StrMatcher strMatcher1 = StrMatcher.quoteMatcher();
      char[] charArray0 = new char[2];
      charArray0[0] = '_';
      charArray0[1] = '5';
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 0);
      // Undeclared exception!
      try { 
        strMatcher1.isMatch(charArray0, 1246, (-878), (-878));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1246
         //
         verifyException("org.apache.commons.lang.text.StrMatcher$CharSetMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      String string1 = "";
      StrBuilder strBuilder1 = new StrBuilder("");
      int int0 = (-3158);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-3158), (-1.0F));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3158
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "]y<VW4~`");
      StrBuilder strBuilder2 = strBuilder0.append((-1315.61082));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      char[] charArray0 = new char[1];
      charArray0[0] = '-';
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance(charArray0);
      StrTokenizer strTokenizer1 = strBuilder_StrBuilderTokenizer0.setTrimmerMatcher(strMatcher0);
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators((Iterator) strTokenizer1, (String) null);
      StrMatcher strMatcher1 = StrMatcher.trimMatcher();
      boolean boolean0 = strBuilder2.contains(strMatcher1);
      int int0 = 0;
      StrBuilder strBuilder4 = strBuilder0.insert(1, 0);
      int int1 = 116;
      String string0 = "HvRAN~1cr";
      // Undeclared exception!
      try { 
        strBuilder0.insert(116, "HvRAN~1cr");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 116
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2230);
      int int0 = strBuilder0.capacity();
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight((Object) strBuilder1, 0, 'E');
      StrBuilder strBuilder3 = new StrBuilder(2230);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder3.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder strBuilder4 = strBuilder1.appendFixedWidthPadRight(object0, 1904, '%');
      StrBuilder strBuilder5 = strBuilder4.appendWithSeparators((Iterator) strBuilder_StrBuilderTokenizer0, (String) null);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
      char[] charArray0 = new char[4];
      charArray0[0] = 'E';
      charArray0[1] = 'E';
      charArray0[2] = 'E';
      StrBuilder strBuilder6 = strBuilder1.append((-3182.6264231755));
      StrBuilder strBuilder7 = strBuilder6.appendFixedWidthPadLeft(2230, 2230, 'E');
      charArray0[3] = 'E';
      strBuilder_StrBuilderWriter0.write(charArray0);
      int int1 = strBuilder1.indexOf("Invalid length: ");
      StrBuilder strBuilder8 = strBuilder2.appendFixedWidthPadRight(object0, 0, 'X');
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = new StrBuilder("");
      String string0 = strBuilder1.rightString((-1903));
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      // Undeclared exception!
      try { 
        strBuilder0.insert((-3158), (-1.0F));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3158
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      String string0 = null;
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      char[] charArray0 = new char[1];
      char char0 = 'q';
      charArray0[0] = 'q';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.replaceAll((StrMatcher) strMatcher_CharSetMatcher0, (String) null);
      int int0 = 5;
      // Undeclared exception!
      try { 
        strBuilder1.insert(5, (Object) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 5
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(",TY)N9dwl?KFS-");
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrBuilder strBuilder2 = strBuilder1.append('g');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 2076);
      StrBuilder strBuilder3 = new StrBuilder((-1));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder3.new StrBuilderReader();
      char[] charArray0 = new char[3];
      charArray0[0] = 'g';
      charArray0[1] = 'g';
      charArray0[2] = 'g';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, (-637), Integer.MAX_VALUE);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.reverse();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[6];
      charArray0[0] = 'T';
      int int0 = strBuilder1.lastIndexOf("end < start");
      int int1 = strBuilder0.lastIndexOf("8L1Err]])*}>s-");
      charArray0[1] = '(';
      StrBuilder strBuilder2 = new StrBuilder(1817);
      charArray0[2] = '>';
      charArray0[3] = '(';
      charArray0[4] = '%';
      charArray0[5] = '6';
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[7];
      charArray0[0] = '3';
      charArray0[1] = '(';
      charArray0[2] = 'w';
      charArray0[3] = '4';
      charArray0[4] = 'q';
      StrBuilder strBuilder1 = strBuilder0.replaceAll("yJO", "yJO");
      charArray0[5] = ')';
      charArray0[6] = 'L';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 1119, 1119);
      String string0 = strBuilder1.midString(1119, (-169));
      Writer writer0 = strBuilder1.asWriter();
      StrBuilder strBuilder2 = strBuilder0.deleteFirst('d');
      String string1 = strBuilder0.toString();
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      String string0 = "x61z*3#?pxB=DS7E";
      StrBuilder strBuilder0 = new StrBuilder("x61z*3#?pxB=DS7E");
      String string1 = strBuilder0.midString(1, 1);
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrBuilder strBuilder2 = strBuilder1.deleteCharAt(1);
      int int0 = (-2390);
      int int1 = 0;
      StringBuffer stringBuffer0 = new StringBuffer(0);
      int int2 = 179;
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 0, 179);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendPadding((-567), 'N');
      StringBuffer stringBuffer0 = new StringBuffer("dAmnW%84?T[SN");
      int int0 = 2;
      // Undeclared exception!
      try { 
        strBuilder1.append(stringBuffer0, (-567), 2);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      int int0 = (-127);
      StrBuilder strBuilder0 = new StrBuilder((-127));
      int int1 = (-125);
      StrBuilder strBuilder1 = strBuilder0.append((-125));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("zWq!B");
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setTrimmerMatcher(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "zWq!B");
      String[] stringArray0 = strBuilder_StrBuilderTokenizer0.getTokenArray();
      int int2 = 2108;
      StrTokenizer strTokenizer1 = strBuilder_StrBuilderTokenizer0.reset();
      // Undeclared exception!
      try { 
        strBuilder0.append("zWq!B", (-127), 2108);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1862);
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      int int0 = strBuilder0.size();
      StrBuilder strBuilder2 = strBuilder1.insert(0, (double) 0);
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      StrBuilder strBuilder3 = strBuilder0.appendPadding((-923), 'k');
      StrMatcher strMatcher1 = StrMatcher.charMatcher('?');
      int int1 = strBuilder2.lastIndexOf(strMatcher0, 3018);
      StrBuilder strBuilder4 = strBuilder1.appendFixedWidthPadLeft((-4230), 1862, ':');
      StrBuilder strBuilder5 = strBuilder1.append(strBuilder0, 1862, 0);
      StrBuilder strBuilder6 = strBuilder2.setCharAt(48, ':');
      int int2 = strBuilder1.indexOf(strMatcher1);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(0.0);
      StrBuilder strBuilder2 = strBuilder1.append((-1L));
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder3 = strBuilder0.append('/');
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      int int1 = strBuilder0.lastIndexOf("(Y2\"5Js`g.Q[vJ^.*o", 0);
      StrBuilder strBuilder4 = strBuilder0.setNullText("(Y2\"5Js`g.Q[vJ^.*o");
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-3179));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      Writer writer0 = strBuilder_StrBuilderWriter0.append('M');
      strBuilder_StrBuilderWriter0.write("C1ebT$jh|\"k");
      int int0 = strBuilder0.lastIndexOf("C1ebT$jh|\"k");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("C1ebT$jh|\"k");
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight((Object) strBuilder_StrBuilderWriter0, (-4805), 'm');
      strBuilder_StrBuilderWriter0.flush();
      StrBuilder strBuilder3 = new StrBuilder("9|x ");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder3.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip((-4230L));
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      // Undeclared exception!
      try { 
        strBuilder1.replace(strMatcher0, "9|x ", 117, (-4805), (-3358));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(true);
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrBuilder strBuilder2 = strBuilder0.deleteFirst(strMatcher0);
      String string0 = "yDa<S/3'8IRL~CQ";
      char[] charArray0 = new char[2];
      charArray0[0] = 'f';
      charArray0[1] = 'l';
      // Undeclared exception!
      try { 
        strBuilder2.append(charArray0, (-1), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      String string0 = strBuilder0.leftString(0);
      strBuilder_StrBuilderWriter0.write(0);
      int int0 = 108;
      strBuilder_StrBuilderWriter0.write(108);
      boolean boolean0 = strBuilder0.contains('');
      strBuilder_StrBuilderWriter0.close();
      Reader reader0 = strBuilder0.asReader();
      boolean boolean1 = strBuilder0.isEmpty();
      StrBuilder strBuilder1 = strBuilder0.append((Object) strBuilder_StrBuilderWriter0);
      StrBuilder strBuilder2 = strBuilder1.appendNewLine();
      StrBuilder strBuilder3 = strBuilder1.reverse();
      char char0 = 'm';
      StrBuilder strBuilder4 = strBuilder2.append('m');
      int int1 = strBuilder0.size();
      // Undeclared exception!
      try { 
        strBuilder4.replace(32, (-1445), "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(" 9 ?|[KXPEGq)");
      boolean boolean0 = strBuilder0.contains('^');
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = 0;
      char[] charArray0 = new char[1];
      charArray0[0] = '|';
      // Undeclared exception!
      try { 
        strBuilder0.insert(0, charArray0, (-4189), (-4189));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: -4189
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2632);
      StrBuilder strBuilder1 = strBuilder0.append((double) 2632);
      StrBuilder strBuilder2 = strBuilder0.deleteFirst('G');
      StrBuilder strBuilder3 = strBuilder2.replaceAll("", "");
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      char[] charArray0 = new char[1];
      charArray0[0] = 'S';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder0.indexOf(strMatcher0, 0);
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      int int1 = strBuilder0.indexOf("", 4);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[6];
      charArray0[0] = 'O';
      strBuilder_StrBuilderReader0.reset();
      charArray0[1] = '/';
      charArray0[2] = 'p';
      charArray0[3] = 'M';
      charArray0[4] = '-';
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('M');
      StrTokenizer strTokenizer0 = strBuilder1.asTokenizer();
      strBuilder_StrBuilderReader0.mark(0);
      StrBuilder strBuilder2 = strBuilder1.append(false);
      StrBuilder strBuilder3 = strBuilder2.deleteAll("");
      charArray0[5] = 'W';
      int int0 = 311;
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 311, 311);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("1.3");
      StrBuilder strBuilder1 = strBuilder0.append(true);
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(115, '\'');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 115
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      int int0 = 1940;
      StrBuilder strBuilder0 = new StrBuilder(1940);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[6];
      int int1 = strBuilder_StrBuilderReader0.read(charArray0);
      charArray0[0] = '%';
      charArray0[1] = 'y';
      charArray0[2] = 't';
      charArray0[3] = 'X';
      charArray0[4] = 'B';
      charArray0[5] = '(';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 1402, 1940);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.capacity();
      char[] charArray0 = new char[2];
      StrBuilder strBuilder1 = strBuilder0.deleteAll('U');
      int int1 = 34;
      StringBuffer stringBuffer0 = new StringBuffer("");
      StrBuilder strBuilder2 = strBuilder1.append(stringBuffer0);
      StrBuilder strBuilder3 = strBuilder1.appendFixedWidthPadLeft((Object) strBuilder0, 34, 'm');
      StringBuffer stringBuffer1 = stringBuffer0.append((float) 34);
      charArray0[0] = 'c';
      int int2 = (-2416);
      String string0 = strBuilder0.midString((-2416), 2);
      charArray0[1] = 'B';
      strBuilder0.buffer = charArray0;
      // Undeclared exception!
      try { 
        strBuilder0.delete(0, 32);
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(3115, (-1246), '&');
      String string0 = strBuilder0.rightString(3115);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("");
      strBuilder_StrBuilderWriter0.close();
      StrBuilder strBuilder2 = strBuilder0.replaceAll("1.6", "");
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[2];
      charArray0[0] = 'z';
      charArray0[1] = 't';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StrBuilder strBuilder2 = strBuilder0.append(false);
      StrBuilder strBuilder3 = strBuilder0.ensureCapacity(0);
      String string0 = strBuilder3.rightString(0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(723);
      int int0 = (-86);
      // Undeclared exception!
      try { 
        strBuilder0.delete(723, (-86));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      char[] charArray0 = new char[9];
      charArray0[0] = '?';
      charArray0[1] = 'G';
      charArray0[2] = 'S';
      charArray0[3] = '&';
      charArray0[4] = 'Y';
      charArray0[5] = 'M';
      charArray0[6] = 'M';
      charArray0[7] = '^';
      charArray0[8] = 'P';
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance(charArray0);
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft(object0, 0, '(');
      String string0 = strBuilder2.getNewLineText();
      int int0 = strBuilder2.length();
      int int1 = strBuilder0.validateRange(0, 0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("]t~#F[Q.L(P=_k`l=c");
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("y7LP?<{1Vr49u ");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "]t~#F[Q.L(P=_k`l=c");
      StrBuilder strBuilder2 = strBuilder1.append((Object) stringBuffer0);
      String string0 = strBuilder0.getNewLineText();
      StrBuilder strBuilder3 = new StrBuilder(5624);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder3.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder3.insert(5624, (long) 5624);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 5624
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.insert(0, false);
      StrMatcher strMatcher0 = StrMatcher.charMatcher('E');
      StrBuilder strBuilder2 = strBuilder0.append((Object) strBuilder1);
      boolean boolean0 = strBuilder1.contains(strMatcher0);
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadLeft((Object) strBuilder1, 0, '(');
      int int0 = strBuilder0.validateRange(0, 0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder3.new StrBuilderTokenizer();
      char[] charArray0 = new char[8];
      strBuilder0.buffer = charArray0;
      charArray0[0] = 'N';
      charArray0[1] = 'E';
      charArray0[2] = '(';
      charArray0[3] = '(';
      charArray0[4] = 'j';
      charArray0[5] = '(';
      charArray0[6] = 'i';
      charArray0[7] = 'E';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-391);
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder0;
      String string0 = "";
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "");
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      // Undeclared exception!
      try { 
        strBuilder0.substring((-391));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -391
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.setNullText((String) null);
      // Undeclared exception!
      try { 
        strBuilder1.insert(4035, true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 4035
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      StrMatcher strMatcher1 = StrMatcher.splitMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher1);
      String string0 = null;
      StrBuilder strBuilder2 = strBuilder1.setNullText((String) null);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1), '?');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      String string0 = "5";
      StrBuilder strBuilder0 = new StrBuilder("5");
      StrBuilder strBuilder1 = strBuilder0.append(0.0F);
      char char0 = 'Z';
      int int0 = strBuilder0.lastIndexOf('Z', 0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      int int1 = 3;
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.append((CharSequence) "5", 3, 0);
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("B^J\"cIf#(p");
      int int0 = strBuilder0.lastIndexOf('B', 48);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-782));
      int int0 = strBuilder0.lastIndexOf('e');
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(565);
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrBuilder strBuilder2 = strBuilder0.setLength(114);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2305);
      char[] charArray0 = new char[7];
      charArray0[0] = 'm';
      charArray0[1] = 'm';
      charArray0[2] = '(';
      charArray0[3] = 'o';
      charArray0[4] = ':';
      charArray0[5] = 'n';
      StrBuilder strBuilder1 = strBuilder0.append(true);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('m');
      StrBuilder strBuilder2 = strBuilder1.deleteAll(strMatcher0);
      charArray0[6] = 'o';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(2272, 2272, charArray0, 2305);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2272
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      String string0 = "ain9^WR>v`X$^I;ID";
      StrBuilder strBuilder0 = new StrBuilder("ain9^WR>v`X$^I;ID");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(1, 1, ',');
      StrBuilder strBuilder2 = strBuilder1.deleteAll('Y');
      StrBuilder strBuilder3 = strBuilder0.replaceAll("", "");
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      StrBuilder strBuilder4 = strBuilder3.appendWithSeparators((Collection) linkedList0, "");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder4.new StrBuilderReader();
      char[] charArray0 = new char[8];
      charArray0[0] = 'Y';
      charArray0[1] = 'Y';
      charArray0[2] = ',';
      charArray0[3] = 'Y';
      charArray0[4] = 'Y';
      charArray0[5] = ',';
      charArray0[6] = ',';
      charArray0[7] = 'Y';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0);
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      // Undeclared exception!
      try { 
        strBuilder3.validateRange(Integer.MAX_VALUE, Integer.MAX_VALUE);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      StringBuffer stringBuffer0 = new StringBuffer("");
      int int0 = 57;
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 57, 57);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      String string0 = "user.home";
      StrBuilder strBuilder0 = new StrBuilder("user.home");
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      int int0 = 32;
      int int1 = 2075;
      // Undeclared exception!
      try { 
        strBuilder1.insert(32, 2075);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      strBuilder0.size = (-2054);
      int int0 = 0;
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("");
      String string0 = "Invalid length: ";
      // Undeclared exception!
      try { 
        strBuilder0.replaceFirst((StrMatcher) strMatcher_StringMatcher0, "Invalid length: ");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[8];
      charArray0[0] = '\u0082';
      charArray0[1] = 'E';
      charArray0[2] = '0';
      charArray0[3] = '$';
      charArray0[4] = '\u001A';
      charArray0[5] = '#';
      charArray0[6] = '\"';
      charArray0[7] = '&';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(0, 97, charArray0, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 97
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = new StrBuilder("org.apache.commons.lang.text.StrMatcher$CharMatcher");
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight((Object) strBuilder1, (-941), 'b');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[7];
      charArray0[0] = 'b';
      charArray0[1] = 'b';
      charArray0[2] = 'b';
      charArray0[3] = 'b';
      charArray0[4] = 'b';
      charArray0[5] = 'b';
      charArray0[6] = 'b';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, (-1871), (-941));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder1 = strBuilder0.append("FyvoyJq", 0, 0);
      char[] charArray0 = strBuilder1.toCharArray(0, 0);
      StrBuilder strBuilder2 = strBuilder1.append((float) 0);
      StrBuilder strBuilder3 = strBuilder0.insert(0, 1313.0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      StrBuilder strBuilder4 = strBuilder3.replaceFirst("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter", "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      int int0 = strBuilder_StrBuilderReader0.read();
      StrBuilder strBuilder5 = strBuilder3.deleteCharAt(0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      int int0 = 5;
      StrBuilder strBuilder0 = new StrBuilder(5);
      char[] charArray0 = new char[6];
      char char0 = '5';
      int int1 = (-1650);
      // Undeclared exception!
      try { 
        strBuilder0.getChars(5, (-1650), charArray0, (-1650));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1650
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2599);
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "c@");
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(object0, 115, '');
      StrBuilder strBuilder2 = strBuilder0.trim();
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      int int0 = 630;
      StrBuilder strBuilder0 = new StrBuilder(630);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrBuilder strBuilder1 = strBuilder0.append("");
      // Undeclared exception!
      try { 
        strBuilder1.insert((-1), 'L');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("L0\"cd/H<\"eYYLyt`)i{");
      int int0 = 2286;
      int int1 = 0;
      char[] charArray0 = new char[1];
      charArray0[0] = ',';
      // Undeclared exception!
      try { 
        strBuilder0.substring(57, 1424);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[9];
      char char0 = 't';
      charArray0[0] = 't';
      int int0 = 2887;
      // Undeclared exception!
      try { 
        strBuilder0.insert(2887, charArray0, 2887, 2887);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2887
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("end < start");
      StrBuilder strBuilder1 = strBuilder0.append(true);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("");
      StrBuilder strBuilder2 = strBuilder0.deleteAll(strMatcher0);
      StrBuilder strBuilder3 = strBuilder0.append((StrBuilder) null, 0, 0);
      int int0 = strBuilder1.lastIndexOf((StrMatcher) null);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Reader reader0 = strBuilder0.asReader();
      char[] charArray0 = new char[4];
      charArray0[0] = 'G';
      charArray0[1] = 'B';
      charArray0[2] = '*';
      charArray0[3] = 'C';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2173);
      char[] charArray0 = new char[3];
      charArray0[0] = '|';
      charArray0[1] = 'P';
      charArray0[2] = 'n';
      // Undeclared exception!
      try { 
        strBuilder0.insert(2173, charArray0, 2173, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2173
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.append((long) 0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(0);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("O&(G2b!");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      int int0 = (-5092);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-5092), (double) (-5092));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -5092
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder");
      StrBuilder strBuilder1 = strBuilder0.deleteAll('\\');
      StrBuilder strBuilder2 = new StrBuilder();
      boolean boolean0 = strBuilder0.equals(strBuilder2);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      String string0 = "|";
      StrBuilder strBuilder0 = new StrBuilder("|");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[2];
      Object object0 = strBuilder_StrBuilderTokenizer0.next();
      charArray0[0] = 'T';
      charArray0[1] = '6';
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset(charArray0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "|");
      int int0 = strBuilder0.length();
      char[] charArray1 = strBuilder1.getChars(charArray0);
      int int1 = (-3094);
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray(28, (-3094));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      char[] charArray0 = new char[6];
      charArray0[0] = 'B';
      charArray0[1] = '(';
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) "", 0, 'B');
      StrBuilder strBuilder2 = strBuilder1.appendNull();
      charArray0[2] = '';
      charArray0[3] = '?';
      charArray0[4] = '';
      charArray0[5] = 'X';
      char[] charArray1 = strBuilder0.getChars(charArray0);
      int int1 = 4;
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(4);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 4
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.delete(0, 0);
      char[] charArray0 = new char[0];
      strBuilder1.buffer = charArray0;
      StrBuilder strBuilder2 = strBuilder0.reverse();
      StrBuilder strBuilder3 = strBuilder2.replaceFirst("56Xl6y*ZP!", "");
      StrBuilder strBuilder4 = strBuilder2.append(true);
      StrBuilder strBuilder5 = strBuilder2.appendNewLine();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder5.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(strBuilder1.buffer, 0, 0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder4.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      int int1 = strBuilder2.size();
      // Undeclared exception!
      try { 
        strBuilder1.deleteCharAt(116);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 116
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[1];
      charArray0[0] = '8';
      StrBuilder strBuilder1 = strBuilder0.setLength(0);
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 0, 57);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 57
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteAll((StrMatcher) null);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      String string0 = ",wt|,=1o,b>_lyw*T";
      StrBuilder strBuilder0 = new StrBuilder(",wt|,=1o,b>_lyw*T");
      int int0 = 102;
      // Undeclared exception!
      try { 
        strBuilder0.charAt(102);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 102
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = 'o';
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1), 'o');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("r]-'/H");
      // Undeclared exception!
      try { 
        strBuilder0.charAt(2436);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2436
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer", (-673), Integer.MAX_VALUE);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.insert(0, false);
      strBuilder1.validateIndex(0);
      StrBuilder strBuilder2 = strBuilder1.minimizeCapacity();
      StrBuilder strBuilder3 = strBuilder2.replace(0, 0, (String) null);
      String string0 = strBuilder3.midString(0, 660);
      StrBuilder strBuilder4 = strBuilder2.insert(0, (String) null);
      StrBuilder strBuilder5 = strBuilder4.clear();
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex((-1397));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1397
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder();
      int int0 = (-639);
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((Object) strBuilder1, (-639), 'p');
      String string0 = "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer";
      StrBuilder strBuilder3 = strBuilder1.append("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('p');
      StrBuilder strBuilder4 = strBuilder3.deleteFirst((StrMatcher) strMatcher_CharMatcher0);
      // Undeclared exception!
      try { 
        strBuilder3.deleteCharAt(3381);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3381
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.charAt((-176));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -176
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(0);
      StrBuilder strBuilder2 = strBuilder0.insert(0, 0);
      int int0 = 137;
      String string0 = strBuilder2.leftString(137);
      StrBuilder strBuilder3 = strBuilder2.appendNewLine();
      StrBuilder strBuilder4 = strBuilder3.setNullText("");
      char[] charArray0 = new char[0];
      StrBuilder strBuilder5 = strBuilder3.append(charArray0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder strBuilder6 = new StrBuilder(137);
      // Undeclared exception!
      try { 
        strBuilder5.insert(137, (Object) strBuilder6);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 137
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setNullText("startIndex must be valid");
      StrBuilder strBuilder2 = strBuilder1.append((-592));
      StrBuilder strBuilder3 = strBuilder0.append("Invalid startIndex: ");
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3322);
      StrBuilder strBuilder1 = strBuilder0.appendPadding(0, 'y');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("");
      char[] charArray0 = new char[6];
      charArray0[0] = 'y';
      charArray0[1] = 'w';
      charArray0[2] = 'y';
      charArray0[3] = 'y';
      charArray0[4] = 'y';
      charArray0[5] = 'y';
      StrBuilder strBuilder2 = strBuilder0.insert(0, charArray0);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(32);
      StrBuilder strBuilder1 = new StrBuilder("OS/2");
      StrBuilder strBuilder2 = new StrBuilder("OS/2");
      StrBuilder strBuilder3 = strBuilder1.append(strBuilder2);
      StrBuilder strBuilder4 = strBuilder1.append((-2969));
      StrBuilder strBuilder5 = strBuilder4.trim();
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, 32, 32);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("HE;;");
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("Jd?Hyoiymagc");
      int int0 = strBuilder0.indexOf((StrMatcher) strMatcher_StringMatcher0, (-3077));
      String string0 = strBuilder0.substring(0, 1227);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('5');
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string1 = strBuilder_StrBuilderTokenizer0.getContent();
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      StrTokenizer strTokenizer1 = strBuilder0.asTokenizer();
      int int0 = strBuilder0.indexOf(strMatcher0, 1365);
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "Y");
      char[] charArray0 = new char[2];
      charArray0[0] = '|';
      charArray0[1] = 'K';
      StrMatcher strMatcher1 = StrMatcher.stringMatcher((String) null);
      StrBuilder strBuilder2 = strBuilder1.append(charArray0);
      boolean boolean0 = strBuilder2.contains(strMatcher0);
      strBuilder2.buffer = charArray0;
      int int1 = strBuilder1.indexOf(strMatcher0);
      StrBuilder strBuilder3 = strBuilder0.replaceFirst('l', '5');
      StrMatcher strMatcher2 = StrMatcher.stringMatcher("Y");
      StrBuilder strBuilder4 = strBuilder2.append((String) null, (-479), 1003);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder5 = strBuilder4.appendWithSeparators((Collection) linkedList0, "Y");
      Writer writer0 = strBuilder4.asWriter();
      boolean boolean1 = strBuilder2.contains((String) null);
      int int2 = strBuilder3.indexOf('K');
      String string0 = strBuilder0.leftString((-1780));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder5.new StrBuilderReader();
      boolean boolean2 = strBuilder_StrBuilderReader0.ready();
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) "";
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      objectArray0[2] = object0;
      objectArray0[3] = (Object) "";
      objectArray0[4] = (Object) "";
      objectArray0[5] = (Object) strBuilder0;
      objectArray0[6] = (Object) strBuilder0;
      objectArray0[7] = (Object) strBuilder0;
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "");
      char char0 = strBuilder1.charAt(0);
      char char1 = strBuilder0.charAt(34);
      StrBuilder strBuilder2 = strBuilder0.insert(34, false);
      int int0 = strBuilder0.indexOf('~', 0);
      StrBuilder strBuilder3 = strBuilder0.reverse();
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      int int0 = (-3748);
      StrBuilder strBuilder0 = new StrBuilder((-3748));
      String string0 = strBuilder0.leftString((-3748));
      char char0 = 'z';
      int int1 = strBuilder0.indexOf('z', (-3748));
      // Undeclared exception!
      try { 
        strBuilder0.insert((-3748), true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3748
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("java.class.path");
      char[] charArray0 = new char[1];
      charArray0[0] = 'x';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "O*TSjI)/D");
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("FkSg4<Fhdua?h_y&|6d");
      StrBuilder strBuilder1 = strBuilder0.deleteAll("}44eA,'w");
      StrBuilder strBuilder2 = strBuilder0.insert(0, 0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(0);
      strBuilder_StrBuilderReader0.reset();
      strBuilder_StrBuilderReader0.mark(0);
      StrBuilder strBuilder3 = strBuilder0.insert(0, 0);
      StrBuilder strBuilder4 = strBuilder3.appendFixedWidthPadRight((Object) strBuilder0, 0, '~');
      StrBuilder strBuilder5 = strBuilder3.replaceFirst('%', '~');
      StrBuilder strBuilder6 = strBuilder0.append('#');
      char[] charArray0 = new char[9];
      charArray0[0] = '~';
      charArray0[1] = '%';
      charArray0[2] = '~';
      charArray0[3] = '~';
      charArray0[4] = '%';
      charArray0[5] = '%';
      charArray0[6] = '%';
      charArray0[7] = '~';
      charArray0[8] = '~';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.append((long) 0);
      StrBuilder strBuilder2 = strBuilder1.clear();
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      char[] charArray0 = new char[1];
      charArray0[0] = '/';
      int int0 = strMatcher0.isMatch(charArray0, 0, 0, 0);
      int int1 = strBuilder2.indexOf(strMatcher0, 0);
      StrBuilder strBuilder3 = strBuilder1.append(strBuilder0, 0, 0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      String string0 = strBuilder3.substring(0, 0);
      StrBuilder strBuilder4 = strBuilder3.appendWithSeparators((Collection) linkedList0, ">Nb[RBL Z>X7EtY7'^9");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrBuilder strBuilder5 = strBuilder0.append('X');
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1480);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('7');
      int int0 = (-545);
      StrBuilder strBuilder2 = strBuilder0.deleteAll('7');
      StrBuilder strBuilder3 = strBuilder0.append((String) null, 1480, (-545));
      StringBuffer stringBuffer0 = null;
      try {
        stringBuffer0 = new StringBuffer((CharSequence) null);
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StringBuffer stringBuffer0 = new StringBuffer("java.vm.specification.name");
      StrBuilder strBuilder2 = strBuilder0.append(stringBuffer0);
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.append("", 44, 44);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("user.region");
      int int0 = strBuilder0.lastIndexOf("Invalid offset: ", (-1209));
      StrBuilder strBuilder1 = new StrBuilder();
      boolean boolean0 = strBuilder0.equals(strBuilder1);
      Object[] objectArray0 = new Object[0];
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators(objectArray0, "Invalid offset: ");
      String string0 = strBuilder0.midString(0, 115);
      StrBuilder strBuilder3 = strBuilder2.append('5');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      StrBuilder strBuilder4 = strBuilder1.appendFixedWidthPadLeft(object0, 2, 'K');
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1118);
      strBuilder0.size = 4;
      StrBuilder strBuilder1 = strBuilder0.insert(0, false);
      char char0 = 'T';
      // Undeclared exception!
      try { 
        strBuilder1.setCharAt(1118, 'T');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1118
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-529);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-529), true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -529
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = strBuilder0.rightString(0);
      StrBuilder strBuilder1 = strBuilder0.deleteAll("");
      strBuilder0.validateIndex(0);
      int int0 = strBuilder0.indexOf('!');
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder2 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder3 = strBuilder2.insert(0, (char[]) null);
      int int1 = strBuilder0.size();
      StringBuffer stringBuffer1 = strBuilder1.toStringBuffer();
      // Undeclared exception!
      try { 
        strBuilder2.substring((-4));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -4
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("");
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("e0~H~'%GKV<1+*})");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-508));
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt((-508), 'f');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -508
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      int int0 = (-374);
      StrBuilder strBuilder0 = new StrBuilder((-374));
      char char0 = '4';
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('4');
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      int int1 = strBuilder1.indexOf(strMatcher0, 1610);
      StrBuilder strBuilder2 = strBuilder0.replaceFirst("end < start", "end < start");
      // Undeclared exception!
      try { 
        strBuilder1.replace((-1), (-1), "end < start");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.replace(0, 381, "'^#c%+ect8:1");
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      char char0 = 's';
      StrMatcher strMatcher0 = StrMatcher.charMatcher('s');
      int int0 = strBuilder0.indexOf((StrMatcher) strMatcher_NoMatcher0, 2015);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      int int1 = strBuilder0.indexOf("WErdg9eeL A=O");
      StrBuilder strBuilder2 = new StrBuilder((-1));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterMatcher(strMatcher0);
      String string0 = "O8EPx";
      StrBuilder strBuilder3 = strBuilder1.appendWithSeparators((Iterator) strTokenizer0, "O8EPx");
      boolean boolean1 = strBuilder0.contains(strMatcher0);
      StrBuilder strBuilder4 = strBuilder1.insert(0, (-1));
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) strBuilder2;
      objectArray0[1] = (Object) strMatcher0;
      char[] charArray0 = new char[7];
      charArray0[0] = 's';
      charArray0[1] = 's';
      charArray0[2] = 's';
      charArray0[3] = 's';
      charArray0[4] = 's';
      charArray0[5] = 's';
      charArray0[6] = 's';
      // Undeclared exception!
      try { 
        strBuilder2.getChars(2015, 0, charArray0, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      String string0 = "Invalid startIndex: ";
      StrBuilder strBuilder0 = new StrBuilder("Invalid startIndex: ");
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "1.2");
      boolean boolean0 = strBuilder1.startsWith("1.2");
      StrBuilder strBuilder2 = strBuilder1.replaceAll("1.2", "1.2");
      int int0 = 4;
      StrBuilder strBuilder3 = strBuilder1.deleteCharAt(4);
      StrBuilder strBuilder4 = strBuilder3.trim();
      StrBuilder strBuilder5 = strBuilder0.ensureCapacity(4);
      float float0 = 0.0F;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('2');
      String string1 = "";
      StrMatcher strMatcher2 = StrMatcher.stringMatcher("");
      // Undeclared exception!
      try { 
        strBuilder0.replace(strMatcher0, "Invalid startIndex: ", 90, 4, 90);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("O&(G2b!");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance("O&(G2b!");
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      int int0 = (-5092);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strBuilder_StrBuilderTokenizer0, "Windows 9");
      // Undeclared exception!
      try { 
        strBuilder0.insert((-5092), (double) (-5092));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -5092
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commos.lang.text.StrBuilder");
      StrBuilder strBuilder1 = strBuilder0.deleteAll('\\');
      StrBuilder strBuilder2 = new StrBuilder();
      boolean boolean0 = strBuilder0.equals(strBuilder2);
      char[] charArray0 = new char[1];
      charArray0[0] = '\\';
      // Undeclared exception!
      try { 
        strBuilder1.append(charArray0, (-1638), (-1638));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -1638
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(9);
      int int0 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 2, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[7];
      charArray0[0] = 'p';
      charArray0[1] = '0';
      charArray0[2] = '<';
      charArray0[3] = '@';
      StrBuilder strBuilder1 = strBuilder0.insert(4, '@');
      StrBuilder strBuilder2 = strBuilder1.append('p');
      charArray0[4] = 'H';
      StrMatcher strMatcher0 = StrMatcher.charMatcher('J');
      StrBuilder strBuilder3 = strBuilder1.replace(strMatcher0, "org.apache.commons.lang.text.StrBuilder$StrBuilderReader", 3, 3, 0);
      charArray0[5] = '8';
      charArray0[6] = 'e';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 0, 0);
      String string0 = strBuilder0.midString(0, 0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("StrTokenizer", 0, 0);
      boolean boolean0 = strBuilder1.contains((StrMatcher) null);
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, (-1654), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("-6iBZ h]ThVthN");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[3];
      charArray0[0] = 'z';
      charArray0[1] = '6';
      charArray0[2] = '3';
      strBuilder_StrBuilderWriter0.write(charArray0);
      StrBuilder strBuilder1 = strBuilder0.appendPadding(0, '3');
      StrBuilder strBuilder2 = strBuilder1.setNewLineText("-6iBZ h]ThVthN");
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrBuilder strBuilder3 = strBuilder1.appendFixedWidthPadLeft(0, 3012, '3');
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("-6iBZ h]ThVthN");
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("#c\"");
      String string0 = strBuilder2.leftString(116);
      boolean boolean0 = strBuilder0.contains((StrMatcher) strMatcher_NoMatcher0);
      StrBuilder strBuilder4 = strBuilder2.appendFixedWidthPadLeft(116, (-3040), '|');
      StrBuilder strBuilder5 = strBuilder0.insert(0, (double) 0);
      StrBuilder strBuilder6 = strBuilder2.deleteAll((StrMatcher) strMatcher_NoMatcher0);
      StrBuilder strBuilder7 = strBuilder0.insert(0, 2054);
      StrBuilder strBuilder8 = strBuilder1.insert(13, 0L);
      StrBuilder strBuilder9 = strBuilder7.reverse();
      String string1 = strBuilder9.toString();
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) "4e|=[v%bc=] ", 0, ':');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(0);
      char[] charArray0 = new char[2];
      charArray0[0] = ':';
      charArray0[1] = ':';
      long long1 = strBuilder_StrBuilderReader0.skip(0);
      char[] charArray1 = strBuilder1.toCharArray(0, 0);
      int int1 = strBuilder_StrBuilderReader0.read(charArray0);
      int int2 = 2346;
      StrBuilder strBuilder2 = strBuilder0.deleteFirst("4e|=[v%bc=] ");
      strBuilder_StrBuilderReader0.mark(2346);
      StrBuilder strBuilder3 = strBuilder1.minimizeCapacity();
      String string0 = strBuilder1.getNullText();
      boolean boolean0 = strBuilder2.contains("4e|=[v%bc=] ");
      Writer writer0 = strBuilder1.asWriter();
      // Undeclared exception!
      try { 
        strBuilder3.insert(2346, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2346
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }
}
