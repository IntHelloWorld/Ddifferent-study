/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 29 07:13:58 GMT 2020
 */

package org.apache.commons.lang.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.Writer;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.NoSuchElementException;
import java.util.Spliterator;
import java.util.stream.IntStream;
import org.apache.commons.lang.text.StrBuilder;
import org.apache.commons.lang.text.StrMatcher;
import org.apache.commons.lang.text.StrTokenizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StrBuilder_ESTest extends StrBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      int int0 = 31;
      StrBuilder strBuilder0 = new StrBuilder(31);
      StrBuilder strBuilder1 = strBuilder0.append((-1020L));
      String string0 = "6`2";
      StrBuilder strBuilder2 = strBuilder0.deleteFirst("6`2");
      String string1 = "";
      StrBuilder strBuilder3 = strBuilder0.setNewLineText("");
      StrBuilder strBuilder4 = new StrBuilder();
      StrBuilder strBuilder5 = strBuilder3.append((Object) strBuilder4);
      float float0 = (-1.0F);
      int int1 = 787;
      // Undeclared exception!
      try { 
        strBuilder2.insert(787, "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 787
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("~H'HxV,C\u001ChI%Y");
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0);
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder1 = strBuilder0.trim();
      String string0 = strBuilder1.leftString(2251);
      Writer writer0 = strBuilder0.asWriter();
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) "~H'HxV,C\u001ChI%Y";
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Collection) linkedList0, "~H'HxV,C\u001ChI%Y");
      objectArray0[1] = (Object) strTokenizer0;
      objectArray0[4] = (Object) "~H'HxV,C\u001ChI%Y";
      objectArray0[5] = (Object) strMatcher0;
      boolean boolean0 = strBuilder1.contains("org.apache.commons.lang.text.StrBuilder");
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      StrBuilder strBuilder0 = new StrBuilder("{}");
      int int0 = strBuilder0.hashCode();
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("<u~>{+m:Ty");
      String string0 = "1hLYRr*5$Jgr3";
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("<u~>{+m:Ty", "1hLYRr*5$Jgr3");
      char char0 = '|';
      StrBuilder strBuilder2 = strBuilder0.append('|');
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      int int0 = 2975;
      int int1 = 472;
      // Undeclared exception!
      try { 
        strBuilder2.replace(strMatcher0, "1hLYRr*5$Jgr3", 2975, 472, 472);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("R%AG|IjjC;~^)k");
      StrBuilder strBuilder1 = strBuilder0.insert(2, (float) 2);
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      char[] charArray0 = new char[4];
      charArray0[0] = '}';
      Writer writer0 = strBuilder0.asWriter();
      charArray0[1] = '7';
      charArray0[2] = 'j';
      charArray0[3] = '&';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder2 = strBuilder0.deleteFirst((StrMatcher) strMatcher_TrimMatcher0);
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadRight(2, 2, '&');
      StrBuilder strBuilder4 = strBuilder0.ensureCapacity(1306);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = new StringBuffer(0);
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0, 0, 0);
      StringBuffer stringBuffer1 = new StringBuffer();
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.stringMatcher((String) null);
      StrMatcher strMatcher1 = StrMatcher.charMatcher('%');
      StrMatcher strMatcher2 = StrMatcher.stringMatcher((String) null);
      StrMatcher strMatcher3 = StrMatcher.charMatcher('0');
      String string0 = strBuilder0.toString();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) strMatcher1, 482, '%');
      boolean boolean0 = strBuilder1.equals(strBuilder0);
      StrBuilder strBuilder2 = strBuilder1.append(1373.3388323964866);
      StrBuilder strBuilder3 = strBuilder1.minimizeCapacity();
      int int0 = 0;
      int int1 = (-3469);
      char[] charArray0 = new char[4];
      charArray0[0] = '%';
      charArray0[1] = '%';
      charArray0[2] = '%';
      charArray0[3] = '%';
      // Undeclared exception!
      try { 
        strBuilder1.insert(0, charArray0, 0, (-3684));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: -3684
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      String string0 = "java.vm.vendor";
      StrBuilder strBuilder0 = new StrBuilder("java.vm.vendor");
      char char0 = '0';
      boolean boolean0 = strBuilder0.contains('0');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((-2963));
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      strBuilder_StrBuilderWriter0.flush();
      String string1 = "";
      StrBuilder strBuilder1 = strBuilder0.setNullText("");
      String string2 = "";
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      // Undeclared exception!
      try { 
        linkedList0.remove();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      char[] charArray0 = new char[4];
      charArray0[0] = 'a';
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('a');
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_CharMatcher0);
      StrBuilder strBuilder1 = strBuilder0.replaceFirst((StrMatcher) strMatcher_CharMatcher0, ".~i},FxzNH`I");
      charArray0[1] = '_';
      charArray0[2] = 'S';
      charArray0[1] = 'l';
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance(charArray0);
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "4.9");
      StrBuilder strBuilder3 = strBuilder2.appendPadding(0, '\u0000');
      StrBuilder strBuilder4 = strBuilder0.append((-1L));
      StrBuilder strBuilder5 = strBuilder0.insert(20, 'k');
      StrBuilder strBuilder6 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder6.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(0);
      String string0 = strBuilder6.rightString(0);
      StrTokenizer strTokenizer1 = strBuilder1.asTokenizer();
      Reader reader0 = strBuilder2.asReader();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder6.new StrBuilderTokenizer();
      String string1 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder strBuilder7 = strBuilder1.append((double) 20);
      StrBuilder strBuilder8 = strBuilder7.appendPadding(0, '_');
      int int1 = strBuilder6.lastIndexOf('k', 98);
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) strBuilder0;
      StrBuilder strBuilder9 = strBuilder7.appendWithSeparators(objectArray0, "");
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = strBuilder0.getNullText();
      StrBuilder strBuilder1 = strBuilder0.insert(0, (Object) null);
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      char[] charArray0 = new char[8];
      charArray0[0] = ')';
      charArray0[1] = 'd';
      charArray0[2] = '%';
      charArray0[3] = 'x';
      charArray0[4] = '[';
      charArray0[5] = '3';
      charArray0[6] = 'e';
      charArray0[7] = 'Y';
      int int0 = strMatcher0.isMatch(charArray0, 4, 2, 1620);
      int int1 = strBuilder1.lastIndexOf(strMatcher0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrBuilder strBuilder2 = strBuilder1.replaceFirst((StrMatcher) strMatcher_NoMatcher0, (String) null);
      String string1 = strBuilder2.rightString((-1));
      String string2 = strBuilder2.leftString(0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      int int0 = strBuilder0.lastIndexOf(':', 21);
      // Undeclared exception!
      try { 
        strBuilder0.equals((StrBuilder) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("[r=V{&1q4n|vM");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "4\"SG");
      StrBuilder strBuilder2 = strBuilder0.replaceFirst(strMatcher0, "");
      int int0 = strBuilder0.lastIndexOf("");
      StrBuilder strBuilder3 = strBuilder0.deleteAll("");
      char[] charArray0 = new char[8];
      charArray0[0] = '(';
      charArray0[1] = 'G';
      charArray0[2] = '}';
      charArray0[3] = '0';
      charArray0[4] = 's';
      charArray0[5] = 'm';
      charArray0[6] = 'm';
      charArray0[7] = '(';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, (-1), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(5089.0);
      String string0 = strBuilder0.leftString(2751);
      String string1 = strBuilder0.toString();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("5089.0");
      StrBuilder strBuilder2 = strBuilder0.append(false);
      int int0 = strBuilder1.lastIndexOf(strMatcher0, 4);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(1L);
      StrBuilder strBuilder3 = strBuilder1.append(1160.2271);
      // Undeclared exception!
      try { 
        strBuilder0.getChars(4, (-4293), (char[]) null, 191);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -4293
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      Reader reader0 = strBuilder0.asReader();
      char[] charArray0 = new char[7];
      charArray0[0] = 'r';
      charArray0[1] = 'k';
      charArray0[2] = 'S';
      charArray0[3] = 'v';
      charArray0[4] = 'w';
      charArray0[5] = 'L';
      charArray0[6] = ']';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StrBuilder strBuilder2 = strBuilder0.deleteAll("Bwh+oRUCXW]RP9v]sm");
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex(693);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 693
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.leftString(1854);
      char char0 = 'v';
      String string1 = strBuilder0.leftString((-2150));
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) "", 1854, 'v');
      String string2 = strBuilder1.getNullText();
      String string3 = strBuilder0.getNullText();
      StrBuilder strBuilder2 = strBuilder1.setLength(31);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      String string4 = strBuilder0.leftString(108);
      Writer writer0 = strBuilder_StrBuilderWriter0.append('v');
      strBuilder_StrBuilderWriter0.write(31);
      strBuilder_StrBuilderWriter0.write((String) null, 31, 1854);
      char[] charArray0 = new char[7];
      charArray0[0] = 'v';
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      // Undeclared exception!
      try { 
        strBuilder0.replace(strMatcher0, "", 191, 31, 4);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(5089.0);
      String string0 = strBuilder0.leftString(2751);
      String string1 = strBuilder0.toString();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder0.getChars(4, 4, (char[]) null, 191);
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[1];
      charArray0[0] = '4';
      strBuilder0.buffer = charArray0;
      int int0 = (-1918);
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt((-1918));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1918
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2058);
      StrBuilder strBuilder1 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher((char[]) null);
      int int0 = strBuilder0.indexOf(strMatcher0, 2058);
      StrBuilder strBuilder2 = new StrBuilder();
      boolean boolean0 = strBuilder0.equals(strBuilder1);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      int int1 = strBuilder_StrBuilderReader0.read();
      StrBuilder strBuilder3 = strBuilder1.replaceAll('7', 'O');
      StrBuilder strBuilder4 = strBuilder2.append(1327.75F);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Reader reader0 = strBuilder0.asReader();
      char char0 = '}';
      StrBuilder strBuilder1 = strBuilder0.append(true);
      char[] charArray0 = new char[2];
      charArray0[0] = '}';
      charArray0[1] = '}';
      int int0 = 568;
      // Undeclared exception!
      try { 
        strBuilder1.insert(0, charArray0, 779, 568);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: 779
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(4);
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      char[] charArray0 = new char[7];
      charArray0[0] = '<';
      charArray0[1] = '1';
      charArray0[2] = '0';
      charArray0[3] = 'M';
      charArray0[4] = 'd';
      charArray0[5] = ';';
      charArray0[6] = 'Q';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StrBuilder strBuilder2 = strBuilder0.replaceAll("re\"D", "");
      String string0 = strBuilder2.substring(4);
      StrMatcher strMatcher1 = StrMatcher.charMatcher('D');
      StrBuilder strBuilder3 = strBuilder0.deleteFirst(strMatcher0);
      String string1 = strBuilder1.rightString(3397);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("_^uZr");
      char[] charArray0 = new char[3];
      charArray0[0] = '!';
      charArray0[1] = 'i';
      charArray0[2] = '|';
      char[] charArray1 = new char[1];
      StrBuilder strBuilder1 = new StrBuilder('|');
      charArray1[0] = '4';
      StrBuilder strBuilder2 = strBuilder1.replaceAll("_^uZr", "_^uZr");
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher(charArray1);
      int int0 = strBuilder0.indexOf(strMatcher0, (-85));
      StrBuilder strBuilder3 = strBuilder0.append((Object) "H_Dv{0Hw`Kgt1L8/_");
      StrBuilder strBuilder4 = strBuilder3.minimizeCapacity();
      boolean boolean0 = strBuilder0.isEmpty();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder4.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      int int1 = strBuilder_StrBuilderReader0.read();
      strBuilder_StrBuilderReader0.mark(823);
      String string0 = strBuilder4.leftString(0);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray1, 823, 0);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[9];
      charArray0[0] = 'R';
      charArray0[1] = '-';
      charArray0[2] = '6';
      charArray0[3] = '.';
      charArray0[4] = 'v';
      charArray0[5] = 'y';
      charArray0[6] = 'S';
      charArray0[7] = 'e';
      charArray0[8] = 'u';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, (-3687), (-3687));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -3687
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("YHt=YZ");
      StrBuilder strBuilder1 = new StrBuilder("");
      boolean boolean0 = strBuilder0.equals(strBuilder1);
      StrTokenizer strTokenizer0 = strBuilder1.asTokenizer();
      StrBuilder strBuilder2 = strBuilder1.replaceAll("", "");
      // Undeclared exception!
      try { 
        strBuilder2.insert(3857, (-1.0F));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3857
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("@ .F5zR~");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoredChar('V');
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "@ .F5zR~");
      StrBuilder strBuilder2 = new StrBuilder(0);
      StrBuilder strBuilder3 = strBuilder1.appendFixedWidthPadLeft((Object) strBuilder2, 0, 'V');
      Reader reader0 = strBuilder1.asReader();
      StrTokenizer strTokenizer1 = strBuilder0.asTokenizer();
      boolean boolean0 = strBuilder3.contains("@ .F5zR~");
      StrBuilder strBuilder4 = strBuilder0.setNullText("");
      char[] charArray0 = new char[2];
      charArray0[0] = '.';
      charArray0[1] = 'V';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 84, 84);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      String string0 = strBuilder0.rightString((-423));
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(2981, 48, '\'');
      String string1 = strBuilder0.toString();
      StrBuilder strBuilder2 = strBuilder0.setNewLineText("Invalid offset: ");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      Writer writer0 = strBuilder_StrBuilderWriter0.append('\'');
      strBuilder_StrBuilderWriter0.write("Invalid offset: '''''''''''''''''''''java.lang.String@0000000002");
      Reader reader0 = strBuilder1.asReader();
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadRight((Object) "Invalid offset: ", 48, '\'');
      StrBuilder strBuilder4 = strBuilder3.replaceFirst("", "");
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      String string0 = "";
      StringBuffer stringBuffer0 = new StringBuffer("");
      int int0 = 1733;
      int int1 = 0;
      // Undeclared exception!
      try { 
        strBuilder1.append(stringBuffer0, 1733, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      int int0 = 861;
      StrBuilder strBuilder0 = new StrBuilder(861);
      char[] charArray0 = new char[4];
      charArray0[0] = '5';
      charArray0[1] = 'Z';
      char char0 = 'X';
      charArray0[2] = 'X';
      StringBuffer stringBuffer0 = new StringBuffer();
      int int1 = 4388;
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(4388, 4388, 'X');
      StrBuilder strBuilder2 = new StrBuilder();
      charArray0[3] = '|';
      int int2 = Integer.MAX_VALUE;
      // Undeclared exception!
      try { 
        strBuilder2.append(stringBuffer0, 4388, 32);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      int int0 = 2316;
      StrBuilder strBuilder0 = new StrBuilder(2316);
      String string0 = "";
      StrBuilder strBuilder1 = strBuilder0.append("");
      StrBuilder strBuilder2 = strBuilder1.append(strBuilder0);
      StrBuilder strBuilder3 = strBuilder1.deleteFirst("");
      boolean boolean0 = strBuilder0.equals(strBuilder1);
      Writer writer0 = strBuilder3.asWriter();
      int int1 = strBuilder0.indexOf('U');
      char[] charArray0 = new char[4];
      charArray0[0] = 'U';
      charArray0[1] = 'U';
      charArray0[2] = 'U';
      charArray0[3] = 'U';
      char[] charArray1 = strBuilder0.getChars(charArray0);
      StrBuilder strBuilder4 = strBuilder2.reverse();
      int int2 = 0;
      StrBuilder strBuilder5 = strBuilder2.appendFixedWidthPadRight(0, 2316, 'U');
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "");
      // Undeclared exception!
      try { 
        strBuilder1.append(stringBuffer0, (-1), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      String string0 = strBuilder0.leftString(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance();
      char char0 = 'l';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(object0, 0, 'l');
      StrBuilder strBuilder2 = new StrBuilder(0);
      StrBuilder strBuilder3 = strBuilder2.trim();
      String string1 = strBuilder3.toString();
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder2);
      StrBuilder strBuilder4 = strBuilder3.trim();
      int int1 = 1;
      StrBuilder strBuilder5 = strBuilder4.replace(0, 1, "");
      int int2 = strBuilder2.size();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder3.new StrBuilderWriter();
      String string2 = strBuilder3.midString((-266), 5);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("n<(Nz:[G(P}$n{1", 0, (-2079));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append('I');
      Reader reader0 = strBuilder0.asReader();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      int int0 = strBuilder0.hashCode();
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) strBuilder_StrBuilderWriter0;
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) strBuilder_StrBuilderWriter0;
      objectArray0[3] = (Object) strBuilder0;
      objectArray0[4] = (Object) strBuilder0;
      objectArray0[5] = (Object) strBuilder0;
      objectArray0[6] = (Object) strBuilder_StrBuilderWriter0;
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators(objectArray0, "");
      String string0 = strBuilder0.substring(0);
      int int1 = strBuilder0.indexOf('{', 1297);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('O');
      StrBuilder strBuilder2 = strBuilder0.append("");
      String string0 = "f\\B/dINn0AF@qA4S";
      StrBuilder strBuilder3 = strBuilder0.setNullText("fB/dINn0AF@qA4S");
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        stringBuffer0.deleteCharAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceAll("K0j(8t", "");
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight(0, 1502, ']');
      StrBuilder strBuilder3 = strBuilder2.delete(0, 0);
      StrBuilder strBuilder4 = strBuilder1.deleteCharAt(34);
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("K0j(8t");
      StrBuilder strBuilder5 = strBuilder1.replaceFirst(strMatcher0, "");
      StrBuilder strBuilder6 = strBuilder4.ensureCapacity(0);
      StrMatcher strMatcher1 = StrMatcher.singleQuoteMatcher();
      StrBuilder strBuilder7 = strBuilder2.insert(0, "");
      StrBuilder strBuilder8 = strBuilder1.append("K0j(8t");
      int int0 = strBuilder1.validateRange(0, 34);
      StrMatcher strMatcher2 = StrMatcher.charMatcher('4');
      int int1 = strBuilder6.indexOf(strMatcher1);
      String string0 = strBuilder1.getNullText();
      char[] charArray0 = strBuilder1.toCharArray();
      char[] charArray1 = strBuilder5.getChars(charArray0);
      String string1 = strBuilder3.midString(0, 187);
      StrBuilder strBuilder9 = strBuilder8.replaceFirst(strMatcher0, (String) null);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder9.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((String) null);
      strBuilder_StrBuilderWriter0.write("j:lL4XmbBq.(OL3j");
      strBuilder_StrBuilderWriter0.write(charArray1, 0, 2);
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("K0j(8t");
      int int2 = strBuilder9.indexOf((StrMatcher) strMatcher_StringMatcher0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3994);
      StrBuilder strBuilder1 = strBuilder0.append('-');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      boolean boolean0 = strBuilder1.contains('@');
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight((Object) "-", 0, ']');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[4];
      charArray0[0] = '@';
      charArray0[1] = '-';
      charArray0[2] = '-';
      charArray0[3] = '@';
      strBuilder_StrBuilderWriter0.write(charArray0);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 4, 3994);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 3994
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((Object) "8N3^4m;");
      char[] charArray0 = new char[6];
      charArray0[0] = 'W';
      charArray0[1] = 'K';
      charArray0[2] = '&';
      charArray0[3] = 'v';
      charArray0[4] = 'r';
      charArray0[5] = ' ';
      StrBuilder strBuilder2 = strBuilder0.insert(0, charArray0, 0, 0);
      StrBuilder strBuilder3 = strBuilder0.deleteAll('(');
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset();
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      StrTokenizer strTokenizer1 = strBuilder_StrBuilderTokenizer0.setDelimiterString("0{wM7KXO+X!");
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Iterator) strTokenizer1, "");
      int int0 = strBuilder2.lastIndexOf(strMatcher0);
      StrBuilder strBuilder3 = strBuilder1.insert(0, 0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[7];
      charArray0[0] = 'G';
      charArray0[1] = ')';
      charArray0[2] = 'd';
      charArray0[3] = 'g';
      charArray0[4] = '&';
      charArray0[5] = '-';
      charArray0[6] = ' ';
      strBuilder_StrBuilderWriter0.write(charArray0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-924));
      Object object0 = new Object();
      char char0 = 'N';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(object0, (-924), 'N');
      // Undeclared exception!
      try { 
        strBuilder1.replace((-924), 0, "7ffJ;SfT1[");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -924
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.lastIndexOf('G');
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) strBuilder0;
      objectArray0[3] = (Object) strBuilder0;
      objectArray0[4] = (Object) strBuilder0;
      objectArray0[5] = (Object) strBuilder0;
      objectArray0[6] = (Object) strBuilder0;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "");
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      int int0 = 1341;
      StrBuilder strBuilder0 = new StrBuilder(1341);
      StrBuilder strBuilder1 = new StrBuilder("=6y$V1S-$Z:ujA");
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      // Undeclared exception!
      try { 
        strBuilder1.validateIndex(1341);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1341
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1));
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) null, "1.2");
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-865));
      StrBuilder strBuilder1 = new StrBuilder("Invalid offset: ");
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoredMatcher(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Iterator) strTokenizer0, "Invalid offset: ");
      StrBuilder strBuilder3 = strBuilder2.append(0);
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) strBuilder1;
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) strBuilder1;
      Object object1 = new Object();
      objectArray0[3] = object1;
      StrBuilder strBuilder4 = strBuilder1.appendWithSeparators(objectArray0, ">(IFitp,Ng%%aC#MD0");
      String string0 = strBuilder4.getNullText();
      StrBuilder strBuilder5 = strBuilder1.appendFixedWidthPadLeft((-865), (-435), '0');
      StringBuffer stringBuffer0 = new StringBuffer("Invalid offset: ");
      StrBuilder strBuilder6 = strBuilder2.append(stringBuffer0);
      StrBuilder strBuilder7 = strBuilder5.deleteFirst("x.sQiYCWeJkIGQc/k");
      String string1 = strBuilder_StrBuilderTokenizer0.getContent();
      String string2 = strBuilder3.leftString((-667));
      // Undeclared exception!
      try { 
        strBuilder2.insert((-638), (-865));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -638
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      String string0 = "uCX*7p '{6";
      int int0 = 0;
      String string1 = null;
      StrBuilder strBuilder2 = strBuilder0.insert(0, (String) null);
      // Undeclared exception!
      try { 
        strBuilder2.charAt(736);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 736
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      int int0 = (-1138);
      StrBuilder strBuilder0 = new StrBuilder((-1138));
      int int1 = strBuilder0.indexOf((StrMatcher) null, (-1138));
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[6];
      charArray0[0] = '9';
      strBuilder_StrBuilderReader0.reset();
      charArray0[1] = '>';
      char char0 = 'J';
      charArray0[2] = 'J';
      charArray0[3] = '(';
      charArray0[4] = 'I';
      charArray0[5] = '4';
      String string0 = "D}lLC/NqG)O5ea<`\"R";
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("D}lLC/NqG)O5ea<`\"R");
      // Undeclared exception!
      try { 
        strBuilder1.append("D}lLC/NqG)O5ea<`\"R", (-1), 3894);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(117);
      char[] charArray0 = new char[5];
      charArray0[0] = 'Q';
      charArray0[1] = 'R';
      charArray0[2] = '0';
      charArray0[3] = 'u';
      charArray0[4] = '4';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadLeft((Object) null, 117, '4');
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[4];
      charArray0[0] = '4';
      charArray0[1] = '-';
      charArray0[2] = 't';
      charArray0[3] = 'X';
      strBuilder0.buffer = charArray0;
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      String string0 = strBuilder0.substring(0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      int int1 = 0;
      String string0 = strBuilder0.substring(0, 0);
      char[] charArray0 = new char[3];
      char char0 = ',';
      charArray0[0] = ',';
      charArray0[1] = 'E';
      charArray0[2] = '>';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StrBuilder strBuilder2 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
      StrBuilder strBuilder4 = strBuilder2.appendFixedWidthPadRight((Object) strBuilder1, 0, '~');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.add("");
      } catch(UnsupportedOperationException e) {
         //
         // add() is unsupported
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      boolean boolean0 = strBuilder0.contains("");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[7];
      charArray0[1] = '7';
      Writer writer0 = strBuilder_StrBuilderWriter0.append('\u0000');
      charArray0[2] = ':';
      charArray0[3] = 'x';
      charArray0[5] = 'x';
      charArray0[6] = '[';
      int int0 = 3599;
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.append((CharSequence) "", (-3628), 57);
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = Integer.MAX_VALUE;
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(Integer.MAX_VALUE);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2147483647
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.setNullText("");
      StrBuilder strBuilder2 = strBuilder0.replaceFirst("VV0,y');sGTOD -1??", "VV0,y');sGTOD -1??");
      StrBuilder strBuilder3 = strBuilder1.setNullText("");
      int int0 = strBuilder2.length();
      Reader reader0 = strBuilder1.asReader();
      StrBuilder strBuilder4 = strBuilder3.append((long) 0);
      StrBuilder strBuilder5 = strBuilder3.append((char[]) null);
      StrBuilder strBuilder6 = new StrBuilder();
      StrBuilder strBuilder7 = strBuilder5.append(strBuilder6, 0, 0);
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrBuilder strBuilder8 = strBuilder5.replaceAll(strMatcher0, "");
      StrBuilder strBuilder9 = strBuilder3.appendFixedWidthPadLeft((Object) "<`", 32, 'I');
      StrBuilder strBuilder10 = strBuilder1.insert(32, " @t'^9");
      StrBuilder strBuilder11 = strBuilder5.ensureCapacity(0);
      // Undeclared exception!
      try { 
        strBuilder6.setCharAt(32, '8');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder(0);
      StrBuilder strBuilder2 = strBuilder0.replaceAll("length must be valid", "Invalid length: ");
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder1);
      StrMatcher strMatcher0 = StrMatcher.charMatcher(';');
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      StrBuilder strBuilder4 = strBuilder0.insert(0, "Caught a SecurityException reading the system property '");
      StrBuilder strBuilder5 = strBuilder0.setNullText("");
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.toString();
      StrBuilder strBuilder1 = new StrBuilder(1194);
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      // Undeclared exception!
      try { 
        strBuilder1.substring(1194);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = ".7XkV^{qE&cTB=;";
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(".7XkV^{qE&cTB=;", (String) null);
      char char0 = 'i';
      StrBuilder strBuilder2 = strBuilder0.insert(0, (-699.87F));
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      String string1 = strBuilder2.midString(2194, 0);
      StrBuilder strBuilder3 = strBuilder2.replaceAll((StrMatcher) strMatcher_NoMatcher0, "");
      int int0 = strBuilder2.indexOf((StrMatcher) strMatcher_NoMatcher0, 3);
      boolean boolean0 = strBuilder0.contains('i');
      int int1 = strBuilder1.length();
      StrMatcher.NoMatcher strMatcher_NoMatcher1 = new StrMatcher.NoMatcher();
      StrMatcher strMatcher0 = StrMatcher.stringMatcher((String) null);
      StrBuilder strBuilder4 = strBuilder0.replace((StrMatcher) strMatcher_NoMatcher1, (String) null, 0, 7, 7);
      StrBuilder strBuilder5 = strBuilder4.appendNewLine();
      // Undeclared exception!
      try { 
        strBuilder5.delete(2194, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
      char[] charArray0 = new char[7];
      charArray0[0] = 'U';
      StrBuilder strBuilder2 = strBuilder1.ensureCapacity(0);
      charArray0[1] = 'P';
      charArray0[2] = 'L';
      charArray0[3] = '|';
      charArray0[4] = '\'';
      charArray0[5] = 'Y';
      char char0 = 'b';
      charArray0[6] = 'b';
      // Undeclared exception!
      try { 
        strBuilder1.getChars(0, 0, charArray0, 835);
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      boolean boolean0 = strBuilder0.startsWith("");
      // Undeclared exception!
      try { 
        strBuilder0.equalsIgnoreCase((StrBuilder) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      // Undeclared exception!
      try { 
        strBuilder0.replace((-1), 3525, "s");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      String string0 = "";
      boolean boolean0 = linkedList0.offerFirst("");
      LinkedList<String> linkedList1 = new LinkedList<String>();
      Spliterator<String> spliterator0 = linkedList1.spliterator();
      boolean boolean1 = linkedList0.addAll((Collection<? extends String>) linkedList1);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "org.apache.commons.lang.ArrayUtils");
      char char0 = '4';
      StrBuilder strBuilder2 = strBuilder0.append('4');
      StrBuilder strBuilder3 = strBuilder2.append((Object) strBuilder1);
      int int0 = 116;
      StrBuilder strBuilder4 = strBuilder2.append(false);
      // Undeclared exception!
      try { 
        strBuilder1.insert(116, "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 116
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("9%");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(5);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1409));
      String string0 = strBuilder0.toString();
      String string1 = strBuilder0.substring(0, 0);
      StrBuilder strBuilder1 = strBuilder0.append(true);
      int int0 = strBuilder0.indexOf((String) null);
      StrBuilder strBuilder2 = strBuilder0.append((float) (-1409));
      StrBuilder strBuilder3 = strBuilder2.append(true);
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      int int1 = strBuilder3.indexOf((StrMatcher) strMatcher_NoMatcher0, (-1409));
      // Undeclared exception!
      try { 
        strBuilder2.validateRange(585, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder0.append((Object) strBuilder1);
      StrBuilder strBuilder3 = strBuilder2.deleteCharAt(0);
      StrBuilder strBuilder4 = strBuilder2.appendNull();
      StrBuilder strBuilder5 = strBuilder0.replaceAll('m', '@');
      Reader reader0 = strBuilder0.asReader();
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrBuilder strBuilder6 = strBuilder4.replaceFirst(strMatcher0, "");
      StrBuilder strBuilder7 = strBuilder4.replace(0, 0, "java.compiler");
      StrBuilder strBuilder8 = strBuilder7.appendPadding(1562, '^');
      StrBuilder strBuilder9 = strBuilder4.appendPadding(0, 'F');
      char char0 = '@';
      String string0 = strBuilder4.leftString(0);
      StrBuilder strBuilder10 = strBuilder2.append('@');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      int int1 = (-681);
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray(0, (-681));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(678);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 678
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char char0 = '$';
      StrMatcher strMatcher0 = StrMatcher.charMatcher('$');
      int int0 = strBuilder0.indexOf(strMatcher0, 0);
      StrBuilder strBuilder1 = strBuilder0.appendPadding((-1), '$');
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex((-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("!|iuQb&JRqjg:^N3X");
      int int0 = (-584);
      char char0 = 'O';
      StrBuilder strBuilder1 = strBuilder0.appendPadding((-584), 'O');
      char char1 = '2';
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((-1138), (-1138), '2');
      StrBuilder strBuilder3 = strBuilder0.setNullText("!|iuQb&JRqjg:^N3X");
      // Undeclared exception!
      try { 
        strBuilder2.toCharArray((-584), (-1138));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -584
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.getNewLineText();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterString((String) null);
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      char char0 = '@';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(object0, (-4161), '@');
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      int int0 = strBuilder1.indexOf((StrMatcher) null, (-665));
      int int1 = 1368;
      String string1 = strBuilder0.midString(32, 1368);
      int int2 = 0;
      // Undeclared exception!
      try { 
        strBuilder1.validateRange((-4161), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -4161
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      int int0 = 57;
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex(57);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 57
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(31);
      StrBuilder strBuilder1 = strBuilder0.replaceFirst((String) null, (String) null);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("dq");
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("dq");
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher("dq");
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      // Undeclared exception!
      try { 
        strBuilder1.insert(2819, 4081L);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2819
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      String string0 = "1.1";
      StrBuilder strBuilder0 = new StrBuilder("1.1");
      int int0 = (-1919);
      // Undeclared exception!
      try { 
        strBuilder0.delete((-516), (-1919));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -516
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("|7}`y?Gb30.S8~2");
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.clear();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      StrBuilder strBuilder3 = strBuilder2.trim();
      int int0 = 57;
      String string0 = ";AtMxN-J2 zYC";
      // Undeclared exception!
      try { 
        strBuilder1.append(";AtMxN-J2 zYC", (-15), 57);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0);
      String string0 = "";
      char[] charArray0 = new char[8];
      charArray0[0] = 'v';
      charArray0[1] = '3';
      charArray0[2] = 'K';
      charArray0[3] = '-';
      charArray0[4] = '/';
      charArray0[5] = '(';
      charArray0[6] = '&';
      charArray0[7] = 'b';
      // Undeclared exception!
      try { 
        strMatcher0.isMatch(charArray0, 39, 101, (-1));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(32);
      StrBuilder strBuilder1 = strBuilder0.append((StringBuffer) null);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft(object0, 32, 'W');
      int int0 = strBuilder0.validateRange(32, 32);
      StrBuilder strBuilder3 = strBuilder0.append((double) 32);
      StrBuilder strBuilder4 = strBuilder3.append((StringBuffer) null, (-595), (-595));
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("ou/w");
      StringBuffer stringBuffer0 = new StringBuffer(0);
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0, 0, 0);
      StringBuffer stringBuffer1 = strBuilder0.toStringBuffer();
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-968));
      int int0 = 766;
      int int1 = (-3610);
      // Undeclared exception!
      try { 
        strBuilder0.append("VG*hA:8na", 766, (-3610));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity((-1904));
      StrBuilder strBuilder2 = strBuilder0.deleteFirst('R');
      strBuilder2.size = 0;
      // Undeclared exception!
      try { 
        strBuilder0.substring((-1904));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1904
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.reverse();
      int int0 = strBuilder0.hashCode();
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2153);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterMatcher(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "");
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("length must be valid", 2153, 39);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.deleteAll('S');
      int int0 = 34;
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft(32, 34, 'S');
      StrBuilder strBuilder3 = strBuilder1.clear();
      // Undeclared exception!
      try { 
        strBuilder1.charAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = 2636;
      char[] charArray0 = null;
      StrBuilder strBuilder1 = strBuilder0.append((char[]) null);
      String string1 = "fj/";
      StrBuilder strBuilder2 = strBuilder1.append("fj/");
      char char0 = 'O';
      // Undeclared exception!
      try { 
        strBuilder2.insert(102, 'O');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 102
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("xS=G<8'm'kP");
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrBuilder strBuilder2 = strBuilder0.append((char[]) null);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.contains('d');
      boolean boolean1 = strBuilder0.endsWith((String) null);
      StrBuilder strBuilder1 = strBuilder0.append(false);
      boolean boolean2 = strBuilder0.equals(strBuilder1);
      char[] charArray0 = new char[6];
      charArray0[0] = 'd';
      charArray0[1] = '`';
      charArray0[2] = 'd';
      charArray0[3] = 'd';
      charArray0[4] = 'd';
      charArray0[5] = 'd';
      strBuilder0.buffer = charArray0;
      StrBuilder strBuilder2 = strBuilder1.append("qi}|F%:=Wik");
      int int0 = strBuilder1.indexOf('d', 0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      int int1 = strBuilder2.size();
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = new StrBuilder((-1));
      StrBuilder strBuilder2 = strBuilder1.appendNull();
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadLeft((-1), (-1), 'c');
      char[] charArray0 = new char[9];
      charArray0[0] = 'c';
      charArray0[1] = 'N';
      charArray0[2] = '0';
      charArray0[3] = 'c';
      charArray0[4] = 'c';
      charArray0[5] = 'c';
      charArray0[6] = 'c';
      charArray0[7] = 'c';
      charArray0[8] = 'c';
      StrBuilder strBuilder4 = strBuilder3.append(charArray0);
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      char[] charArray1 = strBuilder0.toCharArray(5, 5);
      int int0 = strBuilder2.size();
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(0);
      strBuilder_StrBuilderReader0.mark(1862);
      strBuilder_StrBuilderReader0.close();
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      String string0 = null;
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher((String) null);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      int int0 = strBuilder_StrBuilderReader0.read();
      int int1 = strBuilder0.capacity();
      StrBuilder strBuilder2 = strBuilder1.minimizeCapacity();
      StrBuilder strBuilder3 = strBuilder0.clear();
      strBuilder_StrBuilderReader0.mark(32);
      char[] charArray0 = strBuilder0.getChars((char[]) null);
      int int2 = 0;
      strBuilder_StrBuilderReader0.mark(0);
      int int3 = (-1314);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, (-1314), 0);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("os.name");
      char[] charArray0 = new char[8];
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('?');
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, (String) null);
      charArray0[0] = '?';
      charArray0[1] = '<';
      charArray0[2] = '+';
      charArray0[3] = 'U';
      StrBuilder strBuilder2 = strBuilder0.insert(0, "xW|o+'");
      charArray0[4] = 'e';
      charArray0[5] = 'Z';
      charArray0[6] = '-';
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterChar('C');
      StrBuilder strBuilder3 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, (String) null);
      charArray0[7] = 'C';
      strBuilder0.buffer = charArray0;
      // Undeclared exception!
      try { 
        strBuilder0.contains("os.name");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = new StringBuffer();
      StringBuffer stringBuffer1 = stringBuffer0.append(0);
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      char[] charArray0 = new char[8];
      charArray0[0] = 'K';
      charArray0[1] = 'g';
      charArray0[2] = 'g';
      charArray0[3] = 'R';
      charArray0[4] = '<';
      charArray0[5] = 'D';
      charArray0[6] = '9';
      charArray0[7] = '6';
      StringBuffer stringBuffer2 = stringBuffer0.insert(0, charArray0, 0, 0);
      char[] charArray1 = strBuilder0.toCharArray();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      int int0 = strBuilder0.lastIndexOf("", 0);
      Writer writer0 = strBuilder1.asWriter();
      StrBuilder strBuilder2 = strBuilder0.deleteAll('|');
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("'N9V=C{n");
      StrBuilder strBuilder2 = strBuilder0.replaceFirst((StrMatcher) null, "'N9V=C{n");
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadLeft(object0, 0, 'C');
      char[] charArray0 = new char[7];
      charArray0[0] = 'C';
      charArray0[1] = 'C';
      charArray0[2] = 'C';
      charArray0[3] = 'C';
      charArray0[4] = 'C';
      charArray0[5] = 'C';
      charArray0[6] = 'C';
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance(charArray0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder3.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      StrBuilder strBuilder4 = strBuilder2.append(1062.7738F);
      int int0 = strBuilder3.lastIndexOf("ZVf5,%GDLW>>;t");
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("uZ`$x92E9)q8J)");
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst((StrMatcher) strMatcher_TrimMatcher0);
      String string0 = strBuilder1.rightString((-752));
      StrBuilder strBuilder2 = strBuilder0.appendNewLine();
      StrBuilder strBuilder3 = strBuilder0.deleteFirst((StrMatcher) strMatcher_TrimMatcher0);
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) strBuilder1;
      objectArray0[1] = (Object) strMatcher_TrimMatcher0;
      objectArray0[2] = (Object) strBuilder0;
      objectArray0[3] = (Object) "uZ`$x92E9)q8J)";
      objectArray0[4] = (Object) strMatcher_TrimMatcher0;
      objectArray0[5] = (Object) strBuilder1;
      objectArray0[6] = (Object) strBuilder3;
      StrBuilder strBuilder4 = strBuilder3.setNewLineText("} b](H#<");
      StrBuilder strBuilder5 = strBuilder1.appendWithSeparators(objectArray0, "");
      StrBuilder strBuilder6 = strBuilder0.appendWithSeparators(objectArray0, "");
      int int0 = strBuilder4.lastIndexOf("uZ`$x92E9)q8J)", 2);
      StrBuilder strBuilder7 = strBuilder2.setCharAt(101, '{');
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(false);
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      char[] charArray0 = new char[2];
      charArray0[0] = 'i';
      charArray0[1] = '0';
      int int0 = strMatcher0.isMatch(charArray0, 0, 0, 0);
      boolean boolean0 = strBuilder1.contains(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.replaceAll('0', 'i');
      boolean boolean1 = strBuilder2.contains("");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder3 = strBuilder1.appendWithSeparators((Collection) linkedList0, "org.apache.commons.lang.text.StrMatcher$StringMatcher");
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((String) null, 116, 116);
      int int0 = 4199;
      StrBuilder strBuilder2 = strBuilder0.append((String) null, 4199, 4199);
      String string0 = strBuilder2.rightString(0);
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray(4837, (-488));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('t', 't');
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(5089.0);
      String string0 = strBuilder0.leftString(2751);
      String string1 = strBuilder0.toString();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("5089.0");
      int int0 = strBuilder1.lastIndexOf(strMatcher0, 4);
      // Undeclared exception!
      try { 
        strBuilder0.getChars(4, (-4293), (char[]) null, 191);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -4293
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(5089.0);
      String string0 = strBuilder0.leftString(2751);
      String string1 = strBuilder0.toString();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("5089.0");
      int int0 = strBuilder1.lastIndexOf(strMatcher0, 4);
      // Undeclared exception!
      try { 
        strBuilder0.getChars(4, (-4293), (char[]) null, 191);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -4293
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      int int0 = 490;
      int int1 = strBuilder0.lastIndexOf((StrMatcher) null, 490);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      char[] charArray0 = new char[4];
      charArray0[0] = ' ';
      charArray0[1] = ']';
      charArray0[2] = 'C';
      charArray0[3] = '{';
      StrBuilder strBuilder2 = strBuilder1.append(charArray0);
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      int int2 = (-488);
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, (-488), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 3;
      StrBuilder strBuilder1 = strBuilder0.insert(0, '/');
      StrBuilder strBuilder2 = strBuilder1.appendNull();
      StrBuilder strBuilder3 = strBuilder1.insert(0, "");
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder0.getChars(3, 3, charArray0, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      String string0 = "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter";
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      char[] charArray0 = new char[6];
      charArray0[0] = 'g';
      charArray0[1] = 'M';
      charArray0[2] = '~';
      charArray0[3] = 'y';
      charArray0[4] = '_';
      charArray0[5] = ')';
      char[] charArray1 = strBuilder0.getChars(charArray0);
      int int0 = (-1);
      int int1 = 2052;
      // Undeclared exception!
      try { 
        strBuilder0.substring(2052, 115);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("R%AG|IjjC;~^)k");
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      char[] charArray0 = new char[4];
      charArray0[0] = '}';
      charArray0[1] = '7';
      charArray0[2] = 'j';
      charArray0[3] = '&';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst((StrMatcher) strMatcher_TrimMatcher0);
      StrBuilder strBuilder2 = strBuilder0.ensureCapacity(1306);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-3880));
      StrBuilder strBuilder1 = strBuilder0.replaceAll("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      int int0 = strBuilder0.indexOf("Y");
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Collection) linkedList0, "h4YSM~LaWm7u!{zb|");
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(0, 0, '-');
      StringBuffer stringBuffer0 = new StringBuffer();
      IntStream intStream0 = stringBuffer0.chars();
      StrBuilder strBuilder2 = strBuilder1.append(stringBuffer0);
      String string0 = "";
      StrBuilder strBuilder3 = strBuilder0.replaceAll("", "");
      int int0 = 0;
      StrBuilder strBuilder4 = strBuilder3.appendFixedWidthPadLeft(116, 0, 'X');
      StrBuilder strBuilder5 = strBuilder0.setLength(116);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder3.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("");
      // Undeclared exception!
      try { 
        strBuilder0.charAt((-1303));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1303
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrBuilder strBuilder1 = strBuilder0.deleteAll("@kZ].");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      int int0 = strBuilder1.indexOf(strMatcher0, 1776);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("_vak\"(@34");
      char char0 = 'V';
      StrBuilder strBuilder1 = strBuilder0.setCharAt(4, 'V');
      strBuilder0.size = 297;
      // Undeclared exception!
      try { 
        strBuilder0.replaceFirst('Q', 'S');
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 41
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "d@=3=H<iR#i");
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      // Undeclared exception!
      try { 
        strBuilder0.replace(strMatcher0, (String) null, 1, 97, 1);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("", "_,`~");
      boolean boolean0 = strBuilder0.startsWith("K(>'qJ8w3E5Ic~");
      int int0 = strBuilder0.indexOf('E', 101);
      String string0 = strBuilder1.toString();
      // Undeclared exception!
      try { 
        strBuilder1.append(strBuilder0, (-1), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.replaceAll("V?!U9", "V?!U9");
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(676);
      StrBuilder strBuilder1 = strBuilder0.trim();
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.setLength(3310);
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((Object) "jS-tIyni)ru?]h", 0, '[');
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      boolean boolean0 = strBuilder2.contains(strMatcher0);
      Writer writer0 = strBuilder2.asWriter();
      String string0 = strBuilder2.toString();
      String string1 = strBuilder0.substring(596);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(4);
      StrBuilder strBuilder1 = strBuilder0.delete(0, 4);
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      int int0 = strBuilder1.lastIndexOf(strMatcher0, 4);
      boolean boolean0 = strBuilder0.startsWith("ic.o<1E+FXcY.Ss");
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0, (-1644));
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.midString(0, 0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[0];
      int int0 = 887;
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 887, (-1));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("$=.ydI[mIO0>t3%");
      String string0 = strBuilder0.toString();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("", "");
      StrBuilder strBuilder2 = strBuilder0.appendNewLine();
      StrBuilder strBuilder3 = strBuilder2.setCharAt(3, 'm');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder3.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      char[] charArray0 = new char[5];
      charArray0[0] = 'm';
      charArray0[1] = 'm';
      charArray0[2] = 'm';
      charArray0[3] = 'm';
      charArray0[4] = 'm';
      // Undeclared exception!
      try { 
        strBuilder2.getChars((-2412), (-3518), charArray0, (-2412));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2412
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      int int0 = (-1);
      StrBuilder strBuilder0 = new StrBuilder((-1));
      char[] charArray0 = new char[7];
      charArray0[0] = '(';
      charArray0[1] = '^';
      charArray0[2] = 'h';
      charArray0[3] = '\"';
      charArray0[4] = 'U';
      charArray0[5] = 'O';
      charArray0[6] = '0';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 97, (-1985));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -1985
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      char[] charArray0 = new char[2];
      charArray0[0] = 'M';
      charArray0[1] = 'g';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StrBuilder strBuilder2 = strBuilder0.append((String) null, (-765), (-765));
      StrBuilder strBuilder3 = strBuilder0.append('\'');
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt((-765), 'M');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -765
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      int int0 = 0;
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight(0, 0, 'c');
      StrBuilder strBuilder3 = strBuilder0.insert(0, 'c');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      String string0 = null;
      StrBuilder strBuilder4 = new StrBuilder((String) null);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder4.new StrBuilderTokenizer();
      String string1 = strBuilder_StrBuilderTokenizer0.previousToken();
      int int1 = (-665);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.append((CharSequence) null, 0, (-665));
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = 588;
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(588);
      boolean boolean0 = strBuilder0.startsWith("");
      StrBuilder strBuilder2 = strBuilder1.deleteAll('t');
      StrBuilder strBuilder3 = strBuilder2.append((-1L));
      StrBuilder strBuilder4 = strBuilder2.append((long) 588);
      // Undeclared exception!
      try { 
        strBuilder4.delete(48, 588);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("<u]lQ{pQ'Du");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      char[] charArray0 = new char[7];
      charArray0[0] = '|';
      charArray0[1] = 'a';
      charArray0[2] = ';';
      charArray0[3] = 'l';
      charArray0[4] = '+';
      charArray0[5] = '`';
      charArray0[6] = '0';
      int int0 = strMatcher0.isMatch(charArray0, 9, 9, 102);
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("GGz]CaQsHamp");
      int int1 = strBuilder0.lastIndexOf(strMatcher0, 39);
      boolean boolean0 = strBuilder0.equals((Object) "<u]lQ{pQ'Du");
      // Undeclared exception!
      try { 
        strBuilder0.charAt(39);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 39
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(0L);
      int int0 = 57;
      // Undeclared exception!
      try { 
        strBuilder1.insert(57, (Object) strBuilder0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 57
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      String string0 = ";9I";
      StrBuilder strBuilder0 = new StrBuilder(";9I");
      int int0 = 5184;
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(5184, 5184, 'E');
      char[] charArray0 = new char[1];
      charArray0[0] = 'E';
      int int1 = 0;
      // Undeclared exception!
      try { 
        strBuilder1.append(charArray0, 0, (-2286));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: -2286
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder();
      int int0 = 2925;
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((Object) strBuilder1, 2925, '0');
      int int1 = 2226;
      // Undeclared exception!
      try { 
        strBuilder1.charAt(2226);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2226
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(1003);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[6];
      charArray0[0] = '=';
      charArray0[1] = 'H';
      charArray0[2] = 'Z';
      charArray0[3] = '8';
      charArray0[4] = ':';
      charArray0[5] = 'k';
      strBuilder_StrBuilderWriter0.write(charArray0);
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      char[] charArray1 = strBuilder0.toCharArray();
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      Reader reader0 = strBuilder0.asReader();
      strBuilder0.validateIndex(0);
      StrBuilder strBuilder1 = strBuilder0.insert(0, (-2672L));
      boolean boolean0 = strBuilder0.startsWith("8.R%");
      StrBuilder strBuilder2 = strBuilder0.appendNull();
      StrBuilder strBuilder3 = strBuilder2.append(false);
      StrBuilder strBuilder4 = strBuilder3.append(false);
      char[] charArray0 = strBuilder4.toCharArray(0, 5);
      StrBuilder strBuilder5 = strBuilder1.append("8.R%");
      char[] charArray1 = strBuilder2.toCharArray();
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, (String) null);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      int int1 = strBuilder0.lastIndexOf(strMatcher1, (-1));
      StrBuilder strBuilder2 = strBuilder0.replaceAll((String) null, (String) null);
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      int int2 = strBuilder0.lastIndexOf((String) null);
      int int3 = strBuilder_StrBuilderReader0.read();
      int int4 = strBuilder2.capacity();
      boolean boolean1 = strBuilder0.endsWith("");
      String string0 = strBuilder2.toString();
      char[] charArray0 = new char[4];
      charArray0[0] = 'g';
      charArray0[1] = '2';
      charArray0[2] = 'k';
      charArray0[3] = 'b';
      // Undeclared exception!
      try { 
        strBuilder2.insert(32, charArray0, 0, (-1482));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append("-z%?");
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight(0, 0, '[');
      StrBuilder strBuilder3 = strBuilder1.replaceFirst('u', ':');
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "-z%?");
      StringBuffer stringBuffer1 = stringBuffer0.append(0.0);
      StrBuilder strBuilder4 = strBuilder1.append(stringBuffer0);
      StrBuilder strBuilder5 = strBuilder2.setLength(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.nextToken();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      strBuilder2.size = 0;
      boolean boolean0 = strBuilder3.equals(object0);
      StrBuilder strBuilder6 = strBuilder5.insert(0, false);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher((String) null);
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setQuoteMatcher(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Iterator) strTokenizer0, (String) null);
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadRight((Object) strBuilder1, 0, 'Q');
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadRight((Object) strBuilder1, 0, 'F');
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((-2157.936F));
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder2 = strBuilder0.deleteAll('!');
      StrBuilder strBuilder3 = strBuilder2.replaceAll("", "");
      // Undeclared exception!
      try { 
        strBuilder0.insert(2373, false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2373
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-219));
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(57, 57, '%');
      String string0 = strBuilder0.rightString((-219));
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = 3549;
      // Undeclared exception!
      try { 
        strBuilder0.insert(3549, false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3549
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((Object) "user.dir");
      int int0 = 2709;
      // Undeclared exception!
      try { 
        strBuilder1.validateRange((-2555), 1657);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2555
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      strBuilder0.validateIndex(0);
      StrBuilder strBuilder1 = strBuilder0.replaceFirst((StrMatcher) null, "");
      StrBuilder strBuilder2 = strBuilder1.insert(0, true);
      // Undeclared exception!
      try { 
        strBuilder1.validateIndex((-756));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -756
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      char char0 = '9';
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('9', '9');
      char[] charArray0 = new char[2];
      charArray0[0] = '9';
      StrBuilder strBuilder2 = strBuilder0.append("");
      charArray0[1] = 'X';
      // Undeclared exception!
      try { 
        strBuilder1.append(charArray0, 0, (-2908));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: -2908
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("ew>'*>e");
      StrBuilder strBuilder1 = strBuilder0.appendNull();
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(")O_<");
      String string0 = strBuilder0.midString(117, (-1058));
      boolean boolean0 = strBuilder0.contains('-');
      StrBuilder strBuilder1 = strBuilder0.append(")O_<");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1395);
      char[] charArray0 = new char[5];
      charArray0[0] = 'm';
      charArray0[1] = 'D';
      charArray0[2] = '>';
      charArray0[3] = '^';
      charArray0[4] = '\"';
      // Undeclared exception!
      try { 
        strBuilder0.insert(1395, charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1395
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      Iterator<Object> iterator0 = linkedList0.descendingIterator();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(iterator0, ",]s]");
      // Undeclared exception!
      try { 
        strBuilder0.substring(108, 3804);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[1];
      charArray0[0] = 'c';
      StrBuilder strBuilder1 = strBuilder0.insert(0, charArray0);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      int int0 = 57;
      StrBuilder strBuilder0 = new StrBuilder(57);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Reader reader0 = strBuilder0.asReader();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      StrTokenizer strTokenizer0 = strBuilder1.asTokenizer();
      StrTokenizer strTokenizer1 = StrTokenizer.getCSVInstance();
      String string0 = strBuilder0.leftString(57);
      StrBuilder strBuilder2 = new StrBuilder("E:r6;U2++6#:s:v{m;");
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder2);
      Object object0 = strBuilder_StrBuilderTokenizer0.next();
      // Undeclared exception!
      try { 
        strBuilder1.append(strBuilder0, 57, (-2449));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      int int0 = strBuilder2.indexOf('&');
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder2 = new StrBuilder("");
      String string0 = strBuilder2.leftString(0);
      StrBuilder strBuilder3 = strBuilder1.insert(0, (Object) strBuilder2);
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder4 = strBuilder0.replaceFirst((StrMatcher) strMatcher_TrimMatcher0, "{}p6r%k;\"w'cDVpE&");
      int int0 = 1472;
      // Undeclared exception!
      try { 
        strBuilder4.insert(1472, "{}p6r%k;\"w'cDVpE&");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1472
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("HP-UX");
      StrBuilder strBuilder1 = strBuilder0.append(3435.218184447981);
      String string0 = strBuilder1.rightString((-3005));
      // Undeclared exception!
      try { 
        strBuilder0.insert(101, (float) 101);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 101
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      int int0 = (-1037);
      StrBuilder strBuilder0 = new StrBuilder((-1037));
      StrBuilder strBuilder1 = strBuilder0.append((-1037));
      int int1 = (-4887);
      String string0 = strBuilder1.midString((-1037), (-4887));
      char char0 = '|';
      StrBuilder strBuilder2 = strBuilder0.append((float) (-4887));
      char char1 = '{';
      StrBuilder strBuilder3 = strBuilder2.deleteFirst('{');
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder4 = strBuilder3.append(stringBuffer0);
      StrBuilder strBuilder5 = strBuilder1.deleteAll("");
      int int2 = strBuilder0.lastIndexOf('|', (-1));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrBuilder strBuilder6 = strBuilder0.deleteAll(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder1.setLength((-4887));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -4887
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.size();
      String string0 = strBuilder0.midString(31, 0);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.leftString(2127);
      int int0 = strBuilder0.lastIndexOf("");
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder strBuilder1 = strBuilder0.append((-898.2F));
      StringBuffer stringBuffer0 = null;
      try {
        stringBuffer0 = new StringBuffer((-659));
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("{jux1iA");
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.append(0);
      int int1 = 2043;
      // Undeclared exception!
      try { 
        strBuilder1.toCharArray(120, 2043);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("O[8N\u0006[T?Jn");
      StrBuilder strBuilder1 = strBuilder0.delete(0, 0);
      StrBuilder strBuilder2 = strBuilder1.setNewLineText("O[8N\u0006[T?Jn");
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder3 = strBuilder2.append(stringBuffer0);
      StrBuilder strBuilder4 = strBuilder0.insert(0, (double) 0);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      int int0 = 2463;
      StrBuilder strBuilder0 = new StrBuilder(2463);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "end < start");
      // Undeclared exception!
      try { 
        strBuilder1.setLength((-2371));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2371
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      String string0 = strBuilder0.leftString((-982));
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "java.class.version";
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("java.class.version", "PH0");
      // Undeclared exception!
      try { 
        strBuilder1.insert(1169, (Object) "PH0");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1169
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      String string0 = null;
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      int int0 = 137;
      // Undeclared exception!
      try { 
        strBuilder0.insert(137, (Object) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 137
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(9);
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      // Undeclared exception!
      try { 
        strBuilder0.insert(9, (-356.0F));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 9
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      char[] charArray0 = new char[6];
      charArray0[0] = 'H';
      charArray0[1] = 'k';
      charArray0[2] = '#';
      charArray0[3] = 'j';
      charArray0[4] = ' ';
      charArray0[5] = 'n';
      char[] charArray1 = strBuilder0.getChars(charArray0);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[4];
      charArray0[0] = 'S';
      charArray0[1] = 'E';
      charArray0[2] = '#';
      charArray0[3] = ')';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 0, 114);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 114
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[3];
      charArray0[0] = 'J';
      charArray0[1] = 'X';
      charArray0[2] = 'm';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 34, 34);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 34
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      StrBuilder strBuilder2 = strBuilder0.deleteAll(strMatcher0);
      StrBuilder strBuilder3 = strBuilder0.append((StrBuilder) null, (-395), 0);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrBuilder strBuilder2 = strBuilder0.append((StrBuilder) null, 0, 0);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      int int0 = strBuilder0.lastIndexOf((String) null);
      StrBuilder strBuilder2 = strBuilder1.deleteAll((String) null);
      // Undeclared exception!
      try { 
        strBuilder2.append("t/^-T Z", 0, 117);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      char[] charArray0 = new char[2];
      charArray0[0] = 'M';
      charArray0[1] = 'b';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StrBuilder strBuilder2 = strBuilder0.append((String) null, (-765), (-765));
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      String string0 = "vb3R(g&O3voD*z]B*3";
      StrBuilder strBuilder0 = new StrBuilder("vb3R(g&O3voD*z]B*3");
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("vb3R(g&O3voD*z]B*3");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst((StrMatcher) strMatcher_TrimMatcher0);
      StrBuilder strBuilder2 = strBuilder1.appendNewLine();
      StrBuilder strBuilder3 = strBuilder2.setNewLineText("vb3R(g&O3voD*z]B*3");
      StrBuilder strBuilder4 = strBuilder3.setLength(57);
      StrBuilder strBuilder5 = strBuilder3.appendFixedWidthPadLeft(57, 57, '9');
      StrBuilder strBuilder6 = strBuilder2.append((Object) strMatcher_TrimMatcher0);
      StrBuilder strBuilder7 = strBuilder6.deleteAll("vb3R(g&O3voD*z]B*3");
      StrBuilder strBuilder8 = strBuilder0.clear();
      StrBuilder strBuilder9 = strBuilder8.deleteFirst("vb3R(g&O3voD*z]B*3");
      // Undeclared exception!
      try { 
        strBuilder8.append(strBuilder0, 843, 492);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.indexOf('B');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int1 = strBuilder_StrBuilderReader0.read();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      int int2 = strBuilder_StrBuilderTokenizer0.size();
      char[] charArray0 = new char[2];
      charArray0[0] = 'B';
      int int3 = strBuilder_StrBuilderReader0.read(charArray0);
      charArray0[1] = 'B';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, (-1), (-1));
      int int4 = strBuilder0.indexOf('j', (-1));
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("_(_3smA]&i465");
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "");
      // Undeclared exception!
      try { 
        strBuilder1.insert((-1), (float) (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Oc\"k`kxZWCf/\"Ubqv");
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      boolean boolean0 = strBuilder0.contains('6');
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("lHiRI).CJW}");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('_');
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray((-3090), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3090
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      char[] charArray0 = new char[4];
      charArray0[0] = 'a';
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('a');
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_CharMatcher0);
      StrBuilder strBuilder1 = strBuilder0.replaceFirst((StrMatcher) strMatcher_CharMatcher0, ".~i},FxzNH`I");
      charArray0[1] = '_';
      charArray0[2] = 'S';
      charArray0[3] = 'l';
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance(charArray0);
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "4.9");
      StrBuilder strBuilder3 = strBuilder2.appendPadding(0, 'l');
      StrBuilder strBuilder4 = strBuilder0.append((-1L));
      StrBuilder strBuilder5 = strBuilder0.insert(20, 'k');
      StrBuilder strBuilder6 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder6.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(0);
      String string0 = strBuilder6.rightString(0);
      StrTokenizer strTokenizer1 = strBuilder1.asTokenizer();
      Reader reader0 = strBuilder2.asReader();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder6.new StrBuilderTokenizer();
      String string1 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder strBuilder7 = strBuilder1.append((double) 20);
      StrBuilder strBuilder8 = strBuilder7.appendPadding(0, '_');
      int int1 = strBuilder6.lastIndexOf('k', 98);
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) strBuilder0;
      StrBuilder strBuilder9 = strBuilder7.appendWithSeparators(objectArray0, "");
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      char char0 = '%';
      StrMatcher strMatcher1 = StrMatcher.stringMatcher((String) null);
      StrMatcher strMatcher2 = StrMatcher.charMatcher('%');
      StrMatcher strMatcher3 = StrMatcher.stringMatcher((String) null);
      StrMatcher strMatcher4 = StrMatcher.charMatcher('0');
      String string0 = strBuilder0.toString();
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex((-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrMatcher$CharMatcher");
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      int int0 = 0;
      int int1 = strBuilder0.lastIndexOf(strMatcher0, 0);
      StrBuilder strBuilder1 = strBuilder0.deleteAll("org.apache.commons.lang.text.StrMatcher$CharMatcher");
      int int2 = 2963;
      // Undeclared exception!
      try { 
        strBuilder1.insert(477, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 477
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      int int0 = 26;
      StrBuilder strBuilder0 = new StrBuilder(26);
      Reader reader0 = strBuilder0.asReader();
      String string0 = strBuilder0.rightString(26);
      boolean boolean0 = strBuilder0.contains(':');
      char[] charArray0 = null;
      StrBuilder strBuilder1 = strBuilder0.append((char[]) null, 26, 26);
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      StrBuilder strBuilder2 = strBuilder0.replaceAll(strMatcher0, "");
      boolean boolean1 = strBuilder1.isEmpty();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      int int1 = strBuilder_StrBuilderReader0.read();
      int int2 = (-1579);
      // Undeclared exception!
      try { 
        strBuilder2.substring((-1), 26);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = strBuilder0.toCharArray();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      strBuilder0.buffer = charArray0;
      String string0 = strBuilder0.substring(0, 0);
      StrBuilder strBuilder1 = strBuilder0.insert(0, (long) 0);
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("");
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("");
      StrBuilder strBuilder2 = strBuilder0.insert(0, 1.5);
      int int0 = strBuilder1.lastIndexOf(strMatcher0);
      int int1 = strBuilder1.indexOf("");
      StrBuilder strBuilder3 = strBuilder1.reverse();
      Reader reader0 = strBuilder3.asReader();
      // Undeclared exception!
      try { 
        strBuilder1.insert((-1), (double) (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("~HHV,UC\u0003hI%");
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0);
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder1 = strBuilder0.trim();
      String string0 = strBuilder1.leftString(2251);
      Writer writer0 = strBuilder0.asWriter();
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) "~HHV,UC\u0003hI%";
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Collection) linkedList0, "~HHV,UC\u0003hI%");
      objectArray0[1] = (Object) strTokenizer0;
      objectArray0[4] = (Object) "~HHV,UC\u0003hI%";
      objectArray0[5] = (Object) strMatcher0;
      boolean boolean0 = strBuilder1.contains("org.apache.commons.lang.text.StrBuilder");
  }
}
