/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 29 07:10:47 GMT 2020
 */

package org.apache.commons.lang.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.Writer;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.NoSuchElementException;
import java.util.function.Consumer;
import org.apache.commons.lang.text.StrBuilder;
import org.apache.commons.lang.text.StrMatcher;
import org.apache.commons.lang.text.StrTokenizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StrBuilder_ESTest extends StrBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((char[]) null);
      String string0 = "n";
      int int0 = (-240);
      int int1 = strBuilder0.lastIndexOf("n", (-240));
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(1, '/');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.append((double) 852);
      String string0 = strBuilder0.leftString(852);
      String string1 = strBuilder0.substring(2);
      String string2 = strBuilder0.leftString(852);
      boolean boolean0 = strBuilder0.isEmpty();
      int int0 = strBuilder0.lastIndexOf('2', 31);
      // Undeclared exception!
      try { 
        strBuilder0.insert(102, 0.0F);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 102
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(114);
      StrBuilder strBuilder1 = strBuilder0.append((float) 114);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrBuilder strBuilder2 = strBuilder1.setLength(0);
      StrBuilder strBuilder3 = strBuilder1.replaceAll((StrMatcher) strMatcher_NoMatcher0, " ^os/g_UFQ*0Ps]d~g");
      StrMatcher strMatcher0 = StrMatcher.stringMatcher(" ^os/g_UFQ*0Ps]d~g");
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadLeft((Object) strMatcher_NoMatcher0, 1163, '#');
      boolean boolean0 = strBuilder0.startsWith(" ^os/g_UFQ*0Ps]d~g");
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) strBuilder2;
      objectArray0[1] = (Object) strMatcher0;
      objectArray0[2] = (Object) strBuilder0;
      Object object0 = new Object();
      objectArray0[3] = object0;
      objectArray0[4] = (Object) strBuilder0;
      objectArray0[5] = (Object) strBuilder_StrBuilderTokenizer0;
      objectArray0[6] = (Object) strBuilder2;
      objectArray0[7] = (Object) strBuilder_StrBuilderTokenizer0;
      StrBuilder strBuilder5 = strBuilder4.appendWithSeparators(objectArray0, " ^os/g_UFQ*0Ps]d~g");
      StrBuilder strBuilder6 = strBuilder3.deleteFirst('#');
      StrBuilder strBuilder7 = strBuilder6.insert(114, ';');
      int int0 = strBuilder3.validateRange(1163, 1163);
      StrBuilder strBuilder8 = strBuilder4.appendFixedWidthPadLeft((Object) strBuilder_StrBuilderTokenizer0, 108, '#');
      int int1 = strBuilder3.lastIndexOf("java.vm.name", (-1526));
      StrBuilder strBuilder9 = strBuilder8.append(strBuilder4);
      StrBuilder strBuilder10 = strBuilder2.delete(108, 1163);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.append(1669.5841F);
      StrBuilder strBuilder2 = strBuilder0.deleteFirst('t');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      StrBuilder strBuilder3 = strBuilder2.append(object0);
      char[] charArray0 = new char[8];
      charArray0[0] = 't';
      charArray0[1] = '*';
      charArray0[2] = 't';
      charArray0[3] = 't';
      charArray0[4] = 'i';
      charArray0[5] = 't';
      charArray0[6] = 't';
      charArray0[7] = 't';
      // Undeclared exception!
      try { 
        strBuilder1.getChars(29, 29, charArray0, (-2875));
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("SV;Y)1N UDYR`");
      boolean boolean0 = strBuilder0.equals((Object) "SV;Y)1N UDYR`");
      String string0 = strBuilder0.rightString(866);
      StrBuilder strBuilder1 = strBuilder0.setNullText("SV;Y)1N UDYR`");
      StrBuilder strBuilder2 = strBuilder1.appendNull();
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(4, 1632, 'T');
      StrBuilder strBuilder2 = strBuilder1.minimizeCapacity();
      StrBuilder strBuilder3 = strBuilder1.insert(44, 44);
      StrBuilder strBuilder4 = strBuilder0.setNullText((String) null);
      StrBuilder strBuilder5 = strBuilder0.insert(4, "4/TD&M|tb/7MZl.e");
      StrBuilder strBuilder6 = strBuilder5.append(strBuilder4);
      char[] charArray0 = new char[1];
      charArray0[0] = 'T';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder6.lastIndexOf(strMatcher0, 44);
      StrBuilder strBuilder7 = strBuilder5.appendNewLine();
      StrBuilder strBuilder8 = strBuilder5.appendFixedWidthPadLeft((Object) strBuilder2, 0, '}');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(charArray0);
      strBuilder0.validateIndex(0);
      strBuilder_StrBuilderWriter0.flush();
      StrBuilder strBuilder9 = strBuilder0.append((float) 1632);
      StrBuilder strBuilder10 = strBuilder2.appendNull();
      int int1 = strBuilder3.indexOf('O', 44);
      int int2 = strBuilder2.indexOf("o`}", 44);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder");
      StrMatcher strMatcher0 = StrMatcher.stringMatcher(")3R ");
      StrMatcher strMatcher1 = StrMatcher.charMatcher('C');
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, ")3R ");
      StrBuilder strBuilder2 = strBuilder0.append(true);
      int int0 = strBuilder0.indexOf("org.apache.commons.lang.text.StrBuilder", 31);
      int int1 = strBuilder1.lastIndexOf('C', (-1));
      StrBuilder strBuilder3 = strBuilder0.replaceFirst('C', 'C');
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.getNullText();
      int int0 = strBuilder0.indexOf((StrMatcher) null);
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "2~bxkcvXSHUVpk=i");
      int int1 = 580;
      // Undeclared exception!
      try { 
        strBuilder1.replace(580, (-1), (String) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      int int0 = 31;
      StrBuilder strBuilder0 = new StrBuilder(31);
      boolean boolean0 = strBuilder0.contains('h');
      int int1 = strBuilder0.indexOf('h');
      StrMatcher strMatcher0 = null;
      StrBuilder strBuilder1 = strBuilder0.deleteAll((StrMatcher) null);
      StrBuilder strBuilder2 = strBuilder1.append('h');
      boolean boolean1 = false;
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1), (Object) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[3];
      charArray0[0] = 'A';
      charArray0[1] = '';
      charArray0[2] = 'I';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 2, 2);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 2
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(", Length: ");
      StrBuilder strBuilder1 = new StrBuilder(0);
      char char0 = '?';
      StrBuilder strBuilder2 = strBuilder1.deleteAll('?');
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      StrBuilder strBuilder3 = strBuilder0.insert(0, 2892.527F);
      char[] charArray0 = new char[7];
      charArray0[0] = '?';
      StrBuilder strBuilder4 = strBuilder3.deleteFirst(", Length: ");
      // Undeclared exception!
      try { 
        strBuilder2.validateIndex((-2891));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2891
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("XNb[-kk.~#94StxUn%");
      char[] charArray0 = strBuilder0.toCharArray();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(102, 102, 'c');
      int int0 = strBuilder0.indexOf('2', 48);
      int int1 = strBuilder0.indexOf("XNb[-kk.~#94StxUn%", 48);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder");
      StrMatcher strMatcher0 = StrMatcher.stringMatcher(")3R ");
      char char0 = 'C';
      StrMatcher strMatcher1 = StrMatcher.charMatcher('C');
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, ")3R ");
      StrBuilder strBuilder2 = strBuilder1.append(true);
      int int0 = 31;
      int int1 = strBuilder0.indexOf("org.apache.commons.lang.text.StrBuilder", 31);
      // Undeclared exception!
      try { 
        strBuilder2.insert(1483, (Object) strBuilder0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1483
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid length: ");
      char[] charArray0 = new char[8];
      charArray0[0] = 'H';
      charArray0[1] = '|';
      charArray0[2] = '&';
      charArray0[3] = '5';
      charArray0[4] = 'N';
      charArray0[5] = 'N';
      charArray0[6] = 'F';
      charArray0[7] = 'E';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      StrBuilder strBuilder2 = strBuilder0.deleteFirst(strMatcher0);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder strBuilder3 = strBuilder2.replace(2, 4044, "Invalid length: ");
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append("NLY)Ex");
      String string0 = strBuilder1.substring(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[9];
      charArray0[0] = '>';
      charArray0[1] = ')';
      charArray0[2] = '$';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      strBuilder_StrBuilderTokenizer0.forEachRemaining(consumer0);
      charArray0[3] = '^';
      charArray0[4] = 'j';
      Object object0 = strBuilder_StrBuilderTokenizer0.previous();
      StrBuilder strBuilder2 = strBuilder0.insert(0, charArray0);
      charArray0[5] = 'h';
      charArray0[6] = '8';
      charArray0[7] = '-';
      charArray0[8] = 'U';
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance(charArray0);
      String string1 = strBuilder_StrBuilderTokenizer0.previousToken();
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 2174, 1792);
      StrBuilder strBuilder3 = strBuilder0.append((long) 1792);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("C");
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('F');
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_CharMatcher0, 1846);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(0, 0, 'V');
      int int1 = strBuilder0.hashCode();
      StrBuilder strBuilder2 = strBuilder1.appendPadding(0, 'V');
      // Undeclared exception!
      try { 
        strBuilder2.deleteCharAt(1);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      int int0 = 114;
      StrBuilder strBuilder0 = new StrBuilder(114);
      StrBuilder strBuilder1 = strBuilder0.append((float) 114);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrBuilder strBuilder2 = strBuilder1.setLength(0);
      StrBuilder strBuilder3 = strBuilder1.replaceAll((StrMatcher) strMatcher_NoMatcher0, " ^os/g_UFQ*0Ps]d~g");
      int int1 = 1163;
      StrMatcher strMatcher0 = StrMatcher.stringMatcher(" ^os/g_UFQ*0Ps]d~g");
      char char0 = '#';
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadLeft((Object) strMatcher_NoMatcher0, 1163, '#');
      boolean boolean0 = strBuilder0.startsWith(" ^os/g_UFQ*0Ps]d~g");
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) strBuilder2;
      objectArray0[1] = (Object) strMatcher0;
      objectArray0[2] = (Object) strBuilder0;
      Object object0 = new Object();
      objectArray0[3] = object0;
      objectArray0[4] = (Object) strBuilder0;
      objectArray0[5] = (Object) strBuilder_StrBuilderTokenizer0;
      objectArray0[6] = (Object) strBuilder2;
      objectArray0[7] = (Object) strBuilder_StrBuilderTokenizer0;
      StrBuilder strBuilder5 = strBuilder4.appendWithSeparators(objectArray0, " ^os/g_UFQ*0Ps]d~g");
      StrBuilder strBuilder6 = strBuilder3.deleteFirst('#');
      char char1 = ';';
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      // Undeclared exception!
      try { 
        strBuilder4.replaceAll((StrMatcher) strMatcher_TrimMatcher0, "startIndex must be valid");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("jQ0y~#tarnN$g;wP");
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("jQ0y~#tarnN$g;wP");
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "jQ0y~#tarnN$g;wP");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder0.midString(2822, 3);
      Object object0 = strBuilder_StrBuilderTokenizer0.next();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoredChar('~');
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "jQ0y~#tarnN$g;wP");
      char[] charArray0 = new char[0];
      StrBuilder strBuilder3 = strBuilder2.append(charArray0, 0, 0);
      StrBuilder strBuilder4 = strBuilder0.appendPadding(0, '~');
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(1.0);
      StrBuilder strBuilder2 = strBuilder0.replaceAll('[', '+');
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      int int0 = strBuilder2.indexOf(strMatcher0, 5);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(967);
      StrBuilder strBuilder1 = strBuilder0.deleteAll('e');
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Iterator<String> iterator0 = linkedList0.iterator();
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Collection) linkedList0, "$t:vN>d\"4+");
      boolean boolean0 = strBuilder1.startsWith("StrTokenizer[not tokenized yet]");
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder((-254));
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[6];
      charArray0[0] = '-';
      charArray0[1] = '<';
      charArray0[2] = '4';
      charArray0[3] = 'H';
      charArray0[4] = 'h';
      charArray0[5] = ' ';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0, 0, 0);
      strBuilder1.size = 1803;
      // Undeclared exception!
      try { 
        strBuilder1.replace(384, 1220, "");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.insert(0, (long) 0);
      char[] charArray0 = new char[4];
      charArray0[0] = '-';
      charArray0[1] = '/';
      charArray0[2] = '';
      charArray0[3] = '';
      char[] charArray1 = strBuilder0.getChars(charArray0);
      StrBuilder strBuilder2 = strBuilder0.deleteFirst("!Sao");
      String string0 = strBuilder2.toString();
      StrBuilder strBuilder3 = strBuilder2.deleteCharAt(0);
      StrBuilder strBuilder4 = strBuilder2.replaceAll("0", "");
      StringBuffer stringBuffer0 = strBuilder2.toStringBuffer();
      int int0 = strBuilder2.indexOf('-', (-1132));
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrBuilder strBuilder5 = strBuilder0.replaceFirst(strMatcher0, "N4eXY4[DNQa_+V3v&Fi");
      StrBuilder strBuilder6 = strBuilder2.append(false);
      StrBuilder strBuilder7 = strBuilder6.appendFixedWidthPadRight((-1), 0, 'o');
      StrBuilder strBuilder8 = strBuilder6.append(strBuilder4);
      StrBuilder strBuilder9 = strBuilder7.deleteAll("0");
      StrBuilder strBuilder10 = strBuilder6.append((double) (-1));
      boolean boolean0 = strBuilder4.equals(strBuilder6);
      StrMatcher strMatcher1 = StrMatcher.commaMatcher();
      int int1 = strBuilder6.lastIndexOf(strMatcher1);
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt((-1726), '/');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1726
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[8];
      charArray0[0] = '&';
      charArray0[1] = 'i';
      charArray0[2] = 'Q';
      charArray0[3] = '9';
      charArray0[4] = '1';
      charArray0[5] = '5';
      charArray0[6] = 'y';
      charArray0[7] = ':';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      String string0 = "Invalid length: ";
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "Invalid length: ");
      StrBuilder strBuilder2 = new StrBuilder();
      boolean boolean0 = strBuilder0.equals(strBuilder2);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      int int0 = 814;
      // Undeclared exception!
      try { 
        strBuilder2.insert(814, charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 814
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      int int0 = 81;
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      String string0 = "(Z4<GW=s";
      char[] charArray0 = new char[2];
      charArray0[0] = 'd';
      charArray0[1] = 'C';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      int int1 = 2;
      String string1 = strBuilder0.midString(0, 2);
      // Undeclared exception!
      try { 
        strBuilder0.append("(Z4<GW=s", 81, 5);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      char[] charArray0 = new char[4];
      charArray0[0] = '(';
      charArray0[1] = 'g';
      charArray0[2] = 'F';
      charArray0[3] = '\"';
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset(charArray0);
      Consumer<StrBuilder> consumer0 = (Consumer<StrBuilder>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      strBuilder_StrBuilderTokenizer0.forEachRemaining(consumer0);
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder strBuilder1 = strBuilder0.reverse();
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 1745, (-1277));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -1277
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      String string0 = "file.separator";
      StrBuilder strBuilder0 = new StrBuilder("file.separator");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset("file.separator");
      StrTokenizer strTokenizer1 = strBuilder_StrBuilderTokenizer0.setEmptyTokenAsNull(false);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "file.separator");
      int int0 = 39;
      char char0 = strBuilder1.charAt(39);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      int int1 = (-1170);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("", 39, (-1170));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      int int0 = (-704);
      StrBuilder strBuilder0 = new StrBuilder((-704));
      int int1 = 0;
      String string0 = strBuilder0.leftString(0);
      // Undeclared exception!
      try { 
        strBuilder0.delete((-704), (-704));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -704
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(4);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[7];
      charArray0[0] = '@';
      charArray0[1] = 'z';
      charArray0[2] = 'F';
      charArray0[3] = '?';
      charArray0[4] = 'T';
      charArray0[5] = ',';
      charArray0[6] = '4';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 4, 4);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      String string0 = "bZqq.e zTD^5(plViv";
      StrBuilder strBuilder0 = new StrBuilder("bZqq.e zTD^5(plViv");
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("bZqq.e zTD^5(plViv");
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      int int1 = 2894;
      int int2 = strBuilder0.lastIndexOf('_', 2894);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[0];
      int int3 = 585;
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, (-1), 585);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(39);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0);
      char[] charArray0 = new char[9];
      charArray0[0] = '8';
      charArray0[1] = '-';
      charArray0[2] = 'H';
      charArray0[3] = ';';
      charArray0[4] = '}';
      charArray0[5] = '@';
      charArray0[6] = 'A';
      charArray0[7] = 'i';
      charArray0[8] = 's';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      StrBuilder strBuilder2 = strBuilder1.replaceFirst(strMatcher0, "java.compiler");
      StrBuilder strBuilder3 = strBuilder1.appendFixedWidthPadRight((-1), 39, '8');
      StrBuilder strBuilder4 = strBuilder0.ensureCapacity(39);
      Writer writer0 = strBuilder0.asWriter();
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrMatcher strMatcher2 = StrMatcher.stringMatcher("mOp}gB^/(q");
      boolean boolean0 = strBuilder4.contains((StrMatcher) strMatcher_TrimMatcher0);
      StrBuilder strBuilder5 = strBuilder0.append(0);
      // Undeclared exception!
      try { 
        strBuilder4.replace(114, 39, "java.compiler");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append("NLY)Ex");
      String string0 = strBuilder1.substring(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[9];
      charArray0[0] = '>';
      charArray0[1] = ')';
      charArray0[2] = '$';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      charArray0[3] = '^';
      charArray0[4] = 'j';
      char char0 = 'h';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.previous();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 651;
      char[] charArray0 = new char[5];
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      charArray0[0] = 'J';
      charArray0[1] = '+';
      charArray0[2] = '+';
      charArray0[3] = 'r';
      char char0 = 'a';
      strBuilder0.size = 115;
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        strBuilder0.append(false);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("x1Fb");
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder1 = strBuilder0.replaceAll("Invalid startIndex: ", "x1Fb");
      StrBuilder strBuilder2 = strBuilder0.clear();
      // Undeclared exception!
      try { 
        strBuilder2.insert(39, (float) 39);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 39
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.lastIndexOf('N', (-759));
      int int1 = strBuilder0.size();
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder");
      int int0 = strBuilder0.hashCode();
      int int1 = 253;
      char[] charArray0 = new char[4];
      int int2 = 1214;
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) "org.apache.commons.lang.text.StrBuilder", 1214, 'g');
      // Undeclared exception!
      try { 
        strBuilder0.getChars((-2083), (-1367), charArray0, 253);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2083
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-68);
      char[] charArray0 = new char[1];
      charArray0[0] = '&';
      // Undeclared exception!
      try { 
        strBuilder0.getChars((-68), (-68), charArray0, (-68));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -68
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Jo$BXB=:X");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(1);
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("Jo$BXB=:X");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.trim();
      char[] charArray0 = new char[8];
      charArray0[0] = 'u';
      charArray0[1] = '6';
      charArray0[2] = ':';
      charArray0[3] = 'r';
      charArray0[4] = 'Z';
      charArray0[5] = 'y';
      charArray0[6] = '{';
      charArray0[7] = 'p';
      StrBuilder strBuilder3 = strBuilder0.append(charArray0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      String string0 = null;
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = new StrBuilder();
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      Reader reader0 = strBuilder1.asReader();
      // Undeclared exception!
      try { 
        strBuilder0.delete(353, 2647);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      int int0 = strBuilder_StrBuilderTokenizer0.size();
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance();
      StrTokenizer strTokenizer1 = StrTokenizer.getTSVInstance();
      String string0 = strBuilder0.substring(0, 0);
      StrTokenizer strTokenizer2 = strBuilder_StrBuilderTokenizer0.reset();
      StrBuilder strBuilder1 = strBuilder0.appendPadding(0, ']');
      StrBuilder strBuilder2 = strBuilder0.insert(0, (char[]) null);
      StrBuilder strBuilder3 = strBuilder2.deleteAll('\\');
      StrBuilder strBuilder4 = strBuilder3.appendFixedWidthPadRight((Object) "StrTokenizer[not tokenized yet]", 0, ']');
      StrBuilder strBuilder5 = strBuilder2.append((Object) "StrTokenizer[not tokenized yet]");
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) strBuilder1;
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      objectArray0[1] = object0;
      objectArray0[2] = (Object) strBuilder4;
      StrBuilder strBuilder6 = strBuilder3.appendWithSeparators(objectArray0, (String) null);
      String string1 = strBuilder3.rightString(0);
      String string2 = strBuilder_StrBuilderTokenizer0.getContent();
      // Undeclared exception!
      try { 
        strBuilder1.insert((-1249), "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1249
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      int int0 = (-1002);
      StrBuilder strBuilder0 = new StrBuilder((-1002));
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      int int1 = strBuilder0.lastIndexOf(strMatcher0, (-1002));
      String string0 = "";
      boolean boolean0 = strBuilder0.startsWith("");
      char char0 = '1';
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('1');
      StrBuilder strBuilder2 = strBuilder1.append('1');
      StringBuffer stringBuffer0 = strBuilder1.toStringBuffer();
      StrBuilder strBuilder3 = strBuilder0.setNullText("");
      String string1 = "";
      // Undeclared exception!
      try { 
        strBuilder3.append("", 0, (-1002));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      int int0 = 313;
      StrBuilder strBuilder0 = new StrBuilder(313);
      int int1 = 0;
      String string0 = strBuilder0.midString(0, 0);
      char[] charArray0 = new char[0];
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance(charArray0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "E;");
      boolean boolean0 = strBuilder0.endsWith("");
      StrBuilder strBuilder2 = strBuilder0.deleteAll("");
      StrBuilder strBuilder3 = strBuilder1.deleteAll("E;");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      int int2 = 1348;
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        strBuilder2.append(stringBuffer0, 1348, 1534);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(false);
      StrBuilder strBuilder2 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      StrBuilder strBuilder3 = strBuilder1.append(true);
      strBuilder_StrBuilderReader0.close();
      StrBuilder strBuilder4 = strBuilder1.setNullText("Ma=vT)!+");
      strBuilder_StrBuilderReader0.mark(0);
      String string0 = strBuilder4.getNullText();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("%je3[7]bK`QQ lvRP)");
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 1084);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2129));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0, 0);
      strBuilder_StrBuilderReader0.mark((-2129));
      char char0 = '[';
      int int1 = strBuilder0.indexOf('[', (-2129));
      String string0 = "";
      int int2 = strBuilder0.indexOf("", (-2129));
      int int3 = 117;
      // Undeclared exception!
      try { 
        strBuilder0.insert(117, false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 117
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[5];
      charArray0[0] = ';';
      charArray0[1] = ')';
      charArray0[2] = 'T';
      charArray0[3] = '_';
      charArray0[4] = ';';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0, 0, 0);
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      int int1 = strBuilder0.indexOf('d', (-1329));
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceAll('[', '+');
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      String string0 = "vGur|?uK:!^9\"#";
      StrBuilder strBuilder0 = new StrBuilder("vGur|?uK:!^9\"#");
      int int0 = (-1);
      String string1 = strBuilder0.rightString((-1));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int1 = 491;
      char[] charArray0 = new char[7];
      charArray0[0] = 'R';
      charArray0[1] = 'u';
      charArray0[2] = 's';
      charArray0[3] = 'f';
      char char0 = '0';
      charArray0[4] = '0';
      charArray0[5] = 'z';
      charArray0[6] = 'r';
      // Undeclared exception!
      try { 
        strBuilder0.insert(491, charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 491
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append("Etf2ICCj5{R ~\"w", 0, 0);
      StrBuilder strBuilder2 = strBuilder0.insert(0, "");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder3 = strBuilder1.appendWithSeparators((Collection) linkedList0, "|");
      // Undeclared exception!
      try { 
        strBuilder0.insert((-388), "Etf2ICCj5{R ~\"w");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -388
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(101);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("");
      StrBuilder strBuilder2 = strBuilder0.append('>');
      StrBuilder strBuilder3 = strBuilder0.trim();
      String string0 = strBuilder2.midString(0, 101);
      int int0 = strBuilder0.validateRange(0, 0);
      StrBuilder strBuilder4 = strBuilder0.append((-1.0));
      StrBuilder strBuilder5 = strBuilder4.minimizeCapacity();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder5.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder6 = strBuilder5.append("");
      Object[] objectArray0 = new Object[3];
      Object object0 = new Object();
      objectArray0[0] = object0;
      objectArray0[1] = (Object) "";
      StrBuilder strBuilder7 = strBuilder6.deleteFirst('n');
      objectArray0[2] = (Object) strTokenizer0;
      StrBuilder strBuilder8 = strBuilder2.appendWithSeparators(objectArray0, "");
      int int1 = strBuilder8.lastIndexOf('B');
      StrBuilder strBuilder9 = strBuilder6.replaceFirst("M}5/PN2!ph[,", ">");
      char[] charArray0 = new char[1];
      charArray0[0] = '>';
      // Undeclared exception!
      try { 
        strBuilder0.insert(2344, charArray0, 0, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2344
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      String string0 = "Invalid length: ";
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "Invalid length: ");
      Object object0 = new Object();
      strBuilder0.size = 2;
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight(object0, 2, 'a');
      StrBuilder strBuilder3 = strBuilder2.append(0.0F);
      // Undeclared exception!
      try { 
        strBuilder1.delete(4471, (-3665));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "org.apache.commons.lang.text.StrBuilder$StrBuilderReader";
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      int int0 = 0;
      StrBuilder strBuilder2 = new StrBuilder();
      StrBuilder strBuilder3 = strBuilder0.insert(0, (Object) strBuilder2);
      String string1 = strBuilder2.getNewLineText();
      String string2 = "awt.toolkit";
      int int1 = (-139);
      // Undeclared exception!
      try { 
        strBuilder3.insert((-139), (float) (-139));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -139
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[6];
      charArray0[0] = '-';
      charArray0[1] = '<';
      charArray0[2] = '4';
      charArray0[3] = 'H';
      charArray0[4] = 'h';
      charArray0[5] = ' ';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0, 0, 0);
      String string0 = strBuilder1.midString(0, (-268));
      // Undeclared exception!
      try { 
        strBuilder1.replace(384, 1220, "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      char char0 = 'u';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(0, 625, (char[]) null, 625);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 625
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      Object[] objectArray0 = new Object[0];
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "");
      StrBuilder strBuilder2 = strBuilder0.append((Object) "");
      String string0 = strBuilder0.rightString(1867);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      String string0 = "org.apache.commons.lang.text.StrBuilder";
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder");
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.setLength(0);
      char[] charArray0 = new char[0];
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      String string1 = "";
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Collection) linkedList0, "");
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder3 = strBuilder1.replaceAll(strMatcher0, "org.apache.commons.lang.text.StrBuilder");
      // Undeclared exception!
      try { 
        strBuilder1.charAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      String string0 = strBuilder0.substring(5);
      StrBuilder strBuilder1 = strBuilder0.deleteAll('7');
      StrBuilder strBuilder2 = strBuilder1.deleteFirst("java.ext.dirs");
      char[] charArray0 = new char[0];
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      StrBuilder strBuilder3 = strBuilder2.replaceAll((StrMatcher) strMatcher_CharSetMatcher0, "pache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      String string1 = strBuilder3.toString();
      StrBuilder strBuilder4 = strBuilder2.deleteAll("startIndex must be valid");
      StrBuilder strBuilder5 = strBuilder4.appendFixedWidthPadLeft(4, (-78), 'e');
      StrBuilder strBuilder6 = strBuilder0.deleteAll('7');
      StrBuilder strBuilder7 = strBuilder6.setCharAt(0, '>');
      StrBuilder strBuilder8 = strBuilder6.trim();
      char[] charArray1 = new char[9];
      charArray1[0] = '7';
      charArray1[1] = '>';
      charArray1[2] = '#';
      charArray1[3] = 'e';
      charArray1[4] = '7';
      charArray1[5] = 'A';
      charArray1[6] = '7';
      charArray1[7] = '7';
      charArray1[8] = 'N';
      StrBuilder strBuilder9 = strBuilder0.insert(0, charArray1, 0, 0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "^k`xoqV5\\W[(!!DLlB";
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.append("^k`xoqV5W[(!!DLlB", 0, 0);
      char[] charArray0 = new char[0];
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      int int1 = strBuilder1.indexOf(strMatcher0, (-1));
      // Undeclared exception!
      try { 
        strBuilder1.deleteCharAt(150);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 150
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(114);
      StrBuilder strBuilder2 = strBuilder0.setCharAt(0, '');
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("rPEX^{_G?H");
      int int0 = (-1405);
      // Undeclared exception!
      try { 
        strBuilder0.setLength((-1405));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1405
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(", Length: ");
      StrBuilder strBuilder1 = new StrBuilder(0);
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      StrBuilder strBuilder2 = strBuilder0.insert(0, 2892.527F);
      char[] charArray0 = new char[7];
      StrBuilder strBuilder3 = strBuilder2.deleteFirst("boKG;_*|jD+S<=[.W");
      charArray0[2] = 'q';
      charArray0[3] = 'f';
      int int0 = 2361;
      // Undeclared exception!
      try { 
        strBuilder2.append(charArray0, 2361, 2361);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 2361
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      int int0 = (-381);
      StrBuilder strBuilder0 = new StrBuilder((-381));
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) null, "77D\";$vmDHbrkC`g$o");
      StrBuilder strBuilder2 = strBuilder1.appendNull();
      String string0 = null;
      // Undeclared exception!
      try { 
        strBuilder2.insert((-381), true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -381
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      int int0 = (-5408);
      StrBuilder strBuilder0 = new StrBuilder((-5408));
      int int1 = (-143);
      // Undeclared exception!
      try { 
        strBuilder0.setLength((-143));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -143
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.replace(0, 0, "");
      StrBuilder strBuilder2 = strBuilder1.appendNull();
      Reader reader0 = strBuilder2.asReader();
      int int0 = (-664);
      int int1 = strBuilder0.lastIndexOf("", (-664));
      int int2 = (-1);
      // Undeclared exception!
      try { 
        strBuilder0.charAt((-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[1];
      charArray0[0] = '`';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.replace((StrMatcher) strMatcher_CharSetMatcher0, "", 0, 0, 0);
      int int1 = 3;
      // Undeclared exception!
      try { 
        strBuilder0.validateRange(3, 3);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      String string0 = "g!(,\\-";
      StrBuilder strBuilder0 = new StrBuilder("g!(,-");
      StrBuilder strBuilder1 = strBuilder0.deleteAll("g!(,-");
      int int0 = 0;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoreEmptyTokens(true);
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Iterator) strTokenizer0, "g!(,-");
      // Undeclared exception!
      try { 
        strBuilder0.substring((-1106));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1106
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.insert(0, (char[]) null, 500, 500);
      StrBuilder strBuilder2 = strBuilder1.append((char[]) null);
      String string0 = "n";
      StrBuilder strBuilder3 = strBuilder0.append((-2836.9858F));
      int int0 = strBuilder0.lastIndexOf("n", (-240));
      StrBuilder strBuilder4 = strBuilder3.setCharAt(1, '/');
      String string1 = strBuilder3.substring(0, 0);
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt((-240), 'K');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -240
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      String string0 = strBuilder0.midString(48, 48);
      StrBuilder strBuilder1 = strBuilder0.appendPadding(0, 'p');
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      String string0 = "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer";
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[4];
      charArray0[0] = 'S';
      charArray0[1] = '-';
      char[] charArray1 = new char[9];
      charArray1[0] = '-';
      charArray1[1] = ',';
      charArray1[2] = '-';
      charArray1[3] = 'S';
      charArray1[4] = '-';
      charArray1[5] = 'S';
      charArray1[6] = 'S';
      charArray1[7] = 'S';
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.replace((StrMatcher) null, "java.vm.version", 0, 0, 0);
      StrBuilder strBuilder2 = strBuilder1.replaceAll((StrMatcher) null, "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      charArray1[8] = 'S';
      int int1 = 699;
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray1, 699, 699);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 699
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("N2[");
      StringBuffer stringBuffer0 = null;
      int int0 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt((-3219));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3219
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(0, 0, ':');
      int int0 = 1339;
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder0.getChars(1339, 1339, charArray0, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1339
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2079);
      StrBuilder strBuilder1 = strBuilder0.setNewLineText((String) null);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Collection) linkedList0, (String) null);
      char[] charArray0 = new char[2];
      charArray0[0] = '}';
      boolean boolean0 = linkedList0.add((String) null);
      charArray0[1] = 'P';
      // Undeclared exception!
      try { 
        strBuilder2.getChars(2079, 2079, charArray0, 2079);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2079
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      int int0 = strBuilder0.lastIndexOf("");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("");
      int int1 = (-3842);
      int int2 = 1085;
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight((-3842), 1085, 'd');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrBuilder strBuilder3 = strBuilder1.deleteAll('d');
      int int3 = 0;
      strBuilder_StrBuilderReader0.mark(0);
      StrBuilder strBuilder4 = strBuilder1.append((long) 0);
      Writer writer0 = strBuilder1.asWriter();
      // Undeclared exception!
      try { 
        strBuilder1.insert((-3842), 0L);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3842
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[3];
      charArray0[0] = 'A';
      charArray0[1] = '';
      charArray0[2] = 'I';
      strBuilder_StrBuilderWriter0.write(charArray0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 3520;
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) strBuilder0;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "e*~-kwFA{vw!U");
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight((-2417), 3520, 's');
      char[] charArray0 = new char[2];
      charArray0[0] = 's';
      charArray0[1] = 's';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      StrBuilder strBuilder3 = strBuilder1.replaceFirst((StrMatcher) strMatcher_CharSetMatcher0, "java.awt.headless");
      StrBuilder strBuilder4 = strBuilder1.appendFixedWidthPadRight((-589), (-2417), 'k');
      StrBuilder strBuilder5 = strBuilder0.appendPadding(3520, 's');
      String string0 = "";
      int int1 = strBuilder5.indexOf("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip((-2006L));
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      int int2 = 1405;
      // Undeclared exception!
      try { 
        strBuilder5.replace(5, (-589), "e*~-kwFA{vw!U");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("LINUX");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("LINUX", "");
      int int0 = 0;
      StrBuilder strBuilder2 = strBuilder0.insert(0, false);
      String string0 = strBuilder2.substring(0, 590);
      int int1 = strBuilder0.lastIndexOf("LINUX");
      StrBuilder strBuilder3 = strBuilder0.append((String) null);
      // Undeclared exception!
      try { 
        strBuilder0.append("", 590, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteAll('L');
      String string0 = strBuilder0.toString();
      char[] charArray0 = new char[2];
      charArray0[0] = 'L';
      charArray0[1] = 'm';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(101, (-2196), charArray0, 101);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2196
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray((-3660), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3660
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((-2580));
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      char[] charArray0 = new char[5];
      charArray0[0] = 'Y';
      charArray0[1] = '+';
      charArray0[2] = 'q';
      charArray0[3] = 'M';
      charArray0[4] = '[';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 867, 867);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 867
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("{lD [p");
      StrBuilder strBuilder1 = strBuilder0.append(2069);
      String string0 = strBuilder0.substring(0, 0);
      String string1 = strBuilder0.toString();
      StrBuilder strBuilder2 = strBuilder0.replaceFirst("", "x:B2");
      String string2 = strBuilder0.toString();
      char[] charArray0 = new char[0];
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      int int0 = strBuilder1.indexOf((StrMatcher) strMatcher_CharSetMatcher0, 0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      int int1 = strBuilder_StrBuilderReader0.read(charArray0, 0, 0);
      int int2 = strBuilder1.lastIndexOf((StrMatcher) null);
      int int3 = (-1);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.previous();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid startIndex: ");
      int int0 = 1;
      int int1 = 31;
      String string0 = strBuilder0.toString();
      char char0 = '[';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(1, 31, '[');
      // Undeclared exception!
      try { 
        strBuilder1.toCharArray((-2273), 2);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2273
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("=t");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[3];
      charArray0[0] = 'J';
      charArray0[1] = '~';
      charArray0[2] = '>';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("{lD [p");
      StrBuilder strBuilder1 = strBuilder0.append(2069);
      String string0 = strBuilder0.substring(0, 0);
      String string1 = strBuilder0.toString();
      StrBuilder strBuilder2 = strBuilder0.replaceFirst("", "x:B2");
      String string2 = strBuilder0.toString();
      char[] charArray0 = new char[0];
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      int int0 = strBuilder1.indexOf((StrMatcher) strMatcher_CharSetMatcher0, 0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      int int1 = strBuilder_StrBuilderReader0.read(charArray0, 0, 0);
      int int2 = strBuilder1.lastIndexOf((StrMatcher) null);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrBuilder strBuilder3 = strBuilder0.append((float) (-1));
      int int3 = strBuilder3.indexOf('N', 34);
      StrBuilder strBuilder4 = strBuilder3.append(true);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.append("");
      StrBuilder strBuilder2 = strBuilder0.insert(0, (-3278.0F));
      StrBuilder strBuilder3 = strBuilder0.deleteAll("");
      boolean boolean0 = strBuilder1.contains('O');
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "");
      int int1 = 0;
      int int2 = 544;
      // Undeclared exception!
      try { 
        strBuilder2.append(stringBuffer0, 0, 544);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.validateRange(0, 0);
      char[] charArray0 = new char[8];
      charArray0[0] = 'K';
      charArray0[1] = '{';
      charArray0[2] = 'W';
      charArray0[3] = '9';
      charArray0[4] = '`';
      charArray0[5] = 'L';
      charArray0[6] = '0';
      charArray0[7] = 'a';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      int int1 = strBuilder0.indexOf(strMatcher0, 2);
      String string0 = strBuilder0.leftString(102);
      int int2 = strBuilder0.capacity();
      StrBuilder strBuilder1 = strBuilder0.append(false);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(34);
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrBuilder strBuilder2 = new StrBuilder();
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) strBuilder2;
      objectArray0[1] = (Object) strBuilder2;
      objectArray0[2] = (Object) strBuilder1;
      objectArray0[3] = (Object) strBuilder0;
      objectArray0[4] = (Object) strBuilder1;
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators(objectArray0, (String) null);
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder2);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[3];
      charArray0[0] = '>';
      charArray0[1] = '~';
      charArray0[2] = '#';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((String) null);
      StrBuilder strBuilder2 = strBuilder0.appendNewLine();
      int int0 = 2792;
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadLeft(2792, 0, 'f');
      int int1 = strBuilder0.indexOf("z9EWfas3$F&Nh&wPPK");
      double double0 = (-1.0);
      StrBuilder strBuilder4 = strBuilder2.append((-1.0));
      // Undeclared exception!
      try { 
        strBuilder4.append("StrTokenizer[not tokenized yet]", 2792, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      String string0 = null;
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) null);
      strBuilder_StrBuilderWriter0.write((String) null);
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt((-1081), ']');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1081
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      long long0 = strBuilder_StrBuilderReader0.skip(417L);
      long long1 = strBuilder_StrBuilderReader0.skip((-4945L));
      int int1 = strBuilder0.capacity();
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('P');
      boolean boolean0 = strBuilder0.contains((StrMatcher) strMatcher_CharMatcher0);
      char[] charArray0 = new char[3];
      charArray0[0] = 'P';
      charArray0[1] = 'P';
      charArray0[2] = 'P';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, (-2419), 34);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 34
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.append("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      StrBuilder strBuilder2 = strBuilder0.setNewLineText("");
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder2);
      char char0 = strBuilder1.charAt(1);
      int int0 = strBuilder1.lastIndexOf("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter", 0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[5];
      charArray0[0] = '5';
      charArray0[1] = 'U';
      charArray0[2] = '{';
      charArray0[3] = '@';
      charArray0[4] = 'x';
      int int1 = strBuilder_StrBuilderReader0.read(charArray0, 5, 0);
      int int2 = strBuilder_StrBuilderReader0.read();
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      int int0 = (-117);
      StrBuilder strBuilder0 = new StrBuilder((-117));
      char char0 = ']';
      StrBuilder strBuilder1 = strBuilder0.append(0.0F);
      StrBuilder strBuilder2 = strBuilder0.replaceAll((String) null, "xcR}wt/%6WEi");
      int int1 = (-575);
      // Undeclared exception!
      try { 
        strBuilder0.insert(1133, (Object) "xcR}wt/%6WEi");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1133
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StringBuffer stringBuffer0 = new StringBuffer(106);
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      char[] charArray0 = strBuilder0.toCharArray();
      StrBuilder strBuilder2 = strBuilder0.append('B');
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(4527);
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      // Undeclared exception!
      try { 
        strBuilder1.append("", 0, (-4199));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-335));
      StrBuilder strBuilder1 = strBuilder0.append(0.0);
      StrBuilder strBuilder2 = strBuilder0.appendNull();
      StrBuilder strBuilder3 = strBuilder2.trim();
      StrBuilder strBuilder4 = strBuilder0.append((-335));
      StrBuilder strBuilder5 = strBuilder4.appendPadding(116, '?');
      int int0 = strBuilder2.length();
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("gS[");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "#wNb2n5NIy1sNzx");
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.appendPadding(2616, '\"');
      String string0 = strBuilder0.substring(0);
      int int0 = strBuilder0.indexOf((String) null);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      int int0 = 1401;
      StrBuilder strBuilder0 = new StrBuilder(1401);
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      StrBuilder strBuilder2 = new StrBuilder("startIndex must be valid");
      char[] charArray0 = new char[7];
      charArray0[0] = 'f';
      charArray0[1] = '1';
      charArray0[2] = 'v';
      charArray0[3] = 'R';
      charArray0[4] = '`';
      charArray0[5] = 'p';
      charArray0[6] = 'k';
      StrBuilder strBuilder3 = strBuilder2.insert(0, charArray0);
      // Undeclared exception!
      try { 
        strBuilder3.insert((-431), 'f');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -431
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst((String) null);
      StrBuilder strBuilder2 = strBuilder1.trim();
      StrBuilder strBuilder3 = strBuilder0.append((StrBuilder) null);
      StrMatcher strMatcher0 = null;
      StrBuilder strBuilder4 = strBuilder0.deleteFirst((StrMatcher) null);
      char[] charArray0 = new char[3];
      charArray0[0] = 'm';
      char char0 = '}';
      // Undeclared exception!
      try { 
        strBuilder3.delete(2761, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[5];
      charArray0[0] = '9';
      charArray0[1] = '(';
      charArray0[2] = '\\';
      charArray0[3] = 'c';
      charArray0[4] = 'c';
      StrBuilder strBuilder1 = strBuilder0.insert(0, charArray0);
      strBuilder1.size = 0;
      StrBuilder strBuilder2 = strBuilder0.replaceAll("6d7]", "6d7]");
      StrBuilder strBuilder3 = strBuilder0.append(0);
      // Undeclared exception!
      try { 
        strBuilder3.insert(6, charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 6
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('\\');
      String string0 = strBuilder0.leftString(108);
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "org.apache.commons.lang.text.StrMatcher$StringMatcher");
      Writer writer0 = strBuilder0.asWriter();
      String string1 = strBuilder1.toString();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      StrBuilder strBuilder2 = new StrBuilder((-1797));
      StrBuilder strBuilder3 = strBuilder1.appendFixedWidthPadRight((Object) strBuilder2, 108, '\\');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      char[] charArray0 = new char[5];
      charArray0[0] = '\\';
      charArray0[1] = '\\';
      charArray0[2] = '\\';
      charArray0[3] = '\\';
      charArray0[4] = '\\';
      strBuilder_StrBuilderWriter0.write(charArray0);
      Reader reader0 = strBuilder0.asReader();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, (-1797), 0);
      Object object0 = strBuilder_StrBuilderTokenizer0.next();
      boolean boolean1 = strBuilder0.equals((Object) "org.apache.commons.lang.text.StrBuilder@0000000005\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\");
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(4159);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, (String) null);
      StrBuilder strBuilder2 = strBuilder1.replaceFirst(strMatcher0, (String) null);
      StringBuffer stringBuffer0 = strBuilder1.toStringBuffer();
      StrBuilder strBuilder3 = strBuilder2.append(0.0F);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("8]8EdY!V|<40");
      StrBuilder strBuilder1 = strBuilder0.insert(0, true);
      StrBuilder strBuilder2 = strBuilder0.ensureCapacity(114);
      StrBuilder strBuilder3 = new StrBuilder("8]8EdY!V|<40");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder3.new StrBuilderWriter();
      char[] charArray0 = new char[6];
      charArray0[0] = 'g';
      charArray0[1] = '.';
      charArray0[2] = 'O';
      charArray0[3] = '^';
      charArray0[4] = 'D';
      charArray0[5] = 'n';
      strBuilder_StrBuilderWriter0.write(charArray0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[5];
      charArray0[0] = 'H';
      charArray0[1] = 'W';
      charArray0[2] = '>';
      charArray0[3] = 'I';
      charArray0[4] = 'C';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      int int0 = 49;
      StrBuilder strBuilder0 = new StrBuilder(49);
      // Undeclared exception!
      try { 
        strBuilder0.substring(49, 49);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      int int0 = (-3085);
      StrBuilder strBuilder0 = new StrBuilder((-3085));
      char char0 = 'F';
      StrBuilder strBuilder1 = strBuilder0.deleteAll('F');
      StrBuilder strBuilder2 = strBuilder1.reverse();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      char[] charArray0 = new char[5];
      charArray0[0] = 'F';
      charArray0[1] = 'A';
      charArray0[2] = 'F';
      StrBuilder strBuilder3 = strBuilder0.append((Object) strBuilder1);
      StrBuilder strBuilder4 = strBuilder2.appendPadding((-2814), 'A');
      int int1 = (-1588);
      // Undeclared exception!
      try { 
        strBuilder4.insert((-1588), (-375L));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1588
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(737);
      String string0 = null;
      StrBuilder strBuilder1 = strBuilder0.replaceAll((String) null, (String) null);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(737);
      int int0 = 0;
      String string1 = strBuilder1.midString(737, 0);
      strBuilder_StrBuilderReader0.mark(737);
      boolean boolean0 = strBuilder1.isEmpty();
      int int1 = (-1110);
      int int2 = 0;
      // Undeclared exception!
      try { 
        strBuilder1.append(strBuilder0, (-1110), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder("}*]");
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, 5, 5);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      char char0 = 'T';
      int int0 = strBuilder0.lastIndexOf('T', 2987);
      StrBuilder strBuilder1 = strBuilder0.reverse();
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrBuilder strBuilder2 = strBuilder1.deleteFirst(strMatcher0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      char[] charArray0 = new char[9];
      int int1 = 0;
      // Undeclared exception!
      try { 
        strBuilder1.replace(2987, 0, (String) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(39);
      // Undeclared exception!
      try { 
        strBuilder0.insert(44, (long) 44);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 44
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-4019);
      Object object0 = new Object();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(object0, 102, '0');
      StrBuilder strBuilder2 = strBuilder1.append('L');
      String string0 = strBuilder1.midString((-4019), 102);
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt((-4019));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -4019
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(233);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("CnfK0yV*");
      Object object0 = new Object();
      StrBuilder strBuilder1 = strBuilder0.append(object0);
      StrBuilder strBuilder2 = strBuilder1.insert(9, object0);
      boolean boolean0 = strBuilder0.isEmpty();
      strBuilder0.validateIndex(9);
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, 5, (-96));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("?yDy#\"q)pCB");
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.append((Object) null);
      int int0 = strBuilder0.indexOf('v', 0);
      StrBuilder strBuilder3 = strBuilder1.appendFixedWidthPadLeft((Object) strBuilder0, (-1), 'v');
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex((-2130));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2130
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("rn0/oincnfeRlwd\"uV");
      int int0 = strBuilder0.size();
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.setNullText("startIndex must be valid");
      StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
      int int0 = strBuilder0.length();
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      StrBuilder strBuilder3 = strBuilder1.replaceFirst(strMatcher0, "startIndex must be valid");
      boolean boolean0 = strBuilder0.isEmpty();
      StrBuilder strBuilder4 = strBuilder1.deleteFirst("");
      int int1 = strBuilder1.lastIndexOf("");
      String string0 = strBuilder1.substring(0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder3.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder3.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      int int0 = 39;
      StrBuilder strBuilder0 = new StrBuilder(39);
      int int1 = (-2218);
      // Undeclared exception!
      try { 
        strBuilder0.substring((-2218));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2218
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.setNullText("startIndexmust be valid");
      StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
      int int0 = strBuilder0.length();
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      StrBuilder strBuilder3 = strBuilder1.replaceFirst(strMatcher0, "startIndexmust be valid");
      boolean boolean0 = strBuilder0.isEmpty();
      StrBuilder strBuilder4 = strBuilder1.deleteFirst("");
      int int1 = strBuilder1.lastIndexOf("");
      String string0 = strBuilder1.substring(0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder3.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("(Ek}@#Zf<f");
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("(Ek}@#Zf<f");
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      int int0 = 0;
      char char0 = 'Z';
      StrBuilder strBuilder1 = strBuilder0.insert(0, 'Z');
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, (-4256), (-2640));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1);
      strBuilder0.size = 1;
      StrBuilder strBuilder1 = new StrBuilder(1);
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder strBuilder3 = strBuilder0.replaceAll("v", "I7myw");
      StrBuilder strBuilder4 = strBuilder2.appendWithSeparators((Object[]) null, "]}T`");
      // Undeclared exception!
      try { 
        strBuilder3.insert(114, '%');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 114
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[9];
      charArray0[0] = '`';
      charArray0[1] = 'G';
      charArray0[2] = '4';
      charArray0[3] = '@';
      charArray0[5] = '|';
      charArray0[6] = '+';
      charArray0[7] = 'T';
      charArray0[8] = 'G';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0);
      StringBuffer stringBuffer0 = new StringBuffer(charBuffer1);
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0, 0, 0);
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight(0, 0, 'd');
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("VzPV$AKs+\"W:LA-lO)q");
      Reader reader0 = strBuilder0.asReader();
      char char0 = '1';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) reader0, (-66), '1');
      // Undeclared exception!
      try { 
        strBuilder1.replace(1269, 0, "t *.fk,DzVmP&");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 1751;
      String string0 = "lS4zFYt'gJgA[eg,9&N";
      // Undeclared exception!
      try { 
        strBuilder0.insert(1751, "lS4zFYt'gJgA[eg,9&N");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1751
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(31);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0);
      int int1 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.delete(31, 31);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-533));
      boolean boolean0 = strBuilder0.isEmpty();
      Object object0 = new Object();
      StrBuilder strBuilder1 = strBuilder0.append(object0);
      StrBuilder strBuilder2 = strBuilder0.deleteAll((String) null);
      StrBuilder strBuilder3 = strBuilder0.append('L');
      StrBuilder strBuilder4 = new StrBuilder(1040);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder4.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      // Undeclared exception!
      try { 
        strBuilder1.replace(strMatcher0, "5ei23!Hjo_$y%u^K:F", 1040, 0, (-2382));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(0, 0, 'V');
      int int0 = strBuilder0.hashCode();
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = 'M';
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('g', 'M');
      StrMatcher strMatcher0 = null;
      StrBuilder strBuilder2 = strBuilder1.deleteFirst('M');
      // Undeclared exception!
      try { 
        strBuilder1.insert((-1), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("OS/2");
      int int0 = strBuilder0.lastIndexOf('H');
      StrBuilder strBuilder1 = new StrBuilder("OS/2");
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1, 1, 0);
      StrBuilder strBuilder3 = strBuilder2.append('H');
      StrBuilder strBuilder4 = strBuilder2.append(true);
      StrBuilder strBuilder5 = strBuilder0.insert(1, 0);
      int int1 = strBuilder5.capacity();
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = null;
      try {
        strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher((char[]) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrMatcher$CharSetMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("");
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("");
      String string0 = strBuilder1.substring(0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      LinkedList<Integer> linkedList1 = new LinkedList<Integer>();
      boolean boolean0 = linkedList0.retainAll(linkedList1);
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
      StrBuilder strBuilder3 = strBuilder1.append((long) (-1));
      StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher0, "");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip((-1401L));
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3511);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder2 = strBuilder1.deleteFirst('M');
      int int0 = 291;
      // Undeclared exception!
      try { 
        strBuilder1.insert(291, 291);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 291
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      String string0 = strBuilder0.leftString((-867));
      String string1 = strBuilder0.substring(0);
      StrMatcher strMatcher1 = StrMatcher.charMatcher('h');
      String string2 = strBuilder0.toString();
      String string3 = strBuilder0.getNewLineText();
      StrBuilder strBuilder2 = strBuilder0.append((-936));
      int int0 = strBuilder1.lastIndexOf("", (-867));
      // Undeclared exception!
      try { 
        strBuilder2.append("W#m[UIfjCZ1g0K7+", (-867), 947);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("mu]jQioB]u_@G;");
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher((String) null);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("0Y+PP%FbUN0\"aN}}", 1280, 1280);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      int int0 = 2771;
      StrBuilder strBuilder0 = new StrBuilder(2771);
      char char0 = '2';
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('2');
      StrBuilder strBuilder2 = strBuilder0.trim();
      // Undeclared exception!
      try { 
        strBuilder2.substring(0, (-770));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      int int0 = (-1847);
      StrBuilder strBuilder0 = new StrBuilder((-1847));
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      // Undeclared exception!
      try { 
        strBuilder1.charAt((-1847));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1847
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("P7D{:xj%5s");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      int int0 = 117;
      int int1 = 1845;
      strBuilder_StrBuilderWriter0.write("P7D{:xj%5s");
      int int2 = 0;
      int int3 = (-4437);
      int int4 = 213;
      // Undeclared exception!
      try { 
        strBuilder0.charAt((-4437));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -4437
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[8];
      charArray0[0] = '+';
      charArray0[1] = '%';
      charArray0[2] = 'z';
      charArray0[3] = 'T';
      charArray0[4] = 'T';
      charArray0[5] = ']';
      charArray0[6] = 'V';
      charArray0[7] = '?';
      StrBuilder strBuilder1 = strBuilder0.insert(0, charArray0, 0, 0);
      char[] charArray1 = new char[0];
      char[] charArray2 = strBuilder0.getChars(charArray1);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      String string0 = strBuilder0.leftString(115);
      StrBuilder strBuilder1 = strBuilder0.insert(0, "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      StringBuffer stringBuffer0 = new StringBuffer("0");
      char[] charArray0 = new char[2];
      charArray0[0] = '!';
      charArray0[1] = '>';
      // Undeclared exception!
      try { 
        strBuilder1.insert(0, charArray0, 1717, 5);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: 1717
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[3];
      charArray0[0] = 'v';
      charArray0[1] = 'O';
      charArray0[2] = 'e';
      // Undeclared exception!
      try { 
        strBuilder0.insert(31, charArray0, (-3163), 31);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 31
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      int int0 = 1085;
      StrBuilder strBuilder0 = new StrBuilder(1085);
      int int1 = 1447;
      // Undeclared exception!
      try { 
        strBuilder0.charAt(1447);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1447
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-4076));
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      String string0 = strBuilder0.getNewLineText();
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((StringBuffer) null, (-2335), (-495));
      StrBuilder strBuilder2 = new StrBuilder("user.language");
      StrBuilder strBuilder3 = strBuilder0.replaceFirst("&-di\"9P", "user.language");
      StrBuilder strBuilder4 = strBuilder2.appendNewLine();
      StrBuilder strBuilder5 = strBuilder0.append(strBuilder2);
      char[] charArray0 = new char[2];
      charArray0[0] = '';
      charArray0[1] = ']';
      // Undeclared exception!
      try { 
        strBuilder0.insert((-592), charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -592
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.append(0.0);
      StringBuffer stringBuffer0 = new StringBuffer();
      int int0 = (-3073);
      // Undeclared exception!
      try { 
        strBuilder1.append(stringBuffer0, 0, (-3073));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.isEmpty();
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((String) null, 0, 0);
      strBuilder_StrBuilderWriter0.flush();
      Reader reader0 = strBuilder1.asReader();
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      int int0 = (-209);
      StrBuilder strBuilder0 = new StrBuilder((-209));
      // Undeclared exception!
      try { 
        strBuilder0.insert(34, (double) 34);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 34
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      int int1 = 0;
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("Invalid offset: ");
      String string0 = strBuilder0.substring(0, 0);
      StrBuilder strBuilder2 = strBuilder0.insert(0, "Invalid offset: ");
      StrBuilder strBuilder3 = strBuilder2.insert(0, (float) 0);
      StrBuilder strBuilder4 = strBuilder3.appendPadding((-2340), 'k');
      int int2 = 550;
      int int3 = (-1442);
      char char0 = '@';
      // Undeclared exception!
      try { 
        strBuilder3.append(strBuilder4, 0, (-1442));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      String string0 = "gb]Z;";
      StrBuilder strBuilder0 = new StrBuilder("gb]Z;");
      StrBuilder strBuilder1 = strBuilder0.setLength(926);
      String string1 = strBuilder0.rightString(926);
      // Undeclared exception!
      try { 
        strBuilder1.append(strBuilder0, 116, 1842);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder("!3SK2EFL+C<3Tyjl");
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1, 1, 1);
      StrBuilder strBuilder3 = strBuilder0.insert(0, false);
      int int0 = strBuilder0.capacity();
      StrBuilder strBuilder4 = strBuilder3.append((float) 32);
      String string0 = strBuilder3.substring(0, 32);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("end < start");
      StrBuilder strBuilder2 = strBuilder1.insert(0, "end < start");
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setLength(57);
      StrBuilder strBuilder2 = strBuilder0.replaceAll("Windows", "_c~|/BcLV?");
      StrBuilder strBuilder3 = strBuilder0.insert(57, (-291.587));
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.append(0.0);
      String string0 = strBuilder1.rightString(0);
      StrBuilder strBuilder2 = strBuilder0.insert(0, 0);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      int int0 = 48;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      int int1 = strBuilder2.lastIndexOf(strMatcher0);
      StrBuilder strBuilder3 = strBuilder1.append(stringBuffer0);
      stringBuffer0.ensureCapacity(0);
      StrBuilder strBuilder4 = strBuilder3.append(strBuilder1);
      // Undeclared exception!
      try { 
        strBuilder0.replace(48, 0, "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 4;
      int int1 = (-1821);
      // Undeclared exception!
      try { 
        strBuilder0.replace(4, (-1821), "8SjzU{");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = strBuilder0.midString(0, 0);
      // Undeclared exception!
      try { 
        strBuilder0.insert(Integer.MAX_VALUE, (-2416));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2147483647
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("7YG=rL[qkDQi");
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrBuilder strBuilder2 = strBuilder1.append(0.0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(233);
      // Undeclared exception!
      try { 
        strBuilder1.delete((-1484), (-1484));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1484
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = new StrBuilder("1.1");
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      StrBuilder strBuilder3 = strBuilder0.setLength(0);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[7];
      charArray0[0] = '#';
      charArray0[1] = 'Y';
      charArray0[2] = 'V';
      charArray0[3] = 'B';
      charArray0[4] = '~';
      charArray0[5] = '-';
      charArray0[6] = '3';
      char[] charArray1 = strBuilder0.getChars(charArray0);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2888);
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder0.append((Object) strBuilder1);
      Object object0 = new Object();
      StrBuilder strBuilder3 = strBuilder2.append(object0);
      boolean boolean0 = strBuilder0.contains("");
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      String string0 = null;
      StrBuilder strBuilder4 = strBuilder0.replaceAll(strMatcher0, (String) null);
      // Undeclared exception!
      try { 
        strBuilder4.validateRange(2888, 2888);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[1] = '|';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder0 = new StrBuilder("#s5B5");
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "#s5B5");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("KsT`dE.[[vHdz+!] ");
      StrBuilder strBuilder1 = strBuilder0.append((Object) "KsT`dE.[[vHdz+!] ");
      StrBuilder strBuilder2 = strBuilder0.setCharAt(9, '5');
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteAll('_');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      StrBuilder strBuilder2 = strBuilder0.replaceFirst(strMatcher0, "");
      String string0 = strBuilder2.midString(0, 0);
      StrBuilder strBuilder3 = strBuilder0.insert(0, 754.2016F);
      char[] charArray0 = new char[0];
      char[] charArray1 = strBuilder1.getChars(charArray0);
      StrBuilder strBuilder4 = strBuilder2.replaceFirst("", "");
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 4090;
      char[] charArray0 = new char[7];
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      charArray0[0] = 'r';
      charArray0[1] = '\\';
      StrBuilder strBuilder1 = strBuilder0.setLength(4090);
      charArray0[2] = 'q';
      charArray0[3] = '_';
      char char0 = '4';
      charArray0[4] = '4';
      charArray0[5] = '\\';
      char char1 = 'y';
      charArray0[6] = 'y';
      int int1 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.insert(4090, charArray0, 4090, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: 4090
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      char char0 = 'X';
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoredMatcher(strMatcher0);
      StrMatcher strMatcher1 = StrMatcher.charMatcher('X');
      int int0 = 114;
      int int1 = strBuilder0.indexOf(strMatcher0, 114);
      StringBuffer stringBuffer0 = null;
      try {
        stringBuffer0 = new StringBuffer((String) null);
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(44);
      char[] charArray0 = new char[8];
      charArray0[0] = '4';
      charArray0[1] = 'K';
      charArray0[2] = 'y';
      charArray0[3] = 't';
      charArray0[4] = 'c';
      charArray0[5] = 'w';
      charArray0[6] = '7';
      charArray0[7] = '6';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      int int0 = strBuilder0.indexOf((StrMatcher) strMatcher_CharSetMatcher0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "+  :V)");
      StrBuilder strBuilder2 = strBuilder1.trim();
      StrBuilder strBuilder3 = strBuilder1.append(44);
      boolean boolean0 = strBuilder0.contains((String) null);
      boolean boolean1 = strBuilder_StrBuilderReader0.markSupported();
      StrBuilder strBuilder4 = strBuilder1.deleteAll("qyA}`x?r|X:*TWfu1K");
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(31);
      boolean boolean0 = strBuilder0.contains('h');
      int int0 = strBuilder0.indexOf('h');
      StrMatcher strMatcher0 = null;
      StrBuilder strBuilder1 = strBuilder0.deleteAll((StrMatcher) null);
      StrBuilder strBuilder2 = strBuilder1.append('h');
      // Undeclared exception!
      try { 
        strBuilder1.insert(31, false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 31
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2012);
      int int0 = strBuilder0.capacity();
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("l%^6JSz`yI&");
      int int1 = strBuilder0.indexOf(strMatcher0, (-972));
      StrBuilder strBuilder1 = strBuilder0.insert(0, true);
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "l%^6JSz`yI&");
      char[] charArray0 = new char[4];
      charArray0[0] = 'k';
      charArray0[1] = '/';
      charArray0[2] = 'x';
      charArray0[3] = 'q';
      StringBuffer stringBuffer1 = stringBuffer0.append(charArray0);
      StrBuilder strBuilder2 = strBuilder1.append(stringBuffer0);
      StrBuilder strBuilder3 = strBuilder1.ensureCapacity(2012);
      Writer writer0 = strBuilder3.asWriter();
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadRight(48, 48, '/');
      String string0 = strBuilder0.substring(34);
      StrBuilder strBuilder5 = strBuilder3.trim();
      StrBuilder strBuilder6 = strBuilder3.reverse();
      StrBuilder strBuilder7 = strBuilder0.setCharAt(32, '/');
      StrBuilder strBuilder8 = strBuilder1.trim();
      char[] charArray1 = strBuilder8.toCharArray(32, 48);
      boolean boolean0 = strBuilder7.equals((Object) null);
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(44);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(57, 44, 'E');
      StrBuilder strBuilder2 = strBuilder0.appendNewLine();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[6];
      charArray0[0] = 'E';
      charArray0[1] = 'E';
      charArray0[2] = 'E';
      charArray0[3] = 'E';
      charArray0[4] = 'E';
      charArray0[5] = 'E';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 57, 44);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 44
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(44);
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight((Object) null, 44, 'A');
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("jQ0y~#tarnN$g;wP");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder0.midString(2822, 3);
      Object object0 = strBuilder_StrBuilderTokenizer0.next();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoredChar('~');
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "jQ0y~#tarnN$g;wP");
      char[] charArray0 = new char[0];
      StrBuilder strBuilder2 = strBuilder1.append(charArray0, 0, 0);
      StrBuilder strBuilder3 = strBuilder0.appendPadding(0, '~');
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.vm.specification.name");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[7];
      charArray0[0] = 'B';
      List list0 = strBuilder_StrBuilderTokenizer0.getTokenList();
      charArray0[1] = 'U';
      charArray0[2] = 'k';
      charArray0[3] = 'g';
      String string0 = strBuilder_StrBuilderTokenizer0.previousToken();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(0, 32, 'U');
      StrBuilder strBuilder2 = strBuilder1.append("java.vm.specification.name", 0, 0);
      StrBuilder strBuilder3 = strBuilder2.append(0);
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      int int0 = strBuilder1.lastIndexOf(strMatcher0);
      charArray0[4] = 'm';
      charArray0[5] = 'c';
      charArray0[6] = 'R';
      List list1 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, (-1), (-1));
      StrBuilder strBuilder4 = strBuilder3.deleteAll(strMatcher0);
      StrBuilder strBuilder5 = strBuilder1.minimizeCapacity();
      boolean boolean0 = strBuilder4.equals(strBuilder5);
      StrBuilder strBuilder6 = strBuilder1.replaceAll("java.vm.specification.name", "java.vm.specification.name");
  }
}
