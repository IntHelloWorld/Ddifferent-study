/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 29 07:14:01 GMT 2020
 */

package org.apache.commons.lang.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.Writer;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.function.Consumer;
import java.util.stream.IntStream;
import org.apache.commons.lang.text.StrBuilder;
import org.apache.commons.lang.text.StrMatcher;
import org.apache.commons.lang.text.StrTokenizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StrBuilder_ESTest extends StrBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(4);
      StringBuffer stringBuffer0 = new StringBuffer("ncO<mg<0^lB}X");
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      int int0 = strBuilder0.validateRange(0, 4);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.hashCode();
      char[] charArray0 = new char[6];
      charArray0[0] = 'K';
      charArray0[1] = '(';
      charArray0[2] = '{';
      charArray0[4] = 'K';
      charArray0[4] = 'I';
      charArray0[5] = 'j';
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance(charArray0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "K^;$,k1t*bt3}");
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1));
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((-1), 1840, 'H');
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight((-1), (-1059), 'H');
      String string0 = strBuilder2.toString();
      char char0 = 'Z';
      int int0 = strBuilder1.lastIndexOf('Z', (-1033));
      int int1 = strBuilder2.indexOf('F', (-1033));
      int int2 = strBuilder2.lastIndexOf('F');
      // Undeclared exception!
      try { 
        strBuilder2.delete((-1059), 1840);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1059
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      String string0 = "8I-AMi";
      StrBuilder strBuilder0 = new StrBuilder("8I-AMi");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      StrBuilder strBuilder1 = new StrBuilder();
      long long0 = strBuilder_StrBuilderReader0.skip(2);
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, 2, 2);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      String string0 = strBuilder0.rightString(0);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("");
      strBuilder0.validateIndex(0);
      boolean boolean0 = strBuilder1.startsWith("");
      StrBuilder strBuilder2 = new StrBuilder(0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
      String string1 = strBuilder1.getNewLineText();
      boolean boolean1 = strBuilder2.equals(strBuilder1);
      // Undeclared exception!
      try { 
        strBuilder2.charAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("J6MO~5LF");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      char[] charArray0 = strBuilder1.toCharArray(0, 64);
      int int0 = strBuilder1.lastIndexOf("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("8I-AMi");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder0.insert(0, "@tpQ}");
      boolean boolean0 = strBuilder0.contains((StrMatcher) null);
      strBuilder_StrBuilderReader0.reset();
      long long0 = strBuilder_StrBuilderReader0.skip(0L);
      int int0 = strBuilder0.size();
      StrBuilder strBuilder3 = strBuilder0.replaceFirst("8I-AMi", "8I-AMi");
      StrBuilder strBuilder4 = strBuilder3.deleteCharAt(0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      char[] charArray0 = new char[8];
      charArray0[0] = 'S';
      charArray0[1] = 'V';
      charArray0[2] = 'u';
      charArray0[3] = 'N';
      charArray0[4] = 'n';
      charArray0[5] = '`';
      charArray0[6] = 'w';
      charArray0[7] = '@';
      strBuilder_StrBuilderWriter0.write(charArray0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoredChar('%');
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      strBuilder_StrBuilderTokenizer0.forEachRemaining(consumer0);
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("5oPEvAFETk");
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher("D");
      StrTokenizer strTokenizer1 = StrTokenizer.getTSVInstance();
      StrTokenizer strTokenizer2 = strBuilder_StrBuilderTokenizer0.setDelimiterChar('%');
      boolean boolean0 = strBuilder_StrBuilderTokenizer0.hasNext();
      StrMatcher strMatcher3 = StrMatcher.charSetMatcher("D");
      StrMatcher strMatcher4 = StrMatcher.stringMatcher("*zLm{I");
      int int0 = strBuilder0.lastIndexOf(strMatcher0, (-1936));
      int int1 = strBuilder0.lastIndexOf("D", 58);
      int int2 = strBuilder0.size();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) "5oPEvAFETk");
      strBuilder_StrBuilderWriter0.close();
      int int3 = strBuilder0.lastIndexOf('%');
      StrBuilder strBuilder1 = strBuilder0.setNullText("");
      String string0 = strBuilder1.rightString(0);
      boolean boolean1 = strBuilder0.startsWith("5.1");
      int int4 = strBuilder1.lastIndexOf("pBW^", 0);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1), 'n');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.replace(0, 0, "Z{AZF`_U@UeX");
      char[] charArray0 = new char[5];
      charArray0[0] = 'y';
      charArray0[1] = '#';
      charArray0[2] = '|';
      charArray0[3] = '/';
      charArray0[4] = 'u';
      StrBuilder strBuilder2 = strBuilder0.append(charArray0);
      boolean boolean0 = strBuilder1.startsWith("d{fQtVwVOzATX=H)");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray1 = new char[4];
      charArray1[0] = 'Y';
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadLeft((Object) "Z{AZF`_U@UeX", 0, '=');
      charArray1[1] = '=';
      charArray1[2] = 'Y';
      charArray1[3] = '4';
      int int0 = 884;
      // Undeclared exception!
      try { 
        CharBuffer.wrap(charArray1, (-3784), 884);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("(p3nX[TuG'#");
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_StringMatcher0);
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("(p3nX[TuG'#");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(2044, 2044, 'O');
      int int1 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_StringMatcher0);
      int int2 = strBuilder0.indexOf('@');
      char[] charArray0 = new char[8];
      charArray0[0] = 'O';
      charArray0[1] = '@';
      charArray0[2] = 'O';
      charArray0[3] = '@';
      charArray0[4] = 'O';
      charArray0[5] = 'w';
      charArray0[6] = '@';
      charArray0[7] = 'O';
      StrBuilder strBuilder2 = strBuilder0.trim();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      StrBuilder strBuilder3 = strBuilder0.replaceAll('a', '@');
      StrBuilder strBuilder4 = strBuilder3.ensureCapacity(1283);
      boolean boolean1 = strBuilder1.equals(strBuilder0);
      String string0 = strBuilder4.midString(0, (-1));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(charArray0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.setNullText((String) null);
      StrBuilder strBuilder2 = strBuilder1.trim();
      char[] charArray0 = new char[2];
      charArray0[0] = '';
      charArray0[1] = 'p';
      StrBuilder strBuilder3 = strBuilder0.setNullText("");
      StrMatcher strMatcher1 = StrMatcher.charMatcher('');
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher(charArray0);
      int int1 = strBuilder0.indexOf("StrTokenizer", (-1));
      StrBuilder strBuilder4 = strBuilder3.deleteFirst('8');
      boolean boolean0 = strBuilder0.startsWith("StrTokenizer");
      boolean boolean1 = strBuilder3.equalsIgnoreCase(strBuilder2);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("8I-AMi");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder1.insert(0, "@tpQ}");
      boolean boolean0 = strBuilder0.contains((StrMatcher) null);
      strBuilder_StrBuilderReader0.reset();
      long long0 = strBuilder_StrBuilderReader0.skip(0L);
      int int0 = strBuilder0.size();
      StrBuilder strBuilder3 = strBuilder0.replaceFirst("8I-AMi", "8I-AMi");
      StrBuilder strBuilder4 = strBuilder3.deleteCharAt(0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      char[] charArray0 = new char[8];
      charArray0[0] = 'S';
      charArray0[1] = 'V';
      charArray0[2] = 'u';
      charArray0[3] = 'N';
      charArray0[4] = 'n';
      charArray0[5] = '`';
      charArray0[6] = 'w';
      charArray0[7] = '@';
      strBuilder_StrBuilderWriter0.write(charArray0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("os._*m'");
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      int int0 = 32;
      // Undeclared exception!
      try { 
        strBuilder0.insert(32, "os._*m'");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("oL1FbZsz6qo{D_");
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrBuilder strBuilder2 = strBuilder0.append("");
      StrBuilder strBuilder3 = strBuilder1.replaceAll("", "");
      StrBuilder strBuilder4 = strBuilder3.append(342.2);
      String string0 = strBuilder4.leftString(8);
      StrBuilder strBuilder5 = strBuilder4.replaceFirst("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter", "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      StrBuilder strBuilder6 = strBuilder0.setNewLineText("oL1FbZsz6qo{D_");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder4.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      StrBuilder strBuilder7 = strBuilder1.append(object0);
      StrBuilder strBuilder8 = strBuilder6.append(1L);
      StrBuilder strBuilder9 = strBuilder6.append(true);
      StrBuilder strBuilder10 = strBuilder6.appendNull();
      boolean boolean0 = strBuilder6.equals(strBuilder1);
      char[] charArray0 = new char[6];
      charArray0[0] = 'n';
      charArray0[1] = 'L';
      charArray0[2] = '+';
      charArray0[3] = '`';
      charArray0[4] = '^';
      charArray0[5] = 'S';
      StrBuilder strBuilder11 = strBuilder3.insert(8, charArray0);
      int int0 = strBuilder3.capacity();
      StrBuilder strBuilder12 = strBuilder7.replaceAll('/', '3');
      String string1 = strBuilder10.midString(8, 86);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strBuilder_StrBuilderTokenizer0, "Invalid offset: ");
      char[] charArray0 = strBuilder1.toCharArray(0, 2685);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = new StrBuilder("TIK;");
      StringBuffer stringBuffer0 = new StringBuffer(2295);
      StrBuilder strBuilder2 = strBuilder1.append(stringBuffer0);
      StrBuilder strBuilder3 = strBuilder2.append((-1));
      StrBuilder strBuilder4 = strBuilder2.append((double) 2295);
      StrBuilder strBuilder5 = strBuilder0.append(strBuilder1);
      StrBuilder strBuilder6 = strBuilder4.replaceFirst("TIK;", "");
      StrBuilder strBuilder7 = strBuilder0.append(0.0);
      strBuilder0.validateIndex(1);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder4.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("", (-1), 1814);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrBuilder strBuilder2 = strBuilder1.setNewLineText("k7dkK");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StringBuffer stringBuffer0 = new StringBuffer("QVc(A-P#U;R5b");
      StrBuilder strBuilder3 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder4 = strBuilder3.replaceAll("QVc(A-P#U;R5b", "{}");
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset();
      StrBuilder strBuilder5 = new StrBuilder(0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1315);
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) strBuilder0;
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      int int0 = 1394;
      StrBuilder strBuilder2 = strBuilder1.append(1394);
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) strBuilder0;
      objectArray0[3] = (Object) strBuilder0;
      objectArray0[4] = (Object) strBuilder0;
      objectArray0[5] = (Object) strBuilder0;
      StrBuilder strBuilder3 = strBuilder0.appendWithSeparators(objectArray0, "");
      StrBuilder strBuilder4 = strBuilder3.appendNull();
      LinkedList<StrBuilder> linkedList0 = new LinkedList<StrBuilder>();
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      boolean boolean0 = linkedList0.add(strBuilder3);
      int int1 = strBuilder3.lastIndexOf(strMatcher0);
      StrBuilder strBuilder5 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
      StrBuilder strBuilder6 = strBuilder0.append(true);
      char char0 = 'J';
      StrBuilder strBuilder7 = strBuilder3.deleteFirst('J');
      boolean boolean1 = strBuilder4.endsWith("");
      int int2 = strBuilder4.indexOf("", 482);
      // Undeclared exception!
      try { 
        strBuilder2.insert((-2240), true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2240
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-2777);
      StrBuilder strBuilder1 = strBuilder0.append("");
      String string0 = "java.class.version";
      StrMatcher strMatcher0 = StrMatcher.charMatcher('H');
      StrBuilder strBuilder2 = strBuilder0.deleteAll(strMatcher0);
      char char0 = '%';
      String string1 = strBuilder0.midString((-2777), (-2777));
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt((-2777), '%');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2777
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3);
      boolean boolean0 = strBuilder0.endsWith("i q(3_&UdJ]&iKE,G");
      char[] charArray0 = strBuilder0.toCharArray();
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("i q(3_&UdJ]&iKE,G", 3, 3);
      Writer writer0 = strBuilder_StrBuilderWriter0.append('#');
      Writer writer1 = strBuilder_StrBuilderWriter0.append('4');
      strBuilder_StrBuilderWriter0.flush();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read(charArray0);
      boolean boolean1 = strBuilder_StrBuilderReader0.markSupported();
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      boolean boolean2 = strBuilder0.contains(strMatcher0);
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('p');
      int int1 = strBuilder0.indexOf((StrMatcher) strMatcher_CharMatcher0);
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        stringBuffer0.insert(1, (long) 1);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1629);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(1629, 1629, 'Q');
      StrBuilder strBuilder2 = strBuilder1.append((Object) "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      StrBuilder strBuilder3 = strBuilder2.append((-1));
      StrBuilder strBuilder4 = strBuilder2.insert(930, "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      StrBuilder strBuilder5 = strBuilder3.minimizeCapacity();
      char char0 = strBuilder1.charAt(108);
      String string0 = strBuilder1.toString();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      int int0 = strBuilder1.lastIndexOf(strMatcher0);
      StrBuilder strBuilder6 = strBuilder1.setNullText("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      // Undeclared exception!
      try { 
        strBuilder3.append("zy^-<a,wbg*NhKh3", 108, 1700);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset("U");
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "");
      int int0 = strBuilder0.lastIndexOf('D', 33);
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('^');
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("length must be valid");
      StrBuilder strBuilder2 = strBuilder0.deleteFirst((StrMatcher) strMatcher_CharMatcher0);
      int int1 = strBuilder0.capacity();
      // Undeclared exception!
      try { 
        strBuilder1.insert(33, 32);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 33
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2);
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[2] = (Object) strBuilder0;
      objectArray0[3] = (Object) strBuilder0;
      objectArray0[4] = (Object) strBuilder0;
      objectArray0[5] = (Object) strBuilder0;
      objectArray0[6] = (Object) strBuilder0;
      objectArray0[7] = (Object) strBuilder0;
      int int0 = 0;
      char[] charArray0 = null;
      // Undeclared exception!
      try { 
        strBuilder0.getChars(2, 0, (char[]) null, 2);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-552));
      StrBuilder strBuilder1 = strBuilder0.append('=');
      StrBuilder strBuilder2 = strBuilder0.insert(0, (float) (-552));
      StringBuffer stringBuffer0 = new StringBuffer("");
      char[] charArray0 = new char[0];
      StrBuilder strBuilder3 = strBuilder0.insert(2, charArray0);
      // Undeclared exception!
      try { 
        stringBuffer0.insert(2665, 2579L);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2665
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      String string0 = "JM[]}hVW";
      StrBuilder strBuilder0 = new StrBuilder("JM[]}hVW");
      char[] charArray0 = new char[4];
      charArray0[0] = '\"';
      charArray0[1] = '-';
      charArray0[2] = 'A';
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      charArray0[3] = 'G';
      int int0 = 108;
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 108, 108);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 108
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      String string0 = "SG^jf?E";
      StrBuilder strBuilder0 = new StrBuilder("SG^jf?E");
      int int0 = 31;
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      Object[] objectArray0 = new Object[0];
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "SG^jf?E");
      int int1 = (-798);
      // Undeclared exception!
      try { 
        strBuilder0.replace((StrMatcher) strMatcher_NoMatcher0, "SG^jf?E", 31, 0, (-798));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("(p3nX[TuG'#");
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_StringMatcher0);
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("(p3nX[TuG'#");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(2044, 2044, 'O');
      int int1 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_StringMatcher0);
      char char0 = '@';
      int int2 = strBuilder0.indexOf('@');
      char[] charArray0 = new char[8];
      charArray0[0] = 'O';
      charArray0[1] = '@';
      charArray0[2] = 'O';
      charArray0[3] = '@';
      charArray0[4] = 'O';
      charArray0[5] = 'f';
      charArray0[6] = '@';
      charArray0[7] = 'O';
      // Undeclared exception!
      try { 
        strBuilder1.append(charArray0, (-2661), 2044);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 2044
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-87));
      String string0 = strBuilder0.rightString((-87));
      int int0 = 1376;
      // Undeclared exception!
      try { 
        strBuilder0.delete(1376, 1376);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = strBuilder0.toString();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      char[] charArray0 = new char[9];
      charArray0[0] = 'x';
      charArray0[1] = 'a';
      charArray0[2] = 'o';
      charArray0[3] = 'J';
      charArray0[4] = 'H';
      charArray0[5] = '5';
      charArray0[6] = 'y';
      charArray0[7] = ':';
      charArray0[8] = 'l';
      int int0 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 0, (-3061));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: -3061
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("2Wqh");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("", "2Wqh");
      StrBuilder strBuilder2 = strBuilder0.append(482.10544F);
      StrBuilder strBuilder3 = strBuilder0.clear();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset("2Wqh");
      StrBuilder strBuilder4 = strBuilder3.appendWithSeparators((Iterator) strTokenizer0, "2Wqh");
      StrBuilder strBuilder5 = strBuilder4.append(false);
      StrBuilder strBuilder6 = strBuilder3.append("");
      int int0 = 0;
      String string0 = strBuilder0.leftString(0);
      char[] charArray0 = new char[6];
      charArray0[0] = '2';
      charArray0[1] = 'c';
      charArray0[2] = 'y';
      charArray0[3] = 'r';
      charArray0[4] = '[';
      charArray0[5] = ')';
      // Undeclared exception!
      try { 
        strBuilder6.append(charArray0, (-995), (-995));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -995
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      int int0 = 2;
      StrBuilder strBuilder0 = new StrBuilder(2);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[7];
      charArray0[0] = 'n';
      charArray0[1] = '4';
      charArray0[2] = '*';
      charArray0[3] = 'H';
      charArray0[4] = 'M';
      charArray0[5] = '6';
      charArray0[6] = 'U';
      int int1 = strBuilder_StrBuilderReader0.read(charArray0);
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      String[] stringArray0 = strBuilder_StrBuilderTokenizer0.getTokenArray();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "");
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.remove();
      } catch(UnsupportedOperationException e) {
         //
         // remove() is unsupported
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      int int0 = strBuilder0.size();
      StrBuilder strBuilder1 = strBuilder0.insert(0, "");
      char[] charArray0 = new char[4];
      charArray0[0] = '9';
      charArray0[1] = 'N';
      charArray0[2] = '\\';
      charArray0[3] = 'g';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(2174, 2174, charArray0, 2174);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2174
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      int int0 = 1570;
      // Undeclared exception!
      try { 
        strBuilder0.insert(1570, false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1570
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-331));
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("N@R9(/n*-AU{a.F##W");
      int int0 = strBuilder0.indexOf((StrMatcher) strMatcher_StringMatcher0, 550);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset("U");
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "");
      int int0 = strBuilder0.lastIndexOf('D', (-1585));
      StrMatcher strMatcher0 = StrMatcher.charMatcher('^');
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("length must be valid");
      StrBuilder strBuilder2 = strBuilder0.deleteFirst(strMatcher0);
      int int1 = strBuilder0.capacity();
      // Undeclared exception!
      try { 
        strBuilder1.insert((-1585), 32);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1585
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrMatcher$NoMatcher");
      // Undeclared exception!
      try { 
        strBuilder0.insert(3993, (Object) "org.apache.commons.lang.text.StrMatcher$NoMatcher");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3993
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      String string1 = strBuilder0.substring(0, 0);
      StrBuilder strBuilder1 = new StrBuilder("Gr#0");
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      char[] charArray0 = new char[1];
      charArray0[0] = 'B';
      int int0 = 0;
      StrBuilder strBuilder3 = strBuilder0.append(charArray0, 0, 0);
      StrBuilder strBuilder4 = strBuilder3.insert(0, (float) 0);
      // Undeclared exception!
      try { 
        strBuilder4.getChars(0, 0, charArray0, 102);
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "";
      StrBuilder strBuilder1 = new StrBuilder("");
      boolean boolean0 = strBuilder0.equals(strBuilder1);
      String string1 = strBuilder1.midString((-2667), (-4052));
      // Undeclared exception!
      try { 
        strBuilder0.delete((-2667), (-4052));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2667
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.deleteAll('L');
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      int int0 = strBuilder1.indexOf(strMatcher0, (-1184));
      // Undeclared exception!
      try { 
        strBuilder0.insert(25, "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 25
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1);
      int int0 = (-70);
      StringBuffer stringBuffer0 = new StringBuffer();
      IntStream intStream0 = stringBuffer0.chars();
      strBuilder0.size = (-2913);
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight(1, (-70), '!');
      String string0 = "C#xXDkrH!^";
      String string1 = "IA)o2$\\fWVRo(a\\";
      StrBuilder strBuilder3 = strBuilder1.replaceFirst("C#xXDkrH!^", "IA)o2$\fWVRo(a");
      boolean boolean0 = strBuilder3.endsWith("");
      StrBuilder strBuilder4 = strBuilder0.replaceFirst('!', '!');
      // Undeclared exception!
      try { 
        strBuilder0.insert(0, true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "";
      boolean boolean0 = strBuilder0.equals(strBuilder0);
      String string1 = strBuilder0.midString((-2667), (-2667));
      // Undeclared exception!
      try { 
        strBuilder0.delete((-2667), (-2667));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2667
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2547));
      char char0 = '!';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(0, 0, '!');
      StrBuilder strBuilder2 = strBuilder1.append((-2547));
      // Undeclared exception!
      try { 
        strBuilder2.setCharAt(2325, '!');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2325
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(",dULP");
      StrBuilder strBuilder1 = strBuilder0.replaceAll("", "java.vendor.url");
      StrBuilder strBuilder2 = strBuilder0.replaceFirst("", "No{a");
      StrBuilder strBuilder3 = strBuilder0.reverse();
      int int0 = strBuilder0.indexOf('5');
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(" \t\n\r\f");
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      char[] charArray0 = new char[9];
      charArray0[0] = 'S';
      charArray0[1] = 'D';
      charArray0[2] = 'i';
      charArray0[3] = '{';
      charArray0[4] = ':';
      charArray0[5] = '*';
      charArray0[6] = '[';
      charArray0[7] = '.';
      charArray0[8] = '7';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.replaceAll('8', '\'');
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[7];
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Reader reader0 = strBuilder0.asReader();
      int int0 = strBuilder0.validateRange(0, 0);
      StrBuilder strBuilder1 = strBuilder0.appendPadding(1386, 'j');
      StrBuilder strBuilder2 = strBuilder1.insert(0, (Object) strBuilder0);
      StrBuilder strBuilder3 = strBuilder1.appendNewLine();
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadRight(2812, (-364), 'j');
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("4.0");
      int int1 = strBuilder4.lastIndexOf(strMatcher0, 0);
      StrBuilder strBuilder5 = new StrBuilder(2812);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder5.new StrBuilderWriter();
      char[] charArray0 = new char[3];
      charArray0[0] = 'j';
      charArray0[1] = 'j';
      charArray0[2] = 'j';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, (-1129), 1803);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 1803
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      String string0 = null;
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.setNewLineText((String) null);
      String string1 = "";
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Iterator) null, "");
      // Undeclared exception!
      try { 
        strBuilder2.setCharAt(1120, '{');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1120
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      String string0 = null;
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst((String) null);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1276), 5799);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1276
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[9];
      charArray0[0] = ';';
      charArray0[1] = ';';
      charArray0[2] = 'l';
      charArray0[3] = 'O';
      charArray0[4] = 'v';
      charArray0[5] = 'y';
      charArray0[6] = 'C';
      charArray0[7] = '5';
      charArray0[8] = 'Z';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, (String) null);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1));
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity((-1));
      StrBuilder strBuilder2 = new StrBuilder((-1));
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder2);
      char char0 = 'R';
      StrBuilder strBuilder4 = strBuilder0.appendPadding((-572), 'R');
      int int0 = (-3517);
      // Undeclared exception!
      try { 
        strBuilder0.validateRange(115, (-3517));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "FRqz");
      int int0 = strBuilder0.indexOf("", 2169);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      // Undeclared exception!
      try { 
        strBuilder0.charAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(",dULP");
      StrBuilder strBuilder1 = strBuilder0.replaceAll("", "java.vendor.url");
      StrBuilder strBuilder2 = strBuilder0.replaceFirst("", "No{a");
      StrBuilder strBuilder3 = strBuilder0.reverse();
      StrBuilder strBuilder4 = strBuilder3.appendPadding((-884), '?');
      int int0 = strBuilder0.indexOf('5');
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-455);
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      char[] charArray0 = new char[2];
      charArray0[0] = 'N';
      charArray0[1] = 'E';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray((-455), 662);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -455
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("1.1");
      StrBuilder strBuilder2 = strBuilder0.append((double) 1);
      int int0 = strBuilder0.capacity();
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadLeft(3, 1, 'k');
      String string0 = null;
      StrBuilder strBuilder4 = strBuilder2.clear();
      StrBuilder strBuilder5 = strBuilder4.appendFixedWidthPadLeft(2228, 2228, 'k');
      // Undeclared exception!
      try { 
        strBuilder3.replace((-2585), (-2585), (String) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2585
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.reverse();
      int int0 = 115;
      int int1 = (-2725);
      // Undeclared exception!
      try { 
        strBuilder1.append("", 115, (-2725));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrBuilder strBuilder1 = strBuilder0.append((-339.223101));
      String string0 = strBuilder1.midString(2, 2);
      StrBuilder strBuilder2 = strBuilder0.deleteFirst(strMatcher0);
      int int0 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.replace(strMatcher0, "", (-2003), 0, (-2003));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2003
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(1.0F);
      int int0 = strBuilder0.indexOf("zzqVuB<kSCR");
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight(9, (-568), '>');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(229, 229, 'h');
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      char[] charArray0 = new char[9];
      charArray0[0] = 'h';
      charArray0[1] = 'h';
      charArray0[3] = 'h';
      charArray0[4] = 'h';
      charArray0[5] = 'h';
      charArray0[6] = 'h';
      charArray0[7] = 'h';
      int int0 = strMatcher0.isMatch(charArray0, 229, 229, 229);
      StrBuilder strBuilder2 = strBuilder1.appendNull();
      boolean boolean0 = strBuilder1.contains(strMatcher0);
      StrBuilder strBuilder3 = strBuilder1.append((char[]) null);
      StrBuilder strBuilder4 = strBuilder0.append('+');
      char[] charArray1 = strBuilder0.toCharArray();
      StrBuilder strBuilder5 = strBuilder0.deleteAll("java.specification.name");
      int int1 = strBuilder3.lastIndexOf((StrMatcher) null, 0);
      StrBuilder strBuilder6 = strBuilder0.appendFixedWidthPadLeft((Object) null, (-1912), '%');
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[2];
      char char0 = '3';
      charArray0[0] = '3';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0);
      charArray0[1] = ';';
      int int1 = (-1);
      int int2 = 0;
      char[] charArray1 = new char[2];
      charArray1[0] = ';';
      charArray1[1] = ';';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray1, 0, 117);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      int int0 = strBuilder0.indexOf('[');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[9];
      charArray0[0] = '[';
      charArray0[1] = '[';
      charArray0[2] = '[';
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setTrimmerMatcher(strMatcher_NoMatcher0);
      charArray0[3] = '[';
      charArray0[4] = 'f';
      charArray0[5] = '3';
      charArray0[6] = '[';
      charArray0[7] = '[';
      charArray0[8] = '[';
      int int1 = 34;
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, (-1), 34);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray1 = new char[0];
      int int2 = strBuilder_StrBuilderReader0.read(charArray1);
      int int3 = strBuilder_StrBuilderReader0.read();
      // Undeclared exception!
      try { 
        strBuilder0.delete(34, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StringBuffer stringBuffer0 = new StringBuffer("java.vendor.url");
      StringBuffer stringBuffer1 = new StringBuffer(stringBuffer0);
      String string0 = strBuilder0.leftString(0);
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer1);
      char[] charArray0 = new char[0];
      StrBuilder strBuilder2 = strBuilder0.append(charArray0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(101);
      int int0 = strBuilder0.hashCode();
      int int1 = 32;
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(101, 32, '-');
      boolean boolean0 = strBuilder0.contains('\\');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[8];
      charArray0[0] = '-';
      charArray0[1] = '\\';
      charArray0[2] = '-';
      charArray0[3] = '\\';
      charArray0[4] = '\\';
      charArray0[5] = 'f';
      charArray0[6] = '-';
      charArray0[7] = '\\';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 32, 32);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[9];
      charArray0[0] = '_';
      charArray0[1] = '&';
      charArray0[2] = '%';
      charArray0[3] = '%';
      charArray0[4] = '`';
      charArray0[5] = 'U';
      charArray0[6] = 'l';
      charArray0[7] = '1';
      charArray0[8] = 'Q';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 32, 32);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer", 0, 0);
      // Undeclared exception!
      try { 
        strBuilder0.append("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer", 0, 101);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('{');
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight((Object) "", 580, '{');
      boolean boolean0 = strBuilder0.contains('*');
      int int0 = 97;
      StringBuffer stringBuffer0 = new StringBuffer(97);
      String string0 = "1.4";
      StrMatcher strMatcher0 = StrMatcher.charMatcher('D');
      // Undeclared exception!
      try { 
        strBuilder0.replace(strMatcher0, "$E4!?_`$QH(S", 97, 0, 97);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.awt.fonts");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(57, 57, ')');
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight((Object) "java.awt.fonts", 0, '+');
      String string0 = strBuilder2.leftString(3069);
      String string1 = strBuilder2.getNewLineText();
      int int0 = strBuilder2.length();
      String string2 = strBuilder2.toString();
      char[] charArray0 = new char[8];
      charArray0[0] = ')';
      charArray0[1] = ')';
      charArray0[2] = ')';
      charArray0[3] = ')';
      charArray0[4] = ')';
      charArray0[5] = '+';
      charArray0[6] = ')';
      charArray0[7] = '+';
      StrBuilder strBuilder3 = strBuilder1.append(charArray0);
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      int int1 = strBuilder0.lastIndexOf(strMatcher0, 71);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-2777);
      StrBuilder strBuilder1 = strBuilder0.append("");
      // Undeclared exception!
      try { 
        strBuilder1.insert((-2777), true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2777
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("user.timezone");
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      int int0 = strBuilder0.indexOf((StrMatcher) strMatcher_TrimMatcher0, 0);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(0, (-1345), '@');
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(0.0);
      StrBuilder strBuilder2 = strBuilder0.replaceFirst("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter", "ejemd*B eZYto");
      StrBuilder strBuilder3 = strBuilder2.setNewLineText("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      char char0 = '@';
      StrBuilder strBuilder4 = strBuilder3.appendFixedWidthPadLeft((Object) strBuilder2, (-1792), '@');
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex(985);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 985
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setIgnoredChar('%');
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      strBuilder_StrBuilderTokenizer0.forEachRemaining(consumer0);
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("5oPEvAFETk");
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher("D");
      StrTokenizer strTokenizer1 = StrTokenizer.getTSVInstance();
      StrTokenizer strTokenizer2 = strBuilder_StrBuilderTokenizer0.setDelimiterChar('%');
      boolean boolean0 = strBuilder_StrBuilderTokenizer0.hasNext();
      StrMatcher strMatcher3 = StrMatcher.charSetMatcher("D");
      char[] charArray0 = new char[8];
      charArray0[0] = '%';
      charArray0[1] = '%';
      charArray0[2] = '%';
      charArray0[3] = '%';
      charArray0[4] = '%';
      charArray0[5] = '%';
      charArray0[6] = '%';
      charArray0[7] = '%';
      int int0 = strMatcher0.isMatch(charArray0, (-1505), (-1505), (-1505));
      StrMatcher strMatcher4 = StrMatcher.stringMatcher("*zLm{I");
      int int1 = strBuilder0.lastIndexOf(strMatcher0, (-1936));
      int int2 = strBuilder0.lastIndexOf("D", 58);
      int int3 = strBuilder0.size();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      int int4 = strBuilder0.lastIndexOf('%');
      StrBuilder strBuilder1 = strBuilder0.setNullText("");
      String string0 = strBuilder1.rightString(0);
      boolean boolean1 = strBuilder0.startsWith("5.1");
      int int5 = strBuilder1.lastIndexOf("pBW^", 0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      String string0 = "yw>[:a`d<&";
      StrBuilder strBuilder0 = new StrBuilder("yw>[:a`d<&");
      String string1 = strBuilder0.midString(34, 34);
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("yw>[:a`d<&", "yw>[:a`d<&");
      int int0 = 0;
      StrBuilder strBuilder2 = strBuilder1.deleteFirst("yw>[:a`d<&");
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        strBuilder2.append(stringBuffer0, 1212, 9);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      int int0 = 32;
      StrBuilder strBuilder0 = new StrBuilder(32);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrBuilder strBuilder1 = strBuilder0.append((float) 32);
      StrBuilder strBuilder2 = strBuilder1.appendNewLine();
      StringBuffer stringBuffer0 = new StringBuffer();
      StringBuffer stringBuffer1 = new StringBuffer(stringBuffer0);
      // Undeclared exception!
      try { 
        strBuilder1.append(stringBuffer1, 32, 32);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 1918;
      char[] charArray0 = new char[6];
      charArray0[0] = 'k';
      charArray0[1] = 's';
      charArray0[2] = '1';
      charArray0[3] = '8';
      charArray0[4] = '!';
      char char0 = 'w';
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(0, 'k');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("");
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.clear();
      int int1 = strBuilder0.indexOf('b', 39);
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft(39, (-1), 't');
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((-2943.7842F));
      String string0 = strBuilder0.rightString(0);
      StrBuilder strBuilder2 = strBuilder0.append('\"');
      String string1 = "";
      StrBuilder strBuilder3 = strBuilder0.appendWithSeparators((Collection) null, "");
      StrBuilder strBuilder4 = strBuilder1.insert(0, 0);
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("/38S5EuBHR");
      StrBuilder strBuilder5 = strBuilder3.deleteFirst(strMatcher0);
      int int0 = strBuilder3.size();
      String string2 = strBuilder1.toString();
      char[] charArray0 = new char[5];
      charArray0[0] = '\"';
      charArray0[1] = '\"';
      charArray0[2] = '\"';
      charArray0[3] = 'D';
      charArray0[4] = '\"';
      String string3 = strBuilder3.midString(0, 12);
      StrBuilder strBuilder6 = strBuilder3.append(661L);
      // Undeclared exception!
      try { 
        strBuilder1.insert(12, charArray0, 200, 12);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: 200
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceAll("java.vm.info", "org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrBuilder strBuilder2 = strBuilder0.replaceAll('G', 'G');
      // Undeclared exception!
      try { 
        strBuilder2.insert((-809), 1790.1);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -809
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(5);
      int int0 = strBuilder0.capacity();
      // Undeclared exception!
      try { 
        strBuilder0.insert(5, (float) 5);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 5
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("--ChoqFNE");
      int int0 = 44;
      StrBuilder strBuilder1 = strBuilder0.setLength(44);
      StrBuilder strBuilder2 = strBuilder1.append(474.3242F);
      int int1 = (-1930);
      int int2 = 1496;
      // Undeclared exception!
      try { 
        strBuilder0.replace((-1930), 1496, "Invalid offset: ");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1930
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.append(954.06F);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      int int0 = 591;
      StrBuilder strBuilder0 = new StrBuilder(591);
      StrBuilder strBuilder1 = strBuilder0.replaceAll("Index: ", "Index: ");
      // Undeclared exception!
      try { 
        strBuilder0.insert(591, (String) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 591
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Cj3_$4+Gn&TR[");
      StrBuilder strBuilder1 = strBuilder0.trim();
      char[] charArray0 = new char[5];
      charArray0[0] = 'r';
      charArray0[1] = 'p';
      charArray0[2] = 'a';
      charArray0[3] = ')';
      charArray0[4] = 'A';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      int int0 = 395;
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("*");
      int int1 = 750;
      // Undeclared exception!
      try { 
        strBuilder0.replace((StrMatcher) strMatcher_CharSetMatcher0, "Cj3_$4+Gn&TR[", 395, 395, 750);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1360));
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      int int0 = strBuilder0.lastIndexOf("", (-1360));
      StrBuilder strBuilder2 = strBuilder0.append(']');
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder1.insert((-1360), charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1360
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.appendPadding(0, ')');
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "3p`}9A2W~";
      int int0 = (-1041);
      // Undeclared exception!
      try { 
        strBuilder0.setLength((-1041));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1041
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = null;
      StrBuilder strBuilder1 = strBuilder0.insert(0, (char[]) null);
      // Undeclared exception!
      try { 
        strBuilder0.charAt(937);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 937
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1699));
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("Y|nPfW_=5nlM");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('x');
      StrBuilder strBuilder2 = strBuilder1.append(strBuilder0);
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadRight((Object) "Y|nPfW_=5nlM", 99, '\'');
      char[] charArray0 = new char[4];
      charArray0[0] = '\'';
      charArray0[1] = '\'';
      charArray0[2] = '\'';
      charArray0[3] = 'x';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder0.lastIndexOf(strMatcher0, (-3435));
      // Undeclared exception!
      try { 
        strBuilder1.setLength((-4454));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -4454
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(1703, 4, 'O');
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder1 = strBuilder0.replace((StrMatcher) strMatcher_TrimMatcher0, "l,[RjZyM", 0, 32, 0);
      String string0 = strBuilder1.substring(0, 0);
      StrTokenizer strTokenizer0 = strBuilder1.asTokenizer();
      StrBuilder strBuilder2 = strBuilder0.setNullText("PYM");
      int int0 = strBuilder2.indexOf((StrMatcher) strMatcher_TrimMatcher0);
      StrBuilder strBuilder3 = strBuilder0.setNullText("a11M");
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("#0sz4x~Z@Nu");
      StringBuffer stringBuffer0 = strBuilder3.toStringBuffer();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrBuilder strBuilder4 = strBuilder0.appendPadding(32, '|');
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) stringBuffer0);
      StrBuilder strBuilder5 = strBuilder3.replaceFirst((StrMatcher) strMatcher_TrimMatcher0, "l,[RjZyM");
      strBuilder_StrBuilderWriter0.flush();
      StrBuilder strBuilder6 = strBuilder3.appendFixedWidthPadRight(2, 2, '}');
      StrBuilder strBuilder7 = strBuilder6.appendFixedWidthPadRight((Object) strBuilder2, (-1), ',');
      boolean boolean0 = strBuilder3.endsWith("a11M");
      StrBuilder strBuilder8 = strBuilder2.append('8');
      StrBuilder strBuilder9 = strBuilder0.deleteAll((StrMatcher) strMatcher_TrimMatcher0);
      StrBuilder strBuilder10 = new StrBuilder();
      StrBuilder strBuilder11 = strBuilder2.appendFixedWidthPadLeft((Object) strBuilder10, 0, 'i');
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[4];
      charArray0[0] = 'C';
      charArray0[1] = 'U';
      charArray0[2] = 'W';
      charArray0[3] = 'o';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "");
      long long0 = strBuilder_StrBuilderReader0.skip(0L);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      // Undeclared exception!
      try { 
        strBuilder0.delete(4, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[3];
      charArray0[0] = '=';
      charArray0[1] = '`';
      charArray0[2] = 'y';
      // Undeclared exception!
      try { 
        strBuilder0.insert((-2145), charArray0, 1745, (-3615));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2145
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder0 = new StrBuilder((-582));
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "VO,|F]I,%WF");
      LinkedList<String> linkedList1 = new LinkedList<String>();
      StrBuilder strBuilder2 = new StrBuilder("VO,|F]I,%WF");
      // Undeclared exception!
      try { 
        strBuilder2.delete(1213, 1169);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[0];
      strBuilder0.buffer = charArray0;
      StrBuilder strBuilder1 = strBuilder0.deleteAll("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(1);
      int int0 = strBuilder0.capacity();
      // Undeclared exception!
      try { 
        strBuilder0.insert(1, charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("'=X];k1^-I3_");
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.appendNull();
      Writer writer0 = strBuilder2.asWriter();
      StrBuilder strBuilder3 = strBuilder2.append('C');
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[6];
      charArray0[0] = '*';
      charArray0[1] = '*';
      charArray0[2] = ']';
      charArray0[3] = '(';
      charArray0[4] = '0';
      charArray0[5] = 'b';
      char[] charArray1 = strBuilder0.getChars(charArray0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[0];
      char[] charArray1 = strBuilder0.getChars(charArray0);
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      char[] charArray2 = strBuilder0.toCharArray();
      // Undeclared exception!
      try { 
        strBuilder1.charAt((-4020));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -4020
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(117);
      int int0 = strBuilder0.capacity();
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3);
      boolean boolean0 = strBuilder0.endsWith("i q(3_&UdJ]&iKE,G");
      char[] charArray0 = strBuilder0.toCharArray();
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("i q(3_&UdJ]&iKE,G", 32, 32);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = strBuilder0.toCharArray();
      StrBuilder strBuilder1 = strBuilder0.clear();
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      boolean boolean0 = strBuilder0.contains((StrMatcher) strMatcher_TrimMatcher0);
      StrBuilder strBuilder1 = strBuilder0.append('A');
      StrBuilder strBuilder2 = strBuilder1.replaceAll('A', 'A');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[5];
      charArray0[0] = 'A';
      charArray0[1] = 'A';
      charArray0[2] = 'A';
      charArray0[3] = 'A';
      charArray0[4] = 'A';
      strBuilder_StrBuilderWriter0.write(charArray0);
      int int0 = strBuilder0.lastIndexOf('c', 1);
      StrBuilder strBuilder3 = strBuilder1.appendWithSeparators((Collection) null, "");
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      boolean boolean0 = strBuilder0.startsWith("");
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((Object) null);
      char[] charArray0 = new char[8];
      charArray0[0] = 'i';
      charArray0[1] = '\"';
      charArray0[2] = 'I';
      charArray0[3] = 'S';
      charArray0[4] = 'h';
      charArray0[5] = '=';
      charArray0[6] = 'I';
      charArray0[7] = 'c';
      StrBuilder strBuilder2 = strBuilder1.append(charArray0);
      String string0 = strBuilder0.toString();
      // Undeclared exception!
      try { 
        strBuilder0.insert((-299), (-2002.78698));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -299
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1638);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(1638, 1638, 'Q');
      StrBuilder strBuilder2 = strBuilder1.append((Object) "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      StrBuilder strBuilder3 = strBuilder2.append((-1));
      StrBuilder strBuilder4 = strBuilder2.insert(930, "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      char char0 = strBuilder1.charAt(108);
      String string0 = strBuilder1.toString();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      int int0 = strBuilder1.lastIndexOf(strMatcher0);
      StrBuilder strBuilder5 = strBuilder1.setNullText("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      // Undeclared exception!
      try { 
        strBuilder3.append("zy^-<a,wbg*NhKh3", 108, 1709);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[8];
      charArray0[0] = 'a';
      charArray0[1] = 'u';
      charArray0[2] = '1';
      charArray0[3] = 'U';
      charArray0[4] = '.';
      charArray0[5] = 'D';
      charArray0[6] = '>';
      charArray0[7] = 'I';
      strBuilder0.buffer = charArray0;
      StrBuilder strBuilder1 = new StrBuilder();
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      int int0 = strBuilder_StrBuilderTokenizer0.size();
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadLeft(object0, (-1588), '$');
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-608));
      StringBuffer stringBuffer0 = new StringBuffer(44);
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      String string0 = strBuilder0.midString(5, 5);
      StrBuilder strBuilder2 = strBuilder0.replaceAll("", "");
      // Undeclared exception!
      try { 
        strBuilder2.substring(5);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = "Invalid startIndex: ";
      // Undeclared exception!
      try { 
        strBuilder0.append("Invalid startIndex: ", 466, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.midString(0, 1);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-665));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[2];
      charArray0[0] = 'b';
      charArray0[1] = '0';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 0, 39);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("file.encoding");
      StrBuilder strBuilder1 = strBuilder0.append(0L);
      char[] charArray0 = new char[7];
      charArray0[0] = 'u';
      charArray0[1] = 'q';
      charArray0[2] = '9';
      charArray0[3] = 'W';
      charArray0[4] = '8';
      charArray0[5] = 'w';
      charArray0[6] = 'b';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      boolean boolean0 = strBuilder1.contains(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder1.append("file.encoding", 48, 48);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("");
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "");
      StrBuilder strBuilder2 = strBuilder0.append(stringBuffer0);
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      char[] charArray0 = new char[1];
      charArray0[0] = 'n';
      int int0 = strMatcher0.isMatch(charArray0, (-844), (-844), (-844));
      int int1 = strBuilder2.lastIndexOf(strMatcher0, 63);
      StrBuilder strBuilder3 = strBuilder0.setLength(4);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = 'O';
      StrBuilder strBuilder1 = strBuilder0.deleteAll('O');
      int int0 = (-1024);
      // Undeclared exception!
      try { 
        strBuilder0.append("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer", (-1024), (-1024));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      String string0 = "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer";
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[6];
      charArray0[0] = 'S';
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterMatcher(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "os.version");
      charArray0[1] = ']';
      strBuilder_StrBuilderWriter0.write(48);
      charArray0[2] = 'Y';
      charArray0[3] = '}';
      charArray0[4] = 'k';
      charArray0[5] = '%';
      int int0 = (-1);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, (-1), 116);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 116
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder strBuilder1 = new StrBuilder(0);
      StrBuilder strBuilder2 = strBuilder1.append("4yYUlC4<urLGul#<a(/", 0, 0);
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadRight((Object) "4yYUlC4<urLGul#<a(/", (-345), 'E');
      char[] charArray0 = new char[8];
      charArray0[0] = 'E';
      charArray0[1] = 'E';
      charArray0[2] = 'E';
      charArray0[3] = 'E';
      charArray0[4] = 'E';
      charArray0[5] = 'E';
      charArray0[6] = 'E';
      charArray0[7] = 'E';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      int int0 = strBuilder3.lastIndexOf((StrMatcher) strMatcher_CharSetMatcher0, 0);
      boolean boolean0 = strBuilder0.equals((Object) strBuilder1);
      boolean boolean1 = strBuilder1.isEmpty();
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      int int0 = 4;
      StrBuilder strBuilder0 = new StrBuilder(4);
      StrBuilder strBuilder1 = strBuilder0.clear();
      String string0 = strBuilder1.midString(0, 0);
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("Invalid length: ");
      StrBuilder strBuilder2 = strBuilder0.deleteFirst(strMatcher0);
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder2.getChars(0, 4, charArray0, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 4
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(116);
      StrBuilder strBuilder1 = strBuilder0.setNullText((String) null);
      StrBuilder strBuilder2 = strBuilder1.trim();
      StrBuilder strBuilder3 = strBuilder0.append('.');
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, 114, 116);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1141));
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(0, 0, '2');
      StrBuilder strBuilder2 = strBuilder0.append((-1141));
      String string0 = strBuilder1.getNewLineText();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      StrBuilder strBuilder3 = strBuilder2.replaceFirst((StrMatcher) null, (String) null);
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("8a1X]*Zn(Rk");
      StrBuilder strBuilder4 = strBuilder2.replaceAll(strMatcher0, ";0!&[");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark((-1141));
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.replace(0, 0, "Z{AZF`_U@UeX");
      boolean boolean0 = strBuilder1.startsWith("d{fQtVwVOzATX=H)");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[4];
      charArray0[0] = 'Y';
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((Object) "Z{AZF`_U@UeX", 0, 't');
      charArray0[1] = '=';
      charArray0[2] = 'V';
      charArray0[3] = '4';
      int int0 = 884;
      // Undeclared exception!
      try { 
        CharBuffer.wrap(charArray0, (-3784), 884);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      String string0 = "VO,|F]I,%WF";
      StrBuilder strBuilder0 = new StrBuilder("VO,|F]I,%WF");
      int int0 = 1213;
      // Undeclared exception!
      try { 
        strBuilder0.replace(1213, 1213, "VO,|F]I,%WF");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(">D");
      StrBuilder strBuilder1 = strBuilder0.replaceAll(">D", "5.1");
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(' ');
      StrBuilder strBuilder2 = strBuilder0.replaceFirst(strMatcher0, "!>;Xy(ZIM'?E5");
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("&\"g-0bld)");
      int int0 = strBuilder0.indexOf(strMatcher1);
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadLeft((Object) "!>;Xy(ZIM'?E5", 1055, '`');
      char[] charArray0 = new char[2];
      charArray0[0] = '}';
      charArray0[1] = 'B';
      StrBuilder strBuilder4 = strBuilder2.append(charArray0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      String string0 = ".<fud[yUA#P";
      StrBuilder strBuilder0 = new StrBuilder(".<fud[yUA#P");
      // Undeclared exception!
      try { 
        strBuilder0.insert(290, false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 290
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      int int0 = strBuilder_StrBuilderTokenizer0.size();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      int int1 = strBuilder0.indexOf(strMatcher0);
      StrBuilder strBuilder1 = new StrBuilder("]?^dx;;f.mk/e=}!4j");
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, (-2445), (-2445));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(183);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('b');
      StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
      // Undeclared exception!
      try { 
        strBuilder1.toCharArray((-3074), 183);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3074
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(object0, 723, '\'');
      int int0 = strBuilder0.lastIndexOf("(au8n?gQuS/1sD");
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      String string0 = ")y";
      StrBuilder strBuilder0 = new StrBuilder(")y");
      int int0 = 32;
      String string1 = strBuilder0.rightString(32);
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      char char0 = '6';
      StrMatcher strMatcher0 = StrMatcher.charMatcher('6');
      StrBuilder strBuilder2 = strBuilder1.replaceFirst(strMatcher0, "Q-;4H!%+SV?AS.]_%");
      StrBuilder strBuilder3 = strBuilder0.append((-1006.86580682983));
      int int1 = 108;
      StrBuilder strBuilder4 = strBuilder2.appendPadding(108, '6');
      StrBuilder strBuilder5 = strBuilder4.ensureCapacity(108);
      int int2 = strBuilder1.indexOf(")y");
      StrBuilder strBuilder6 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder6.new StrBuilderWriter();
      int int3 = 940;
      strBuilder_StrBuilderWriter0.write(940);
      StrBuilder strBuilder7 = strBuilder6.append(940);
      // Undeclared exception!
      try { 
        strBuilder6.validateIndex(32);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      String string0 = strBuilder0.rightString(0);
      char char0 = 'h';
      int int1 = strBuilder0.lastIndexOf('h');
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("");
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("");
      StrBuilder strBuilder2 = strBuilder1.replaceAll("end < start", "shX?");
      strBuilder2.validateIndex(0);
      StrBuilder strBuilder3 = strBuilder1.deleteFirst((StrMatcher) strMatcher_StringMatcher0);
      // Undeclared exception!
      try { 
        strBuilder3.insert((-1), (char[]) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      String string0 = "', has a length less than 2";
      StrBuilder strBuilder0 = new StrBuilder("', has a length less than 2");
      String string1 = null;
      boolean boolean0 = strBuilder0.endsWith((String) null);
      int int0 = (-1);
      StrBuilder strBuilder1 = new StrBuilder((-1));
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1), (char[]) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst((String) null, (String) null);
      StrBuilder strBuilder2 = strBuilder0.setNullText("length must be valid");
      StrBuilder strBuilder3 = new StrBuilder();
      boolean boolean0 = strBuilder2.equalsIgnoreCase(strBuilder3);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) strBuilder0;
      objectArray0[3] = (Object) strBuilder0;
      objectArray0[4] = (Object) strBuilder0;
      objectArray0[5] = (Object) strBuilder0;
      objectArray0[6] = (Object) strBuilder0;
      objectArray0[7] = (Object) strBuilder0;
      int int0 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.getChars(0, 0, (char[]) null, 0);
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("UKjMkV}I#v&I|}9~tF");
      char[] charArray0 = new char[1];
      charArray0[0] = 'Z';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(1777, 1777, charArray0, 1777);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1777
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      int int0 = (-492);
      StrBuilder strBuilder0 = new StrBuilder((-492));
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) null, (-492), '}');
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance();
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "");
      StrBuilder strBuilder3 = strBuilder1.appendFixedWidthPadRight(48, 524, '-');
      StrBuilder strBuilder4 = strBuilder2.append((Object) strBuilder1);
      Object object0 = new Object();
      StrBuilder strBuilder5 = strBuilder4.appendFixedWidthPadLeft(object0, (-1523), '}');
      // Undeclared exception!
      try { 
        strBuilder4.substring(2917, (-270));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) null, 0, 'G');
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1, 0, 0);
      strBuilder2.validateIndex(0);
      char[] charArray0 = new char[2];
      String string0 = strBuilder1.leftString(2193);
      charArray0[0] = 'G';
      StrTokenizer strTokenizer0 = strBuilder2.asTokenizer();
      charArray0[1] = 'G';
      StrBuilder strBuilder3 = strBuilder2.append(charArray0);
      StrBuilder strBuilder4 = strBuilder3.append(true);
      StrBuilder strBuilder5 = strBuilder3.append("");
      StrBuilder strBuilder6 = strBuilder0.replaceAll("", "");
      strBuilder0.validateIndex(0);
      String string1 = strBuilder1.midString(2488, (-1530));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 485, (-1530));
      boolean boolean0 = strBuilder0.contains('G');
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[9];
      charArray0[0] = ']';
      charArray0[1] = 'h';
      charArray0[2] = '{';
      charArray0[3] = '7';
      charArray0[4] = '@';
      charArray0[5] = '';
      charArray0[6] = 'P';
      charArray0[7] = 'v';
      charArray0[8] = 'p';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 117, 377);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      String string0 = "m4(u]|'qrqd\"a3ge&5";
      StrBuilder strBuilder0 = new StrBuilder("m4(u]|'qrqd\"a3ge&5");
      StrBuilder strBuilder1 = strBuilder0.append("', is neither of type Map.Entry nor an Array");
      String string1 = strBuilder0.getNullText();
      int int0 = strBuilder1.hashCode();
      int int1 = (-1158);
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder1.insert((-1158), charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1158
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.length();
      boolean boolean0 = strBuilder0.equals((Object) "H'[/");
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = new StrBuilder(0);
      Reader reader0 = strBuilder1.asReader();
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight((Object) strBuilder1, 0, 'L');
      StrBuilder strBuilder3 = strBuilder2.clear();
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadLeft((-953), 0, '8');
      StrBuilder strBuilder5 = strBuilder2.appendFixedWidthPadLeft((-953), (-953), 'L');
      StrBuilder strBuilder6 = strBuilder5.ensureCapacity(116);
      StrBuilder strBuilder7 = strBuilder5.setLength(0);
      int int0 = strBuilder1.size();
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = new StrBuilder(0);
      Reader reader0 = strBuilder1.asReader();
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight((Object) strBuilder1, 0, 'L');
      StrBuilder strBuilder3 = strBuilder2.clear();
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadLeft((-953), (int) 'L', '8');
      StrBuilder strBuilder5 = strBuilder2.appendFixedWidthPadLeft((-953), (-953), 'L');
      StrBuilder strBuilder6 = strBuilder5.ensureCapacity(116);
      StrBuilder strBuilder7 = strBuilder5.setLength(0);
      int int0 = strBuilder1.size();
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      // Undeclared exception!
      try { 
        strBuilder0.substring(2275, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(true);
      StrBuilder strBuilder2 = strBuilder1.setLength(4);
      StrBuilder strBuilder3 = strBuilder0.reverse();
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('Y');
      boolean boolean0 = strBuilder0.contains((String) null);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("jw\u0005.");
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder2 = strBuilder0.setNewLineText("jw\u0005.");
      StrBuilder strBuilder3 = strBuilder0.append(true);
      String string0 = strBuilder3.leftString((-2587));
      StrBuilder strBuilder4 = strBuilder3.deleteFirst("jw\u0005.");
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) "jw\u0005.";
      objectArray0[1] = (Object) "";
      objectArray0[2] = (Object) strBuilder4;
      StrBuilder strBuilder5 = strBuilder4.appendWithSeparators(objectArray0, "%vkTv3");
      boolean boolean0 = strBuilder0.endsWith("LkMu-Pqv1PJ9?");
      int int0 = strBuilder1.indexOf("%vkTv3");
      StrBuilder strBuilder6 = strBuilder0.deleteAll("jw\u0005.");
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder3, 31, (-3323));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.endsWith("");
      StrBuilder strBuilder1 = strBuilder0.deleteAll("");
      StrBuilder strBuilder2 = strBuilder1.ensureCapacity(5);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("'; the SystemUtils property value will default to null.");
      StrBuilder strBuilder1 = strBuilder0.insert(9, false);
      StrBuilder strBuilder2 = strBuilder0.deleteAll((String) null);
      StrBuilder strBuilder3 = strBuilder2.insert(9, 'H');
      StrBuilder strBuilder4 = strBuilder2.insert(9, 0.0F);
      StrBuilder strBuilder5 = strBuilder1.replaceFirst("", (String) null);
      StrBuilder strBuilder6 = new StrBuilder(832);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder6.new StrBuilderTokenizer();
      char[] charArray0 = new char[9];
      charArray0[0] = 'H';
      charArray0[1] = 'H';
      charArray0[2] = 'H';
      charArray0[3] = 'H';
      charArray0[4] = '\\';
      charArray0[5] = 'H';
      charArray0[6] = 'H';
      charArray0[7] = 'H';
      charArray0[8] = 'H';
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset(charArray0);
      StrBuilder strBuilder7 = strBuilder1.appendWithSeparators((Iterator) strTokenizer0, (String) null);
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      int int0 = strBuilder1.length();
      // Undeclared exception!
      try { 
        strBuilder6.setCharAt(91, 'u');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 91
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterChar('J');
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((String) null, 2581, 2646);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder("FF]9i1zz:2");
      StrBuilder strBuilder2 = strBuilder1.ensureCapacity(0);
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder1);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset("startIndex must be valid");
      StrBuilder strBuilder4 = strBuilder1.appendWithSeparators((Iterator) strTokenizer0, "''<6($ynC1Q-4AN");
      StrBuilder strBuilder5 = strBuilder2.ensureCapacity(24);
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder6 = strBuilder5.deleteAll((StrMatcher) strMatcher_TrimMatcher0);
      // Undeclared exception!
      try { 
        strBuilder6.toCharArray((-4210), (-4210));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -4210
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(582);
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("A4{+*$XZk+okfVuw", "A4{+*$XZk+okfVuw");
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.insert(0, false);
      StrBuilder strBuilder2 = strBuilder0.setNewLineText("Isd$ Z");
      Writer writer0 = strBuilder0.asWriter();
      char[] charArray0 = new char[9];
      charArray0[0] = 'p';
      charArray0[1] = 'M';
      charArray0[2] = '`';
      charArray0[3] = '_';
      charArray0[4] = '9';
      charArray0[5] = 'd';
      charArray0[6] = '^';
      charArray0[7] = ',';
      charArray0[8] = 'D';
      StrBuilder strBuilder3 = strBuilder0.append(charArray0);
      StrBuilder strBuilder4 = strBuilder1.insert(0, "$ ^OAwJ=sn");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setLength(1034);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
      int int0 = 0;
      long long0 = (-1684L);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) strBuilder_StrBuilderReader0, 0, 'o');
      char[] charArray0 = new char[7];
      charArray0[0] = 'o';
      charArray0[1] = 'o';
      charArray0[2] = 'o';
      charArray0[3] = 'U';
      charArray0[4] = 'o';
      charArray0[5] = 'o';
      charArray0[6] = 'o';
      int int1 = 967;
      // Undeclared exception!
      try { 
        strBuilder1.append(charArray0, 0, 967);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 967
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      char[] charArray0 = new char[5];
      charArray0[0] = 'e';
      charArray0[1] = 'v';
      charArray0[2] = ' ';
      charArray0[3] = 'D';
      charArray0[4] = '+';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 0, 2399);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 2399
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[2];
      charArray0[0] = 'r';
      charArray0[1] = 'X';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 557, (-3931));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -3931
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      String string0 = "`<weEdk8gT+\"O=S*";
      StrBuilder strBuilder0 = new StrBuilder("`<weEdk8gT+\"O=S*");
      double double0 = (-520.9);
      int int0 = Integer.MAX_VALUE;
      char[] charArray0 = new char[7];
      charArray0[0] = ':';
      charArray0[1] = '?';
      charArray0[2] = '\"';
      charArray0[3] = 'A';
      charArray0[4] = 'T';
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(Integer.MAX_VALUE);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2147483647
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder1 = strBuilder0.deleteAll("SiCqr");
      StrBuilder strBuilder2 = strBuilder0.appendNewLine();
      // Undeclared exception!
      try { 
        strBuilder0.insert((-4430), (long) (-4430));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -4430
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      int int0 = 5;
      StrBuilder strBuilder0 = new StrBuilder(5);
      StrBuilder strBuilder1 = strBuilder0.append(0.0);
      char[] charArray0 = new char[2];
      charArray0[0] = 'i';
      charArray0[1] = 'I';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      int int1 = 1164;
      // Undeclared exception!
      try { 
        strBuilder0.replace(strMatcher0, "", 116, 228, 1164);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 108;
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(1737);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1737
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("14bPtHtxb3ll:ry!U");
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder strBuilder1 = strBuilder0.setCharAt(0, 'l');
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('\\');
      int int0 = strBuilder1.lastIndexOf((StrMatcher) strMatcher_CharMatcher0);
      char[] charArray0 = new char[6];
      StrTokenizer strTokenizer0 = strBuilder1.asTokenizer();
      charArray0[0] = 'l';
      charArray0[1] = 'l';
      charArray0[2] = 'l';
      StrBuilder strBuilder2 = strBuilder0.setNewLineText(" DW");
      charArray0[3] = 'l';
      charArray0[4] = 'l';
      charArray0[5] = 'l';
      strBuilder1.validateIndex(0);
      StrBuilder strBuilder3 = strBuilder1.append(charArray0);
      boolean boolean0 = strBuilder3.equals((Object) strBuilder0);
      StrBuilder strBuilder4 = strBuilder0.insert(0, (Object) strBuilder3);
      StrBuilder strBuilder5 = strBuilder0.appendPadding(301, 'l');
      // Undeclared exception!
      try { 
        strBuilder3.append(strBuilder1, (-3510), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("O");
      int int0 = (-409);
      char char0 = 'I';
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt((-409), 'I');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -409
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrBuilder strBuilder2 = strBuilder1.setNewLineText("k7dkK");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StringBuffer stringBuffer0 = new StringBuffer("QVc(A-P#U;R5b");
      StrBuilder strBuilder3 = strBuilder0.append(stringBuffer0);
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset();
      StrBuilder strBuilder4 = strBuilder1.appendWithSeparators((Iterator) strTokenizer0, (String) null);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("9_F,+Ra4wFIzp");
      int int0 = strBuilder0.indexOf("9_F,+Ra4wFIzp");
      strBuilder0.validateIndex(0);
      StrBuilder strBuilder1 = strBuilder0.replaceAll('x', 'x');
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteAll('A');
      // Undeclared exception!
      try { 
        strBuilder1.validateRange(34, 34);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.lastIndexOf("", 2);
      StrBuilder strBuilder1 = strBuilder0.append((double) (-1));
      char[] charArray0 = null;
      StrBuilder strBuilder2 = strBuilder0.insert(1, (char[]) null, 1357, (-1779));
      // Undeclared exception!
      try { 
        strBuilder1.insert((-1), (char[]) null, (-1), (-303));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(2044, 2044, 'O');
      int int0 = strBuilder0.indexOf('O');
      char[] charArray0 = new char[8];
      charArray0[0] = 'O';
      charArray0[1] = 'O';
      charArray0[2] = 'O';
      charArray0[3] = 'O';
      charArray0[5] = 'O';
      charArray0[6] = 'O';
      charArray0[7] = 'O';
      StrBuilder strBuilder2 = strBuilder0.trim();
      StrBuilder strBuilder3 = strBuilder2.trim();
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrBuilder strBuilder4 = strBuilder1.deleteAll(strMatcher0);
      StrTokenizer strTokenizer0 = strBuilder4.asTokenizer();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      int int1 = strBuilder_StrBuilderReader0.read();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      StrBuilder strBuilder5 = strBuilder1.insert(106, false);
      StrBuilder strBuilder6 = strBuilder0.replaceAll('a', 'O');
      StrBuilder strBuilder7 = strBuilder6.ensureCapacity('O');
      boolean boolean1 = strBuilder1.equals(strBuilder0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(charArray0);
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("startIndex must be valid");
      int int0 = 44;
      int int1 = 0;
      StrBuilder strBuilder1 = strBuilder0.insert(0, (long) 44);
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight((Object) "startIndex must be valid", 44, '9');
      int int2 = strBuilder0.indexOf('j', 44);
      StrBuilder strBuilder3 = strBuilder2.append(false);
      String string0 = strBuilder3.substring(0);
      char[] charArray0 = strBuilder2.toCharArray();
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1), 0.0F);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "Invalid offset: ");
      // Undeclared exception!
      try { 
        strBuilder1.toCharArray((-869), 2685);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -869
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      String string0 = ")y";
      StrBuilder strBuilder0 = new StrBuilder(")y");
      int int0 = 32;
      String string1 = strBuilder0.rightString(32);
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      char char0 = '6';
      StrMatcher strMatcher0 = StrMatcher.charMatcher('6');
      StrBuilder strBuilder2 = strBuilder1.replaceFirst(strMatcher0, "Q-;4H!%+SV?AS.]_%");
      StrBuilder strBuilder3 = strBuilder0.append((-1006.86580682983));
      int int1 = 108;
      StrBuilder strBuilder4 = strBuilder2.appendPadding(108, '6');
      StrBuilder strBuilder5 = strBuilder0.appendFixedWidthPadRight(108, 32, '6');
      StrBuilder strBuilder6 = strBuilder4.ensureCapacity(108);
      int int2 = strBuilder1.indexOf(")y");
      StrBuilder strBuilder7 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder7.new StrBuilderWriter();
      int int3 = 940;
      strBuilder_StrBuilderWriter0.write(940);
      StrBuilder strBuilder8 = strBuilder7.append(940);
      // Undeclared exception!
      try { 
        strBuilder7.validateIndex(32);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrTokenizer strTokenizer0 = strBuilder1.asTokenizer();
      StrBuilder strBuilder2 = strBuilder0.ensureCapacity((-4435));
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("k/{eKmu[=fVPC3H:9'");
      int int0 = strBuilder2.lastIndexOf(strMatcher0, 1051);
      String string0 = "f7p.ia";
      StrBuilder strBuilder3 = strBuilder0.replaceAll("f7p.ia", "f7p.ia");
      StrBuilder strBuilder4 = strBuilder3.deleteFirst(strMatcher0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder5 = strBuilder0.appendWithSeparators((Collection) linkedList0, "]*|9gY");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      char[] charArray0 = null;
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read((char[]) null, (-884), (-1133));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      String string0 = "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter";
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      Object object1 = strBuilder_StrBuilderTokenizer0.clone();
      char char0 = 'U';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(object0, 0, 'U');
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft(0, 0, 'U');
      StrBuilder strBuilder3 = strBuilder0.deleteAll("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      char[] charArray0 = new char[1];
      // Undeclared exception!
      try { 
        strBuilder2.insert(156, 'U');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 156
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-179);
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt((-179));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -179
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      String string0 = "nTTihu0`;yOb+~DU2V";
      StrBuilder strBuilder0 = new StrBuilder("nTTihu0`;yOb+~DU2V");
      int int0 = 2681;
      int int1 = 0;
      char char0 = '3';
      StrBuilder strBuilder1 = strBuilder0.insert(0, '3');
      // Undeclared exception!
      try { 
        strBuilder0.insert(2681, 0.0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2681
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      String string0 = "8I-AMi";
      StrBuilder strBuilder0 = new StrBuilder("8I-AMi");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      StrBuilder strBuilder1 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, 2, 2);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2601);
      // Undeclared exception!
      try { 
        strBuilder0.charAt(1988);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1988
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      int int0 = 3550;
      StrBuilder strBuilder0 = new StrBuilder(3550);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      int int1 = strBuilder0.lastIndexOf(strMatcher0);
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      String string0 = strBuilder0.toString();
      StrBuilder strBuilder1 = strBuilder0.append(115);
      StrBuilder strBuilder2 = strBuilder0.append((Object) null);
      Reader reader0 = strBuilder1.asReader();
      char char0 = 'T';
      int int2 = strBuilder0.lastIndexOf('T', 115);
      int int3 = (-1686);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1686), false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1686
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.substring(0);
      StrBuilder strBuilder1 = strBuilder0.append(true);
      StrBuilder strBuilder2 = strBuilder0.reverse();
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('Y');
      StrBuilder strBuilder3 = strBuilder2.replaceAll((StrMatcher) strMatcher_CharMatcher0, "");
      StrBuilder strBuilder4 = strBuilder2.appendFixedWidthPadRight((Object) null, 0, '4');
      StrBuilder strBuilder5 = strBuilder2.insert(0, 34);
      int int0 = strBuilder5.size();
      boolean boolean0 = strBuilder0.contains((String) null);
  }
}
