* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.math.linear.EigenDecompositionImpl
* Starting client
* Connecting to master process on port 5472
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/patch1-Math-80-SOFix/Math_80_1_sofix/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math.linear.EigenDecompositionImpl
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 851
  - Branch 428
  - Exception 0
  - MutationFactory 212
  - Output 28
  - Method 17
  - MethodNoException 17
  - CBranchFitnessFactory 428
* Using seed 1585470691243
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%][Progress:=>                            6%] [Cov:>                                  0%][Progress:=>                            6%] [Cov:>                                  1%][Progress:=>                            6%] [Cov:====>                              13%][Progress:==>                           8%] [Cov:>                                  0%][Progress:===>                          10%] [Cov:>                                  0%][Progress:===>                          10%] [Cov:====>                              12%][Progress:===>                          11%] [Cov:>                                  0%][Progress:===>                          11%] [Cov:>                                  1%][Progress:===>                          11%] [Cov:====>                              13%][Progress:===>                          11%] [Cov:====>                              14%][Progress:===>                          13%] [Cov:=>                                 3%][Progress:===>                          13%] [Cov:=>                                 5%][Progress:===>                          13%] [Cov:=====>                             17%][Progress:===>                          13%] [Cov:======>                            19%][Progress:===>                          13%] [Cov:=======>                           20%][Progress:===>                          13%] [Cov:========>                          23%][Progress:===>                          13%] [Cov:========>                          25%][Progress:===>                          13%] [Cov:=========>                         26%][Progress:====>                         15%] [Cov:>                                  0%][Progress:====>                         15%] [Cov:>                                  1%][Progress:====>                         15%] [Cov:====>                              13%][Progress:====>                         15%] [Cov:====>                              14%][Progress:====>                         15%] [Cov:=====>                             15%][Progress:====>                         15%] [Cov:=====>                             17%][Progress:====>                         15%] [Cov:======>                            18%][Progress:====>                         15%] [Cov:======>                            19%][Progress:====>                         16%] [Cov:====>                              13%][Progress:====>                         16%] [Cov:====>                              14%][Progress:=====>                        18%] [Cov:==>                                7%][Progress:=====>                        18%] [Cov:====>                              13%][Progress:=====>                        18%] [Cov:=========>                         26%][Progress:=====>                        18%] [Cov:===========>                       32%][Progress:=====>                        18%] [Cov:===========>                       34%][Progress:=====>                        18%] [Cov:============>                      35%][Progress:=====>                        18%] [Cov:=============>                     39%][Progress:======>                       20%] [Cov:=>                                 3%][Progress:======>                       20%] [Cov:=>                                 5%][Progress:======>                       20%] [Cov:=====>                             17%][Progress:======>                       20%] [Cov:======>                            19%][Progress:======>                       20%] [Cov:=======>                           20%][Progress:======>                       20%] [Cov:=========>                         26%][Progress:======>                       20%] [Cov:==========>                        30%][Progress:======>                       20%] [Cov:==========>                        31%][Progress:========>                     28%] [Cov:>                                  0%][Progress:========>                     28%] [Cov:>                                  1%][Progress:========>                     28%] [Cov:====>                              13%][Progress:========>                     28%] [Cov:====>                              14%][Progress:=========>                    30%] [Cov:>                                  0%][Progress:=========>                    30%] [Cov:>                                  1%][Progress:=========>                    30%] [Cov:====>                              13%][Progress:=========>                    30%] [Cov:====>                              14%][Progress:==========>                   35%] [Cov:>                                  0%][Progress:==========>                   35%] [Cov:>                                  1%][Progress:==========>                   35%] [Cov:====>                              13%][Progress:==========>                   35%] [Cov:====>                              14%][Progress:==========>                   35%] [Cov:=====>                             16%][Progress:==========>                   35%] [Cov:=====>                             17%][Progress:==========>                   35%] [Cov:======>                            19%][Progress:==========>                   35%] [Cov:=======>                           20%][Progress:==========>                   35%] [Cov:=======>                           21%][Progress:===========>                  38%] [Cov:>                                  0%][Progress:===========>                  38%] [Cov:>                                  1%][Progress:===========>                  38%] [Cov:====>                              13%][Progress:===========>                  38%] [Cov:====>                              14%][Progress:===========>                  38%] [Cov:=====>                             16%][Progress:===========>                  38%] [Cov:=====>                             17%][Progress:===========>                  38%] [Cov:======>                            18%]#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (mmap) failed to map 65536 bytes for committing reserved memory.
# An error report file with more information is saved as:
# /home/hewitt/work/DiffTGen-master/output/patch1-Math-80-SOFix/Math_80_1_sofix/target/0/2/hs_err_pid48788.log
#
# Compiler replay data is saved as:
# /home/hewitt/work/DiffTGen-master/output/patch1-Math-80-SOFix/Math_80_1_sofix/target/0/2/replay_pid48788.log
