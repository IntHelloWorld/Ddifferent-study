* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.lang3.time.FastDateFormat
* Starting client
* Connecting to master process on port 16089
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/patch1-Lang-38-Jaid/Lang_38_1_jaid/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.lang3.time.FastDateFormat
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 456
  - Branch 444
  - Exception 0
  - MutationFactory 846
  - Output 163
  - Method 78
  - MethodNoException 78
  - CBranchFitnessFactory 444
* Using seed 1585557153613
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%][Progress:==>                           8%] [Cov:=>                                 4%][Progress:==>                           8%] [Cov:==>                                8%][Progress:==>                           8%] [Cov:=======>                           21%][Progress:==>                           8%] [Cov:========>                          24%][Progress:==>                           8%] [Cov:========>                          25%][Progress:===>                          10%] [Cov:=========>                         28%][Progress:===>                          10%] [Cov:==========>                        31%][Progress:===>                          11%] [Cov:==>                                6%][Progress:===>                          11%] [Cov:====>                              12%][Progress:===>                          11%] [Cov:========>                          24%][Progress:===>                          13%] [Cov:==========>                        31%][Progress:===>                          13%] [Cov:===========>                       32%][Progress:===>                          13%] [Cov:===========>                       33%][Progress:===>                          13%] [Cov:============>                      35%][Progress:===>                          13%] [Cov:=============>                     39%][Progress:====>                         15%] [Cov:=========>                         27%][Progress:====>                         15%] [Cov:=========>                         28%][Progress:====>                         15%] [Cov:===========>                       32%][Progress:=======>                      26%] [Cov:>                                  0%][Progress:=======>                      26%] [Cov:====>                              12%][Progress:=======>                      26%] [Cov:====>                              13%][Progress:=======>                      26%] [Cov:======>                            18%][Progress:=======>                      26%] [Cov:=======>                           20%][Progress:=======>                      26%] [Cov:========>                          23%][Progress:========>                     28%] [Cov:=>                                 5%][Progress:========>                     28%] [Cov:===>                               10%][Progress:========>                     28%] [Cov:========>                          23%][Progress:========>                     28%] [Cov:=========>                         27%][Progress:========>                     28%] [Cov:=========>                         28%][Progress:========>                     28%] [Cov:==========>                        29%][Progress:========>                     28%] [Cov:==========>                        30%][Progress:========>                     28%] [Cov:===========>                       34%][Progress:=========>                    30%] [Cov:=>                                 5%][Progress:=========>                    30%] [Cov:===>                               10%][Progress:=========>                    30%] [Cov:========>                          23%][Progress:=========>                    30%] [Cov:=========>                         28%][Progress:=========>                    30%] [Cov:==========>                        29%][Progress:=========>                    30%] [Cov:===========>                       33%][Progress:=========>                    33%] [Cov:=>                                 5%][Progress:=========>                    33%] [Cov:===>                               10%][Progress:=========>                    33%] [Cov:========>                          23%][Progress:=========>                    33%] [Cov:=========>                         27%][Progress:=========>                    33%] [Cov:=========>                         28%][Progress:=========>                    33%] [Cov:===========>                       32%][Progress:==========>                   35%] [Cov:=======>                           22%][Progress:==========>                   35%] [Cov:=========>                         26%][Progress:==========>                   35%] [Cov:=========>                         27%][Progress:==========>                   35%] [Cov:=========>                         28%][Progress:==========>                   35%] [Cov:==========>                        31%][Progress:==========>                   36%] [Cov:==>                                6%][Progress:==========>                   36%] [Cov:===>                               11%][Progress:==========>                   36%] [Cov:========>                          24%][Progress:==========>                   36%] [Cov:==========>                        29%][Progress:===========>                  38%] [Cov:==========>                        31%][Progress:===========>                  38%] [Cov:===========>                       32%][Progress:===========>                  38%] [Cov:============>                      36%][Progress:============>                 40%] [Cov:=========>                         26%][Progress:============>                 40%] [Cov:=========>                         27%][Progress:============>                 40%] [Cov:=========>                         28%][Progress:============>                 40%] [Cov:==========>                        31%][Progress:============>                 41%] [Cov:==>                                6%][Progress:============>                 41%] [Cov:====>                              12%][Progress:============>                 41%] [Cov:========>                          24%][Progress:============>                 41%] [Cov:==========>                        30%][Progress:============>                 41%] [Cov:==========>                        31%][Progress:============>                 41%] [Cov:===========>                       33%][Progress:============>                 41%] [Cov:============>                      35%][Progress:============>                 41%] [Cov:==============>                    40%][Progress:============>                 43%] [Cov:=>                                 5%][Progress:============>                 43%] [Cov:===>                               10%][Progress:============>                 43%] [Cov:========>                          23%][Progress:============>                 43%] [Cov:=========>                         27%][Progress:============>                 43%] [Cov:=========>                         28%][Progress:============>                 43%] [Cov:==========>                        29%][Progress:============>                 43%] [Cov:==========>                        30%][Progress:============>                 43%] [Cov:===========>                       34%][Progress:=============>                45%] [Cov:==>                                6%][Progress:=============>                45%] [Cov:====>                              12%][Progress:=============>                45%] [Cov:========>                          24%][Progress:=============>                45%] [Cov:==========>                        29%][Progress:=============>                45%] [Cov:==========>                        30%][Progress:=============>                45%] [Cov:==========>                        31%][Progress:=============>                45%] [Cov:============>                      35%][Progress:=============>                46%] [Cov:=========>                         28%][Progress:=============>                46%] [Cov:==========>                        30%][Progress:=============>                46%] [Cov:===========>                       34%][Progress:==============>               48%] [Cov:=>                                 5%][Progress:==============>               48%] [Cov:===>                               11%][Progress:==============>               48%] [Cov:========>                          23%][Progress:==============>               48%] [Cov:=========>                         28%][Progress:==============>               48%] [Cov:==========>                        29%][Progress:==============>               48%] [Cov:==========>                        30%][Progress:==============>               48%] [Cov:===========>                       34%][Progress:===============>              50%] [Cov:==>                                7%][Progress:===============>              50%] [Cov:====>                              13%][Progress:===============>              50%] [Cov:=========>                         26%][Progress:===============>              50%] [Cov:===========>                       34%][Progress:===============>              50%] [Cov:============>                      35%][Progress:===============>              50%] [Cov:============>                      37%][Progress:===============>              50%] [Cov:=============>                     38%][Progress:===============>              50%] [Cov:===============>                   43%][Progress:===============>              51%] [Cov:=>                                 3%][Progress:===============>              51%] [Cov:==>                                8%][Progress:===============>              51%] [Cov:=======>                           20%][Progress:===============>              51%] [Cov:========>                          23%][Progress:===============>              51%] [Cov:========>                          24%][Progress:===============>              51%] [Cov:=========>                         27%][Progress:===============>              51%] [Cov:=========>                         28%][Progress:===============>              51%] [Cov:===========>                       32%][Progress:===============>              51%] [Cov:===========>                       34%][Progress:===============>              53%] [Cov:==>                                7%][Progress:===============>              53%] [Cov:====>                              13%][Progress:===============>              53%] [Cov:=========>                         26%][Progress:===============>              53%] [Cov:===========>                       32%][Progress:===============>              53%] [Cov:===========>                       33%][Progress:===============>              53%] [Cov:============>                      35%][Progress:===============>              53%] [Cov:============>                      36%][Progress:===============>              53%] [Cov:==============>                    41%][Progress:================>             55%] [Cov:===========>                       34%][Progress:================>             56%] [Cov:==========>                        30%][Progress:================>             56%] [Cov:==========>                        31%][Progress:================>             56%] [Cov:===========>                       32%][Progress:================>             56%] [Cov:============>                      36%][Progress:================>             56%] [Cov:===============>                   43%][Progress:=================>            58%] [Cov:===========>                       34%][Progress:=================>            58%] [Cov:============>                      36%][Progress:==================>           60%] [Cov:=====>                             16%][Progress:==================>           60%] [Cov:==============>                    41%][Progress:==================>           60%] [Cov:==============>                    42%][Progress:==================>           61%] [Cov:===========>                       33%][Progress:==================>           61%] [Cov:===========>                       34%][Progress:==================>           61%] [Cov:=============>                     38%][Progress:==================>           61%] [Cov:=============>                     39%][Progress:==================>           61%] [Cov:===============>                   43%][Progress:==================>           61%] [Cov:===============>                   44%][Progress:==================>           61%] [Cov:===============>                   45%][Progress:==================>           63%] [Cov:=========>                         28%][Progress:==================>           63%] [Cov:===========>                       32%][Progress:==================>           63%] [Cov:=============>                     38%][Progress:===================>          65%] [Cov:===========>                       32%][Progress:===================>          65%] [Cov:============>                      37%][Progress:====================>         68%] [Cov:=====================>             62%][Progress:=====================>        70%] [Cov:=====================>             61%][Progress:=====================>        70%] [Cov:=====================>             62%][Progress:=====================>        71%] [Cov:=====================>             61%][Progress:=====================>        71%] [Cov:=====================>             62%][Progress:=====================>        73%] [Cov:=====================>             61%][Progress:=====================>        73%] [Cov:=====================>             62%][Progress:======================>       75%] [Cov:=====================>             61%][Progress:======================>       75%] [Cov:=====================>             62%][Progress:=======================>      78%] [Cov:=====================>             62%][Progress:========================>     80%] [Cov:=====================>             62%][Progress:========================>     81%] [Cov:=====================>             61%][Progress:========================>     81%] [Cov:=====================>             62%][Progress:========================>     83%] [Cov:=====================>             61%][Progress:========================>     83%] [Cov:=====================>             62%][Progress:========================>     83%] [Cov:======================>            63%][Progress:=========================>    85%] [Cov:=====================>             62%][Progress:=========================>    85%] [Cov:======================>            63%][Progress:=========================>    86%] [Cov:=====================>             61%][Progress:=========================>    86%] [Cov:=====================>             62%][Progress:===========================>  90%] [Cov:======================>            63%][Progress:===========================>  91%] [Cov:======================>            63%][Progress:===========================>  93%] [Cov:=====================>             61%][Progress:===========================>  93%] [Cov:=====================>             62%][Progress:============================> 95%] [Cov:=====================>             62%][Progress:============================> 95%] [Cov:======================>            63%][Progress:============================> 96%] [Cov:=====================>             62%][Progress:=============================>98%] [Cov:=====================>             62%][Progress:=============================>98%] [Cov:======================>            63%][Progress:==============================100%] [Cov:=====================>             61%][Progress:==============================100%] [Cov:=====================>             62%][Progress:==============================100%] [Cov:======================>            63%][Progress:==============================100%] [Cov:=====================>             61%][Progress:==============================100%] [Cov:======================>            63%][Progress:==============================100%] [Cov:======================>            64%]
* Search finished after 66s and 4 generations, 2613 statements, best individual has fitness: 1000.8847591169724
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 82%
* Total number of goals: 456
* Number of covered goals: 372
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 74%
* Total number of goals: 444
* Number of covered goals: 327
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 24
* Number of covered goals: 24
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 60%
* Total number of goals: 846
* Number of covered goals: 505
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 36%
* Total number of goals: 163
* Number of covered goals: 58
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 49%
* Total number of goals: 78
* Number of covered goals: 38
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 47%
* Total number of goals: 78
* Number of covered goals: 37
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 72%
* Total number of goals: 444
* Number of covered goals: 318
* Generated 74 tests with total length 257
* Resulting test suite's coverage: 65% (average coverage for all fitness functions)
* Compiling and checking tests
* Writing JUnit test case 'FastDateFormat_ESTest' to evosuite-tests
* Done!

* Computation finished
