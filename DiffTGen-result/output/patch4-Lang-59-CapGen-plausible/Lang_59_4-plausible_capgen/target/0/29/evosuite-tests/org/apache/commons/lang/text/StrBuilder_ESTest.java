/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 28 16:57:47 GMT 2020
 */

package org.apache.commons.lang.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.Writer;
import java.nio.CharBuffer;
import java.nio.ReadOnlyBufferException;
import java.util.Collection;
import java.util.Comparator;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.NoSuchElementException;
import java.util.stream.Stream;
import org.apache.commons.lang.text.StrBuilder;
import org.apache.commons.lang.text.StrMatcher;
import org.apache.commons.lang.text.StrTokenizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StrBuilder_ESTest extends StrBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('7');
      StrBuilder strBuilder2 = strBuilder1.deleteAll("5s|gM79e1k");
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      boolean boolean0 = strBuilder2.contains((StrMatcher) strMatcher_TrimMatcher0);
      StrBuilder strBuilder3 = strBuilder1.insert(0, (float) 0);
      String string0 = strBuilder3.midString(0, 0);
      StrBuilder strBuilder4 = strBuilder0.replaceAll("5s|gM79e1k", "D^}DkW!D]W:+ivB?b'0");
      StrBuilder strBuilder5 = strBuilder0.deleteAll("Q");
      Integer integer0 = new Integer(0);
      StrBuilder strBuilder6 = strBuilder5.appendFixedWidthPadLeft((Object) integer0, 0, '7');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string1 = strBuilder_StrBuilderTokenizer0.getContent();
      char[] charArray0 = new char[4];
      charArray0[0] = '7';
      charArray0[1] = '7';
      charArray0[2] = 'O';
      charArray0[3] = ')';
      StrBuilder strBuilder7 = strBuilder0.delete(0, 0);
      StrBuilder strBuilder8 = strBuilder1.reverse();
      StrBuilder strBuilder9 = strBuilder7.insert(0, (double) 0);
      String string2 = strBuilder9.midString(0, (-465));
      StrBuilder strBuilder10 = strBuilder2.setNullText("Q");
      char char0 = strBuilder5.charAt(0);
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterMatcher(strMatcher_TrimMatcher0);
      StrBuilder strBuilder11 = strBuilder7.appendWithSeparators((Iterator) strTokenizer0, "Q");
      StrBuilder strBuilder12 = strBuilder10.append("yJ-b%~mG3x(b>'U");
      int int0 = strBuilder2.lastIndexOf('7', 1710);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[8];
      charArray0[0] = 'I';
      charArray0[1] = 'O';
      charArray0[2] = 'd';
      charArray0[3] = 'B';
      charArray0[4] = '~';
      charArray0[5] = 't';
      charArray0[6] = 'L';
      charArray0[7] = 'c';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0, 0, 0);
      StrBuilder strBuilder2 = new StrBuilder('O');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      int int0 = strBuilder2.lastIndexOf(strMatcher0);
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) 'B';
      objectArray0[1] = (Object) 'O';
      objectArray0[2] = (Object) '~';
      objectArray0[3] = (Object) 'B';
      objectArray0[4] = (Object) 'O';
      objectArray0[5] = (Object) 'O';
      objectArray0[6] = (Object) 't';
      objectArray0[7] = (Object) 'c';
      StrBuilder strBuilder3 = strBuilder0.appendWithSeparators(objectArray0, "");
      StrBuilder strBuilder4 = strBuilder2.append((String) null, (-1), 1658);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[9];
      charArray0[1] = 'p';
      charArray0[2] = '`';
      charArray0[3] = 'z';
      charArray0[4] = 'Q';
      int int0 = strBuilder0.validateRange(0, 0);
      charArray0[6] = '\"';
      charArray0[7] = 'F';
      StrBuilder strBuilder1 = strBuilder0.append('r');
      charArray0[8] = '9';
      StrBuilder strBuilder2 = strBuilder0.insert(0, charArray0);
      StrBuilder strBuilder3 = strBuilder0.append('c');
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('7');
      StrBuilder strBuilder2 = strBuilder1.deleteAll("5s|gM79e1k");
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      boolean boolean0 = strBuilder2.contains((StrMatcher) strMatcher_TrimMatcher0);
      StrBuilder strBuilder3 = strBuilder1.insert(0, (float) 0);
      String string0 = strBuilder3.midString(0, 0);
      StrBuilder strBuilder4 = strBuilder0.replaceAll("5s|gM79e1k", "D^}DkW!D]W:+ivB?b'0");
      StrBuilder strBuilder5 = strBuilder0.deleteAll("Q");
      Integer integer0 = new Integer(0);
      StrBuilder strBuilder6 = strBuilder5.appendFixedWidthPadLeft((Object) integer0, 0, '7');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string1 = strBuilder_StrBuilderTokenizer0.getContent();
      char[] charArray0 = new char[4];
      charArray0[0] = '7';
      charArray0[1] = '7';
      charArray0[2] = 'O';
      charArray0[3] = ')';
      StrBuilder strBuilder7 = strBuilder0.delete(0, 0);
      StrBuilder strBuilder8 = strBuilder0.append(charArray0);
      StrBuilder strBuilder9 = strBuilder1.reverse();
      StrBuilder strBuilder10 = strBuilder7.insert(0, (double) 0);
      String string2 = strBuilder10.midString(0, (-465));
      StrBuilder strBuilder11 = strBuilder2.setNullText("Q");
      char char0 = strBuilder8.charAt(0);
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterMatcher(strMatcher_TrimMatcher0);
      StrBuilder strBuilder12 = strBuilder7.appendWithSeparators((Iterator) strTokenizer0, "Q");
      StrBuilder strBuilder13 = strBuilder11.append("yJ-b%~mG3x(b>'U");
      int int0 = strBuilder2.lastIndexOf('7', 1710);
      boolean boolean1 = strBuilder7.endsWith("");
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Object[] objectArray0 = new Object[7];
      StrBuilder strBuilder0 = new StrBuilder((-1));
      boolean boolean0 = strBuilder0.isEmpty();
      int int0 = strBuilder0.lastIndexOf('_');
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[7];
      strBuilder_StrBuilderReader0.reset();
      charArray0[0] = '!';
      charArray0[1] = 'l';
      charArray0[2] = 'P';
      strBuilder_StrBuilderReader0.reset();
      charArray0[3] = '';
      charArray0[4] = '\\';
      charArray0[5] = '5';
      charArray0[6] = 'r';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharBuffer charBuffer1 = CharBuffer.allocate(1895);
      CharBuffer charBuffer2 = CharBuffer.wrap((CharSequence) charBuffer0);
      int int0 = strBuilder_StrBuilderReader0.read(charBuffer2);
      strBuilder_StrBuilderReader0.close();
      int int1 = strBuilder0.hashCode();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("java.vm.vendor", 11, 0);
      strBuilder_StrBuilderWriter0.write(charArray0);
      StrBuilder strBuilder1 = strBuilder0.appendPadding(0, '');
      boolean boolean0 = strBuilder0.startsWith("78K]!u~g43bj");
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      String string0 = "l@";
      StrBuilder strBuilder0 = new StrBuilder("l@");
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      String string1 = "7hN!Orj";
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, (-613), (-613));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Writer writer0 = strBuilder0.asWriter();
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      StrMatcher strMatcher1 = StrMatcher.commaMatcher();
      StrMatcher strMatcher2 = StrMatcher.stringMatcher((String) null);
      boolean boolean0 = strBuilder1.contains(strMatcher1);
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) strMatcher0;
      objectArray0[1] = (Object) strBuilder1;
      objectArray0[2] = (Object) strMatcher2;
      Object object0 = new Object();
      objectArray0[3] = object0;
      objectArray0[4] = (Object) strMatcher1;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object1 = strBuilder_StrBuilderTokenizer0.clone();
      objectArray0[5] = object1;
      objectArray0[6] = (Object) strMatcher0;
      objectArray0[7] = (Object) null;
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators(objectArray0, "");
      String string0 = strBuilder1.leftString(Integer.MAX_VALUE);
      StrBuilder strBuilder3 = strBuilder1.appendNewLine();
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(112);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) "_", 3162, '6');
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('6');
      int int0 = strBuilder0.indexOf((StrMatcher) strMatcher_CharMatcher0);
      StrBuilder strBuilder2 = strBuilder1.deleteFirst('A');
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      StrBuilder strBuilder1 = new StrBuilder(0);
      int int1 = 1736;
      String string0 = strBuilder0.substring(0, 1736);
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      StrBuilder strBuilder2 = strBuilder0.trim();
      // Undeclared exception!
      try { 
        strBuilder2.replace((-2445), (-2445), "x8UG%?IQ");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2445
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst((String) null, "2~Y<c;^)iI\"YvaI<+D");
      StrBuilder strBuilder2 = strBuilder0.insert(0, (Object) "IS!4#[U\"]2f%X");
      char[] charArray0 = new char[0];
      StrBuilder strBuilder3 = strBuilder2.insert(0, charArray0);
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("");
      boolean boolean0 = strBuilder3.contains((StrMatcher) strMatcher_StringMatcher0);
      char[] charArray1 = strBuilder3.toCharArray(0, 1912);
      String string0 = strBuilder1.midString(0, 0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(0L);
      StrBuilder strBuilder4 = strBuilder2.replaceAll(')', ')');
      StrMatcher strMatcher0 = StrMatcher.charMatcher('N');
      StrBuilder strBuilder5 = strBuilder0.append(false);
      StrBuilder strBuilder6 = strBuilder5.append("");
      String string1 = strBuilder6.substring(0, 0);
      StrBuilder strBuilder7 = strBuilder1.appendFixedWidthPadRight(0, 0, 'z');
      StringBuffer stringBuffer0 = strBuilder2.toStringBuffer();
      StrBuilder strBuilder8 = strBuilder2.insert(0, (-834));
      boolean boolean1 = strBuilder6.contains("2~Y<c;^)iI\"YvaI<+D");
      StrBuilder strBuilder9 = strBuilder3.appendFixedWidthPadLeft(0, 1131, ')');
      char[] charArray2 = strBuilder3.toCharArray();
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(112);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(19, 48, '-');
      StrBuilder strBuilder2 = strBuilder1.setNullText("");
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('I');
      int int0 = strBuilder0.indexOf((StrMatcher) strMatcher_CharMatcher0);
      StrBuilder strBuilder3 = new StrBuilder("ApV7KdiagQhGZ!,");
      StrBuilder strBuilder4 = strBuilder0.append(strBuilder3);
      int int1 = strBuilder1.indexOf('I', 48);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst((String) null, "2~Y<c;^)iI\"YvaI<+D");
      StrBuilder strBuilder2 = strBuilder0.insert(0, (Object) "IS!4#[U\"]2f%X");
      char[] charArray0 = new char[0];
      StrBuilder strBuilder3 = strBuilder2.insert(0, charArray0);
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("");
      boolean boolean0 = strBuilder3.contains((StrMatcher) strMatcher_StringMatcher0);
      char[] charArray1 = strBuilder3.toCharArray(0, 1912);
      String string0 = strBuilder1.midString(0, 0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(0L);
      StrBuilder strBuilder4 = strBuilder2.replaceAll(')', ')');
      StrMatcher strMatcher0 = StrMatcher.charMatcher('N');
      StrBuilder strBuilder5 = strBuilder0.append(false);
      StrBuilder strBuilder6 = strBuilder5.append("");
      String string1 = strBuilder6.substring(0, 0);
      StrBuilder strBuilder7 = strBuilder1.appendFixedWidthPadRight(0, 0, 'z');
      StringBuffer stringBuffer0 = strBuilder2.toStringBuffer();
      StrBuilder strBuilder8 = strBuilder2.insert(0, (-834));
      boolean boolean1 = strBuilder6.contains("2~Y<c;^)iI\"YvaI<+D");
      StrBuilder strBuilder9 = strBuilder3.appendFixedWidthPadLeft(0, 1131, ')');
      StrBuilder strBuilder10 = strBuilder1.setLength(1131);
      int int0 = strBuilder9.lastIndexOf("ggu.[");
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("0p9PZ.R/Aq5D?S]");
      strBuilder0.validateIndex(0);
      StrBuilder strBuilder1 = new StrBuilder(0);
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      String string0 = strBuilder2.toString();
      StrBuilder strBuilder3 = strBuilder0.deleteAll('Y');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder3.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("0p9PZ.R/Aq5D?S]");
      char[] charArray0 = new char[0];
      StrBuilder strBuilder4 = strBuilder0.append(charArray0, 0, 0);
      // Undeclared exception!
      try { 
        strBuilder2.insert(0, charArray0, 0, 15);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 15
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder("");
      StrBuilder strBuilder2 = strBuilder1.append(3500.09338);
      StrBuilder strBuilder3 = strBuilder1.append(3);
      StrBuilder strBuilder4 = strBuilder0.append(false);
      StrBuilder strBuilder5 = strBuilder4.replaceFirst("", "");
      char[] charArray0 = strBuilder1.toCharArray(0, 97);
      boolean boolean0 = strBuilder0.equals(strBuilder1);
      StrBuilder strBuilder6 = new StrBuilder("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setTrimmerMatcher(strMatcher0);
      StrBuilder strBuilder7 = strBuilder1.appendWithSeparators((Iterator) strTokenizer0, "");
      StrBuilder strBuilder8 = strBuilder3.append('p');
      char[] charArray1 = strBuilder5.toCharArray(0, 3);
      StrBuilder strBuilder9 = strBuilder4.replace(strMatcher0, "<NE", 0, 0, 3);
      StrBuilder strBuilder10 = strBuilder9.trim();
      StrBuilder strBuilder11 = strBuilder2.insert(32, 's');
      StrBuilder strBuilder12 = strBuilder5.replaceAll('s', 'l');
      StrBuilder strBuilder13 = strBuilder12.setNewLineText("");
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[7];
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      charArray0[0] = '0';
      charArray0[1] = 'T';
      charArray0[2] = '5';
      charArray0[3] = 'a';
      charArray0[4] = 'J';
      charArray0[5] = 'V';
      charArray0[6] = '5';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0);
      strBuilder_StrBuilderReader0.mark(0);
      StrMatcher strMatcher0 = StrMatcher.charMatcher(' ');
      StrBuilder strBuilder2 = strBuilder0.replaceAll(strMatcher0, "");
      StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
      int int1 = strBuilder2.lastIndexOf('5');
      // Undeclared exception!
      try { 
        strBuilder1.setCharAt(999, '`');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 999
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[7];
      strBuilder_StrBuilderReader0.reset();
      charArray0[0] = '!';
      charArray0[1] = 'l';
      charArray0[2] = 'P';
      strBuilder_StrBuilderReader0.reset();
      charArray0[3] = '';
      charArray0[4] = '\\';
      charArray0[5] = '5';
      charArray0[6] = 'r';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharBuffer charBuffer1 = CharBuffer.allocate(1895);
      CharBuffer charBuffer2 = CharBuffer.wrap((CharSequence) charBuffer0);
      CharBuffer charBuffer3 = charBuffer2.get(charArray0, 1, 0);
      int int0 = strBuilder_StrBuilderReader0.read(charBuffer2);
      strBuilder_StrBuilderReader0.close();
      int int1 = strBuilder0.hashCode();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("end < start");
      strBuilder_StrBuilderWriter0.write(charArray0);
      StrBuilder strBuilder1 = strBuilder0.appendPadding(0, '');
      strBuilder_StrBuilderWriter0.flush();
      boolean boolean0 = strBuilder0.startsWith("78K]!u~g43bj");
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(387);
      StrBuilder strBuilder1 = strBuilder0.append((float) 387);
      StrBuilder strBuilder2 = strBuilder0.append((char[]) null);
      int int0 = strBuilder0.lastIndexOf("q]K'%SS0[", 387);
      int int1 = strBuilder0.indexOf('n');
      StrBuilder strBuilder3 = strBuilder0.replaceAll("q]K'%SS0[", "5Uo");
      // Undeclared exception!
      try { 
        strBuilder2.insert(387, 'V');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 387
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(888);
      Integer integer0 = new Integer(888);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) integer0, 2145, ')');
      StrBuilder strBuilder2 = strBuilder0.minimizeCapacity();
      char[] charArray0 = new char[7];
      charArray0[0] = ')';
      charArray0[1] = ')';
      charArray0[2] = ')';
      charArray0[3] = ')';
      StrBuilder strBuilder3 = strBuilder1.append(888);
      charArray0[4] = ')';
      charArray0[5] = ')';
      charArray0[6] = ')';
      char[] charArray1 = strBuilder1.getChars(charArray0);
      Reader reader0 = strBuilder3.asReader();
      int int0 = strBuilder2.lastIndexOf("add() is unsupported", 888);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[7];
      strBuilder_StrBuilderReader0.reset();
      charArray0[0] = '!';
      charArray0[1] = '!';
      charArray0[2] = 'P';
      strBuilder_StrBuilderReader0.reset();
      charArray0[3] = '';
      charArray0[6] = '\\';
      charArray0[5] = '5';
      charArray0[6] = 'r';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharBuffer charBuffer1 = CharBuffer.allocate(1895);
      CharBuffer charBuffer2 = CharBuffer.wrap((CharSequence) charBuffer0);
      CharBuffer charBuffer3 = charBuffer2.get(charArray0, 1, 0);
      int int0 = strBuilder_StrBuilderReader0.read(charBuffer2);
      strBuilder_StrBuilderReader0.close();
      int int1 = strBuilder0.hashCode();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(charArray0);
      StrBuilder strBuilder1 = strBuilder0.appendPadding(0, '');
      strBuilder_StrBuilderWriter0.flush();
      boolean boolean0 = strBuilder0.startsWith("");
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("java.ext.dirs");
      StrBuilder strBuilder0 = new StrBuilder("java.ext.dirs");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip((-2239));
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      int int0 = (-494);
      StrBuilder strBuilder0 = new StrBuilder((-494));
      StrBuilder strBuilder1 = strBuilder0.append((StringBuffer) null);
      String string0 = "";
      StrBuilder strBuilder2 = strBuilder0.setNullText("");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      Writer writer0 = strBuilder_StrBuilderWriter0.append('!');
      strBuilder_StrBuilderWriter0.flush();
      StrBuilder strBuilder3 = strBuilder0.append((-280L));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      char[] charArray0 = new char[1];
      charArray0[0] = '0';
      int int1 = 32;
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, (-494), 32);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.append('U');
      StrBuilder strBuilder2 = strBuilder0.minimizeCapacity();
      int int0 = 2278;
      StrBuilder strBuilder3 = strBuilder0.ensureCapacity(2278);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer1 = (StrBuilder.StrBuilderTokenizer)strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder strBuilder4 = strBuilder1.append((Object) strBuilder_StrBuilderTokenizer1);
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = (StrMatcher.NoMatcher)strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrMatcher.NoMatcher strMatcher_NoMatcher1 = (StrMatcher.NoMatcher)StrMatcher.stringMatcher("");
      boolean boolean0 = strBuilder4.contains((StrMatcher) strMatcher_NoMatcher0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder3.new StrBuilderReader();
      boolean boolean1 = strBuilder_StrBuilderReader0.markSupported();
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance((char[]) null);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer2 = (StrBuilder.StrBuilderTokenizer)strBuilder_StrBuilderTokenizer1.clone();
      boolean boolean2 = strBuilder3.equals((Object) strBuilder_StrBuilderTokenizer2);
      // Undeclared exception!
      try { 
        strBuilder4.substring(32, (-803));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[9];
      charArray0[0] = '2';
      charArray0[1] = 'D';
      charArray0[2] = ':';
      charArray0[3] = ':';
      charArray0[4] = 'K';
      charArray0[5] = 'M';
      charArray0[6] = '=';
      charArray0[7] = 'M';
      charArray0[8] = '0';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      String string0 = strBuilder0.midString(0, 906);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = 4;
      String string0 = strBuilder0.leftString(4);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) "", 2985, 'R');
      StrMatcher strMatcher0 = null;
      String string1 = strBuilder0.rightString(0);
      int int1 = strBuilder0.indexOf((StrMatcher) null, (-474));
      int int2 = 0;
      StrBuilder strBuilder2 = strBuilder0.replace((StrMatcher) null, "user.home", 0, 0, 0);
      StrBuilder strBuilder3 = strBuilder2.replaceFirst("Ij;2ZaXoB'v8EDo={S*", "");
      StrBuilder strBuilder4 = strBuilder3.deleteAll("");
      StrBuilder strBuilder5 = strBuilder3.deleteAll("user.home");
      StrBuilder strBuilder6 = strBuilder4.replaceAll((StrMatcher) null, "");
      StrBuilder strBuilder7 = strBuilder1.append(true);
      StrBuilder strBuilder8 = strBuilder7.append(strBuilder3);
      // Undeclared exception!
      strBuilder8.deleteAll("Ij;2ZaXoB'v8EDo={S*");
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(733);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      Stream<Object> stream0 = linkedList0.stream();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      linkedList0.sort(comparator0);
      boolean boolean0 = linkedList0.add((Object) null);
      String string0 = "WMvP";
      Object object0 = linkedList0.pollFirst();
      StrBuilder strBuilder1 = strBuilder0.insert(0, true);
      // Undeclared exception!
      try { 
        strBuilder1.toCharArray(307, 733);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("B+g81S'{P}=/.>");
      char[] charArray0 = new char[1];
      charArray0[0] = '&';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      boolean boolean0 = strBuilder0.contains("B+g81S'{P}=/.>");
      int int0 = 39;
      Reader reader0 = strBuilder0.asReader();
      String string0 = "Invalid length: ";
      StrBuilder strBuilder2 = strBuilder1.append(strBuilder0);
      StrBuilder strBuilder3 = strBuilder1.appendWithSeparators((Object[]) null, "Invalid length: ");
      // Undeclared exception!
      try { 
        strBuilder0.insert(39, (Object) strBuilder1);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 39
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[8];
      charArray0[0] = 'I';
      charArray0[1] = 'O';
      charArray0[2] = 'd';
      charArray0[3] = 'B';
      charArray0[4] = '~';
      charArray0[5] = 't';
      charArray0[6] = 'L';
      charArray0[7] = 'c';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0, 0, 0);
      // Undeclared exception!
      try { 
        strBuilder0.delete(5234, 5234);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[4];
      charArray0[0] = 'w';
      charArray0[1] = 'm';
      charArray0[2] = 'M';
      charArray0[3] = 'X';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(0, 0, charArray0, 958);
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2865);
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      char[] charArray0 = new char[4];
      charArray0[0] = '4';
      charArray0[1] = '+';
      charArray0[2] = ':';
      charArray0[3] = '6';
      StrBuilder strBuilder1 = strBuilder0.replace(strMatcher0, "user.country", 0, 0, 1497);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "+j";
      int int0 = 2;
      int int1 = 472;
      // Undeclared exception!
      try { 
        strBuilder0.append("+j", 2, 472);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      char char0 = 'y';
      StrBuilder strBuilder1 = strBuilder0.deleteAll('y');
      StrBuilder strBuilder2 = strBuilder0.append((Object) null);
      StringBuffer stringBuffer0 = new StringBuffer(0);
      int int1 = (-1665);
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 0, (-1665));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      String string0 = strBuilder0.toString();
      String string1 = strBuilder0.toString();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('3', '3');
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(4);
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      int int0 = (-3889);
      int int1 = 332;
      int int2 = 0;
      char char0 = 'g';
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(0, 'g');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(733);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      linkedList0.sort(comparator0);
      boolean boolean0 = linkedList0.add((Object) null);
      String string0 = "WMvP";
      Object object0 = linkedList0.pollFirst();
      StrBuilder strBuilder1 = strBuilder0.insert(0, true);
      // Undeclared exception!
      try { 
        strBuilder1.toCharArray(307, 733);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.setNewLineText((String) null);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('a');
      int int0 = strBuilder0.indexOf(strMatcher0, 0);
      char[] charArray0 = new char[6];
      charArray0[0] = '5';
      charArray0[1] = 'E';
      charArray0[2] = '3';
      charArray0[3] = 'u';
      charArray0[4] = 'u';
      charArray0[5] = 'I';
      // Undeclared exception!
      try { 
        strBuilder1.getChars(3410, 0, charArray0, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(4);
      int int0 = strBuilder0.indexOf((String) null);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[7];
      char char0 = '1';
      charArray0[0] = '1';
      charArray0[1] = 'M';
      charArray0[2] = 'j';
      charArray0[3] = ';';
      charArray0[4] = '=';
      charArray0[5] = 'a';
      charArray0[6] = 't';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 4, 4);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 4
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1));
      char[] charArray0 = new char[0];
      String string0 = strBuilder0.toString();
      strBuilder0.buffer = charArray0;
      boolean boolean0 = strBuilder0.endsWith((String) null);
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) null;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      objectArray0[2] = object0;
      objectArray0[3] = (Object) null;
      objectArray0[4] = (Object) strBuilder0;
      objectArray0[5] = (Object) null;
      objectArray0[6] = (Object) strBuilder0;
      objectArray0[7] = (Object) null;
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance(charArray0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "[)Z<{?Gst1&4C} i");
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 1815, 1815);
      boolean boolean1 = strBuilder0.endsWith((String) null);
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((-1), (-1), 'z');
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      char[] charArray0 = new char[3];
      charArray0[0] = '6';
      charArray0[1] = ']';
      charArray0[2] = '_';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      int int0 = (-1725);
      StrBuilder strBuilder2 = strBuilder0.insert(0, 'V');
      String string0 = strBuilder0.midString(0, (-1725));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      int int1 = 9;
      strBuilder_StrBuilderWriter0.write(9);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(9);
      String string1 = "=f%";
      StringBuffer stringBuffer0 = new StringBuffer("=f%");
      StringBuffer stringBuffer1 = stringBuffer0.append(0);
      // Undeclared exception!
      try { 
        strBuilder1.append(stringBuffer0, 9, 9);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      int int0 = (-1666);
      StrBuilder strBuilder0 = new StrBuilder((-1666));
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt((-1666));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1666
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-3563);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-3563), (float) (-3563));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3563
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.awt.fonts");
      StrBuilder strBuilder1 = strBuilder0.append(false);
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      int int0 = strBuilder1.lastIndexOf(strMatcher0, 39);
      // Undeclared exception!
      try { 
        strBuilder1.deleteCharAt((-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("P#");
      char[] charArray0 = new char[8];
      charArray0[0] = ']';
      charArray0[1] = '$';
      charArray0[2] = 'y';
      charArray0[3] = '@';
      charArray0[4] = ',';
      charArray0[5] = '$';
      charArray0[6] = 'x';
      charArray0[7] = '7';
      StrBuilder strBuilder1 = strBuilder0.insert(0, charArray0);
      StringBuffer stringBuffer0 = strBuilder1.toStringBuffer();
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrBuilder strBuilder2 = strBuilder0.replaceAll((StrMatcher) strMatcher_NoMatcher0, "P#");
      int int0 = strBuilder0.lastIndexOf("");
      char[] charArray1 = new char[4];
      charArray1[0] = ',';
      charArray1[1] = '$';
      charArray1[2] = 'x';
      charArray1[3] = '$';
      // Undeclared exception!
      try { 
        strBuilder1.append(charArray1, 16, 9);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 9
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[0];
      strBuilder_StrBuilderReader0.mark(34);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 8, 8);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceAll("J}7_O\"", "Ln.?PF2");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      int int1 = strBuilder0.indexOf("F._)E=gy|xgY3Q_", 2);
      char[] charArray0 = strBuilder0.toCharArray();
      int int2 = strBuilder0.indexOf(strMatcher0, (-1));
      StrBuilder strBuilder2 = strBuilder0.trim();
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("5S[xw*qF~5oof=");
      StrBuilder strBuilder1 = strBuilder0.appendPadding(0, 'f');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = strBuilder0.toCharArray(0, 0);
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder2 = strBuilder0.setLength(2142);
      strBuilder_StrBuilderWriter0.write("5S[xw*qF~5oof=");
      StrBuilder strBuilder3 = strBuilder0.deleteAll((StrMatcher) strMatcher_TrimMatcher0);
      char[] charArray1 = null;
      strBuilder_StrBuilderWriter0.write((char[]) null);
      int int0 = 0;
      String string0 = strBuilder1.substring(0, 0);
      // Undeclared exception!
      try { 
        strBuilder3.insert(1944, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1944
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      int int0 = 1340;
      StrBuilder strBuilder0 = new StrBuilder(1340);
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("jM");
      int int1 = 31;
      int int2 = strBuilder0.lastIndexOf(strMatcher0, 31);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      strBuilder1.size = (-4008);
      int int3 = 44;
      // Undeclared exception!
      try { 
        strBuilder1.deleteAll(strMatcher0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrBuilder strBuilder2 = strBuilder1.append(strBuilder0);
      StrBuilder strBuilder3 = strBuilder0.deleteFirst((String) null);
      int int0 = (-4701);
      char[] charArray0 = new char[1];
      char char0 = 'T';
      charArray0[0] = 'T';
      // Undeclared exception!
      try { 
        strBuilder0.getChars((-4701), (-4701), charArray0, (-4701));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -4701
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(0);
      char[] charArray0 = new char[1];
      StrBuilder strBuilder1 = strBuilder0.deleteAll("}CK=5M}");
      charArray0[0] = ',';
      strBuilder_StrBuilderWriter0.write((String) null, (-354), 0);
      strBuilder_StrBuilderWriter0.write(charArray0, 0, 0);
      strBuilder_StrBuilderWriter0.write((String) null);
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) null);
      strBuilder_StrBuilderWriter0.close();
      StrBuilder strBuilder2 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrBuilder strBuilder3 = strBuilder0.deleteFirst(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder0.substring(4263);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      int int0 = 4;
      StrBuilder strBuilder0 = new StrBuilder(4);
      int int1 = (-3194);
      char[] charArray0 = new char[5];
      charArray0[0] = 'V';
      charArray0[1] = 'v';
      charArray0[2] = '`';
      charArray0[3] = 'X';
      charArray0[4] = '@';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(4, (-3194), charArray0, 4);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3194
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      int int0 = (-1);
      StrBuilder strBuilder0 = new StrBuilder((-1));
      // Undeclared exception!
      try { 
        strBuilder0.insert(1349, 'm');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1349
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("B+g81S'{P}=/.>");
      boolean boolean0 = strBuilder0.contains("B+g81S'{P}=/.>");
      Reader reader0 = strBuilder0.asReader();
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      int int0 = 4;
      StrBuilder strBuilder0 = new StrBuilder(4);
      int int1 = (-3194);
      char[] charArray0 = new char[5];
      charArray0[0] = 'V';
      charArray0[1] = 'v';
      charArray0[2] = '`';
      charArray0[2] = '@';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(4, (-3194), charArray0, 4);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3194
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      String string0 = "java.vm.vendor";
      StrBuilder strBuilder0 = new StrBuilder("java.vm.vendor");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark((-692));
      char char0 = 'n';
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('n');
      char char1 = '#';
      char[] charArray0 = new char[4];
      charArray0[0] = '#';
      charArray0[1] = 'n';
      charArray0[2] = '#';
      charArray0[3] = '#';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, (-692), 117);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append('&');
      StrBuilder strBuilder2 = strBuilder0.delete(0, 34);
      char[] charArray0 = new char[9];
      charArray0[0] = '&';
      charArray0[1] = '&';
      charArray0[2] = '&';
      charArray0[3] = '&';
      charArray0[4] = '&';
      charArray0[5] = '&';
      charArray0[6] = '&';
      charArray0[7] = 'T';
      charArray0[8] = '&';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      boolean boolean0 = strBuilder1.contains((StrMatcher) strMatcher_CharSetMatcher0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.midString(48, 48);
      StrBuilder strBuilder1 = strBuilder0.append((Object) null);
      StrBuilder strBuilder2 = strBuilder0.replaceAll("Invalid length: ", "");
      char char0 = 'S';
      int int0 = 152;
      char[] charArray0 = new char[2];
      charArray0[0] = 'S';
      charArray0[1] = 'S';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(57, 19, charArray0, (-1683));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 19
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.ext.dirs");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
      int int0 = 3616;
      char[] charArray0 = new char[1];
      charArray0[0] = 'x';
      // Undeclared exception!
      try { 
        strBuilder0.insert(3616, charArray0, 3616, 3616);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3616
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      String string0 = "java.lang.Object";
      StrBuilder strBuilder0 = new StrBuilder("java.lang.Object");
      char[] charArray0 = new char[6];
      charArray0[0] = '~';
      charArray0[1] = ' ';
      charArray0[2] = 'h';
      charArray0[3] = '.';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      charArray0[4] = 'N';
      charArray0[5] = '3';
      StrBuilder strBuilder2 = strBuilder0.insert(1, charArray0, 0, 0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder strBuilder3 = strBuilder0.append(charArray0, 0, 1);
      // Undeclared exception!
      try { 
        strBuilder3.replace(211, 114, "java.lang.Object");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.insert(0, (double) 0);
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight((Object) strBuilder1, 0, ',');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      char[] charArray0 = new char[9];
      charArray0[0] = ',';
      charArray0[1] = ',';
      charArray0[2] = ',';
      StrBuilder strBuilder3 = strBuilder2.setCharAt(0, ',');
      charArray0[3] = ',';
      charArray0[4] = ',';
      charArray0[5] = ',';
      charArray0[6] = ',';
      charArray0[7] = ',';
      charArray0[8] = ',';
      // Undeclared exception!
      try { 
        strBuilder2.insert(32, charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      char[] charArray0 = new char[9];
      char char0 = 'w';
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadLeft((Object) null, 3, 'w');
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Windows 9");
      int int0 = (-1084);
      char char0 = '1';
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt((-1084), '1');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1084
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      boolean boolean0 = strBuilder_StrBuilderTokenizer0.hasNext();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strBuilder_StrBuilderTokenizer0, "");
      char char0 = '0';
      int int0 = 0;
      String string1 = strBuilder0.substring(0);
      char[] charArray0 = new char[2];
      charArray0[0] = '0';
      StrBuilder strBuilder2 = strBuilder0.delete(0, 5);
      int int1 = Integer.MAX_VALUE;
      // Undeclared exception!
      try { 
        strBuilder2.substring(Integer.MAX_VALUE);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[5];
      charArray0[0] = 'j';
      charArray0[1] = 'm';
      charArray0[2] = 'h';
      charArray0[3] = 'T';
      charArray0[4] = 'g';
      char[] charArray1 = strBuilder0.getChars(charArray0);
      int int0 = strBuilder0.lastIndexOf("");
      String string0 = "";
      StrBuilder strBuilder1 = strBuilder0.deleteAll("");
      int int1 = 0;
      String string1 = strBuilder1.substring(0);
      // Undeclared exception!
      try { 
        strBuilder1.replace((-1), (-1), "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2824));
      StrMatcher strMatcher0 = null;
      boolean boolean0 = strBuilder0.contains((StrMatcher) null);
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex((-4375));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -4375
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.rightString(0);
      // Undeclared exception!
      try { 
        strBuilder0.delete((-1586), (-1586));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1586
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      String string0 = strBuilder_StrBuilderTokenizer0.previousToken();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(object0, 0, '0');
      char[] charArray0 = new char[0];
      StrBuilder strBuilder2 = strBuilder1.insert(0, charArray0);
      StrBuilder strBuilder3 = new StrBuilder("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer1 = strBuilder3.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer1.getIgnoredMatcher();
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      StringBuffer stringBuffer0 = new StringBuffer(0);
      StrBuilder strBuilder4 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder5 = strBuilder1.append("");
      boolean boolean1 = strBuilder3.contains(strMatcher0);
      StrBuilder strBuilder6 = strBuilder4.appendFixedWidthPadLeft(0, 1150, '0');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
      StrBuilder strBuilder7 = strBuilder1.append(charArray0);
      StrBuilder strBuilder8 = strBuilder4.appendFixedWidthPadLeft(0, 0, '4');
      StrBuilder strBuilder9 = strBuilder7.deleteFirst(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("*vCy<");
      StrBuilder strBuilder1 = strBuilder0.replaceAll("*vCy<", "jEbH9");
      int int0 = 57;
      // Undeclared exception!
      try { 
        strBuilder0.insert(57, "Cb#X");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 57
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1890));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      char[] charArray0 = new char[9];
      charArray0[0] = '=';
      charArray0[1] = 'T';
      charArray0[2] = 'R';
      charArray0[3] = 'p';
      charArray0[4] = 'Q';
      charArray0[5] = 'I';
      charArray0[6] = ')';
      charArray0[7] = 'J';
      charArray0[8] = 'u';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 0, 117);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[7];
      charArray0[0] = '<';
      charArray0[1] = 'V';
      charArray0[2] = '\'';
      charArray0[3] = '*';
      charArray0[4] = 'p';
      charArray0[5] = '';
      charArray0[6] = '.';
      strBuilder0.getChars(0, 0, charArray0, 0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1890));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      char[] charArray0 = new char[9];
      charArray0[2] = 'R';
      charArray0[3] = 'm';
      charArray0[4] = 'Q';
      charArray0[5] = 'I';
      charArray0[6] = ')';
      charArray0[7] = 'J';
      charArray0[8] = '\u0000';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 9, 117);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.length();
      StrBuilder strBuilder1 = strBuilder0.setLength(0);
      int int1 = (-513);
      // Undeclared exception!
      try { 
        strBuilder1.insert((-513), 634L);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -513
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[6];
      charArray0[0] = '3';
      charArray0[1] = '_';
      charArray0[2] = 'g';
      charArray0[3] = 'c';
      charArray0[4] = '2';
      charArray0[5] = '@';
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset(charArray0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, (String) null);
      StrBuilder strBuilder2 = new StrBuilder(102);
      StrBuilder strBuilder3 = strBuilder2.append(true);
      StrBuilder strBuilder4 = strBuilder1.appendFixedWidthPadRight((Object) strBuilder2, (-907), 'Q');
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrBuilder strBuilder5 = strBuilder0.replaceAll(strMatcher0, (String) null);
      StrBuilder strBuilder6 = strBuilder5.appendWithSeparators((Iterator) strBuilder_StrBuilderTokenizer0, "end < start");
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[8];
      charArray0[0] = 'D';
      charArray0[1] = 'K';
      charArray0[2] = '';
      charArray0[3] = '@';
      charArray0[4] = 'U';
      charArray0[5] = 'k';
      charArray0[6] = '(';
      charArray0[7] = 'F';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[2];
      charArray0[0] = 'e';
      charArray0[1] = 'A';
      strBuilder_StrBuilderWriter0.write(charArray0);
      strBuilder_StrBuilderWriter0.write(32);
      // Undeclared exception!
      try { 
        strBuilder0.replace(1400, 1400, "java.vm.specification.version");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append("Nr}R!+.r`o1Map-B(y");
      int int0 = 0;
      String string0 = strBuilder1.substring(0, 0);
      StrBuilder strBuilder2 = strBuilder0.replaceAll("org.apache.commons.lang.text.StrMatcher$CharMatcher", "org.apache.commons.lang.text.StrMatcher$CharMatcher");
      int int1 = 0;
      StrBuilder strBuilder3 = strBuilder0.append(0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder4 = strBuilder3.appendWithSeparators((Collection) linkedList0, "Nr}R!+.r`o1Map-B(y");
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      char char0 = '{';
      int int0 = (-1);
      String string0 = "4.9";
      StrBuilder strBuilder1 = strBuilder0.replaceAll((StrMatcher) null, "(UJn}k]$y[f2&*/YyVJ");
      int int1 = 9;
      // Undeclared exception!
      try { 
        strBuilder0.append("4.9", (-853), 9);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("HRn4SDp1w5");
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      int int0 = strBuilder0.lastIndexOf('F');
      int int1 = strBuilder0.capacity();
      StrBuilder strBuilder1 = strBuilder0.append(1);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1), (long) (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("");
      StrBuilder strBuilder2 = strBuilder0.replaceAll(strMatcher0, (String) null);
      StrBuilder strBuilder3 = strBuilder2.deleteAll((String) null);
      int int0 = strBuilder0.indexOf((StrMatcher) strMatcher_TrimMatcher0, 0);
      StrBuilder strBuilder4 = strBuilder1.appendNull();
      String string0 = strBuilder1.leftString(991);
      String string1 = strBuilder4.getNewLineText();
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(415);
      String string0 = "org.apache.commons.lang.text.StrTokenizer";
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("org.apache.commons.lang.text.StrTokenizer");
      StrBuilder strBuilder1 = strBuilder0.replaceAll((StrMatcher) strMatcher_StringMatcher0, "org.apache.commons.lang.text.StrTokenizer");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Collection) linkedList0, (String) null);
      // Undeclared exception!
      try { 
        strBuilder2.insert(415, 0L);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 415
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('O');
      int int0 = 0;
      strBuilder0.size = 0;
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "java.lang.Object");
      char[] charArray0 = new char[1];
      charArray0[0] = 'O';
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher(charArray0);
      char char0 = 'n';
      char[] charArray1 = new char[1];
      charArray1[0] = 'O';
      StrBuilder strBuilder2 = strBuilder0.insert(0, charArray1);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.previous();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-1054);
      StrBuilder strBuilder1 = new StrBuilder(1383);
      char char0 = 'j';
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((Object) strBuilder1, 1383, 'j');
      strBuilder0.size = (-1054);
      // Undeclared exception!
      try { 
        strBuilder0.toStringBuffer();
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("P23yN");
      StrBuilder strBuilder1 = new StrBuilder(1);
      char char0 = '';
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((Object) strBuilder1, 1, '');
      StrBuilder strBuilder3 = strBuilder0.insert(1, 0.0);
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("8.xen0");
      StrMatcher strMatcher1 = StrMatcher.tabMatcher();
      int int0 = strBuilder3.lastIndexOf(strMatcher1, 1092);
      boolean boolean0 = strBuilder3.contains((StrMatcher) strMatcher_NoMatcher0);
      StrBuilder strBuilder4 = strBuilder0.replaceAll("P23yN", "");
      // Undeclared exception!
      try { 
        strBuilder4.append(strBuilder1, 0, 2060);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.insert(0, 0);
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      char[] charArray0 = new char[6];
      charArray0[0] = 'N';
      charArray0[1] = '1';
      charArray0[2] = 't';
      charArray0[3] = '2';
      charArray0[4] = '>';
      charArray0[5] = 'm';
      int int0 = strMatcher0.isMatch(charArray0, 0, 0, 0);
      StrBuilder strBuilder2 = strBuilder0.deleteAll(strMatcher0);
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder2, 0, 0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(".aLBm");
      int int0 = strBuilder0.size();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst((String) null, "aIha|G3gR|&k5>lzcE?");
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher(' ');
      int int1 = strBuilder1.indexOf(strMatcher0, 5);
      StrBuilder strBuilder2 = strBuilder0.replaceAll((String) null, "aIha|G3gR|&k5>lzcE?");
      boolean boolean0 = strBuilder0.contains(' ');
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher2 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrBuilder strBuilder3 = strBuilder0.deleteFirst(strMatcher2);
      StrBuilder strBuilder4 = strBuilder2.appendFixedWidthPadLeft((Object) null, (-1), ' ');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      StrBuilder strBuilder5 = strBuilder4.trim();
      int int2 = strBuilder_StrBuilderReader0.read();
      boolean boolean1 = strBuilder4.endsWith("aIha|G3gR|&k5>lzcE?");
      char[] charArray0 = new char[1];
      charArray0[0] = ' ';
      // Undeclared exception!
      try { 
        strBuilder4.insert(0, charArray0, (-1), (-652));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer0 = new Integer(0);
      boolean boolean0 = linkedList0.add(integer0);
      Integer integer1 = new Integer(0);
      StrBuilder strBuilder1 = strBuilder0.append("w}2X0");
      linkedList0.add(0, integer1);
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
      StrBuilder strBuilder3 = strBuilder2.reverse();
      StrBuilder strBuilder4 = strBuilder2.append('a');
      int int0 = strBuilder4.capacity();
      StrBuilder strBuilder5 = new StrBuilder();
      StrBuilder strBuilder6 = strBuilder5.append("");
      boolean boolean1 = strBuilder4.equals((Object) strBuilder5);
      // Undeclared exception!
      try { 
        strBuilder6.validateRange(4550, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder("");
      StrBuilder strBuilder2 = strBuilder1.append(3500.09338);
      StrBuilder strBuilder3 = strBuilder1.append(3);
      StrBuilder strBuilder4 = strBuilder0.append(false);
      StrBuilder strBuilder5 = strBuilder4.replaceFirst("", "");
      char[] charArray0 = strBuilder1.toCharArray(0, 97);
      boolean boolean0 = strBuilder0.equals(strBuilder1);
      StrBuilder strBuilder6 = strBuilder1.append((-1295.0F));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setTrimmerMatcher(strMatcher0);
      StrBuilder strBuilder7 = strBuilder1.appendWithSeparators((Iterator) strTokenizer0, "");
      StrBuilder strBuilder8 = strBuilder3.append('p');
      char[] charArray1 = strBuilder5.toCharArray(0, 3);
      StrBuilder strBuilder9 = strBuilder4.replace(strMatcher0, "<NE", 0, 0, 3);
      StrBuilder strBuilder10 = strBuilder9.trim();
      StrBuilder strBuilder11 = strBuilder2.insert(32, 's');
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-812);
      String string0 = strBuilder0.rightString((-812));
      boolean boolean0 = strBuilder0.startsWith((String) null);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[1];
      charArray0[0] = 'W';
      // Undeclared exception!
      try { 
        CharBuffer.wrap(charArray0, 0, (-812));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("e@}~");
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("");
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("e@}~");
      int int0 = strBuilder1.lastIndexOf((StrMatcher) strMatcher_StringMatcher0, 0);
      int int1 = strBuilder0.indexOf("");
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setQuoteChar('6');
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "");
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.append('p');
      char[] charArray0 = new char[1];
      charArray0[0] = 'p';
      strBuilder0.buffer = charArray0;
      StrBuilder strBuilder2 = strBuilder0.replaceFirst("", (String) null);
      StrBuilder strBuilder3 = strBuilder2.insert(0, 0.0F);
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "");
      StrBuilder strBuilder4 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder5 = strBuilder4.deleteFirst('t');
      StrBuilder strBuilder6 = strBuilder1.appendFixedWidthPadRight((Object) stringBuffer0, 0, 'k');
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "rb%j8>5E*(";
      StrBuilder strBuilder1 = strBuilder0.append(0.0);
      StrBuilder strBuilder2 = strBuilder1.replaceFirst("rb%j8>5E*(", "rb%j8>5E*(");
      int int0 = strBuilder0.indexOf("rb%j8>5E*(", (-518));
      int int1 = (-1);
      int int2 = 441;
      // Undeclared exception!
      try { 
        strBuilder1.append(strBuilder0, (-518), 441);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      int int0 = 114;
      StrBuilder strBuilder0 = new StrBuilder(114);
      Object object0 = new Object();
      StrBuilder strBuilder1 = strBuilder0.append(object0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      String string0 = "3n`N(QErk:awls";
      StrBuilder strBuilder2 = strBuilder1.replaceAll(strMatcher0, "3n`N(QErk:awls");
      StrBuilder strBuilder3 = strBuilder1.deleteFirst('3');
      // Undeclared exception!
      try { 
        strBuilder3.append("3n`N(QErk:awls", 1168, 1168);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      int int0 = 2;
      StrBuilder strBuilder0 = new StrBuilder(2);
      int int1 = 0;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      // Undeclared exception!
      try { 
        strBuilder0.insert(97, object0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 97
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("63[R\"&bYH)U19y");
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder0;
      Object object0 = new Object();
      objectArray0[2] = object0;
      objectArray0[3] = (Object) "63[R\"&bYH)U19y";
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object1 = strBuilder_StrBuilderTokenizer0.clone();
      objectArray0[4] = object1;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "org.apache.commons.lang.text.StrBuilder");
      StrBuilder strBuilder2 = strBuilder1.append((-2715.390631582763));
      StrBuilder strBuilder3 = strBuilder2.deleteFirst('x');
      int int0 = strBuilder2.indexOf("java.runtime.version", (-2147));
      boolean boolean0 = strBuilder0.equals(object0);
      StringBuffer stringBuffer0 = new StringBuffer("java.runtime.version");
      stringBuffer0.ensureCapacity((-1));
      StrBuilder strBuilder4 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder5 = strBuilder4.clear();
      // Undeclared exception!
      try { 
        strBuilder4.toCharArray(25, (-2147));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      String string0 = "{I";
      StrBuilder strBuilder0 = new StrBuilder("{I");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "{I");
      char char0 = '@';
      boolean boolean0 = strBuilder0.contains('@');
      StrBuilder strBuilder2 = strBuilder1.appendNull();
      StrBuilder strBuilder3 = strBuilder1.replaceAll('@', '@');
      // Undeclared exception!
      try { 
        strBuilder3.insert(34, (-1638));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 34
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("");
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 0);
      int int1 = strBuilder0.lastIndexOf(" nJ;&N=]^rHFcyrd", 116);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrBuilder strBuilder1 = strBuilder0.deleteAll('^');
      strBuilder_StrBuilderWriter0.write(0);
      StrBuilder strBuilder2 = new StrBuilder(" nJ;&N=]^rHFcyrd");
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder2);
      int int2 = strBuilder2.size();
      // Undeclared exception!
      try { 
        strBuilder0.insert(16, "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 16
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2663));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      int int0 = strBuilder0.indexOf("c");
      StrBuilder strBuilder1 = strBuilder0.append("c");
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight((Object) strBuilder_StrBuilderReader0, (-1), '[');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      char char0 = '{';
      int int1 = 9;
      // Undeclared exception!
      try { 
        strBuilder1.insert((-2663), 9);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2663
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.ArrayUtils");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      String string0 = "z\\rjr]Y#2MXEsqlEN*";
      int int0 = (-3943);
      strBuilder0.size = (-3943);
      // Undeclared exception!
      try { 
        strBuilder0.replaceFirst(strMatcher0, "z\rjr]Y#2MXEsqlEN*");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("");
      StrBuilder strBuilder2 = strBuilder1.ensureCapacity(0);
      StrBuilder strBuilder3 = strBuilder1.ensureCapacity(102);
      StrBuilder strBuilder4 = strBuilder3.append(strBuilder0);
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrBuilder strBuilder5 = strBuilder4.deleteFirst((StrMatcher) strMatcher_NoMatcher0);
      int int0 = 4;
      // Undeclared exception!
      try { 
        strBuilder4.charAt(4);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 4
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("0p9PZ.R/Aq5D?S]");
      strBuilder0.validateIndex(0);
      StrBuilder strBuilder1 = new StrBuilder(0);
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      String string0 = strBuilder2.toString();
      StrBuilder strBuilder3 = strBuilder0.deleteAll('Y');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder3.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("0p9PZ.R/Aq5D?S]");
      strBuilder_StrBuilderWriter0.write(0);
      char[] charArray0 = new char[0];
      StrBuilder strBuilder4 = strBuilder0.append(charArray0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("");
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 0);
      int int1 = strBuilder0.lastIndexOf("", 116);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(0);
      StrBuilder strBuilder1 = new StrBuilder("");
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      int int2 = strBuilder1.size();
      StrBuilder strBuilder2 = new StrBuilder();
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("l@");
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("7hN!Orj");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "l@");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((char[]) null, 0, 0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1635));
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("U2`eGyxn,#8@K8=L");
      char[] charArray0 = new char[1];
      charArray0[0] = 'r';
      int int0 = strMatcher0.isMatch(charArray0, 0, 0, 115);
      StrBuilder strBuilder1 = strBuilder0.appendPadding(0, 'r');
      StrBuilder strBuilder2 = strBuilder0.replaceAll(strMatcher0, "U2`eGyxn,#8@K8=L");
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex((-1635));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1635
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      int int1 = strBuilder0.indexOf('(', 48);
      String string0 = strBuilder0.midString((-1), 3615);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("ZGk\"H(h|^+L&");
      StrBuilder strBuilder1 = strBuilder0.append('Z');
      int int0 = 0;
      strBuilder1.buffer = null;
      // Undeclared exception!
      try { 
        strBuilder1.insert(0, 0L);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1158);
      Writer writer0 = strBuilder0.asWriter();
      String string0 = strBuilder0.leftString((-724));
      char char0 = 'T';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) "", 1158, 'T');
      int int0 = (-2768);
      // Undeclared exception!
      try { 
        strBuilder0.delete(1158, (-2768));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      int int0 = 32;
      StrBuilder strBuilder0 = new StrBuilder(32);
      StrBuilder strBuilder1 = new StrBuilder();
      int int1 = 97;
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, 97, 32);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = new StrBuilder("");
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, 708, 708);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid length: ");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      char[] charArray0 = new char[7];
      charArray0[0] = '4';
      charArray0[1] = '\"';
      charArray0[2] = '0';
      charArray0[3] = 'P';
      charArray0[4] = 'D';
      charArray0[5] = 'H';
      charArray0[6] = 'F';
      // Undeclared exception!
      try { 
        strBuilder0.insert((-18), charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -18
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = null;
      StrBuilder strBuilder2 = strBuilder0.clear();
      // Undeclared exception!
      try { 
        strBuilder2.charAt((-427));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -427
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceAll("M\"Wh6DIG.I0", "M\"Wh6DIG.I0");
      int int0 = strBuilder0.indexOf("b}<", 736);
      int int1 = strBuilder0.hashCode();
      int int2 = 0;
      StrBuilder strBuilder2 = strBuilder1.insert(0, "M\"Wh6DIG.I0");
      // Undeclared exception!
      try { 
        strBuilder2.append(strBuilder1, (-1), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("f/-|+O~");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(261);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      int int0 = (-1);
      StrBuilder strBuilder0 = new StrBuilder((-1));
      String string0 = "!a0<isIt";
      int int1 = strBuilder0.lastIndexOf("!a0<isIt", (-1));
      char char0 = 'c';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((-5505), (-1), 'c');
      String string1 = strBuilder0.midString((-1), 1513);
      StrBuilder strBuilder2 = strBuilder0.reverse();
      Object[] objectArray0 = new Object[6];
      Object object0 = new Object();
      objectArray0[0] = object0;
      objectArray0[1] = (Object) strBuilder1;
      objectArray0[2] = (Object) "";
      objectArray0[3] = (Object) "";
      objectArray0[4] = (Object) strBuilder2;
      objectArray0[5] = (Object) strBuilder0;
      StrBuilder strBuilder3 = strBuilder0.appendWithSeparators(objectArray0, "!a0<isIt");
      StrBuilder strBuilder4 = strBuilder3.trim();
      int int2 = 44;
      // Undeclared exception!
      try { 
        strBuilder4.substring((-1), 44);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StringBuffer stringBuffer0 = new StringBuffer(0);
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) stringBuffer0);
      int int0 = strBuilder_StrBuilderReader0.read(charBuffer0);
      strBuilder_StrBuilderReader0.close();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) strBuilder_StrBuilderReader0, (-2781), 'd');
      char[] charArray0 = new char[7];
      charArray0[0] = 'd';
      charArray0[1] = 'd';
      charArray0[2] = 'd';
      charArray0[3] = '_';
      charArray0[4] = 'd';
      charArray0[5] = 'd';
      charArray0[6] = 'd';
      char[] charArray1 = strBuilder1.getChars(charArray0);
      String string0 = null;
      int int1 = strBuilder1.indexOf((String) null);
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      // Undeclared exception!
      try { 
        strBuilder0.replace(strMatcher0, (String) null, (-26), 0, (-2781));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -26
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      String string0 = strBuilder0.toString();
      int int0 = strBuilder0.lastIndexOf('{', (-64));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[2];
      charArray0[0] = '{';
      charArray0[1] = '{';
      int int1 = strBuilder_StrBuilderReader0.read(charArray0);
      strBuilder_StrBuilderReader0.reset();
      int int2 = strBuilder0.indexOf("");
      StrBuilder strBuilder1 = strBuilder0.append('{');
      strBuilder_StrBuilderReader0.close();
      StrBuilder strBuilder2 = strBuilder1.append(true);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      int int0 = strBuilder0.indexOf('4');
      StrBuilder strBuilder2 = strBuilder1.append("org.apache.commons.lang.text.StrBuilder");
      int int1 = strBuilder0.lastIndexOf("TV[)VA");
      char[] charArray0 = new char[6];
      charArray0[0] = '4';
      charArray0[1] = '4';
      charArray0[2] = '4';
      charArray0[3] = '4';
      charArray0[4] = '4';
      charArray0[5] = '4';
      int int2 = 0;
      // Undeclared exception!
      try { 
        strBuilder1.append(charArray0, (-1), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("D&2%Rnz%c[i91]LX");
      char[] charArray0 = new char[9];
      StrBuilder strBuilder1 = strBuilder0.append(0.0);
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("D&2%Rnz%c[i91]LX");
      boolean boolean0 = strBuilder1.contains(strMatcher0);
      charArray0[0] = '/';
      charArray0[1] = 'k';
      charArray0[2] = '#';
      char char0 = 'g';
      charArray0[3] = 'g';
      char char1 = '7';
      charArray0[4] = '7';
      char char2 = 'x';
      charArray0[5] = 'x';
      char char3 = 'l';
      charArray0[6] = 'l';
      char char4 = ' ';
      charArray0[7] = ' ';
      charArray0[8] = 'z';
      int int0 = 5;
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, (-957), 5);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 5
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(97);
      boolean boolean0 = strBuilder0.contains('p');
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) linkedList0;
      objectArray0[1] = (Object) linkedList0;
      Iterator<String> iterator0 = linkedList0.iterator();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "Invalid length: ");
      StrBuilder strBuilder2 = strBuilder1.append((double) 97);
      StrBuilder strBuilder3 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
      char[] charArray0 = new char[1];
      charArray0[0] = 'p';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, (-2167), 97);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 97
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('m');
      Writer writer0 = strBuilder0.asWriter();
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder2 = strBuilder0.replaceFirst((StrMatcher) strMatcher_TrimMatcher0, "");
      char[] charArray0 = new char[6];
      charArray0[0] = 'm';
      charArray0[1] = 'm';
      charArray0[2] = 'm';
      charArray0[3] = 'm';
      charArray0[4] = 'm';
      charArray0[5] = 'm';
      // Undeclared exception!
      try { 
        strBuilder2.append(charArray0, 1619, 1619);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 1619
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 1049;
      String string0 = strBuilder0.rightString(1049);
      StrBuilder strBuilder1 = strBuilder0.setLength(1049);
      StrBuilder strBuilder2 = strBuilder0.delete(0, 0);
      int int1 = (-2979);
      // Undeclared exception!
      try { 
        strBuilder0.replace(1049, (-2979), (String) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.appendPadding((-1580), '');
      String string0 = strBuilder0.getNewLineText();
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.rightString(32);
      int int0 = strBuilder0.capacity();
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.trim();
      // Undeclared exception!
      try { 
        strBuilder0.replace((-1083), (-2055), "Vk%\"pPxX");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1083
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("623al cbIFhL-C");
      int int0 = (-180);
      // Undeclared exception!
      try { 
        strBuilder0.validateRange((-180), (-180));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -180
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      String string0 = ",j\"1b;m744,a`g@";
      StrBuilder strBuilder0 = new StrBuilder(",j\"1b;m744,a`g@");
      int int0 = 173;
      // Undeclared exception!
      try { 
        strBuilder0.insert(173, (-1398.0));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 173
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = strBuilder0.lastIndexOf("", 166);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("{9%UF\u0005#ONN-?N|.6");
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst((StrMatcher) strMatcher_TrimMatcher0, "{9%UF\u0005#ONN-?N|.6");
      String string0 = strBuilder0.getNullText();
      String string1 = strBuilder0.getNullText();
      char[] charArray0 = new char[6];
      charArray0[0] = '$';
      charArray0[1] = 'S';
      charArray0[2] = 'Y';
      charArray0[3] = 'A';
      charArray0[4] = 'D';
      charArray0[5] = '\'';
      // Undeclared exception!
      try { 
        strBuilder0.insert(330, charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 330
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.clear();
      int int0 = 2753;
      char[] charArray0 = new char[5];
      charArray0[0] = 'E';
      char char0 = 'm';
      charArray0[1] = 'm';
      charArray0[2] = 'N';
      int int1 = (-1168);
      // Undeclared exception!
      try { 
        strBuilder0.setLength((-1168));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1168
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      String string0 = "StrTokenizer";
      StrBuilder strBuilder0 = new StrBuilder("StrTokenizer");
      int int0 = (-1897);
      // Undeclared exception!
      try { 
        strBuilder0.setLength((-1897));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1897
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("{iFJ");
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(5, 0, 'o');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      StrBuilder strBuilder2 = strBuilder0.append(0L);
      int int0 = strBuilder0.lastIndexOf("", 57);
      StrBuilder strBuilder3 = strBuilder0.deleteFirst("");
      int int1 = 0;
      StrBuilder strBuilder4 = new StrBuilder(0);
      boolean boolean0 = strBuilder0.equals(strBuilder4);
      // Undeclared exception!
      try { 
        strBuilder4.insert(3039, (long) 3039);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3039
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('S');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder strBuilder2 = strBuilder1.replaceFirst("java.vm.specification.vendor", "Linux");
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('S');
      int int0 = strBuilder2.indexOf((StrMatcher) strMatcher_CharMatcher0, 4);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("java.vm.specification.vendor");
      int int1 = strBuilder2.indexOf("Linux");
      int int2 = strBuilder1.indexOf((StrMatcher) strMatcher_CharMatcher0, (-1));
      boolean boolean0 = strBuilder1.contains((StrMatcher) strMatcher_CharMatcher0);
      // Undeclared exception!
      try { 
        strBuilder0.replace((StrMatcher) strMatcher_CharMatcher0, "", (-1671), 108, 4);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1671
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.appendPadding(1145, 'L');
      int int0 = strBuilder0.indexOf("Invalid length: ", 57);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      String string0 = "java.runtime.version";
      StrBuilder strBuilder0 = new StrBuilder("java.runtime.version");
      int int0 = 0;
      char[] charArray0 = new char[3];
      int int1 = 4156;
      int int2 = (-97);
      char char0 = '#';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder1.insert(4156, 0L);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 4156
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("Invalid offset: ");
      // Undeclared exception!
      try { 
        strBuilder0.insert((-3543), (Object) strBuilder1);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3543
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteAll('L');
      int int0 = 1;
      StrBuilder strBuilder2 = strBuilder0.setLength(1);
      StrBuilder strBuilder3 = strBuilder2.clear();
      StrBuilder strBuilder4 = strBuilder0.deleteFirst("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder4.new StrBuilderTokenizer();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.set(strBuilder4);
      } catch(UnsupportedOperationException e) {
         //
         // set() is unsupported
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(4);
      char[] charArray0 = new char[9];
      charArray0[0] = ':';
      charArray0[1] = '/';
      charArray0[2] = 's';
      charArray0[3] = 'd';
      charArray0[4] = '$';
      charArray0[5] = '+';
      charArray0[6] = 'n';
      charArray0[7] = 'm';
      charArray0[8] = 'Q';
      // Undeclared exception!
      try { 
        strBuilder0.getChars((-629), 2428, charArray0, 117);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -629
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      String string0 = strBuilder0.midString(1782, 1782);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(671);
      char[] charArray0 = new char[9];
      charArray0[0] = '%';
      charArray0[1] = '{';
      charArray0[2] = ';';
      charArray0[3] = '#';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(671, 1970, '%');
      charArray0[4] = 'V';
      charArray0[5] = 'm';
      charArray0[6] = ' ';
      charArray0[7] = 'A';
      charArray0[8] = 'j';
      StrBuilder strBuilder2 = strBuilder0.append(charArray0);
      StrBuilder strBuilder3 = strBuilder2.insert(9, (long) 9);
      Reader reader0 = strBuilder3.asReader();
      StrBuilder strBuilder4 = strBuilder2.append(charArray0);
      StrBuilder strBuilder5 = strBuilder4.setCharAt(1970, 'j');
      StrBuilder strBuilder6 = strBuilder2.ensureCapacity(1970);
      StrBuilder strBuilder7 = strBuilder2.insert(1970, 490.49237473743);
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrBuilder strBuilder8 = strBuilder2.replaceFirst(strMatcher0, "user.language");
      String string0 = strBuilder2.toString();
      String string1 = strBuilder6.getNewLineText();
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.contains("");
      char[] charArray0 = new char[3];
      charArray0[0] = ' ';
      charArray0[1] = 'l';
      charArray0[2] = '0';
      int int0 = 5679;
      // Undeclared exception!
      try { 
        strBuilder0.insert(5679, charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 5679
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder strBuilder1 = strBuilder0.deleteAll('O');
      int int0 = 34;
      StrBuilder strBuilder2 = strBuilder1.ensureCapacity(34);
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      int int1 = (-201);
      StrBuilder strBuilder3 = new StrBuilder((-201));
      StrBuilder strBuilder4 = strBuilder3.appendFixedWidthPadRight((Object) "", (-201), 'h');
      StrBuilder strBuilder5 = strBuilder3.append(0.0F);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder6 = strBuilder5.appendWithSeparators((Collection) linkedList0, "");
      StrBuilder strBuilder7 = strBuilder0.append(strBuilder3);
      StrBuilder strBuilder8 = new StrBuilder("");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder8.new StrBuilderWriter();
      StrBuilder strBuilder9 = strBuilder7.appendWithSeparators((Object[]) null, "");
      strBuilder_StrBuilderWriter0.flush();
      String string1 = strBuilder7.toString();
      StringBuffer stringBuffer0 = new StringBuffer(34);
      StrBuilder strBuilder10 = strBuilder1.append(stringBuffer0, 0, 0);
      // Undeclared exception!
      try { 
        strBuilder10.toCharArray(5, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.deleteAll('.');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterMatcher(strMatcher0);
      StrMatcher strMatcher1 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      int int0 = strBuilder0.indexOf(strMatcher1);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.hashCode();
      StrBuilder strBuilder1 = strBuilder0.append(0.0F);
      StrBuilder strBuilder2 = strBuilder1.clear();
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) strBuilder2;
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) strBuilder2;
      objectArray0[3] = (Object) strBuilder2;
      objectArray0[4] = (Object) strBuilder1;
      StrBuilder strBuilder3 = strBuilder0.appendWithSeparators(objectArray0, (String) null);
      // Undeclared exception!
      try { 
        strBuilder1.validateIndex(862);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 862
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-137));
      StrBuilder strBuilder1 = new StrBuilder("H}wS|~</Ud");
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight((-137), (-630), '*');
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder1);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder4 = strBuilder0.appendWithSeparators((Collection) linkedList0, "<Q");
      int int0 = strBuilder4.validateRange(0, 2);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      Integer integer0 = new Integer(2);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) integer0, 0, 'u');
      StrBuilder strBuilder2 = strBuilder1.append(true);
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "");
      StrBuilder strBuilder3 = strBuilder1.append(stringBuffer0, 0, 0);
      StrBuilder strBuilder4 = strBuilder0.replaceAll('D', 'D');
      char char0 = strBuilder0.charAt(2);
      int int0 = strBuilder0.indexOf("", 1290);
      StrBuilder strBuilder5 = strBuilder3.trim();
      StrBuilder strBuilder6 = strBuilder0.append(false);
      char[] charArray0 = new char[1];
      charArray0[0] = 'D';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      boolean boolean0 = strBuilder5.contains((StrMatcher) strMatcher_CharSetMatcher0);
      // Undeclared exception!
      try { 
        strBuilder3.insert(34, (Object) strBuilder6);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 34
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1588);
      char char0 = 'Y';
      int int0 = strBuilder0.lastIndexOf('Y');
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StringBuffer stringBuffer0 = new StringBuffer();
      int int1 = 4;
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 4, 4);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1665);
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray(3003, 32);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("P$MdDX1/2_?\"MlouB");
      int int0 = strBuilder0.indexOf('s');
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1), (long) (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-136));
      StrBuilder strBuilder1 = strBuilder0.setNullText("<c");
      boolean boolean0 = strBuilder0.contains("B:@ZH,.qDv jU=35");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      char[] charArray0 = new char[9];
      charArray0[0] = 'P';
      charArray0[1] = '4';
      charArray0[2] = '~';
      charArray0[3] = 'V';
      charArray0[4] = 'x';
      charArray0[5] = 'k';
      charArray0[6] = 'H';
      charArray0[7] = '3';
      charArray0[8] = '0';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = strBuilder_StrBuilderReader0.read(charBuffer0);
      strBuilder_StrBuilderReader0.reset();
      int int1 = strBuilder_StrBuilderReader0.read();
      char[] charArray1 = new char[2];
      charArray1[0] = 'v';
      charArray1[1] = '[';
      StrBuilder strBuilder2 = strBuilder1.append(charArray1);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrMatcher");
      int int0 = 5039;
      // Undeclared exception!
      try { 
        strBuilder0.substring(5039);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = 0;
      char char0 = 'D';
      StrBuilder strBuilder1 = strBuilder0.insert(0, 'D');
      StrBuilder strBuilder2 = strBuilder0.append("");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder3 = strBuilder2.appendNewLine();
      String string0 = "";
      StrBuilder strBuilder4 = strBuilder2.appendWithSeparators((Collection) linkedList0, "");
      StrBuilder strBuilder5 = strBuilder4.replaceAll("s+]>qZ,'", "");
      Object object0 = linkedList0.clone();
      // Undeclared exception!
      try { 
        strBuilder5.insert(117, true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 117
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      String string0 = "P0n|kDL\"@CaK*]Zq";
      StrBuilder strBuilder0 = new StrBuilder("P0n|kDL\"@CaK*]Zq");
      int int0 = (-3867);
      String string1 = "?\\|aJbNA";
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("P0n|kDL\"@CaK*]Zq", "?|aJbNA");
      StrBuilder strBuilder2 = strBuilder0.replaceFirst("?|aJbNA", "");
      // Undeclared exception!
      try { 
        strBuilder0.substring((-3867), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3867
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      strBuilder0.validateIndex(0);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('B');
      int int0 = strBuilder0.indexOf(' ');
      boolean boolean0 = strBuilder0.startsWith("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      StrBuilder strBuilder2 = strBuilder0.replaceFirst("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter", "");
      // Undeclared exception!
      try { 
        strBuilder0.validateRange((-954), (-2164));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -954
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("jc@0;z$EK1'RrHb/I");
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("jc@0;z$EK1'RrHb/I");
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("jc@0;z$EK1'RrHb/I");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "(qK\"CGn@Oc(\"<");
      StrBuilder strBuilder2 = strBuilder1.insert(0, '*');
      StrBuilder strBuilder3 = strBuilder1.appendFixedWidthPadLeft((Object) strBuilder0, (-1564), '|');
      String string0 = strBuilder0.substring(0);
      Reader reader0 = strBuilder0.asReader();
      String string1 = strBuilder0.leftString(0);
      int int0 = strBuilder0.capacity();
      StrBuilder strBuilder4 = strBuilder0.deleteAll(strMatcher0);
      int int1 = strBuilder4.indexOf(strMatcher0);
      StrBuilder strBuilder5 = strBuilder0.appendNewLine();
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("/@9\"");
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher((char[]) null);
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 745);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      int int1 = strBuilder0.indexOf("/@9\"", 3);
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("K", 274, 2262);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(102);
      // Undeclared exception!
      try { 
        strBuilder0.substring(5);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(57);
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(2109);
      int int0 = strBuilder1.indexOf((String) null, 48);
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      int int1 = strBuilder0.lastIndexOf(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder1.insert(48, true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 48
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      char[] charArray0 = new char[3];
      charArray0[0] = '@';
      charArray0[1] = 'b';
      charArray0[2] = 'O';
      StrBuilder strBuilder2 = strBuilder1.append(charArray0, 0, 0);
      int int0 = strBuilder0.lastIndexOf("Mac OS X");
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(4, 'I');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 4
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Writer writer0 = strBuilder0.asWriter();
      int int0 = strBuilder0.size();
      String string0 = "_T3o7Eg/MF7M)";
      int int1 = 31;
      char char0 = '2';
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(31, '2');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 31
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity((-432));
      int int0 = (-739);
      int int1 = 520;
      int int2 = 47;
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight(520, 47, 'R');
      // Undeclared exception!
      try { 
        strBuilder1.insert((-739), "s7FhruoB%V/hBEe~rq");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -739
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[5];
      charArray0[0] = ']';
      charArray0[1] = 'n';
      charArray0[3] = 'x';
      charArray0[4] = 'y';
      char[] charArray1 = strBuilder0.getChars(charArray0);
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Writer writer0 = strBuilder0.asWriter();
      boolean boolean0 = strBuilder0.contains('d');
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-1);
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(99, 'G');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 99
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-447));
      StrBuilder strBuilder1 = strBuilder0.setLength(31);
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft((Object) strBuilder0, 0, 'y');
      Object object0 = new Object();
      StrBuilder strBuilder3 = strBuilder0.append(object0);
      Reader reader0 = strBuilder0.asReader();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder4 = strBuilder2.appendWithSeparators((Collection) linkedList0, (String) null);
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.insert((-230), 1061);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -230
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(647);
      StrBuilder strBuilder1 = strBuilder0.append((long) 647);
      StrBuilder strBuilder2 = strBuilder1.appendPadding(647, '_');
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadRight(4, 647, 'X');
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(0, 5, 's');
      String string0 = strBuilder0.getNullText();
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(1716);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1716
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[7];
      strBuilder_StrBuilderReader0.reset();
      charArray0[0] = '!';
      charArray0[1] = 'l';
      charArray0[2] = 'P';
      strBuilder_StrBuilderReader0.reset();
      charArray0[3] = '';
      charArray0[4] = '\\';
      charArray0[5] = '5';
      charArray0[6] = 'l';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharBuffer charBuffer1 = CharBuffer.allocate(1895);
      CharBuffer charBuffer2 = CharBuffer.wrap((CharSequence) charBuffer0);
      CharBuffer charBuffer3 = charBuffer2.get(charArray0, 1, 0);
      int int0 = strBuilder_StrBuilderReader0.read(charBuffer2);
      strBuilder_StrBuilderReader0.close();
      int int1 = strBuilder0.hashCode();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      Writer writer0 = strBuilder_StrBuilderWriter0.append('\\');
      strBuilder_StrBuilderWriter0.write(charArray0);
      StrBuilder strBuilder1 = new StrBuilder((-1));
      strBuilder_StrBuilderWriter0.flush();
      boolean boolean0 = strBuilder0.startsWith("78K]!u~g43bj");
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst((String) null, "2~Y<c;^)iI\"YvaI<+D");
      StrBuilder strBuilder2 = strBuilder0.insert(0, (Object) "IS!4#[U\"]2f%X");
      char[] charArray0 = new char[0];
      StrBuilder strBuilder3 = strBuilder2.insert(0, charArray0);
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("");
      boolean boolean0 = strBuilder3.contains((StrMatcher) strMatcher_StringMatcher0);
      char[] charArray1 = strBuilder3.toCharArray(0, 1912);
      String string0 = strBuilder1.midString(0, 0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(0L);
      StrBuilder strBuilder4 = strBuilder2.replaceAll(')', ')');
      StrMatcher strMatcher0 = StrMatcher.charMatcher('N');
      StrBuilder strBuilder5 = strBuilder0.append(false);
      StrBuilder strBuilder6 = strBuilder5.append("");
      String string1 = strBuilder6.substring(0, 0);
      StrBuilder strBuilder7 = strBuilder1.appendFixedWidthPadRight(0, 0, 'z');
      StringBuffer stringBuffer0 = strBuilder2.toStringBuffer();
      StrBuilder strBuilder8 = strBuilder2.insert(0, (-834));
      boolean boolean1 = strBuilder6.contains("2~Y<c;^)iI\"YvaI<+D");
      StrBuilder strBuilder9 = strBuilder3.appendFixedWidthPadLeft(0, 1131, ')');
      char[] charArray2 = new char[9];
      charArray2[0] = 'z';
      charArray2[1] = 'N';
      charArray2[2] = ')';
      charArray2[3] = ')';
      charArray2[4] = 'N';
      charArray2[5] = 'z';
      charArray2[6] = 'N';
      charArray2[7] = ')';
      charArray2[8] = ')';
      StrBuilder strBuilder10 = strBuilder7.insert(0, charArray2);
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(112);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(19, 48, '-');
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('I');
      int int0 = strBuilder0.indexOf((StrMatcher) strMatcher_CharMatcher0);
      StrBuilder strBuilder2 = new StrBuilder("ApV7KdiagQhGZ!,");
      StrBuilder strBuilder3 = strBuilder0.append(strBuilder2);
      String string0 = strBuilder0.midString(2964, 25);
      // Undeclared exception!
      try { 
        strBuilder1.insert((-1311), false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1311
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(114);
      StrBuilder strBuilder1 = new StrBuilder("8XI_4a}d*5=X3-");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('7');
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("8XI_4a}d*5=X3-");
      String[] stringArray0 = strBuilder_StrBuilderTokenizer0.getTokenArray();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterMatcher(strMatcher_CharMatcher0);
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      StrBuilder strBuilder2 = strBuilder0.append(object0);
      String string0 = strBuilder1.rightString((-819));
      StrBuilder strBuilder3 = strBuilder1.replaceAll(',', ',');
      StrBuilder strBuilder4 = strBuilder2.insert(0, 114);
      StrBuilder strBuilder5 = strBuilder4.appendPadding(114, '7');
      StrBuilder strBuilder6 = strBuilder2.append(0.0F);
      char[] charArray0 = new char[0];
      int int0 = strMatcher0.isMatch(charArray0, 0, 0, 0);
      boolean boolean0 = strBuilder6.contains((StrMatcher) strMatcher_CharMatcher0);
      StrBuilder strBuilder7 = strBuilder2.append(false);
      StrBuilder strBuilder8 = strBuilder1.replace(strMatcher0, "8XI_4a}d*5=X3-", 0, 0, (-819));
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("&=d-o4,,srJQi");
      StrBuilder strBuilder1 = strBuilder0.append(939L);
      StrBuilder strBuilder2 = strBuilder0.setNullText("&=d-o4,,srJQi");
      int int0 = strBuilder0.hashCode();
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("&=d-o4,,srJQi");
      Reader reader0 = strBuilder1.asReader();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("x-Yg}ZH/}V");
      int int1 = strBuilder2.indexOf(strMatcher0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "x-Yg}ZH/}V");
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charBuffer0);
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.StringCharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2331));
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.appendNull();
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = "end < start";
      StrBuilder strBuilder1 = new StrBuilder("end < start");
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      StrBuilder strBuilder2 = strBuilder1.replace(strMatcher0, "end < start", 0, 237, 0);
      StrBuilder strBuilder3 = strBuilder2.trim();
      StrBuilder strBuilder4 = strBuilder2.deleteFirst('.');
      StrBuilder strBuilder5 = strBuilder1.append((char[]) null);
      StrBuilder strBuilder6 = strBuilder5.append((char[]) null, 0, 0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder4.new StrBuilderTokenizer();
      StrBuilder strBuilder7 = strBuilder5.appendWithSeparators((Iterator) strBuilder_StrBuilderTokenizer0, "xX3wGIktT,/+");
      // Undeclared exception!
      try { 
        strBuilder2.substring(603, 4517);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.insert(0, 0.0F);
      StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder4 = strBuilder3.append(true);
      StrMatcher strMatcher1 = StrMatcher.stringMatcher((String) null);
      boolean boolean0 = strBuilder0.contains(';');
      int int0 = strBuilder1.size();
      StrBuilder strBuilder5 = strBuilder2.insert(7, '$');
      int int1 = strBuilder0.length();
      StrBuilder strBuilder6 = new StrBuilder((String) null);
      StrBuilder strBuilder7 = strBuilder4.insert(0, (Object) strBuilder6);
      int int2 = strBuilder4.lastIndexOf((String) null, 7);
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[9];
      charArray0[0] = 'v';
      charArray0[1] = 'p';
      charArray0[2] = '`';
      charArray0[3] = 'z';
      charArray0[4] = 'Q';
      charArray0[5] = '>';
      charArray0[6] = '\"';
      charArray0[7] = 'F';
      charArray0[8] = '9';
      StrBuilder strBuilder1 = strBuilder0.insert(0, charArray0);
      StrBuilder strBuilder2 = strBuilder0.append('c');
  }
}
