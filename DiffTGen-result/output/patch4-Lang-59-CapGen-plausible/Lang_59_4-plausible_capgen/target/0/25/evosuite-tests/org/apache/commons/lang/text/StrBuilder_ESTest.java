/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 28 16:57:45 GMT 2020
 */

package org.apache.commons.lang.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.Writer;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.NoSuchElementException;
import java.util.function.Consumer;
import java.util.stream.IntStream;
import org.apache.commons.lang.text.StrBuilder;
import org.apache.commons.lang.text.StrMatcher;
import org.apache.commons.lang.text.StrTokenizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StrBuilder_ESTest extends StrBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      String string0 = "<ytHO{B)";
      StrBuilder strBuilder0 = new StrBuilder("<ytHO{B)");
      StrBuilder strBuilder1 = strBuilder0.append("<ytHO{B)", 0, 0);
      StrBuilder strBuilder2 = strBuilder0.deleteFirst((String) null);
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadLeft((Object) "<ytHO{B)", 0, 'd');
      StringBuffer stringBuffer0 = new StringBuffer('d');
      StrBuilder strBuilder4 = new StrBuilder(0);
      StrBuilder strBuilder5 = strBuilder1.append((double) 0);
      int int0 = strBuilder0.indexOf("<ytHO{B)");
      String string1 = strBuilder1.leftString(1076);
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder0.insert(1076, charArray0, 44, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1076
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      int int0 = 1317;
      StrBuilder strBuilder0 = new StrBuilder(1317);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      String string0 = null;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, (String) null);
      // Undeclared exception!
      try { 
        strBuilder1.append(strBuilder0, 1317, 1317);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("}");
      StrBuilder strBuilder1 = strBuilder0.deleteAll("}");
      char[] charArray0 = new char[5];
      charArray0[0] = 'J';
      charArray0[1] = '*';
      // Undeclared exception!
      try { 
        strBuilder0.insert(1317, '*');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1317
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(0);
      StrBuilder strBuilder2 = strBuilder1.deleteAll('u');
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("X,~)?cG");
      StrBuilder strBuilder1 = strBuilder0.replaceAll("1.6", "X,~)?cG");
      char[] charArray0 = new char[7];
      charArray0[0] = '\"';
      charArray0[1] = '1';
      StrBuilder strBuilder2 = strBuilder0.append(true);
      charArray0[2] = 'Y';
      charArray0[3] = '_';
      charArray0[4] = 'U';
      charArray0[5] = 'S';
      charArray0[6] = ',';
      strBuilder0.getChars(0, 0, charArray0, 0);
      StrBuilder strBuilder3 = strBuilder1.appendFixedWidthPadLeft((Object) "org.apache.commons.lang.text.StrBuilder", (-1535), 'r');
      String string0 = strBuilder3.midString((-1535), (-337));
      int int0 = 31;
      // Undeclared exception!
      try { 
        strBuilder0.replace(170, 31, "9no{N");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-915));
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((-915), (-915), '=');
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.appendPadding(0, 'Q');
      StrBuilder strBuilder2 = strBuilder0.append(0L);
      StrBuilder strBuilder3 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder4 = strBuilder0.append((double) 0);
      Writer writer0 = strBuilder3.asWriter();
      StrBuilder strBuilder5 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder5.new StrBuilderWriter();
      char[] charArray0 = new char[9];
      charArray0[0] = 'Q';
      charArray0[1] = 'Q';
      charArray0[2] = 'Q';
      charArray0[3] = 'Q';
      charArray0[4] = 'Q';
      charArray0[5] = 'Q';
      charArray0[6] = 'Q';
      charArray0[7] = 'Q';
      charArray0[8] = 'Q';
      strBuilder_StrBuilderWriter0.write(charArray0);
      StrBuilder strBuilder6 = strBuilder5.append(charArray0);
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrBuilder strBuilder7 = strBuilder6.insert(0, (float) 0);
      Integer integer0 = new Integer(0);
      StrBuilder strBuilder8 = strBuilder7.appendFixedWidthPadRight((Object) integer0, 0, '5');
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("KdGs!n m,obu");
      boolean boolean0 = strBuilder2.contains(strMatcher0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder strBuilder9 = strBuilder6.appendFixedWidthPadLeft(object0, 0, 'Q');
      Reader reader0 = strBuilder0.asReader();
      int int0 = strBuilder7.indexOf("", 0);
      // Undeclared exception!
      try { 
        strBuilder5.append(charArray0, 0, (-2163));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: -2163
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("1.5");
      StrBuilder strBuilder1 = strBuilder0.append((Object) "1.5");
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((Object) "1.5", 963, '3');
      char[] charArray0 = new char[0];
      StrBuilder strBuilder3 = new StrBuilder("1.5");
      char[] charArray1 = new char[3];
      charArray1[0] = '3';
      charArray1[2] = '3';
      charArray1[2] = '3';
      StrBuilder strBuilder4 = strBuilder3.append(charArray1);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      boolean boolean0 = strBuilder4.equalsIgnoreCase(strBuilder1);
      StrBuilder strBuilder5 = strBuilder2.replace((StrMatcher) null, "", 963, 963, 52);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      String string0 = "<ytHO{B)";
      StrBuilder strBuilder0 = new StrBuilder("<ytHO{B)");
      StrBuilder strBuilder1 = strBuilder0.append("<ytHO{B)", 0, 0);
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((Object) "<ytHO{B)", 0, 'd');
      StringBuffer stringBuffer0 = new StringBuffer('d');
      StrBuilder strBuilder3 = new StrBuilder(0);
      StrBuilder strBuilder4 = strBuilder1.append((double) 0);
      int int0 = strBuilder0.indexOf("<ytHO{B)");
      StrBuilder strBuilder5 = strBuilder0.insert(0, (Object) "");
      StrBuilder strBuilder6 = strBuilder5.deleteFirst('d');
      String string1 = strBuilder1.leftString(1076);
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder0.insert(1076, charArray0, 44, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1076
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.append((Object) "");
      String string0 = strBuilder1.substring(0, 1);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.endsWith((String) null);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      char[] charArray0 = new char[4];
      charArray0[0] = '5';
      charArray0[1] = '5';
      charArray0[2] = '5';
      charArray0[3] = '5';
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.append("", 0, 0);
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((Object) "", 0, 'd');
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder3 = strBuilder1.append(strBuilder2);
      StrBuilder strBuilder4 = strBuilder1.append((double) 0);
      StrBuilder strBuilder5 = strBuilder4.delete(0, 0);
      int int0 = strBuilder0.indexOf("");
      String string1 = strBuilder1.leftString(1076);
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder0.insert(1076, charArray0, 44, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1076
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(97);
      int int0 = strBuilder0.length();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(0);
      long long1 = strBuilder_StrBuilderReader0.skip(0);
      char[] charArray0 = new char[2];
      int int1 = strBuilder_StrBuilderReader0.read(charArray0);
      charArray0[0] = 'K';
      charArray0[1] = '2';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      int int2 = strBuilder_StrBuilderReader0.read();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder2 = strBuilder1.appendNull();
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      int int3 = strBuilder0.lastIndexOf(strMatcher0);
      boolean boolean0 = strBuilder1.equals(strBuilder2);
      LinkedList<StrBuilder> linkedList0 = new LinkedList<StrBuilder>();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("aVS('S");
      StrBuilder strBuilder3 = strBuilder1.appendWithSeparators((Collection) linkedList0, "Z6C5#`_@:");
      boolean boolean1 = strBuilder3.contains("Z6C5#`_@:");
      String string0 = strBuilder3.leftString((-1));
      String string1 = strBuilder0.getNullText();
      String string2 = strBuilder1.getNullText();
      StrBuilder strBuilder4 = strBuilder1.replaceFirst('K', '%');
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1), charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(0, 0, 'E');
      StrBuilder strBuilder2 = strBuilder1.setNullText("$.i-EM>aSC]SpRZ");
      StrBuilder strBuilder3 = strBuilder0.setNewLineText("]^h");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[2];
      charArray0[0] = 'E';
      charArray0[1] = 'E';
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset(charArray0);
      StrBuilder strBuilder4 = strBuilder3.appendWithSeparators((Iterator) strTokenizer0, "$.i-EM>aSC]SpRZ");
      StrBuilder strBuilder5 = strBuilder4.append(5212L);
      StrBuilder strBuilder6 = strBuilder0.clear();
      StrBuilder strBuilder7 = strBuilder6.insert(0, false);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("()-s2~,7@y}Ki;1C[2w");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('U', '_');
      int int0 = strBuilder1.lastIndexOf("thR%]9a", 479);
      int int1 = strBuilder1.indexOf("Qm}SGW");
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("+K\"5oyqHJ9@:iv`Fd");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      long long0 = strBuilder_StrBuilderReader0.skip((-1289L));
      strBuilder_StrBuilderReader0.close();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((-795), (-795), 'o');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      StrBuilder strBuilder2 = strBuilder0.replaceAll("+K\"5oyqHJ9@:iv`Fd", "+K\"5oyqHJ9@:iv`Fd");
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(object0, 1320, '}');
      boolean boolean0 = strBuilder_StrBuilderTokenizer0.hasPrevious();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset();
      StrBuilder strBuilder2 = strBuilder0.insert(1320, 1L);
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      int int0 = strBuilder2.indexOf(strMatcher0, 1320);
      StrBuilder strBuilder3 = strBuilder2.insert(1320, (char[]) null);
      String string0 = strBuilder1.midString(1320, 2218);
      int int1 = strBuilder1.length();
      StrMatcher strMatcher1 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrBuilder strBuilder4 = strBuilder1.deleteAll(strMatcher1);
      StrBuilder strBuilder5 = strBuilder1.appendFixedWidthPadLeft((-1956), 1320, 'y');
      int int2 = strBuilder4.indexOf('M', 1321);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[9];
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(44);
      charArray0[0] = 'h';
      charArray0[1] = 'B';
      charArray0[2] = 'k';
      charArray0[3] = '`';
      charArray0[4] = 's';
      charArray0[5] = '%';
      charArray0[6] = '3';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 44, 32);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.appendPadding(0, 'Q');
      StrBuilder strBuilder2 = strBuilder0.append(0L);
      StrBuilder strBuilder3 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder4 = strBuilder0.append((double) 0);
      Writer writer0 = strBuilder3.asWriter();
      StrBuilder strBuilder5 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder5.new StrBuilderWriter();
      char[] charArray0 = new char[9];
      charArray0[0] = 'Q';
      charArray0[1] = 'Q';
      charArray0[2] = 'Q';
      charArray0[3] = 'Q';
      charArray0[4] = 'Q';
      charArray0[5] = 'Q';
      charArray0[6] = 'Q';
      charArray0[7] = 'Q';
      charArray0[8] = 'Q';
      strBuilder_StrBuilderWriter0.write(charArray0);
      StrBuilder strBuilder6 = strBuilder5.append(charArray0);
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      boolean boolean0 = strBuilder2.contains(strMatcher0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder strBuilder7 = strBuilder6.appendFixedWidthPadLeft(object0, 0, 'Q');
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4.0");
      StrBuilder strBuilder1 = new StrBuilder((-1));
      StrBuilder strBuilder2 = strBuilder1.append((char[]) null);
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      StrBuilder strBuilder3 = strBuilder1.deleteAll('\\');
      int int0 = 9;
      // Undeclared exception!
      try { 
        strBuilder2.append("CC?", 2204, 9);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) null, "1.3");
      // Undeclared exception!
      try { 
        strBuilder1.insert((-471), 859L);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -471
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-3692));
      StrBuilder strBuilder1 = new StrBuilder(13);
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight((Object) strBuilder1, 30, '_');
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      String string0 = "java.io.tmpdir";
      StrBuilder strBuilder0 = new StrBuilder("java.io.tmpdir");
      int int0 = (-1);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) "java.io.tmpdir", (-1), '[');
      StrBuilder strBuilder2 = strBuilder1.append((Object) "");
      char[] charArray0 = new char[8];
      charArray0[0] = '[';
      charArray0[1] = '[';
      charArray0[2] = '[';
      charArray0[3] = '[';
      charArray0[4] = '[';
      charArray0[6] = '[';
      charArray0[6] = '[';
      charArray0[7] = '[';
      strBuilder0.buffer = charArray0;
      StrBuilder strBuilder3 = strBuilder0.ensureCapacity((-1));
      StrBuilder strBuilder4 = strBuilder0.clear();
      StrBuilder strBuilder5 = strBuilder4.appendNewLine();
      StrBuilder strBuilder6 = strBuilder0.minimizeCapacity();
      int int1 = 558;
      StrBuilder strBuilder7 = strBuilder6.appendFixedWidthPadLeft((-895), 558, '[');
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('[');
      StrMatcher strMatcher0 = StrMatcher.charMatcher('[');
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(strBuilder0.buffer);
      StrBuilder strBuilder8 = strBuilder6.deleteAll((StrMatcher) strMatcher_CharMatcher0);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1), charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setNullText("W-Du00o ");
      StrBuilder strBuilder2 = strBuilder1.append("length must be valid");
      String string0 = strBuilder0.rightString((-4206));
      int int0 = strBuilder0.lastIndexOf("length must be valid", 1923);
      // Undeclared exception!
      try { 
        strBuilder1.substring(39, Integer.MAX_VALUE);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      int int0 = (-15);
      StrBuilder strBuilder0 = new StrBuilder((-15));
      StrBuilder strBuilder1 = strBuilder0.deleteAll("");
      String string0 = strBuilder0.getNullText();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      String string1 = strBuilder_StrBuilderTokenizer0.toString();
      Consumer<String> consumer0 = (Consumer<String>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      Writer writer0 = strBuilder1.asWriter();
      strBuilder_StrBuilderTokenizer0.forEachRemaining(consumer0);
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setQuoteChar(')');
      char[] charArray0 = new char[7];
      charArray0[0] = ')';
      charArray0[1] = ')';
      charArray0[2] = '.';
      charArray0[3] = ')';
      charArray0[4] = ')';
      charArray0[5] = ')';
      charArray0[6] = ')';
      StrTokenizer strTokenizer1 = strBuilder_StrBuilderTokenizer0.reset(charArray0);
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Iterator) strTokenizer0, "");
      StrBuilder strBuilder3 = strBuilder1.deleteAll((String) null);
      String string2 = strBuilder2.rightString(2160);
      int int1 = strBuilder3.indexOf("", 0);
      boolean boolean0 = strBuilder3.startsWith("P9NR=f6a|-");
      // Undeclared exception!
      try { 
        strBuilder3.toCharArray(1433, (-1956));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("PGU|BSX{l");
      char[] charArray0 = new char[8];
      charArray0[0] = '9';
      charArray0[1] = 'D';
      charArray0[2] = 'o';
      charArray0[3] = '|';
      charArray0[4] = '7';
      charArray0[5] = '^';
      charArray0[6] = '%';
      charArray0[7] = 'r';
      StrBuilder strBuilder1 = strBuilder0.insert(4, charArray0, 0, 4);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      int int0 = 518;
      StrBuilder strBuilder0 = new StrBuilder(518);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(518);
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder strBuilder1 = strBuilder0.append(object0);
      StrBuilder strBuilder2 = strBuilder0.append(518);
      char[] charArray0 = new char[5];
      charArray0[0] = '(';
      charArray0[1] = '<';
      charArray0[2] = 'z';
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      String string0 = "The Array must not be null";
      StrBuilder strBuilder3 = strBuilder0.replaceAll(strMatcher0, "The Array must not be null");
      charArray0[3] = ' ';
      charArray0[4] = 'j';
      // Undeclared exception!
      try { 
        strBuilder2.insert(518, charArray0, 3303, 518);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 518
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.delete(0, 0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("remove() is unsupported");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer1 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer1.setEmptyTokenAsNull(true);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "");
      String[] stringArray0 = strBuilder_StrBuilderTokenizer1.getTokenArray();
      int int1 = (-1421);
      int int2 = strBuilder1.indexOf((StrMatcher) null, (-1421));
      int int3 = (-3516);
      // Undeclared exception!
      try { 
        strBuilder0.delete((-3516), (-3516));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3516
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      int int0 = (-1614);
      StrBuilder strBuilder0 = new StrBuilder((-1614));
      char char0 = 'Q';
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight((Object) null, 903, 'Q');
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("kT$zjoO`t*Irs");
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0, 0, 0);
      char[] charArray0 = new char[8];
      charArray0[0] = '?';
      StringBuffer stringBuffer1 = stringBuffer0.appendCodePoint(0);
      StringBuffer stringBuffer2 = stringBuffer0.insert(0, "kT$zjoO`t*Irs");
      StrBuilder strBuilder2 = strBuilder0.append((double) 0);
      charArray0[1] = '}';
      charArray0[2] = 'G';
      charArray0[3] = 'n';
      charArray0[4] = 'H';
      charArray0[5] = '2';
      charArray0[6] = 'o';
      charArray0[7] = 'H';
      StrBuilder strBuilder3 = strBuilder1.append(charArray0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
      strBuilder_StrBuilderReader0.reset();
      // Undeclared exception!
      try { 
        strBuilder0.insert(3934, 3934);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3934
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(97);
      char[] charArray0 = null;
      StrBuilder strBuilder1 = strBuilder0.insert(0, (char[]) null);
      String string0 = "-F]7Sm{[ng)Gs9";
      // Undeclared exception!
      try { 
        strBuilder1.append("-F]7Sm{[ng)Gs9", 117, 32);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(object0, 1320, '}');
      boolean boolean0 = strBuilder_StrBuilderTokenizer0.hasPrevious();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset();
      StrBuilder strBuilder2 = strBuilder0.insert(1320, 1L);
      StrBuilder strBuilder3 = strBuilder2.insert(1320, (char[]) null);
      String string0 = strBuilder1.midString(1320, 2218);
      int int0 = strBuilder1.length();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrBuilder strBuilder4 = strBuilder1.deleteAll(strMatcher0);
      int int1 = strBuilder4.indexOf('M', 1321);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("PJ!z{CGX):O");
      char char0 = 'j';
      StrMatcher strMatcher0 = StrMatcher.charMatcher('j');
      StrMatcher strMatcher1 = StrMatcher.stringMatcher((String) null);
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_StringMatcher0);
      StrBuilder strBuilder1 = new StrBuilder((String) null);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((String) null);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      int int1 = 0;
      int int2 = strBuilder1.lastIndexOf((String) null, 0);
      String string0 = strBuilder0.getNullText();
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(117);
      StrBuilder strBuilder1 = strBuilder0.setNullText("add() is unsupported");
      StrBuilder strBuilder2 = strBuilder0.clear();
      String string0 = strBuilder0.midString(101, (-857));
      Writer writer0 = strBuilder0.asWriter();
      int int0 = strBuilder2.lastIndexOf((String) null);
      // Undeclared exception!
      try { 
        strBuilder1.insert(117, '_');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 117
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("&QBACsQrhlQ$3^S");
      char[] charArray0 = new char[9];
      charArray0[0] = 'S';
      charArray0[1] = 'o';
      charArray0[2] = 'W';
      charArray0[3] = '0';
      charArray0[4] = '`';
      charArray0[5] = '-';
      charArray0[6] = '|';
      charArray0[7] = 'n';
      charArray0[8] = 'Y';
      strBuilder0.buffer = charArray0;
      StrBuilder strBuilder1 = strBuilder0.setCharAt(0, 'Z');
      // Undeclared exception!
      try { 
        strBuilder0.insert(0, (Object) "&QBACsQrhlQ$3^S");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("length must be valid");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("zU:");
      StrBuilder strBuilder1 = strBuilder0.append((-286));
      strBuilder_StrBuilderWriter0.close();
      StrBuilder strBuilder2 = strBuilder0.append(true);
      StrBuilder strBuilder3 = strBuilder1.trim();
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      int int0 = 2857;
      StrBuilder strBuilder0 = new StrBuilder(2857);
      String string0 = strBuilder0.leftString(2857);
      Writer writer0 = strBuilder0.asWriter();
      char char0 = '4';
      StrBuilder strBuilder1 = strBuilder0.deleteAll("");
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight(2857, 2857, '4');
      StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
      StrBuilder strBuilder4 = strBuilder3.appendFixedWidthPadLeft(2857, 2857, ')');
      StrBuilder strBuilder5 = strBuilder4.append(0L);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder3.new StrBuilderReader();
      int int1 = strBuilder_StrBuilderReader0.read();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder0.append("", 106, 2857);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Object object0 = new Object();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(object0, 48, 'x');
      StrBuilder strBuilder2 = strBuilder0.minimizeCapacity();
      Reader reader0 = strBuilder0.asReader();
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("");
      StrBuilder strBuilder3 = strBuilder0.append(true);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("");
      char[] charArray0 = new char[4];
      charArray0[0] = 'C';
      charArray0[1] = 'c';
      charArray0[2] = 'D';
      charArray0[3] = '}';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder4 = strBuilder2.replaceFirst((StrMatcher) strMatcher_StringMatcher0, "");
      StringBuffer stringBuffer0 = strBuilder4.toStringBuffer();
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      Object[] objectArray0 = new Object[1];
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) "Invalid startIndex: ", 57, '9');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("Invalid startIndex: ");
      StrMatcher strMatcher2 = StrMatcher.stringMatcher("");
      StrMatcher strMatcher3 = StrMatcher.charSetMatcher((String) null);
      boolean boolean0 = strBuilder1.contains(strMatcher0);
      objectArray0[0] = (Object) strBuilder0;
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators(objectArray0, "$myKO5VA3c");
      String string0 = strBuilder0.toString();
      StrBuilder strBuilder3 = strBuilder2.deleteFirst('9');
      StrBuilder strBuilder4 = strBuilder0.append("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      int int0 = strBuilder0.lastIndexOf('+', (-1156));
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(0);
      int int0 = strBuilder0.hashCode();
      StrBuilder strBuilder2 = strBuilder0.append((-2082L));
      StrMatcher strMatcher0 = StrMatcher.charMatcher('Y');
      int int1 = strBuilder2.lastIndexOf(strMatcher0, 0);
      StrBuilder strBuilder3 = strBuilder0.append(false);
      StrBuilder strBuilder4 = strBuilder3.append('g');
      StrMatcher strMatcher1 = StrMatcher.tabMatcher();
      StrBuilder strBuilder5 = strBuilder4.deleteAll(strMatcher1);
      StrBuilder strBuilder6 = strBuilder5.appendNull();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder7 = strBuilder6.appendWithSeparators((Collection) linkedList0, ",|{no");
      StrBuilder strBuilder8 = strBuilder3.setNullText("remove() is unsupported");
      StrBuilder strBuilder9 = strBuilder3.append('');
      int int2 = strBuilder9.indexOf(strMatcher0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[3];
      charArray0[0] = 'g';
      charArray0[1] = 'g';
      charArray0[2] = 'g';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 1630, 2);
      int int3 = strBuilder1.indexOf(strMatcher0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1052);
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.deleteFirst(strMatcher0);
      StrBuilder strBuilder3 = strBuilder0.clear();
      int int0 = 3;
      char[] charArray0 = new char[9];
      charArray0[0] = 'V';
      charArray0[1] = '\'';
      charArray0[2] = '$';
      charArray0[3] = '?';
      charArray0[4] = '.';
      charArray0[5] = '\'';
      charArray0[6] = 'k';
      charArray0[7] = 'A';
      charArray0[8] = '[';
      // Undeclared exception!
      try { 
        strBuilder3.insert(0, charArray0, (-2172), Integer.MAX_VALUE);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: -2172
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[1];
      Writer writer0 = strBuilder0.asWriter();
      charArray0[0] = '(';
      strBuilder0.buffer = charArray0;
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      String string0 = strBuilder_StrBuilderTokenizer0.toString();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(object0, (-1707), 'J');
      StrBuilder strBuilder2 = strBuilder1.insert(0, '=');
      boolean boolean0 = strBuilder0.contains((String) null);
      StrBuilder strBuilder3 = strBuilder1.insert(0, 0.0);
      StrBuilder strBuilder4 = strBuilder2.replaceFirst((String) null, (String) null);
      int int0 = strBuilder1.indexOf("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", 0);
      StrBuilder strBuilder5 = strBuilder1.append(strBuilder2);
      String string1 = strBuilder5.getNullText();
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("java.util.prefs.PreferencesFactory", "Kh!N]MSf");
      StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
      strBuilder2.size = 0;
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      int int1 = strBuilder0.indexOf(strMatcher0, 240);
      // Undeclared exception!
      try { 
        strBuilder0.insert(31, (Object) strBuilder2);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 31
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("nm8Y._");
      char char0 = 'i';
      StrBuilder strBuilder1 = strBuilder0.append('i');
      int int0 = strBuilder0.lastIndexOf("nm8Y._", (-2264));
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt((-2264));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2264
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-237));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(114);
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      char[] charArray0 = new char[9];
      charArray0[0] = '3';
      charArray0[1] = 'I';
      charArray0[2] = '|';
      charArray0[3] = '\\';
      charArray0[4] = 'N';
      charArray0[5] = '&';
      charArray0[6] = 'y';
      charArray0[7] = 'C';
      charArray0[8] = '$';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      StrMatcher strMatcher2 = StrMatcher.trimMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher2);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceAll('6', 'f');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft(object0, 0, 'C');
      StrBuilder strBuilder3 = strBuilder2.trim();
      StrBuilder strBuilder4 = strBuilder0.trim();
      StrBuilder strBuilder5 = strBuilder4.trim();
      int int0 = strBuilder4.indexOf("");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder3.new StrBuilderWriter();
      char[] charArray0 = new char[6];
      charArray0[0] = '6';
      charArray0[1] = '6';
      charArray0[2] = 'f';
      charArray0[3] = '\\';
      charArray0[4] = '6';
      charArray0[5] = 'g';
      strBuilder_StrBuilderWriter0.write(charArray0);
      StrBuilder strBuilder6 = strBuilder3.append(strBuilder4);
      StrBuilder strBuilder7 = strBuilder3.append((long) 0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.append("", 0, 0);
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((Object) "", 0, 'd');
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder strBuilder3 = strBuilder1.append(strBuilder2);
      StrBuilder strBuilder4 = strBuilder1.append((double) 0);
      int int0 = strBuilder0.indexOf("");
      String string1 = strBuilder1.leftString(1076);
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder0.insert(1076, charArray0, 44, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1076
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[9];
      charArray0[0] = 'h';
      charArray0[1] = 'B';
      charArray0[2] = 'k';
      charArray0[3] = '`';
      charArray0[4] = 's';
      charArray0[5] = ',';
      charArray0[6] = '3';
      charArray0[7] = '';
      charArray0[8] = '(';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(108);
      StrBuilder strBuilder1 = strBuilder0.append(false);
      strBuilder1.size = 108;
      StrBuilder strBuilder2 = new StrBuilder();
      boolean boolean0 = strBuilder0.equals(strBuilder2);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder2.new StrBuilderWriter();
      char[] charArray0 = new char[6];
      charArray0[0] = 'i';
      charArray0[1] = 'k';
      charArray0[2] = 'y';
      char char0 = 'a';
      // Undeclared exception!
      try { 
        strBuilder2.insert(32, 0L);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2795);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
      Reader reader0 = strBuilder0.asReader();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[5];
      charArray0[0] = 'w';
      charArray0[1] = ';';
      charArray0[2] = 'x';
      charArray0[3] = '{';
      charArray0[4] = '\"';
      strBuilder_StrBuilderWriter0.write(charArray0);
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      int int0 = strBuilder0.length();
      StrBuilder strBuilder1 = new StrBuilder(2795);
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      StrMatcher strMatcher0 = StrMatcher.charMatcher('{');
      StrBuilder strBuilder3 = strBuilder2.replaceFirst(strMatcher0, "@$zDC3r$[$^>)");
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceAll((StrMatcher) strMatcher_TrimMatcher0, "-p1e@*cO@Tbqd");
      char[] charArray0 = new char[3];
      charArray0[0] = 'K';
      charArray0[1] = 'd';
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "-p1e@*cO@Tbqd");
      StrBuilder strBuilder2 = strBuilder0.append(stringBuffer0);
      charArray0[2] = '_';
      char[] charArray1 = strBuilder0.getChars(charArray0);
      StrBuilder strBuilder3 = strBuilder1.insert(0, 'S');
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("", 0, (-3922));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      String string0 = "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer";
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      int int0 = strBuilder0.validateRange(0, 0);
      char char0 = '`';
      int int1 = strBuilder0.indexOf('`');
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("");
      StrBuilder strBuilder2 = strBuilder0.appendPadding(0, '`');
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      int int2 = strBuilder1.lastIndexOf(strMatcher0);
      StrBuilder strBuilder3 = strBuilder1.deleteCharAt(3);
      // Undeclared exception!
      try { 
        strBuilder3.insert(108, (long) 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 108
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("");
      char[] charArray0 = new char[7];
      charArray0[0] = 'l';
      charArray0[1] = '^';
      charArray0[2] = 'L';
      charArray0[3] = 'M';
      charArray0[4] = ']';
      charArray0[5] = '(';
      charArray0[6] = '(';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder2 = strBuilder0.replaceAll(strMatcher0, "org.apache.commons.lang.ArrayUtils");
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder3 = strBuilder1.append(stringBuffer0);
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder4 = strBuilder0.replaceAll("_rxie)?w lh", "_rxie)?w lh");
      StrBuilder strBuilder5 = strBuilder4.insert(0, "Invalid offset: ");
      StrBuilder strBuilder6 = strBuilder5.deleteAll('y');
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('y');
      int int0 = strBuilder6.indexOf((StrMatcher) strMatcher_TrimMatcher0, 0);
      String string0 = strBuilder4.getNewLineText();
      StrBuilder strBuilder7 = strBuilder0.insert(0, 0);
      StrBuilder strBuilder8 = strBuilder5.reverse();
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrTokenizer");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((-1574), (-701), 'b');
      StrBuilder strBuilder2 = strBuilder0.deleteFirst("org.apache.commons.lang.text.StrTokenizer");
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.insert(0, "");
      StringBuffer stringBuffer0 = new StringBuffer(482);
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      int int0 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_TrimMatcher0);
      // Undeclared exception!
      try { 
        stringBuffer0.replace(482, 0, "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // start > length()
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceAll((String) null, (String) null);
      int int0 = 0;
      LinkedList<String> linkedList0 = new LinkedList<String>();
      String string0 = "";
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
      StringBuffer stringBuffer0 = strBuilder1.toStringBuffer();
      // Undeclared exception!
      try { 
        strBuilder1.toCharArray(2221, 2221);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("tkGo+KBVDh");
      StrBuilder strBuilder1 = strBuilder0.append(0.0F);
      Reader reader0 = strBuilder1.asReader();
      StrBuilder strBuilder2 = strBuilder0.reverse();
      StrBuilder strBuilder3 = strBuilder2.trim();
      StrBuilder strBuilder4 = strBuilder0.append((StrBuilder) null);
      StrBuilder strBuilder5 = strBuilder0.replaceAll((String) null, (String) null);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder6 = strBuilder5.appendWithSeparators((Collection) linkedList0, "");
      int int0 = strBuilder4.lastIndexOf("", 183);
      StrBuilder strBuilder7 = strBuilder0.append(strBuilder5);
      // Undeclared exception!
      try { 
        strBuilder7.delete(183, 1762);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('\"');
      boolean boolean0 = strBuilder0.contains((StrMatcher) strMatcher_CharMatcher0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[7];
      charArray0[0] = '\"';
      charArray0[1] = '\"';
      charArray0[2] = '\"';
      charArray0[3] = '\"';
      charArray0[4] = '\"';
      charArray0[5] = '\"';
      charArray0[6] = '\"';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 116, (-1118));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -1118
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 4;
      String string0 = "org.apache.commons.lang.text.StrBuilder";
      // Undeclared exception!
      try { 
        strBuilder0.insert(4, "org.apache.commons.lang.text.StrBuilder");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 4
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "t*8?t1gxVN";
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("t*8?t1gxVN", "");
      StrBuilder strBuilder2 = strBuilder1.trim();
      StrBuilder strBuilder3 = strBuilder1.append(693);
      int int0 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.validateRange(485, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      boolean boolean0 = strBuilder0.contains('o');
      String string0 = strBuilder0.getNewLineText();
      StrBuilder strBuilder1 = strBuilder0.insert(0, (Object) null);
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('+');
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("8PV!^7>+)|z$RlA@");
      StrMatcher strMatcher1 = StrMatcher.charMatcher('o');
      int int0 = strBuilder1.lastIndexOf((StrMatcher) strMatcher_CharMatcher0, 2137);
      String string1 = strBuilder0.getNewLineText();
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder strBuilder2 = strBuilder1.replaceFirst("java.runtime.name", "vU/XVR1");
      // Undeclared exception!
      try { 
        strBuilder2.insert(32, 'o');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1);
      StrBuilder strBuilder1 = strBuilder0.append((-1L));
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2);
      StrBuilder strBuilder1 = strBuilder0.appendPadding(2, '~');
      int int0 = strBuilder0.lastIndexOf('6', 2);
      int int1 = 1048;
      char[] charArray0 = new char[9];
      charArray0[0] = '6';
      charArray0[1] = ';';
      charArray0[2] = '6';
      charArray0[3] = '6';
      charArray0[4] = '6';
      charArray0[5] = 'i';
      charArray0[6] = '6';
      charArray0[7] = '6';
      charArray0[8] = 't';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, (-1), 2);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 2
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("2Ki>");
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("length must be valid");
      char[] charArray0 = new char[5];
      charArray0[0] = 'c';
      charArray0[1] = 'W';
      charArray0[2] = ' ';
      charArray0[3] = 'E';
      charArray0[4] = 'j';
      int int0 = strMatcher0.isMatch(charArray0, (-239), (-239), (-239));
      StrBuilder strBuilder1 = strBuilder0.deleteFirst((StrMatcher) strMatcher_NoMatcher0);
      StrMatcher strMatcher1 = StrMatcher.charMatcher('|');
      strBuilder0.size = 709;
      StrMatcher strMatcher2 = StrMatcher.splitMatcher();
      // Undeclared exception!
      try { 
        strBuilder0.lastIndexOf(strMatcher2);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(117);
      char[] charArray0 = new char[3];
      charArray0[0] = '(';
      charArray0[1] = 'v';
      charArray0[2] = 'M';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, (-2004), (-901));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -901
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-3052);
      // Undeclared exception!
      try { 
        strBuilder0.setLength((-3052));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3052
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder0.getChars(44, (-1672), charArray0, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1672
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      String string0 = null;
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = new StrBuilder();
      boolean boolean0 = strBuilder0.equals(strBuilder1);
      int int0 = 2209;
      int int1 = strBuilder1.indexOf((String) null, 2209);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher((String) null);
      int int2 = strBuilder0.indexOf(strMatcher0);
      String string1 = "^)GM]y~Z<kb7My:ux_u";
      StrBuilder strBuilder2 = strBuilder0.replaceAll("^)GM]y~Z<kb7My:ux_u", "^)GM]y~Z<kb7My:ux_u");
      // Undeclared exception!
      try { 
        strBuilder1.insert((-1), false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.indexOf("H{", (-1966));
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1044);
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset();
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Iterator) strTokenizer0, ";0+_EXj{");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 44);
      String string0 = strBuilder2.getNullText();
      StrBuilder strBuilder3 = new StrBuilder("");
      StrBuilder strBuilder4 = strBuilder2.append(strBuilder3);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(707);
      String string0 = strBuilder0.getNullText();
      boolean boolean0 = strBuilder0.contains("@A0");
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = new StrBuilder((String) null);
      StrBuilder strBuilder2 = strBuilder1.append((-1.0));
      StrBuilder strBuilder3 = strBuilder2.deleteAll("line.separator");
      char char0 = 'U';
      StrBuilder strBuilder4 = strBuilder1.insert(0, 'U');
      StrBuilder strBuilder5 = strBuilder4.append((String) null);
      StrBuilder strBuilder6 = strBuilder0.deleteAll((String) null);
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      int int0 = 4758;
      // Undeclared exception!
      try { 
        strBuilder0.insert(4758, false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 4758
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StringBuffer stringBuffer0 = new StringBuffer();
      StringBuffer stringBuffer1 = stringBuffer0.append('u');
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder2 = strBuilder0.insert(0, (long) 0);
      StrBuilder strBuilder3 = strBuilder0.appendPadding(0, ',');
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2763));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      char[] charArray0 = new char[5];
      charArray0[0] = 'h';
      charArray0[1] = 'X';
      charArray0[2] = '$';
      charArray0[3] = 'E';
      charArray0[4] = '8';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder((-1465));
      boolean boolean0 = strBuilder0.equals(strBuilder1);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("m~kx");
      String string0 = strBuilder0.substring(0, 0);
      StrBuilder strBuilder1 = strBuilder0.append(1);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip((-1239L));
      StrBuilder strBuilder2 = strBuilder0.replaceAll('\"', 'w');
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      // Undeclared exception!
      try { 
        linkedList0.remove(1);
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      float float0 = (-2662.6F);
      StrBuilder strBuilder1 = strBuilder0.append((-2662.6F));
      StrBuilder strBuilder2 = strBuilder0.append((StrBuilder) null);
      int int0 = 0;
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadLeft(0, 0, 'F');
      StrBuilder strBuilder4 = strBuilder2.deleteFirst('3');
      StrBuilder strBuilder5 = strBuilder4.append('3');
      // Undeclared exception!
      try { 
        strBuilder5.deleteCharAt((-2473));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2473
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = null;
      StrBuilder strBuilder2 = strBuilder0.append((StrBuilder) null);
      Object[] objectArray0 = new Object[2];
      int int0 = (-1382);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1382), (long) (-1382));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1382
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      int int0 = 3676;
      StrBuilder strBuilder0 = new StrBuilder(3676);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrBuilder strBuilder1 = strBuilder0.append((float) 3676);
      String string0 = strBuilder1.rightString(115);
      // Undeclared exception!
      try { 
        strBuilder1.insert((-420), false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -420
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.setNewLineText((String) null);
      StrBuilder strBuilder2 = strBuilder1.append((String) null, 2, 0);
      int int0 = strBuilder0.indexOf('d', (-3028));
      String string0 = strBuilder0.rightString((-2203));
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      StrBuilder strBuilder3 = strBuilder0.replaceAll(strMatcher0, "java.awt.fonts");
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      String string0 = "K$sRr[f]80-0!xaQb%";
      StrBuilder strBuilder0 = new StrBuilder("K$sRr[f]80-0!xaQb%");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[1];
      int int0 = 1;
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "K$sRr[f]80-0!xaQb%", 1, 1);
      int int1 = strBuilder_StrBuilderReader0.read(charBuffer0);
      strBuilder_StrBuilderReader0.reset();
      charArray0[0] = '&';
      int int2 = strBuilder_StrBuilderReader0.read(charArray0);
      strBuilder_StrBuilderReader0.close();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.set(strBuilder_StrBuilderReader0);
      } catch(UnsupportedOperationException e) {
         //
         // set() is unsupported
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      char[] charArray0 = new char[6];
      charArray0[0] = '\\';
      charArray0[1] = 'p';
      charArray0[2] = 'l';
      charArray0[3] = ',';
      charArray0[4] = 'D';
      charArray0[5] = '0';
      strBuilder0.buffer = charArray0;
      StrBuilder strBuilder1 = strBuilder0.deleteAll("8PkZcnDt{9");
      StrBuilder strBuilder2 = strBuilder1.append('l');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
      StrBuilder strBuilder3 = strBuilder0.append((Object) strBuilder_StrBuilderReader0);
      StrTokenizer strTokenizer0 = strBuilder1.asTokenizer();
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(97);
      String string0 = strBuilder0.substring(0);
      StrBuilder strBuilder2 = strBuilder0.reverse();
      char[] charArray0 = new char[4];
      charArray0[0] = ')';
      charArray0[1] = 'B';
      charArray0[2] = 'r';
      charArray0[3] = 'v';
      StrBuilder strBuilder3 = strBuilder1.insert(0, charArray0);
      int int0 = 0;
      int int1 = strBuilder3.validateRange(0, 97);
      int int2 = strBuilder0.capacity();
      int int3 = strBuilder0.size();
      StrBuilder strBuilder4 = strBuilder0.append((float) 0);
      int int4 = 0;
      // Undeclared exception!
      try { 
        strBuilder1.replace(0, (-1597), "97");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-803));
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      char char0 = '(';
      StrMatcher strMatcher1 = StrMatcher.charMatcher('(');
      int int0 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.replace(strMatcher0, "G3/'dWenm", (-803), (-803), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -803
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2678));
      boolean boolean0 = strBuilder0.contains((StrMatcher) null);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.startsWith("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("startIndex must be valid");
      char[] charArray0 = new char[8];
      charArray0[0] = 'P';
      charArray0[1] = 'g';
      charArray0[2] = '4';
      charArray0[3] = 'h';
      charArray0[4] = 'b';
      charArray0[5] = '2';
      charArray0[6] = '/';
      charArray0[7] = 'V';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 5155, 2478);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 2478
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      String string0 = "+K\"5oyqlJ9@:iv`Fd";
      StrBuilder strBuilder0 = new StrBuilder("+K\"5oyqlJ9@:iv`Fd");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, (-1890), 282);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setNullText("");
      String string0 = "";
      StrBuilder strBuilder2 = strBuilder0.replaceAll("", "");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(0);
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      boolean boolean1 = strBuilder_StrBuilderReader0.markSupported();
      int int0 = 430;
      // Undeclared exception!
      try { 
        strBuilder0.insert(430, 1600L);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 430
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(".k6o[");
      double double0 = (-347.098395098);
      StrBuilder strBuilder1 = strBuilder0.append((-347.098395098));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      int int1 = 0;
      char[] charArray0 = new char[7];
      charArray0[0] = '.';
      charArray0[1] = 'E';
      charArray0[2] = ']';
      charArray0[3] = '{';
      charArray0[4] = 'Z';
      charArray0[5] = 'k';
      charArray0[6] = '~';
      // Undeclared exception!
      try { 
        strBuilder1.insert(0, charArray0, 46, 46);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: 46
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(548);
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      int int0 = strBuilder0.lastIndexOf('2', 433);
      // Undeclared exception!
      try { 
        strBuilder0.insert(117, false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 117
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1297));
      String string0 = strBuilder0.midString(2317, 2317);
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) "";
      strBuilder0.size = 2317;
      objectArray0[2] = (Object) "";
      objectArray0[3] = (Object) strBuilder0;
      objectArray0[4] = (Object) "";
      // Undeclared exception!
      try { 
        strBuilder0.appendWithSeparators(objectArray0, "");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = null;
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      int int1 = 0;
      strBuilder0.buffer = null;
      StrBuilder strBuilder2 = strBuilder0.append((char[]) null, 0, 39);
      // Undeclared exception!
      try { 
        strBuilder0.trim();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("s~(AN7t");
      String string0 = strBuilder1.midString(39, (-2948));
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher((char[]) null);
      StrBuilder strBuilder2 = strBuilder0.minimizeCapacity();
      int int0 = strMatcher0.isMatch((char[]) null, (-360), (-2948), (-2948));
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      StrBuilder strBuilder3 = strBuilder1.deleteFirst(strMatcher0);
      Reader reader0 = strBuilder0.asReader();
      String string1 = strBuilder3.substring(0);
      StringBuffer stringBuffer0 = strBuilder2.toStringBuffer();
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      String string0 = "java.runtime.version";
      StrBuilder strBuilder0 = new StrBuilder("java.runtime.version");
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst((StrMatcher) strMatcher_NoMatcher0);
      boolean boolean0 = strBuilder0.contains('{');
      char[] charArray0 = new char[9];
      charArray0[0] = '{';
      charArray0[1] = '{';
      charArray0[2] = '{';
      charArray0[3] = 'D';
      charArray0[4] = '{';
      charArray0[5] = '{';
      charArray0[6] = '{';
      charArray0[7] = '{';
      charArray0[8] = '{';
      strBuilder1.buffer = charArray0;
      int int0 = (-123);
      int int1 = strBuilder1.indexOf('{', (-123));
      // Undeclared exception!
      try { 
        strBuilder1.append(strBuilder0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.indexOf(' ', 2308);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((-1));
      StrBuilder strBuilder1 = strBuilder0.deleteFirst((StrMatcher) null);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.append(0);
      StrBuilder strBuilder2 = strBuilder1.append(strBuilder0);
      StrBuilder strBuilder3 = strBuilder2.clear();
      StrBuilder strBuilder4 = strBuilder1.append("");
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      String string0 = strBuilder0.getNewLineText();
      // Undeclared exception!
      try { 
        strBuilder0.insert(327, (float) 327);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 327
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("O#Vp{?X6&4e(12-y>Ob");
      char char0 = 'M';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(498, 498, 'M');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      char[] charArray0 = new char[7];
      charArray0[0] = 'M';
      charArray0[1] = 'M';
      charArray0[2] = 'M';
      charArray0[3] = 'M';
      charArray0[4] = 'M';
      charArray0[5] = 'M';
      charArray0[6] = 'M';
      strBuilder1.buffer = charArray0;
      StringBuffer stringBuffer0 = new StringBuffer(498);
      StrBuilder strBuilder2 = strBuilder0.append(stringBuffer0);
      // Undeclared exception!
      try { 
        strBuilder1.insert(498, (float) 498);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      int int1 = (-1189);
      int int2 = 0;
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("");
      // Undeclared exception!
      try { 
        strBuilder0.append("java.endorsed.dirs", (-1189), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      int int0 = (-1619);
      StrBuilder strBuilder0 = new StrBuilder((-1619));
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      String string0 = "_w6@2VmXkpBf`3";
      int int1 = strBuilder0.lastIndexOf("_w6@2VmXkpBf`3");
      int int2 = strBuilder0.indexOf(strMatcher0);
      int int3 = 57;
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) "_w6@2VmXkpBf`3", 57, 'V');
      char char0 = '3';
      StrMatcher strMatcher1 = StrMatcher.charMatcher('3');
      int int4 = strBuilder0.hashCode();
      char char1 = 'n';
      StrBuilder strBuilder2 = strBuilder0.appendPadding((-1619), 'n');
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1619), (Object) strMatcher0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1619
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      int int0 = strBuilder0.hashCode();
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 4;
      int int1 = 0;
      char[] charArray0 = new char[3];
      charArray0[0] = 'E';
      char char0 = 'p';
      int int2 = Integer.MAX_VALUE;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      // Undeclared exception!
      try { 
        strBuilder0.insert(Integer.MAX_VALUE, object0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2147483647
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.size();
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("vHwqp70-&W6^pr#8IZG");
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "vHwqp70-&W6^pr#8IZG");
      StringBuffer stringBuffer0 = new StringBuffer("vHwqp70-&W6^pr#8IZG");
      // Undeclared exception!
      try { 
        strBuilder1.append(stringBuffer0, 1, 34);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[7];
      charArray0[0] = '}';
      charArray0[1] = 'n';
      charArray0[2] = 'Z';
      charArray0[3] = '%';
      charArray0[4] = '\\';
      charArray0[5] = 'z';
      charArray0[6] = 'P';
      StrBuilder strBuilder1 = strBuilder0.insert(0, charArray0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.append(0.0);
      boolean boolean0 = strBuilder0.contains("");
      char[] charArray0 = new char[9];
      charArray0[0] = '+';
      charArray0[1] = 'R';
      charArray0[2] = 'c';
      charArray0[3] = '0';
      charArray0[4] = 'y';
      charArray0[5] = '$';
      charArray0[6] = '`';
      charArray0[7] = '8';
      charArray0[8] = 'C';
      char[] charArray1 = strBuilder0.getChars(charArray0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-1957);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1957), ' ');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1957
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.append((-2662.6F));
      StrBuilder strBuilder2 = strBuilder0.append((StrBuilder) null);
      StrBuilder strBuilder3 = strBuilder2.deleteFirst('3');
      StrBuilder strBuilder4 = strBuilder3.append('3');
      Writer writer0 = strBuilder1.asWriter();
      boolean boolean0 = strBuilder1.contains("");
      StrBuilder strBuilder5 = strBuilder0.append((double) (-2662.6F));
      int int0 = strBuilder0.indexOf('G');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder2.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      String string0 = "jnGN[Ctt2hel}7";
      StrBuilder strBuilder0 = new StrBuilder("jnGN[Ctt2hel}7");
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((-1), 2, '`');
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "jnGN[Ctt2hel}7");
      // Undeclared exception!
      try { 
        stringBuffer0.insert((-1), (-3094.799699312));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-793));
      char[] charArray0 = new char[0];
      char[] charArray1 = strBuilder0.getChars(charArray0);
      char[] charArray2 = strBuilder0.toCharArray();
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst((StrMatcher) strMatcher_TrimMatcher0, "1?YA38p");
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.delete(0, 0);
      StrBuilder strBuilder2 = strBuilder1.insert(0, 0);
      StrBuilder strBuilder3 = strBuilder0.ensureCapacity(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher((String) null);
      int int0 = strBuilder3.indexOf(strMatcher0, 0);
      Writer writer0 = strBuilder3.asWriter();
      StrTokenizer strTokenizer0 = strBuilder3.asTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      boolean boolean0 = strBuilder3.equals(object0);
      StrBuilder strBuilder4 = strBuilder3.append(false);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[1];
      charArray0[0] = '{';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 57, 0);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = (-1794);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) "", (-1794), 'n');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      int int1 = strBuilder1.indexOf(strMatcher0, (-1794));
      int int2 = (-752);
      int int3 = 4974;
      char[] charArray0 = new char[2];
      charArray0[0] = 'n';
      charArray0[1] = 'n';
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1794), charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1794
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("uNN65ZG+VkRE\"1");
      StrBuilder strBuilder1 = strBuilder0.append(true);
      StrBuilder strBuilder2 = strBuilder0.insert(0, 0);
      int int0 = (-2265);
      // Undeclared exception!
      try { 
        strBuilder0.replace((-2265), 97, "uNN65ZG+VkRE\"1");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2265
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      int int0 = 1;
      StrBuilder strBuilder0 = new StrBuilder(1);
      StringBuffer stringBuffer0 = new StringBuffer();
      StringBuffer stringBuffer1 = new StringBuffer(stringBuffer0);
      int int1 = 57;
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer1, 1, 57);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Reader reader0 = strBuilder0.asReader();
      int int0 = 0;
      StrBuilder strBuilder1 = new StrBuilder(0);
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      int int1 = 1194;
      strBuilder2.size = 1194;
      int int2 = (-1083);
      // Undeclared exception!
      try { 
        strBuilder2.substring((-1083));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1083
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("c:Oe3TW7");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("");
      boolean boolean0 = strBuilder1.isEmpty();
      int int0 = strBuilder0.length();
      boolean boolean1 = true;
      StrBuilder strBuilder2 = strBuilder1.replaceFirst((String) null, (String) null);
      // Undeclared exception!
      try { 
        strBuilder0.insert(9, 48L);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 9
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(1551);
      String string0 = strBuilder0.toString();
      StrBuilder strBuilder2 = new StrBuilder(1551);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      char[] charArray0 = new char[6];
      charArray0[0] = '\"';
      charArray0[1] = 'k';
      charArray0[2] = 'P';
      charArray0[3] = 'l';
      charArray0[4] = 'b';
      charArray0[5] = 'T';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 1551, 1551);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(27);
      StrBuilder strBuilder1 = new StrBuilder(27);
      boolean boolean0 = strBuilder0.equals(strBuilder1);
      int int0 = strBuilder0.indexOf((String) null);
      StrBuilder strBuilder2 = strBuilder1.replaceFirst('v', 'f');
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      int int1 = strBuilder2.indexOf(strMatcher0, (-4982));
      boolean boolean1 = strBuilder1.equalsIgnoreCase(strBuilder0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3508);
      char[] charArray0 = new char[1];
      charArray0[0] = 'b';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      int int1 = strBuilder0.lastIndexOf("51Q`BtWd.xuS");
      StringBuffer stringBuffer0 = new StringBuffer(0);
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 1351, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder2 = strBuilder0.ensureCapacity(0);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      IntStream intStream0 = stringBuffer0.chars();
      boolean boolean0 = strBuilder0.contains('R');
      StrBuilder strBuilder3 = strBuilder2.replace(0, 0, "");
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, (-1238), (-1238));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("e|nvD");
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("e|nvD");
      char char0 = '_';
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) strBuilder1;
      objectArray0[1] = (Object) strTokenizer0;
      objectArray0[2] = (Object) strBuilder0;
      objectArray0[3] = (Object) strBuilder1;
      objectArray0[4] = (Object) strBuilder1;
      objectArray0[5] = (Object) strTokenizer0;
      objectArray0[6] = (Object) "e|nvD";
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators(objectArray0, "e|nvD");
      String string0 = strBuilder2.toString();
      int int0 = 1089;
      // Undeclared exception!
      try { 
        strBuilder2.validateRange(1089, 1089);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3640);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      char[] charArray0 = new char[7];
      charArray0[0] = 't';
      charArray0[1] = 's';
      charArray0[2] = '*';
      charArray0[3] = 'f';
      charArray0[4] = '(';
      charArray0[5] = '/';
      charArray0[6] = 'M';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 3640, (-3217));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -3217
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[6];
      charArray0[0] = 'L';
      charArray0[1] = ']';
      charArray0[2] = 'z';
      charArray0[3] = '\\';
      charArray0[4] = 'D';
      charArray0[5] = '}';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 245, 245);
      int int0 = strBuilder0.size();
      StrBuilder strBuilder1 = new StrBuilder(0);
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = "Invalid length: ";
      StrBuilder strBuilder1 = strBuilder0.insert(0, "Invalid length: ");
      char[] charArray0 = new char[2];
      charArray0[0] = '?';
      Object[] objectArray0 = new Object[4];
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.previous();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.substring(0, 0);
      boolean boolean0 = strBuilder0.contains(')');
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('6', '_');
      strBuilder1.size = 0;
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("[8k{^;;R_QFjmd5>");
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("[8k{^;;R_QFjmd5>");
      char[] charArray0 = new char[9];
      charArray0[0] = '$';
      charArray0[1] = ')';
      charArray0[2] = '_';
      charArray0[3] = '_';
      charArray0[4] = '_';
      charArray0[5] = ')';
      charArray0[6] = '_';
      charArray0[7] = '6';
      charArray0[8] = ')';
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder2 = strBuilder1.replaceFirst(strMatcher0, ">r%i~P4.UE");
      StrBuilder strBuilder3 = strBuilder1.append("[8k{^;;R_QFjmd5>", 0, 0);
      strBuilder0.validateIndex(0);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) null, "]L))-;(Y_W;bVL'<.");
      // Undeclared exception!
      try { 
        strBuilder1.insert(687, true);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 687
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("D");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) "D", (-114), 't');
      StrBuilder strBuilder2 = strBuilder1.replaceFirst('w', 'k');
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(0, 115, '(');
      int int0 = strBuilder0.lastIndexOf('l', 2875);
      boolean boolean0 = strBuilder0.contains('l');
      char[] charArray0 = new char[2];
      charArray0[0] = 'l';
      charArray0[1] = '(';
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance(charArray0);
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Iterator) strTokenizer0, "");
      String string0 = strBuilder1.midString(93, 2875);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      boolean boolean1 = linkedList0.add((Object) "lang.String@0000000002java.lang.String@0000000004");
      StrBuilder strBuilder3 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
      StringBuffer stringBuffer0 = new StringBuffer(115);
      StrBuilder strBuilder4 = strBuilder3.append(stringBuffer0);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.nextToken();
      StringBuffer stringBuffer0 = null;
      try {
        stringBuffer0 = new StringBuffer((CharSequence) null);
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = strBuilder0.toString();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StrBuilder strBuilder1 = strBuilder0.appendPadding(177, 'P');
      StrBuilder strBuilder2 = strBuilder0.append((StringBuffer) null);
      StrBuilder strBuilder3 = strBuilder2.append((float) 177);
      char[] charArray0 = new char[5];
      charArray0[0] = 'P';
      charArray0[1] = 'P';
      charArray0[2] = 'P';
      charArray0[3] = 'P';
      charArray0[4] = 'P';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder3.indexOf(strMatcher0);
      char[] charArray1 = new char[2];
      charArray1[0] = 'P';
      charArray1[1] = '[';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray1, 0, 177);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[5];
      strBuilder0.validateIndex(0);
      charArray0[0] = 'w';
      charArray0[1] = '\'';
      charArray0[2] = '^';
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      charArray0[3] = 'h';
      charArray0[4] = 'A';
      strBuilder0.buffer = charArray0;
      Writer writer0 = strBuilder0.asWriter();
      boolean boolean0 = strBuilder0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = new StrBuilder("org.apache.commons.lang.SystemUtils");
      char[] charArray0 = new char[1];
      StrBuilder strBuilder2 = strBuilder0.setNewLineText("^|z2>#em\"xvU1i");
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrBuilder strBuilder3 = strBuilder2.deleteAll(strMatcher0);
      StrTokenizer strTokenizer0 = strBuilder3.asTokenizer();
      charArray0[0] = 'x';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      boolean boolean0 = strBuilder1.contains((StrMatcher) strMatcher_CharSetMatcher0);
      boolean boolean1 = strBuilder0.equalsIgnoreCase(strBuilder1);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(97);
      int int0 = strBuilder0.length();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(0);
      long long1 = strBuilder_StrBuilderReader0.skip(0);
      char[] charArray0 = new char[2];
      int int1 = strBuilder_StrBuilderReader0.read(charArray0);
      charArray0[0] = 'K';
      charArray0[1] = '2';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      int int2 = strBuilder_StrBuilderReader0.read();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder2 = strBuilder1.appendNull();
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      int int3 = strBuilder0.lastIndexOf(strMatcher0);
      boolean boolean0 = strBuilder1.equals(strBuilder2);
      LinkedList<StrBuilder> linkedList0 = new LinkedList<StrBuilder>();
      StrBuilder strBuilder3 = strBuilder1.appendWithSeparators((Collection) linkedList0, "Z6C5#`_@:");
      boolean boolean1 = strBuilder3.contains("Z6C5#`_@:");
      String string0 = strBuilder3.leftString((-1));
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1), charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrMatcher strMatcher0 = StrMatcher.stringMatcher((String) null);
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 170);
      String string0 = strBuilder0.leftString((-1183));
      // Undeclared exception!
      try { 
        strBuilder0.equals((StrBuilder) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 680;
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(680, 'u');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 680
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(0, 'u');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("i%");
      StrBuilder strBuilder1 = strBuilder0.setCharAt(0, '*');
      StrBuilder strBuilder2 = strBuilder1.trim();
      StrBuilder strBuilder3 = strBuilder2.insert(0, (-1));
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      int int0 = 155;
      StrBuilder strBuilder0 = new StrBuilder(155);
      boolean boolean0 = strBuilder0.isEmpty();
      // Undeclared exception!
      try { 
        strBuilder0.insert(155, (long) 155);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 155
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("set() is unsupported");
      char[] charArray0 = new char[3];
      charArray0[0] = 'a';
      charArray0[1] = 'f';
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "java.class.path");
      charArray0[2] = 'q';
      // Undeclared exception!
      try { 
        strBuilder0.insert(464, charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 464
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt((-120), '[');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -120
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      int int0 = (-3623);
      StrBuilder strBuilder0 = new StrBuilder((-3623));
      StrBuilder strBuilder1 = strBuilder0.append((Object) null);
      char[] charArray0 = new char[8];
      charArray0[0] = 'D';
      charArray0[1] = '7';
      StrBuilder strBuilder2 = strBuilder1.deleteFirst('[');
      charArray0[2] = 'k';
      charArray0[3] = 'A';
      char char0 = '9';
      // Undeclared exception!
      try { 
        strBuilder1.toCharArray(926, 3);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = new StrBuilder();
      int int0 = Integer.MAX_VALUE;
      char[] charArray0 = strBuilder0.toCharArray(0, Integer.MAX_VALUE);
      StrBuilder strBuilder2 = strBuilder1.setNullText("W-Du00o ");
      StrBuilder strBuilder3 = strBuilder1.appendNull();
      String string0 = "length must be valid";
      StrBuilder strBuilder4 = strBuilder2.append("length must be valid");
      // Undeclared exception!
      try { 
        strBuilder4.insert(2258, charArray0, 2258, 102);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2258
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(5);
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher1 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      StrBuilder strBuilder2 = strBuilder1.replaceFirst(strMatcher1, (String) null);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[1];
      charArray0[0] = 'T';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 5, (-2177));
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      int int0 = 965;
      StrBuilder strBuilder0 = new StrBuilder(965);
      StrBuilder strBuilder1 = new StrBuilder((-3268));
      int int1 = (-1851);
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, (-1851), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StringBuffer stringBuffer0 = new StringBuffer(0);
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0, 0, 0);
      boolean boolean0 = strBuilder0.contains('>');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      char[] charArray0 = new char[7];
      charArray0[0] = '>';
      charArray0[1] = '>';
      charArray0[2] = '>';
      charArray0[3] = '>';
      charArray0[4] = '>';
      charArray0[5] = '>';
      charArray0[6] = 'c';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0);
      boolean boolean1 = strBuilder_StrBuilderReader0.markSupported();
      // Undeclared exception!
      try { 
        strBuilder1.append("s1c/d6", 0, 5174);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.lastIndexOf((StrMatcher) null);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("6(jXc");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("!!^'+T'4");
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(false);
      char[] charArray0 = new char[4];
      charArray0[0] = 'q';
      charArray0[1] = ';';
      charArray0[2] = '@';
      charArray0[3] = ',';
      strBuilder1.buffer = charArray0;
      StrBuilder strBuilder2 = strBuilder0.replaceFirst("", "");
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1928));
      StrBuilder strBuilder1 = strBuilder0.append('S');
      int int0 = strBuilder0.length();
      // Undeclared exception!
      try { 
        strBuilder1.delete(108, 1);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.append((Object) "");
      StrBuilder strBuilder2 = strBuilder1.replaceFirst("", "");
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      // Undeclared exception!
      try { 
        strBuilder0.equals((StrBuilder) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Object[]) null, ";YjA*ErHMXGH:e");
      StrBuilder strBuilder3 = strBuilder2.insert(0, 718L);
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(";YjA*ErHMXGH:e");
      StrBuilder strBuilder4 = strBuilder0.deleteAll((StrMatcher) strMatcher_TrimMatcher0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(";YjA*ErHMXGH:e");
      StrBuilder strBuilder5 = strBuilder3.append(strBuilder2, 0, 0);
      // Undeclared exception!
      try { 
        strBuilder3.substring(0, (-3298));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("<&Sftz&=p&");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("<&Sftz&=p&", "<&Sftz&=p&");
      StringBuffer stringBuffer0 = strBuilder1.toStringBuffer();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(99);
      int int0 = strBuilder0.indexOf('g');
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      int int0 = (-1318);
      StrBuilder strBuilder1 = strBuilder0.replace(strMatcher0, "", 0, 0, (-1318));
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder2 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder3 = strBuilder0.deleteAll("");
      char[] charArray0 = null;
      // Undeclared exception!
      try { 
        strBuilder1.insert((-1318), (char[]) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1318
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 2;
      char[] charArray0 = new char[9];
      charArray0[0] = '8';
      charArray0[1] = '7';
      charArray0[2] = '/';
      charArray0[3] = 'F';
      charArray0[4] = '>';
      charArray0[5] = 'g';
      charArray0[6] = '{';
      charArray0[7] = '-';
      charArray0[8] = '1';
      strBuilder0.buffer = charArray0;
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadLeft((Object) null, 2, '-');
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "MZQIN\\uN'{JDZ+y";
      boolean boolean0 = strBuilder0.endsWith(string0);
      StrBuilder strBuilder1 = strBuilder0.append(')');
      // Undeclared exception!
      try { 
        strBuilder1.insert(2, (long) 2);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      int int0 = 0;
      StrBuilder strBuilder0 = new StrBuilder(0);
      int int1 = 5007;
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(5007);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 5007
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      String string0 = null;
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher((String) null);
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, (String) null);
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher((String) null);
      int int0 = 116;
      // Undeclared exception!
      try { 
        strBuilder0.insert(116, (float) 116);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 116
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      int int0 = (-217);
      StrBuilder strBuilder0 = new StrBuilder((-217));
      // Undeclared exception!
      try { 
        strBuilder0.insert((-217), (-1073));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -217
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('\\');
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("");
      StrBuilder strBuilder1 = strBuilder0.replace((StrMatcher) strMatcher_CharMatcher0, "1#{yrJL^D", 0, 0, 0);
      int int0 = strBuilder1.validateRange(0, 0);
      StrMatcher strMatcher1 = StrMatcher.quoteMatcher();
      char[] charArray0 = new char[0];
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher(charArray0);
      int int1 = strBuilder0.indexOf(strMatcher1);
      StrMatcher strMatcher3 = StrMatcher.stringMatcher((String) null);
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) strMatcher1;
      objectArray0[1] = (Object) strBuilder1;
      objectArray0[2] = (Object) strMatcher_CharMatcher0;
      objectArray0[3] = (Object) "1#{yrJL^D";
      objectArray0[4] = (Object) "";
      objectArray0[5] = (Object) strBuilder0;
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators(objectArray0, "1#{yrJL^D");
      StrBuilder strBuilder3 = strBuilder1.insert(0, '>');
      // Undeclared exception!
      try { 
        strBuilder3.appendFixedWidthPadLeft((Object) null, 114, 'R');
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.endsWith("Invalid offset: ");
      // Undeclared exception!
      try { 
        strBuilder0.substring((-2690));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2690
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.endsWith("");
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(4);
      // Undeclared exception!
      try { 
        strBuilder0.insert(4, (-2450L));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 4
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("1f.(");
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(2308);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2308
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0);
      int int1 = strBuilder0.indexOf('O', (-1));
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("1.5");
      StrBuilder strBuilder1 = strBuilder0.append((Object) "1.5");
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((Object) "1.5", 963, '3');
      char[] charArray0 = new char[0];
      StrBuilder strBuilder3 = strBuilder2.append(charArray0);
      char[] charArray1 = new char[3];
      charArray1[0] = '3';
      charArray1[1] = '3';
      charArray1[2] = '3';
      StrBuilder strBuilder4 = strBuilder3.append(charArray1);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      boolean boolean0 = strBuilder4.equalsIgnoreCase(strBuilder1);
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      String string0 = "java.io.tmpdir";
      StrBuilder strBuilder0 = new StrBuilder("java.io.tmpdir");
      int int0 = (-1);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) "java.io.tmpdir", (-1), '[');
      StrBuilder strBuilder2 = strBuilder1.append((Object) "");
      char[] charArray0 = new char[8];
      charArray0[0] = '[';
      charArray0[1] = '[';
      charArray0[2] = '[';
      charArray0[3] = '[';
      charArray0[4] = '[';
      charArray0[5] = '[';
      charArray0[6] = '[';
      charArray0[7] = '[';
      strBuilder0.buffer = charArray0;
      StrBuilder strBuilder3 = strBuilder0.ensureCapacity((-1));
      StrBuilder strBuilder4 = strBuilder0.clear();
      StrBuilder strBuilder5 = strBuilder4.appendNewLine();
      StrBuilder strBuilder6 = strBuilder0.minimizeCapacity();
      int int1 = 558;
      StrBuilder strBuilder7 = strBuilder6.appendFixedWidthPadLeft((-895), 558, '[');
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('[');
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher(strBuilder0.buffer);
      StrBuilder strBuilder8 = strBuilder6.deleteAll(strMatcher0);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1), charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1173));
      StrBuilder strBuilder1 = strBuilder0.append("8hZ'z_]l#Y!1b%lJ");
      StrBuilder strBuilder2 = strBuilder0.append(0L);
      StrBuilder strBuilder3 = strBuilder1.setNullText(">]e'hmWOukme+Ra~");
      StrBuilder strBuilder4 = strBuilder1.append((long) (-1173));
      StrBuilder strBuilder5 = strBuilder4.clear();
      boolean boolean0 = strBuilder0.equals(strBuilder1);
      boolean boolean1 = strBuilder0.contains("8hZ'z_]l#Y!1b%lJ");
      StrBuilder strBuilder6 = strBuilder4.appendFixedWidthPadRight((Object) strBuilder0, (-1173), '6');
      StrBuilder strBuilder7 = strBuilder1.append("8hZ'z_]l#Y!1b%lJ");
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      int int0 = 702;
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex(975);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 975
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.equals((Object) null);
      int int0 = 693;
      // Undeclared exception!
      try { 
        strBuilder0.charAt(693);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 693
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("j*BTUOVQe|oQ&L");
      StrBuilder strBuilder1 = strBuilder0.insert(4, 4);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrBuilder strBuilder2 = strBuilder1.replaceFirst(strMatcher0, "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      int int0 = strBuilder2.validateRange(4, 351);
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      String string0 = strBuilder0.getNewLineText();
      StrBuilder strBuilder1 = strBuilder0.append(0.0);
      StrBuilder strBuilder2 = strBuilder1.deleteAll("");
      StrBuilder strBuilder3 = strBuilder1.append((-1255.0F));
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher(" i");
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 44);
      StrBuilder strBuilder4 = strBuilder3.appendFixedWidthPadLeft(585, 585, '7');
      boolean boolean0 = strBuilder2.startsWith(" i");
      Object object0 = new Object();
      boolean boolean1 = strBuilder0.equals(object0);
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(0.0F);
      StrBuilder strBuilder2 = strBuilder0.deleteFirst("%Z;");
      // Undeclared exception!
      try { 
        strBuilder0.charAt(3210);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3210
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(0, 0, 'E');
      StrBuilder strBuilder2 = strBuilder1.setNullText("$.i-EM>aSC]SpRZ");
      StrBuilder strBuilder3 = strBuilder0.setNewLineText("]^h");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[2];
      charArray0[0] = 'E';
      charArray0[1] = 'E';
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset(charArray0);
      StrBuilder strBuilder4 = strBuilder3.appendWithSeparators((Iterator) strTokenizer0, "$.i-EM>aSC]SpRZ");
      StrBuilder strBuilder5 = strBuilder0.clear();
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      char[] charArray0 = new char[3];
      charArray0[0] = 'p';
      charArray0[1] = 'n';
      charArray0[2] = 'w';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.deleteAll((StrMatcher) strMatcher_CharSetMatcher0);
      String string0 = strBuilder0.leftString(571);
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.getNullText();
      String string1 = strBuilder0.leftString(0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) null, "");
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(4826);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(4826, 102, 'C');
      StrBuilder strBuilder2 = strBuilder1.replace(102, 4826, "");
      StrBuilder strBuilder3 = strBuilder1.deleteAll("Windows 9");
      StrBuilder strBuilder4 = strBuilder1.appendNull();
      StrBuilder strBuilder5 = new StrBuilder((-775));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder5.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1296);
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrBuilder strBuilder2 = strBuilder0.append(57);
      StrBuilder strBuilder3 = strBuilder0.appendNewLine();
      boolean boolean0 = strBuilder3.isEmpty();
      StrBuilder strBuilder4 = strBuilder3.appendNull();
      StrBuilder strBuilder5 = strBuilder3.deleteAll('&');
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(101);
      StrBuilder strBuilder1 = strBuilder0.deleteAll('E');
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight(0, 2505, 'c');
      StrBuilder strBuilder3 = strBuilder1.insert(0, (float) 2505);
      StrBuilder strBuilder4 = strBuilder0.append((float) 0);
      StrBuilder strBuilder5 = strBuilder0.insert(0, 2505);
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("5.0");
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder2 = strBuilder1.appendNewLine();
      int int0 = (-1105);
      char[] charArray0 = new char[6];
      charArray0[0] = ';';
      charArray0[1] = '%';
      charArray0[2] = 'k';
      charArray0[3] = 'z';
      charArray0[4] = '+';
      charArray0[5] = 'Q';
      // Undeclared exception!
      try { 
        strBuilder0.getChars((-1105), 0, charArray0, 563);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1105
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("YBe~m");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("", 290, 290);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      String string0 = "end < start";
      StrBuilder strBuilder0 = new StrBuilder("end < start");
      int int0 = strBuilder0.validateRange(0, 4);
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrBuilder strBuilder2 = strBuilder1.clear();
      StrBuilder strBuilder3 = strBuilder0.reverse();
      StrBuilder strBuilder4 = strBuilder3.appendNewLine();
      int int1 = strBuilder2.lastIndexOf('<');
      char[] charArray0 = new char[9];
      charArray0[0] = '<';
      charArray0[1] = '<';
      charArray0[2] = '<';
      charArray0[3] = '<';
      charArray0[4] = '<';
      charArray0[5] = '<';
      charArray0[6] = '<';
      charArray0[7] = '<';
      char char0 = 'd';
      charArray0[8] = 'd';
      // Undeclared exception!
      try { 
        strBuilder2.getChars((-359), 2752, charArray0, 2752);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -359
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder2 = strBuilder0.clear();
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.insert(0, '[');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder1.new StrBuilderWriter();
      char[] charArray0 = new char[7];
      charArray0[0] = '[';
      charArray0[1] = '[';
      charArray0[2] = '[';
      charArray0[3] = '[';
      charArray0[4] = '[';
      charArray0[5] = '[';
      charArray0[6] = '[';
      strBuilder_StrBuilderWriter0.write(charArray0);
      boolean boolean0 = strBuilder1.equalsIgnoreCase(strBuilder0);
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("1.5");
      StrBuilder strBuilder1 = strBuilder0.append((Object) "1.5");
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((Object) "1.5", 963, '3');
      char[] charArray0 = new char[0];
      StrBuilder strBuilder3 = strBuilder2.append(charArray0);
      String string0 = strBuilder0.toString();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string1 = strBuilder_StrBuilderTokenizer0.getContent();
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((char[]) null);
      // Undeclared exception!
      try { 
        strBuilder0.getChars(1, 1, (char[]) null, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.append("", (-4406), (-4406));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append("+oqeOHHt*+", 0, 0);
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("&WYzIstyC\"$hUR*tO");
      StrBuilder strBuilder1 = strBuilder0.append(0.0);
      char[] charArray0 = new char[5];
      charArray0[0] = 'f';
      charArray0[1] = 'c';
      charArray0[2] = 'D';
      charArray0[3] = 'f';
      charArray0[4] = 'z';
      // Undeclared exception!
      try { 
        strBuilder1.insert(0, charArray0, 0, (-1595));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: -1595
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[1];
      charArray0[0] = '5';
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1030), charArray0, (-1030), 1870);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1030
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      int int0 = 1;
      StrBuilder strBuilder0 = new StrBuilder(1);
      StrBuilder strBuilder1 = strBuilder0.append(4457.1286);
      int int1 = 2255;
      // Undeclared exception!
      try { 
        strBuilder0.insert(2255, (double) 2255);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2255
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(object0, 1320, '}');
      boolean boolean0 = strBuilder_StrBuilderTokenizer0.hasPrevious();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset();
      StrBuilder strBuilder2 = strBuilder0.insert(1320, 1L);
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrBuilder strBuilder3 = strBuilder2.insert(1320, 1035L);
      int int0 = strBuilder2.indexOf(strMatcher0, 1320);
      StrBuilder strBuilder4 = strBuilder2.insert(1320, (char[]) null);
      String string0 = strBuilder1.midString(1320, 2218);
      int int1 = strBuilder1.length();
      StrMatcher strMatcher1 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrBuilder strBuilder5 = strBuilder1.deleteAll(strMatcher1);
      StrBuilder strBuilder6 = strBuilder1.appendFixedWidthPadLeft((-1956), 1320, 'y');
      int int2 = strBuilder5.indexOf('M', 1325);
      int int3 = strBuilder0.lastIndexOf("10351");
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = null;
      int int0 = (-1021);
      int int1 = 4;
      StrBuilder strBuilder1 = strBuilder0.append((String) null, (-1021), 4);
      Writer writer0 = strBuilder1.asWriter();
      StrBuilder strBuilder2 = strBuilder0.trim();
      StrBuilder strBuilder3 = strBuilder2.appendNewLine();
      char[] charArray0 = new char[0];
      StrBuilder strBuilder4 = strBuilder3.trim();
      StringBuffer stringBuffer0 = null;
      try {
        stringBuffer0 = new StringBuffer((-3870));
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      String string0 = "<ytHO{B)";
      StrBuilder strBuilder0 = new StrBuilder("<ytHO{B)");
      StrBuilder strBuilder1 = strBuilder0.append("<ytHO{B)", 0, 0);
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((Object) "<ytHO{B)", 0, 'd');
      StringBuffer stringBuffer0 = new StringBuffer('d');
      StrBuilder strBuilder3 = new StrBuilder(0);
      StrBuilder strBuilder4 = strBuilder1.append((double) 0);
      int int0 = strBuilder0.indexOf("<ytHO{B)");
      String string1 = strBuilder1.leftString(1076);
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder0.insert(1076, charArray0, 44, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1076
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      String string0 = "0n}<J-uX-1ae";
      StrBuilder strBuilder0 = new StrBuilder("0n}<J-uX-1ae");
      char[] charArray0 = new char[8];
      charArray0[0] = 'P';
      charArray0[1] = 'E';
      charArray0[2] = '&';
      charArray0[3] = '=';
      charArray0[4] = '\"';
      charArray0[5] = '.';
      charArray0[6] = '&';
      charArray0[7] = 'd';
      int int0 = 31;
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 31, 31);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 31
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(185);
      int int0 = strBuilder0.hashCode();
      StrBuilder strBuilder1 = strBuilder0.append('#');
      char[] charArray0 = new char[2];
      charArray0[0] = '#';
      charArray0[1] = '#';
      strBuilder1.buffer = charArray0;
      StringBuffer stringBuffer0 = new StringBuffer();
      char[] charArray1 = new char[5];
      charArray1[0] = '#';
      charArray1[1] = '#';
      charArray1[2] = '#';
      charArray1[3] = '#';
      charArray1[4] = '#';
      StrBuilder strBuilder2 = strBuilder1.clear();
      // Undeclared exception!
      try { 
        stringBuffer0.insert(185, charArray1, 185, 185);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 185
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1674));
      StrBuilder strBuilder1 = new StrBuilder((-1674));
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("X,~)?cG");
      StrBuilder strBuilder1 = strBuilder0.replaceAll("1.6", "X,~)?cG");
      char[] charArray0 = new char[7];
      charArray0[0] = '\"';
      charArray0[1] = '1';
      StrBuilder strBuilder2 = strBuilder0.append(true);
      charArray0[2] = 'Y';
      charArray0[3] = '_';
      charArray0[4] = 'U';
      charArray0[5] = 'S';
      charArray0[6] = ',';
      strBuilder0.getChars(0, 0, charArray0, 0);
      StrBuilder strBuilder3 = strBuilder1.appendFixedWidthPadLeft((Object) "org.apache.commons.lang.text.StrBuilder", (-1535), 'r');
      int int0 = 31;
      // Undeclared exception!
      try { 
        strBuilder0.replace(170, 31, "9no{N");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) strBuilder0;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      int int1 = strBuilder_StrBuilderReader0.read();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((String) null, (-56), 111);
      strBuilder_StrBuilderWriter0.write((String) null);
      strBuilder_StrBuilderWriter0.write("Invalid length: ");
      char[] charArray0 = new char[7];
      charArray0[0] = 'c';
      charArray0[1] = 'B';
      charArray0[2] = 'Q';
      charArray0[3] = 'X';
      charArray0[4] = '+';
      charArray0[5] = '2';
      charArray0[6] = 'v';
      int int2 = strBuilder_StrBuilderReader0.read(charArray0);
      StrBuilder strBuilder2 = strBuilder0.replaceFirst('b', 'u');
      StrBuilder strBuilder3 = strBuilder0.insert(111, (float) (-56));
      long long0 = strBuilder_StrBuilderReader0.skip(114);
  }
}
