* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.math.linear.EigenDecompositionImpl
* Starting client
* Connecting to master process on port 9714
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/patch1-Math-80-Jaid/Math_80_1_jaid/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math.linear.EigenDecompositionImpl
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 853
  - Branch 432
  - Exception 0
  - MutationFactory 216
  - Output 28
  - Method 17
  - MethodNoException 17
  - CBranchFitnessFactory 432
* Using seed 1585481701802
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%][Progress:>                             3%] [Cov:>                                  0%][Progress:>                             3%] [Cov:>                                  1%][Progress:>                             3%] [Cov:====>                              13%][Progress:>                             3%] [Cov:====>                              14%][Progress:=>                            5%] [Cov:>                                  1%][Progress:=>                            5%] [Cov:>                                  2%][Progress:=>                            5%] [Cov:====>                              14%][Progress:=>                            5%] [Cov:=====>                             15%][Progress:=>                            5%] [Cov:=====>                             16%][Progress:=>                            5%] [Cov:=====>                             17%][Progress:===>                          10%] [Cov:=>                                 3%][Progress:===>                          10%] [Cov:==>                                6%][Progress:===>                          10%] [Cov:======>                            19%][Progress:===>                          10%] [Cov:=======>                           22%][Progress:===>                          10%] [Cov:========>                          23%][Progress:===>                          10%] [Cov:========>                          25%][Progress:===>                          11%] [Cov:>                                  0%][Progress:===>                          11%] [Cov:>                                  1%][Progress:===>                          11%] [Cov:====>                              13%][Progress:===>                          11%] [Cov:====>                              14%][Progress:===>                          11%] [Cov:=====>                             16%][Progress:===>                          11%] [Cov:=====>                             17%][Progress:===>                          13%] [Cov:>                                  0%][Progress:===>                          13%] [Cov:====>                              12%][Progress:===>                          13%] [Cov:====>                              13%][Progress:===>                          13%] [Cov:====>                              14%][Progress:=====>                        18%] [Cov:>                                  0%][Progress:======>                       21%] [Cov:>                                  1%][Progress:======>                       21%] [Cov:====>                              13%][Progress:======>                       21%] [Cov:====>                              14%][Progress:======>                       23%] [Cov:>                                  0%][Progress:======>                       23%] [Cov:>                                  1%][Progress:======>                       23%] [Cov:====>                              13%][Progress:======>                       23%] [Cov:====>                              14%][Progress:=======>                      25%] [Cov:=>                                 4%][Progress:=======>                      25%] [Cov:=====>                             16%][Progress:=======>                      25%] [Cov:=====>                             17%][Progress:=======>                      25%] [Cov:======>                            18%][Progress:=======>                      25%] [Cov:=======>                           21%][Progress:=======>                      25%] [Cov:========>                          23%][Progress:=======>                      25%] [Cov:========>                          24%][Progress:=======>                      26%] [Cov:>                                  0%][Progress:=======>                      26%] [Cov:====>                              13%][Progress:=======>                      26%] [Cov:====>                              14%][Progress:========>                     28%] [Cov:>                                  0%][Progress:========>                     28%] [Cov:>                                  1%][Progress:========>                     28%] [Cov:====>                              13%][Progress:========>                     28%] [Cov:====>                              14%][Progress:========>                     28%] [Cov:========>                          25%][Progress:=========>                    30%] [Cov:====>                              13%][Progress:=========>                    30%] [Cov:========>                          24%][Progress:=========>                    31%] [Cov:====>                              14%][Progress:=========>                    31%] [Cov:=====>                             17%][Progress:=========>                    31%] [Cov:=======>                           22%][Progress:=========>                    31%] [Cov:========>                          24%][Progress:=========>                    33%] [Cov:====>                              13%][Progress:=========>                    33%] [Cov:====>                              14%][Progress:=========>                    33%] [Cov:=====>                             17%][Progress:=========>                    33%] [Cov:=======>                           22%][Progress:=========>                    33%] [Cov:========>                          23%][Progress:=========>                    33%] [Cov:========>                          25%][Progress:==========>                   35%] [Cov:============>                      35%][Progress:==========>                   36%] [Cov:===========>                       33%][Progress:==========>                   36%] [Cov:============>                      35%][Progress:===========>                  38%] [Cov:===========>                       33%][Progress:===========>                  38%] [Cov:============>                      35%][Progress:============>                 40%] [Cov:============>                      35%][Progress:============>                 40%] [Cov:============>                      35%][Progress:============>                 41%] [Cov:============>                      35%][Progress:============>                 43%] [Cov:===========>                       33%][Progress:============>                 43%] [Cov:===========>                       34%][Progress:============>                 43%] [Cov:============>                      35%][Progress:=============>                45%] [Cov:===========>                       33%][Progress:=============>                45%] [Cov:============>                      35%][Progress:=============>                46%] [Cov:============>                      35%][Progress:==============>               48%] [Cov:============>                      35%][Progress:===============>              50%] [Cov:============>                      35%][Progress:===============>              51%] [Cov:============>                      35%][Progress:===============>              51%] [Cov:============>                      36%][Progress:===============>              51%] [Cov:==============>                    41%][Progress:===============>              51%] [Cov:==============>                    42%][Progress:===============>              51%] [Cov:===============>                   43%][Progress:===============>              51%] [Cov:===============>                   44%][Progress:===============>              53%] [Cov:============>                      35%][Progress:===============>              53%] [Cov:============>                      36%][Progress:================>             55%] [Cov:===============>                   44%][Progress:=================>            58%] [Cov:==============>                    41%][Progress:=================>            58%] [Cov:===============>                   43%][Progress:==================>           60%] [Cov:==============>                    40%][Progress:==================>           60%] [Cov:===============>                   43%][Progress:==================>           60%] [Cov:===============>                   44%][Progress:==================>           60%] [Cov:===============>                   45%][Progress:==================>           61%] [Cov:===============>                   43%][Progress:==================>           63%] [Cov:==============>                    41%][Progress:==================>           63%] [Cov:===============>                   43%][Progress:==================>           63%] [Cov:===============>                   45%][Progress:===================>          65%] [Cov:==============>                    41%][Progress:===================>          65%] [Cov:===============>                   45%][Progress:===================>          65%] [Cov:================>                  46%][Progress:===================>          66%] [Cov:================>                  47%][Progress:====================>         68%] [Cov:===============>                   45%][Progress:====================>         68%] [Cov:================>                  46%][Progress:====================>         68%] [Cov:================>                  47%][Progress:=====================>        70%] [Cov:===============>                   45%][Progress:=====================>        70%] [Cov:================>                  46%][Progress:=====================>        70%] [Cov:================>                  47%][Progress:=====================>        70%] [Cov:================>                  48%][Progress:=====================>        71%] [Cov:================>                  46%][Progress:=====================>        71%] [Cov:================>                  48%][Progress:======================>       75%] [Cov:===============>                   45%][Progress:======================>       75%] [Cov:================>                  46%][Progress:======================>       75%] [Cov:================>                  47%][Progress:======================>       76%] [Cov:===============>                   45%][Progress:======================>       76%] [Cov:================>                  48%][Progress:======================>       76%] [Cov:=================>                 49%][Progress:======================>       76%] [Cov:=================>                 50%][Progress:=======================>      78%] [Cov:================>                  46%][Progress:=======================>      78%] [Cov:================>                  47%][Progress:=======================>      78%] [Cov:================>                  48%][Progress:========================>     80%] [Cov:=================>                 50%][Progress:========================>     81%] [Cov:================>                  48%][Progress:========================>     81%] [Cov:=================>                 49%][Progress:========================>     81%] [Cov:=================>                 50%][Progress:========================>     81%] [Cov:=================>                 51%][Progress:========================>     83%] [Cov:================>                  47%][Progress:========================>     83%] [Cov:=================>                 50%][Progress:=========================>    85%] [Cov:==================>                52%][Progress:=========================>    86%] [Cov:=================>                 51%][Progress:=========================>    86%] [Cov:==================>                52%][Progress:=========================>    86%] [Cov:==================>                53%][Progress:==========================>   88%] [Cov:==================>                54%][Progress:===========================>  90%] [Cov:==================>                53%][Progress:===========================>  90%] [Cov:==================>                54%][Progress:===========================>  91%] [Cov:==================>                53%][Progress:===========================>  91%] [Cov:==================>                54%][Progress:===========================>  93%] [Cov:==================>                53%][Progress:===========================>  93%] [Cov:==================>                54%][Progress:============================> 95%] [Cov:==================>                53%][Progress:============================> 95%] [Cov:==================>                54%][Progress:============================> 96%] [Cov:==================>                54%][Progress:=============================>98%] [Cov:==================>                54%][Progress:==============================100%] [Cov:==================>                54%][Progress:==============================100%] [Cov:==================>                54%][Progress:==============================100%] [Cov:==================>                54%][Progress:==============================100%] [Cov:===================>               55%]
* Search finished after 63s and 13 generations, 9127 statements, best individual has fitness: 1506.6624339200023
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 67%
* Total number of goals: 853
* Number of covered goals: 575
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 54%
* Total number of goals: 432
* Number of covered goals: 233
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 10
* Number of covered goals: 10
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 49%
* Total number of goals: 216
* Number of covered goals: 105
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 18%
* Total number of goals: 28
* Number of covered goals: 5
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 59%
* Total number of goals: 17
* Number of covered goals: 10
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 47%
* Total number of goals: 17
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 54%
* Total number of goals: 432
* Number of covered goals: 233
* Generated 27 tests with total length 127
* Resulting test suite's coverage: 55% (average coverage for all fitness functions)
* Compiling and checking tests
* Writing JUnit test case 'EigenDecompositionImpl_ESTest' to evosuite-tests
* Done!

* Computation finished
