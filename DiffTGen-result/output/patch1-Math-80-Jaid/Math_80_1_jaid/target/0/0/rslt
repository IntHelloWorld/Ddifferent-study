* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.math.linear.EigenDecompositionImpl
* Starting client
* Connecting to master process on port 11623
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/patch1-Math-80-Jaid/Math_80_1_jaid/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math.linear.EigenDecompositionImpl
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 853
  - Branch 432
  - Exception 0
  - MutationFactory 216
  - Output 28
  - Method 17
  - MethodNoException 17
  - CBranchFitnessFactory 432
[Progress:>                             0%] [Cov:>                                  0%]* Using seed 1585481552591
* Starting evolution
[Progress:>                             3%] [Cov:>                                  2%][Progress:>                             3%] [Cov:=>                                 4%][Progress:>                             3%] [Cov:=====>                             16%][Progress:>                             3%] [Cov:======>                            18%][Progress:>                             3%] [Cov:=======>                           21%][Progress:>                             3%] [Cov:========>                          23%][Progress:>                             3%] [Cov:========>                          24%][Progress:=>                            5%] [Cov:>                                  0%][Progress:=>                            5%] [Cov:>                                  1%][Progress:=>                            5%] [Cov:====>                              13%][Progress:=>                            5%] [Cov:====>                              14%][Progress:=>                            6%] [Cov:>                                  2%][Progress:=>                            6%] [Cov:=>                                 3%][Progress:=>                            6%] [Cov:=====>                             15%][Progress:=>                            6%] [Cov:=====>                             16%][Progress:=>                            6%] [Cov:======>                            18%][Progress:=>                            6%] [Cov:======>                            19%][Progress:=>                            6%] [Cov:=======>                           20%][Progress:==>                           8%] [Cov:>                                  2%][Progress:==>                           8%] [Cov:=>                                 4%][Progress:==>                           8%] [Cov:=====>                             16%][Progress:==>                           8%] [Cov:=====>                             17%][Progress:==>                           8%] [Cov:=======>                           20%][Progress:==>                           8%] [Cov:=======>                           21%][Progress:==>                           8%] [Cov:=======>                           22%][Progress:===>                          13%] [Cov:>                                  0%][Progress:===>                          13%] [Cov:>                                  1%][Progress:===>                          13%] [Cov:====>                              13%][Progress:===>                          13%] [Cov:====>                              14%][Progress:====>                         15%] [Cov:>                                  0%][Progress:====>                         15%] [Cov:====>                              13%][Progress:====>                         16%] [Cov:>                                  0%][Progress:====>                         16%] [Cov:>                                  1%][Progress:====>                         16%] [Cov:====>                              13%][Progress:=====>                        18%] [Cov:>                                  0%][Progress:=====>                        18%] [Cov:>                                  1%][Progress:=====>                        18%] [Cov:====>                              13%][Progress:=====>                        18%] [Cov:====>                              14%][Progress:======>                       20%] [Cov:>                                  0%][Progress:======>                       20%] [Cov:====>                              12%][Progress:======>                       20%] [Cov:====>                              13%][Progress:=======>                      25%] [Cov:====>                              12%][Progress:=======>                      25%] [Cov:====>                              13%][Progress:=======>                      25%] [Cov:====>                              14%][Progress:=======>                      26%] [Cov:====>                              13%][Progress:=======>                      26%] [Cov:====>                              14%][Progress:=======>                      26%] [Cov:=====>                             16%][Progress:=======>                      26%] [Cov:=====>                             17%][Progress:=======>                      26%] [Cov:======>                            18%][Progress:=======>                      26%] [Cov:========>                          24%][Progress:========>                     28%] [Cov:====>                              14%][Progress:========>                     28%] [Cov:========>                          24%][Progress:=========>                    30%] [Cov:====>                              14%][Progress:=========>                    30%] [Cov:=====>                             17%][Progress:=========>                    30%] [Cov:======>                            18%][Progress:=========>                    30%] [Cov:======>                            19%][Progress:=========>                    31%] [Cov:====>                              14%][Progress:=========>                    33%] [Cov:==========>                        30%][Progress:==========>                   35%] [Cov:==========>                        29%][Progress:==========>                   35%] [Cov:==========>                        30%][Progress:==========>                   36%] [Cov:==========>                        30%][Progress:==========>                   36%] [Cov:==========>                        30%][Progress:===========>                  38%] [Cov:==========>                        29%][Progress:===========>                  38%] [Cov:==========>                        30%][Progress:============>                 40%] [Cov:==========>                        30%][Progress:============>                 41%] [Cov:==========>                        29%][Progress:============>                 41%] [Cov:==========>                        30%][Progress:============>                 41%] [Cov:==========>                        31%][Progress:============>                 41%] [Cov:===========>                       32%][Progress:============>                 41%] [Cov:===========>                       34%][Progress:============>                 43%] [Cov:==========>                        29%][Progress:============>                 43%] [Cov:==========>                        30%][Progress:=============>                45%] [Cov:===========>                       34%][Progress:=============>                46%] [Cov:===========>                       34%][Progress:==============>               48%] [Cov:===========>                       34%][Progress:===============>              50%] [Cov:===========>                       34%][Progress:===============>              51%] [Cov:===========>                       34%][Progress:===============>              53%] [Cov:===========>                       33%][Progress:===============>              53%] [Cov:===========>                       34%][Progress:================>             56%] [Cov:===========>                       34%][Progress:=================>            58%] [Cov:===========>                       34%][Progress:==================>           60%] [Cov:===========>                       34%][Progress:==================>           61%] [Cov:===========>                       34%][Progress:==================>           61%] [Cov:============>                      35%][Progress:==================>           61%] [Cov:============>                      36%][Progress:==================>           61%] [Cov:=============>                     38%][Progress:==================>           63%] [Cov:===========>                       34%][Progress:===================>          65%] [Cov:=============>                     38%][Progress:===================>          66%] [Cov:============>                      37%][Progress:====================>         68%] [Cov:============>                      37%][Progress:====================>         68%] [Cov:=============>                     38%][Progress:=====================>        70%] [Cov:============>                      37%][Progress:=====================>        70%] [Cov:=============>                     38%][Progress:=====================>        73%] [Cov:=============>                     38%][Progress:======================>       75%] [Cov:=============>                     38%][Progress:======================>       76%] [Cov:=============>                     38%][Progress:=======================>      78%] [Cov:=============>                     38%][Progress:========================>     80%] [Cov:=============>                     38%][Progress:========================>     81%] [Cov:=============>                     38%][Progress:========================>     83%] [Cov:=============>                     38%][Progress:=========================>    85%] [Cov:=============>                     38%][Progress:=========================>    86%] [Cov:=============>                     38%][Progress:==========================>   88%] [Cov:=============>                     38%][Progress:==========================>   88%] [Cov:=============>                     38%][Progress:===========================>  90%] [Cov:=============>                     38%][Progress:===========================>  91%] [Cov:=============>                     38%][Progress:===========================>  91%] [Cov:=============>                     38%][Progress:===========================>  93%] [Cov:=============>                     38%][Progress:============================> 95%] [Cov:=============>                     38%][Progress:============================> 96%] [Cov:=============>                     38%][Progress:=============================>98%] [Cov:=============>                     38%][Progress:==============================100%] [Cov:=============>                     38%][Progress:==============================100%] [Cov:=============>                     39%][Progress:==============================100%] [Cov:==============>                    40%][Progress:==============================100%] [Cov:=============>                     38%][Progress:==============================100%] [Cov:==============>                    40%][Progress:==============================100%] [Cov:===============>                   43%]
* Search finished after 63s and 17 generations, 11195 statements, best individual has fitness: 4048.748435054774
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 25%
* Total number of goals: 853
* Number of covered goals: 215
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 17%
* Total number of goals: 432
* Number of covered goals: 72
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 22%
* Total number of goals: 216
* Number of covered goals: 47
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 36%
* Total number of goals: 28
* Number of covered goals: 10
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 71%
* Total number of goals: 17
* Number of covered goals: 12
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 65%
* Total number of goals: 17
* Number of covered goals: 11
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 17%
* Total number of goals: 432
* Number of covered goals: 72
* Generated 28 tests with total length 103
* Resulting test suite's coverage: 43% (average coverage for all fitness functions)
* Compiling and checking tests
* Writing JUnit test case 'EigenDecompositionImpl_ESTest' to evosuite-tests
* Done!

* Computation finished
