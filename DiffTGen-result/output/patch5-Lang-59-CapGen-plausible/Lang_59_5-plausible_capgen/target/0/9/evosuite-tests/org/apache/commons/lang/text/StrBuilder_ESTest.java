/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 28 17:49:39 GMT 2020
 */

package org.apache.commons.lang.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.Writer;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.NoSuchElementException;
import org.apache.commons.lang.text.StrBuilder;
import org.apache.commons.lang.text.StrMatcher;
import org.apache.commons.lang.text.StrTokenizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StrBuilder_ESTest extends StrBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendPadding(0, '.');
      StrBuilder strBuilder2 = strBuilder1.trim();
      StringBuffer stringBuffer0 = new StringBuffer(0);
      StrBuilder strBuilder3 = strBuilder1.append(stringBuffer0);
      StrBuilder strBuilder4 = strBuilder0.append(0.0);
      StrBuilder strBuilder5 = strBuilder0.deleteAll("Exhj-3$:R9#yU");
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('.');
      StrBuilder strBuilder6 = strBuilder5.replace((StrMatcher) strMatcher_CharMatcher0, "Exhj-3$:R9#yU", 0, 0, 2142);
      StrBuilder strBuilder7 = strBuilder6.insert(0, false);
      StringBuffer stringBuffer1 = strBuilder4.toStringBuffer();
      boolean boolean0 = strBuilder0.contains((StrMatcher) strMatcher_CharMatcher0);
      char[] charArray0 = new char[4];
      StrBuilder strBuilder8 = strBuilder2.append(1246.6F);
      charArray0[0] = 'n';
      charArray0[1] = '.';
      charArray0[0] = '.';
      charArray0[3] = '.';
      // Undeclared exception!
      try { 
        strBuilder2.getChars(2142, 1478, charArray0, 1478);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1478
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      String string0 = "1.1";
      StrBuilder strBuilder0 = new StrBuilder("1.1");
      int int0 = 2;
      String string1 = strBuilder0.substring(2);
      StrBuilder strBuilder1 = strBuilder0.ensureCapacity(2);
      String string2 = strBuilder1.rightString(38);
      // Undeclared exception!
      try { 
        strBuilder0.insert(2456, 2456);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2456
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(572);
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) strBuilder0;
      objectArray0[1] = (Object) strBuilder0;
      objectArray0[2] = (Object) strBuilder0;
      objectArray0[3] = (Object) strBuilder0;
      StrBuilder strBuilder1 = strBuilder0.deleteFirst((StrMatcher) null);
      objectArray0[4] = (Object) strBuilder0;
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators(objectArray0, (String) null);
      StrBuilder strBuilder3 = strBuilder0.appendNewLine();
      int int0 = strBuilder2.indexOf("", 567);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[9];
      charArray0[0] = 'l';
      charArray0[1] = '`';
      charArray0[2] = 'U';
      charArray0[3] = '1';
      charArray0[4] = ']';
      charArray0[5] = '5';
      charArray0[6] = 'I';
      strBuilder_StrBuilderWriter0.write((char[]) null);
      charArray0[7] = '-';
      strBuilder_StrBuilderWriter0.write(charArray0, 9, 0);
      charArray0[8] = 'U';
      strBuilder_StrBuilderWriter0.write(charArray0);
      strBuilder_StrBuilderWriter0.flush();
      String string0 = strBuilder0.midString(0, 39);
      int int0 = strBuilder0.hashCode();
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StrBuilder strBuilder2 = strBuilder1.setLength(0);
      StrBuilder strBuilder3 = strBuilder0.deleteFirst('5');
      // Undeclared exception!
      try { 
        strBuilder0.substring(2303, 37);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1613);
      char char0 = 'S';
      StrBuilder strBuilder1 = new StrBuilder();
      boolean boolean0 = strBuilder0.contains("9");
      StrBuilder strBuilder2 = strBuilder1.append('S');
      // Undeclared exception!
      try { 
        strBuilder2.setLength((-4446));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -4446
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      String string0 = "";
      StrBuilder strBuilder1 = strBuilder0.setNullText("");
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrBuilder strBuilder2 = strBuilder1.setNewLineText("KXk&X.QUnbi");
      StrBuilder strBuilder3 = strBuilder2.append('X');
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("yWY");
      int int0 = 2;
      String string1 = strBuilder0.midString(2, 2);
      int int1 = strBuilder0.lastIndexOf((StrMatcher) strMatcher_StringMatcher0);
      StrBuilder strBuilder4 = strBuilder1.append((Object) strMatcher_StringMatcher0);
      StringBuffer stringBuffer0 = null;
      try {
        stringBuffer0 = new StringBuffer((String) null);
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(4);
      StrBuilder strBuilder1 = strBuilder0.append((double) 4);
      char[] charArray0 = new char[4];
      charArray0[0] = '%';
      charArray0[1] = 'a';
      charArray0[2] = '7';
      charArray0[3] = 'p';
      StrBuilder strBuilder2 = strBuilder1.append(charArray0);
      char[] charArray1 = new char[3];
      charArray1[0] = '<';
      charArray1[1] = '<';
      charArray1[2] = '<';
      StrBuilder strBuilder3 = strBuilder0.append(charArray1);
      int int0 = 276;
      strBuilder3.size = 276;
      int int1 = strBuilder0.indexOf('<', Integer.MAX_VALUE);
      // Undeclared exception!
      try { 
        strBuilder0.toString();
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[9];
      charArray0[0] = 'l';
      charArray0[1] = '`';
      charArray0[2] = 'U';
      charArray0[3] = '1';
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrBuilder strBuilder2 = strBuilder1.append((StringBuffer) null, (-1), (-1));
      charArray0[4] = ']';
      charArray0[5] = '5';
      charArray0[6] = 'I';
      strBuilder_StrBuilderWriter0.write((char[]) null);
      charArray0[7] = '-';
      strBuilder_StrBuilderWriter0.write(charArray0, 9, 0);
      charArray0[8] = 'U';
      strBuilder_StrBuilderWriter0.write(charArray0);
      strBuilder_StrBuilderWriter0.flush();
      String string0 = strBuilder0.midString(0, 39);
      int int0 = strBuilder0.hashCode();
      StrBuilder strBuilder3 = strBuilder0.append(charArray0);
      StrBuilder strBuilder4 = strBuilder0.deleteFirst('5');
      StrBuilder strBuilder5 = strBuilder4.trim();
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      String string0 = "4.9";
      StrBuilder strBuilder0 = new StrBuilder("4.9");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('U');
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.deleteAll("VxOJ/L1&AnR");
      StrBuilder strBuilder3 = strBuilder1.append(true);
      StrBuilder strBuilder4 = strBuilder3.append(7718);
      Object object0 = new Object();
      int int0 = 18;
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight(object0, 18, '2');
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Windows");
      int int0 = 99;
      StringBuffer stringBuffer0 = new StringBuffer(99);
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder2 = strBuilder1.setNullText("1.3");
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('z');
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("e!d?");
      StrMatcher strMatcher1 = StrMatcher.charMatcher('f');
      int int1 = strBuilder1.lastIndexOf((StrMatcher) strMatcher_CharMatcher0, 99);
      StrMatcher strMatcher2 = StrMatcher.singleQuoteMatcher();
      strBuilder0.size = 2874;
      // Undeclared exception!
      try { 
        strBuilder0.indexOf(strMatcher2);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1712));
      Object[] objectArray0 = new Object[8];
      StrBuilder strBuilder1 = strBuilder0.append((char[]) null);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1866));
      StrBuilder strBuilder1 = new StrBuilder();
      strBuilder0.size = 32;
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      StrBuilder strBuilder2 = strBuilder0.replaceAll('9', '9');
      StrBuilder strBuilder3 = strBuilder1.replaceAll("", " wcE+=tjqVde~EZB");
      StringBuffer stringBuffer0 = strBuilder3.toStringBuffer();
      int int0 = strBuilder2.indexOf("");
      StrBuilder strBuilder4 = strBuilder2.appendNewLine();
      StrBuilder strBuilder5 = strBuilder4.append('>');
      boolean boolean1 = strBuilder3.isEmpty();
      String string0 = strBuilder4.rightString((-3441));
      StrBuilder strBuilder6 = strBuilder1.trim();
      // Undeclared exception!
      try { 
        strBuilder3.insert(34, (char[]) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 34
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendPadding(25, '.');
      StrBuilder strBuilder2 = strBuilder1.trim();
      StringBuffer stringBuffer0 = new StringBuffer(25);
      StrBuilder strBuilder3 = strBuilder1.append(stringBuffer0);
      StrBuilder strBuilder4 = strBuilder0.append(0.0);
      StrBuilder strBuilder5 = strBuilder0.deleteAll("Exhj-3$:R9#yU");
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('.');
      StrBuilder strBuilder6 = strBuilder5.replace((StrMatcher) strMatcher_CharMatcher0, "Exhj-3$:R9#yU", 25, 25, 2475);
      StrBuilder strBuilder7 = strBuilder6.insert(25, true);
      StringBuffer stringBuffer1 = strBuilder4.toStringBuffer();
      boolean boolean0 = strBuilder0.contains((StrMatcher) strMatcher_CharMatcher0);
      char[] charArray0 = new char[4];
      StrBuilder strBuilder8 = strBuilder2.append(1246.6F);
      charArray0[0] = 'n';
      charArray0[1] = '.';
      charArray0[2] = '.';
      charArray0[3] = '.';
      // Undeclared exception!
      try { 
        strBuilder2.getChars(2475, 1478, charArray0, 1478);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1478
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft(23, 26, '*');
      StringBuffer stringBuffer0 = null;
      try {
        stringBuffer0 = new StringBuffer((-6));
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[2];
      charArray0[0] = '8';
      charArray0[1] = 'H';
      char[] charArray1 = strBuilder0.getChars(charArray0);
      StrBuilder strBuilder1 = strBuilder0.deleteAll((StrMatcher) null);
      boolean boolean0 = strBuilder0.contains((StrMatcher) null);
      int int0 = strBuilder0.lastIndexOf('H');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = "";
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance("");
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.next();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer(0);
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('.');
      char[] charArray0 = new char[4];
      charArray0[0] = 'n';
      charArray0[1] = '.';
      charArray0[2] = '.';
      charArray0[3] = '.';
      StrBuilder strBuilder0 = new StrBuilder(108);
      char[] charArray1 = strBuilder0.getChars(charArray0);
      boolean boolean0 = strBuilder0.endsWith("1.2");
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.insert(0, 'g');
      char[] charArray0 = strBuilder0.getChars((char[]) null);
      StrBuilder strBuilder2 = strBuilder0.appendNewLine();
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      int int0 = 49;
      StrBuilder strBuilder1 = strBuilder0.appendPadding(49, 'K');
      StrBuilder strBuilder2 = strBuilder1.append((Object) null);
      String string0 = strBuilder0.toString();
      int int1 = 117;
      String string1 = strBuilder0.midString(117, 117);
      StrBuilder strBuilder3 = strBuilder0.replaceAll(strMatcher0, "h0NaXHfX(b");
      int int2 = 2;
      String string2 = strBuilder0.leftString(2);
      strBuilder1.size = 49;
      StringBuffer stringBuffer0 = strBuilder3.toStringBuffer();
      char char0 = '7';
      StrBuilder strBuilder4 = strBuilder3.replaceFirst('7', '7');
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("vI8~6}!,kGlM");
      int int3 = strBuilder0.indexOf("vI8~6}!,kGlM");
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) "KK";
      objectArray0[1] = (Object) strBuilder4;
      StrBuilder strBuilder5 = strBuilder4.appendWithSeparators(objectArray0, "*En:/W");
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher("*En:/W");
      // Undeclared exception!
      try { 
        strBuilder3.substring((-1435), (-3188));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1435
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4.9");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('U');
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.deleteAll("VxOJ/L1&AnR");
      StrBuilder strBuilder3 = strBuilder1.append(true);
      Object object0 = new Object();
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadRight(object0, 39, '2');
      StrBuilder strBuilder5 = strBuilder4.setNewLineText("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrBuilder strBuilder6 = strBuilder0.insert(39, "4.9");
      StrBuilder strBuilder7 = strBuilder6.append(39);
      boolean boolean0 = strBuilder1.contains("q*l:YW,=PI\"tv9");
      StrBuilder strBuilder8 = strBuilder6.replace(39, 39, "l");
      int int0 = strBuilder7.indexOf('_', (-641));
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) strMatcher0;
      objectArray0[1] = (Object) strBuilder7;
      objectArray0[2] = (Object) strBuilder5;
      objectArray0[3] = (Object) strBuilder2;
      objectArray0[4] = (Object) "l";
      objectArray0[5] = object0;
      objectArray0[6] = (Object) strBuilder1;
      StrBuilder strBuilder9 = strBuilder6.appendWithSeparators(objectArray0, "4.9");
      int int1 = strBuilder1.indexOf("m8Ji2|O/", (-641));
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(114);
      boolean boolean0 = strBuilder0.endsWith("length must be valid");
      StrBuilder strBuilder1 = strBuilder0.appendPadding((-2587), '(');
      StrBuilder strBuilder2 = strBuilder1.ensureCapacity(0);
      StrBuilder strBuilder3 = new StrBuilder();
      StrBuilder strBuilder4 = strBuilder3.minimizeCapacity();
      boolean boolean1 = strBuilder0.equals((Object) strBuilder3);
      StrBuilder strBuilder5 = strBuilder3.appendNull();
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      int int0 = strBuilder5.indexOf((StrMatcher) strMatcher_NoMatcher0, 0);
      StrBuilder strBuilder6 = strBuilder0.append(0);
      StrBuilder strBuilder7 = strBuilder6.appendNull();
      boolean boolean2 = strBuilder1.equalsIgnoreCase(strBuilder2);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[5];
      charArray0[0] = '(';
      charArray0[1] = '(';
      charArray0[2] = '(';
      charArray0[3] = '(';
      charArray0[4] = '(';
      strBuilder_StrBuilderWriter0.write(charArray0);
      strBuilder_StrBuilderWriter0.flush();
      StrBuilder strBuilder8 = strBuilder3.appendFixedWidthPadRight((Object) ";b|-k1(\"f4S=q$", (-2587), '(');
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('U');
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.deleteAll("VxOJ/L1&AnR");
      StrBuilder strBuilder3 = strBuilder1.append(true);
      Object object0 = new Object();
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadRight(object0, 39, '2');
      StrBuilder strBuilder5 = strBuilder4.setNewLineText("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrBuilder strBuilder6 = strBuilder0.insert(39, "");
      StrBuilder strBuilder7 = strBuilder6.append(39);
      boolean boolean0 = strBuilder1.contains("q*l:YW,=PI\"tv9");
      StrBuilder strBuilder8 = strBuilder6.replace(39, 39, "l");
      int int0 = strBuilder7.indexOf('_', (-641));
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) strMatcher0;
      objectArray0[1] = (Object) strBuilder7;
      objectArray0[2] = (Object) strBuilder5;
      objectArray0[3] = (Object) strBuilder2;
      objectArray0[4] = (Object) "l";
      objectArray0[5] = object0;
      objectArray0[6] = (Object) strBuilder1;
      StrBuilder strBuilder9 = strBuilder6.appendWithSeparators(objectArray0, "");
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4.9");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('U');
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.deleteAll("VxOJ/L1&AnR");
      StrBuilder strBuilder3 = strBuilder1.append(true);
      Object object0 = new Object();
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadRight(object0, 39, '2');
      StrBuilder strBuilder5 = strBuilder4.setNewLineText("4.9");
      StrBuilder strBuilder6 = strBuilder0.insert(39, "4.9");
      StrBuilder strBuilder7 = strBuilder6.append(39);
      boolean boolean0 = strBuilder1.contains("q*l:YW,=PI\"tv9");
      StrBuilder strBuilder8 = strBuilder6.replace(39, 39, "l");
      StrBuilder strBuilder9 = strBuilder8.setNullText((String) null);
      int int0 = strBuilder7.indexOf('_', (-641));
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) strMatcher0;
      objectArray0[1] = (Object) strBuilder7;
      objectArray0[2] = (Object) strBuilder5;
      objectArray0[3] = (Object) strBuilder2;
      objectArray0[4] = (Object) "VxOJ/L1&AnR";
      objectArray0[5] = object0;
      objectArray0[6] = (Object) strBuilder1;
      StrBuilder strBuilder10 = strBuilder6.appendWithSeparators(objectArray0, "4.9");
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher(":83o'q]>tUp");
      // Undeclared exception!
      try { 
        strBuilder3.replaceAll(strMatcher2, "w-Ohn*nh8l7T.0J{SBf");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.trim();
      int int0 = strBuilder0.size();
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2541);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setTrimmerMatcher(strMatcher0);
      StrTokenizer strTokenizer1 = strBuilder_StrBuilderTokenizer0.reset("V<G");
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer1, "V<G");
      boolean boolean0 = strBuilder0.endsWith("=?+");
      StrTokenizer strTokenizer2 = strBuilder0.asTokenizer();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[4];
      charArray0[0] = 'X';
      charArray0[1] = '_';
      charArray0[2] = 'm';
      String string0 = strBuilder1.substring(23, 4240);
      String string1 = strBuilder0.getNullText();
      charArray0[3] = 'b';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 2541, 2541);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4.9");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('U');
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.deleteAll("VxOJ/L1&AnR");
      StrBuilder strBuilder3 = strBuilder1.append(true);
      Object object0 = new Object();
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadRight(object0, 39, '2');
      StrBuilder strBuilder5 = strBuilder4.setNewLineText("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrBuilder strBuilder6 = strBuilder0.insert(39, "4.9");
      StrBuilder strBuilder7 = strBuilder6.append(39);
      boolean boolean0 = strBuilder_StrBuilderTokenizer0.hasNext();
      StrBuilder strBuilder8 = strBuilder6.replace(39, 39, "l");
      int int0 = strBuilder7.indexOf('_', (-641));
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) strMatcher0;
      objectArray0[1] = (Object) strBuilder7;
      objectArray0[2] = (Object) strBuilder5;
      objectArray0[3] = (Object) strBuilder2;
      objectArray0[4] = (Object) "l";
      objectArray0[5] = object0;
      objectArray0[6] = (Object) strBuilder1;
      StrBuilder strBuilder9 = strBuilder0.appendWithSeparators((Object[]) null, "4.9");
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Q18");
      StrBuilder strBuilder1 = strBuilder0.setLength(22);
      int int0 = 4;
      StrBuilder strBuilder2 = strBuilder0.ensureCapacity(4);
      StrBuilder strBuilder3 = strBuilder1.replaceFirst('`', '`');
      StrBuilder strBuilder4 = strBuilder1.replaceFirst("8U_GN3~V", "Invalid length: ");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder3.new StrBuilderTokenizer();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.previous();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1848));
      int int0 = strBuilder0.indexOf('b');
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(1084L);
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      boolean boolean1 = strBuilder0.equals((Object) strBuilder_StrBuilderReader0);
      // Undeclared exception!
      try { 
        strBuilder0.delete(2190, 2190);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      double double0 = (-1166.8132835);
      StrBuilder strBuilder1 = strBuilder0.append((StringBuffer) null);
      StrBuilder strBuilder2 = strBuilder0.append(0);
      StrBuilder strBuilder3 = strBuilder0.append("T)Nnp<0E", 4, 0);
      StringBuffer stringBuffer0 = strBuilder3.toStringBuffer();
      // Undeclared exception!
      try { 
        strBuilder0.insert(108, "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 108
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, (String) null);
      char[] charArray0 = new char[0];
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("");
      StrMatcher strMatcher2 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder0.indexOf("U");
      StrMatcher strMatcher3 = StrMatcher.charSetMatcher(charArray0);
      StrMatcher strMatcher4 = StrMatcher.spaceMatcher();
      StrBuilder strBuilder2 = strBuilder1.replaceAll(strMatcher4, (String) null);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      StrMatcher strMatcher5 = StrMatcher.charSetMatcher(charArray0);
      strBuilder_StrBuilderWriter0.close();
      boolean boolean0 = strBuilder1.endsWith("");
      StrBuilder strBuilder3 = strBuilder2.setNewLineText("");
      StrTokenizer strTokenizer0 = strBuilder1.asTokenizer();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder4 = strBuilder1.appendWithSeparators((Collection) linkedList0, ", Length: ");
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder2 = new StrBuilder(0);
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder2);
      StrBuilder strBuilder3 = strBuilder0.clear();
      StringBuffer stringBuffer0 = null;
      try {
        stringBuffer0 = new StringBuffer((-879));
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("%eR");
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      int int0 = strBuilder0.length();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("%eR");
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) "%eR");
      strBuilder_StrBuilderWriter0.write("{u<;?lBiA?~J15", 3, 3);
      int int1 = (-1088);
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex((-1088));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1088
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      int int0 = (-2395);
      StrBuilder strBuilder0 = new StrBuilder((-2395));
      StrBuilder strBuilder1 = strBuilder0.append((long) (-2395));
      char[] charArray0 = strBuilder0.toCharArray(0, 0);
      int int1 = strBuilder1.indexOf((StrMatcher) null);
      StrTokenizer strTokenizer0 = strBuilder1.asTokenizer();
      StrBuilder strBuilder2 = strBuilder1.appendNewLine();
      StrBuilder strBuilder3 = strBuilder1.append("', is neither of type Map.Entry nor an Array");
      strBuilder2.buffer = charArray0;
      // Undeclared exception!
      try { 
        strBuilder2.append((double) (-1));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1370);
      StrBuilder strBuilder1 = strBuilder0.append((char[]) null, 1750, 0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read((char[]) null, 1750, 0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(114);
      int int0 = strBuilder0.indexOf("", 97);
      StrBuilder strBuilder1 = new StrBuilder(97);
      Writer writer0 = strBuilder0.asWriter();
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      char char0 = 'L';
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(0, 'L');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append('z');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      char[] charArray0 = new char[7];
      charArray0[0] = 'm';
      boolean boolean0 = strBuilder_StrBuilderTokenizer0.hasNext();
      charArray0[1] = 'm';
      charArray0[2] = 'z';
      charArray0[3] = '\"';
      charArray0[4] = 'h';
      String string0 = strBuilder_StrBuilderTokenizer0.toString();
      charArray0[5] = ':';
      charArray0[6] = 'n';
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Iterator) strBuilder_StrBuilderTokenizer0, (String) null);
      int int0 = strMatcher0.isMatch(charArray0, 0, 0, 0);
      int int1 = strBuilder0.lastIndexOf(strMatcher0);
      int int2 = strBuilder0.lastIndexOf((String) null, 0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      int int0 = 97;
      StrBuilder strBuilder0 = new StrBuilder(97);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) "!\u0007`", 97, '\'');
      int int1 = strBuilder0.lastIndexOf("WT^wt{3Ip=");
      StrBuilder strBuilder2 = strBuilder0.reverse();
      int int2 = (-2177);
      // Undeclared exception!
      try { 
        strBuilder2.insert((-2177), (-2157.7983702997));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2177
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((-1047), 5, 'I');
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      double double0 = (-1166.8132835);
      StrBuilder strBuilder1 = strBuilder0.append(0);
      StrBuilder strBuilder2 = strBuilder0.append("T)Nnp<0E", 4, 0);
      // Undeclared exception!
      try { 
        strBuilder0.insert(108, "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 108
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      int int0 = 2196;
      StrBuilder strBuilder0 = new StrBuilder(2196);
      char char0 = '|';
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(2196);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2196
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[9];
      charArray0[0] = 'l';
      charArray0[1] = '`';
      charArray0[2] = 'U';
      charArray0[3] = '1';
      charArray0[4] = ']';
      charArray0[5] = '5';
      charArray0[6] = 'I';
      charArray0[7] = '-';
      strBuilder_StrBuilderWriter0.write(charArray0, 9, 0);
      charArray0[8] = 'U';
      strBuilder_StrBuilderWriter0.write(charArray0);
      strBuilder_StrBuilderWriter0.flush();
      String string0 = strBuilder0.midString(0, 39);
      int int0 = strBuilder0.hashCode();
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = 'r';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) "d'heHXB", 0, 'r');
      Object[] objectArray0 = new Object[8];
      Object object0 = new Object();
      objectArray0[0] = object0;
      objectArray0[1] = (Object) "startIndex must be valid";
      objectArray0[2] = (Object) strBuilder0;
      objectArray0[3] = (Object) strBuilder0;
      objectArray0[4] = (Object) "startIndex must be valid";
      objectArray0[5] = (Object) "startIndex must be valid";
      objectArray0[6] = (Object) strBuilder0;
      objectArray0[7] = (Object) "startIndex must be valid";
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators(objectArray0, "startIndex must be valid");
      StrBuilder strBuilder3 = strBuilder2.append("startIndex must be valid");
      StrBuilder strBuilder4 = strBuilder3.clear();
      StrBuilder strBuilder5 = strBuilder0.deleteAll("startIndex must be valid");
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      int int0 = strBuilder4.validateRange(0, 0);
      int int1 = 0;
      int int2 = (-75);
      // Undeclared exception!
      try { 
        strBuilder5.replace(strMatcher0, "startIndex must be valid", 0, (-75), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      String string0 = "Gt.%\"/1Db,=U";
      StrBuilder strBuilder0 = new StrBuilder("Gt.%\"/1Db,=U");
      int int0 = (-1712);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "Gt.%\"/1Db,=U");
      int int1 = 0;
      int int2 = 2222;
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadLeft(0, 2222, 'r');
      StrBuilder strBuilder3 = new StrBuilder((-1712));
      int int3 = (-3555);
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder3, 5, (-3555));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(";a<_<Yd`S=!^unRH");
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators((Iterator) null, " /eSIe K=Cf");
      StrBuilder strBuilder3 = strBuilder0.appendNewLine();
      int int0 = strBuilder3.indexOf((String) null, 117);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("L\"o?~c2y90^UOz:7");
      int int0 = strBuilder0.length();
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "\\18Li]:nZ@\\u";
      StringBuffer stringBuffer0 = new StringBuffer(string0);
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      StrBuilder strBuilder2 = strBuilder0.replaceAll(']', ']');
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[4];
      charArray0[0] = ']';
      charArray0[1] = '_';
      charArray0[2] = ']';
      charArray0[3] = ']';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 656, 1937);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceAll('&', '&');
      StringBuffer stringBuffer0 = new StringBuffer("");
      // Undeclared exception!
      try { 
        strBuilder1.append(stringBuffer0, (-1659), 1376);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("[&2]!LRpR7|+Nm[");
      int int0 = 0;
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("[&2]!LRpR7|+Nm[", "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder0.insert(995, charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 995
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = strBuilder0.getChars((char[]) null);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.version");
      StrBuilder strBuilder1 = strBuilder0.replaceAll('k', '~');
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(273);
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("w=x");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      StrBuilder strBuilder2 = strBuilder0.setNewLineText("w=x");
      String string0 = strBuilder0.toString();
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadRight(1359, 1359, 'N');
      StrBuilder strBuilder4 = strBuilder0.replaceFirst((StrMatcher) strMatcher_NoMatcher0, "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      boolean boolean0 = strBuilder2.equals(strBuilder4);
      int int0 = strBuilder4.lastIndexOf((StrMatcher) strMatcher_NoMatcher0);
      boolean boolean1 = strBuilder1.endsWith("1.1");
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2541);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset("V<G");
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "V<G");
      boolean boolean0 = strBuilder0.endsWith("=?+");
      StrTokenizer strTokenizer1 = strBuilder0.asTokenizer();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      char[] charArray0 = new char[4];
      charArray0[0] = 'e';
      charArray0[1] = '_';
      charArray0[2] = 'm';
      charArray0[3] = 'b';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 2541, 2541);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("iniOQ2,");
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 0);
      StrBuilder strBuilder1 = new StrBuilder();
      boolean boolean0 = strBuilder0.equals(strBuilder1);
      StrBuilder strBuilder2 = strBuilder1.replaceAll(strMatcher0, "iniOQ2,");
      StrBuilder strBuilder3 = strBuilder1.appendWithSeparators((Iterator) null, "iniOQ2,");
      String string0 = strBuilder1.substring(0);
      // Undeclared exception!
      try { 
        strBuilder1.substring(1);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(114);
      boolean boolean0 = strBuilder0.startsWith("length must be valid");
      boolean boolean1 = strBuilder0.endsWith("length must be valid");
      // Undeclared exception!
      try { 
        strBuilder0.substring(114, 114);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = null;
      boolean boolean0 = strBuilder0.startsWith((String) null);
      int int0 = 0;
      char char0 = '?';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(0, 0, '?');
      LinkedList<String> linkedList0 = new LinkedList<String>();
      String string1 = "1.2";
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators((Collection) linkedList0, "1.2");
      int int1 = 4683;
      int int2 = 0;
      // Undeclared exception!
      try { 
        strBuilder2.toCharArray(4683, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.validateRange(0, 0);
      char[] charArray0 = new char[8];
      charArray0[0] = '&';
      charArray0[1] = 'z';
      charArray0[2] = '0';
      charArray0[3] = '`';
      charArray0[4] = 'j';
      charArray0[5] = '`';
      // Undeclared exception!
      try { 
        strBuilder0.getChars(2, (-877), charArray0, 2);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -877
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("");
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt((-2009), 'c');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2009
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      int int0 = 2;
      StrBuilder strBuilder0 = new StrBuilder(2);
      StrBuilder strBuilder1 = strBuilder0.replaceAll("oU!.!?g J!i^S", (String) null);
      // Undeclared exception!
      try { 
        strBuilder1.setCharAt(2, '$');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(108);
      StrBuilder strBuilder1 = strBuilder0.append((float) 108);
      boolean boolean0 = strBuilder0.contains('m');
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      int int0 = strBuilder0.indexOf((StrMatcher) strMatcher_NoMatcher0);
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      char[] charArray0 = new char[4];
      charArray0[0] = 'm';
      charArray0[1] = 'd';
      charArray0[2] = 'm';
      charArray0[3] = 'm';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder2 = strBuilder1.replaceAll(strMatcher0, "Y/p/Y");
      String string0 = strBuilder2.leftString(108);
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadRight(1406, (-2175), 'd');
      boolean boolean1 = strBuilder0.isEmpty();
      int int1 = strBuilder2.size();
      StrBuilder strBuilder4 = strBuilder1.setNewLineText("|");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(4);
      StrBuilder strBuilder5 = strBuilder0.append(charArray0);
      int int2 = 453;
      StrBuilder strBuilder6 = strBuilder5.append(charArray0);
      // Undeclared exception!
      try { 
        strBuilder2.insert((-2597), 453);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2597
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4.9");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('U');
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      StrBuilder strBuilder2 = strBuilder1.deleteAll("VxOJ/L1&AnR");
      StrBuilder strBuilder3 = strBuilder1.append(true);
      Object object0 = new Object();
      StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadRight(object0, 39, '2');
      StrBuilder strBuilder5 = strBuilder4.setNewLineText("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      StrBuilder strBuilder6 = strBuilder0.insert(39, "4.9");
      StrBuilder strBuilder7 = strBuilder6.append(39);
      boolean boolean0 = strBuilder1.contains("q*l:YW,=PI\"tv9");
      StrBuilder strBuilder8 = strBuilder6.replace(39, 39, "l");
      int int0 = strBuilder7.indexOf('_', (-641));
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) strMatcher0;
      objectArray0[1] = (Object) strBuilder7;
      objectArray0[2] = (Object) strBuilder5;
      objectArray0[3] = (Object) strBuilder2;
      objectArray0[4] = (Object) "l";
      objectArray0[5] = object0;
      objectArray0[6] = (Object) strBuilder1;
      StrBuilder strBuilder9 = strBuilder6.appendWithSeparators(objectArray0, "4.9");
      boolean boolean1 = strBuilder5.isEmpty();
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      int int0 = 5394;
      StrBuilder strBuilder0 = new StrBuilder(5394);
      StringBuffer stringBuffer0 = new StringBuffer();
      int int1 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 0, 699);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 422);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      LinkedList<StrBuilder> linkedList0 = new LinkedList<StrBuilder>();
      boolean boolean0 = linkedList0.add(strBuilder0);
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      boolean boolean1 = linkedList0.retainAll(linkedList1);
      boolean boolean2 = linkedList0.add(strBuilder0);
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "");
      boolean boolean3 = linkedList1.offerLast("");
      StrBuilder strBuilder2 = strBuilder1.trim();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.next();
      StrBuilder strBuilder3 = strBuilder2.appendFixedWidthPadLeft((Object) "org.apache.commons.lang.text.StrBuilder@0000000001", (-1133), '');
      String string1 = strBuilder2.leftString(2704);
      int int0 = 114;
      // Undeclared exception!
      try { 
        strBuilder0.insert(114, (float) 114);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 114
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      String string0 = "LyRKJSdQ";
      StrBuilder strBuilder0 = new StrBuilder("LyRKJSdQ");
      int int0 = 1419;
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("");
      StrBuilder strBuilder2 = strBuilder0.setNewLineText((String) null);
      int int1 = (-34);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      linkedList0.addFirst(object0);
      StrBuilder strBuilder3 = strBuilder2.appendWithSeparators((Collection) linkedList0, (String) null);
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder1.insert(1419, charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1419
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(", Length: 0");
      char[] charArray0 = new char[9];
      charArray0[0] = 'e';
      charArray0[1] = 'J';
      charArray0[2] = '5';
      charArray0[3] = '5';
      charArray0[4] = ')';
      charArray0[5] = 'Y';
      charArray0[6] = 'U';
      charArray0[7] = '%';
      charArray0[8] = 'T';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.replaceFirst((StrMatcher) strMatcher_CharSetMatcher0, ", Length: 0");
      StrMatcher strMatcher0 = StrMatcher.stringMatcher((String) null);
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher((String) null);
      StrMatcher strMatcher2 = StrMatcher.stringMatcher(", Length: 0");
      boolean boolean0 = strBuilder0.contains('X');
      int int0 = strBuilder0.indexOf((StrMatcher) strMatcher_CharSetMatcher0, 1437);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      StrBuilder strBuilder2 = new StrBuilder((-1));
      StrBuilder strBuilder3 = strBuilder2.append(strBuilder1);
      boolean boolean1 = strBuilder0.equals(strBuilder2);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
      StrBuilder strBuilder4 = strBuilder2.replaceAll(", L, Length: 0ngth: 0", ", Length: 0");
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.doubleQuoteMatcher();
      char[] charArray0 = new char[7];
      charArray0[0] = 'T';
      charArray0[1] = 'U';
      strBuilder0.validateIndex(0);
      charArray0[2] = 'g';
      charArray0[3] = 'a';
      charArray0[4] = 'p';
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("");
      charArray0[5] = 'G';
      charArray0[6] = '%';
      StrBuilder strBuilder1 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      // Undeclared exception!
      try { 
        strMatcher0.isMatch(charArray0, 673, 673, 673);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      String string0 = "Invalid length: ";
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("Invalid length: ");
      StrBuilder strBuilder2 = strBuilder1.ensureCapacity(0);
      char[] charArray0 = new char[5];
      charArray0[0] = 'z';
      charArray0[1] = 'J';
      charArray0[2] = '-';
      charArray0[3] = 'l';
      charArray0[4] = '_';
      // Undeclared exception!
      try { 
        strBuilder2.getChars(0, (-2686), charArray0, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2686
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-318));
      StrBuilder strBuilder1 = new StrBuilder();
      boolean boolean0 = strBuilder0.equals(strBuilder1);
      char[] charArray0 = new char[2];
      charArray0[0] = 'n';
      charArray0[1] = 'b';
      // Undeclared exception!
      try { 
        strBuilder1.getChars(0, (-2046), charArray0, 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2046
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      int int0 = (-2632);
      StrBuilder strBuilder0 = new StrBuilder((-2632));
      StrBuilder strBuilder1 = strBuilder0.append(true);
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) strBuilder1;
      objectArray0[1] = (Object) strBuilder1;
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators(objectArray0, "HP-UX");
      StrBuilder strBuilder3 = strBuilder0.minimizeCapacity();
      StrBuilder strBuilder4 = strBuilder3.clear();
      String string0 = strBuilder3.toString();
      StrBuilder strBuilder5 = new StrBuilder("");
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("V%");
      int int1 = strBuilder5.indexOf((StrMatcher) strMatcher_StringMatcher0);
      StrBuilder strBuilder6 = strBuilder5.append(":%G;O1!8{~VzU~");
      StrBuilder strBuilder7 = strBuilder6.replaceAll((StrMatcher) strMatcher_StringMatcher0, "mbm");
      // Undeclared exception!
      try { 
        strBuilder5.validateRange((-2632), (-2632));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2632
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[8];
      charArray0[0] = 'H';
      charArray0[1] = 'g';
      charArray0[2] = 'y';
      charArray0[3] = 'M';
      charArray0[4] = 'Z';
      charArray0[5] = 'o';
      charArray0[6] = '?';
      charArray0[7] = 'm';
      strBuilder_StrBuilderWriter0.write(charArray0, 0, 0);
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      boolean boolean0 = strBuilder0.contains((StrMatcher) strMatcher_NoMatcher0);
      char[] charArray1 = new char[7];
      charArray1[0] = 'M';
      charArray1[1] = '?';
      charArray1[2] = 'H';
      charArray1[3] = 'm';
      charArray1[4] = 'M';
      charArray1[5] = '?';
      charArray1[6] = 'y';
      StrBuilder strBuilder1 = strBuilder0.append(charArray1);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      boolean boolean0 = strBuilder0.equals(object0);
      int int0 = 0;
      char char0 = 'z';
      StrBuilder strBuilder1 = strBuilder0.insert(0, 'z');
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      char[] charArray0 = new char[6];
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight(0, 34, 's');
      charArray0[0] = 'z';
      charArray0[1] = 'z';
      charArray0[2] = 'z';
      charArray0[3] = 'z';
      charArray0[4] = 'z';
      charArray0[5] = 'z';
      StrBuilder strBuilder3 = strBuilder1.insert(0, charArray0);
      StrBuilder strBuilder4 = strBuilder0.appendWithSeparators((Collection) linkedList0, "StrTokenizer");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      StrBuilder strBuilder5 = strBuilder3.deleteCharAt(0);
      // Undeclared exception!
      try { 
        strBuilder5.append(charArray0, 5755, 34);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 34
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.insert(0, (float) 0);
      char[] charArray0 = new char[3];
      charArray0[0] = 'x';
      charArray0[1] = '.';
      charArray0[2] = 'o';
      strBuilder1.buffer = charArray0;
      int int0 = strBuilder0.indexOf("java.awt.graphicsenv");
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replace(0, 3, "");
      String string0 = strBuilder1.rightString(1315);
      int int0 = strBuilder0.hashCode();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("{p*c/O\u0006%ONtRiP)", 2117, 2117);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.lastIndexOf(']', 1899);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("'AWIs\u0007x%>s[7VB~K7");
      StrBuilder strBuilder1 = strBuilder0.deleteAll("'AWIs\u0007x%>s[7VB~K7");
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      // Undeclared exception!
      try { 
        strBuilder1.replace(strMatcher0, "'AWIs\u0007x%>s[7VB~K7", (-1074), 0, 254);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1074
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      int int0 = 57;
      StrBuilder strBuilder0 = new StrBuilder(57);
      String string0 = "";
      StrBuilder strBuilder1 = strBuilder0.append(false);
      // Undeclared exception!
      try { 
        strBuilder0.append("", 57, 57);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.toString();
      int int0 = strBuilder0.indexOf("", 97);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder0.insert(3, charArray0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 2900;
      // Undeclared exception!
      try { 
        strBuilder0.insert(2900, 2900);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2900
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-1577);
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt((-1577));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1577
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("ZK+mWn^j`");
      int int0 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.replace((StrMatcher) null, "ZK+mWn^j`", 3, 0, 3);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt((-796));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -796
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("UnIKOzWX0b0m[Q-");
      StrBuilder strBuilder1 = new StrBuilder("UnIKOzWX0b0m[Q-");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrBuilder strBuilder2 = strBuilder0.replaceFirst(strMatcher0, "");
      StrBuilder strBuilder3 = strBuilder0.deleteCharAt(0);
      StrBuilder strBuilder4 = strBuilder3.replace(0, 0, ", Length: ");
      StrBuilder strBuilder5 = strBuilder0.deleteCharAt(9);
      StrBuilder strBuilder6 = strBuilder1.setLength(902);
      StrBuilder strBuilder7 = strBuilder4.append((-1.0F));
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("]H#D[5UxcVh1hAy");
      int int0 = (-2231);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-2231), false);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2231
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      int int0 = 1753;
      StrBuilder strBuilder0 = new StrBuilder(1753);
      char[] charArray0 = new char[5];
      charArray0[0] = 'E';
      charArray0[1] = '$';
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      charArray0[2] = 'v';
      charArray0[3] = 'H';
      charArray0[4] = '|';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 0, 275);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 275
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      int int0 = (-1180);
      StrBuilder strBuilder0 = new StrBuilder((-1180));
      Writer writer0 = strBuilder0.asWriter();
      String string0 = "*FHo[1NYM";
      int int1 = strBuilder0.lastIndexOf("*FHo[1NYM", 1);
      StrBuilder strBuilder1 = new StrBuilder((-1180));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      char[] charArray0 = new char[2];
      charArray0[0] = '6';
      charArray0[1] = 'y';
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      int int2 = 411;
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) strBuilder1;
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.previous();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("ZV$v-I:;m_,|D");
      boolean boolean0 = strBuilder0.contains("ZV$v-I:;m_,|D");
      StrMatcher strMatcher0 = StrMatcher.charMatcher('@');
      StrMatcher strMatcher1 = StrMatcher.charMatcher('3');
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      int int0 = strBuilder1.indexOf('@');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[7];
      charArray0[0] = '@';
      charArray0[1] = '@';
      charArray0[2] = '3';
      charArray0[3] = '@';
      charArray0[4] = '@';
      charArray0[5] = '@';
      charArray0[6] = '@';
      strBuilder_StrBuilderWriter0.write(charArray0);
      strBuilder_StrBuilderWriter0.flush();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray1 = new char[7];
      charArray1[0] = '@';
      charArray1[1] = '3';
      charArray1[2] = '@';
      charArray1[3] = '@';
      charArray1[4] = '@';
      charArray1[5] = '@';
      charArray1[6] = '3';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray1, 101, 101);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = (-1090);
      long long0 = (-519L);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1090), (-519L));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1090
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      String string0 = "Wq/&_b\"![";
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("A-F(n+mY9bu+^a\"58", "Wq/&_b\"![");
      int int0 = 0;
      StrBuilder strBuilder2 = strBuilder0.delete(0, 0);
      // Undeclared exception!
      try { 
        strBuilder2.substring((-1749));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1749
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("ZV$v-I:;m_,|D");
      boolean boolean0 = strBuilder0.contains("ZV$v-I:;m_,|D");
      StrMatcher strMatcher0 = StrMatcher.charMatcher('@');
      StrMatcher strMatcher1 = StrMatcher.charMatcher('3');
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      int int0 = strBuilder1.indexOf('@');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[7];
      charArray0[0] = '@';
      charArray0[1] = '3';
      charArray0[2] = '@';
      charArray0[3] = '@';
      charArray0[4] = '@';
      charArray0[5] = '@';
      charArray0[6] = '3';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 101, 101);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(350);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[1];
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 350, 899);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1292));
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, (String) null);
      StrBuilder strBuilder2 = strBuilder1.deleteFirst("");
      StrBuilder strBuilder3 = strBuilder1.deleteAll(strMatcher0);
      StrBuilder strBuilder4 = strBuilder3.append('#');
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder3.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
      int int0 = strBuilder2.hashCode();
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) strBuilder4;
      objectArray0[1] = (Object) strBuilder3;
      objectArray0[2] = (Object) strBuilder_StrBuilderWriter0;
      objectArray0[3] = (Object) strMatcher1;
      objectArray0[4] = (Object) strMatcher1;
      objectArray0[5] = (Object) strBuilder0;
      StrBuilder strBuilder5 = strBuilder0.appendWithSeparators(objectArray0, "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.deleteAll('b');
      StrBuilder strBuilder2 = strBuilder1.setNewLineText("P2Qo");
      strBuilder1.size = 0;
      StrBuilder strBuilder3 = strBuilder0.insert(0, 0);
      StrTokenizer strTokenizer0 = strBuilder2.asTokenizer();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      char[] charArray0 = new char[9];
      charArray0[0] = 'b';
      charArray0[1] = 'b';
      charArray0[2] = 'b';
      charArray0[3] = 'b';
      charArray0[4] = 'b';
      charArray0[5] = 'J';
      charArray0[6] = '3';
      charArray0[7] = 'b';
      charArray0[8] = 'b';
      int int0 = strBuilder_StrBuilderReader0.read(charArray0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      int int0 = 0;
      String string0 = strBuilder0.substring(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string1 = strBuilder0.getNullText();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[2];
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 0, 2434);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[0];
      int int0 = strBuilder_StrBuilderReader0.read(charArray0);
      strBuilder_StrBuilderReader0.reset();
      char[] charArray1 = new char[4];
      charArray1[0] = 'x';
      charArray1[1] = '@';
      charArray1[2] = 'I';
      charArray1[3] = '}';
      // Undeclared exception!
      try { 
        strBuilder0.getChars((-1970), 0, charArray1, (-1970));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1970
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(0, 0, ',');
      StrTokenizer strTokenizer0 = strBuilder0.asTokenizer();
      StrBuilder strBuilder2 = strBuilder0.replaceAll('J', '[');
      boolean boolean0 = strBuilder2.equals(strBuilder0);
      LinkedList<StrBuilder> linkedList0 = new LinkedList<StrBuilder>();
      StrBuilder strBuilder3 = strBuilder0.appendWithSeparators((Collection) linkedList0, "a$iSz<O>");
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder1 = strBuilder0.reverse();
      int int0 = (-1524);
      StrBuilder strBuilder2 = strBuilder1.deleteAll('5');
      String string0 = strBuilder2.midString((-1524), (-1524));
      String string1 = "";
      char[] charArray0 = new char[1];
      charArray0[0] = '5';
      strBuilder2.buffer = charArray0;
      // Undeclared exception!
      try { 
        strBuilder2.insert((-1524), "");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1524
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.validateRange((-2187), 1299);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2187
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.insert(0, (long) 0);
      StrBuilder strBuilder2 = strBuilder1.replaceFirst(']', 'p');
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('p');
      StrBuilder strBuilder3 = strBuilder1.delete(0, 34);
      boolean boolean0 = strBuilder2.contains((StrMatcher) strMatcher_CharMatcher0);
      StrBuilder strBuilder4 = strBuilder1.deleteAll((StrMatcher) null);
      StrBuilder strBuilder5 = strBuilder1.setNewLineText((String) null);
      StrBuilder strBuilder6 = strBuilder2.deleteAll((String) null);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 2810;
      // Undeclared exception!
      try { 
        strBuilder0.insert(2810, (-1L));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2810
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setNullText("");
      StrBuilder strBuilder2 = strBuilder1.append((-2759L));
      String string0 = "Invalid startIndex: ";
      int int0 = 108;
      // Undeclared exception!
      try { 
        strBuilder2.replace((-205), 108, "Invalid startIndex: ");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -205
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.reverse();
      int int0 = (-2926);
      int int1 = 0;
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, (-2926), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1889));
      StrBuilder strBuilder1 = new StrBuilder("}w>-q(q%[J49");
      StrBuilder strBuilder2 = strBuilder1.deleteAll('P');
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, (-629), 775);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) strBuilder0;
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "java.awt.fonts");
      char[] charArray0 = new char[4];
      charArray0[0] = 'X';
      charArray0[1] = 'e';
      String string0 = strBuilder0.substring(4, 4);
      charArray0[2] = '(';
      charArray0[3] = '\'';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      boolean boolean0 = strBuilder0.contains((StrMatcher) strMatcher_CharSetMatcher0);
      char[] charArray1 = strBuilder1.toCharArray();
      boolean boolean1 = strBuilder1.contains(strMatcher1);
      char[] charArray2 = strBuilder1.toCharArray();
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 1675;
      char char0 = '\'';
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(1675, 1675, '\'');
      String string0 = strBuilder1.leftString(1675);
      String string1 = "";
      // Undeclared exception!
      try { 
        strBuilder0.append("", 172, 172);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1));
      StrBuilder strBuilder1 = strBuilder0.appendPadding((-1), 'I');
      int int0 = strBuilder0.lastIndexOf((StrMatcher) null);
      StrBuilder strBuilder2 = strBuilder0.replaceAll(';', '2');
      char[] charArray0 = new char[2];
      charArray0[0] = 'I';
      charArray0[1] = 'I';
      String string0 = strBuilder1.leftString((-84));
      int int1 = 0;
      StrBuilder strBuilder3 = strBuilder1.append(charArray0, 0, 0);
      char char0 = 'N';
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray((-2355), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2355
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      String string0 = "";
      StrBuilder strBuilder0 = new StrBuilder("");
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("tt$52$ri&s3S?w");
      StrMatcher strMatcher2 = StrMatcher.charMatcher('Q');
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      int int0 = 919;
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      // Undeclared exception!
      try { 
        strBuilder0.insert(919, object0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 919
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1488);
      StrBuilder strBuilder1 = strBuilder0.append((long) 1488);
      StrBuilder strBuilder2 = new StrBuilder();
      StrBuilder strBuilder3 = strBuilder2.ensureCapacity(1488);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      String string0 = "end < start";
      StrBuilder strBuilder4 = strBuilder3.appendWithSeparators((Collection) linkedList0, "end < start");
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder2);
      StrBuilder strBuilder5 = strBuilder4.deleteFirst("end < start");
      int int0 = (-2547);
      // Undeclared exception!
      try { 
        strBuilder1.appendFixedWidthPadRight((-2547), Integer.MAX_VALUE, 'a');
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = '8';
      StrBuilder strBuilder1 = strBuilder0.appendPadding((-1743), '8');
      String string0 = strBuilder1.midString((-1743), (-1743));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      String string1 = strBuilder0.getNewLineText();
      StrBuilder strBuilder2 = strBuilder1.append((long) (-1));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('8');
      StrBuilder strBuilder3 = strBuilder0.replaceFirst(strMatcher0, "+D@A~i*4m0c6!eFc+");
      int int1 = strBuilder3.size();
      int int2 = strBuilder1.indexOf('8', (-1));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((String) null);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("", (-1176), (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-630));
      int int0 = strBuilder0.indexOf((StrMatcher) null, (-630));
      StrBuilder strBuilder1 = new StrBuilder("");
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadLeft((Object) strBuilder1, (-630), '%');
      StrBuilder strBuilder3 = new StrBuilder("Vv4iAGWtO/Y{le^g");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder3.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write("Vv4iAGWtO/Y{le^g");
      strBuilder_StrBuilderWriter0.write((-630));
      int int1 = strBuilder1.lastIndexOf('%');
      StrBuilder strBuilder4 = strBuilder3.append(1L);
      char[] charArray0 = new char[2];
      charArray0[0] = 'Y';
      charArray0[1] = '%';
      strBuilder_StrBuilderWriter0.write(charArray0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      String string0 = null;
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      int int0 = 168;
      // Undeclared exception!
      try { 
        strBuilder0.insert(168, (Object) null);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 168
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("',c!m%#z");
      // Undeclared exception!
      try { 
        strBuilder0.insert((-2664), (Object) "',c!m%#z");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2664
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      String string0 = "T4$$LU]";
      StrBuilder strBuilder0 = new StrBuilder("T4$$LU]");
      StrBuilder strBuilder1 = new StrBuilder();
      strBuilder1.size = 0;
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, 0, (-1751));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2011);
      String string0 = "odg(";
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder1 = strBuilder0.append("odg(");
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("odg(");
      StrBuilder strBuilder2 = strBuilder0.deleteAll(strMatcher0);
      StrBuilder strBuilder3 = strBuilder2.append(strBuilder1);
      // Undeclared exception!
      try { 
        strBuilder3.substring((-2240), 0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2240
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(34);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "fc2:H];ZF%");
      // Undeclared exception!
      try { 
        strBuilder0.insert(383, (float) 383);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 383
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      StrBuilder strBuilder1 = strBuilder0.setLength(0);
      Iterator<Integer> iterator0 = linkedList0.descendingIterator();
      StrBuilder strBuilder2 = strBuilder0.appendWithSeparators(iterator0, "");
      StrBuilder strBuilder3 = strBuilder0.append("");
      int int0 = strBuilder2.lastIndexOf("org.apache.commons.lang.text.StrTokenizer", 0);
      StrBuilder strBuilder4 = strBuilder2.appendFixedWidthPadRight((-1), 0, 'H');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[8];
      charArray0[0] = 'H';
      charArray0[1] = 'H';
      charArray0[2] = 'H';
      charArray0[3] = 'H';
      charArray0[4] = 'H';
      charArray0[5] = 'H';
      charArray0[6] = 'H';
      charArray0[7] = 'H';
      strBuilder_StrBuilderWriter0.write(charArray0);
      strBuilder_StrBuilderWriter0.close();
      StrBuilder strBuilder5 = strBuilder0.setNewLineText("org.apache.commons.lang.text.StrTokenizer");
      // Undeclared exception!
      try { 
        strBuilder2.append(strBuilder1, 0, 1856);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      String string0 = "end < start";
      StrBuilder strBuilder0 = new StrBuilder("end < start");
      int int0 = 34;
      // Undeclared exception!
      try { 
        strBuilder0.validateIndex(34);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 34
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      int int0 = 39;
      StrBuilder strBuilder0 = new StrBuilder(39);
      char char0 = 'X';
      // Undeclared exception!
      try { 
        strBuilder0.insert(39, 'X');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 39
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.replaceFirst((StrMatcher) null, "");
      StrBuilder strBuilder2 = strBuilder0.append("M5a*Wb>1</+<", 0, 0);
      StrBuilder strBuilder3 = strBuilder2.deleteFirst('$');
      boolean boolean0 = strBuilder2.contains("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
      // Undeclared exception!
      try { 
        strBuilder3.insert((-251), '$');
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -251
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("user.timezone");
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      int int0 = strBuilder0.indexOf('d', 44);
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('T');
      StrMatcher strMatcher2 = StrMatcher.stringMatcher("user.timezone");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) stringBuffer0, 44, '4');
      StrBuilder strBuilder2 = strBuilder0.replaceAll(strMatcher0, "s%");
      StrBuilder strBuilder3 = strBuilder2.replaceAll("user.timezone", "user.timezone");
      String string1 = strBuilder_StrBuilderTokenizer0.getContent();
      StrMatcher strMatcher3 = StrMatcher.charSetMatcher("user.timezone44444444444java.lang.StringBuffer@0000000005");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[1];
      charArray0[0] = 'd';
      strBuilder_StrBuilderWriter0.write(charArray0);
      StrBuilder strBuilder4 = strBuilder2.appendFixedWidthPadLeft((-3351), 44, 'T');
      strBuilder_StrBuilderWriter0.close();
      StrBuilder strBuilder5 = strBuilder0.setNewLineText("user.timezone44444444444java.lang.StringBuffer@0000000005");
      StrBuilder strBuilder6 = strBuilder3.clear();
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) "user.timezone";
      objectArray0[1] = (Object) "user.timezone";
      objectArray0[2] = (Object) strBuilder1;
      objectArray0[3] = (Object) strMatcher2;
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      objectArray0[4] = object0;
      StrBuilder strBuilder7 = strBuilder3.appendWithSeparators(objectArray0, "%MjdrYpN#");
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder");
      StrBuilder strBuilder1 = strBuilder0.appendPadding(5, 's');
      StrBuilder strBuilder2 = strBuilder0.appendNewLine();
      int int0 = strBuilder2.indexOf('D');
      int int1 = strBuilder0.capacity();
      StrBuilder strBuilder3 = strBuilder1.replaceAll("org.apache.commons.lang.text.StrBuilder", "");
      int int2 = strBuilder1.hashCode();
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(349);
      StrBuilder strBuilder1 = strBuilder0.replaceAll("yd,R=p", "yd,R=p");
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("k;p+'0aYw(^%");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) "k;p+'0aYw(^%", 1065, ' ');
      StrBuilder strBuilder2 = strBuilder1.setNullText("BZ=]`+kVk5=Am");
      StrBuilder strBuilder3 = strBuilder1.append('W');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("BZ=]`+kVk5=Am");
      StrBuilder strBuilder4 = strBuilder0.deleteFirst((StrMatcher) strMatcher_StringMatcher0);
      // Undeclared exception!
      try { 
        strBuilder1.replace(1065, 0, "D,W0%(How(t$_?");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      int int0 = (-2629);
      StrBuilder strBuilder0 = new StrBuilder((-2629));
      Object object0 = new Object();
      StrBuilder strBuilder1 = strBuilder0.append(object0);
      int int1 = strBuilder0.lastIndexOf((String) null);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[4];
      charArray0[0] = 'y';
      charArray0[1] = '>';
      charArray0[2] = 'e';
      charArray0[3] = '`';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, (-1), 32);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2337);
      StrMatcher strMatcher0 = StrMatcher.tabMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('\'');
      StrMatcher strMatcher2 = StrMatcher.stringMatcher(">CXmdN6Nk84T#2r3Y%");
      int int0 = strBuilder0.lastIndexOf(strMatcher1);
      StrMatcher strMatcher3 = StrMatcher.charSetMatcher("_SYmV]k4d");
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "8y~jP:`b");
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) strMatcher0;
      StrBuilder strBuilder2 = strBuilder1.appendWithSeparators(objectArray0, "8y~jP:`b");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder2.new StrBuilderReader();
      int int1 = strBuilder_StrBuilderReader0.read();
      // Undeclared exception!
      try { 
        strBuilder2.append("Invalid offset: ", (-300), 2337);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      String string0 = "Linux";
      StrBuilder strBuilder0 = new StrBuilder("Linux");
      int int0 = (-1660);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1660), (double) (-1660));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1660
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1292));
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("");
      Object[] objectArray0 = new Object[6];
      objectArray0[3] = (Object) strMatcher0;
      objectArray0[4] = (Object) strMatcher0;
      // Undeclared exception!
      try { 
        strBuilder0.append("", (-1292), (-1292));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      int int0 = 1614;
      StrBuilder strBuilder0 = new StrBuilder(1614);
      // Undeclared exception!
      try { 
        strBuilder0.append("J'b',CRJ(s7g", 1614, 1614);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Ro[EAJ5");
      StrBuilder strBuilder1 = strBuilder0.insert(0, (double) 0);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(0);
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      char[] charArray0 = new char[4];
      charArray0[0] = 'u';
      charArray0[1] = 'T';
      charArray0[2] = '0';
      charArray0[3] = '>';
      int int0 = strMatcher0.isMatch(charArray0, 0, 3850, (-1832));
      StrBuilder strBuilder2 = strBuilder0.appendFixedWidthPadRight(object0, (-1044), '0');
      StrBuilder strBuilder3 = strBuilder2.append(true);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(0, 0, 'Q');
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight(0, (-2014), 'Q');
      int int0 = strBuilder1.indexOf(strMatcher0, 0);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      String string0 = strBuilder1.rightString(0);
      StrBuilder strBuilder3 = strBuilder0.replaceFirst('Q', '$');
      // Undeclared exception!
      try { 
        strBuilder3.insert((-1), "#|oT-3");
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = 97;
      // Undeclared exception!
      try { 
        strBuilder0.charAt(97);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 97
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((-1381), (-1381), '[');
      StrBuilder strBuilder2 = strBuilder1.append(34);
      // Undeclared exception!
      try { 
        strBuilder0.setLength((-1381));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1381
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      Reader reader0 = strBuilder0.asReader();
      char[] charArray0 = new char[3];
      charArray0[0] = 'H';
      charArray0[1] = 'v';
      charArray0[2] = '-';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, (-114), 121);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 121
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.toString();
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher("");
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "BPKxx9nL2c`B");
      StrBuilder strBuilder2 = strBuilder1.append(strBuilder0);
      StrBuilder strBuilder3 = strBuilder2.append(strBuilder1, 0, 0);
      int int0 = strBuilder0.lastIndexOf("", (-238));
      char[] charArray0 = strBuilder1.toCharArray();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterString("BPKxx9nL2c`B");
      StrBuilder strBuilder4 = strBuilder2.appendWithSeparators((Iterator) strTokenizer0, "0j;d1vN;");
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.append('u');
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(0);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(117);
      String string0 = strBuilder0.getNewLineText();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[6];
      strBuilder_StrBuilderWriter0.write(charArray0);
      charArray0[0] = 'l';
      charArray0[1] = 'A';
      charArray0[2] = 'g';
      charArray0[3] = '8';
      charArray0[4] = '+';
      charArray0[5] = '?';
      strBuilder_StrBuilderWriter0.write(charArray0);
      StrBuilder strBuilder1 = strBuilder0.append((float) 117);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder1.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      int int0 = strBuilder1.indexOf(strMatcher0);
      StrBuilder strBuilder2 = strBuilder0.trim();
      StrBuilder strBuilder3 = strBuilder0.append((Object) "Invalid offset: ");
      StrBuilder strBuilder4 = strBuilder3.deleteFirst((String) null);
      StringBuffer stringBuffer0 = new StringBuffer("Invalid offset: ");
      StrBuilder strBuilder5 = strBuilder2.append(stringBuffer0);
      StrBuilder strBuilder6 = strBuilder2.ensureCapacity(548);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      String string0 = strBuilder0.rightString((-3713));
      StrBuilder strBuilder1 = strBuilder0.append((String) null, (-3713), 2);
      int int0 = strBuilder0.lastIndexOf((StrMatcher) null, 1979);
      Reader reader0 = strBuilder0.asReader();
      StrBuilder strBuilder2 = strBuilder1.append((String) null);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[3];
      String string0 = strBuilder0.rightString(108);
      charArray0[0] = 'P';
      charArray0[1] = ')';
      charArray0[2] = 'P';
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 883, 5);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 5
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      int int0 = strBuilder0.indexOf("NPV:gO$bc.>Go", 0);
      int int1 = strBuilder0.hashCode();
      int int2 = strBuilder0.capacity();
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = new StringBuffer("O7(^");
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 31, (-2103));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.trim();
      StrBuilder strBuilder2 = strBuilder1.append(strBuilder0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getTrimmerMatcher();
      String string0 = strBuilder0.midString(4, 4);
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("");
      StrBuilder strBuilder3 = strBuilder0.replace(strMatcher0, "", 0, 0, 408);
      StrBuilder strBuilder4 = strBuilder3.append(330.0);
      StrBuilder strBuilder5 = new StrBuilder(408);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder5.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip((-827L));
      char char0 = strBuilder1.charAt(0);
      StrBuilder strBuilder6 = strBuilder3.deleteAll(strMatcher1);
      StrBuilder strBuilder7 = strBuilder3.ensureCapacity(0);
      // Undeclared exception!
      try { 
        strBuilder3.delete(3879, 408);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getQuoteMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "org.apache.commons.lang.text.StrBuilder");
      StrBuilder strBuilder2 = strBuilder1.append(strBuilder0);
      StrBuilder strBuilder3 = strBuilder0.appendFixedWidthPadRight(0, 311, '&');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      StrBuilder strBuilder4 = strBuilder3.trim();
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      // Undeclared exception!
      try { 
        strBuilder0.charAt(0);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(0.0);
      StrBuilder strBuilder2 = strBuilder0.reverse();
      char[] charArray0 = new char[6];
      charArray0[0] = 'k';
      charArray0[1] = '|';
      charArray0[2] = '>';
      charArray0[3] = '';
      charArray0[4] = 'b';
      charArray0[5] = 'O';
      strBuilder0.buffer = charArray0;
      String string0 = strBuilder0.toString();
      char[] charArray1 = new char[0];
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray1);
      StrBuilder strBuilder3 = strBuilder0.replaceFirst((StrMatcher) strMatcher_CharSetMatcher0, "k|>");
      int int0 = strBuilder0.lastIndexOf("k|>", 0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("EbyAl");
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "EbyAl");
      boolean boolean0 = strBuilder0.endsWith("/1");
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("tm#cGa`");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[0];
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      int int0 = 0;
      int int1 = (-2024);
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 0, (-2024));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: -2024
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((-888), (-888), 'm');
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      String string0 = null;
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        strBuilder1.append(stringBuffer0, (-4), (-888));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      String string0 = "Caught a SecurityException reading the system property '";
      StrBuilder strBuilder0 = new StrBuilder("Caught a SecurityException reading the system property '");
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance("Caught a SecurityException reading the system property '");
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "ALVBKDUs");
      char[] charArray0 = new char[5];
      charArray0[0] = '0';
      charArray0[1] = 'D';
      charArray0[2] = '/';
      charArray0[3] = 'n';
      charArray0[4] = '>';
      StrBuilder strBuilder2 = strBuilder0.insert(4, charArray0);
      StrBuilder strBuilder3 = strBuilder0.insert(4, 4);
      String string1 = strBuilder2.substring(4);
      Writer writer0 = strBuilder3.asWriter();
      StrBuilder strBuilder4 = strBuilder2.append((-1));
      StrBuilder strBuilder5 = strBuilder1.deleteFirst("ALVBKDUs");
      // Undeclared exception!
      try { 
        strBuilder1.insert((-1), charArray0, 4, 4414);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((Object) null);
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      char[] charArray0 = new char[5];
      charArray0[0] = '^';
      charArray0[1] = '}';
      charArray0[2] = 'N';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      charArray0[3] = '3';
      charArray0[4] = ':';
      StrMatcher strMatcher1 = StrMatcher.charSetMatcher(charArray0);
      // Undeclared exception!
      try { 
        strBuilder1.insert(91, 0.0F);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 91
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.appendNull();
      int int0 = strBuilder0.lastIndexOf((StrMatcher) null);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder2 = strBuilder0.append(stringBuffer0);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.clear();
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      StrBuilder strBuilder2 = strBuilder1.deleteAll(strMatcher0);
      StrBuilder strBuilder3 = strBuilder1.clear();
      StrBuilder strBuilder4 = strBuilder0.append("O(w)8V;t=`");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder4.new StrBuilderTokenizer();
      char[] charArray0 = new char[7];
      charArray0[0] = 'i';
      Object object0 = strBuilder_StrBuilderTokenizer0.cloneReset();
      charArray0[1] = 'n';
      charArray0[2] = '6';
      charArray0[3] = '<';
      charArray0[4] = '/';
      charArray0[5] = '4';
      charArray0[6] = '*';
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 3532, 1665);
      StrBuilder strBuilder5 = strBuilder0.ensureCapacity(3532);
      // Undeclared exception!
      try { 
        strBuilder5.substring(44);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("startIndex must be valid");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      Writer writer0 = strBuilder_StrBuilderWriter0.append((CharSequence) "startIndex must be valid");
      strBuilder_StrBuilderWriter0.close();
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("+X!D");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[0];
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StrBuilder strBuilder2 = new StrBuilder();
      StrBuilder strBuilder3 = strBuilder2.append(charArray0, 0, 0);
      StrBuilder strBuilder4 = strBuilder0.append(strBuilder2);
      StringBuffer stringBuffer0 = strBuilder4.toStringBuffer();
      StrBuilder strBuilder5 = strBuilder0.replaceFirst("java.io.tmpdir", "java.io.tmpdir");
      char[] charArray1 = new char[2];
      charArray1[0] = '^';
      charArray1[1] = 'w';
      strBuilder5.buffer = charArray1;
      boolean boolean0 = strBuilder0.isEmpty();
      char[] charArray2 = strBuilder0.toCharArray(0, 0);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder3.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getDelimiterMatcher();
      boolean boolean1 = strBuilder5.contains(strMatcher0);
      String string0 = strBuilder3.substring(0);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("", 0, 1668);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("J-e5");
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray(116, 115);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      char[] charArray0 = new char[9];
      charArray0[0] = 'd';
      charArray0[1] = 'q';
      charArray0[2] = '.';
      charArray0[3] = 'q';
      charArray0[4] = ';';
      charArray0[5] = 'N';
      charArray0[6] = 'S';
      charArray0[7] = '(';
      charArray0[8] = '}';
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst((StrMatcher) strMatcher_TrimMatcher0);
      boolean boolean0 = strBuilder0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      int int0 = strBuilder0.hashCode();
      StrBuilder strBuilder1 = strBuilder0.trim();
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.setNewLineText("");
      StrBuilder strBuilder2 = strBuilder0.deleteFirst('y');
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.ready();
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[4];
      charArray0[0] = 'x';
      charArray0[1] = 'g';
      charArray0[2] = 'C';
      charArray0[3] = 'H';
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.tokenize(charArray0, 57, 1126);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      int int0 = 101;
      StrBuilder strBuilder0 = new StrBuilder(101);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset();
      List list0 = strBuilder_StrBuilderTokenizer0.tokenize((char[]) null, 1524, 101);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderTokenizer0.previous();
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = "";
      // Undeclared exception!
      try { 
        strBuilder0.delete(913, 913);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      // Undeclared exception!
      try { 
        strBuilder0.substring((-2433));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2433
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      int int0 = strBuilder0.indexOf(strMatcher0, 0);
      StrMatcher strMatcher1 = StrMatcher.stringMatcher("!'!Av M0g:y20NQ;e");
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher1);
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("user.timezone");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      int int0 = strBuilder0.indexOf('d', 44);
      StrMatcher strMatcher0 = StrMatcher.quoteMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('T');
      StrMatcher strMatcher2 = StrMatcher.stringMatcher("user.timezone");
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "s%");
      StrBuilder strBuilder2 = strBuilder1.replaceAll("user.timezone", "user.timezone");
      String string1 = strBuilder_StrBuilderTokenizer0.getContent();
      StrMatcher strMatcher3 = StrMatcher.charSetMatcher("user.timezone");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[1];
      charArray0[0] = 'd';
      strBuilder_StrBuilderWriter0.write(charArray0);
      StrBuilder strBuilder3 = strBuilder1.appendFixedWidthPadLeft(108, 44, 'T');
      strBuilder_StrBuilderWriter0.close();
      StrBuilder strBuilder4 = strBuilder0.setNewLineText("user.timezone");
      StrBuilder strBuilder5 = strBuilder2.clear();
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) "user.timezone";
      objectArray0[1] = (Object) "user.timezone";
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      objectArray0[4] = object0;
      StrBuilder strBuilder6 = strBuilder2.appendWithSeparators(objectArray0, "%MjdrYpN#");
      Writer writer0 = strBuilder4.asWriter();
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char char0 = '8';
      StrBuilder strBuilder1 = strBuilder0.appendPadding((-1743), '8');
      String string0 = strBuilder1.midString((-1743), (-1743));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      String string1 = strBuilder0.getNewLineText();
      StrBuilder strBuilder2 = strBuilder1.append((long) (-1));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrMatcher strMatcher0 = strBuilder_StrBuilderTokenizer0.getIgnoredMatcher();
      StrMatcher strMatcher1 = StrMatcher.charMatcher('8');
      StrBuilder strBuilder3 = strBuilder0.replaceFirst(strMatcher0, "+D@A~i*4m0c6!eFc+");
      int int1 = strBuilder1.indexOf('8', (-1));
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((String) null);
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("", (int) '8', (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1178));
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      StrBuilder strBuilder1 = strBuilder0.append((-1));
      StrBuilder strBuilder2 = strBuilder0.setNewLineText("kpR");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder1.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(0L);
      StrBuilder strBuilder3 = strBuilder0.append((float) 0L);
      int int1 = strBuilder0.capacity();
      // Undeclared exception!
      try { 
        strBuilder0.insert(32, (float) 32);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      int int0 = 1698;
      StrBuilder strBuilder0 = new StrBuilder(1698);
      StrBuilder strBuilder1 = strBuilder0.deleteAll("");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      strBuilder1.size = 929;
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("e}[)j:|=mLF{L");
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.setDelimiterMatcher(strMatcher_StringMatcher0);
      int int1 = strBuilder0.indexOf((StrMatcher) null);
      StrTokenizer strTokenizer1 = StrTokenizer.getTSVInstance();
      Object object0 = strBuilder_StrBuilderTokenizer0.clone();
      StrBuilder strBuilder2 = strBuilder0.append(object0);
      int int2 = strBuilder0.hashCode();
      StrBuilder strBuilder3 = strBuilder2.insert(5, 469);
      String string0 = strBuilder2.substring(115, 115);
      StrBuilder strBuilder4 = strBuilder2.trim();
      StrBuilder strBuilder5 = strBuilder2.append("");
      // Undeclared exception!
      try { 
        strBuilder5.append(strBuilder0, 3228, (-1));
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendPadding(0, '.');
      StrBuilder strBuilder2 = strBuilder1.trim();
      StringBuffer stringBuffer0 = new StringBuffer(0);
      StrBuilder strBuilder3 = strBuilder1.append(stringBuffer0);
      StrBuilder strBuilder4 = strBuilder0.append(0.0);
      StrBuilder strBuilder5 = strBuilder0.deleteAll("Exhj-3$:R9#yU");
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('.');
      StrBuilder strBuilder6 = strBuilder5.replace((StrMatcher) strMatcher_CharMatcher0, "Exhj-3$:R9#yU", 0, 0, 2142);
      StrBuilder strBuilder7 = strBuilder6.insert(0, true);
      StringBuffer stringBuffer1 = strBuilder4.toStringBuffer();
      boolean boolean0 = strBuilder0.contains((StrMatcher) strMatcher_CharMatcher0);
      char[] charArray0 = new char[4];
      StrBuilder strBuilder8 = strBuilder2.append(1246.6F);
      charArray0[0] = 'n';
      charArray0[1] = '.';
      charArray0[2] = '.';
      charArray0[3] = '.';
      // Undeclared exception!
      try { 
        strBuilder2.getChars(2142, 1478, charArray0, 1478);
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1478
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[9];
      charArray0[0] = 'l';
      charArray0[1] = '`';
      charArray0[2] = 'U';
      charArray0[3] = '1';
      charArray0[4] = ']';
      charArray0[5] = '5';
      charArray0[6] = 'I';
      strBuilder_StrBuilderWriter0.write((char[]) null);
      charArray0[7] = '-';
      strBuilder_StrBuilderWriter0.write(charArray0, 9, 0);
      charArray0[8] = 'U';
      strBuilder_StrBuilderWriter0.write(charArray0);
      strBuilder_StrBuilderWriter0.flush();
      String string0 = strBuilder0.midString(0, 39);
      int int0 = strBuilder0.hashCode();
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      StrBuilder strBuilder2 = strBuilder0.deleteFirst('5');
  }
}
