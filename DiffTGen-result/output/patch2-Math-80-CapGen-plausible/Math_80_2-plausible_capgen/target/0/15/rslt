* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.math.linear.EigenDecompositionImpl
* Starting client
* Connecting to master process on port 21426
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/patch2-Math-80-CapGen-plausible/Math_80_2-plausible_capgen/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math.linear.EigenDecompositionImpl
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 851
  - Branch 428
  - Exception 0
  - MutationFactory 212
  - Output 28
  - Method 17
  - MethodNoException 17
  - CBranchFitnessFactory 428
* Using seed 1585398859333
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%][Progress:===>                          10%] [Cov:>                                  0%][Progress:===>                          10%] [Cov:>                                  1%][Progress:===>                          10%] [Cov:====>                              13%][Progress:===>                          11%] [Cov:>                                  0%][Progress:===>                          11%] [Cov:>                                  1%][Progress:===>                          11%] [Cov:====>                              13%][Progress:===>                          11%] [Cov:====>                              14%][Progress:===>                          13%] [Cov:>                                  0%][Progress:===>                          13%] [Cov:>                                  1%][Progress:===>                          13%] [Cov:====>                              13%][Progress:===>                          13%] [Cov:====>                              14%][Progress:====>                         15%] [Cov:>                                  0%][Progress:====>                         15%] [Cov:>                                  1%][Progress:====>                         15%] [Cov:====>                              13%][Progress:====>                         15%] [Cov:====>                              14%][Progress:====>                         16%] [Cov:>                                  0%][Progress:====>                         16%] [Cov:>                                  1%][Progress:====>                         16%] [Cov:====>                              13%][Progress:=====>                        18%] [Cov:====>                              13%][Progress:=====>                        18%] [Cov:====>                              14%][Progress:========>                     28%] [Cov:>                                  1%][Progress:========>                     28%] [Cov:>                                  2%][Progress:========>                     28%] [Cov:====>                              14%][Progress:========>                     28%] [Cov:=====>                             16%][Progress:========>                     28%] [Cov:=====>                             17%][Progress:=========>                    30%] [Cov:>                                  0%][Progress:=========>                    30%] [Cov:>                                  1%][Progress:=========>                    30%] [Cov:====>                              13%][Progress:=========>                    30%] [Cov:====>                              14%][Progress:=========>                    31%] [Cov:>                                  0%][Progress:=========>                    31%] [Cov:>                                  1%][Progress:=========>                    31%] [Cov:====>                              13%][Progress:=========>                    31%] [Cov:====>                              14%][Progress:=========>                    33%] [Cov:>                                  0%][Progress:=========>                    33%] [Cov:>                                  1%][Progress:=========>                    33%] [Cov:====>                              13%][Progress:=========>                    33%] [Cov:====>                              14%][Progress:==========>                   35%] [Cov:>                                  0%][Progress:==========>                   35%] [Cov:>                                  1%][Progress:==========>                   35%] [Cov:====>                              13%][Progress:============>                 41%] [Cov:=>                                 5%][Progress:============>                 41%] [Cov:==>                                8%][Progress:============>                 41%] [Cov:=======>                           20%][Progress:============>                 41%] [Cov:========>                          24%][Progress:============>                 41%] [Cov:=========>                         27%][Progress:============>                 41%] [Cov:=========>                         28%][Progress:============>                 41%] [Cov:==========>                        30%][Progress:============>                 43%] [Cov:>                                  0%][Progress:============>                 43%] [Cov:>                                  1%][Progress:============>                 43%] [Cov:====>                              13%][Progress:=============>                45%] [Cov:>                                  2%][Progress:=============>                45%] [Cov:=>                                 4%][Progress:=============>                45%] [Cov:=====>                             16%][Progress:=============>                45%] [Cov:=====>                             17%][Progress:=============>                45%] [Cov:======>                            18%][Progress:=============>                45%] [Cov:=======>                           20%][Progress:=============>                45%] [Cov:=======>                           22%][Progress:=============>                45%] [Cov:========>                          23%][Progress:=============>                46%] [Cov:>                                  0%][Progress:=============>                46%] [Cov:>                                  1%][Progress:=============>                46%] [Cov:====>                              13%][Progress:=============>                46%] [Cov:====>                              14%][Progress:==============>               48%] [Cov:==>                                6%][Progress:==============>               48%] [Cov:===>                               10%][Progress:==============>               48%] [Cov:========>                          23%][Progress:==============>               48%] [Cov:=========>                         28%][Progress:==============>               48%] [Cov:==========>                        29%][Progress:==============>               48%] [Cov:==========>                        31%][Progress:==============>               48%] [Cov:===========>                       32%][Progress:==============>               48%] [Cov:============>                      36%][Progress:===============>              50%] [Cov:>                                  2%][Progress:===============>              50%] [Cov:=>                                 4%][Progress:===============>              50%] [Cov:=====>                             16%][Progress:===============>              50%] [Cov:=====>                             17%][Progress:===============>              50%] [Cov:======>                            18%][Progress:===============>              50%] [Cov:=======>                           20%][Progress:===============>              50%] [Cov:=======>                           21%][Progress:===============>              50%] [Cov:=======>                           22%][Progress:===============>              51%] [Cov:==>                                6%][Progress:===============>              51%] [Cov:===>                               11%][Progress:===============>              51%] [Cov:========>                          23%][Progress:===============>              51%] [Cov:=========>                         28%][Progress:===============>              51%] [Cov:==========>                        29%][Progress:===============>              51%] [Cov:==========>                        31%][Progress:===============>              51%] [Cov:===========>                       32%][Progress:===============>              51%] [Cov:============>                      36%][Progress:================>             55%] [Cov:>                                  0%][Progress:================>             55%] [Cov:====>                              12%][Progress:================>             55%] [Cov:====>                              13%][Progress:================>             56%] [Cov:>                                  2%][Progress:================>             56%] [Cov:=>                                 3%][Progress:================>             56%] [Cov:=====>                             16%][Progress:================>             56%] [Cov:=====>                             17%][Progress:================>             56%] [Cov:======>                            19%][Progress:================>             56%] [Cov:=======>                           20%][Progress:=================>            58%] [Cov:>                                  0%][Progress:=================>            58%] [Cov:>                                  1%][Progress:=================>            58%] [Cov:====>                              13%][Progress:=================>            58%] [Cov:====>                              14%][Progress:=================>            58%] [Cov:============>                      36%][Progress:==================>           60%] [Cov:====>                              13%][Progress:==================>           60%] [Cov:====>                              14%][Progress:==================>           60%] [Cov:=====>                             15%][Progress:==================>           61%] [Cov:======>                            19%][Progress:==================>           61%] [Cov:=======>                           20%][Progress:==================>           63%] [Cov:=====>                             15%][Progress:==================>           63%] [Cov:======>                            18%][Progress:==================>           63%] [Cov:======>                            19%][Progress:==================>           63%] [Cov:=======>                           20%][Progress:==================>           63%] [Cov:=======>                           22%][Progress:==================>           63%] [Cov:==========>                        31%][Progress:==================>           63%] [Cov:============>                      37%][Progress:==================>           63%] [Cov:=============>                     38%][Progress:==================>           63%] [Cov:=============>                     39%][Progress:==================>           63%] [Cov:==============>                    42%][Progress:===================>          65%] [Cov:==========>                        31%][Progress:===================>          65%] [Cov:===========>                       33%][Progress:===================>          65%] [Cov:============>                      36%][Progress:===================>          66%] [Cov:=====>                             15%][Progress:===================>          66%] [Cov:=====>                             16%][Progress:===================>          66%] [Cov:======>                            18%][Progress:===================>          66%] [Cov:======>                            19%][Progress:===================>          66%] [Cov:=======>                           20%][Progress:====================>         68%] [Cov:=================>                 51%][Progress:=====================>        70%] [Cov:================>                  48%][Progress:=====================>        70%] [Cov:=================>                 51%][Progress:=====================>        71%] [Cov:=================>                 51%][Progress:=====================>        73%] [Cov:=================>                 51%][Progress:======================>       76%] [Cov:=================>                 51%][Progress:=======================>      78%] [Cov:==================>                52%][Progress:========================>     80%] [Cov:================>                  48%][Progress:========================>     80%] [Cov:=================>                 51%][Progress:========================>     81%] [Cov:================>                  48%][Progress:=========================>    85%] [Cov:===================>               55%][Progress:=========================>    86%] [Cov:==================>                54%][Progress:=========================>    86%] [Cov:===================>               55%][Progress:==========================>   88%] [Cov:=================>                 50%][Progress:==========================>   88%] [Cov:=================>                 51%][Progress:==========================>   88%] [Cov:==================>                54%][Progress:==========================>   88%] [Cov:===================>               55%][Progress:===========================>  90%] [Cov:=================>                 51%][Progress:===========================>  90%] [Cov:==================>                54%][Progress:===========================>  90%] [Cov:===================>               55%][Progress:===========================>  91%] [Cov:=================>                 51%][Progress:===========================>  91%] [Cov:==================>                54%][Progress:===========================>  91%] [Cov:===================>               55%][Progress:============================> 95%] [Cov:===================>               55%][Progress:============================> 96%] [Cov:=================>                 51%][Progress:============================> 96%] [Cov:===================>               55%][Progress:=============================>98%] [Cov:=================>                 51%][Progress:==============================100%] [Cov:=================>                 51%][Progress:==============================100%] [Cov:===================>               55%][Progress:==============================100%] [Cov:===================>               55%][Progress:==============================100%] [Cov:===================>               56%]
* Search finished after 65s and 5 generations, 5974 statements, best individual has fitness: 1540.1152927568976
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 75%
* Total number of goals: 851
* Number of covered goals: 638
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 62%
* Total number of goals: 428
* Number of covered goals: 265
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 52%
* Total number of goals: 212
* Number of covered goals: 110
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 18%
* Total number of goals: 28
* Number of covered goals: 5
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 59%
* Total number of goals: 17
* Number of covered goals: 10
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 47%
* Total number of goals: 17
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 62%
* Total number of goals: 428
* Number of covered goals: 265
* Generated 24 tests with total length 135
* Resulting test suite's coverage: 57% (average coverage for all fitness functions)
* Compiling and checking tests
* Writing JUnit test case 'EigenDecompositionImpl_ESTest' to evosuite-tests
* Done!

* Computation finished
