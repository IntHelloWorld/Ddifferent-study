* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.math.linear.EigenDecompositionImpl
* Starting client
* Connecting to master process on port 13168
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/patch2-Math-80-CapGen-plausible/Math_80_2-plausible_capgen/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math.linear.EigenDecompositionImpl
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 851
  - Branch 428
  - Exception 0
  - MutationFactory 212
  - Output 28
  - Method 17
  - MethodNoException 17
  - CBranchFitnessFactory 428
* Using seed 1585399254944
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%][Progress:===>                          10%] [Cov:>                                  0%][Progress:===>                          10%] [Cov:>                                  1%][Progress:===>                          10%] [Cov:====>                              13%][Progress:===>                          11%] [Cov:====>                              13%][Progress:===>                          11%] [Cov:====>                              14%][Progress:===>                          13%] [Cov:====>                              12%][Progress:===>                          13%] [Cov:====>                              13%][Progress:====>                         15%] [Cov:>                                  0%][Progress:====>                         15%] [Cov:>                                  1%][Progress:====>                         15%] [Cov:====>                              13%][Progress:====>                         15%] [Cov:====>                              14%][Progress:======>                       21%] [Cov:==>                                6%][Progress:======>                       23%] [Cov:===>                               11%][Progress:======>                       23%] [Cov:========>                          24%][Progress:======>                       23%] [Cov:==========>                        29%][Progress:======>                       23%] [Cov:==========>                        31%][Progress:======>                       23%] [Cov:===========>                       32%][Progress:======>                       23%] [Cov:============>                      36%][Progress:========>                     28%] [Cov:>                                  0%][Progress:========>                     28%] [Cov:====>                              12%][Progress:=========>                    33%] [Cov:>                                  1%][Progress:=========>                    33%] [Cov:====>                              13%][Progress:=========>                    33%] [Cov:====>                              14%][Progress:=========>                    33%] [Cov:=====>                             15%][Progress:==========>                   35%] [Cov:>                                  0%][Progress:==========>                   35%] [Cov:>                                  1%][Progress:==========>                   35%] [Cov:====>                              13%][Progress:==========>                   35%] [Cov:====>                              14%][Progress:==========>                   36%] [Cov:>                                  1%][Progress:==========>                   36%] [Cov:>                                  2%][Progress:==========>                   36%] [Cov:====>                              14%][Progress:==========>                   36%] [Cov:=====>                             16%][Progress:==========>                   36%] [Cov:=====>                             17%][Progress:============>                 41%] [Cov:=>                                 3%][Progress:============>                 41%] [Cov:==>                                6%][Progress:============>                 41%] [Cov:======>                            19%][Progress:============>                 41%] [Cov:=======>                           22%][Progress:============>                 41%] [Cov:========>                          23%][Progress:============>                 41%] [Cov:========>                          25%][Progress:============>                 43%] [Cov:>                                  1%][Progress:============>                 43%] [Cov:>                                  2%][Progress:============>                 43%] [Cov:====>                              14%][Progress:============>                 43%] [Cov:=====>                             16%][Progress:============>                 43%] [Cov:=====>                             17%][Progress:=============>                45%] [Cov:>                                  0%][Progress:=============>                45%] [Cov:>                                  1%][Progress:=============>                45%] [Cov:====>                              13%][Progress:===============>              50%] [Cov:=>                                 5%][Progress:===============>              50%] [Cov:==>                                8%][Progress:===============>              50%] [Cov:=======>                           21%][Progress:===============>              50%] [Cov:=========>                         26%][Progress:===============>              50%] [Cov:=========>                         28%][Progress:===============>              50%] [Cov:============>                      35%][Progress:===============>              50%] [Cov:==============>                    41%][Progress:===============>              50%] [Cov:===============>                   43%][Progress:===============>              51%] [Cov:>                                  0%][Progress:===============>              51%] [Cov:>                                  1%][Progress:===============>              51%] [Cov:====>                              13%][Progress:===============>              51%] [Cov:====>                              14%][Progress:===============>              53%] [Cov:====>                              12%][Progress:===============>              53%] [Cov:====>                              14%][Progress:===============>              53%] [Cov:=====>                             15%][Progress:===============>              53%] [Cov:=====>                             16%][Progress:================>             55%] [Cov:>                                  0%][Progress:================>             55%] [Cov:>                                  1%][Progress:================>             55%] [Cov:====>                              13%][Progress:================>             55%] [Cov:====>                              14%][Progress:================>             56%] [Cov:>                                  0%][Progress:================>             56%] [Cov:====>                              13%][Progress:================>             56%] [Cov:====>                              14%][Progress:================>             56%] [Cov:============>                      36%][Progress:=================>            58%] [Cov:====>                              14%][Progress:==================>           60%] [Cov:=====>                             16%][Progress:==================>           61%] [Cov:====>                              13%][Progress:==================>           61%] [Cov:======>                            18%][Progress:==================>           61%] [Cov:========>                          23%][Progress:==================>           61%] [Cov:========>                          25%][Progress:==================>           63%] [Cov:============>                      35%][Progress:===================>          65%] [Cov:====>                              14%][Progress:===================>          65%] [Cov:=====>                             15%][Progress:===================>          65%] [Cov:========>                          23%][Progress:===================>          65%] [Cov:========>                          25%][Progress:===================>          65%] [Cov:=============>                     39%][Progress:===================>          65%] [Cov:==============>                    41%][Progress:===================>          65%] [Cov:===============>                   43%][Progress:===================>          66%] [Cov:==========>                        30%][Progress:===================>          66%] [Cov:==========>                        31%][Progress:===================>          66%] [Cov:===========>                       32%][Progress:===================>          66%] [Cov:============>                      36%][Progress:====================>         68%] [Cov:====>                              14%][Progress:====================>         68%] [Cov:========>                          25%][Progress:=====================>        71%] [Cov:===================>               55%][Progress:=====================>        73%] [Cov:==================>                53%][Progress:=====================>        73%] [Cov:===================>               55%][Progress:======================>       75%] [Cov:===================>               55%][Progress:======================>       75%] [Cov:===================>               56%][Progress:======================>       76%] [Cov:=================>                 51%][Progress:======================>       76%] [Cov:===================>               55%][Progress:========================>     80%] [Cov:===================>               56%][Progress:========================>     81%] [Cov:==================>                52%][Progress:========================>     81%] [Cov:===================>               56%][Progress:========================>     83%] [Cov:==================>                52%][Progress:========================>     83%] [Cov:===================>               56%][Progress:=========================>    85%] [Cov:===================>               56%][Progress:=========================>    86%] [Cov:==================>                54%][Progress:=========================>    86%] [Cov:===================>               56%][Progress:==========================>   88%] [Cov:===================>               56%][Progress:===========================>  90%] [Cov:===================>               56%][Progress:===========================>  90%] [Cov:===================>               57%][Progress:===========================>  90%] [Cov:====================>              58%][Progress:===========================>  91%] [Cov:==================>                52%][Progress:===========================>  91%] [Cov:==================>                54%][Progress:===========================>  91%] [Cov:===================>               56%][Progress:===========================>  93%] [Cov:==================>                54%][Progress:============================> 96%] [Cov:====================>              58%][Progress:=============================>98%] [Cov:====================>              58%][Progress:==============================100%] [Cov:====================>              58%][Progress:==============================100%] [Cov:====================>              58%][Progress:==============================100%] [Cov:====================>              58%][Progress:==============================100%] [Cov:=====================>             60%]
* Search finished after 64s and 5 generations, 4965 statements, best individual has fitness: 1490.9114798121796
* Minimizing test suite
[MASTER] 20:43:31.916 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 68%
* Total number of goals: 851
* Number of covered goals: 580
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 57%
* Total number of goals: 428
* Number of covered goals: 244
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 51%
* Total number of goals: 212
* Number of covered goals: 108
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 25%
* Total number of goals: 28
* Number of covered goals: 7
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 71%
* Total number of goals: 17
* Number of covered goals: 12
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 59%
* Total number of goals: 17
* Number of covered goals: 10
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 57%
* Total number of goals: 428
* Number of covered goals: 244
* Generated 24 tests with total length 410
* Resulting test suite's coverage: 61% (average coverage for all fitness functions)
* Compiling and checking tests
* Writing JUnit test case 'EigenDecompositionImpl_ESTest' to evosuite-tests
* Done!

* Computation finished
