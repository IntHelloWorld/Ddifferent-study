/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 29 09:47:39 GMT 2020
 */

package org.apache.commons.math.util;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.math.util.FastMath;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FastMath_ESTest extends FastMath_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double double0 = FastMath.floor(0.10526403784751892);
      double double1 = FastMath.sinh((-2562.9889655));
      double double2 = FastMath.cbrt((-1611.231));
      double double3 = FastMath.acosh(0.10526403784751892);
      double double4 = FastMath.ulp(Double.NEGATIVE_INFINITY);
      double double5 = FastMath.acosh(0.19999954120254515);
      double double6 = FastMath.tan(4.503599627370496E15);
      double double7 = FastMath.rint(1.0);
      double double8 = FastMath.sqrt((-1039.0));
      double double9 = FastMath.nextAfter((-1.0), (-1.0));
      double double10 = FastMath.floor(0.10526403784751892);
      double double11 = FastMath.sinh(4465.2490628545);
      float float0 = FastMath.abs(771.4502F);
      double double12 = FastMath.floor(3294198.0);
      double double13 = FastMath.cosh((-2562.9889655));
      double double14 = FastMath.ulp(771.4502F);
      double double15 = FastMath.cbrt(Double.NEGATIVE_INFINITY);
      double double16 = FastMath.tan(1.0320850239843855);
      double double17 = FastMath.nextUp(703.94582598639);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int int0 = FastMath.min(1094, 1094);
      double double0 = FastMath.floor(1094);
      float float0 = FastMath.max(0.0F, (float) 1094);
      double double1 = FastMath.atanh(1094.0);
      float float1 = FastMath.abs((float) 1094);
      double double2 = FastMath.tan(0.875);
      double double3 = FastMath.nextAfter(595.47099473, 1.8508157176809257);
      float float2 = FastMath.min(Float.NaN, 1040.9156F);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      long long0 = FastMath.min(1868L, 1868L);
      float float0 = FastMath.min((float) 1868L, 0.0F);
      long long1 = FastMath.round((double) 1868L);
      double double0 = FastMath.signum(2.639144044101463E-7);
      double double1 = FastMath.toRadians(1868L);
      double double2 = FastMath.log10(0.0F);
      double double3 = FastMath.toRadians(Double.NaN);
      double double4 = FastMath.log1p(0.0F);
      double double5 = FastMath.atanh(2.639144044101463E-7);
      double double6 = FastMath.max((double) 0.0F, Double.NaN);
      int int0 = FastMath.max(10, 1609825150);
      double double7 = FastMath.asin(10);
      double double8 = FastMath.tanh(2.6391440441015244E-7);
      double double9 = FastMath.max((double) 0.0F, (-1839.003495));
      double double10 = FastMath.tanh(0.6409968137741089);
      double double11 = FastMath.asin(Double.NaN);
      double double12 = FastMath.min(1.5574077246549023, 0.6409968137741089);
      int int1 = FastMath.abs(10);
      double double13 = FastMath.abs(0.0);
      double double14 = FastMath.ulp(Double.NaN);
      double double15 = FastMath.signum((-1839.003495));
      double double16 = FastMath.exp((-2441.306));
      double double17 = FastMath.min(1.0, 0.5655778896809553);
      double double18 = FastMath.ceil(0.0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double double0 = FastMath.toRadians((-1112.2));
      long long0 = FastMath.max(9193070505571053912L, 3303L);
      double double1 = FastMath.min((-19.411551940680933), (-19.411551940680933));
      double double2 = FastMath.random();
      double double3 = FastMath.atan2((-1112.2), 0.0);
      double double4 = FastMath.expm1((-19.411551940680933));
      double double5 = FastMath.toRadians((-1489.9414059398214));
      double double6 = FastMath.atanh((-150.91925));
      double double7 = FastMath.exp((-676.05555106));
      double double8 = FastMath.cos((-19.411551940680933));
      double double9 = FastMath.signum(2.470612956178793E-294);
      int int0 = FastMath.max(1, 2535);
      double double10 = FastMath.sinh((-1720.1));
      double double11 = FastMath.asinh(1.0);
      double double12 = FastMath.cos((-676.05555106));
      double double13 = FastMath.tan(0.8775825500488281);
      double double14 = FastMath.log10((-26.004383195443282));
      double double15 = FastMath.toRadians((-19.411551940680933));
      double double16 = FastMath.atan2((-103.316), (-1720.1));
      double double17 = FastMath.expm1(3303L);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      long long0 = FastMath.max(0L, 0L);
      double double0 = FastMath.log((-1.0));
      float float0 = FastMath.min((float) 0L, (float) 0L);
      double double1 = FastMath.atan2(0L, Double.NaN);
      double double2 = FastMath.expm1(774.0);
      float float1 = FastMath.min(0.0F, (float) 0L);
      double double3 = FastMath.tan(0L);
      double double4 = FastMath.max(774.0, 1677.34799);
      double double5 = FastMath.cos(0L);
      double double6 = FastMath.acosh(3093.0);
      double double7 = FastMath.cbrt(0.0F);
      double double8 = FastMath.log10(Double.NaN);
      double double9 = FastMath.log(Double.POSITIVE_INFINITY);
      long long1 = FastMath.max(0L, (-7278142539171889152L));
      double double10 = FastMath.nextUp(0.0);
      double double11 = FastMath.toRadians(Double.POSITIVE_INFINITY);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      float float0 = FastMath.max(0.0F, 0.0F);
      double double0 = FastMath.asin(0.0F);
      int int0 = FastMath.abs(1610481632);
      double double1 = FastMath.pow(1610481632, Double.NEGATIVE_INFINITY);
      double double2 = FastMath.atanh(266.18626675387);
      double double3 = FastMath.sin((-3197.2740530975666));
      double double4 = FastMath.min((-3197.2740530975666), 1.8358548930975745E-7);
      float float1 = FastMath.min(1042.1229F, (-2002.45F));
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      long long0 = FastMath.max(0L, 0L);
      double double0 = FastMath.log10(0L);
      long long1 = FastMath.min((-9223372036854775808L), (-9223372036854775808L));
      double double1 = FastMath.min(3.171357693770103, 1.3526894423597173E-6);
      double double2 = FastMath.atan2(3.171357693770103, 1.3526894423597173E-6);
      double double3 = FastMath.random();
      double double4 = FastMath.min(1.570795900261666, 0.0);
      double double5 = FastMath.cos((-9223372036854775808L));
      double double6 = FastMath.atan((-699.500673083599));
      double double7 = FastMath.sqrt(1.3526894423597173E-6);
      double double8 = FastMath.pow(0.0, 3.171357693770103);
      float float0 = FastMath.abs((float) 0L);
      double double9 = FastMath.toRadians((-3.141592653589793));
      long long2 = FastMath.min((-9223372036854775808L), (-9223372036854775808L));
      double double10 = FastMath.min((-479.997), 1.0);
      int int0 = FastMath.max(753287405, 753287405);
      double double11 = FastMath.log(0L);
      double double12 = FastMath.asin((-3.141592653589793));
      double double13 = FastMath.acos(4596.8867004);
      double double14 = FastMath.toDegrees(Double.NaN);
      float float1 = FastMath.max(0.0F, (float) 753287405);
      double double15 = FastMath.log((-237.11589724));
      double double16 = FastMath.signum((-9223372036854775808L));
      double double17 = FastMath.pow((-1.0), (-1.0));
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int int0 = FastMath.min(6, 6);
      double double0 = FastMath.acosh((-988.714063998));
      double double1 = FastMath.abs((-8.0E298));
      double double2 = FastMath.floor((-988.714063998));
      double double3 = FastMath.atan(Double.NaN);
      double double4 = FastMath.tanh(Double.NaN);
      int int1 = FastMath.abs(6);
      int int2 = FastMath.abs(6);
      double double5 = FastMath.log(6);
      long long0 = FastMath.max(2147483648L, (-1L));
      long long1 = FastMath.max(3856L, 2147483648L);
      double double6 = FastMath.atan((-18.457971236441537));
      double double7 = FastMath.pow(0.0, 6.951502372232782E-7);
      double double8 = FastMath.min(4838.45692323, (double) 6);
      double double9 = FastMath.expm1((-18.457971236441537));
      double double10 = FastMath.tan((-18.457971236441537));
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double double0 = FastMath.nextAfter(469.31876, 0.07490822288864472);
      long long0 = FastMath.max(0L, 0L);
      double double1 = FastMath.tan(1.2331016983979697);
      double double2 = FastMath.floor(469.31876);
      double double3 = FastMath.pow(0.0, (-648.659));
      double double4 = FastMath.sqrt(Double.POSITIVE_INFINITY);
      double double5 = FastMath.abs(2499.60366);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double double0 = FastMath.expm1((-1.0));
      double double1 = FastMath.ulp((-960.0));
      int int0 = FastMath.round(0.0F);
      double double2 = FastMath.abs(20.0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = FastMath.round(0.0F);
      double double0 = FastMath.random();
      double double1 = FastMath.random();
      double double2 = FastMath.log10(0.0);
      long long0 = FastMath.round((double) 0.0F);
      double double3 = FastMath.log1p((-6023.104045));
      long long1 = FastMath.round(854.263);
      double double4 = FastMath.rint((-1578.308));
      double double5 = FastMath.expm1(0.0F);
      double double6 = FastMath.log(Double.NaN);
      double double7 = FastMath.signum(0.0);
      float float0 = FastMath.min((float) 0, (float) 0L);
      double double8 = FastMath.sin(854L);
      double double9 = FastMath.sin((-18.43086276236962));
      double double10 = FastMath.cosh(0.0);
      int int1 = FastMath.max(0, 0);
      int int2 = FastMath.min(0, 1024);
      double double11 = FastMath.rint(0.0);
      double double12 = FastMath.cbrt((-1578.0));
      long long2 = FastMath.abs((long) 0);
      double double13 = FastMath.acos(14.136832902969902);
      double double14 = FastMath.floor(14.136832902969902);
      double double15 = FastMath.ulp(1.2958646899018938E-9);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double double0 = FastMath.exp(3347.991515347348);
      double double1 = FastMath.expm1(3347.991515347348);
      double double2 = FastMath.nextUp(Double.POSITIVE_INFINITY);
      double double3 = FastMath.tan(Double.POSITIVE_INFINITY);
      double double4 = FastMath.toDegrees((-2589.0));
      double double5 = FastMath.signum((-148338.77315937012));
      float float0 = FastMath.max(4928.427F, 0.0F);
      double double6 = FastMath.log10(Double.POSITIVE_INFINITY);
      double double7 = FastMath.toDegrees(4928.427F);
      double double8 = FastMath.exp((-8.0E298));
      double double9 = FastMath.acos(0.036);
      double double10 = FastMath.min(3140.479, 1.0);
      double double11 = FastMath.cosh(4928.427F);
      double double12 = FastMath.max(Double.POSITIVE_INFINITY, 1830.0542630577243);
      double double13 = FastMath.ulp(0.39362657592563277);
      int int0 = FastMath.abs((-1791));
      long long0 = FastMath.round(1.197421629234348);
      long long1 = FastMath.round(1.534788546256432);
      double double14 = FastMath.pow((-148338.77315937012), 1L);
      double double15 = FastMath.tan((-1873.1843940261));
      double double16 = FastMath.tanh(282378.0528620002);
      double double17 = FastMath.acos((-148338.77315937012));
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double double0 = FastMath.log(0.087);
      double double1 = FastMath.signum((-2.4418471603275536));
      int int0 = FastMath.min((-1), (-1));
      double double2 = FastMath.ulp(6260.8263337);
      double double3 = FastMath.cbrt(0.4311765432357788);
      float float0 = FastMath.abs((float) (-1));
      double double4 = FastMath.signum((-759.4187817884));
      double double5 = FastMath.cos(0.4311765432357788);
      double double6 = FastMath.asinh(9.094947017729282E-13);
      long long0 = FastMath.min((-4171L), (long) (-1));
      double double7 = FastMath.sqrt(14.136832902969902);
      double double8 = FastMath.ulp(1372.658954976925);
      double double9 = FastMath.sinh(1.0F);
      double double10 = FastMath.max((double) 1.0F, 0.06666666666666667);
      double double11 = FastMath.expm1(9.094947017729282E-13);
      float float1 = FastMath.min((float) (-4171L), 1.0F);
      double double12 = FastMath.nextAfter((-1897.4832262225423), 3.7598979910324566);
      long long1 = FastMath.min(0L, 0L);
      double double13 = FastMath.atanh(0.087);
      double double14 = FastMath.nextAfter((-1), 2.2737367544323206E-13);
      double double15 = FastMath.atan(2341.88591238);
      double double16 = FastMath.atanh(3.410491133089812E-7);
      double double17 = FastMath.exp(473.117582026);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      double double0 = FastMath.atanh(0.07842259109020233);
      double double1 = FastMath.ceil(0.097);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      double double0 = FastMath.atanh((-2315.20133709005));
      double double1 = FastMath.atanh(3.038148934955037E-7);
      double double2 = FastMath.tan(Double.NaN);
      double double3 = FastMath.log10(Double.NaN);
      double double4 = FastMath.log10(1.8508157176809257);
      double double5 = FastMath.cbrt(827.966975337);
      double double6 = FastMath.atan2((-1669.66750182), 0.2673631790022217);
      double double7 = FastMath.exp(1.8508157176809257);
      double double8 = FastMath.expm1((-2127.0));
      double double9 = FastMath.atan2((-2127.0), 385.67696757137);
      int int0 = FastMath.min(3103, 3103);
      double double10 = FastMath.abs(3.001117512531765E-7);
      double double11 = FastMath.rint(1.8508157176809257);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      long long0 = FastMath.max(1637L, 1637L);
      double double0 = FastMath.acos(1637L);
      double double1 = FastMath.abs(Double.NaN);
      double double2 = FastMath.random();
      double double3 = FastMath.pow(1637L, 5.140127377170679);
      float float0 = FastMath.min((float) 1637L, (-367.28552F));
      double double4 = FastMath.nextAfter(1.074682223392077, 3.410491133089812E-7);
      double double5 = FastMath.tanh(1.0);
      long long1 = FastMath.min((-3183605296591799669L), (-3183605296591799669L));
      double double6 = FastMath.floor(3.410491133089812E-7);
      double double7 = FastMath.sin((-3183605296591799669L));
      double double8 = FastMath.atanh((-0.6101670096261864));
      double double9 = FastMath.pow(Double.NaN, 50.63223785128);
      double double10 = FastMath.sqrt((-3183605296591799669L));
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      double double0 = FastMath.atan2(0.0, 0.0);
      double double1 = FastMath.max((-3033.1796298742), 1.3526894423597173E-6);
      double double2 = FastMath.random();
      double double3 = FastMath.nextAfter(1.3526894423597173E-6, 1.3526894423597173E-6);
      double double4 = FastMath.pow(1.3526894423597173E-6, 1.3526894423597173E-6);
      double double5 = FastMath.ulp((-939.065917));
      double double6 = FastMath.asinh(0.4311765432357788);
      double double7 = FastMath.tan(0.7214844409909045);
      double double8 = FastMath.nextAfter(0.19999998807907104, 778.8);
      long long0 = FastMath.max((-334L), (-334L));
      double double9 = FastMath.asin(0.41882412260367013);
      int int0 = FastMath.round(0.0F);
      double double10 = FastMath.signum((-1757.7092438438));
      double double11 = FastMath.rint(0.0);
      long long1 = FastMath.min(558L, (long) 0);
      double double12 = FastMath.max(1.3526894423597175E-6, (-1757.7092438438));
      double double13 = FastMath.min(4466.64476, (-39.96));
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      double double0 = FastMath.cbrt(0.6666666269302368);
      double double1 = FastMath.asinh(9.140260083262505E-9);
      long long0 = FastMath.abs((-3134L));
      double double2 = FastMath.floor(0.6666666269302368);
      double double3 = FastMath.nextAfter(3134L, 1.0);
      float float0 = FastMath.min((float) 3134L, 447.7227F);
      double double4 = FastMath.pow(0.6666666269302368, (-2329.09442519136));
      double double5 = FastMath.tanh(1.0);
      double double6 = FastMath.cos(2757.2736);
      double double7 = FastMath.log10(9.140260083262505E-9);
      double double8 = FastMath.atanh(9.140260083262505E-9);
      double double9 = FastMath.floor(3134L);
      double double10 = FastMath.nextAfter(Double.POSITIVE_INFINITY, 2.3841857910019882E-8);
      double double11 = FastMath.floor((-0.010714690733195933));
      double double12 = FastMath.tanh(1.0E-6);
      double double13 = FastMath.asin(9.140260083262505E-9);
      double double14 = FastMath.max(1885.7452114, 966.18051);
      double double15 = FastMath.abs(0.8735804473798141);
      float float1 = FastMath.abs(447.7227F);
      double double16 = FastMath.random();
      double double17 = FastMath.signum((-0.010714690733195933));
      double double18 = FastMath.pow(3134.0, Double.POSITIVE_INFINITY);
      long long1 = FastMath.max((-3134L), 4597L);
      double double19 = FastMath.atanh((-1815.6685346992));
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      double double0 = FastMath.log1p((-1.0));
      double double1 = FastMath.log10((-688.079));
      double double2 = FastMath.atanh(2292.6367894872);
      double double3 = FastMath.abs((-1.0));
      double double4 = FastMath.floor(Double.NEGATIVE_INFINITY);
      double double5 = FastMath.log10(Double.NEGATIVE_INFINITY);
      double double6 = FastMath.asin(843.0);
      double double7 = FastMath.sqrt(5.669184079525E-24);
      int int0 = FastMath.round(0.0F);
      long long0 = FastMath.round(929.96060912765);
      double double8 = FastMath.floor((-1.0));
      long long1 = FastMath.min((-934L), 0L);
      int int1 = FastMath.max(0, 3073);
      double double9 = FastMath.sqrt(929.96060912765);
      double double10 = FastMath.floor(1.01);
      double double11 = FastMath.sin(2314.8005536257183);
      int int2 = FastMath.round((-2532.95F));
      double double12 = FastMath.ceil(1.01);
      float float0 = FastMath.min(0.0F, (float) (-2533));
      float float1 = FastMath.max((float) 3073, 0.0F);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      double double0 = FastMath.ulp((-2.6033824355191673E-8));
      double double1 = FastMath.log(493.70033647);
      double double2 = FastMath.cos(1156.37);
      double double3 = FastMath.min(0.9653791096544502, 1156.37);
      double double4 = FastMath.atanh(493.70033647);
      double double5 = FastMath.sqrt(0.9653791096544502);
      double double6 = FastMath.ceil(6.201928726791828);
      double double7 = FastMath.sqrt(1156.37);
      double double8 = FastMath.expm1(34.00544074115199);
      double double9 = FastMath.min(1156.37, 7.0);
      long long0 = FastMath.round(7.0);
      long long1 = FastMath.round(5.261908426442558E-7);
      double double10 = FastMath.nextAfter(0L, 7.0);
      double double11 = FastMath.expm1((-2.6033824355191673E-8));
      double double12 = FastMath.max(5.650007086920087E-9, 347.76683454511);
      double double13 = FastMath.log10(3.038148934955037E-7);
      int int0 = FastMath.abs(15);
      double double14 = FastMath.cos(7.0);
      double double15 = FastMath.acos(2228.0);
      int int1 = FastMath.round((float) 7L);
      double double16 = FastMath.asin((-405.06362));
      long long2 = FastMath.round(493.70033647);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      double double0 = FastMath.atan(1.560070049119026);
      double double1 = FastMath.expm1(0.3333333333332802);
      double double2 = FastMath.ceil(0.39561242508601535);
      double double3 = FastMath.asinh(0.3333333333332802);
      double double4 = FastMath.exp(704.354257);
      double double5 = FastMath.tan(9.220590270857665E-9);
      double double6 = FastMath.exp(2170.0);
      int int0 = FastMath.round((-2136.9F));
      double double7 = FastMath.tan((-745.4393345380386));
      int int1 = FastMath.max((-2137), (-2137));
      double double8 = FastMath.cbrt(0.39561242508601535);
      double double9 = FastMath.floor((-2137));
      float float0 = FastMath.max((float) (-2137), (-2136.9F));
      double double10 = FastMath.exp(1.560070049119026);
      double double11 = FastMath.toRadians(1618.0296668925);
      double double12 = FastMath.pow(4.759154608049431, 28.23994508222121);
      double double13 = FastMath.floor(1.0);
      long long0 = FastMath.min((-3183605296591799669L), (long) (-2137));
      double double14 = FastMath.sin(0.39561242508601535);
      double double15 = FastMath.rint(0.10526403784751892);
      double double16 = FastMath.cosh(0.7341023951457848);
      double double17 = FastMath.signum(2170.0);
      long long1 = FastMath.max((-3183605296591799669L), 6722166367014452318L);
      double double18 = FastMath.cos((-2137));
      double double19 = FastMath.pow(Double.POSITIVE_INFINITY, 5.261908426442558E-7);
      double double20 = FastMath.asinh(1.0007762635174042);
      double double21 = FastMath.random();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      double double0 = FastMath.nextUp((-4.469603409122654E-6));
      double double1 = FastMath.atanh(0.8775825500488281);
      double double2 = FastMath.sqrt((-4.469603409122653E-6));
      float float0 = FastMath.min(0.0F, 0.0F);
      double double3 = FastMath.expm1((-4.469603409122653E-6));
      double double4 = FastMath.signum(0.8775825500488281);
      double double5 = FastMath.nextUp(0.0F);
      double double6 = FastMath.cbrt(4.9E-324);
      float float1 = FastMath.max(0.0F, 0.0F);
      int int0 = FastMath.abs(753287405);
      double double7 = FastMath.sin(0.0F);
      double double8 = FastMath.atan2(0.0, (-879.6615773375336));
      int int1 = FastMath.max(753287405, (-852));
      double double9 = FastMath.rint(0.0F);
      double double10 = FastMath.floor((-976.3));
      int int2 = FastMath.round(1146.7589F);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      double double0 = FastMath.ceil((-381.8681342403808));
      long long0 = FastMath.round(0.0);
      double double1 = FastMath.atanh((-517.7395953611));
      double double2 = FastMath.nextAfter(Double.NaN, 1603.37142081);
      double double3 = FastMath.rint((-2632.52967));
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      double double0 = FastMath.asinh(14.136832902969902);
      double double1 = FastMath.asinh(3.3431794316985193);
      double double2 = FastMath.acos(14.136832902969902);
      double double3 = FastMath.rint(1.9217219006970319);
      double double4 = FastMath.sin((-147.5433999227322));
      double double5 = FastMath.acos(0.19454771280288696);
      double double6 = FastMath.cbrt((-2616.21));
      double double7 = FastMath.tanh(3.3431794316985193);
      double double8 = FastMath.cos((-2192.254));
      float float0 = FastMath.max((-3526.1748F), 1.0F);
      double double9 = FastMath.log(1.0F);
      double double10 = FastMath.expm1(1.0);
      double double11 = FastMath.cbrt(Double.NaN);
      double double12 = FastMath.floor(207.28);
      double double13 = FastMath.tanh(1.3749999950923297);
      double double14 = FastMath.sqrt(2.563009154379015E-7);
      int int0 = FastMath.min((-132), (-256));
      int int1 = FastMath.abs(838837812);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      double double0 = FastMath.toDegrees(4.503599627370496E15);
      double double1 = FastMath.cos(454.057446987266);
      double double2 = FastMath.pow(2.58037251265019648E17, (-0.09715504789926184));
      double double3 = FastMath.random();
      double double4 = FastMath.cosh((-427.34795));
      long long0 = FastMath.max(0L, 0L);
      double double5 = FastMath.toDegrees(0.4311765432357788);
      double double6 = FastMath.tanh(1.9671004693227388E185);
      double double7 = FastMath.atan(0L);
      float float0 = FastMath.min((float) 0L, (-2177.4F));
      double double8 = FastMath.max(0.39362657592563277, 738.762867);
      long long1 = FastMath.abs(0L);
      double double9 = FastMath.cos(2.58037251265019648E17);
      double double10 = FastMath.min(0.0, 1.0);
      double double11 = FastMath.toDegrees(1.0);
      double double12 = FastMath.sqrt(57.29577951308232);
      double double13 = FastMath.atanh(0.0);
      long long2 = FastMath.max(1L, 0L);
      double double14 = FastMath.tanh(0.07073719799518585);
      double double15 = FastMath.atanh(383.622928829);
      double double16 = FastMath.tan(383.622928829);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      double double0 = FastMath.abs(1.0);
      double double1 = FastMath.sinh((-0.16666666666666666));
      int int0 = FastMath.min((-2527), (-2527));
      double double2 = FastMath.cbrt((-2527));
      float float0 = FastMath.min((float) (-2527), (-2675.79F));
      double double3 = FastMath.log1p((-2675.79F));
      long long0 = FastMath.abs(2703L);
      double double4 = FastMath.atan2(309.3362710941874, (-13.620772753638303));
      long long1 = FastMath.round((double) 2703L);
      double double5 = FastMath.atan((-0.16666666666666666));
      double double6 = FastMath.expm1((-0.16514867741462683));
      long long2 = FastMath.min(0L, 2703L);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      int int0 = FastMath.round(807.4695F);
      double double0 = FastMath.log10(1.0);
      double double1 = FastMath.atan2(807.4695F, 0.0);
      double double2 = FastMath.acos(807);
      double double3 = FastMath.cosh(Double.NaN);
      long long0 = FastMath.max((long) 807, (long) 807);
      double double4 = FastMath.cbrt((-1036.219));
      double double5 = FastMath.atan(1.5707963267948966);
      double double6 = FastMath.sqrt(0.0);
      int int1 = FastMath.abs(807);
      double double7 = FastMath.abs((double) 807);
      double double8 = FastMath.tanh(Double.NaN);
      long long1 = FastMath.round(1942.5249483);
      long long2 = FastMath.round(807.0);
      double double9 = FastMath.log1p(0.7316888570785522);
      long long3 = FastMath.max(807L, (long) 807);
      double double10 = FastMath.atan(807L);
      double double11 = FastMath.cosh(0.0);
      double double12 = FastMath.nextAfter(3.001117512531765E-7, 1720.630459633);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      double double0 = FastMath.acosh(1.0);
      double double1 = FastMath.floor(1.0);
      double double2 = FastMath.asin(1.0);
      double double3 = FastMath.sqrt(1.5707963267948966);
      double double4 = FastMath.nextUp(2.6365310530323782E-6);
      double double5 = FastMath.log10(2.6365310530323782E-6);
      double double6 = FastMath.sin(0.008333333333333333);
      double double7 = FastMath.random();
      long long0 = FastMath.abs(0L);
      float float0 = FastMath.abs(0.0F);
      float float1 = FastMath.min(1520.989F, 832.1849F);
      double double8 = FastMath.rint((-1222.432247424666));
      float float2 = FastMath.min(832.1849F, 0.0F);
      double double9 = FastMath.asinh((-1222.432247424666));
      double double10 = FastMath.sqrt(0.0F);
      double double11 = FastMath.floor((-1222.432247424666));
      double double12 = FastMath.sin((-647.4));
      double double13 = FastMath.atanh((-1.0));
      double double14 = FastMath.toDegrees(832.1849F);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      double double0 = FastMath.log10(0.036);
      long long0 = FastMath.max(4607182418800017408L, 4607182418800017408L);
      double double1 = FastMath.atan2(4607182418800017408L, (-0.16666666666666666));
      double double2 = FastMath.log10(1.0);
      double double3 = FastMath.exp(2171.4571141);
      double double4 = FastMath.rint((-2207.7386));
      double double5 = FastMath.abs((double) 4607182418800017408L);
      double double6 = FastMath.asinh(1048.4869);
      int int0 = FastMath.abs(907374237);
      double double7 = FastMath.min(Double.POSITIVE_INFINITY, 1048.4869);
      double double8 = FastMath.expm1(0.0952233225107193);
      double double9 = FastMath.toDegrees(1879.9124076233318);
      double double10 = FastMath.tan((-0.16666666666666666));
      double double11 = FastMath.atanh((-1.0));
      double double12 = FastMath.log10((-664.815223));
      double double13 = FastMath.ulp(4607182418800017408L);
      double double14 = FastMath.ceil(2.6365310530323782E-6);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      double double0 = FastMath.atan2(1.0, 1.0);
      double double1 = FastMath.tanh(0.9305076599121094);
      double double2 = FastMath.floor(1.560070049119026);
      double double3 = FastMath.tanh(1.560070049119026);
      int int0 = FastMath.max(2047, (-1718));
      double double4 = FastMath.cosh(1.0);
      double double5 = FastMath.log10(1.5430806348152437);
      double double6 = FastMath.atan(1.0);
      double double7 = FastMath.tanh(0.9305076599121094);
      long long0 = FastMath.max((long) (-1718), (long) (-1718));
      double double8 = FastMath.cos(0.18838862103418857);
      double double9 = FastMath.tan(0.18838862103418857);
      long long1 = FastMath.min((-1718L), 0L);
      double double10 = FastMath.tanh(2574.345756624324);
      float float0 = FastMath.abs((float) 2047);
      double double11 = FastMath.sqrt((-960.014171494));
      double double12 = FastMath.acosh((-8.0E298));
      double double13 = FastMath.tanh(0.7853981633974483);
      double double14 = FastMath.cos((-656.97699));
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      float float0 = FastMath.min(976.0F, 976.0F);
      double double0 = FastMath.asin(976.0F);
      double double1 = FastMath.expm1(1.0);
      double double2 = FastMath.abs((-265.16465));
      double double3 = FastMath.abs((-1191.0));
      int int0 = FastMath.abs(1610350464);
      double double4 = FastMath.log(8.0E298);
      double double5 = FastMath.atan((-4.469603409122654E-6));
      double double6 = FastMath.signum(1610350464);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      double double0 = FastMath.log(1157.8914095939);
      double double1 = FastMath.log((-584.0));
      double double2 = FastMath.tan(7.054355879637343);
      double double3 = FastMath.acos(1157.8914095939);
      double double4 = FastMath.max(0.9719421209219692, 1257.10547259);
      long long0 = FastMath.round(1157.8914095939);
      float float0 = FastMath.max((float) 1158L, (float) 1158L);
      double double5 = FastMath.toDegrees(Double.NaN);
      double double6 = FastMath.log10(1332.8766616);
      double double7 = FastMath.cos(1332.8766616);
      float float1 = FastMath.max(1158.0F, 0.0F);
      double double8 = FastMath.atanh(1257.10547259);
      double double9 = FastMath.cos(Double.NaN);
      double double10 = FastMath.acosh(1332.8766616);
      double double11 = FastMath.ceil(1257.10547259);
      double double12 = FastMath.toDegrees((-475.62));
      double double13 = FastMath.max(Double.NaN, Double.NaN);
      double double14 = FastMath.floor((-507.599062));
      double double15 = FastMath.asinh(Double.NaN);
      int int0 = FastMath.round(1158.0F);
      double double16 = FastMath.exp(Double.NaN);
      double double17 = FastMath.exp(3.1247899636188174);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      double double0 = FastMath.exp((-1341.32750863057));
      double double1 = FastMath.rint(1418.0685965921);
      float float0 = FastMath.abs(1667.0562F);
      double double2 = FastMath.expm1(0.0);
      float float1 = FastMath.min(1115.28F, 1115.28F);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      double double0 = FastMath.sinh(155.736);
      double double1 = FastMath.atanh(2.1590138981890644E67);
      double double2 = FastMath.atan((-38.094513537952));
      double double3 = FastMath.rint((-3750.254));
      long long0 = FastMath.round((-2138.1165));
      long long1 = FastMath.abs((-2138L));
      double double4 = FastMath.sinh((-3750.254));
      double double5 = FastMath.sin(Double.NEGATIVE_INFINITY);
      double double6 = FastMath.asinh((-2138.1165));
      double double7 = FastMath.toDegrees(499.974993);
      double double8 = FastMath.nextAfter((-1168.0525522), (-1242.4043633));
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      double double0 = FastMath.nextUp(2.319235767811865);
      double double1 = FastMath.log1p((-2015.170105024771));
      double double2 = FastMath.tanh(0.08371849358081818);
      float float0 = FastMath.abs(0.0F);
      double double3 = FastMath.sinh(0.0F);
      long long0 = FastMath.round(2.6365310530323782E-6);
      double double4 = FastMath.cbrt(1.125);
      double double5 = FastMath.acosh(0.08352345202447636);
      long long1 = FastMath.abs((-654L));
      double double6 = FastMath.signum(0.0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      double double0 = FastMath.acosh(2332.05128255125);
      double double1 = FastMath.log1p(6194.432);
      double double2 = FastMath.atan2(8.731567525288138, (-2324.33044185));
      double double3 = FastMath.sqrt(6194.432);
      double double4 = FastMath.tan((-2324.33044185));
      double double5 = FastMath.floor(78.70471396301494);
      double double6 = FastMath.rint(8.447650672622085);
      double double7 = FastMath.cosh(3.4620039155736807E-7);
      float float0 = FastMath.abs((-1.0F));
      double double8 = FastMath.ceil(6194.432);
      double double9 = FastMath.acos(3.038148934955037E-7);
      long long0 = FastMath.abs(4208363204685324176L);
      double double10 = FastMath.toRadians((-1339.8503));
      float float1 = FastMath.abs((float) 4208363204685324176L);
      float float2 = FastMath.max((float) 4208363204685324176L, 1.0F);
      double double11 = FastMath.floor((-825.637131));
      double double12 = FastMath.asinh(0.041666666666621166);
      int int0 = FastMath.max((-1109), (-1109));
      float float3 = FastMath.max((-1.0F), (-1.0F));
      int int1 = FastMath.max((-1109), (-1109));
      double double13 = FastMath.nextAfter(6194.432, 0.041666666666621166);
      double double14 = FastMath.rint(715.298076);
      double double15 = FastMath.nextAfter(1472.14404969, 3.038148934955037E-7);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      double double0 = FastMath.acos(0.0);
      double double1 = FastMath.toRadians(0.0);
      double double2 = FastMath.exp(2047.9192);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      double double0 = FastMath.acosh(3.001117512531765E-7);
      double double1 = FastMath.cbrt(3.001117512531765E-7);
      double double2 = FastMath.cbrt(1.0);
      double double3 = FastMath.tan(0.006695160619532832);
      double double4 = FastMath.asinh(3.001117512531765E-7);
      double double5 = FastMath.floor((-3082.925));
      double double6 = FastMath.atan2((-780.05076054027), 1287.0);
      double double7 = FastMath.log1p(1387.3);
      double double8 = FastMath.rint(1.074682223392077);
      double double9 = FastMath.signum(Double.NaN);
      double double10 = FastMath.toDegrees((-0.7853981633974483));
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      double double0 = FastMath.cosh(0.5463024898437905);
      double double1 = FastMath.atan2(0.5463024898437905, 60.43962);
      double double2 = FastMath.toRadians((-1047.9272));
      double double3 = FastMath.signum(0.0);
      float float0 = FastMath.max((-710.8F), 0.0F);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      double double0 = FastMath.sin((-3227.584703094));
      double double1 = FastMath.tan((-3227.584703094));
      double double2 = FastMath.ceil(0.9203787003421802);
      double double3 = FastMath.max(2.6365310530323782E-6, (-3227.584703094));
      double double4 = FastMath.floor((-2.353740001640028));
      long long0 = FastMath.abs(0L);
      double double5 = FastMath.atanh((-7419.210070212));
      double double6 = FastMath.max((-7419.210070212), (-2685.819624));
      double double7 = FastMath.log1p(1.197421629234348);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      double double0 = FastMath.random();
      double double1 = FastMath.cosh(0.0);
      double double2 = FastMath.sin(1.0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      double double0 = FastMath.acosh((-304.8525));
      double double1 = FastMath.random();
      double double2 = FastMath.expm1(Double.NaN);
      float float0 = FastMath.abs((-1.0F));
      double double3 = FastMath.toDegrees((-608.455959347057));
      double double4 = FastMath.log(0.0);
      double double5 = FastMath.nextUp((-1369.6057356));
      double double6 = FastMath.max(503.7576306611705, 0.0);
      double double7 = FastMath.acosh((-1.0));
      double double8 = FastMath.cbrt(1977.57961080746);
      double double9 = FastMath.log(Double.NaN);
      double double10 = FastMath.tan((-1369.6057355999997));
      long long0 = FastMath.abs(0L);
      double double11 = FastMath.rint(Double.NEGATIVE_INFINITY);
      double double12 = FastMath.atanh((-1.0));
      double double13 = FastMath.atanh((-1.0));
      double double14 = FastMath.log10((-34861.95849016996));
      double double15 = FastMath.acosh((-2472.549746));
      double double16 = FastMath.random();
      double double17 = FastMath.atan((-608.455959347057));
      double double18 = FastMath.tanh(503.7576306611705);
      double double19 = FastMath.pow((-608.455959347057), 2434.989308319);
      float float1 = FastMath.max((-1.0F), 0.0F);
      double double20 = FastMath.pow((-561.8695091330221), (-561.8695091330221));
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      double double0 = FastMath.cos(1.0);
      double double1 = FastMath.acosh((-1.0));
      double double2 = FastMath.ceil(0.0);
      double double3 = FastMath.log1p(0.0);
      double double4 = FastMath.sinh((-1.0));
      long long0 = FastMath.abs((-890L));
      double double5 = FastMath.atanh(1.0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      double double0 = FastMath.cbrt(3.0095696738628313);
      long long0 = FastMath.round((-833.78203));
      double double1 = FastMath.random();
      long long1 = FastMath.max((-834L), (-834L));
      float float0 = FastMath.min((float) (-834L), 664.254F);
      double double2 = FastMath.atan2(664.254F, 0.0);
      double double3 = FastMath.sqrt((-291.21));
      double double4 = FastMath.ceil(Double.NaN);
      long long2 = FastMath.abs((-834L));
      double double5 = FastMath.cos(0.003);
      double double6 = FastMath.nextAfter((-1479.3698478465838), 257.4741327);
      float float1 = FastMath.max((-875.5F), 1208.4F);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      double double0 = FastMath.rint(604.5);
      double double1 = FastMath.pow(2095.23306355024, 438.78183876816);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      double double0 = FastMath.expm1((-2270.046478079));
      double double1 = FastMath.signum(2085.9);
      long long0 = FastMath.abs(3143L);
      double double2 = FastMath.acosh(0.1111111111111111);
      double double3 = FastMath.log1p(0.1111111111111111);
      double double4 = FastMath.toDegrees(6.951502372232782E-7);
      long long1 = FastMath.max(3143L, 0L);
      double double5 = FastMath.atan((-966.99911));
      double double6 = FastMath.floor(Double.NaN);
      float float0 = FastMath.min((float) 0L, (float) 3143L);
      double double7 = FastMath.ceil(3143L);
      double double8 = FastMath.sqrt(3.982917472041182E-5);
      double double9 = FastMath.sqrt(3143.0);
      double double10 = FastMath.random();
      double double11 = FastMath.max(5.041915256481364, (-243.96));
      int int0 = FastMath.min(73, 73);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      double double0 = FastMath.log10(3.038148934955037E-7);
      double double1 = FastMath.asin(1.0);
      long long0 = FastMath.max(1L, 0L);
      double double2 = FastMath.expm1(1161.465);
      float float0 = FastMath.min((float) 1L, (float) 0L);
      double double3 = FastMath.cos(3.4620039155736807E-7);
      double double4 = FastMath.ceil((-685.0));
      long long1 = FastMath.min(1L, 1L);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      double double0 = FastMath.toDegrees(379.0);
      double double1 = FastMath.cosh(379.0);
      double double2 = FastMath.ceil(0.4342944622039795);
      double double3 = FastMath.pow((-1.0), 1.0);
      long long0 = FastMath.abs(468L);
      double double4 = FastMath.log1p((-2694.015));
      double double5 = FastMath.cos(2.563009154379015E-7);
      double double6 = FastMath.tan(0.0);
      double double7 = FastMath.exp(1372.94938);
      float float0 = FastMath.abs(0.0F);
      double double8 = FastMath.ceil(1.2393345855018391E-8);
      int int0 = FastMath.round(1373.0F);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      double double0 = FastMath.ulp(1.074682223392077);
      double double1 = FastMath.floor(1.074682223392077);
      long long0 = FastMath.abs((-1L));
      float float0 = FastMath.min(0.0F, (float) (-1L));
      double double2 = FastMath.toDegrees((-1.0F));
      double double3 = FastMath.exp(179.3280201674);
      long long1 = FastMath.min(1L, (-1L));
      int int0 = FastMath.min(277, 277);
      double double4 = FastMath.nextUp(1.074682223392077);
      float float1 = FastMath.max((-1179.747F), 560.5005F);
      double double5 = FastMath.acos(1L);
      double double6 = FastMath.acosh((-1.0F));
      float float2 = FastMath.min((float) 277, 0.0F);
      long long2 = FastMath.abs(0L);
      double double7 = FastMath.random();
      double double8 = FastMath.acos((-1L));
      double double9 = FastMath.ceil(1869.62368113911);
      int int1 = FastMath.round(560.5005F);
      int int2 = FastMath.abs(277);
      double double10 = FastMath.signum(1.0);
      double double11 = FastMath.tanh(3.171357693770103);
      double double12 = FastMath.sqrt((-875.6292094519232));
      double double13 = FastMath.atan2((-0.12502530217170715), 1.560070049119026);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      int int0 = FastMath.max((-273), 0);
      double double0 = FastMath.acosh((-1502.0));
      int int1 = FastMath.min(0, 2650);
      double double1 = FastMath.random();
      double double2 = FastMath.asin(Double.NaN);
      double double3 = FastMath.tan(0.19454771280288696);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      double double0 = FastMath.tan((-134.204652871));
      double double1 = FastMath.expm1((-3873.20663));
      int int0 = FastMath.min((-2158), (-2158));
      double double2 = FastMath.toRadians((-2749.0));
      double double3 = FastMath.asin((-3873.20663));
      double double4 = FastMath.pow((-3873.20663), (-2158));
      double double5 = FastMath.sin((-2749.0));
      float float0 = FastMath.abs(0.0F);
      double double6 = FastMath.acos(0.0);
      double double7 = FastMath.sinh(1.219145537665345);
      double double8 = FastMath.asinh((-3873.20663));
      double double9 = FastMath.exp((-18.43086276236962));
      double double10 = FastMath.acosh(3133.90414);
      double double11 = FastMath.signum(0.5403022766113281);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      double double0 = FastMath.tan(320.7573795833541);
      double double1 = FastMath.random();
      double double2 = FastMath.atan2(0.0, 0.9315964599440725);
      int int0 = FastMath.abs((-2886));
      int int1 = FastMath.max((-2886), 2886);
      double double3 = FastMath.log10(2385.2);
      double double4 = FastMath.acos((-2886));
      double double5 = FastMath.nextAfter(2886, 0.0);
      double double6 = FastMath.signum(2886);
      double double7 = FastMath.abs(3.3775248006737018);
      int int2 = FastMath.round(0.0F);
      int int3 = FastMath.min((-1), 2886);
      double double8 = FastMath.sqrt(0);
      int int4 = FastMath.round(3689.927F);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      double double0 = FastMath.ceil(1.0);
      double double1 = FastMath.tan(1.0);
      int int0 = FastMath.round(0.0F);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      double double0 = FastMath.max(0.6409968137741089, 0.6409968137741089);
      double double1 = FastMath.cos(0.6409968137741089);
      int int0 = FastMath.max((-1), 3361);
      double double2 = FastMath.log10(0.6409968137741089);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      int int0 = FastMath.max(5, 5);
      int int1 = FastMath.max(5, 5);
      double double0 = FastMath.log10(3.038148934955037E-7);
      double double1 = FastMath.atan2(4569.0, 5);
      long long0 = FastMath.round(1.5697019958682024);
      double double2 = FastMath.floor((-1672.322867));
      double double3 = FastMath.exp(1.074682223392077);
      double double4 = FastMath.max(1.0, (-3171.899780876367));
      double double5 = FastMath.toDegrees(893.12458);
      double double6 = FastMath.atanh(1.074682223392077);
      double double7 = FastMath.ceil((-6.517390940136264));
      float float0 = FastMath.max(1474.5F, Float.NaN);
      double double8 = FastMath.acos(Double.NaN);
      double double9 = FastMath.nextAfter((-6.517390940136264), 2.9290619652510936);
      double double10 = FastMath.pow(5, 642.110999);
      double double11 = FastMath.sinh(Double.NaN);
      double double12 = FastMath.cbrt((-2790.0));
      double double13 = FastMath.signum((-18.43086276236962));
      double double14 = FastMath.toDegrees(51172.26901339425);
      double double15 = FastMath.signum(1474.5F);
      float float1 = FastMath.max(Float.NaN, (float) 5);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      double double0 = FastMath.log((-59.37894991695));
      double double1 = FastMath.sinh(Double.NaN);
      double double2 = FastMath.abs(57.2957763671875);
      double double3 = FastMath.cbrt(3.171357693770103);
      float float0 = FastMath.max((-13.90785F), (-13.90785F));
      double double4 = FastMath.log1p(1223.9149052322);
      double double5 = FastMath.toDegrees(4050.4);
      double double6 = FastMath.nextUp((-1.0));
      double double7 = FastMath.max(1.469202784563602, (-1.0));
      double double8 = FastMath.sin(3.171357693770103);
      double double9 = FastMath.ulp((-956.18226));
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      double double0 = FastMath.ceil((-1.0));
      double double1 = FastMath.floor((-1.0));
      double double2 = FastMath.floor(1854.49);
      double double3 = FastMath.atan2(1854.0, (-2806.43866));
      long long0 = FastMath.round(1854.49);
      double double4 = FastMath.sin(1854.0);
      double double5 = FastMath.acos(1854.0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      double double0 = FastMath.sinh((-3018.0));
      double double1 = FastMath.min((-447.650822), 0.75);
      double double2 = FastMath.random();
      double double3 = FastMath.nextUp((-447.650822));
      double double4 = FastMath.pow(Double.NEGATIVE_INFINITY, 1.560070049119026);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      double double0 = FastMath.log((-692.6742));
      double double1 = FastMath.random();
      double double2 = FastMath.floor((-605.94393199));
      double double3 = FastMath.abs((-692.6742));
      double double4 = FastMath.random();
      long long0 = FastMath.min(1414L, 288L);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      long long0 = FastMath.round((-2531.0));
      double double0 = FastMath.asinh((-2531.0));
      double double1 = FastMath.exp(1.570796251296997);
      double double2 = FastMath.random();
      double double3 = FastMath.signum((-2531L));
      double double4 = FastMath.log(0.0);
      double double5 = FastMath.sqrt(1.570796251296997);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      double double0 = FastMath.rint(1.8358548930975745E-7);
      double double1 = FastMath.acosh((-2718.3702173444667));
      long long0 = FastMath.max(0L, 0L);
      double double2 = FastMath.tanh(0L);
      int int0 = FastMath.abs(0);
      double double3 = FastMath.atanh((-1.0));
      int int1 = FastMath.min(2072, 0);
      double double4 = FastMath.cbrt(0);
      double double5 = FastMath.cbrt(0.99);
      double double6 = FastMath.tan(0L);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      double double0 = FastMath.atan2(1577.79119212, 1577.79119212);
      double double1 = FastMath.cosh(1577.79119212);
      double double2 = FastMath.pow(0.008336750013465571, (-804.7618221998792));
      double double3 = FastMath.sinh(Double.POSITIVE_INFINITY);
      double double4 = FastMath.abs(0.008336750013465571);
      long long0 = FastMath.min((-302932621132653753L), (-302932621132653753L));
      double double5 = FastMath.floor(Double.POSITIVE_INFINITY);
      double double6 = FastMath.atanh(14.101419947171719);
      double double7 = FastMath.cosh((-804.7618221998792));
      double double8 = FastMath.atan2(411.921, Double.POSITIVE_INFINITY);
      double double9 = FastMath.log10((-2797.97107049327));
      long long1 = FastMath.max((-302932621132653753L), (-302932621132653753L));
      double double10 = FastMath.atan2(Double.POSITIVE_INFINITY, 4407.0);
      double double11 = FastMath.cos(Double.POSITIVE_INFINITY);
      double double12 = FastMath.pow((-1232.12740887034), (-1232.12740887034));
      double double13 = FastMath.nextUp(0.0);
      double double14 = FastMath.asinh(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      double double0 = FastMath.signum(206.07430947002);
      double double1 = FastMath.exp((-2862.1237921018915));
      double double2 = FastMath.cbrt(0.3153223395347595);
      double double3 = FastMath.log1p(2630.97987572868);
      long long0 = FastMath.round(0.008333333333333333);
      double double4 = FastMath.asin((-1.0));
      int int0 = FastMath.abs(1609956575);
      double double5 = FastMath.ulp((-2862.1237921018915));
      int int1 = FastMath.abs(1050);
      double double6 = FastMath.atanh(1.0);
      long long1 = FastMath.abs((long) 1609956575);
      double double7 = FastMath.exp((-1900.120786522994));
      double double8 = FastMath.acosh(0.6806412200823224);
      double double9 = FastMath.acosh(0.0);
      double double10 = FastMath.min(0.0, Double.NaN);
      double double11 = FastMath.acosh(1609956575);
      double double12 = FastMath.signum((-1.5707963267948966));
      double double13 = FastMath.acos(1609956575);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      int int0 = FastMath.max(2197, (-1446));
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      double double0 = FastMath.cosh(0.25534192122103627);
      int int0 = FastMath.abs(3705);
      double double1 = FastMath.tanh(1.0327772576935677);
      double double2 = FastMath.asin(3705);
      long long0 = FastMath.max((-2646L), (-2646L));
      double double3 = FastMath.atan(0.25534192122103627);
      double double4 = FastMath.log1p((-3.940510424527919E-20));
      double double5 = FastMath.asin((-1.0));
      long long1 = FastMath.round((-1.0));
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      long long0 = FastMath.abs((-1357L));
      double double0 = FastMath.cos((-18.43086276236962));
      long long1 = FastMath.min(1L, 1357L);
      double double1 = FastMath.cosh(5.261908426442558E-7);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      double double0 = FastMath.ceil(562.2160694789923);
      double double1 = FastMath.tanh((-2763.1730146));
      long long0 = FastMath.max(4499201580859392L, (-1515L));
      double double2 = FastMath.log1p((-1.0));
      double double3 = FastMath.cbrt(563.0);
      double double4 = FastMath.pow(562.2160694789923, (-2763.1730146));
      double double5 = FastMath.asinh((-1515L));
      float float0 = FastMath.abs((float) 4499201580859392L);
      double double6 = FastMath.atan2(1.2331016983979697, 5.261908426442558E-7);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      long long0 = FastMath.abs(9154082963658192752L);
      double double0 = FastMath.acosh((-1269.72399619));
      double double1 = FastMath.random();
      double double2 = FastMath.sin((-1269.72399619));
      double double3 = FastMath.cosh(8.0E298);
      double double4 = FastMath.abs(8.0E298);
      double double5 = FastMath.toDegrees(14.101419947171719);
      long long1 = FastMath.abs(785L);
      long long2 = FastMath.round((-123.69704789));
      double double6 = FastMath.atan(785L);
      int int0 = FastMath.abs((-1939));
      double double7 = FastMath.sin(8.0E298);
      int int1 = FastMath.max((-1656), (-1656));
      double double8 = FastMath.log((-1656));
      long long3 = FastMath.abs(1277L);
      float float0 = FastMath.min((float) 9154082963658192752L, (float) 9154082963658192752L);
      int int2 = FastMath.round((float) (-1656));
      double double9 = FastMath.toDegrees((-475.859));
      double double10 = FastMath.tanh((-822.0));
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      double double0 = FastMath.ceil(2.60921);
      double double1 = FastMath.atan(1.2331016983979697);
      int int0 = FastMath.min(1035090420, 646981381);
      double double2 = FastMath.log1p(3.0);
      double double3 = FastMath.sin(2.60921);
      double double4 = FastMath.sin(646981381);
      long long0 = FastMath.round((double) 646981381);
      double double5 = FastMath.nextAfter((-965.7371082806338), 646981381);
      double double6 = FastMath.log(1561.6);
      int int1 = FastMath.abs(646981381);
      double double7 = FastMath.ulp((-0.7090108526983898));
      long long1 = FastMath.min(0L, 0L);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      long long0 = FastMath.min(4095L, 1L);
      double double0 = FastMath.atanh(4095L);
      double double1 = FastMath.toDegrees(1L);
      double double2 = FastMath.atan2(4095L, 1L);
      double double3 = FastMath.nextAfter(1030.46595143814, (-1.0));
      double double4 = FastMath.atan2(1L, 1L);
      double double5 = FastMath.nextUp(1030.46595143814);
      double double6 = FastMath.atan2(1337.546249, 1.366701124672226);
      double double7 = FastMath.atanh(1030.4659514381403);
      double double8 = FastMath.tan(1.5574077246549023);
      double double9 = FastMath.ceil(4.503599627370496E15);
      double double10 = FastMath.ulp(4.503599627370496E15);
      double double11 = FastMath.pow((-1303.0), (-1185.1834399862155));
      double double12 = FastMath.rint(57.29577951308232);
      double double13 = FastMath.sinh(1L);
      long long1 = FastMath.round((-1303.0));
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      double double0 = FastMath.ceil((-1325.5630056085));
      double double1 = FastMath.tanh((-1325.5630056085));
      double double2 = FastMath.tan((-618.1891222805622));
      double double3 = FastMath.exp((-1325.5630056085));
      double double4 = FastMath.ulp(102.797193951);
      double double5 = FastMath.log1p((-1325.5630056085));
      double double6 = FastMath.sin(Double.NaN);
      double double7 = FastMath.asin(102.797193951);
      double double8 = FastMath.max(1.0, Double.NaN);
      double double9 = FastMath.cos(3.0095696738628313);
      double double10 = FastMath.nextUp(0.19454771280288696);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      double double0 = FastMath.atan((-2323.55586));
      long long0 = FastMath.max((-2183L), (-1836L));
      double double1 = FastMath.asin((-191.7857339753));
      double double2 = FastMath.toDegrees(0.5463024898437905);
      double double3 = FastMath.nextUp(0.13333332538604736);
      double double4 = FastMath.atanh(0.1333333253860474);
      double double5 = FastMath.atan(Double.POSITIVE_INFINITY);
      double double6 = FastMath.min((-191.7857339753), 0.25534192122103627);
      double double7 = FastMath.asinh((-1836L));
      double double8 = FastMath.random();
      double double9 = FastMath.atanh((-8.20849182590463));
      int int0 = FastMath.abs((-975));
      double double10 = FastMath.asin((-1836L));
      long long1 = FastMath.min((-2183L), 0L);
      double double11 = FastMath.log10(3.4620039155736807E-7);
      double double12 = FastMath.log10(1.139493927324549);
      long long2 = FastMath.abs((-3958705157555305932L));
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      double double0 = FastMath.acos(14.136832902969902);
      float float0 = FastMath.max((-2374.95F), (-2374.95F));
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      double double0 = FastMath.ulp(1219.0);
      double double1 = FastMath.signum(1.0);
      float float0 = FastMath.min(0.0F, 1805.0F);
      double double2 = FastMath.log10(1.0);
      double double3 = FastMath.atanh(1219.0);
      double double4 = FastMath.tanh((-1275.19096));
      double double5 = FastMath.asinh(0.0);
      double double6 = FastMath.rint(994.11);
      float float1 = FastMath.abs(4930.1F);
      double double7 = FastMath.atan2(591.4, (-1.0));
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      double double0 = FastMath.log10((-333.661));
      double double1 = FastMath.random();
      float float0 = FastMath.min((-3936.2234F), (-3936.2234F));
      double double2 = FastMath.max((double) (-3936.2234F), (-333.661));
      double double3 = FastMath.expm1((-3936.2234F));
      double double4 = FastMath.nextAfter(2.639144044101463E-7, (-1.0));
      double double5 = FastMath.ceil(2.6391440441014624E-7);
      long long0 = FastMath.round((-333.661));
      double double6 = FastMath.sqrt((-1.0));
      double double7 = FastMath.expm1((-3936.2234F));
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      double double0 = FastMath.signum(2.639144044101463E-7);
      long long0 = FastMath.min(506L, 2351L);
      double double1 = FastMath.ulp((-4261.22343757));
      int int0 = FastMath.max((-3672), (-3672));
      double double2 = FastMath.exp(1.0);
      double double3 = FastMath.rint(0.25534192122103627);
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      double double0 = FastMath.cbrt(0.07073719799518585);
      double double1 = FastMath.tan(0.4135702441314172);
      float float0 = FastMath.abs((-1196.595F));
      int int0 = FastMath.round((-1196.595F));
      double double2 = FastMath.min(0.07073719799518585, (double) (-1196.595F));
      double double3 = FastMath.floor(0.07073719799518585);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      double double0 = FastMath.nextAfter(8.0E298, 8.0E298);
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      int int0 = FastMath.min(1610481632, 1121);
      double double0 = FastMath.asinh(0.0);
      double double1 = FastMath.tanh(1610481632);
      double double2 = FastMath.atan2(1.0, 1.0);
      double double3 = FastMath.cosh(0.7853981633974483);
      int int1 = FastMath.min(1840700269, 2144505168);
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      double double0 = FastMath.atanh((-1666.76454926));
      double double1 = FastMath.log(4239.55769877);
      double double2 = FastMath.abs((-1.0));
      double double3 = FastMath.tanh((-1.0));
      double double4 = FastMath.tanh(8.0E298);
      double double5 = FastMath.tanh((-0.7615941559557649));
      double double6 = FastMath.tan(1.0);
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      long long0 = FastMath.round((-1.0));
      double double0 = FastMath.cosh((-1.0));
      int int0 = FastMath.abs(4);
      float float0 = FastMath.min(1971.6869F, (float) 4);
      double double1 = FastMath.cosh(1971.6869F);
      double double2 = FastMath.atan2((-3904.3207), 1.5430806348152437);
      double double3 = FastMath.toRadians(4);
      long long1 = FastMath.round((-1.5704011029715894));
      long long2 = FastMath.min((-2L), 0L);
      double double4 = FastMath.min((double) 4.0F, 1.197421629234348);
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      double double0 = FastMath.sinh(0.7316888570785522);
      double double1 = FastMath.cosh(1254.47743);
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      double double0 = FastMath.abs((-1.0));
      double double1 = FastMath.rint((-1.0));
      double double2 = FastMath.atanh(1.0);
      float float0 = FastMath.min(3491.5574F, 3491.5574F);
      double double3 = FastMath.abs(1.0);
      double double4 = FastMath.nextAfter((-1.0), 2.6365310530323782E-6);
      double double5 = FastMath.log10(0.008333333333333333);
      double double6 = FastMath.toRadians(0.7214844409909045);
      double double7 = FastMath.atanh(0.008333333333333333);
      double double8 = FastMath.min(5.140127377170679, (-2428.950809505991));
      double double9 = FastMath.pow(0.7214844409909045, (-1171.4209595931811));
      double double10 = FastMath.ceil((-2.0791812460476247));
      double double11 = FastMath.cosh(10.0);
      double double12 = FastMath.exp((-1861.1));
      double double13 = FastMath.toRadians(3491.5574F);
      int int0 = FastMath.abs(1);
      double double14 = FastMath.cosh(1.0);
      long long0 = FastMath.max(1923L, 2008L);
      double double15 = FastMath.tanh(1923L);
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      double double0 = FastMath.atan((-3462.672762517));
      double double1 = FastMath.exp((-1.5705075325481448));
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      double double0 = FastMath.tanh(0.07842259109020233);
      double double1 = FastMath.rint(796.656761594);
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      double double0 = FastMath.tanh((-445.050318));
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      double double0 = FastMath.signum(1.139493927324549);
      double double1 = FastMath.log(1.0);
      long long0 = FastMath.abs(0L);
      int int0 = FastMath.round(1.0F);
      double double2 = FastMath.ceil(0.0);
      double double3 = FastMath.random();
      double double4 = FastMath.abs((double) 1);
      double double5 = FastMath.log10(1);
      double double6 = FastMath.pow(0.2222222089767456, 0.0);
      long long1 = FastMath.round((double) 1);
      float float0 = FastMath.min((-999.32556F), (float) 0L);
      float float1 = FastMath.max(3540.0F, (float) 0L);
      double double7 = FastMath.atan2(0.0, (-1.0));
      double double8 = FastMath.sin(1.139493927324549);
      double double9 = FastMath.tan(0.0);
      double double10 = FastMath.cosh((-4612.44372));
      double double11 = FastMath.min(0.0, (double) 3540.0F);
      long long2 = FastMath.min(0L, (-858L));
      double double12 = FastMath.sin(614.65);
      double double13 = FastMath.sinh(0.06666666666666667);
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      double double0 = FastMath.sqrt(9.0);
      double double1 = FastMath.sqrt(3.0);
      long long0 = FastMath.max(268L, 4503599627370496L);
      double double2 = FastMath.tanh(3.0);
      double double3 = FastMath.ceil(542.378);
      double double4 = FastMath.log(1.0);
      double double5 = FastMath.ceil(542.378);
      double double6 = FastMath.cos(0.0);
      double double7 = FastMath.tan((-3187.0));
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      float float0 = FastMath.min(287.24F, 287.24F);
      double double0 = FastMath.atanh((-161.722));
      double double1 = FastMath.cosh((-161.722));
      double double2 = FastMath.nextAfter((-161.722), 287.24F);
      double double3 = FastMath.random();
      double double4 = FastMath.toRadians((-0.05417713522911072));
      double double5 = FastMath.cos((-0.05417713522911072));
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      double double0 = FastMath.log((-1198.4066360555767));
      int int0 = FastMath.abs(5);
      double double1 = FastMath.floor(5);
      double double2 = FastMath.nextUp(5);
      int int1 = FastMath.abs(5);
      long long0 = FastMath.abs((long) 5);
      double double3 = FastMath.abs(2507.9);
      double double4 = FastMath.acos(5.000000000000001);
      double double5 = FastMath.log(2055.17443);
      double double6 = FastMath.sinh((-1198.4066360555767));
      double double7 = FastMath.pow((-1.0), (-3475.6480536005));
      double double8 = FastMath.cosh(0.008336750013465571);
      long long1 = FastMath.min(5L, (-1465L));
      double double9 = FastMath.sin(0.14285714285714285);
      double double10 = FastMath.signum(0.4342944622039795);
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      long long0 = FastMath.max(0L, 0L);
      double double0 = FastMath.max(3247.67, 3247.67);
      double double1 = FastMath.random();
      double double2 = FastMath.max(9.313225746154785E-10, (-1470.820139));
      double double3 = FastMath.acos((-1470.820139));
      double double4 = FastMath.toRadians(8.0);
      double double5 = FastMath.log1p(0.0);
      double double6 = FastMath.cosh(3.0095696738628313);
      double double7 = FastMath.atanh(568.92211187753);
      double double8 = FastMath.signum((-2266.39571941));
      long long1 = FastMath.abs((-2220L));
      double double9 = FastMath.sinh(5.041915256481364);
      double double10 = FastMath.sqrt((-4.469603409122654E-6));
      double double11 = FastMath.ceil(40.19140625);
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      double double0 = FastMath.sinh(882.51981849);
      double double1 = FastMath.toDegrees(882.51981849);
      double double2 = FastMath.acos(Double.POSITIVE_INFINITY);
      double double3 = FastMath.acosh((-135.7));
      double double4 = FastMath.expm1(33.4);
      double double5 = FastMath.ceil(802.749645732);
      double double6 = FastMath.atan2(33.4, 882.51981849);
      double double7 = FastMath.log(803.0);
      double double8 = FastMath.log1p(882.51981849);
      double double9 = FastMath.log1p(934.5263415008367);
      int int0 = FastMath.round((-2256.64F));
      int int1 = FastMath.abs((-2257));
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      long long0 = FastMath.max(0L, 0L);
      double double0 = FastMath.abs((double) 0L);
      double double1 = FastMath.atanh((-1.0));
      double double2 = FastMath.acos((-1.0));
      float float0 = FastMath.abs((float) 0L);
      double double3 = FastMath.asin(0.0F);
      long long1 = FastMath.abs(0L);
      double double4 = FastMath.acosh(0.3153223395347595);
      double double5 = FastMath.acos(0.0F);
      double double6 = FastMath.tan(0.0);
      long long2 = FastMath.max(4577762542105553359L, 0L);
      double double7 = FastMath.atan2((-1.0), (-2062.936751698098));
      double double8 = FastMath.log10(0.4311765432357788);
      long long3 = FastMath.min(0L, 1L);
      double double9 = FastMath.exp((-801.08351723));
      double double10 = FastMath.log10(3.141592653589793);
      double double11 = FastMath.ceil(0L);
  }

  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      long long0 = FastMath.min((-1030L), (-1030L));
      double double0 = FastMath.nextUp(843.22);
      double double1 = FastMath.random();
      double double2 = FastMath.sin(0.0);
      double double3 = FastMath.nextAfter(843.22, 0.0);
      double double4 = FastMath.acosh(843.2199999999999);
      long long1 = FastMath.round((-582.0899755));
      double double5 = FastMath.signum((-1030L));
      double double6 = FastMath.abs((double) (-1030L));
      double double7 = FastMath.max((-1966.329174), 6.951502372232782E-7);
      double double8 = FastMath.nextAfter((-1030L), Double.NEGATIVE_INFINITY);
      float float0 = FastMath.max(Float.NaN, (-1.0F));
      double double9 = FastMath.tanh(843.2200000000001);
      double double10 = FastMath.acosh(3734.42344189);
      double double11 = FastMath.sqrt((-1030.0000000000002));
      double double12 = FastMath.log1p(1.197421629234348);
      long long2 = FastMath.min((-582L), (-1030L));
      double double13 = FastMath.sinh(3.410491133089812E-7);
      double double14 = FastMath.atanh(1.5574077246549023);
      double double15 = FastMath.sinh((-1985.685628785));
      int int0 = FastMath.abs(20);
  }

  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      int int0 = FastMath.min(315, 315);
      double double0 = FastMath.toRadians((-818.76));
      double double1 = FastMath.min((-14.290057783628773), (double) 315);
      float float0 = FastMath.max((float) 315, (float) 315);
      double double2 = FastMath.toRadians((-818.76));
      double double3 = FastMath.toDegrees(315);
      int int1 = FastMath.min(0, (-886));
      double double4 = FastMath.pow(1466.39259, 315.0F);
      double double5 = FastMath.asinh(0.19999999999923582);
      double double6 = FastMath.atanh(0);
      double double7 = FastMath.asin(315);
      double double8 = FastMath.ceil(1732.2);
      int int2 = FastMath.min(2, 2);
      double double9 = FastMath.random();
      double double10 = FastMath.min((-818.76), 1.4456468917292502E-16);
      int int3 = FastMath.round((-406.528F));
      double double11 = FastMath.cbrt(351.4);
      double double12 = FastMath.tanh(18048.17054662093);
      int int4 = FastMath.round((float) 2);
      double double13 = FastMath.abs((-818.76));
      float float1 = FastMath.max((-2701.7183F), (float) 0);
      double double14 = FastMath.min((double) 315, (double) 315);
      double double15 = FastMath.max((double) (-2701.7183F), 1.125);
  }

  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      long long0 = FastMath.round((-66.77));
      double double0 = FastMath.expm1((-1893.5211210083583));
      double double1 = FastMath.acos((-1893.5211210083583));
      double double2 = FastMath.tanh(0.9305076599121094);
      double double3 = FastMath.toDegrees(0.0);
      double double4 = FastMath.toRadians(778.7845493);
      int int0 = FastMath.abs(0);
      float float0 = FastMath.abs(1687.7F);
      long long1 = FastMath.round((-2034.84355205));
      double double5 = FastMath.log((-66.77));
      double double6 = FastMath.nextAfter((-1.0), Double.NaN);
      double double7 = FastMath.random();
      double double8 = FastMath.min(0.7308304959022693, 0.0);
      double double9 = FastMath.sqrt((-67L));
      double double10 = FastMath.exp(13.592354548945101);
      double double11 = FastMath.ceil(0.0);
      double double12 = FastMath.ulp(4505.0);
      long long2 = FastMath.round(0.0);
      double double13 = FastMath.floor(9.094947017729282E-13);
      int int1 = FastMath.min(4242, 0);
      double double14 = FastMath.rint(1.074682223392077);
      double double15 = FastMath.asin(0);
      double double16 = FastMath.sqrt((-1893.5211210083583));
      double double17 = FastMath.expm1(0.39362657592563277);
  }

  @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      long long0 = FastMath.round(5.261908426442558E-7);
      double double0 = FastMath.tan(13.0);
      double double1 = FastMath.acos(5.261908426442558E-7);
      double double2 = FastMath.tanh(13.0);
      double double3 = FastMath.signum(2.8);
      double double4 = FastMath.atanh(0L);
      double double5 = FastMath.sin(13.0);
      double double6 = FastMath.log1p((-3372.133));
      double double7 = FastMath.atan2(1.8508157176809257, 3650.0);
      double double8 = FastMath.abs((-983.61457));
      double double9 = FastMath.atan2(0.4630211329364896, 5.041915256481364);
      double double10 = FastMath.abs(978.87);
      float float0 = FastMath.max((float) 0L, (-383.19F));
      double double11 = FastMath.expm1((-3975.46400046275));
      double double12 = FastMath.max(481.061, (-3975.46400046275));
  }

  @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      double double0 = FastMath.cos(1347.172);
      int int0 = FastMath.max(1840700269, 1840700269);
      double double1 = FastMath.signum(0.1428571343421936);
      double double2 = FastMath.cbrt((-3297.642544953379));
      double double3 = FastMath.log1p(1840700269);
      double double4 = FastMath.pow(1.0, 1.0);
      double double5 = FastMath.ulp(3.001117512531765E-7);
      double double6 = FastMath.cbrt(1.0);
      double double7 = FastMath.atan2((-72.0), 1.0);
      double double8 = FastMath.max(0.1428571343421936, (double) 1840700269);
      double double9 = FastMath.toDegrees(7.0);
      double double10 = FastMath.cos(2180.462207385);
      int int1 = FastMath.abs(1840700269);
      double double11 = FastMath.toDegrees((-3297.642544953379));
      int int2 = FastMath.min((-1402), 1840700269);
      double double12 = FastMath.nextAfter((-1474.1), 5.293955920339377E-23);
      float float0 = FastMath.min((float) 1840700269, 122.75F);
      double double13 = FastMath.sinh(1.074682223392077);
      int int3 = FastMath.round((float) 1840700269);
  }

  @Test(timeout = 4000)
  public void test98()  throws Throwable  {
      double double0 = FastMath.asinh((-439.514));
      int int0 = FastMath.max(13, 13);
      double double1 = FastMath.sin((-6.778818045734997));
      double double2 = FastMath.min(573.59972876, (-6.778818045734997));
  }
}
