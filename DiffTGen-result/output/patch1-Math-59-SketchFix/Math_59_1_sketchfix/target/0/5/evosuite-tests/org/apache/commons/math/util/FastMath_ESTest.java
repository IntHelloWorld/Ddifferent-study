/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 29 09:37:34 GMT 2020
 */

package org.apache.commons.math.util;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.math.util.FastMath;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FastMath_ESTest extends FastMath_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      double double0 = FastMath.max(622.01861619, 3626.6092);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      long long0 = FastMath.max((-1L), (long) 0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      double double0 = FastMath.min(50.8107, 50.8107);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      int int0 = FastMath.min(21, 708);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      double double0 = FastMath.ceil((-1310.0608780997002));
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      double double0 = FastMath.nextAfter((-1310.0608780997), (-1310.0608780997));
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      double double0 = FastMath.ulp(2214.0000000000005);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      double double0 = FastMath.cos(1.5707963267948966);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      double double0 = FastMath.sin(1.5707963267948966);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      double double0 = FastMath.expm1((-1.0));
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      double double0 = FastMath.cosh(14.101419947171719);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      double double0 = FastMath.toRadians(0.0F);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      double double0 = FastMath.toRadians((-2660.885253886));
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      double double0 = FastMath.toDegrees(0L);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      double double0 = FastMath.toDegrees(1.5696851898441464);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      double double0 = FastMath.sqrt(0.0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      int int0 = FastMath.round(0.0F);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      int int0 = FastMath.round(177.8F);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      long long0 = FastMath.round(0.4311765432357788);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      long long0 = FastMath.round(1.0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      long long0 = FastMath.min(4607182418800017408L, 4607182418800017408L);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      long long0 = FastMath.min((-1L), 2047L);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      int int0 = FastMath.min(17, 0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      int int0 = FastMath.min(863, 863);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      float float0 = FastMath.min(61.2F, 0.0F);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      float float0 = FastMath.min(422.1372F, 422.1372F);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      double double0 = FastMath.min(0.6931471805599453, 2.0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      long long0 = FastMath.max(37L, 37L);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      int int0 = FastMath.max(0, 0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      int int0 = FastMath.max((-1), (-1));
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      float float0 = FastMath.max((float) (-1082L), (-365.57016F));
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      double double0 = FastMath.max(0.0, (-2947.350297617));
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      double double0 = FastMath.log1p(0.0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      double double0 = FastMath.log10(0.7316888570785522);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      double double0 = FastMath.log(1.560070049119026);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      double double0 = FastMath.ceil((-1.0));
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      double double0 = FastMath.cbrt(0.7853981633974483);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      double double0 = FastMath.atanh(0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      double double0 = FastMath.atan(0.0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      double double0 = FastMath.asinh(0L);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      double double0 = FastMath.asin(0.0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      double double0 = FastMath.acosh(1.0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      double double0 = FastMath.acosh(2419.785633625831);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      long long0 = FastMath.abs(0L);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      int int0 = FastMath.abs(0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      float float0 = FastMath.abs(0.0F);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      double double0 = FastMath.abs(0.0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      double double0 = FastMath.floor(0.0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      double double0 = FastMath.floor((-2513.1335615218));
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      double double0 = FastMath.floor(2.092571276372179);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      double double0 = FastMath.floor(Double.NEGATIVE_INFINITY);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      double double0 = FastMath.nextAfter(349.7755, 0.7214844409909045);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      double double0 = FastMath.nextAfter(0.8109631538391113, 1265.71229987687);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      double double0 = FastMath.abs((-663.1825719413546));
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      double double0 = FastMath.max(1006.01, Double.NaN);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      double double0 = FastMath.max((-3268.4226), (-3268.4226));
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      float float0 = FastMath.max(0.0F, Float.NaN);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      float float0 = FastMath.max((float) 2214, (float) 2214);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      float float0 = FastMath.max(0.0F, (-1902.0575F));
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      long long0 = FastMath.max((-1309L), (-2881L));
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      int int0 = FastMath.max(0, 2129735849);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      int int0 = FastMath.max(646981381, 0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      double double0 = FastMath.min(181.306564, (-289.0));
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      double double0 = FastMath.min(0.0, (double) 4503599627370496L);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      double double0 = FastMath.min(3.410491133089812E-7, Double.NaN);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      float float0 = FastMath.min((-1902.0575F), 2647.0F);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      long long0 = FastMath.min(0L, 0L);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      long long0 = FastMath.min(2922L, 0L);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      int int0 = FastMath.min((-1195), (-1195));
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      double double0 = FastMath.rint((-0.49999999999999994));
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      double double0 = FastMath.rint(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      double double0 = FastMath.ceil(6.951502372232782E-7);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      double double0 = FastMath.ceil(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      double double0 = FastMath.ceil(0L);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      double double0 = FastMath.floor((-1.0));
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      double double0 = FastMath.rint(1035.75083534893);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      double double0 = FastMath.rint((-8.0E298));
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      double double0 = FastMath.floor(Double.POSITIVE_INFINITY);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      double double0 = FastMath.floor(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      double double0 = FastMath.nextAfter((-4.503599627370496E15), Double.NaN);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      double double0 = FastMath.nextUp(3.410491133089812E-7);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      double double0 = FastMath.nextAfter(0.0, 1.0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      double double0 = FastMath.nextAfter(0.0, (-601.6268398));
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      double double0 = FastMath.nextAfter(Double.NEGATIVE_INFINITY, 2010L);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      double double0 = FastMath.nextAfter(Double.NaN, (-473.570422044));
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      float float0 = FastMath.abs((-720.947F));
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      float float0 = FastMath.abs(1203.562F);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      long long0 = FastMath.abs((-689L));
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      long long0 = FastMath.abs(114L);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      int int0 = FastMath.abs((-1903));
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      int int0 = FastMath.abs(2129735849);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      double double0 = FastMath.cbrt(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      double double0 = FastMath.cbrt(0.0F);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      double double0 = FastMath.cbrt((-132.09152623177));
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      double double0 = FastMath.acos((-4.469603409122654E-6));
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      double double0 = FastMath.acos(0.030589580535888672);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      double double0 = FastMath.acos(1.0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      double double0 = FastMath.acos((-1.0));
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      double double0 = FastMath.acos((-2359.9116986));
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      double double0 = FastMath.acos(2477.748718463995);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      double double0 = FastMath.acos(0.0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      double double0 = FastMath.asin((-1.0));
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      double double0 = FastMath.asin(1.0F);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      double double0 = FastMath.asin((-473.570422044));
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      double double0 = FastMath.asin((-0.06101805471463785));
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      double double0 = FastMath.asin(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      double double0 = FastMath.asin(1.5698308439247388);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      double double0 = FastMath.atan2((-7.44321345601866E-11), 1035.75083534893);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      double double0 = FastMath.atan2(178.0, 0.0F);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      double double0 = FastMath.atan2((-580.7), 0.0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      double double0 = FastMath.atan2(2129735849L, Double.NEGATIVE_INFINITY);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      double double0 = FastMath.atan2(Double.NEGATIVE_INFINITY, 2089.1);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      double double0 = FastMath.atan2(0.0, 3.0095696738628313);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      double double0 = FastMath.atan2(0.0F, (-1.0));
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      double double0 = FastMath.atan2(Double.NaN, 530.44);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      double double0 = FastMath.atan2((-539.5), (-539.5));
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      double double0 = FastMath.atan(8.0E298);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      double double0 = FastMath.atan((-2427.4637076959993));
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      double double0 = FastMath.tan(1.560070049119026);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      double double0 = FastMath.tan(Double.NEGATIVE_INFINITY);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      double double0 = FastMath.tan(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      double double0 = FastMath.tan(-0.0);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      double double0 = FastMath.tan(0.0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      double double0 = FastMath.cos(61.2F);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      double double0 = FastMath.cos(3.141592653589793);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      double double0 = FastMath.cos(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      double double0 = FastMath.cos((-289.0));
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      double double0 = FastMath.sin(689L);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      double double0 = FastMath.sin(799.556);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      double double0 = FastMath.sin(Double.POSITIVE_INFINITY);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      double double0 = FastMath.sin(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      double double0 = FastMath.sin(0.0);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      double double0 = FastMath.sin((-2427.463707696));
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      double double0 = FastMath.tan(2129735849);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      double double0 = FastMath.tan(1.366701124672226);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      double double0 = FastMath.tan((-608.486111664));
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      double double0 = FastMath.tan(111);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      double double0 = FastMath.sin(2.3841857910019882E-8);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      double double0 = FastMath.pow(2147477730, Double.NaN);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      double double0 = FastMath.pow((-1021.013), 2129735849);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      double double0 = FastMath.pow((-7.44321345601866E-11), Double.NaN);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      double double0 = FastMath.pow(1765.1479028397, Double.POSITIVE_INFINITY);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      double double0 = FastMath.pow((-0.8366886589042641), Double.POSITIVE_INFINITY);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      double double0 = FastMath.pow(0.0, 1);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      double double0 = FastMath.pow(Double.NaN, (-2154.3966));
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      double double0 = FastMath.pow(1.7203486651303583, 0.0F);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      double double0 = FastMath.log1p(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      double double0 = FastMath.log1p(Double.POSITIVE_INFINITY);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      double double0 = FastMath.log1p(356);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      double double0 = FastMath.log1p((-1.0));
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      double double0 = FastMath.log10(1.0);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      double double0 = FastMath.log(1.0);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      double double0 = FastMath.asinh(0.7316888570785522);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      double double0 = FastMath.log1p((-0.09088450866185192));
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      double double0 = FastMath.log(0.0F);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      double double0 = FastMath.log10(0.0);
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      double double0 = FastMath.log10(Double.POSITIVE_INFINITY);
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      double double0 = FastMath.log1p((-1822.1));
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      double double0 = FastMath.log((-356));
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      double double0 = FastMath.expm1((-0.16624882440418567));
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      double double0 = FastMath.expm1(0.0);
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      double double0 = FastMath.expm1(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      double double0 = FastMath.pow(911.21353, 0.7853981633974483);
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      double double0 = FastMath.expm1(1017.1);
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      double double0 = FastMath.expm1((-3730.723511981626));
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      double double0 = FastMath.exp((-1));
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      double double0 = FastMath.exp((-2620.012038852488));
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      double double0 = FastMath.signum(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      double double0 = FastMath.signum(0.0);
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      double double0 = FastMath.signum((-2620.012038852488));
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      double double0 = FastMath.signum(333.1);
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      double double0 = FastMath.atanh(0.0174532925199433);
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      double double0 = FastMath.atanh(0.041666666666666664);
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      double double0 = FastMath.atanh((-1.0));
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      double double0 = FastMath.asinh(0.0174532925199433);
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      double double0 = FastMath.asinh(0.1111111111111111);
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      double double0 = FastMath.asinh((-1.0));
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      double double0 = FastMath.tanh(0.9996482558795381);
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      double double0 = FastMath.tanh(0L);
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      double double0 = FastMath.tanh((-4447.678955772));
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      double double0 = FastMath.tanh((-7.44321345601866E-11));
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      double double0 = FastMath.tanh(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      double double0 = FastMath.tanh(1203.562F);
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      double double0 = FastMath.sinh((-0.1666666567325592));
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      double double0 = FastMath.sinh(0.0);
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      double double0 = FastMath.sinh(0.25534192122103627);
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      double double0 = FastMath.sinh((-371.1702));
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      double double0 = FastMath.sinh(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      double double0 = FastMath.cosh((-1.0));
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      double double0 = FastMath.cosh((-608.486111664));
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      double double0 = FastMath.cosh(0.0);
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      double double0 = FastMath.cosh(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      double double0 = FastMath.cosh(8.0E298);
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      double double0 = FastMath.nextUp((-2427.463707696));
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      double double0 = FastMath.acosh(0L);
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      double double0 = FastMath.sinh(1503.816669);
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      double double0 = FastMath.log10(1503.816669);
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      double double0 = FastMath.random();
      double double1 = FastMath.random();
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      int int0 = FastMath.round((-2698.9253F));
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      long long0 = FastMath.round((-601.6268398));
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      double double0 = FastMath.cos(0.0);
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      double double0 = FastMath.expm1(1.0);
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      double double0 = FastMath.toDegrees((-2513.1335615218));
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      double double0 = FastMath.toRadians(2.644044871126298);
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      double double0 = FastMath.sqrt(111);
  }
}
