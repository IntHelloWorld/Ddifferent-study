* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.math.linear.EigenDecompositionImpl
* Starting client
* Connecting to master process on port 7854
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/patch6-Math-80-CapGen-plausible/Math_80_6-plausible_capgen/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math.linear.EigenDecompositionImpl
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 851
  - Branch 428
  - Exception 0
  - MutationFactory 212
  - Output 28
  - Method 17
  - MethodNoException 17
  - CBranchFitnessFactory 428
* Using seed 1585410430785
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%][Progress:=>                            6%] [Cov:>                                  0%][Progress:=>                            6%] [Cov:>                                  1%][Progress:=>                            6%] [Cov:====>                              13%][Progress:==>                           8%] [Cov:>                                  0%][Progress:==>                           8%] [Cov:>                                  1%][Progress:==>                           8%] [Cov:====>                              13%][Progress:===>                          10%] [Cov:>                                  0%][Progress:===>                          10%] [Cov:>                                  1%][Progress:===>                          10%] [Cov:====>                              13%][Progress:===>                          10%] [Cov:====>                              14%][Progress:===>                          13%] [Cov:>                                  0%][Progress:===>                          13%] [Cov:>                                  1%][Progress:===>                          13%] [Cov:====>                              13%][Progress:====>                         15%] [Cov:====>                              12%][Progress:====>                         15%] [Cov:====>                              13%][Progress:=====>                        18%] [Cov:>                                  0%][Progress:=====>                        18%] [Cov:>                                  1%][Progress:=====>                        18%] [Cov:====>                              13%][Progress:======>                       20%] [Cov:====>                              13%][Progress:======>                       20%] [Cov:====>                              14%][Progress:======>                       21%] [Cov:>                                  0%][Progress:======>                       21%] [Cov:>                                  1%][Progress:======>                       21%] [Cov:====>                              13%][Progress:======>                       21%] [Cov:====>                              14%][Progress:======>                       21%] [Cov:=====>                             15%][Progress:======>                       21%] [Cov:=====>                             17%][Progress:======>                       21%] [Cov:======>                            18%][Progress:======>                       21%] [Cov:======>                            19%][Progress:======>                       23%] [Cov:>                                  0%][Progress:======>                       23%] [Cov:>                                  1%][Progress:======>                       23%] [Cov:====>                              13%][Progress:======>                       23%] [Cov:====>                              14%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:====>                              12%][Progress:=======>                      25%] [Cov:========>                          25%][Progress:=======>                      25%] [Cov:===========>                       32%][Progress:=======>                      25%] [Cov:===========>                       33%][Progress:=======>                      25%] [Cov:=============>                     38%][Progress:=======>                      25%] [Cov:==============>                    42%][Progress:=======>                      25%] [Cov:================>                  46%][Progress:=======>                      26%] [Cov:>                                  0%][Progress:=======>                      26%] [Cov:>                                  1%][Progress:=======>                      26%] [Cov:====>                              13%][Progress:=======>                      26%] [Cov:====>                              14%][Progress:========>                     28%] [Cov:>                                  0%][Progress:========>                     28%] [Cov:>                                  1%][Progress:========>                     28%] [Cov:====>                              13%][Progress:========>                     28%] [Cov:====>                              14%][Progress:=========>                    30%] [Cov:>                                  0%][Progress:=========>                    30%] [Cov:>                                  1%][Progress:=========>                    30%] [Cov:====>                              13%][Progress:=========>                    30%] [Cov:====>                              14%][Progress:=========>                    30%] [Cov:================>                  46%][Progress:=========>                    31%] [Cov:====>                              13%][Progress:=========>                    31%] [Cov:======>                            19%][Progress:=========>                    33%] [Cov:====>                              13%][Progress:=========>                    33%] [Cov:====>                              14%][Progress:==========>                   35%] [Cov:====>                              14%][Progress:==========>                   35%] [Cov:======>                            18%][Progress:==========>                   35%] [Cov:======>                            19%][Progress:==========>                   36%] [Cov:====>                              13%][Progress:==========>                   36%] [Cov:======>                            19%][Progress:==========>                   36%] [Cov:================>                  46%][Progress:===========>                  38%] [Cov:================>                  46%][Progress:============>                 40%] [Cov:================>                  48%][Progress:============>                 41%] [Cov:===============>                   43%][Progress:============>                 41%] [Cov:================>                  48%][Progress:============>                 43%] [Cov:===============>                   43%][Progress:============>                 43%] [Cov:================>                  48%][Progress:=============>                46%] [Cov:================>                  48%][Progress:==============>               48%] [Cov:===============>                   43%][Progress:==============>               48%] [Cov:================>                  48%][Progress:===============>              50%] [Cov:================>                  48%][Progress:===============>              53%] [Cov:================>                  48%][Progress:================>             55%] [Cov:===============>                   43%][Progress:================>             55%] [Cov:================>                  48%][Progress:================>             56%] [Cov:===============>                   43%][Progress:================>             56%] [Cov:================>                  48%][Progress:=================>            58%] [Cov:================>                  48%][Progress:==================>           61%] [Cov:================>                  48%][Progress:==================>           61%] [Cov:=================>                 49%][Progress:==================>           61%] [Cov:=================>                 50%][Progress:==================>           63%] [Cov:================>                  48%][Progress:==================>           63%] [Cov:=================>                 49%][Progress:==================>           63%] [Cov:=================>                 50%][Progress:==================>           63%] [Cov:=================>                 51%][Progress:===================>          65%] [Cov:===============>                   43%][Progress:===================>          65%] [Cov:================>                  48%][Progress:====================>         68%] [Cov:=================>                 51%][Progress:=====================>        70%] [Cov:=================>                 50%][Progress:=====================>        70%] [Cov:=================>                 51%][Progress:=====================>        73%] [Cov:=================>                 50%][Progress:=====================>        73%] [Cov:=================>                 51%][Progress:======================>       75%] [Cov:=================>                 50%][Progress:======================>       76%] [Cov:==================>                52%][Progress:=======================>      78%] [Cov:=================>                 51%][Progress:=======================>      78%] [Cov:==================>                52%][Progress:========================>     81%] [Cov:==================>                53%][Progress:========================>     83%] [Cov:==================>                53%][Progress:=========================>    85%] [Cov:==================>                53%][Progress:=========================>    86%] [Cov:==================>                53%][Progress:=========================>    86%] [Cov:==================>                54%][Progress:=========================>    86%] [Cov:===================>               55%][Progress:==========================>   88%] [Cov:==================>                53%][Progress:==========================>   88%] [Cov:==================>                54%][Progress:==========================>   88%] [Cov:===================>               55%][Progress:===========================>  90%] [Cov:===================>               56%][Progress:===========================>  91%] [Cov:===================>               56%][Progress:===========================>  93%] [Cov:===================>               56%][Progress:============================> 95%] [Cov:===================>               56%][Progress:============================> 96%] [Cov:===================>               56%][Progress:=============================>98%] [Cov:===================>               56%][Progress:==============================100%] [Cov:===================>               57%][Progress:==============================100%] [Cov:===================>               56%][Progress:==============================100%] [Cov:===================>               57%][Progress:==============================100%] [Cov:====================>              58%]
* Search finished after 62s and 12 generations, 8372 statements, best individual has fitness: 1366.7466113141834
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 70%
* Total number of goals: 851
* Number of covered goals: 593
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 55%
* Total number of goals: 428
* Number of covered goals: 235
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 50%
* Total number of goals: 212
* Number of covered goals: 105
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 21%
* Total number of goals: 28
* Number of covered goals: 6
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 71%
* Total number of goals: 17
* Number of covered goals: 12
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 47%
* Total number of goals: 17
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 55%
* Total number of goals: 428
* Number of covered goals: 235
* Generated 32 tests with total length 158
* Resulting test suite's coverage: 59% (average coverage for all fitness functions)
* Compiling and checking tests
* Writing JUnit test case 'EigenDecompositionImpl_ESTest' to evosuite-tests
* Done!

* Computation finished
