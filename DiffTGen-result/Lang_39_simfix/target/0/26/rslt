* EvoSuite 1.0.2
* Going to generate test cases for class: org.apache.commons.lang3.StringUtils
* Starting client
* Connecting to master process on port 15734
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/Lang_39_simfix/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.lang3.StringUtils
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 1128
  - Branch 1044
  - Exception 0
  - MutationFactory 874
  - Output 341
  - Method 143
  - MethodNoException 143
  - CBranchFitnessFactory 1044
* Using seed 1585041202353
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%][Progress:====>                         15%] [Cov:=>                                 3%][Progress:====>                         15%] [Cov:==>                                6%][Progress:====>                         15%] [Cov:======>                            18%][Progress:====>                         15%] [Cov:=======>                           21%][Progress:====>                         16%] [Cov:========>                          23%][Progress:====>                         16%] [Cov:=========>                         26%][Progress:====>                         16%] [Cov:=========>                         28%][Progress:====>                         16%] [Cov:==========>                        29%][Progress:=========>                    31%] [Cov:>                                  2%][Progress:=========>                    31%] [Cov:=>                                 4%][Progress:=========>                    31%] [Cov:=====>                             16%][Progress:=========>                    31%] [Cov:======>                            18%][Progress:=========>                    31%] [Cov:======>                            19%][Progress:=========>                    31%] [Cov:=======>                           22%][Progress:=========>                    31%] [Cov:========>                          25%][Progress:=========>                    31%] [Cov:=========>                         26%][Progress:=========>                    33%] [Cov:=>                                 3%][Progress:=========>                    33%] [Cov:==>                                6%][Progress:=========>                    33%] [Cov:======>                            18%][Progress:=========>                    33%] [Cov:=======>                           21%][Progress:=========>                    33%] [Cov:=======>                           22%][Progress:=========>                    33%] [Cov:========>                          24%][Progress:=========>                    33%] [Cov:========>                          25%][Progress:===========>                  38%] [Cov:>                                  2%][Progress:============>                 41%] [Cov:=>                                 4%][Progress:============>                 41%] [Cov:=====>                             17%][Progress:============>                 41%] [Cov:======>                            19%][Progress:============>                 41%] [Cov:=======>                           20%][Progress:============>                 41%] [Cov:=======>                           22%][Progress:============>                 41%] [Cov:========>                          24%][Progress:============>                 41%] [Cov:========>                          25%][Progress:===============>              51%] [Cov:>                                  1%][Progress:================>             55%] [Cov:>                                  2%][Progress:================>             55%] [Cov:=====>                             15%][Progress:================>             55%] [Cov:=====>                             16%][Progress:================>             55%] [Cov:=====>                             17%][Progress:================>             55%] [Cov:======>                            18%][Progress:================>             55%] [Cov:=======>                           21%][Progress:================>             55%] [Cov:========>                          23%][Progress:================>             55%] [Cov:========>                          24%][Progress:================>             56%] [Cov:>                                  2%][Progress:================>             56%] [Cov:=>                                 4%][Progress:================>             56%] [Cov:=====>                             16%][Progress:================>             56%] [Cov:=====>                             17%][Progress:================>             56%] [Cov:======>                            19%][Progress:================>             56%] [Cov:=======>                           22%][Progress:================>             56%] [Cov:========>                          24%][Progress:================>             56%] [Cov:========>                          25%][Progress:=================>            58%] [Cov:>                                  2%][Progress:=================>            58%] [Cov:=>                                 3%][Progress:=================>            58%] [Cov:=====>                             16%][Progress:=================>            58%] [Cov:=====>                             17%][Progress:=================>            58%] [Cov:======>                            18%][Progress:=================>            58%] [Cov:======>                            19%][Progress:=================>            58%] [Cov:=======>                           21%][Progress:==================>           60%] [Cov:=====>                             16%][Progress:==================>           60%] [Cov:======>                            18%][Progress:==================>           60%] [Cov:======>                            19%][Progress:==================>           60%] [Cov:=======>                           21%][Progress:==================>           60%] [Cov:========>                          24%][Progress:==================>           61%] [Cov:>                                  2%][Progress:==================>           61%] [Cov:=>                                 4%][Progress:==================>           61%] [Cov:=====>                             17%][Progress:==================>           61%] [Cov:======>                            18%][Progress:==================>           61%] [Cov:=======>                           20%][Progress:==================>           61%] [Cov:========>                          23%][Progress:==================>           61%] [Cov:=========>                         26%][Progress:==================>           61%] [Cov:=========>                         27%][Progress:==================>           63%] [Cov:>                                  1%][Progress:==================>           63%] [Cov:====>                              14%][Progress:==================>           63%] [Cov:=====>                             15%][Progress:==================>           63%] [Cov:=====>                             17%][Progress:==================>           63%] [Cov:======>                            19%][Progress:==================>           63%] [Cov:=======>                           20%][Progress:==================>           63%] [Cov:=======>                           22%][Progress:==================>           63%] [Cov:========>                          25%][Progress:==================>           63%] [Cov:=========>                         28%][Progress:==================>           63%] [Cov:==========>                        29%][Progress:===================>          65%] [Cov:=>                                 3%][Progress:===================>          65%] [Cov:==>                                7%][Progress:===================>          65%] [Cov:======>                            19%][Progress:===================>          65%] [Cov:=======>                           22%][Progress:===================>          65%] [Cov:========>                          24%][Progress:===================>          65%] [Cov:=========>                         28%][Progress:===================>          65%] [Cov:===========>                       32%][Progress:===================>          65%] [Cov:===========>                       33%][Progress:===================>          66%] [Cov:>                                  2%][Progress:===================>          66%] [Cov:=>                                 5%][Progress:===================>          66%] [Cov:=====>                             17%][Progress:===================>          66%] [Cov:=======>                           20%][Progress:===================>          66%] [Cov:=======>                           21%][Progress:===================>          66%] [Cov:========>                          23%][Progress:===================>          66%] [Cov:========>                          25%][Progress:===================>          66%] [Cov:=========>                         26%][Progress:====================>         68%] [Cov:>                                  1%][Progress:====================>         68%] [Cov:>                                  2%][Progress:====================>         68%] [Cov:=====>                             15%][Progress:====================>         68%] [Cov:=====>                             16%][Progress:====================>         68%] [Cov:======>                            18%][Progress:====================>         68%] [Cov:=======>                           20%][Progress:=====================>        70%] [Cov:=>                                 3%][Progress:=====================>        70%] [Cov:==>                                6%][Progress:=====================>        70%] [Cov:======>                            19%][Progress:=====================>        70%] [Cov:=======>                           22%][Progress:=====================>        70%] [Cov:========>                          23%][Progress:=====================>        70%] [Cov:=========>                         26%][Progress:=====================>        70%] [Cov:==========>                        30%][Progress:=====================>        73%] [Cov:>                                  2%][Progress:=====================>        73%] [Cov:=>                                 4%][Progress:=====================>        73%] [Cov:=====>                             17%][Progress:=====================>        73%] [Cov:======>                            19%][Progress:=====================>        73%] [Cov:=======>                           20%][Progress:=====================>        73%] [Cov:========>                          24%][Progress:=====================>        73%] [Cov:=========>                         27%][Progress:======================>       75%] [Cov:=====>                             16%][Progress:======================>       75%] [Cov:=====>                             17%][Progress:======================>       75%] [Cov:=======>                           20%][Progress:======================>       75%] [Cov:========>                          23%][Progress:======================>       75%] [Cov:========>                          24%][Progress:======================>       75%] [Cov:=========>                         27%][Progress:======================>       75%] [Cov:=========>                         28%][Progress:======================>       76%] [Cov:=>                                 5%][Progress:======================>       76%] [Cov:=====>                             17%][Progress:======================>       76%] [Cov:======>                            19%][Progress:======================>       76%] [Cov:=======>                           21%][Progress:======================>       76%] [Cov:========>                          24%][Progress:======================>       76%] [Cov:=========>                         27%][Progress:======================>       76%] [Cov:=========>                         28%][Progress:======================>       76%] [Cov:==========>                        29%][Progress:======================>       76%] [Cov:===========>                       33%][Progress:======================>       76%] [Cov:===========>                       34%][Progress:=======================>      78%] [Cov:>                                  1%][Progress:=======================>      78%] [Cov:>                                  2%][Progress:=======================>      78%] [Cov:=====>                             15%][Progress:=======================>      78%] [Cov:=====>                             16%][Progress:=======================>      78%] [Cov:======>                            18%][Progress:=======================>      78%] [Cov:======>                            19%][Progress:=======================>      78%] [Cov:=======>                           20%][Progress:========================>     80%] [Cov:>                                  1%][Progress:========================>     80%] [Cov:>                                  2%][Progress:========================>     80%] [Cov:=====>                             15%][Progress:========================>     80%] [Cov:=====>                             16%][Progress:========================>     80%] [Cov:======>                            18%][Progress:========================>     80%] [Cov:======>                            19%][Progress:========================>     80%] [Cov:===========>                       34%][Progress:========================>     81%] [Cov:======>                            19%][Progress:========================>     83%] [Cov:======>                            19%][Progress:========================>     83%] [Cov:=======>                           20%][Progress:========================>     83%] [Cov:=======>                           22%][Progress:=========================>    86%] [Cov:=======>                           20%][Progress:=========================>    86%] [Cov:=======>                           21%][Progress:=========================>    86%] [Cov:=========>                         27%][Progress:=========================>    86%] [Cov:==========>                        29%][Progress:=========================>    86%] [Cov:==========>                        30%][Progress:=========================>    86%] [Cov:===========>                       32%][Progress:==========================>   88%] [Cov:=========>                         26%][Progress:==========================>   88%] [Cov:=========>                         27%][Progress:==========================>   88%] [Cov:==========>                        29%][Progress:==========================>   88%] [Cov:==========>                        30%][Progress:===========================>  90%] [Cov:========>                          25%][Progress:===========================>  90%] [Cov:==========>                        29%][Progress:===========================>  90%] [Cov:===========>                       32%][Progress:===========================>  90%] [Cov:===========>                       33%][Progress:===========================>  90%] [Cov:===========>                       34%][Progress:===========================>  90%] [Cov:===========================>       79%][Progress:===========================>  91%] [Cov:===========================>       78%][Progress:===========================>  91%] [Cov:===========================>       79%][Progress:===========================>  93%] [Cov:==========================>        77%][Progress:===========================>  93%] [Cov:===========================>       78%][Progress:===========================>  93%] [Cov:===========================>       79%][Progress:===========================>  93%] [Cov:============================>      80%][Progress:============================> 95%] [Cov:===========================>       79%][Progress:============================> 95%] [Cov:============================>      80%][Progress:============================> 96%] [Cov:===========================>       78%][Progress:============================> 96%] [Cov:===========================>       79%][Progress:============================> 96%] [Cov:============================>      80%][Progress:============================> 96%] [Cov:============================>      80%][Progress:=============================>98%] [Cov:===========================>       79%][Progress:=============================>98%] [Cov:============================>      80%][Progress:==============================100%] [Cov:============================>      80%][Progress:==============================100%] [Cov:===========================>       78%][Progress:==============================100%] [Cov:============================>      80%][Progress:==============================100%] [Cov:============================>      80%][MASTER] 17:14:40.647 [logback-1] WARN  ResetExecutor - Stopped resetting of classes due to timeout
[MASTER] 17:14:43.276 [logback-1] WARN  TimeController - Operation 'update from archive' took too long: 5387ms
[Progress:==============================100%] [Cov:==============================>    87%]
* Search finished after 70s and 4 generations, 10231 statements, best individual has fitness: 5151.3997859324945
[MASTER] 17:14:45.152 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 8 seconds more than allowed.
* Minimizing test suite
[MASTER] 17:15:52.513 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 89%
* Total number of goals: 1128
* Number of covered goals: 1000
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 83%
* Total number of goals: 1044
* Number of covered goals: 869
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 75%
* Total number of goals: 874
* Number of covered goals: 654
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 78%
* Total number of goals: 341
* Number of covered goals: 266
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 143
* Number of covered goals: 143
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 143
* Number of covered goals: 143
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 73%
* Total number of goals: 1044
* Number of covered goals: 762
* Generated 186 tests with total length 1979
* Resulting test suite's coverage: 87% (average coverage for all fitness functions)
* Compiling and checking tests
[MASTER] 17:16:19.263 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Requested array size exceeds VM limit
[MASTER] 17:16:19.263 [logback-1] WARN  JUnitAnalyzer - Failing test: String string0 = "gx'@oL/PH&T NoOb";
String string1 = StringUtils.strip("gx'@oL/PH&T NoOb", "gx'@oL/PH&T NoOb");
String string2 = StringUtils.center("", 256, "kS");
boolean boolean0 = StringUtils.equals("", "NFD");
String string3 = "";
String string4 = StringUtils.repeat("", 256);
String string5 = StringUtils.substring("", 0, 36);
String string6 = "";
int int0 = Integer.MAX_VALUE;
String string7 = "g'AqFRP'0N4PE;z";
String string8 = StringUtils.leftPad(string6, int0, string7);
Object[] objectArray0 = new Object[2];
objectArray0[0] = (Object) string0;
objectArray0[1] = (Object) string3;
String string9 = "hu:/:@JF~+]uTLZ";
String string10 = StringUtils.join(objectArray0, string9);
int int1 = StringUtils.countMatches(string4, string9);

* Computation finished
